cmake_minimum_required (VERSION 2.8)
project (plot-cv)

include(CheckLibraryExists)
check_library_exists(json-cpp ZN4YAML6detail9node_data9reset_mapEv /usr JSON_CPP)

set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


find_package(OpenCV REQUIRED)


include_directories(
    ${OPENCV_INCLUDE_DIRS}
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/quickjs
)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")



macro(add_prog)
  set(ARGS ${ARGN})
  list(GET ARGS 0 name)
  list(REMOVE_AT ARGS 0)

  add_executable(${name} src/${name}.cpp ${ARGS})
  target_link_libraries(${name} ${OpenCV_LIBS})

  install(TARGETS ${name} DESTINATION bin )
endmacro()
set(QUICKJS_DEFS CONFIG_VERSION=\"2020-01-19\" CONFIG_BIGNUM CONFIG_CHECK_JSVALUE=1 CONFIG_LTO=1 _GNU_SOURCE CONFIG_PREFIX=\"${CMAKE_INSTALL_PREFIX}\" )
add_library(quickjs STATIC quickjs/cutils.c quickjs/libbf.c quickjs/quickjs-libc.c quickjs/libregexp.c quickjs/libunicode.c quickjs/quickjs.c quickjs/quickjs-libc.c quickjs/cutils.c)
set_target_properties(quickjs PROPERTIES COMPILE_DEFINITIONS "${QUICKJS_DEFS}" )
target_link_libraries(quickjs m dl)

add_executable(qjsc quickjs/qjsc.c)
set_target_properties(qjsc PROPERTIES COMPILE_DEFINITIONS "${QUICKJS_DEFS}" )
target_link_libraries(qjsc quickjs)

add_executable(qjs quickjs/qjs.c quickjs/repl.c quickjs/qjscalc.c)
set_target_properties(qjs PROPERTIES COMPILE_DEFINITIONS "${QUICKJS_DEFS}" )
target_link_libraries(qjs quickjs)

install(TARGETS quickjs qjsc qjs 
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  RUNTIME DESTINATION bin)

add_executable(plot-cv plot-cv.cpp)
  target_link_libraries(plot-cv ${OpenCV_LIBS} quickjs)




#target_link_libraries(video roslib rospack rosconsole roscpp roscpp_serialization)





#include("${CMAKE_SOURCE_DIR}/cm.txt")
#add_prog(CannyWebcam1)
# add_prog(findLaserPoint)

if(ADDITIONAL_PROGS)
add_prog(mouth)
add_prog(canny)
add_prog(contour)
add_prog(Contour_detection)
add_prog(contours2)
#add_prog(contours4)
add_prog(contours)
add_prog(distance)
add_prog(images polygon.cpp data.cpp)
add_prog(laser)
#7u add_prog(MusicJamboree)
add_prog(o_angle)
add_prog(code6-1)
add_prog(code6-2)
add_prog(code7-3)
add_prog(connected_components)
add_prog(findContours_demo)
add_prog(generalContours_demo1)
add_prog(generalContours_demo2)
add_prog(hull_demo)
add_prog(imageSegmentation)
add_prog(imgproc_drawContours)
add_prog(moments_demo)
add_prog(pointPolygonTest_demo)
add_prog(tracking_calibration_with_img)
add_prog(watershed)
add_prog(autofocus)
add_prog(bg_sub)
add_prog(bgsubtract2)
add_prog(calibration)
add_prog(camera_image)
add_prog(camera_opencv)
add_prog(camshift)
add_prog(cascade_detect_camera)
add_prog(circles)
add_prog(clahe)
add_prog(code10-1)
add_prog(code4-3)
add_prog(code4-4)
add_prog(code4-5)
add_prog(code5-7)
add_prog(code7-2)
add_prog(code9-2)
add_prog(computeSaliency)
add_prog(dbt_face_detection)
add_prog(detect)
add_prog(example)
add_prog(fback)
add_prog(image_sequence)
add_prog(intelperc_capture)
add_prog(live_demo)
add_prog(homography)
add_prog(meanshift)
add_prog(motempl)
add_prog(OpenCVFaceDetection)
add_prog(OpenCVWebcam)
add_prog(optical_flow)
add_prog(peopledetect)
add_prog(polar_transforms)
add_prog(projectorcalibration)
add_prog(pyrlk_optical_flow)
add_prog(seeds)
add_prog(SimpleGrab)
add_prog(slic)
add_prog(starter_video)
add_prog(targeting2)
add_prog(template)
add_prog(Threshold_inRange)
add_prog(ufacedetect)
add_prog(videocapture_basic)
add_prog(videocapture_camera)
add_prog(videocapture_gphoto2_autofocus)
add_prog(videocapture_image_sequence)
add_prog(videocapture_intelperc)
add_prog(videocapture_openni)
#add_prog(VideoCapturePeopleCounter)
add_prog(videocapture_pvapi)
add_prog(videocapture_starter)
add_prog(video-input-psnr-ssim)
add_prog(video-write)
add_prog(videowriter_basic)
add_prog(warpPerspective_demo)
add_prog(CannyDetector_Demo)
add_prog(edge)
add_prog(decompose_homography)
add_prog(perspective_correction)
add_prog(lab-contrast)
add_prog(homomorphicFilter)
add_prog(basicscanner)
add_prog(1a.Test)
add_prog(2d.Capture)
add_prog(4a.Histogram)
add_prog(4b.Equalizing)
add_prog(4c.Threshold)
add_prog(5.Motion_detect)
add_prog(6a.Select)
add_prog(6c.Select_cam)
add_prog(7.Track)
add_prog(9a.Training)
add_prog(9b.Object_detect)
#add_prog(api_example)
add_prog(application_trace)
add_prog(bgfg)
add_prog(calibrate_camera_charuco)
add_prog(calibrate_camera)
add_prog(cap_pattern)
add_prog(capsinpattern)
add_prog(code5-8)
add_prog(dense_optical_flow)
#add_prog(detect_board_charuco)
#add_prog(detect_board)
add_prog(detect_diamonds)
add_prog(dis_opticalflow)
add_prog(facemark_lbf_fitting)
add_prog(filterdemo)
#add_prog(gms_matcher)
add_prog(kinfu_demo)
add_prog(mace_webcam)
add_prog(main src/detectLines.cpp src/getExteriorContour.cpp)
add_prog(oil)
add_prog(optical_flow_dense)
#add_prog(pct_webcam)
add_prog(qrcode)
add_prog(sampleDetectLandmarksvideo)
#add_prog(text_detection)
#add_prog(tracking_by_matching)
add_prog(tutorial_introduction_to_tracker)
add_prog(videocapture_gstreamer_pipeline)
add_prog(webcam_demo)
add_prog(homography_from_camera_displacement)
add_prog(aruco_ar_demo)
target_link_libraries(tracking_calibration_with_img yaml-cpp roslib rospack roscpp )
endif(ADDITIONAL_PROGS)
