{
   "settings" : {
      "sublimegdb_commandline" : "gdb --interpreter=mi ${file}",
      "tab_size" : 2,
      "debug.configurations" : [],
      "sublimegdb_workingdir" : "${folder:${project_path:${file}}}",
      "sublimegdb_i_know_how_to_use_gdb_thank_you_very_much" : true,
      "sublimegdb_exec_cmd" : "-exec-run"
   },
   "folders" : [
      {
         "path" : ".",
         "file_exclude_patterns" : [
         "*.bz2", "*.gz", "*.txz", "*.xz", "*.zip",
            "*.tmp",
            "*.vcxproj",
            "*.scr",
             "*.json","*.xml",
            "*.filters",
            "*.tsbuildinfo",
            "*.cjs",
            "*.flow",
            "*.o",
            "*.yml",
            "*.map",
            "*.texi",
            "*.plist",
            "*.pdf",
            "*.pbxproj",
            "*.patch",
            "*.pack",
            "*.opts",
            "*.nvmrc",
            "*.md~",
            "*.m",
            "*.ls",
            "*.lib",
            "*.idx",
            "*.gitattributes",
            "*.git",
            "*.conf",
            "*.check_cache",
            "*.sample",
            "*.tsx",
            "*.storyboard",
            "*.sed",
            "*.nycrc",
            "*.marks",
            "*.gitignore",
            "*.editorconfig",
            "*.un~",
            "*.out",
            "*.hpp",
            "*.gitkeep",
            "*.DS_Store",
            "*.diff",
            "*.coffee",
            "*.BSD",
            "*.a",
            "*.internal",
            "*.includecache",
            "*.pem",
            "*.mm",
            "*.lock",
            "*.def",
            "*.bnf",
            "*.bin",
            "*.1",
            "*.png",
            "*.make",
            "*.npmignore",
            "*.priv",
            "*.eslintignore"
         ],
         "folder_exclude_patterns" : [
            ".*",
            "build",
            "inst",
            "htm",
            "*/htm/*",
            "node_modules",
            "*/node_modules/*",
            "npm",
            ".next",
            "*.next/*"
         ]
      }
   ],
   "build_systems" : [
      {
         "shell_cmd" : "(  node --experimental-modules '${file}') 2>&1",
         "name" : "Run with Node.JS"
      },
      {
         "shell_cmd" : "(. ~/.nvm/nvm.sh; nvm use 14;  set -x;  node --experimental-modules '${file}') 2>&1",
         "name" : "Run with NVM Node.JS 14.x"
      },
      {
         "shell_cmd" : ". ./cfg.sh; TYPE=Debug cfg && make -C \\$builddir",
         "working_dir" : "${project_path}",
         "name" : "Build debug"
      },
      {
         "shell_cmd" : "make .tags",
         "name" : "Rebuild CTags"
      },
      {
         "name" : "clang-format",
         "shell_cmd" : "clang-format -verbose -style=file -i `find . -name '*.c' -or -name '*.h'`",
         "working_dir" : "${project_path:${folder:${file_path}}}"
      },
      {
         "name" : "prettier",
         "working_dir" : "${project_path:${folder:${file_path}}}",
         "shell_cmd" : "yarn run format"
      },
      {
         "shell_cmd" : "(set -x; {  ARG='${file}'; NAME=\\${ARG##*/}; NAME=\\${NAME%.g4}; DIR=\\$(echo \"\\$NAME\" |  tr '[[:upper:]]' '[[:lower:]]'); DIR=\\${DIR%parser*}; DIR=\\${DIR%lexer*}; mkdir -p lib/antlr/\\$DIR; java -Xmx500M -cp '/usr/local/lib/antlr-4.8-complete.jar:$CLASSPATH' org.antlr.v4.Tool  -Dlanguage=JavaScript -lib lib/grammars -o lib/antlr/\\$DIR -visitor -Xexact-output-dir \\${ARG:-lib/grammars/C.g4}; } 0<>1 || echo failed) 2>&1",
         "working_dir" : "${project_path:${folder:${file_path}}}",
         "name" : "antlr4 - Build current .g4 file"
      },
      {
         "shell_cmd" : "WIDTH=400 bash scripts/prettier.sh '${file}'",
         "working_dir" : "${project_path:${folder:${file_path}}}",
         "name" : "prettier ${file_path}"
      }
   ]
}