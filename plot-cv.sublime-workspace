{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "MakePrompt(prefix, suffix, commandMode = false)\nGetPrompt(prompt2)\nFromDomain(buffer)\nWriteFile(filename, buffer)\nToDomain(str, alpha = false)\n  (a, s) =>\n  (a, s) =>\n  ch =>\nDNSQuery(domain)\nDNSResponse(buffer)\nCLI\n  constructor(prompt)\n  getline()\n  waitRead(file)\n  fd => (resolve, reject) =>\n  () =>\n  readLine(file)\n  run(callback)\n  printStatus(...args)\n  main(...args)\n  (a, v) =>\n  () =>\n  arg =>\n  createWS(url, callbacks, listen = 0)\n  (level, msg) =>\n  body: function*()\n  onConnect(ws, req)\n() =>\n  data =>\n  () =>\n  onClose(ws, status, reason, error)\n() =>\n  onRequest(req, resp)\n  onFd(fd, rd, wr)\n  onMessage(ws, msg, first, final)\n  onError(ws, error)\nPrintMessage(msg)\n  get connections()\n  quit(why)\nGetOpt(options = {}, args)\n  findOpt = a =>\n([optname, option]) =>\n  o =>",
			"settings":
			{
				"buffer_size": 791,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					820,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
						"symkeys":
						[
							[
								621,
								633
							],
							[
								674,
								686
							],
							[
								710,
								722
							],
							[
								1173,
								1192
							],
							[
								1480,
								1499
							],
							[
								2030,
								2043
							],
							[
								2119,
								2135
							],
							[
								2214,
								2223
							],
							[
								2503,
								2520
							],
							[
								2813,
								2842
							],
							[
								2851,
								2880
							],
							[
								3056,
								3074
							],
							[
								3108,
								3121
							],
							[
								3371,
								3384
							],
							[
								3395,
								3421
							],
							[
								3523,
								3547
							],
							[
								3630,
								3656
							],
							[
								3748,
								3772
							],
							[
								4976,
								5010
							],
							[
								5060,
								5074
							],
							[
								5226,
								5239
							],
							[
								5431,
								5445
							],
							[
								5626,
								5638
							],
							[
								5731,
								5744
							],
							[
								5786,
								5801
							],
							[
								5864,
								5880
							],
							[
								6145,
								6158
							],
							[
								7092,
								7106
							],
							[
								7209,
								7222
							],
							[
								7381,
								7395
							],
							[
								8826,
								8845
							],
							[
								8885,
								8907
							],
							[
								8947,
								8967
							],
							[
								9007,
								9026
							],
							[
								9066,
								9085
							],
							[
								9125,
								9147
							],
							[
								9187,
								9211
							],
							[
								9251,
								9274
							],
							[
								9314,
								9340
							],
							[
								9380,
								9398
							],
							[
								9431,
								9447
							],
							[
								9614,
								9632
							],
							[
								10139,
								10159
							],
							[
								10573,
								10589
							],
							[
								10763,
								10779
							],
							[
								11893,
								11906
							],
							[
								12163,
								12179
							],
							[
								12508,
								12523
							],
							[
								13097,
								13112
							],
							[
								13468,
								13485
							],
							[
								14168,
								14185
							],
							[
								14858,
								14879
							],
							[
								15024,
								15042
							],
							[
								15923,
								15940
							],
							[
								17087,
								17102
							],
							[
								17422,
								17437
							],
							[
								18222,
								18237
							],
							[
								18852,
								18869
							],
							[
								19733,
								19750
							],
							[
								24171,
								24191
							],
							[
								25962,
								25977
							],
							[
								26367,
								26385
							],
							[
								26914,
								26929
							],
							[
								27245,
								27262
							],
							[
								27864,
								27881
							],
							[
								28706,
								28721
							],
							[
								28738,
								28753
							],
							[
								28771,
								28788
							],
							[
								28845,
								28872
							],
							[
								29033,
								29061
							],
							[
								30469,
								30490
							],
							[
								30567,
								30583
							],
							[
								31016,
								31030
							],
							[
								31254,
								31271
							],
							[
								32569,
								32577
							],
							[
								33833,
								33848
							],
							[
								35228,
								35243
							],
							[
								43294,
								43312
							],
							[
								43361,
								43382
							],
							[
								43845,
								43849
							]
						],
						"symlist":
						[
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓣ  ModuleLoaderContext ; — typedef",
							" Ⓜ  QUICKJS_MODULE_PATH … — macro object",
							"—Ⓕ– is_searchable ( ) { … } — function",
							"—Ⓕ– has_dot_or_slash ( ) { … } — function",
							"—Ⓕ– is_module ( ) { … } — function",
							"—Ⓕ– module_has_suffix ( ) { … } — function",
							"—Ⓕ– js_std_get_module_loader_func ( ) { … } — function",
							"—Ⓕ– js_std_set_module_loader_func ( ) { … } — function",
							"—Ⓕ– malloc_usable_size ( ) { … } — function",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							" Ⓣ  BuiltinModule ; — typedef",
							"—Ⓜ– jsm_module_extern_compiled ( ) … — macro function",
							"—Ⓜ– jsm_module_extern_native ( ) … — macro function",
							"—Ⓜ– jsm_module_record_compiled ( ) … — macro function",
							"—Ⓜ– jsm_module_record_native ( ) … — macro function",
							"—Ⓕ– js_std_set_worker_new_context_func ( ) { … } — function",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_stack_ptr ( ) { … } — function",
							"—Ⓕ– jsm_stack_find ( ) { … } — function",
							"—Ⓕ– jsm_stack_at ( ) { … } — function",
							"—Ⓕ– jsm_stack_top ( ) { … } — function",
							"—Ⓕ– jsm_stack_count ( ) { … } — function",
							"—Ⓕ– jsm_stack_string ( ) { … } — function",
							"—Ⓕ– jsm_stack_get ( ) { … } — function",
							"—Ⓕ– jsm_stack_push ( ) { … } — function",
							"—Ⓕ– jsm_stack_pop ( ) { … } — function",
							"—Ⓕ– jsm_stack_load ( ) { … } — function",
							"—Ⓕ– js_init_module_deep ( ) { … } — function",
							"—Ⓕ– js_init_module_inspect ( ) { … } — function",
							"—Ⓕ– js_init_module_lexer ( ) { … } — function",
							"—Ⓕ– js_init_module_misc ( ) { … } — function",
							"—Ⓕ– js_init_module_path ( ) { … } — function",
							"—Ⓕ– js_init_module_pointer ( ) { … } — function",
							"—Ⓕ– js_init_module_predicate ( ) { … } — function",
							"—Ⓕ– js_init_module_repeater ( ) { … } — function",
							"—Ⓕ– js_init_module_tree_walker ( ) { … } — function",
							"—Ⓕ– js_init_module_xml ( ) { … } — function",
							"—Ⓕ– jsm_init_modules ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function",
							"—Ⓕ– jsm_builtin_find ( ) { … } — function",
							"—Ⓕ– jsm_builtin_init ( ) { … } — function",
							"—Ⓕ– jsm_load_json ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_search_list ( ) { … } — function",
							"—Ⓕ– jsm_search_path ( ) { … } — function",
							"—Ⓕ– jsm_search_suffix ( ) { … } — function",
							"—Ⓕ– jsm_search_module ( ) { … } — function",
							"—Ⓕ– jsm_module_is_builtin ( ) { … } — function",
							"—Ⓕ– jsm_module_package ( ) { … } — function",
							"—Ⓕ– jsm_module_script ( ) { … } — function",
							"—Ⓕ– jsm_module_find ( ) { … } — function",
							"—Ⓕ– jsm_module_load ( ) { … } — function",
							"—Ⓕ– jsm_module_json ( ) { … } — function",
							"—Ⓕ– jsm_module_locate ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_module_normalize ( ) { … } — function",
							"—Ⓕ– jsm_module_save ( ) { … } — function",
							"—Ⓕ– jsm_module_restore ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							"—Ⓕ– jsm_modules_array ( ) { … } — function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"trace_malloc_data",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– jsm_signal_handler ( ) { … } — function",
							"—Ⓕ– jsm_start_interactive ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					821,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbEAAAICDik4IgIENPTkZJR19TSEVYVCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgQ09ORklHX1NIRVhUIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBDT05GSUdfU0hFWFQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4kgIE1vZHVsZUxvYWRlckNvbnRleHQgOyDigJQgdHlwZWRlZgogIOKTgiAgUVVJQ0tKU19NT0RVTEVfUEFUSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaXNfc2VhcmNoYWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc19kb3Rfb3Jfc2xhc2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb2R1bGVfaGFzX3N1ZmZpeCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9nZXRfbW9kdWxlX2xvYWRlcl9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyB0cmltX2RvdHNsYXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAg4pOJICBCdWlsdGluTW9kdWxlIDsg4oCUIHR5cGVkZWYK4oCU4pOC4oCTIGpzbV9tb2R1bGVfZXh0ZXJuX2NvbXBpbGVkICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX2V4dGVybl9uYXRpdmUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfcmVjb3JkX2NvbXBpbGVkICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX3JlY29yZF9uYXRpdmUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja190b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wdXNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX3BvcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19sb2FkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfZGVlcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9sZXhlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX21pc2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9wYXRoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3JlcGVhdGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfdHJlZV93YWxrZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV94bWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW5pdF9tb2R1bGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMganNtX2J1aWx0aW5fZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9idWlsdGluX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9qc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfcGFja2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfcGF0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfc3VmZml4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NlYXJjaF9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2lzX2J1aWx0aW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX3NjcmlwdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfanNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9jYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9sb2FkZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX25vcm1hbGl6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfc2F2ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfcmVzdG9yZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlc19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTUFMTE9DX09WRVJIRUFEIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgdHJhY2VfbWFsbG9jX2RhdGEK4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oZWxwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NpZ25hbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YXJ0X2ludGVyYWN0aXZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFpbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					822,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
						"symkeys":
						[
							[
								39,
								61
							],
							[
								3918,
								3929
							],
							[
								3956,
								3966
							],
							[
								3993,
								4001
							],
							[
								4027,
								4039
							],
							[
								4064,
								4071
							],
							[
								4329,
								4336
							],
							[
								4387,
								4394
							],
							[
								4488,
								4491
							],
							[
								4569,
								4572
							],
							[
								4664,
								4667
							],
							[
								4766,
								4773
							],
							[
								4850,
								4853
							],
							[
								4943,
								4952
							],
							[
								5241,
								5250
							],
							[
								5274,
								5283
							],
							[
								5306,
								5315
							],
							[
								5349,
								5358
							],
							[
								5460,
								5469
							],
							[
								5629,
								5641
							],
							[
								5852,
								5861
							],
							[
								6378,
								6385
							],
							[
								6653,
								6667
							],
							[
								6685,
								6698
							],
							[
								6716,
								6728
							],
							[
								6754,
								6766
							],
							[
								6778,
								6790
							],
							[
								6931,
								6940
							],
							[
								7511,
								7527
							],
							[
								7651,
								7660
							],
							[
								7686,
								7694
							],
							[
								8359,
								8369
							],
							[
								8591,
								8601
							],
							[
								8703,
								8715
							],
							[
								9056,
								9081
							],
							[
								9096,
								9105
							],
							[
								9183,
								9192
							],
							[
								10215,
								10224
							],
							[
								10328,
								10335
							],
							[
								10454,
								10461
							],
							[
								10636,
								10644
							],
							[
								10819,
								10828
							],
							[
								10922,
								10934
							],
							[
								11349,
								11359
							],
							[
								12223,
								12231
							],
							[
								13467,
								13485
							],
							[
								14986,
								15008
							],
							[
								15064,
								15074
							],
							[
								15669,
								15689
							],
							[
								15700,
								15725
							],
							[
								15765,
								15786
							],
							[
								15805,
								15820
							],
							[
								16014,
								16021
							],
							[
								16834,
								16842
							],
							[
								16946,
								16957
							],
							[
								17069,
								17082
							],
							[
								17265,
								17274
							],
							[
								17376,
								17388
							],
							[
								17400,
								17409
							],
							[
								17718,
								17738
							],
							[
								18076,
								18095
							],
							[
								18309,
								18317
							],
							[
								19510,
								19521
							],
							[
								19655,
								19670
							],
							[
								19743,
								19764
							],
							[
								19832,
								19847
							],
							[
								19921,
								19934
							],
							[
								20037,
								20049
							],
							[
								20163,
								20173
							],
							[
								20232,
								20249
							],
							[
								20311,
								20321
							],
							[
								20419,
								20436
							],
							[
								20541,
								20560
							],
							[
								20742,
								20768
							],
							[
								20851,
								20866
							],
							[
								20947,
								20958
							],
							[
								21039,
								21052
							],
							[
								21133,
								21154
							],
							[
								21352,
								21371
							],
							[
								21567,
								21594
							],
							[
								21678,
								21698
							],
							[
								22024,
								22042
							],
							[
								22627,
								22639
							],
							[
								23807,
								23820
							],
							[
								23867,
								23870
							],
							[
								23894,
								23897
							],
							[
								24019,
								24022
							],
							[
								24034,
								24037
							],
							[
								24083,
								24086
							],
							[
								24353,
								24356
							],
							[
								24368,
								24371
							],
							[
								24408,
								24411
							],
							[
								24558,
								24573
							],
							[
								24593,
								24608
							],
							[
								24639,
								24650
							],
							[
								24684,
								24696
							],
							[
								24829,
								24850
							],
							[
								25160,
								25180
							],
							[
								25676,
								25691
							],
							[
								26122,
								26145
							],
							[
								26157,
								26166
							],
							[
								26370,
								26390
							],
							[
								26536,
								26545
							],
							[
								26636,
								26649
							],
							[
								26769,
								26778
							],
							[
								26912,
								26941
							],
							[
								27035,
								27056
							],
							[
								27163,
								27184
							],
							[
								27196,
								27205
							],
							[
								27341,
								27356
							],
							[
								27606,
								27621
							],
							[
								28679,
								28695
							],
							[
								28911,
								28924
							],
							[
								29422,
								29439
							],
							[
								29529,
								29542
							],
							[
								29686,
								29697
							],
							[
								29788,
								29797
							],
							[
								30750,
								30760
							],
							[
								30772,
								30781
							],
							[
								30921,
								30932
							],
							[
								31072,
								31082
							],
							[
								31098,
								31109
							],
							[
								31135,
								31144
							],
							[
								31160,
								31169
							],
							[
								31244,
								31254
							],
							[
								31324,
								31333
							],
							[
								31408,
								31417
							],
							[
								31604,
								31613
							],
							[
								31631,
								31641
							],
							[
								31667,
								31684
							],
							[
								31793,
								31801
							],
							[
								32272,
								32289
							],
							[
								32389,
								32406
							],
							[
								32527,
								32537
							],
							[
								32644,
								32658
							],
							[
								32733,
								32747
							],
							[
								32946,
								32963
							],
							[
								33243,
								33262
							],
							[
								33463,
								33474
							],
							[
								33810,
								33824
							],
							[
								34775,
								34790
							],
							[
								34807,
								34822
							],
							[
								34840,
								34853
							],
							[
								34890,
								34900
							],
							[
								34949,
								34959
							],
							[
								34999,
								35012
							],
							[
								35480,
								35493
							],
							[
								35959,
								35968
							],
							[
								36067,
								36076
							],
							[
								36162,
								36171
							],
							[
								36272,
								36281
							],
							[
								36546,
								36555
							],
							[
								36699,
								36708
							],
							[
								36818,
								36831
							],
							[
								36843,
								36852
							],
							[
								36915,
								36924
							],
							[
								36988,
								36997
							],
							[
								37056,
								37065
							],
							[
								37462,
								37483
							]
						],
						"symlist":
						[
							"QJS_MODULES_INTERNAL_H",
							"JSErrorEnum",
							"OPCodeEnum",
							"JSString",
							"JSAtomStruct",
							"JSShape",
							"JSValue",
							"JSValue",
							"int",
							"int",
							"int",
							"JSValue",
							"int",
							"JSRuntime",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JSStackFrame",
							"list_head",
							"JSClass",
							"JS_MODE_STRICT",
							"JS_MODE_STRIP",
							"JS_MODE_MATH",
							"JSStackFrame",
							"JSStackFrame",
							"list_head",
							"JSGCObjectHeader",
							"list_head",
							"JSVarRef",
							"JSFloatEnv",
							"JSBigFloat",
							"JSBigDecimal",
							"JS_INTERRUPT_COUNTER_INIT",
							"JSContext",
							"list_head",
							"list_head",
							" JSValue",
							" JSValue",
							"JSString",
							"list_head",
							"JSClosureVar",
							"JSVarScope",
							"JSVarDef",
							"JSFunctionBytecode",
							"JSDebuggerFunctionInfo",
							"JSProperty",
							"JS_PROP_INITIAL_SIZE",
							"JS_PROP_INITIAL_HASH_SIZE",
							"JS_ARRAY_INITIAL_SIZE",
							"JSShapeProperty",
							"JSShape",
							"JSRegExp",
							"JSProxyData",
							"JSArrayBuffer",
							"list_head",
							"JSTypedArray",
							"list_head",
							"JSAsyncFunctionState",
							"JSAsyncFunctionData",
							"JSObject",
							"JSMapRecord",
							"JSBoundFunction",
							"JSCFunctionDataRecord",
							"JSForInIterator",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSFloatEnv",
							"JSOperatorSetData",
							"JSMapState",
							"JSMapIteratorData",
							"JSArrayIteratorData",
							"JSRegExpStringIteratorData",
							"JSGeneratorData",
							"JSProxyData",
							"JSPromiseData",
							"JSPromiseFunctionData",
							"JSAsyncFunctionData",
							"JSAsyncFromSyncIteratorData",
							"JSAsyncGeneratorData",
							"JSFunctionBytecode",
							"JSTypedArray",
							"SHORT_OPCODES",
							"FMT",
							"DEF",
							"FMT",
							"DEF",
							"def",
							"FMT",
							"DEF",
							"def",
							"JS_ATOM_TAG_INT",
							"JS_ATOM_MAX_INT",
							"JS_ATOM_MAX",
							"StringBuffer",
							"JSCFunctionDataRecord",
							"JSMemoryUsage_helper",
							"JSGeneratorData",
							"JSAsyncGeneratorRequest",
							"list_head",
							"JSAsyncGeneratorData",
							"list_head",
							"JSPromiseData",
							"list_head",
							"JSPromiseFunctionDataResolved",
							"JSPromiseFunctionData",
							"JSPromiseReactionData",
							"list_head",
							"JSBoundFunction",
							"JSForInIterator",
							"JSReqModuleEntry",
							"JSExportEntry",
							"JSStarExportEntry",
							"JSImportEntry",
							"JSModuleDef",
							"list_head",
							"JSJobEntry",
							"list_head",
							"JSMapRecord",
							"JSMapState",
							"JSMapRecord",
							"list_head",
							"list_head",
							"JSMapState",
							"list_head",
							"list_head",
							"MAGIC_SET",
							"MAGIC_WEAK",
							"JSMapIteratorData",
							"JSOpCode",
							"short_opcode_info",
							"short_opcode_info",
							"JSParsePos",
							"JSResolveEntry",
							"JSResolveState",
							"ExportedNameEntry",
							"GetExportNamesState",
							"CodeContext",
							"StackSizeState",
							"BC_BASE_VERSION",
							"BC_BASE_VERSION",
							"BC_BE_VERSION",
							"BC_VERSION",
							"BC_VERSION",
							"BCWriterState",
							"BCReaderState",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JSThreadState",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JS_IsUncatchableError"
						]
					},
					"AQAAAAAAAAAAAAAAeQgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					823,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB5CAAAUUpTX01PRFVMRVNfSU5URVJOQUxfSApKU0Vycm9yRW51bQpPUENvZGVFbnVtCkpTU3RyaW5nCkpTQXRvbVN0cnVjdApKU1NoYXBlCkpTVmFsdWUKSlNWYWx1ZQogIGludAogIGludAogIGludApKU1ZhbHVlCiAgaW50CkpTUnVudGltZQogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApKU1N0YWNrRnJhbWUKICBsaXN0X2hlYWQKSlNDbGFzcwpKU19NT0RFX1NUUklDVApKU19NT0RFX1NUUklQCkpTX01PREVfTUFUSApKU1N0YWNrRnJhbWUKSlNTdGFja0ZyYW1lCiAgbGlzdF9oZWFkCkpTR0NPYmplY3RIZWFkZXIKICBsaXN0X2hlYWQKSlNWYXJSZWYKSlNGbG9hdEVudgpKU0JpZ0Zsb2F0CkpTQmlnRGVjaW1hbApKU19JTlRFUlJVUFRfQ09VTlRFUl9JTklUCkpTQ29udGV4dAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApKU1ZhbHVlCkpTVmFsdWUKSlNTdHJpbmcKICBsaXN0X2hlYWQKSlNDbG9zdXJlVmFyCkpTVmFyU2NvcGUKSlNWYXJEZWYKSlNGdW5jdGlvbkJ5dGVjb2RlCkpTRGVidWdnZXJGdW5jdGlvbkluZm8KSlNQcm9wZXJ0eQpKU19QUk9QX0lOSVRJQUxfU0laRQpKU19QUk9QX0lOSVRJQUxfSEFTSF9TSVpFCkpTX0FSUkFZX0lOSVRJQUxfU0laRQpKU1NoYXBlUHJvcGVydHkKSlNTaGFwZQpKU1JlZ0V4cApKU1Byb3h5RGF0YQpKU0FycmF5QnVmZmVyCiAgbGlzdF9oZWFkCkpTVHlwZWRBcnJheQogIGxpc3RfaGVhZApKU0FzeW5jRnVuY3Rpb25TdGF0ZQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTT2JqZWN0CkpTTWFwUmVjb3JkCkpTQm91bmRGdW5jdGlvbgpKU0NGdW5jdGlvbkRhdGFSZWNvcmQKSlNGb3JJbkl0ZXJhdG9yCkpTQXJyYXlCdWZmZXIKSlNUeXBlZEFycmF5CkpTRmxvYXRFbnYKSlNPcGVyYXRvclNldERhdGEKSlNNYXBTdGF0ZQpKU01hcEl0ZXJhdG9yRGF0YQpKU0FycmF5SXRlcmF0b3JEYXRhCkpTUmVnRXhwU3RyaW5nSXRlcmF0b3JEYXRhCkpTR2VuZXJhdG9yRGF0YQpKU1Byb3h5RGF0YQpKU1Byb21pc2VEYXRhCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTQXN5bmNGcm9tU3luY0l0ZXJhdG9yRGF0YQpKU0FzeW5jR2VuZXJhdG9yRGF0YQpKU0Z1bmN0aW9uQnl0ZWNvZGUKSlNUeXBlZEFycmF5ClNIT1JUX09QQ09ERVMKRk1UCkRFRgpGTVQKREVGCiAgZGVmCkZNVApERUYKICBkZWYKSlNfQVRPTV9UQUdfSU5UCkpTX0FUT01fTUFYX0lOVApKU19BVE9NX01BWApTdHJpbmdCdWZmZXIKSlNDRnVuY3Rpb25EYXRhUmVjb3JkCkpTTWVtb3J5VXNhZ2VfaGVscGVyCkpTR2VuZXJhdG9yRGF0YQpKU0FzeW5jR2VuZXJhdG9yUmVxdWVzdAogIGxpc3RfaGVhZApKU0FzeW5jR2VuZXJhdG9yRGF0YQogIGxpc3RfaGVhZApKU1Byb21pc2VEYXRhCiAgbGlzdF9oZWFkCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YVJlc29sdmVkCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YQpKU1Byb21pc2VSZWFjdGlvbkRhdGEKICBsaXN0X2hlYWQKSlNCb3VuZEZ1bmN0aW9uCkpTRm9ySW5JdGVyYXRvcgpKU1JlcU1vZHVsZUVudHJ5CkpTRXhwb3J0RW50cnkKSlNTdGFyRXhwb3J0RW50cnkKSlNJbXBvcnRFbnRyeQpKU01vZHVsZURlZgogIGxpc3RfaGVhZApKU0pvYkVudHJ5CiAgbGlzdF9oZWFkCkpTTWFwUmVjb3JkCkpTTWFwU3RhdGUKSlNNYXBSZWNvcmQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKSlNNYXBTdGF0ZQogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApNQUdJQ19TRVQKTUFHSUNfV0VBSwpKU01hcEl0ZXJhdG9yRGF0YQpKU09wQ29kZQogIHNob3J0X29wY29kZV9pbmZvCiAgc2hvcnRfb3Bjb2RlX2luZm8KSlNQYXJzZVBvcwpKU1Jlc29sdmVFbnRyeQpKU1Jlc29sdmVTdGF0ZQpFeHBvcnRlZE5hbWVFbnRyeQpHZXRFeHBvcnROYW1lc1N0YXRlCkNvZGVDb250ZXh0ClN0YWNrU2l6ZVN0YXRlCkJDX0JBU0VfVkVSU0lPTgpCQ19CQVNFX1ZFUlNJT04KQkNfQkVfVkVSU0lPTgpCQ19WRVJTSU9OCkJDX1ZFUlNJT04KQkNXcml0ZXJTdGF0ZQpCQ1JlYWRlclN0YXRlCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCkpTVGhyZWFkU3RhdGUKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKSlNfSXNVbmNhdGNoYWJsZUVycm9yAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					824,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					825,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
						"symkeys":
						[
							[
								621,
								633
							],
							[
								674,
								686
							],
							[
								710,
								722
							],
							[
								1173,
								1192
							],
							[
								1480,
								1499
							],
							[
								2030,
								2043
							],
							[
								2119,
								2135
							],
							[
								2214,
								2223
							],
							[
								2503,
								2520
							],
							[
								2813,
								2842
							],
							[
								2851,
								2880
							],
							[
								3056,
								3074
							],
							[
								3108,
								3121
							],
							[
								3371,
								3384
							],
							[
								3395,
								3421
							],
							[
								3523,
								3547
							],
							[
								3630,
								3656
							],
							[
								3748,
								3772
							],
							[
								4976,
								5010
							],
							[
								5060,
								5074
							],
							[
								5226,
								5239
							],
							[
								5431,
								5445
							],
							[
								5626,
								5638
							],
							[
								5731,
								5744
							],
							[
								5786,
								5801
							],
							[
								5864,
								5880
							],
							[
								6145,
								6158
							],
							[
								7092,
								7106
							],
							[
								7209,
								7222
							],
							[
								7381,
								7395
							],
							[
								8826,
								8845
							],
							[
								8885,
								8907
							],
							[
								8947,
								8967
							],
							[
								9007,
								9026
							],
							[
								9066,
								9085
							],
							[
								9125,
								9147
							],
							[
								9187,
								9211
							],
							[
								9251,
								9274
							],
							[
								9314,
								9340
							],
							[
								9380,
								9398
							],
							[
								9431,
								9447
							],
							[
								9614,
								9632
							],
							[
								10139,
								10159
							],
							[
								10573,
								10589
							],
							[
								10763,
								10779
							],
							[
								11893,
								11906
							],
							[
								12163,
								12179
							],
							[
								12508,
								12523
							],
							[
								13097,
								13112
							],
							[
								13468,
								13485
							],
							[
								14168,
								14185
							],
							[
								14858,
								14879
							],
							[
								15024,
								15042
							],
							[
								15923,
								15940
							],
							[
								17087,
								17102
							],
							[
								17422,
								17437
							],
							[
								18222,
								18237
							],
							[
								18852,
								18869
							],
							[
								19733,
								19750
							],
							[
								24171,
								24191
							],
							[
								25962,
								25977
							],
							[
								26367,
								26385
							],
							[
								26914,
								26929
							],
							[
								27245,
								27262
							],
							[
								27864,
								27881
							],
							[
								28706,
								28721
							],
							[
								28738,
								28753
							],
							[
								28771,
								28788
							],
							[
								28845,
								28872
							],
							[
								29033,
								29061
							],
							[
								30469,
								30490
							],
							[
								30567,
								30583
							],
							[
								31016,
								31030
							],
							[
								31254,
								31271
							],
							[
								32569,
								32577
							],
							[
								33833,
								33848
							],
							[
								35228,
								35243
							],
							[
								43294,
								43312
							],
							[
								43361,
								43382
							],
							[
								43845,
								43849
							]
						],
						"symlist":
						[
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓜ  CONFIG_SHEXT … — macro object",
							" Ⓣ  ModuleLoaderContext ; — typedef",
							" Ⓜ  QUICKJS_MODULE_PATH … — macro object",
							"—Ⓕ– is_searchable ( ) { … } — function",
							"—Ⓕ– has_dot_or_slash ( ) { … } — function",
							"—Ⓕ– is_module ( ) { … } — function",
							"—Ⓕ– module_has_suffix ( ) { … } — function",
							"—Ⓕ– js_std_get_module_loader_func ( ) { … } — function",
							"—Ⓕ– js_std_set_module_loader_func ( ) { … } — function",
							"—Ⓕ– malloc_usable_size ( ) { … } — function",
							"—Ⓜ– trim_dotslash ( ) … — macro function",
							" Ⓣ  BuiltinModule ; — typedef",
							"—Ⓜ– jsm_module_extern_compiled ( ) … — macro function",
							"—Ⓜ– jsm_module_extern_native ( ) … — macro function",
							"—Ⓜ– jsm_module_record_compiled ( ) … — macro function",
							"—Ⓜ– jsm_module_record_native ( ) … — macro function",
							"—Ⓕ– js_std_set_worker_new_context_func ( ) { … } — function",
							"—Ⓕ– jsm_dump_error ( ) { … } — function",
							"—Ⓕ– jsm_stack_ptr ( ) { … } — function",
							"—Ⓕ– jsm_stack_find ( ) { … } — function",
							"—Ⓕ– jsm_stack_at ( ) { … } — function",
							"—Ⓕ– jsm_stack_top ( ) { … } — function",
							"—Ⓕ– jsm_stack_count ( ) { … } — function",
							"—Ⓕ– jsm_stack_string ( ) { … } — function",
							"—Ⓕ– jsm_stack_get ( ) { … } — function",
							"—Ⓕ– jsm_stack_push ( ) { … } — function",
							"—Ⓕ– jsm_stack_pop ( ) { … } — function",
							"—Ⓕ– jsm_stack_load ( ) { … } — function",
							"—Ⓕ– js_init_module_deep ( ) { … } — function",
							"—Ⓕ– js_init_module_inspect ( ) { … } — function",
							"—Ⓕ– js_init_module_lexer ( ) { … } — function",
							"—Ⓕ– js_init_module_misc ( ) { … } — function",
							"—Ⓕ– js_init_module_path ( ) { … } — function",
							"—Ⓕ– js_init_module_pointer ( ) { … } — function",
							"—Ⓕ– js_init_module_predicate ( ) { … } — function",
							"—Ⓕ– js_init_module_repeater ( ) { … } — function",
							"—Ⓕ– js_init_module_tree_walker ( ) { … } — function",
							"—Ⓕ– js_init_module_xml ( ) { … } — function",
							"—Ⓕ– jsm_init_modules ( ) { … } — function",
							"—Ⓜ– jsm_builtin_native ( ) … — macro function",
							"—Ⓜ– jsm_builtin_compiled ( ) … — macro function",
							"—Ⓕ– jsm_builtin_find ( ) { … } — function",
							"—Ⓕ– jsm_builtin_init ( ) { … } — function",
							"—Ⓕ– jsm_load_json ( ) { … } — function",
							"—Ⓕ– jsm_load_package ( ) { … } — function",
							"—Ⓕ– jsm_search_list ( ) { … } — function",
							"—Ⓕ– jsm_search_path ( ) { … } — function",
							"—Ⓕ– jsm_search_suffix ( ) { … } — function",
							"—Ⓕ– jsm_search_module ( ) { … } — function",
							"—Ⓕ– jsm_module_is_builtin ( ) { … } — function",
							"—Ⓕ– jsm_module_package ( ) { … } — function",
							"—Ⓕ– jsm_module_script ( ) { … } — function",
							"—Ⓕ– jsm_module_find ( ) { … } — function",
							"—Ⓕ– jsm_module_load ( ) { … } — function",
							"—Ⓕ– jsm_module_json ( ) { … } — function",
							"—Ⓕ– jsm_module_locate ( ) { … } — function",
							"—Ⓕ– jsm_module_loader ( ) { … } — function",
							"—Ⓕ– jsm_module_normalize ( ) { … } — function",
							"—Ⓕ– jsm_module_save ( ) { … } — function",
							"—Ⓕ– jsm_module_restore ( ) { … } — function",
							"—Ⓕ– jsm_context_new ( ) { … } — function",
							"—Ⓜ– jsm_module_native ( ) … — macro function",
							"—Ⓕ– jsm_modules_array ( ) { … } — function",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							" Ⓜ  MALLOC_OVERHEAD … — macro object",
							"trace_malloc_data",
							"—Ⓕ– jsm_trace_malloc_ptr_offset ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_usable_size ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc_init ( ) { … } — function",
							"—Ⓕ– jsm_trace_malloc ( ) { … } — function",
							"—Ⓕ– jsm_trace_free ( ) { … } — function",
							"—Ⓕ– jsm_trace_realloc ( ) { … } — function",
							"—Ⓕ– jsm_help ( ) { … } — function",
							"—Ⓕ– jsm_eval_script ( ) { … } — function",
							"—Ⓕ– jsm_module_func ( ) { … } — function",
							"—Ⓕ– jsm_signal_handler ( ) { … } — function",
							"—Ⓕ– jsm_start_interactive ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAaQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					826,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbEAAAICDik4IgIENPTkZJR19TSEVYVCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgQ09ORklHX1NIRVhUIOKApiDigJQgbWFjcm8gb2JqZWN0CiAg4pOCICBDT05GSUdfU0hFWFQg4oCmIOKAlCBtYWNybyBvYmplY3QKICDik4kgIE1vZHVsZUxvYWRlckNvbnRleHQgOyDigJQgdHlwZWRlZgogIOKTgiAgUVVJQ0tKU19NT0RVTEVfUEFUSCDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaXNfc2VhcmNoYWJsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGhhc19kb3Rfb3Jfc2xhc2ggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBpc19tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtb2R1bGVfaGFzX3N1ZmZpeCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9nZXRfbW9kdWxlX2xvYWRlcl9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3NldF9tb2R1bGVfbG9hZGVyX2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKTguKAkyB0cmltX2RvdHNsYXNoICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCiAg4pOJICBCdWlsdGluTW9kdWxlIDsg4oCUIHR5cGVkZWYK4oCU4pOC4oCTIGpzbV9tb2R1bGVfZXh0ZXJuX2NvbXBpbGVkICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX2V4dGVybl9uYXRpdmUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfcmVjb3JkX2NvbXBpbGVkICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fbW9kdWxlX3JlY29yZF9uYXRpdmUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9zZXRfd29ya2VyX25ld19jb250ZXh0X2Z1bmMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fZHVtcF9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wdHIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19hdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja190b3AgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfY291bnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fc3RhY2tfc3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19wdXNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YWNrX3BvcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zdGFja19sb2FkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfZGVlcCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX2luc3BlY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9sZXhlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX21pc2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV9wYXRoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfcG9pbnRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3ByZWRpY2F0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3JlcGVhdGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfdHJlZV93YWxrZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19pbml0X21vZHVsZV94bWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21faW5pdF9tb2R1bGVzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMganNtX2J1aWx0aW5fbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKTguKAkyBqc21fYnVpbHRpbl9jb21waWxlZCAoICkg4oCmIOKAlCBtYWNybyBmdW5jdGlvbgrigJTikrvigJMganNtX2J1aWx0aW5fZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9idWlsdGluX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbG9hZF9qc29uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2xvYWRfcGFja2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfbGlzdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfcGF0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9zZWFyY2hfc3VmZml4ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NlYXJjaF9tb2R1bGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX2lzX2J1aWx0aW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX3BhY2thZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX3NjcmlwdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfZmluZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9hZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfanNvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfbG9jYXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9sb2FkZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlX25vcm1hbGl6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfc2F2ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9tb2R1bGVfcmVzdG9yZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9jb250ZXh0X25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pOC4oCTIGpzbV9tb2R1bGVfbmF0aXZlICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fbW9kdWxlc19hcnJheSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4IgIE1BTExPQ19PVkVSSEVBRCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTUFMTE9DX09WRVJIRUFEIOKApiDigJQgbWFjcm8gb2JqZWN0CiAgdHJhY2VfbWFsbG9jX2RhdGEK4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfcHRyX29mZnNldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV90cmFjZV9tYWxsb2NfdXNhYmxlX3NpemUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfbWFsbG9jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3RyYWNlX2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc21fdHJhY2VfcmVhbGxvYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzbV9oZWxwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX2V2YWxfc2NyaXB0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX21vZHVsZV9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3NpZ25hbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNtX3N0YXJ0X2ludGVyYWN0aXZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFpbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					827,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
						"symkeys":
						[
							[
								140,
								158
							],
							[
								542,
								555
							]
						],
						"symlist":
						[
							"—Ⓕ– callback_emit_this ( ) { … } — function",
							"—Ⓕ– callback_emit ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					828,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABmAAAA4oCU4pK74oCTIGNhbGxiYWNrX2VtaXRfdGhpcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX2VtaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					829,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
						"symkeys":
						[
							[
								140,
								158
							],
							[
								542,
								555
							]
						],
						"symlist":
						[
							"—Ⓕ– callback_emit_this ( ) { … } — function",
							"—Ⓕ– callback_emit ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					830,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABmAAAA4oCU4pK74oCTIGNhbGxiYWNrX2VtaXRfdGhpcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxiYWNrX2VtaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					831,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7469,
								7474
							],
							[
								7568,
								7588
							],
							[
								8499,
								8515
							],
							[
								8604,
								8636
							],
							[
								9226,
								9244
							],
							[
								9257,
								9287
							],
							[
								9572,
								9589
							],
							[
								9834,
								9854
							],
							[
								9951,
								9986
							],
							[
								10126,
								10140
							],
							[
								10158,
								10180
							],
							[
								10289,
								10293
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AQAAAAAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					832,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					833,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					834,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					835,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7469,
								7474
							],
							[
								7568,
								7588
							],
							[
								8499,
								8515
							],
							[
								8604,
								8636
							],
							[
								9226,
								9244
							],
							[
								9257,
								9287
							],
							[
								9572,
								9589
							],
							[
								9834,
								9854
							],
							[
								9951,
								9986
							],
							[
								10126,
								10140
							],
							[
								10158,
								10180
							],
							[
								10289,
								10293
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AQAAAAAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					836,
					3,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7572,
								7592
							],
							[
								8503,
								8519
							],
							[
								8608,
								8640
							],
							[
								9230,
								9248
							],
							[
								9261,
								9291
							],
							[
								9576,
								9593
							],
							[
								9838,
								9858
							],
							[
								9955,
								9990
							],
							[
								10130,
								10144
							],
							[
								10162,
								10184
							],
							[
								10293,
								10297
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					837,
					4,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7572,
								7592
							],
							[
								8503,
								8519
							],
							[
								8608,
								8640
							],
							[
								9230,
								9248
							],
							[
								9261,
								9291
							],
							[
								9576,
								9593
							],
							[
								9838,
								9858
							],
							[
								9955,
								9990
							],
							[
								10130,
								10144
							],
							[
								10162,
								10184
							],
							[
								10293,
								10297
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					838,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7572,
								7592
							],
							[
								8503,
								8519
							],
							[
								8608,
								8640
							],
							[
								9230,
								9248
							],
							[
								9261,
								9291
							],
							[
								9576,
								9593
							],
							[
								9838,
								9858
							],
							[
								9955,
								9990
							],
							[
								10130,
								10144
							],
							[
								10162,
								10184
							],
							[
								10293,
								10297
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					839,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7577,
								7597
							],
							[
								8508,
								8524
							],
							[
								8613,
								8645
							],
							[
								9235,
								9253
							],
							[
								9266,
								9296
							],
							[
								9581,
								9598
							],
							[
								9843,
								9863
							],
							[
								9960,
								9995
							],
							[
								10135,
								10149
							],
							[
								10167,
								10189
							],
							[
								10298,
								10302
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					840,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7572,
								7592
							],
							[
								8503,
								8519
							],
							[
								8608,
								8640
							],
							[
								9230,
								9248
							],
							[
								9261,
								9291
							],
							[
								9576,
								9593
							],
							[
								9838,
								9858
							],
							[
								9955,
								9990
							],
							[
								10130,
								10144
							],
							[
								10162,
								10184
							],
							[
								10293,
								10297
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					841,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7638,
								7658
							],
							[
								8569,
								8585
							],
							[
								8674,
								8706
							],
							[
								9296,
								9314
							],
							[
								9327,
								9357
							],
							[
								9642,
								9659
							],
							[
								9904,
								9924
							],
							[
								10021,
								10056
							],
							[
								10196,
								10210
							],
							[
								10228,
								10250
							],
							[
								10359,
								10363
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					842,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7636,
								7656
							],
							[
								8567,
								8583
							],
							[
								8672,
								8704
							],
							[
								9294,
								9312
							],
							[
								9325,
								9355
							],
							[
								9640,
								9657
							],
							[
								9902,
								9922
							],
							[
								10019,
								10054
							],
							[
								10194,
								10208
							],
							[
								10226,
								10248
							],
							[
								10357,
								10361
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					843,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7614,
								7634
							],
							[
								8545,
								8561
							],
							[
								8650,
								8682
							],
							[
								9272,
								9290
							],
							[
								9303,
								9333
							],
							[
								9618,
								9635
							],
							[
								9880,
								9900
							],
							[
								9997,
								10032
							],
							[
								10172,
								10186
							],
							[
								10204,
								10226
							],
							[
								10335,
								10339
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					844,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7614,
								7634
							],
							[
								8545,
								8561
							],
							[
								8650,
								8682
							],
							[
								9272,
								9290
							],
							[
								9303,
								9333
							],
							[
								9618,
								9635
							],
							[
								9880,
								9900
							],
							[
								9997,
								10032
							],
							[
								10172,
								10186
							],
							[
								10204,
								10226
							],
							[
								10335,
								10339
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					845,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7638,
								7658
							],
							[
								8569,
								8585
							],
							[
								8674,
								8706
							],
							[
								9296,
								9314
							],
							[
								9327,
								9357
							],
							[
								9642,
								9659
							],
							[
								9904,
								9924
							],
							[
								10021,
								10056
							],
							[
								10196,
								10210
							],
							[
								10228,
								10250
							],
							[
								10359,
								10363
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					846,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7638,
								7658
							],
							[
								8569,
								8585
							],
							[
								8674,
								8706
							],
							[
								9296,
								9314
							],
							[
								9327,
								9357
							],
							[
								9642,
								9659
							],
							[
								9904,
								9924
							],
							[
								10021,
								10056
							],
							[
								10196,
								10210
							],
							[
								10228,
								10250
							],
							[
								10359,
								10363
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					847,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1409,
								1419
							],
							[
								1467,
								1477
							],
							[
								1517,
								1522
							],
							[
								1576,
								1601
							],
							[
								2081,
								2109
							],
							[
								2462,
								2465
							],
							[
								2470,
								2489
							],
							[
								2532,
								2541
							],
							[
								2663,
								2690
							],
							[
								2728,
								2754
							],
							[
								2788,
								2794
							],
							[
								2925,
								2954
							],
							[
								3027,
								3046
							],
							[
								3219,
								3239
							],
							[
								3384,
								3412
							],
							[
								3482,
								3492
							],
							[
								3703,
								3709
							],
							[
								3921,
								3935
							],
							[
								4556,
								4603
							],
							[
								4733,
								4749
							],
							[
								5466,
								5484
							],
							[
								5653,
								5677
							],
							[
								5998,
								6003
							],
							[
								6136,
								6143
							],
							[
								6476,
								6482
							],
							[
								7150,
								7184
							],
							[
								7466,
								7471
							],
							[
								7565,
								7585
							],
							[
								8496,
								8512
							],
							[
								8601,
								8633
							],
							[
								9223,
								9241
							],
							[
								9254,
								9284
							],
							[
								9569,
								9586
							],
							[
								9831,
								9851
							],
							[
								9948,
								9983
							],
							[
								10123,
								10137
							],
							[
								10155,
								10177
							],
							[
								10286,
								10290
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAARAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABcDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAABcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					848,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					849,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1384,
								1394
							],
							[
								1434,
								1444
							],
							[
								1484,
								1489
							],
							[
								1532,
								1557
							],
							[
								1961,
								1989
							],
							[
								2342,
								2345
							],
							[
								2350,
								2369
							],
							[
								2412,
								2421
							],
							[
								2543,
								2570
							],
							[
								2608,
								2634
							],
							[
								2668,
								2674
							],
							[
								2805,
								2834
							],
							[
								2907,
								2926
							],
							[
								3099,
								3119
							],
							[
								3264,
								3292
							],
							[
								3362,
								3372
							],
							[
								3583,
								3589
							],
							[
								3801,
								3815
							],
							[
								4436,
								4483
							],
							[
								4613,
								4629
							],
							[
								5318,
								5336
							],
							[
								5505,
								5529
							],
							[
								5850,
								5855
							],
							[
								5988,
								5995
							],
							[
								6328,
								6334
							],
							[
								7002,
								7036
							],
							[
								7310,
								7315
							],
							[
								7409,
								7429
							],
							[
								8340,
								8356
							],
							[
								8445,
								8477
							],
							[
								9067,
								9085
							],
							[
								9098,
								9128
							],
							[
								9413,
								9430
							],
							[
								9675,
								9695
							],
							[
								9792,
								9827
							],
							[
								9967,
								9981
							],
							[
								9995,
								10017
							],
							[
								10126,
								10130
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AwAAAAAAAAAAAAAAFwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcDAABNYWtlUHJvbXB0KHByZWZpeCwgc3VmZml4LCBjb21tYW5kTW9kZSA9IGZhbHNlKQpHZXRQcm9tcHQocHJvbXB0MikKRnJvbURvbWFpbihidWZmZXIpCldyaXRlRmlsZShmaWxlbmFtZSwgYnVmZmVyKQpUb0RvbWFpbihzdHIsIGFscGhhID0gZmFsc2UpCiAgKGEsIHMpID0+CiAgKGEsIHMpID0+CiAgY2ggPT4KRE5TUXVlcnkoZG9tYWluKQpETlNSZXNwb25zZShidWZmZXIpCkNMSQogIGNvbnN0cnVjdG9yKHByb21wdCkKICBnZXRsaW5lKCkKICB3YWl0UmVhZChmaWxlKQogIGZkID0+IChyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICByZWFkTGluZShmaWxlKQogIHJ1bihjYWxsYmFjaykKICBwcmludFN0YXR1cyguLi5hcmdzKQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAoKSA9PgogIGFyZyA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4gPSAwKQogIChsZXZlbCwgbXNnKSA9PgogIGJvZHk6IGZ1bmN0aW9uKigpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CiAgZGF0YSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgc3RhdHVzLCByZWFzb24sIGVycm9yKQooKSA9PgogIG9uUmVxdWVzdChyZXEsIHJlc3ApCiAgb25GZChmZCwgcmQsIHdyKQogIG9uTWVzc2FnZSh3cywgbXNnLCBmaXJzdCwgZmluYWwpCiAgb25FcnJvcih3cywgZXJyb3IpClByaW50TWVzc2FnZShtc2cpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkKR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYSA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgbyA9PgAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					850,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					851,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1384,
								1394
							],
							[
								1434,
								1444
							],
							[
								1484,
								1489
							],
							[
								1532,
								1557
							],
							[
								1961,
								1989
							],
							[
								2342,
								2345
							],
							[
								2350,
								2369
							],
							[
								2412,
								2421
							],
							[
								2543,
								2570
							],
							[
								2608,
								2634
							],
							[
								2668,
								2674
							],
							[
								2805,
								2834
							],
							[
								2907,
								2926
							],
							[
								3099,
								3119
							],
							[
								3264,
								3292
							],
							[
								3362,
								3372
							],
							[
								3583,
								3589
							],
							[
								3801,
								3815
							],
							[
								4436,
								4483
							],
							[
								4613,
								4629
							],
							[
								5318,
								5336
							],
							[
								5505,
								5529
							],
							[
								5850,
								5855
							],
							[
								5988,
								5995
							],
							[
								6328,
								6334
							],
							[
								7002,
								7036
							],
							[
								7310,
								7315
							],
							[
								7409,
								7429
							],
							[
								8340,
								8356
							],
							[
								8445,
								8477
							],
							[
								9067,
								9085
							],
							[
								9098,
								9128
							],
							[
								9413,
								9430
							],
							[
								9675,
								9695
							],
							[
								9792,
								9827
							],
							[
								9967,
								9981
							],
							[
								9995,
								10017
							],
							[
								10126,
								10130
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AwAAAAAAAAAAAAAAFwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcDAABNYWtlUHJvbXB0KHByZWZpeCwgc3VmZml4LCBjb21tYW5kTW9kZSA9IGZhbHNlKQpHZXRQcm9tcHQocHJvbXB0MikKRnJvbURvbWFpbihidWZmZXIpCldyaXRlRmlsZShmaWxlbmFtZSwgYnVmZmVyKQpUb0RvbWFpbihzdHIsIGFscGhhID0gZmFsc2UpCiAgKGEsIHMpID0+CiAgKGEsIHMpID0+CiAgY2ggPT4KRE5TUXVlcnkoZG9tYWluKQpETlNSZXNwb25zZShidWZmZXIpCkNMSQogIGNvbnN0cnVjdG9yKHByb21wdCkKICBnZXRsaW5lKCkKICB3YWl0UmVhZChmaWxlKQogIGZkID0+IChyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICByZWFkTGluZShmaWxlKQogIHJ1bihjYWxsYmFjaykKICBwcmludFN0YXR1cyguLi5hcmdzKQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAoKSA9PgogIGFyZyA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4gPSAwKQogIChsZXZlbCwgbXNnKSA9PgogIGJvZHk6IGZ1bmN0aW9uKigpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CiAgZGF0YSA9PgogICgpID0+CiAgb25DbG9zZSh3cywgc3RhdHVzLCByZWFzb24sIGVycm9yKQooKSA9PgogIG9uUmVxdWVzdChyZXEsIHJlc3ApCiAgb25GZChmZCwgcmQsIHdyKQogIG9uTWVzc2FnZSh3cywgbXNnLCBmaXJzdCwgZmluYWwpCiAgb25FcnJvcih3cywgZXJyb3IpClByaW50TWVzc2FnZShtc2cpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkKR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKICBmaW5kT3B0ID0gYSA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgbyA9PgAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					852,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					853,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					854,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
						"symkeys":
						[
							[
								1294,
								1318
							],
							[
								1530,
								1545
							],
							[
								6141,
								6155
							],
							[
								7455,
								7487
							],
							[
								8152,
								8179
							],
							[
								8518,
								8536
							],
							[
								8847,
								8867
							],
							[
								23747,
								23773
							],
							[
								26978,
								26996
							]
						],
						"symlist":
						[
							"—Ⓕ– lws_close_trans_q_leader ( ) { … } — function",
							"—Ⓕ– __lws_reset_wsi ( ) { … } — function",
							"—Ⓕ– __lws_free_wsi ( ) { … } — function",
							"—Ⓕ– lws_remove_child_from_any_parent ( ) { … } — function",
							"—Ⓕ– lws_inform_client_conn_fail ( ) { … } — function",
							"—Ⓕ– lws_addrinfo_clean ( ) { … } — function",
							"—Ⓕ– __lws_close_free_wsi ( ) { … } — function",
							"—Ⓕ– __lws_close_free_wsi_final ( ) { … } — function",
							"—Ⓕ– lws_close_free_wsi ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAqwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					855,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAgAA4oCU4pK74oCTIGx3c19jbG9zZV90cmFuc19xX2xlYWRlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIF9fbHdzX3Jlc2V0X3dzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIF9fbHdzX2ZyZWVfd3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX3JlbW92ZV9jaGlsZF9mcm9tX2FueV9wYXJlbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfaW5mb3JtX2NsaWVudF9jb25uX2ZhaWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBsd3NfYWRkcmluZm9fY2xlYW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBfX2x3c19jbG9zZV9mcmVlX3dzaSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIF9fbHdzX2Nsb3NlX2ZyZWVfd3NpX2ZpbmFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2Nsb3NlX2ZyZWVfd3NpICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					856,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
						"symkeys":
						[
							[
								8,
								19
							],
							[
								635,
								650
							],
							[
								1045,
								1057
							],
							[
								1233,
								1245
							],
							[
								1387,
								1405
							],
							[
								2453,
								2463
							],
							[
								2925,
								2936
							],
							[
								3863,
								3874
							],
							[
								4263,
								4273
							],
							[
								4352,
								4368
							],
							[
								4602,
								4612
							],
							[
								4695,
								4710
							],
							[
								13166,
								13180
							],
							[
								13195,
								13215
							],
							[
								13346,
								13365
							],
							[
								13569,
								13592
							],
							[
								13812,
								13830
							],
							[
								14661,
								14683
							],
							[
								15555,
								15572
							],
							[
								16446,
								16463
							],
							[
								17233,
								17255
							],
							[
								17804,
								17813
							],
							[
								17834,
								17848
							],
							[
								17910,
								17925
							],
							[
								18062,
								18084
							],
							[
								18236,
								18256
							],
							[
								18395,
								18415
							],
							[
								18796,
								18815
							],
							[
								19064,
								19084
							],
							[
								19616,
								19637
							],
							[
								20327,
								20348
							],
							[
								29046,
								29069
							],
							[
								30542,
								30555
							],
							[
								31830,
								31848
							],
							[
								32203,
								32221
							]
						],
						"symlist":
						[
							" Ⓜ  _GNU_SOURCE … — macro object",
							"—Ⓕ– client_callback ( ) { … } — function",
							"—Ⓕ– close_status ( ) { … } — function",
							"—Ⓕ– close_reason ( ) { … } — function",
							"—Ⓕ– client_certificate ( ) { … } — function",
							"—Ⓕ– client_new ( ) { … } — function",
							"—Ⓕ– client_free ( ) { … } — function",
							"—Ⓕ– client_zero ( ) { … } — function",
							"—Ⓕ– client_dup ( ) { … } — function",
							"—Ⓕ– client_generator ( ) { … } — function",
							"—Ⓕ– lws_client ( ) { … } — function",
							"—Ⓕ– client_callback ( ) { … } — function",
							" Ⓣ  MessageClosure ; — typedef",
							"—Ⓕ– message_closure_free ( ) { … } — function",
							"—Ⓕ– message_closure_new ( ) { … } — function",
							"—Ⓕ– minnet_client_onmessage ( ) { … } — function",
							"—Ⓕ– minnet_client_next ( ) { … } — function",
							"—Ⓕ– minnet_client_iterator ( ) { … } — function",
							"—Ⓕ– minnet_client_get ( ) { … } — function",
							"—Ⓕ– minnet_client_set ( ) { … } — function",
							"—Ⓕ– minnet_client_response ( ) { … } — function",
							" Ⓣ  SyncFetch ; — typedef",
							"—Ⓕ– synchfetch_dup ( ) { … } — function",
							"—Ⓕ– synchfetch_free ( ) { … } — function",
							"—Ⓕ– synchfetch_indexpollfd ( ) { … } — function",
							"—Ⓕ– synchfetch_getpollfd ( ) { … } — function",
							"—Ⓕ– synchfetch_setevents ( ) { … } — function",
							"—Ⓕ– synchfetch_removefd ( ) { … } — function",
							"—Ⓕ– minnet_client_pollfd ( ) { … } — function",
							"—Ⓕ– minnet_client_onclose ( ) { … } — function",
							"—Ⓕ– minnet_client_closure ( ) { … } — function",
							"—Ⓕ– minnet_client_finalizer ( ) { … } — function",
							"—Ⓕ– minnet_client ( ) { … } — function",
							"—Ⓕ– minnet_client_wrap ( ) { … } — function",
							"—Ⓕ– minnet_client_init ( ) { … } — function"
						]
					},
					"AQAAAAAAAAAAAAAAugUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					857,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIBwAAICDik4IgIF9HTlVfU09VUkNFIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBjbGllbnRfY2FsbGJhY2sgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbG9zZV9zdGF0dXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbG9zZV9yZWFzb24gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfY2VydGlmaWNhdGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfbmV3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgY2xpZW50X2ZyZWUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfemVybyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsaWVudF9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBjbGllbnRfZ2VuZXJhdG9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbHdzX2NsaWVudCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNsaWVudF9jYWxsYmFjayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24KICDik4kgIE1lc3NhZ2VDbG9zdXJlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIG1lc3NhZ2VfY2xvc3VyZV9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWVzc2FnZV9jbG9zdXJlX25ldyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9jbGllbnRfb25tZXNzYWdlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2NsaWVudF9uZXh0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2NsaWVudF9pdGVyYXRvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9jbGllbnRfZ2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2NsaWVudF9zZXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X3Jlc3BvbnNlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgogIOKTiSAgU3luY0ZldGNoIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIHN5bmNoZmV0Y2hfZHVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3luY2hmZXRjaF9mcmVlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3luY2hmZXRjaF9pbmRleHBvbGxmZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHN5bmNoZmV0Y2hfZ2V0cG9sbGZkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgc3luY2hmZXRjaF9zZXRldmVudHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzeW5jaGZldGNoX3JlbW92ZWZkICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWlubmV0X2NsaWVudF9wb2xsZmQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X29uY2xvc2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X2Nsb3N1cmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1pbm5ldF9jbGllbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X3dyYXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtaW5uZXRfY2xpZW50X2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					858,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					859,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					860,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1384,
								1394
							],
							[
								1434,
								1444
							],
							[
								1484,
								1489
							],
							[
								1532,
								1557
							],
							[
								1961,
								1989
							],
							[
								2342,
								2345
							],
							[
								2350,
								2369
							],
							[
								2412,
								2421
							],
							[
								2543,
								2570
							],
							[
								2608,
								2634
							],
							[
								2668,
								2674
							],
							[
								2805,
								2834
							],
							[
								2907,
								2926
							],
							[
								3099,
								3119
							],
							[
								3264,
								3292
							],
							[
								3362,
								3372
							],
							[
								3583,
								3589
							],
							[
								3801,
								3815
							],
							[
								4436,
								4483
							],
							[
								4613,
								4629
							],
							[
								5318,
								5336
							],
							[
								5505,
								5529
							],
							[
								5850,
								5855
							],
							[
								5988,
								5995
							],
							[
								6328,
								6334
							],
							[
								7002,
								7036
							],
							[
								7310,
								7315
							],
							[
								7409,
								7429
							],
							[
								8340,
								8356
							],
							[
								8445,
								8477
							],
							[
								9067,
								9085
							],
							[
								9098,
								9128
							],
							[
								9413,
								9430
							],
							[
								9675,
								9695
							],
							[
								9792,
								9827
							],
							[
								9967,
								9981
							],
							[
								9995,
								10017
							],
							[
								10126,
								10130
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AQAAAAAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					861,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXAwAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKR2V0UHJvbXB0KHByb21wdDIpCkZyb21Eb21haW4oYnVmZmVyKQpXcml0ZUZpbGUoZmlsZW5hbWUsIGJ1ZmZlcikKVG9Eb21haW4oc3RyLCBhbHBoYSA9IGZhbHNlKQogIChhLCBzKSA9PgogIChhLCBzKSA9PgogIGNoID0+CkROU1F1ZXJ5KGRvbWFpbikKRE5TUmVzcG9uc2UoYnVmZmVyKQpDTEkKICBjb25zdHJ1Y3Rvcihwcm9tcHQpCiAgZ2V0bGluZSgpCiAgd2FpdFJlYWQoZmlsZSkKICBmZCA9PiAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICgpID0+CiAgcmVhZExpbmUoZmlsZSkKICBydW4oY2FsbGJhY2spCiAgcHJpbnRTdGF0dXMoLi4uYXJncykKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKCkgPT4KICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAobGV2ZWwsIG1zZykgPT4KICBib2R5OiBmdW5jdGlvbiooKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgogIGRhdGEgPT4KICAoKSA9PgogIG9uQ2xvc2Uod3MsIHN0YXR1cywgcmVhc29uLCBlcnJvcikKKCkgPT4KICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZywgZmlyc3QsIGZpbmFsKQogIG9uRXJyb3Iod3MsIGVycm9yKQpQcmludE1lc3NhZ2UobXNnKQogIGdldCBjb25uZWN0aW9ucygpCiAgcXVpdCh3aHkpCkdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGEgPT4KKFtvcHRuYW1lLCBvcHRpb25dKSA9PgogIG8gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					862,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								261,
								317
							],
							[
								424,
								451
							],
							[
								655,
								682
							],
							[
								890,
								926
							],
							[
								1306,
								1343
							],
							[
								1384,
								1394
							],
							[
								1434,
								1444
							],
							[
								1484,
								1489
							],
							[
								1532,
								1557
							],
							[
								1961,
								1989
							],
							[
								2342,
								2345
							],
							[
								2350,
								2369
							],
							[
								2412,
								2421
							],
							[
								2543,
								2570
							],
							[
								2608,
								2634
							],
							[
								2668,
								2674
							],
							[
								2805,
								2834
							],
							[
								2907,
								2926
							],
							[
								3099,
								3119
							],
							[
								3264,
								3292
							],
							[
								3362,
								3372
							],
							[
								3583,
								3589
							],
							[
								3801,
								3815
							],
							[
								4436,
								4483
							],
							[
								4613,
								4629
							],
							[
								5318,
								5336
							],
							[
								5505,
								5529
							],
							[
								5850,
								5855
							],
							[
								5988,
								5995
							],
							[
								6328,
								6334
							],
							[
								7002,
								7036
							],
							[
								7310,
								7315
							],
							[
								7409,
								7429
							],
							[
								8340,
								8356
							],
							[
								8445,
								8477
							],
							[
								9067,
								9085
							],
							[
								9098,
								9128
							],
							[
								9413,
								9430
							],
							[
								9675,
								9695
							],
							[
								9792,
								9827
							],
							[
								9967,
								9981
							],
							[
								9995,
								10017
							],
							[
								10126,
								10130
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function GetPrompt(prompt2)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt)",
							"getline()",
							" function waitRead(file)",
							"fd => (resolve, reject) =>",
							" () =>",
							"async function readLine(file)",
							"async run(callback)",
							"printStatus(...args)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"async onConnect(ws, req)",
							"() =>",
							"data =>",
							" () =>",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onRequest(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							" function PrintMessage(msg)",
							"get connections()",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AQAAAAAAAAAAAAAAFwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 34194,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANlBAAAAAAAA2kEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2UEAAAAAAADZQQAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAADEQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuUEAAAAAAAC5QQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAAC7QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuUEAAAAAAAC5QQAAAAAAAAAAAAAAAFRA"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALtBAAAAAAAAvUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAu0EAAAAAAAC7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "resp"
					},
					"BAAAALxBAAAAAAAAvUEAAAAAAAAAAAAAvUEAAAAAAAC+QQAAAAAAAAAAAAC+QQAAAAAAAL9BAAAAAAAAAAAAAL9BAAAAAAAAwEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvEEAAAAAAAC8QQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAMBBAAAAAAAAwUEAAAAAAAAAAAAAwUEAAAAAAADCQQAAAAAAAAAAAADCQQAAAAAAAMNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwEEAAAAAAADAQQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " resp?.type"
					},
					"CwAAAMNBAAAAAAAAxEEAAAAAAAAAAAAAxEEAAAAAAADFQQAAAAAAAAAAAADFQQAAAAAAAMZBAAAAAAAAAAAAAMZBAAAAAAAAx0EAAAAAAAAAAAAAx0EAAAAAAADIQQAAAAAAAAAAAADIQQAAAAAAAMlBAAAAAAAAAAAAAMlBAAAAAAAAykEAAAAAAAAAAAAAykEAAAAAAADLQQAAAAAAAAAAAADLQQAAAAAAAMxBAAAAAAAAAAAAAMxBAAAAAAAAzUEAAAAAAAAAAAAAzUEAAAAAAADOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw0EAAAAAAADDQQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+kEAAAAAAAD6QQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/src/qjsm.c",
			"settings":
			{
				"buffer_size": 52807,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-net/lib/callback.c",
			"settings":
			{
				"buffer_size": 666,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "#!/usr/bin/env qjsm\nimport { client, createServer, LLL_INFO, LLL_NOTICE, LLL_USER, Request, setLog, URL } from 'net.so';\nimport * as os from 'os';\nimport * as std from 'std';\n\nconst connections = new Set();\n\nlet debug = 0,\n  params,\n  repl,\n  command = false;\n\nfunction MakePrompt(prefix, suffix, commandMode = false) {\n  return `\\x1b[38;5;40m${prefix} \\x1b[38;5;33m${suffix}\\x1b[0m ${commandMode ? 'COMMAND' : 'DATA'}`;\n}\n\nfunction GetPrompt(prompt2) {\n  let name = scriptArgs[0]\n    .replace(/.*\\//, '')\n    .replace(/-/g, ' ')\n    .replace(/\\.[^\\/.]*$/, '');\n\n  let [prefix, suffix] = [name, prompt2];\n\n  return MakePrompt(prefix, suffix, command);\n}\n\nfunction FromDomain(buffer) {\n  let s = '',\n    i = 0,\n    u8 = new Uint8Array(buffer);\n  for(;;) {\n    let len = u8[i++];\n    if(len == 0) return s;\n    if(s != '') s += '.';\n    while(len--) s += String.fromCharCode(u8[i++]);\n  }\n}\n\nfunction WriteFile(filename, buffer) {\n  let fd;\n  let err = {};\n  if((fd = std.open(filename, 'w+', err))) {\n    let r = typeof buffer == 'string' ? (fd.puts(buffer), fd.tell()) : fd.write(buffer, 0, buffer.byteLength);\n    fd.close();\n    console.log(`r`, r);\n    if(r >= 0) console.log(`Wrote '${filename}'.`);\n    else console.log(`Error writing '${filename}': ${std.strerror(err.errno)}`);\n    return r;\n  }\n}\n\nfunction ToDomain(str, alpha = false) {\n  return str.split('.').reduce(alpha ? (a, s) => a + String.fromCharCode(s.length) + s : (a, s) => a.concat([s.length, ...s.split('').map(ch => ch.charCodeAt(0))]), alpha ? '' : []);\n}\n\nfunction DNSQuery(domain) {\n  let type = 0x01;\n  if(/^([0-9]+\\.?){4}$/.test(domain)) {\n    domain = domain.split('.').reverse().join('.') + '.in-addr.arpa';\n    type = 0x0c;\n  }\n\n  let outBuf = new Uint8Array([0xff, 0xff, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, ...ToDomain(domain), 0x00, 0x00, type, 0x00, 0x01]).buffer;\n  new DataView(outBuf).setUint16(0, outBuf.byteLength - 2, false);\n  return outBuf;\n}\n\nfunction DNSResponse(buffer) {\n  let u8 = new Uint8Array(buffer);\n  let header = new DataView(buffer, 0, 12);\n  let ofs = 2 + header.getUint16(0, false);\n  header = new DataView(buffer, ofs, 12);\n  let type = header.getUint16(2, false);\n  ofs += 12;\n  let addr;\n  if(type == 0x0c) addr = FromDomain(buffer.slice(ofs));\n  else addr = u8.slice(-4).join('.');\n  return addr;\n}\n\nclass CLI {\n  constructor(prompt) {\n    this.prompt = prompt + '> ';\n  }\n\n  getline() {\n    std.out.puts('\\x1b[2K\\x1b[1G');\n    std.out.puts(this.prompt);\n    std.out.flush();\n\n    return readLine(std.in);\n\n    function waitRead(file) {\n      return new Promise(\n        (fd => (resolve, reject) => {\n          os.setReadHandler(fd, () => {\n            os.setReadHandler(fd, null);\n            resolve(file);\n          });\n        })(file.fileno())\n      );\n    }\n\n    async function readLine(file) {\n      await waitRead(file);\n      return file.getline();\n    }\n  }\n\n  async run(callback) {\n    for(;;) {\n      let line = await this.getline();\n\n      if(line === null) break;\n      if(line === '') continue;\n\n      callback(line);\n    }\n    std.exit(0);\n  }\n\n  printStatus(...args) {\n    std.out.puts('\\x1b[2K\\x1b[1G');\n    std.out.flush();\n    console.log(...args);\n    std.out.puts(this.prompt);\n    std.out.flush();\n  }\n}\n\nasync function main(...args) {\n  let headers = [];\n  params = GetOpt(\n    {\n      verbose: [false, (a, v) => (v | 0) + 1, 'v'],\n      listen: [false, null, 'l'],\n      binary: [false, null, 'b'],\n      connect: [false, null, 'c'],\n      client: [false, null, 'C'],\n      server: [false, null, 'S'],\n      debug: [false, () => ++debug, 'x'],\n      address: [true, null, 'a'],\n      port: [true, null, 'p'],\n      method: [true, null, 'm'],\n      output: [true, null, 'o'],\n      protocol: [true, null, 'P'],\n      header: [\n        true,\n        arg => {\n          const pos = arg.search(/: /);\n          const name = arg.substring(0, pos);\n          const value = arg.substring(pos + 2);\n          headers.push([name, value]);\n        },\n        'H'\n      ],\n      'ssl-cert': [true, null],\n      'ssl-private-key': [true, null],\n      '@': 'url,'\n    },\n    args\n  );\n\n  const { 'ssl-cert': sslCert = 'localhost.crt', 'ssl-private-key': sslPrivateKey = 'localhost.key', method } = params;\n  const listen = params.connect && !params.listen ? false : true;\n  const server = !params.client || params.server;\n  const { binary, protocol } = params;\n  let urls = params['@'];\n\n  function createWS(url, callbacks, listen = 0) {\n    let repl;\n    let is_dns,\n      urlObj = new URL(url);\n\n    setLog(LLL_USER | (((debug ? LLL_INFO : LLL_NOTICE) << 1) - 1), (level, msg) => {\n      let p = ['ERR', 'WARN', 'NOTICE', 'INFO', 'DEBUG', 'PARSER', 'HEADER', 'EXT', 'CLIENT', 'LATENCY', 'MINNET', 'THREAD'][level && Math.log2(level)] ?? level + '';\n      if(p == 'INFO' || /RECEIVE_CLIENT_HTTP_READ|\\[mux|__lws|\\[wsicli|lws_/.test(msg)) return;\n      msg = msg.replace(/\\n/g, '\\\\n');\n      if(params.verbose > 1 || params.debug) std.puts(p.padEnd(8) + '\\t' + msg + '\\n');\n    });\n\n    if(params.verbose) console.log(`Connecting to '${url}'...`);\n\n    globalThis.PrintMessage = PrintMessage;\n\n    const fn = [client, createServer][+listen];\n\n    return fn(url, {\n      sslCert,\n      sslPrivateKey,\n      method,\n      binary,\n      protocol,\n      block: false,\n      body: function* () {\n        yield '{ \"test\": 1234 }';\n      },\n      headers: {\n        'user-agent': 'minnet',\n        ...Object.fromEntries(headers)\n      },\n      ...callbacks,\n      async onConnect(ws, req) {\n        if(params.verbose) console.log('onConnect', { ws, req });\n        connections.add(ws);\n        Object.assign(globalThis, { ws, req });\n\n        const remote = `${ws.address}:${ws.port}`;\n\n        try {\n          const module = await import('/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js').catch(() => ({\n            REPL: CLI\n          }));\n\n          repl = globalThis.repl = new module.REPL(GetPrompt(remote));\n\n          repl.run(data => {\n            if(command) return repl.evalAndPrint(data);\n            if(typeof data == 'string' && data.length > 0) {\n              console.log(`Sending '${data}'`);\n              for(let connection of connections) {\n                connection.send(data);\n              }\n            }\n          });\n\n          repl.commands['§'] = () => {\n            command = !command;\n            repl.readlineRemovePrompt();\n            repl.prompt = repl.ps1 = GetPrompt(remote) + '> ';\n            repl.readlinePrintPrompt();\n          };\n        } catch(err) {\n          console.log('error:', err.message + '\\n' + err.stack);\n        }\n\n        // console.log('onConnect', { remote, repl });\n\n        repl.printStatus(`Connected to ${remote}`);\n        if(req) {\n          const { url } = req;\n          const { protocol, port } = url;\n          if((is_dns = protocol == 'udp' && port == 53)) {\n            ws.binary = true;\n            ws.send(DNSQuery('libwebsockets.org'));\n          }\n        }\n      },\n      onClose(ws, status, reason, error) {\n        console.log('onClose', { ws, status, reason, error });\n\n        quit(`Connection ${error ? 'error' : 'closed'}: ${reason}`);\n\n        connections.delete(ws);\n\n        if(repl) {\n          repl.printStatus(`Closed (${status}): ${reason}`);\n          os.setTimeout(() => {\n            repl.exit(status != 1000 ? 1 : 0);\n          }, 100);\n        }\n      },\n      onRequest(req, resp) {\n        console.log('onRequest', console.config({ compact: false }), { req, resp });\n        let { headers } = resp;\n\n        let type = (headers['content-type'] ?? 'text/html').replace(/;.*/g, '');\n        let extension = '.' + type.replace(/.*\\//g, '');\n        let { url } = req || {};\n\n        if(url) {\n          let { path } = url;\n          let name = path.replace(/\\/[a-z]\\/.*/g, '').replace(/.*\\//g, '');\n\n          if(name == '') name = 'index';\n          if(!name.endsWith(extension)) name += extension;\n\n          let buffer = resp.body;\n          // let text = toString(buffer);\n          console.log('onRequest', { buffer });\n\n          WriteFile(params.output ?? name ?? 'output.bin', buffer);\n        }\n\n        let next = urls.length && urls.shift();\n\n        if(next) {\n          req = new Request(next);\n          return req;\n        } else {\n          return -1;\n        }\n      },\n      onFd(fd, rd, wr) {\n        os.setReadHandler(fd, rd);\n        os.setWriteHandler(fd, wr);\n      },\n      onMessage(ws, msg, first, final) {\n        globalThis.msg = msg;\n\n        if(typeof globalThis.onMessage == 'function') {\n          globalThis.onMessage(msg);\n          return;\n        }\n\n        //globalThis.onMessage(msg);\n        PrintMessage(msg);\n        //        console.log('onMessage', console.config({ compact: 1 }), msg);\n        //startInteractive();\n\n        if(typeof msg == 'string') {\n          msg = msg.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n          msg = msg.substring(0, 100);\n        }\n\n        if(is_dns) {\n          let response = DNSResponse(msg);\n        } else {\n        }\n      },\n      onError(ws, error) {}\n    });\n\n    function PrintMessage(msg) {\n      try {\n        if(/^{.*}\\s*$/gm.test(msg)) {\n          let obj = JSON.parse(msg);\n          msg = inspect(obj, { colors: true, depth: Infinity, compact: 3 });\n        }\n      } catch(e) {}\n\n      repl.printStatus('Message: ' + msg);\n    }\n    Object.assign(globalThis, {\n      get connections() {\n        return [...connections];\n      }\n    });\n  }\n\n  try {\n    let instance = createWS(urls.shift(), {});\n\n    console.log('instance', instance, instance[Symbol.asyncIterator]);\n  } catch(error) {\n    quit('ERROR: ' + error.message);\n  }\n\n  function quit(why) {\n    if(why) std.err.puts(why + '\\n');\n    if(repl) repl.cleanup(why);\n    std.exit(0);\n  }\n}\n\nfunction GetOpt(options = {}, args) {\n  let s, l;\n  let r = {};\n  let positional = (r['@'] = []);\n  if(!(options instanceof Array)) options = Object.entries(options);\n  const findOpt = a => options.find(([optname, option]) => (Array.isArray(option) ? option.indexOf(a) != -1 : false) || a == optname);\n  let [, params] = options.find(o => o[0] == '@') || [];\n  if(typeof params == 'string') params = params.split(',');\n  for(let i = 0; i < args.length; i++) {\n    const a = args[i];\n    let o;\n    if(a[0] == '-') {\n      let n, v, x, y;\n      if(a[1] == '-') l = true;\n      else s = true;\n      x = s ? 1 : 2;\n      if(s) y = 2;\n      else if((y = a.indexOf('=')) == -1) y = a.length;\n      n = a.substring(x, y);\n      if((o = findOpt(n))) {\n        const [has_arg, handler] = o[1];\n        if(has_arg) {\n          if(a.length > y) v = a.substring(y + (a[y] == '='));\n          else v = args[++i];\n        } else {\n          v = true;\n        }\n\n        try {\n          handler(v, r[o[0]], options, r);\n        } catch(err) {}\n\n        r[o[0]] = v;\n        continue;\n      }\n    }\n\n    if(params.length) {\n      const p = params.shift();\n      if((o = findOpt(p))) {\n        const [, [, handler]] = o;\n        let v = a;\n        if(typeof handler == 'function')\n          try {\n            v = handler(v, r[o[0]], options, r);\n          } catch(err) {}\n\n        const n = o[0];\n        r[o[0]] = v;\n        continue;\n      }\n    }\n\n    r['@'] = [...(r['@'] ?? []), a];\n  }\n\n  return r;\n}\n\ntry {\n   main(...scriptArgs.slice(1));\n} catch(error) {\n  console.log(`FAIL: ${error && error.message}\\n${error && error.stack}`);\n  std.exit(1);\n}\n",
			"file": "quickjs/qjs-net/wscli.js",
			"file_size": 11432,
			"file_write_time": 133424141242830462,
			"settings":
			{
				"buffer_size": 11432,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIAdAAAAAAAAgh0AAAAAAAAAAAAAFxwAAAAAAAAZHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxwAAAAAAACAHQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"doxy_enter",
					null,
					"AgAAAMYcAAAAAAAAxxwAAAAAAAAAAAAAxxwAAAAAAADPHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhwAAAAAAADGHAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "*/"
					},
					"AwAAAGIcAAAAAAAAYxwAAAAAAAAAAAAAyBwAAAAAAADIHAAAAAAAAAgAAAAgICAgICAgIGMcAAAAAAAAZBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhwAAAAAAABiHAAAAAAAAAAAAAAAAFBA"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAKscAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACtHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxwAAAAAAACrHAAAAAAAAAAAAAAAADBA"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGkcAAAAAAAAahwAAAAAAAAAAAAAahwAAAAAAABrHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRwAAAAAAABpHAAAAAAAAAAAAAAAAEBA"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAGMcAAAAAAAAYxwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAZBwAAAAAAABkHAAAAAAAAAAAAAAAAEhA"
				],
				[
					53,
					5,
					"right_delete",
					null,
					"BQAAABQcAAAAAAAAFBwAAAAAAAABAAAAIBQcAAAAAAAAFBwAAAAAAAABAAAAIBQcAAAAAAAAFBwAAAAAAAABAAAAIBQcAAAAAAAAFBwAAAAAAAABAAAALxQcAAAAAAAAFBwAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAFBwAAAAAAAAUHAAAAAAAAAAAAAAAACBA"
				],
				[
					55,
					1,
					"left_delete",
					null,
					"AQAAAF0cAAAAAAAAXRwAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAXhwAAAAAAABeHAAAAAAAAAAAAAAAACBA"
				],
				[
					68,
					1,
					"paste",
					null,
					"AQAAABYcAAAAAAAATRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhwAAAAAAAAWHAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"paste",
					null,
					"AgAAAC4cAAAAAAAANRwAAAAAAAAAAAAANRwAAAAAAAA1HAAAAAAAAAkAAABvbkNvbm5lY3Q",
					"AQAAAAAAAAABAAAALhwAAAAAAAA3HAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AgAAADocAAAAAAAAUxwAAAAAAAAAAAAAUxwAAAAAAABTHAAAAAAAAAwAAAByZW1vdGUsIHJlcGw",
					"AQAAAAAAAAABAAAAOhwAAAAAAABGHAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					2,
					"right_delete",
					null,
					"AgAAAB4cAAAAAAAAHhwAAAAAAAABAAAALx4cAAAAAAAAHhwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAHhwAAAAAAAAeHAAAAAAAAAAAAAAAAFZA"
				],
				[
					96,
					1,
					"cut",
					null,
					"AQAAAFgcAAAAAAAAWBwAAAAAAAAOAAAAaWYoZXJyb3IpIHsKICA",
					"AQAAAAAAAAABAAAAWBwAAAAAAABmHAAAAAAAAAAAAAAAADBA"
				],
				[
					99,
					1,
					"cut",
					null,
					"AQAAAIccAAAAAAAAhxwAAAAAAAAIAAAAICAgICAgfQo",
					"AQAAAAAAAAABAAAAhxwAAAAAAACPHAAAAAAAAAAAAAAAADBA"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "${error"
					},
					"BwAAAHEcAAAAAAAAchwAAAAAAAAAAAAAchwAAAAAAABzHAAAAAAAAAAAAABzHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAdRwAAAAAAAAAAAAAdRwAAAAAAAB2HAAAAAAAAAAAAAB2HAAAAAAAAHccAAAAAAAAAAAAAHccAAAAAAAAeBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRwAAAAAAABxHAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAHgcAAAAAAAAeRwAAAAAAAAAAAAAeRwAAAAAAAB6HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBwAAAAAAAB4HAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " 'er"
					},
					"BAAAAHocAAAAAAAAexwAAAAAAAAAAAAAexwAAAAAAAB8HAAAAAAAAAAAAAB8HAAAAAAAAH0cAAAAAAAAAAAAAH0cAAAAAAAAfhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehwAAAAAAAB6HAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "ror'"
					},
					"BAAAAH4cAAAAAAAAfxwAAAAAAAAAAAAAfxwAAAAAAACAHAAAAAAAAAAAAACAHAAAAAAAAIEcAAAAAAAAAAAAAIEcAAAAAAAAghwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhwAAAAAAAB+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAIIcAAAAAAAAgxwAAAAAAAAAAAAAgxwAAAAAAACEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghwAAAAAAACCHAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " 'closed'}"
					},
					"CgAAAIQcAAAAAAAAhRwAAAAAAAAAAAAAhRwAAAAAAACGHAAAAAAAAAAAAACGHAAAAAAAAIccAAAAAAAAAAAAAIccAAAAAAAAiBwAAAAAAAAAAAAAiBwAAAAAAACJHAAAAAAAAAAAAACJHAAAAAAAAIocAAAAAAAAAAAAAIocAAAAAAAAixwAAAAAAAAAAAAAixwAAAAAAACMHAAAAAAAAAAAAACMHAAAAAAAAI0cAAAAAAAAAAAAAI0cAAAAAAAAjhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBwAAAAAAACEHAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					5,
					"right_delete",
					null,
					"BQAAAI4cAAAAAAAAjhwAAAAAAAABAAAAZY4cAAAAAAAAjhwAAAAAAAABAAAAco4cAAAAAAAAjhwAAAAAAAABAAAAco4cAAAAAAAAjhwAAAAAAAABAAAAb44cAAAAAAAAjhwAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAjhwAAAAAAACOHAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFUcAAAAAAAAVhwAAAAAAAAAAAAAVhwAAAAAAABiHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRwAAAAAAABVHAAAAAAAAP///////+9/"
				],
				[
					137,
					2,
					"right_delete",
					null,
					"AwAAAPUcAAAAAAAA9RwAAAAAAAABAAAAL1YcAAAAAAAAVhwAAAAAAAAMAAAAICAgICAgICAgICAg6RwAAAAAAADpHAAAAAAAAAEAAAAq",
					"AQAAAAAAAAABAAAA9RwAAAAAAAD1HAAAAAAAAAAAAAAAADBA"
				],
				[
					140,
					4,
					"right_delete",
					null,
					"BAAAAKMcAAAAAAAAoxwAAAAAAAACAAAAICCjHAAAAAAAAKMcAAAAAAAAAQAAAC+jHAAAAAAAAKMcAAAAAAAAAQAAAC+jHAAAAAAAAKMcAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAoxwAAAAAAACjHAAAAAAAAAAAAAAAADBA"
				],
				[
					142,
					1,
					"cut",
					null,
					"AQAAAKMcAAAAAAAAoxwAAAAAAABAAAAAICByZXBsLnByaW50U3RhdHVzKCdvbkNsb3NlJywgeyB3cywgc3RhdHVzLCByZWFzb24sIGVycm9yIH0pOwogIA",
					"AQAAAAAAAAABAAAAoxwAAAAAAADjHAAAAAAAAAAAAAAAADBA"
				],
				[
					148,
					2,
					"right_delete",
					null,
					"AgAAAH0dAAAAAAAAfR0AAAAAAAABAAAAKn0dAAAAAAAAfR0AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAfR0AAAAAAAB9HQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAfR0AAAAAAAB9HQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "awa"
					},
					"AwAAABwsAAAAAAAAHSwAAAAAAAAAAAAAHSwAAAAAAAAeLAAAAAAAAAAAAAAeLAAAAAAAAB8sAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHCwAAAAAAAAcLAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					3,
					"left_delete",
					null,
					"AwAAAB4sAAAAAAAAHiwAAAAAAAABAAAAYR0sAAAAAAAAHSwAAAAAAAABAAAAdxwsAAAAAAAAHCwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAHywAAAAAAAAfLAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwsAAAAAAAAHSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHCwAAAAAAAAcLAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
			"settings":
			{
				"buffer_size": 27398,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-net/src/minnet-client.c",
			"settings":
			{
				"buffer_size": 32830,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-modules/quickjs-internal.h",
			"settings":
			{
				"buffer_size": 37572,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-modules/src/utils.c",
			"settings":
			{
				"buffer_size": 93046,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"Pretty Shell: Minify"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/janos/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js",
		"/home/janos/Projects/plot-cv/doc-scanner.js",
		"/home/janos/Projects/plot-cv/config.js",
		"/home/janos/Projects/plot-cv/deconflict.js",
		"/home/janos/Projects/plot-cv/debuggerprotocol.js",
		"/home/janos/Projects/plot-cv/debugger.js",
		"/home/janos/Projects/plot-cv/convert-imports.js",
		"/home/janos/Projects/plot-cv/esparse.js",
		"/home/janos/Projects/plot-cv/extract-structs.js",
		"/home/janos/Projects/plot-cv/fetch-post-prices.js",
		"/home/janos/Projects/plot-cv/ffi.js",
		"/home/janos/Projects/plot-cv/fontsample.js",
		"/home/janos/Projects/plot-cv/grammar-arith.js",
		"/home/janos/Projects/plot-cv/grammar-C.js",
		"/home/janos/Projects/plot-cv/grammar-c.js",
		"/home/janos/Projects/plot-cv/grammar-css3.js",
		"/home/janos/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Projects/plot-cv/grammar-INI.js",
		"/home/janos/Projects/plot-cv/httpd.js",
		"/home/janos/Projects/plot-cv/ini-grammar.js",
		"/home/janos/Projects/plot-cv/io-helpers.js",
		"/home/janos/Projects/plot-cv/list-directory.js",
		"/home/janos/Projects/plot-cv/list-exports.js",
		"/home/janos/Projects/plot-cv/list-exports2.js",
		"/home/janos/Projects/plot-cv/load-ast.js",
		"/home/janos/Projects/plot-cv/meriyah.js",
		"/home/janos/Projects/plot-cv/workertest.js",
		"/home/janos/Projects/plot-cv/worker.js",
		"/home/janos/Projects/plot-cv/userscript-test.js",
		"/home/janos/Projects/plot-cv/upload.html",
		"/home/janos/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/untar.c",
		"/home/janos/Projects/plot-cv/tmpx.js",
		"/home/janos/Projects/plot-cv/test-xml.js",
		"/home/janos/Projects/plot-cv/test-wru.js",
		"/home/janos/Projects/plot-cv/test-websocket.js",
		"/home/janos/Projects/plot-cv/test-voronoi.js",
		"/home/janos/Projects/plot-cv/test-video.js",
		"/home/janos/Projects/plot-cv/test-util.js",
		"/home/janos/Projects/plot-cv/test-utf8.js",
		"/home/janos/Projects/plot-cv/test-umat.js",
		"/home/janos/Projects/plot-cv/test-trkl.js",
		"/home/janos/Projects/plot-cv/test-sqlite3.js",
		"/home/janos/Projects/plot-cv/test-spawn.js",
		"/home/janos/Projects/plot-cv/test-sockets.js",
		"/home/janos/Projects/plot-cv/test-shparse.js",
		"/home/janos/Projects/plot-cv/test-rpc.js",
		"/home/janos/Projects/plot-cv/test-repl.js",
		"/home/janos/Projects/plot-cv/test-renderer.js",
		"/home/janos/Projects/plot-cv/test-readline.js",
		"/home/janos/Projects/plot-cv/test-readdir.js",
		"/home/janos/Projects/plot-cv/test-quickjs.js",
		"/home/janos/Projects/plot-cv/test-proxy.js",
		"/home/janos/Projects/plot-cv/test-pointlist.js",
		"/home/janos/Projects/plot-cv/test-pointer.js",
		"/home/janos/Projects/plot-cv/test-path.js",
		"/home/janos/Projects/plot-cv/test-parsexml.js",
		"/home/janos/Projects/plot-cv/test-parse.js",
		"/home/janos/Projects/plot-cv/test-opencv.js",
		"/home/janos/Projects/plot-cv/test-octagon.js",
		"/home/janos/Projects/plot-cv/test-ngql.js",
		"/home/janos/Projects/plot-cv/test-net.js",
		"/home/janos/Projects/plot-cv/test-mmap.js",
		"/home/janos/Projects/plot-cv/test-minnet.js",
		"/home/janos/Projects/plot-cv/test-meriyah.js",
		"/home/janos/Projects/plot-cv/ol-marker.js",
		"/home/janos/Projects/plot-cv/ol-map.js",
		"/home/janos/Projects/plot-cv/make-bitmap.js",
		"/home/janos/Projects/plot-cv/list-proxies.js",
		"/home/janos/Projects/plot-cv/eagle2gerber.js",
		"/home/janos/Projects/plot-cv/test-exception.js",
		"/home/janos/Projects/plot-cv/test-childprocess.js",
		"/home/janos/Projects/plot-cv/test-bjson.js",
		"/home/janos/Projects/plot-cv/test-ansitrunc.c",
		"/home/janos/Projects/plot-cv/svg-scale.js",
		"/home/janos/Projects/plot-cv/server.js",
		"/home/janos/Projects/plot-cv/search-engine.js",
		"/home/janos/Projects/plot-cv/resolve-imports2.js",
		"/home/janos/Projects/plot-cv/readfile.js",
		"/home/janos/Projects/plot-cv/read-deps.js",
		"/home/janos/Projects/plot-cv/react-simple-code-editor.js",
		"/home/janos/Projects/plot-cv/pcb-conversion.js",
		"/home/janos/Projects/plot-cv/knopf-schwarz-o12mm-cliff-cl178862.html",
		"/home/janos/Projects/plot-cv/dom-helpers.js",
		"/home/janos/Projects/pictest/traced_back.svg",
		"/home/janos/Projects/plot-cv/param.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/output.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/janos/Projects/plot-cv/lib/stream/utils.js",
		"/home/janos/Projects/plot-cv/svg-crop-pad.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_png.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"await ",
			"client_finalize",
			"onClose",
			"exception",
			"current_exce",
			"}\\n\n",
			"}\\n\n([^\\n])",
			"}\\n([^\\n])",
			"}\\n\n([^\\n])",
			"remove",
			"ZipFolder",
			"<<<<",
			"ExecTool",
			"outdir",
			"'str'",
			"optionsArray",
			"Bottom",
			"compact",
			"boxes",
			"join",
			"\nfunction outputBytes(mat) {\n  return '['+[...rowIterator(mat)].map(a => '[ '+[...a].map(n => '0x'+n.toString(16).padStart(2, \n'0')).join(',')+' ],').join('\\n')+']';\n}",
			"cv\\.",
			"writeROI",
			"cvtColor",
			"g",
			"=> ",
			"));",
			"mod\\(",
			"toMap",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 791,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
							"function_name_status_row": 23,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									261,
									317
								],
								[
									424,
									451
								],
								[
									655,
									682
								],
								[
									890,
									926
								],
								[
									1306,
									1343
								],
								[
									1384,
									1394
								],
								[
									1434,
									1444
								],
								[
									1484,
									1489
								],
								[
									1532,
									1557
								],
								[
									1961,
									1989
								],
								[
									2342,
									2345
								],
								[
									2350,
									2369
								],
								[
									2412,
									2421
								],
								[
									2543,
									2570
								],
								[
									2608,
									2634
								],
								[
									2668,
									2674
								],
								[
									2805,
									2834
								],
								[
									2907,
									2926
								],
								[
									3099,
									3119
								],
								[
									3264,
									3292
								],
								[
									3362,
									3372
								],
								[
									3583,
									3589
								],
								[
									3801,
									3815
								],
								[
									4436,
									4483
								],
								[
									4613,
									4629
								],
								[
									5318,
									5336
								],
								[
									5505,
									5529
								],
								[
									5850,
									5855
								],
								[
									5988,
									5995
								],
								[
									6328,
									6334
								],
								[
									7002,
									7036
								],
								[
									7310,
									7315
								],
								[
									7409,
									7429
								],
								[
									8340,
									8356
								],
								[
									8445,
									8477
								],
								[
									9067,
									9085
								],
								[
									9098,
									9128
								],
								[
									9413,
									9430
								],
								[
									9675,
									9695
								],
								[
									9792,
									9827
								],
								[
									9967,
									9981
								],
								[
									9995,
									10017
								],
								[
									10126,
									10130
								]
							],
							"symlist":
							[
								"MakePrompt(prefix, suffix, commandMode = false)",
								"GetPrompt(prompt2)",
								"FromDomain(buffer)",
								"WriteFile(filename, buffer)",
								"ToDomain(str, alpha = false)",
								"\t(a, s) =>",
								"\t(a, s) =>",
								"  ch =>",
								"DNSQuery(domain)",
								"DNSResponse(buffer)",
								"CLI",
								"  constructor(prompt)",
								"  getline()",
								"  waitRead(file)",
								"  fd => (resolve, reject) =>",
								"\t() =>",
								"  readLine(file)",
								"  run(callback)",
								"  printStatus(...args)",
								"  main(...args)",
								"\t(a, v) =>",
								"\t() =>",
								"\targ =>",
								"  createWS(url, callbacks, listen = 0)",
								"\t(level, msg) =>",
								"  body: function*()",
								"  onConnect(ws, req)",
								"() =>",
								"  data =>",
								"\t() =>",
								"  onClose(ws, status, reason, error)",
								"() =>",
								"  onRequest(req, resp)",
								"  onFd(fd, rd, wr)",
								"  onMessage(ws, msg, first, final)",
								"  onError(ws, error)",
								"PrintMessage(msg)",
								"  get connections()",
								"  quit(why)",
								"GetOpt(options = {}, args)",
								"  findOpt = a =>",
								"([optname, option]) =>",
								"  o =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681502964.68,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "upload-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34194,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697939836.62,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs/qjs-modules/src/qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52807,
						"regions":
						{
						},
						"selection":
						[
							[
								51776,
								51786
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2111,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697940260.9,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 31110.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/qjs-net/lib/callback.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 666,
						"regions":
						{
						},
						"selection":
						[
							[
								666,
								666
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 28,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697940327.47,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs/qjs-net/wscli.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11432,
						"regions":
						{
						},
						"selection":
						[
							[
								6125,
								6125
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": -1,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697944419.65,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2929.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27398,
						"regions":
						{
						},
						"selection":
						[
							[
								16774,
								16780
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 624,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1697940957.59,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8937.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs/qjs-net/src/minnet-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32830,
						"regions":
						{
						},
						"selection":
						[
							[
								29296,
								29311
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1111,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697941022.01,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16144.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/qjs-modules/quickjs-internal.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37572,
						"regions":
						{
						},
						"selection":
						[
							[
								5580,
								5589
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 146,
							"show_line_column": "disabled",
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697940143.01,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1819.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "quickjs/qjs-modules/src/utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 93046,
						"regions":
						{
						},
						"selection":
						[
							[
								60926,
								60926
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2548,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697939837.64,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37830.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
