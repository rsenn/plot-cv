{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Import",
				"ImportSpecifier"
			],
			[
				"identi",
				"identifier"
			],
			[
				"templ",
				"template_literal"
			],
			[
				"escape",
				"escapeEncountered"
			],
			[
				"SO_RE",
				"SO_REUSEADDR"
			],
			[
				"ret",
				"ret"
			],
			[
				"ArraBu",
				"ArrayBufToString\t(test-ffi.js)"
			],
			[
				"bind",
				"bind"
			],
			[
				"errno",
				"errno"
			],
			[
				"port",
				"port"
			],
			[
				"surface",
				"surface.type"
			],
			[
				"v",
				"value\tabc"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32\tabc"
			],
			[
				"JSCFun",
				"JSCFunctionListEntry\tabc"
			],
			[
				"setWi",
				"setWindowProperty\tabc"
			],
			[
				"let",
				"let\tES6 Let"
			],
			[
				"Immu",
				"ImmutablePath"
			],
			[
				"node",
				"node\tabc"
			],
			[
				"ptr",
				"description-reverse\tArray"
			],
			[
				"js_cv_get",
				"js_cv_get_structuring_element\tabc"
			],
			[
				"h",
				"h"
			],
			[
				"forma",
				"formattedCalls"
			],
			[
				"Al",
				"AlignmentAttrs"
			],
			[
				"printExp",
				"printExportStatement"
			],
			[
				"previous",
				"previousTimestamp"
			],
			[
				"Github",
				"GithubListRepositories"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"ali",
				"alignmentTransform"
			],
			[
				"align",
				"alignmentTransform"
			],
			[
				"instru",
				"instrumentateParser"
			],
			[
				"Eleme",
				"ElementToClass"
			],
			[
				"Function",
				"FunctionArgument"
			],
			[
				"Varia",
				"VariableDeclarator"
			],
			[
				"PipeTo",
				"PipeToRepeater"
			],
			[
				"ini",
				"initializer"
			],
			[
				"parseFunc",
				"parseFunctionParametersAndBody"
			],
			[
				"Calc",
				"CalculateArc"
			],
			[
				"package",
				"packageGeometries"
			],
			[
				"Package",
				"PackageGeometries"
			],
			[
				"TextDec",
				"TextDecoderStream"
			],
			[
				"Generate",
				"GenerateDistinctVariableDeclarations"
			],
			[
				"decl",
				"declStatement"
			],
			[
				"Trans",
				"TransformationList"
			],
			[
				"HAVE_",
				"HAVE_MALLOC_USABLE_SIZE_DEFINITION"
			],
			[
				"js_mat_itera",
				"js_mat_iterator_class_id"
			],
			[
				"JSMat",
				"JSMatIteratorData"
			],
			[
				"mat_iterator",
				"mat_iterator_proto"
			],
			[
				"Obj",
				"ObjectBindingPattern"
			],
			[
				"Mut",
				"MutablePath"
			],
			[
				"Conso",
				"ConsoleSetup"
			],
			[
				"ES6I",
				"ES6ImportExport.prototype"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Util\nUtil.formatAnnotatedObject\n  padding\nUtil.curry\n  ret\nCurried\n  function ()\n  function (a)\n  function (a, b)\n  function (a, b, c)\n  function (a, b, c, d)\n  get()\nUtil.arityN\n  function (fn)\n  function ()\n  function (fn)\n  function (a)\n  function (fn)\n  function (a, b)\n  function (fn)\n  function (a, b, c)\n  function (fn)\n  function (a, b, c, d)\n  function (fn)\n  function (a, b, c, d, e)\nUtil.getter\n  self\n  .fn\n  .fn\nUtil.setter\n  self\n  .fn\n  .fn\nUtil.remover\nUtil.hasFn\nUtil.adder\n  self\nChooseFn\n  .fn\n  .fn\n  .fn\n  .fn\n  .fn\nUtil.updater\n  doUpdate\n  create\n  self\nUtil.once\n  function (...args)\nUtil.delay\n  function (...args)\nUtil.throttle\n  function (...args)\nUtil.debounce\n  later\n  debounced\n  .clear\n  .flush\nUtil.debounceAsync\n  function (...a)\nUtil.log\n  get: ()\n  .setFilters\n  .getFilters\nUtil.msg\nUtil.generalLog\nUtil.toSource\n  print\nUtil.debug\n  removeCircular\nUtil.type\nUtil.functionName\nUtil.className\nUtil.unwrapComponent\nUtil.componentName\nUtil.count\nUtil.parseNum\nUtil.minmax\nUtil.getExponential\nUtil.getNumberParts\nUtil.pow2\nUtil.pow10\nUtil.bitValue\nUtil.bitMask\nUtil.bitGroups\nUtil.bitStuff\nUtil.toBinary\nUtil.toBits\nUtil.getBit\nUtil.isSet\nUtil.bitCount\nUtil.toggleBit\nUtil.setBit\nUtil.clearBit\nUtil.range\nUtil.set\nUtil.inspect\nUtil.bitArrayToNumbers\nUtil.bitsToNumbers\nUtil.shuffle\nUtil.sortNum\nUtil.draw\nUtil.is\nUtil.onoff\nUtil.numbersToBits\nUtil.randomNumbers\nUtil.randomBits\nUtil.padFn\nUtil.pad\nUtil.abbreviate\nUtil.trim\nUtil.trimRight\nUtil.indent\nUtil.define\nUtil.memoizedProperties\n  get()\nUtil.copyWhole\nUtil.copyEntries\nUtil.extend\nUtil.isCloneable\nUtil.isUnextendable\n  pred\n  value\nUtil.defineGetter\nUtil.defineGetterSetter\nUtil.defineGettersSetters\nUtil.extendArray\n  function (pred)\n  function ()\n  function ()\n  function ()\n  function (value)\nUtil.adapter\n(index), getItem\n  get length()\n  get instance()\n  key(i)\n  get(key)\n  has(key)\n  set(key, value)\n*keys()\n*entries()\n  toObject()\n  toMap()\n  .localStorage\nUtil.array\nUtil.arrayFromEntries\nUtil.toMap\nUtil.extendMap\n  .entries\n  .toObject\n  .match\nUtil.objectFrom\nUtil.tail\nUtil.splice\nUtil.identity\nUtil.reverse\nUtil.keyOf\nUtil.rotateRight\nUtil.repeater\n  function* ()\n  function* ()\nUtil.repeat\nUtil.arrayDim\nUtil.flatten\nUtil.chunkArray\nUtil.partition\nUtil.intersect\nUtil.difference\nUtil.symmetricDifference\nUtil.union\nUtil.chances\nUtil.sum\nUtil.expr\n  expr\n  addArgs\n  ret\nUtil.mod\nUtil.fnName\nUtil.objName\nUtil.findKey\n  value : (v)\nUtil.find\n  pred\n  pred\n  pred\nUtil.match\n  match\nUtil.toHash\nUtil.indexOf\nUtil.greatestCommonDenominator\nUtil.leastCommonMultiple\n  function* (re, str)\nUtil.toString\n  stringFn\n  print\nUtil.dump\nUtil.ucfirst\nUtil.lcfirst\nUtil.typeOf\nUtil.camelize\nUtil.decamelize\nUtil.ifThenElse\n  function (value)\nUtil.if\nUtil.ifElse\nUtil.ifThen\n  function* (fn, arr)\nUtil.colorDump\nUtil.bucketInserter\n  function (...args)\n  function (...args)\nUtil.fifo\n  resolve\n  function* generator()\n  push(...args)\n  process: function run()\nUtil.isEmail\nUtil.isString\nUtil.isNumeric\nUtil.isUndefined\nUtil.isObject\nUtil.isPrimitive\nUtil.isFunction\nUtil.not\n  function (...args)\nUtil.isAsync\nUtil.isArrowFunction\nUtil.isEmptyString\nUtil.isEmpty\nUtil.isNonEmpty\nUtil.isIpAddress\nUtil.isPortNumber\nUtil.hasProps\nUtil.validatePassword\nUtil.clone\nUtil.deepClone\nUtil.findVal\nUtil.deepCloneObservable\nUtil.toArray\nUtil.arryToTree\nUtil.to3wei\nUtil.arrExchangePos\nUtil.arrRemove\nUtil.move\nUtil.moveIf\nUtil.logOutClearStorage\nUtil.getCookie\nUtil.parseCookie\n  pred\nUtil.encodeCookie\nUtil.setCookies\nUtil.clearCookies\nUtil.deleteCookie\nUtil.accAdd\nUtil.Subtr\nUtil.accDiv\nUtil.accMul\nUtil.dateFormatter\nUtil.numberFormatter\nUtil.searchObject\nUtil.parseQuery\nUtil.encodeQuery\nUtil.parseURL\n  href(override)\nUtil.makeURL\nUtil.numberFromURL\nUtil.tryPromise\n  resolve\n  reject\n  resolve\n  reject\n  function (...args)\n  function (...args)\n  resolve\n  reject\nUtil.putError\n  ret =>\nUtil.tryPredicate\nUtil.isBrowser\nUtil.waitFor\n  clear\nUtil.timeout\nUtil.isServer\nUtil.isMobile\nUtil.uniquePred\nUtil.unique\n  cmp\nUtil.zip\n  initVal\n  setVal\n  defKeyFunc\nUtil.concat\nUtil.distinct\nUtil.rangeMinMax\nUtil.remap\n  getR\nUtil.mergeLists\nUtil.foreach\nUtil.all\nUtil.isGenerator\nUtil.isIterator\nUtil.isIterable\nUtil.isConstructor\n  construct(target, args)\nUtil.filter\n  function* ()\nUtil.reduce\nUtil.mapFunctional\n  function* (arg)\nUtil.map\n  ret\n  function* ()\n  ret\n  function* ()\nUtil.entriesToObj\nUtil.isDate\nUtil.parseDate\nUtil.isoDate\nUtil.toUnixTime\nUtil.unixTime\nUtil.fromUnixTime\nUtil.formatTime\n(), format\nUtil.leapYear\nUtil.timeSpan\nUtil.randFloat\nUtil.randInt\nUtil.randStr\nUtil.hex\nUtil.numberParts\nUtil.roundDigits\nUtil.roundFunction\n  function (value)\nUtil.roundTo\nUtil.formatRecord\n  function (obj)\nUtil.isArrayLike\nUtil.equals\nUtil.isGetter\nUtil.isBool\nUtil.size\nUtil.isMap\nUtil.effectiveDeviceWidth\nUtil.getFormFields\nUtil.mergeObjects\nUtil.getUserAgent\nUtil.factor\nUtil.factorial\nUtil.increment\nUtil.counter\n  self\nUtil.filterKeys\n  pred\n  pred\nUtil.filterMembers\n  pred\nUtil.filterOutMembers\n  pred\nUtil.dumpMembers\nUtil.filterOutKeys\nUtil.getKeys\nUtil.numbersConvert\nUtil.entries\n  function* ()\nUtil.keys\n  function* ()\nUtil.values\n  function* ()\nUtil.removeEqual\nUtil.clear\nUtil.remove\nUtil.removeIf\nUtil.traverse\n  function* walker(o, depth\nUtil.traverseWithPath\n  function* walker(o, path)\nUtil.indexByPath\nUtil.pushUnique\nUtil.insertSorted\n  next\nUtil.keyIterator\nUtil.entryIterator\n  function* ()\nUtil.mapAdapter\n  get(key)\n  set(key, value)\n  .keys\n  .entries\nUtil.mapFunction\n  .set\n  .get\n  .set\n  .get\n  .set\n  .get\n  .set\n  .get\n  .update\n  .entries\n  .values\n  .keys\n  function ()\n  .keys\n  .entries\n  .values\n  .keys\n  .entries\n  .values\n  .filter\n  function* ()\n  .map\n  function* ()\n  .forEach\n  .delete\n  .has\n  toKey\n  fromKey\n  .set\n  .get\n  .keys\n  .entries\n  .values\n  .has\n  .delete\nUtil.mapCombinator\n  key =>\n  makeGetter\nUtil.predicate\nUtil.some\nUtil.every\nUtil.iterateMembers\nUtil.and\nUtil.or\nUtil.memberNameFilter\nUtil.getMemberNames\nUtil.getMemberEntries\n  accFn\n  incFn\n  incFn\n  inc\n  self\n  .valueOf\n  filterFn\nUtil.methodNameFilter\nUtil.getMethodNames\nUtil.inherit\n  inherits\n  inherits\nTempCtor\nUtil.bindMethods\nUtil.bindMethodsTo\nUtil.getConstructor\nUtil.getPrototypeChain\nUtil.getPropertyDescriptors\nUtil.weakAssign\nUtil.exception\n  toString(color = false)\nUtil.location\n  toString(color = false)\n  getFileName()\n  getLineNumber()\n  getColumnNumber()\nUtil.stackFrame\n  propertyMap()\n  getFunction()\n  getMethodName()\n  getFunctionName()\n  getTypeName()\n  getFileName()\n  getLineNumber()\n  getColumnNumber()\n  get()\n  toString(color, opts = {})\n  getLocation()\n  get location()\nUtil.scriptName\nUtil.getFunctionName\nUtil.scriptDir\nUtil.stack\n  getStack\n  .prepareStackTrace\n  stackToString\n  function* ()\n  get: ()\n  get: ()\n  toString(opts = {})\n  getFunctionName()\n  getMethodName()\n  getFileName()\n  getLineNumber()\n  get()\nUtil.getCallerStack\n  .prepareStackTrace\nUtil.getCallerFile\nUtil.getCallerFunction\nUtil.getCallerFunctionName\nUtil.getCallerFunctionNames\nUtil.getCaller\nUtil.getCallers\nUtil.getStackFrames\nUtil.getStackFrame\nUtil.rotateLeft\nUtil.rotateRight\nUtil.hashString\nUtil.flatTree\n  addOutput\nUtil.traverseTree\nUtil.walkTree\n  function* ()\n  pred\nUtil.isPromise\n  setImmediate\nUtil.next\nUtil.getImageAverageColor\n  toStringRgb()\n  toStringRgba()\n  toStringHex()\n  toHex\nUtil.jsonToObject\nUtil.splitLines\nUtil.decodeEscapes\nUtil.stripXML\nUtil.stripHTML\nUtil.stripNonPrintable\nUtil.decodeHTMLEntities\nUtil.encodeHTMLEntities\nUtil.stripAnsi\nUtil.proxy\n  get(target, key, receiver)\n  set(target, key, value, receiver)\n  handler\n  get(target, key, receiver)\nUtil.proxyTree\n  applyCallback\n  get(target, key)\n  set(target, key, value)\n  apply(target, thisArg, args)\n  node\nUtil.construct\nUtil.constructApply\nUtil.immutable\n  set: ()\n  deleteProperty: ()\n  defineProperty: ()\nUtil.immutableClass\nUtil.partial\n  function ()\nUtil.coloring\n  code(...args)\n  text(text)\n  concat(...args)\n  code(...args)\n  text(text, ...color)\n  concat(...args)\n  code(...args)\n  text(text, ...color)\n  concat(...args)\nUtil.colorText\nUtil.decodeAnsi\n  isDigit\n  notDigit\n  findIndex\nUtil.stripAnsi\nUtil.ansiCode\nUtil.wordWrap\nUtil.multiParagraphWordWrap\nUtil.defineInspect\n  function ()\nUtil.bindProperties\n  gen\n  get: ()\n  get: ()\n  on: (val)\n  off: (val)\n  true: (val)\n  false: (val)\nUtil.assert\nUtil.assignGlobal\nUtil.weakMapper\n  self\n  .set\n  .get\nUtil.merge\nUtil.transformer\n  function (...v)\nUtil.copyTextToClipboard\nUtil.toPlainObject\nUtil.timer\n  remaining\n  finish\n  log\n  timeout\n  add\n  get delay()\n  get created()\n  get start()\n  get stop()\n  get elapsed()\n  get end()\n  get remain()\n  cancel()\n  pause()\n  .resume\n  .restart\n  callback(...args)\n  subscribe(f)\n  unsubscribe(f)\n  start\nUtil.thenableReject\n  then: (resolve, reject)\nUtil.wrapGenerator\n  function (...args)\nUtil.wrapGeneratorMethods\nUtil.decorateIterable\n  forEach(fn, thisArg)\n*map(fn, thisArg)\n*filter(pred, thisArg)\n  findIndex(pred, thisArg)\n  indexOf(item, startIndex = -1)\n  find(pred, thisArg)\n  every(pred, thisArg)\n  some(pred, thisArg)\n  reduce(fn, accu)\n*entries()\n*keys()\n*values()\nUtil.swap\nUtil.swapArray\nUtil.cacheAdapter\n  getItem(request, opts = {})\n  setItem(request, response)\n  addItem(request)\n  removeItem(request, opts = {})\n  key(index)\n  clear()\nUtil.cachedFetch\n  self\nUtil.proxyObject\n  ptr\n  get(target, key)\n  node\nUtil.parseXML\n  self\nUtil.exit\nUtil.getEnv\nUtil.getEnvVars\nUtil.safeFunction\n  function (...args)\n  function (...args)\nUtil.safeCall\nUtil.safeApply\nUtil.callMain\nUtil.printReturnValue\n  print\n  self\nUtil.replaceAll\n  pred\nUtil.escapeRegex\nUtil.consolePrinter\n  self\n  .log\nUtil.consoleConcat\n  self\n  .add\n  .call\n  concat\n  clear()\n  log\n  print()\n  output()\n  add(...args)\nUtil.booleanAdapter\n  function (value)\n  set\n  function (...args)\n  get\n  set\n  handler\nExFunc\n  constructor()\n  __call__(...args)\nUtil.isatty\nUtil.ttyGetWinSize\nUtil.timeit\nUtil.lazyProperty\n  replaceProperty\n  get()\nHighResolutionTime\n  constructor(secs = 0, nano = 0)\n  static create(s, n)\n  get seconds()\n  get milliseconds()\n  get nanoseconds()\n  valueOf()\n  diff(o)\n  sum(o)\n  since(o)\n  toString()\n  hrtime\n  performanceNow\nUtil.formatColumns\nUtil.getPlatform\n  map\n  function* (value)\n  log\n  function (...args)\n  function (...args)\nUtil.bind\n  ret\n  ret",
			"settings":
			{
				"buffer_size": 10284,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			}
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 90996,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 167303,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "commands.js",
			"settings":
			{
				"buffer_size": 13946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/boardRenderer.js",
			"settings":
			{
				"buffer_size": 14669,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "dump-ast.js",
			"settings":
			{
				"buffer_size": 16899,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"About"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"svgo",
				"SVGO: Prettify SVG"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"shell",
				"Pretty Shell: Minify Selection"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"shfmt",
				"Pretty Shell: Format"
			],
			[
				"extract pack",
				"PackageResourceViewer: Extract Package"
			],
			[
				"add rep",
				"Package Control: Add Repository"
			],
			[
				"goto us",
				"Goto Usage"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"mini",
				"SVGO: Minify SVG"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"indent",
				"Indexing Status"
			],
			[
				"oinstall pa",
				"Package Control: Install Package"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"tag",
				"CTags: Rebuild Tags"
			],
			[
				"remove pack",
				"Package Control: Remove Channel"
			],
			[
				"instal pac",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"tags",
				"CTags: Rebuild Tags"
			],
			[
				"ctag",
				"CTags: Rebuild Tags"
			],
			[
				"prett",
				"SVGO: Prettify SVG"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"pret",
				"SVGO: Prettify SVG"
			],
			[
				"svg",
				"SVGO: Minify SVG"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"rebuild",
				"Build With: Rebuild CTags"
			],
			[
				"unicode",
				"Unicode Character Insert: Show Panel"
			],
			[
				"math",
				"UnicodeMath: Insert"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"min",
				"SVGO: Minify SVG"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"add ",
				"Package Control: Add Repository"
			],
			[
				"symbol",
				"CTags: Show Symbols (all)"
			],
			[
				"ctags",
				"CTags: Show Symbols (file)"
			],
			[
				"extract fn",
				"Extract Javascript Function to Regular Function"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"instalk",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"extract",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"build",
				"Build: Cancel"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 131.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.log_commands(True).",
			" sublime.log_commands(True)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Sources/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Dokumente/Sources/pictest/eagle/7seg-2.54.brd",
		"/home/roman/Dokumente/Sources/plot-cv/sockval.c",
		"/usr/include/x86_64-linux-gnu/ffitarget.h",
		"/usr/include/x86_64-linux-gnu/ffi.h",
		"/home/roman/Dokumente/Sources/plot-cv/fcntl.js",
		"/home/roman/Dokumente/Sources/plot-cv/socket.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-ffi.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Dokumente/Sources/plot-cv/src/js_contour.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/quickjs/ffi/.prettierrc",
		"/home/roman/Sources/plot-cv/test-ffi.js",
		"/home/roman/Sources/plot-cv/socket.js",
		"/home/roman/Sources/plot-cv/quickjs/ffi/ffi.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.h",
		"/home/roman/Sources/plot-cv/lib/consoleSetup.js",
		"/home/roman/Sources/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Sources/plot-cv/sockval.c",
		"/home/roman/Sources/plot-cv/main.js",
		"/home/roman/Sources/plot-cv/lib/util.js",
		"/home/roman/Sources/plot-cv/quickjs/tests/bjson.c",
		"/home/roman/.config/sublime-text-3/Packages/User/TabNine.sublime-settings",
		"/home/roman/.config/sublime-text-3/Packages/TabNine/TabNine.sublime-settings",
		"/home/roman/Sources/plot-cv/resolve-imports.js",
		"/home/roman/Sources/plot-cv/lib/viewport.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Sources/plot-cv/quickjs/ffi/util.mjs",
		"/home/roman/Sources/plot-cv/lib/geom.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Sources/plot-cv/lib/grammars/ECMAScript.g4",
		"/home/roman/Sources/plot-cv/lib/ecmascript.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/printer.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/es6.ebnf",
		"/home/roman/Sources/plot-cv/lib/deep.js",
		"/home/roman/Sources/plot-cv/lib/tree.js",
		"/home/roman/Sources/plot-cv/test-tree.js",
		"/home/roman/Sources/plot-cv/test-video.js",
		"/home/roman/.config/sublime-text-3/Packages/User/ES6 Next.tmTheme",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs.c",
		"/home/roman/Dokumente/Sources/plot-cv/quickjs/repl.js",
		"/home/roman/Sources/plot-cv/quickjs/qjscalc.js",
		"/home/roman/Sources/plot-cv/test-decorators.js",
		"/home/roman/Sources/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/quickjs/Makefile",
		"/home/roman/Sources/plot-cv/quickjs/net/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-debugger.h",
		"/home/roman/Sources/plot-cv/quickjs/cutils.h",
		"/home/roman/Sources/plot-cv/lib/ecmascript/environment.js",
		"/home/roman/Sources/plot-cv/libraries.js",
		"/home/roman/Sources/plot-cv/lib/ecmascript/token.js",
		"/home/roman/Sources/plot-cv/test-xml.js",
		"/home/roman/Sources/plot-cv/lib/xml.js",
		"/home/roman/Sources/plot-cv/node_modules/source-map/dist/source-map.debug.js",
		"/home/roman/Sources/plot-cv/lib/xml/xpath.js",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-debugger-transport-unix.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Sources/plot-cv/server.js",
		"/home/roman/Sources/plot-cv/quickjs/ffi/README.md",
		"/home/roman/Sources/plot-cv/src/js_mat.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/sock.c",
		"/home/roman/Dokumente/Sources/plot-cv/sockval",
		"/home/roman/Sources/plot-cv/lib/objectInspect.js",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/lkdemo.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/tutorial_code/TrackingMotion/goodFeaturesToTrack_Demo.cpp",
		"/home/roman/Sources/plot-cv/CMakeLists.txt",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/opencv/main.cpp",
		"/home/roman/Sources/plot-cv/opencv/CannyDetector_Demo.cpp",
		"/home/roman/Sources/plot-cv/opencv/detectLines.cpp",
		"/home/roman/Sources/plot-cv/opencv/getExteriorContour.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/Multiple_Object_Tracking_by_Image_Subtraction.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/tutorial_code/video/optical_flow/optical_flow.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/tutorial_code/TrackingMotion/cornerSubPix_Demo.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/tests.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/optical_flow.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/detectLines.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/disabled/lkdemo.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/opencv/pyrlk_optical_flow.cpp",
		"/home/roman/Sources/plot-cv/src/js_point.cpp",
		"/home/roman/Sources/plot-cv/src/js_cv.cpp",
		"/home/roman/Sources/plot-cv/src/jsbindings.h",
		"/home/roman/Sources/plot-cv/src/jsbindings.cpp",
		"/home/roman/Dokumente/Sources/plot-cv/001.test-video.js.patch",
		"/home/roman/Sources/plot-cv/param.js",
		"/home/roman/Sources/plot-cv/Characters.svg",
		"/home/roman/Dokumente/Sources/plot-cv/data/chars.svg",
		"/home/roman/Sources/plot-cv/src/js_contour.cpp",
		"/home/roman/Sources/plot-cv/cvVideo.js",
		"/home/roman/Sources/plot-cv/lib/dom/svg.js",
		"/home/roman/Sources/plot-cv/lib/geom/polyline.js",
		"/home/roman/Sources/plot-cv/lib/geom/pointList.js",
		"/home/roman/Dokumente/Sources/plot-cv/font.json",
		"/home/roman/Sources/plot-cv/lib/geom/polygon.js",
		"/home/roman/Sources/plot-cv/lib/geom/bbox.js",
		"/home/roman/Sources/plot-cv/lib/geom/arc.js",
		"/home/roman/Sources/plot-cv/lib/geom/lineList.js",
		"/home/roman/Sources/plot-cv/src/js_utility.cpp",
		"/home/roman/Sources/plot-cv/Zeichnung.svg",
		"/usr/include/opencv4/opencv2/core/utility.hpp",
		"/home/roman/Sources/plot-cv/quickjs/defs.cmake",
		"/home/roman/Sources/plot-cv/quickjs/net/libwebsockets/win32port/zlib/zutil.h",
		"/home/roman/Sources/plot-cv/src/js_size.h",
		"/home/roman/Sources/plot-cv/quickjs/qjsc.c",
		"/home/roman/Sources/plot-cv/src/js_line.cpp",
		"/home/roman/Sources/plot-cv/js-bindings.cmake",
		"/home/roman/Dokumente/Sources/plot-cv/quickjs/net/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/src/js_video_capture.cpp",
		"/home/roman/Sources/plot-cv/test-video.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-find-module.c",
		"/home/roman/Sources/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Sources/plot-cv/src/js_draw.cpp",
		"/home/roman/Dokumente/Sources/c-utils/lib/cas.S",
		"/home/roman/Sources/plot-cv/cvHighGUI.js",
		"/home/roman/Sources/plot-cv/src/js_size.cpp",
		"/home/roman/Sources/plot-cv/src/js_rect.h",
		"/home/roman/Sources/plot-cv/src/js_contour.h",
		"/home/roman/Sources/plot-cv/src/geometry.h",
		"/home/roman/Sources/plot-cv/src/js_array.h",
		"/home/roman/.config/sublime-text-3/Packages/Colorsublime/Colorsublime.sublime-settings",
		"/home/roman/Dokumente/Sources/plot-cv/Next.tmTheme",
		"/home/roman/.config/sublime-text-3/Packages/Outline/outline.py",
		"/home/roman/Sources/plot-cv/src/js_clahe.cpp",
		"/home/roman/Sources/plot-cv/quickjs/qjs.c",
		"/home/roman/.screenrc-bg",
		"/home/roman/.local/share/endless-sky/saves/achmed tsingzhali~~previous-1.txt",
		"/home/roman/.local/share/endless-sky/saves/achmed tsingzhali~~previous-2.txt",
		"/home/roman/.local/share/endless-sky/saves/achmed tsingzhali~~previous-3.txt"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 306.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv,*CMakeLists.txt,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*\n/home/roman/Sources/plot-cv/src,*.cpp,*.c,*.h,-*/opencv-js-webworker/*,<open files>",
			"/home/roman/Sources/plot-cv,*CMakeLists.txt,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*\n/home/roman/Sources/plot-cv/src,*.cpp,*.c,*.h,-*/opencv-js-webworker/*",
			"/home/roman/Sources/plot-cv,*CMakeLists.txt,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*\n/home/roman/Sources/plot-cv/src,*.cpp,*.h,-*/opencv-js-webworker/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*,CMakeLists.txt\n/home/roman/Sources/plot-cv/src,*.cpp,*.h,-*/opencv-js-webworker/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*\n/home/roman/Sources/plot-cv/src,*.cpp,*.h,-*/opencv-js-webworker/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*\n/home/roman/Sources/plot-cv/src,*.cpp,*.h",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*,/home/roman/Sources/plot-cv/src,*.cpp,*.h",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.cpp,*.h,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.cpp,*.h,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*,/home/roman/Sources/plot-cv,*.cpp,*.hpp,*.h",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.cpp,*.h,-.*,-tags,-*.orig,-*.log,-*.json,-*/opencv/*",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.cpp,*.h,-.*,-tags,-*.orig,-*.log,-*.json",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.c,*.cpp,*.h,-.*,-tags,-*.orig,-*.log,-*.json",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,*.c,*.h,-.*,-tags,-*.orig,-*.log,-*.json",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,-*.json,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,-*.log,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,-*.orig,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,-tags,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,-.*,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,/home/roman/Sources/plot-cv/src,*.h,*,cpp,/home/roman/Sources/plot-cv/quickjs,*.h,*,c",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,,/home/roman/Sources/plot-cv/src,*.h,*,cpp",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,,/home/roman/Sources/plot-cv/src,*.h",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,,/home/roman/Sources/plot-cv/src,*.cpp,*.h",
			"/home/roman/Sources/plot-cv,-*/node_modules/*,*.js,<open files>",
			"/home/roman/Sources/plot-cv,-*node_modules*,*.js,<open files>",
			"/home/roman/Sources/plot-cv,-node_modules,*.js,<open files>",
			"/home/roman/Sources/plot-cv,*.js,<open files>",
			"/home/roman/Sources/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"onMouseDow",
			"^(\\s*)console.debug",
			"^(\\s*\\)console",
			"hasAttr",
			"target",
			"hasAttr",
			"getAttr.*id",
			"getAttr",
			"layerList",
			"restoreItemStates",
			"saveItemsProperty",
			"restoreItemsProperty",
			"solo",
			"debounce",
			"^\\s+",
			"\\s+",
			"^\\s\\+",
			"js_contour_get",
			"FFI_SIZEOF_ARG",
			"ffff",
			"ArrayBuffer",
			":`);",
			"parseBindingPattern",
			"operatorPrecedence",
			"^BindingElement",
			"BindingElement",
			"^Elisio",
			"Elision",
			"Function",
			"FunctionArgument",
			"InExp",
			"binding_prop",
			"AssignmentProperty",
			"\\.id[^a-z]",
			"\\.id",
			"BindingProperty",
			"BindingProp",
			"AssignmentPropety",
			"ObjectPattern",
			"BindingProperty",
			"'export'",
			"parseModuleItems",
			"parseExportStatement",
			"parseFunction",
			"new Export",
			"ClassDeclaration",
			"AnonymousDefaultExportedClassDeclaration",
			"ModuleDeclaration",
			"defaultExport",
			"new Export",
			"AnonymousDefaultExportedFunctionDeclaration",
			"new ExportNamedDeclaratio",
			"ExportNamedDeclaration",
			"declarations",
			"dumpFile",
			" printProperty",
			"ComputedProp",
			"Pattern",
			"class Func",
			"MetaProperty",
			"BindingPattern",
			"parseNewOrCallOrMemberExpression",
			"'new'",
			"'new'0",
			"parseImportDeclaration",
			"new Super",
			"class Super",
			"class Suiper",
			"parsePrimaryExpression",
			"parseRemainingCallExpression",
			"parseRemainingMember",
			"nary",
			"new This",
			"class Try",
			"printWith",
			"';'",
			"removed",
			"re = ",
			"re =",
			"re\\.",
			"EmptyStatement",
			"parseBlock",
			"class FunctionBody",
			"new Function",
			"FunctionDeclaration",
			"class Func",
			"class Function",
			"getImport",
			"imports:",
			"MemberVar",
			"MemberVariable",
			"static",
			"flags",
			"MemberVariable",
			"ClassDec",
			"ClassDecl",
			"\\.value",
			"removed",
			"PrintAst",
			"PrintCode",
			";\n",
			"singleExpression",
			"Class",
			"class",
			"parseNewOrCallOrMemberExpression",
			"ModuleItems",
			"getImport",
			"ImportSpec",
			"parseImportSpecifier",
			"printImport",
			" as ",
			"'as",
			"parseModuleItems",
			"ImportDecl",
			"9;",
			"printFunction",
			"extends Literal",
			"Literal.string",
			".value",
			"\\.value",
			"parseImportDecl",
			"ImportStateme",
			"AliasName",
			"ForInSt",
			"node2path",
			"log..node:",
			"next",
			"'std'"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//console.debug",
			"\\1//console",
			"\\t",
			"parseExportDeclaration",
			"declaration",
			"Pattern",
			"Re",
			"Tree",
			"",
			"this.remote",
			"\\1  ",
			"  ",
			"export const ",
			", int>",
			"\\n<text",
			" ",
			"COLOR_BGRA2BGR",
			"COLOR_BGR2BGRA",
			"Processor",
			"Pipeline.call",
			"js_point_round",
			"JS_UNDEFINED",
			"0",
			"\"",
			"color",
			"MouseHandler",
			")); }",
			"); }",
			"\\1#",
			"#",
			"console.log",
			"",
			"search.aliases",
			"search.packages",
			"search.path",
			"js_mat_data(ctx, argv",
			"return js._undefined",
			"(*s)->",
			"JSCLAHEData",
			"${CMAKE_SOURCE_DIR}/src/",
			"CMAKE_CURRENT_SOURCE_DIR",
			"${CMAKE_CURRENT_BINARY_DIR}/",
			"function \\1(",
			" \\1(",
			"",
			"y=\"2\"",
			"text-anchor=\"middle\"",
			"transform",
			"y=\"2\"",
			"",
			"y=\"0\" x=\"-",
			"font-family=\"Share-TechMono\" text-anchor=\"middle\"",
			"(-90)",
			"hare-TechMono\"",
			" dominant-baseline=\"hanging\" transform=\"rotate(90)\"",
			"hanging",
			" x=\"0\"",
			"",
			"font-family=\"Share-TechMono\"",
			"",
			" H48\"",
			"",
			"fcntl",
			"const ",
			"'\\\\u\\1",
			"'\\\\u0\\1",
			"'\\\\u00\\1",
			"'\\\\u00\\1;",
			"'\\\\u",
			"dumpFile",
			"",
			"log",
			"\\n",
			"",
			"// ",
			"inspectSymbol",
			"get_property",
			"set_property(obj, ",
			"point2i_type",
			"",
			"create_trackbar",
			"high_resolution_clock",
			"",
			"createTrackbar",
			" ",
			", .def_type = JS_DEF_",
			", .magic = 0,",
			".prop_flags = ",
			"js_array_iterator",
			"`",
			" cv::String",
			"cv::QT_RADIOBOX",
			"(cv::Range",
			"cv::ximgproc::dtFilter",
			"cv::COLOR_",
			" cv::Range",
			"",
			" cv::Mat",
			".component",
			"window.component",
			"console",
			"for(let",
			"let s = ",
			"let \\1;",
			"\\n\\n",
			"",
			"console.reallog",
			"if",
			"} else if(",
			"",
			"multiplySelf",
			"deg2rad",
			"//",
			"\\1//\\2",
			"\\1//console.",
			"LocalStore",
			"const ",
			"\"",
			"let ",
			" ",
			"defs",
			"case '\\1': return `${part.code} ",
			"`;",
			"/",
			"export const",
			" CONFIG_BIGNUM CONFIG_CHECK_JSVALUE ",
			"s->vec\\[\\1\\]",
			"s->vec[\\1]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10284,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Sources/plot-cv/lib/util.js",
							"function_name_status_row": 93,
							"outline_rename_mode": false,
							"sorttabs_lastactivated": 1610151513.57,
							"symkeys":
							[
								[
									132,
									149
								],
								[
									212,
									262
								],
								[
									2491,
									2507
								],
								[
									2879,
									2906
								],
								[
									2955,
									2986
								],
								[
									3192,
									3217
								],
								[
									3284,
									3301
								],
								[
									3346,
									3364
								],
								[
									3412,
									3433
								],
								[
									3484,
									3508
								],
								[
									3556,
									3583
								],
								[
									3984,
									3989
								],
								[
									4048,
									4072
								],
								[
									4095,
									4112
								],
								[
									4127,
									4139
								],
								[
									4179,
									4196
								],
								[
									4211,
									4224
								],
								[
									4265,
									4282
								],
								[
									4297,
									4313
								],
								[
									4357,
									4374
								],
								[
									4389,
									4408
								],
								[
									4455,
									4472
								],
								[
									4487,
									4509
								],
								[
									4559,
									4576
								],
								[
									4591,
									4616
								],
								[
									4743,
									4768
								],
								[
									4852,
									4873
								],
								[
									5133,
									5147
								],
								[
									5198,
									5212
								],
								[
									5333,
									5358
								],
								[
									5442,
									5470
								],
								[
									5730,
									5751
								],
								[
									5815,
									5836
								],
								[
									5973,
									5999
								],
								[
									6154,
									6178
								],
								[
									6322,
									6346
								],
								[
									6502,
									6532
								],
								[
									6881,
									6906
								],
								[
									7036,
									7055
								],
								[
									7138,
									7157
								],
								[
									7346,
									7365
								],
								[
									7444,
									7463
								],
								[
									7529,
									7548
								],
								[
									7644,
									7684
								],
								[
									7821,
									7854
								],
								[
									8104,
									8118
								],
								[
									8896,
									8921
								],
								[
									9301,
									9342
								],
								[
									9384,
									9403
								],
								[
									9509,
									9546
								],
								[
									9628,
									9647
								],
								[
									9742,
									9776
								],
								[
									9803,
									9822
								],
								[
									10098,
									10143
								],
								[
									10345,
									10363
								],
								[
									10616,
									10642
								],
								[
									10903,
									10923
								],
								[
									11003,
									11023
								],
								[
									11174,
									11222
								],
								[
									11404,
									11420
								],
								[
									12981,
									13004
								],
								[
									14226,
									14236
								],
								[
									14324,
									14353
								],
								[
									14457,
									14482
								],
								[
									14512,
									14553
								],
								[
									14877,
									14910
								],
								[
									14952,
									14993
								],
								[
									15133,
									15153
								],
								[
									16430,
									16461
								],
								[
									16521,
									16559
								],
								[
									16965,
									16996
								],
								[
									17076,
									17109
								],
								[
									17240,
									17271
								],
								[
									17545,
									17580
								],
								[
									17740,
									17773
								],
								[
									18067,
									18096
								],
								[
									18174,
									18204
								],
								[
									18280,
									18318
								],
								[
									18368,
									18404
								],
								[
									18585,
									18621
								],
								[
									18921,
									18945
								],
								[
									18976,
									19001
								],
								[
									19065,
									19093
								],
								[
									19126,
									19167
								],
								[
									19286,
									19330
								],
								[
									19636,
									19665
								],
								[
									19785,
									19815
								],
								[
									19857,
									19885
								],
								[
									20024,
									20053
								],
								[
									20143,
									20171
								],
								[
									20210,
									20238
								],
								[
									20288,
									20324
								],
								[
									20426,
									20459
								],
								[
									20544,
									20579
								],
								[
									20664,
									20695
								],
								[
									21055,
									21093
								],
								[
									21941,
									21975
								],
								[
									22389,
									22428
								],
								[
									22581,
									22617
								],
								[
									22777,
									22822
								],
								[
									22877,
									22906
								],
								[
									22998,
									23041
								],
								[
									23161,
									23195
								],
								[
									23383,
									23410
								],
								[
									23510,
									23545
								],
								[
									23617,
									23668
								],
								[
									23806,
									23853
								],
								[
									23914,
									23977
								],
								[
									24139,
									24177
								],
								[
									24216,
									24274
								],
								[
									24579,
									24614
								],
								[
									24744,
									24784
								],
								[
									24859,
									24896
								],
								[
									25014,
									25045
								],
								[
									25749,
									25792
								],
								[
									25924,
									25929
								],
								[
									26085,
									26119
								],
								[
									26329,
									26365
								],
								[
									26428,
									26454
								],
								[
									27220,
									27247
								],
								[
									27315,
									27345
								],
								[
									27938,
									27957
								],
								[
									28196,
									28222
								],
								[
									28523,
									28580
								],
								[
									28703,
									28768
								],
								[
									28878,
									28930
								],
								[
									29052,
									29103
								],
								[
									29219,
									29235
								],
								[
									29306,
									29318
								],
								[
									29406,
									29418
								],
								[
									29537,
									29552
								],
								[
									29592,
									29612
								],
								[
									29836,
									29928
								],
								[
									29931,
									30028
								],
								[
									30062,
									30074
								],
								[
									30117,
									30131
								],
								[
									30163,
									30169
								],
								[
									30212,
									30220
								],
								[
									30266,
									30274
								],
								[
									30330,
									30345
								],
								[
									30398,
									30405
								],
								[
									30517,
									30527
								],
								[
									30670,
									30680
								],
								[
									30743,
									30750
								],
								[
									30835,
									30863
								],
								[
									31180,
									31205
								],
								[
									31633,
									31669
								],
								[
									31774,
									31811
								],
								[
									32320,
									32351
								],
								[
									32396,
									32427
								],
								[
									32663,
									32686
								],
								[
									32746,
									32773
								],
								[
									33015,
									33047
								],
								[
									33254,
									33280
								],
								[
									33347,
									33400
								],
								[
									33512,
									33536
								],
								[
									33542,
									33565
								],
								[
									33582,
									33615
								],
								[
									33737,
									33773
								],
								[
									33838,
									33872
								],
								[
									33920,
									33932
								],
								[
									34003,
									34015
								],
								[
									34073,
									34105
								],
								[
									34149,
									34192
								],
								[
									34369,
									34398
								],
								[
									34510,
									34540
								],
								[
									34694,
									34730
								],
								[
									34808,
									34834
								],
								[
									34876,
									34913
								],
								[
									35097,
									35133
								],
								[
									35171,
									35203
								],
								[
									35322,
									35364
								],
								[
									35457,
									35482
								],
								[
									35534,
									35553
								],
								[
									35639,
									35663
								],
								[
									35686,
									35712
								],
								[
									36172,
									36204
								],
								[
									36716,
									36736
								],
								[
									37007,
									37041
								],
								[
									37421,
									37448
								],
								[
									37677,
									37713
								],
								[
									37758,
									37772
								],
								[
									37841,
									37887
								],
								[
									38002,
									38023
								],
								[
									38105,
									38120
								],
								[
									38298,
									38327
								],
								[
									38457,
									38490
								],
								[
									38570,
									38591
								],
								[
									39186,
									39237
								],
								[
									39354,
									39389
								],
								[
									39668,
									39710
								],
								[
									39764,
									39802
								],
								[
									39964,
									39983
								],
								[
									40185,
									40220
								],
								[
									40354,
									40373
								],
								[
									40848,
									40868
								],
								[
									44632,
									44666
								],
								[
									45006,
									45035
								],
								[
									45153,
									45182
								],
								[
									45251,
									45277
								],
								[
									45610,
									45645
								],
								[
									45794,
									45843
								],
								[
									46044,
									46134
								],
								[
									46145,
									46162
								],
								[
									46271,
									46311
								],
								[
									46407,
									46444
								],
								[
									46539,
									46576
								],
								[
									46700,
									46719
								],
								[
									46767,
									46805
								],
								[
									47470,
									47514
								],
								[
									47586,
									47605
								],
								[
									47860,
									47879
								],
								[
									48209,
									48236
								],
								[
									48245,
									48260
								],
								[
									48336,
									48363
								],
								[
									48576,
									48589
								],
								[
									48788,
									48817
								],
								[
									48926,
									48953
								],
								[
									49021,
									49049
								],
								[
									49321,
									49344
								],
								[
									49414,
									49441
								],
								[
									49461,
									49485
								],
								[
									49549,
									49576
								],
								[
									49701,
									49727
								],
								[
									49952,
									49970
								],
								[
									49971,
									49991
								],
								[
									50024,
									50046
								],
								[
									50129,
									50159
								],
								[
									50257,
									50284
								],
								[
									50334,
									50361
								],
								[
									50610,
									50634
								],
								[
									50653,
									50678
								],
								[
									50807,
									50833
								],
								[
									50900,
									50937
								],
								[
									51049,
									51089
								],
								[
									51229,
									51263
								],
								[
									51566,
									51598
								],
								[
									51657,
									51714
								],
								[
									52082,
									52124
								],
								[
									52495,
									52536
								],
								[
									52764,
									52813
								],
								[
									53137,
									53177
								],
								[
									53654,
									53696
								],
								[
									53742,
									53776
								],
								[
									53854,
									53890
								],
								[
									53990,
									54034
								],
								[
									54215,
									54252
								],
								[
									54569,
									54609
								],
								[
									54741,
									54790
								],
								[
									54959,
									54975
								],
								[
									55620,
									55646
								],
								[
									55750,
									55774
								],
								[
									55926,
									55958
								],
								[
									56134,
									56169
								],
								[
									56341,
									56376
								],
								[
									56679,
									56713
								],
								[
									57077,
									57112
								],
								[
									57484,
									57519
								],
								[
									57804,
									57849
								],
								[
									58474,
									58514
								],
								[
									58642,
									58725
								],
								[
									60820,
									60854
								],
								[
									61281,
									61315
								],
								[
									61481,
									61519
								],
								[
									62569,
									62583
								],
								[
									62901,
									62934
								],
								[
									63445,
									63484
								],
								[
									63784,
									63809
								],
								[
									63905,
									63921
								],
								[
									63925,
									63939
								],
								[
									64017,
									64032
								],
								[
									64107,
									64121
								],
								[
									64164,
									64188
								],
								[
									64381,
									64400
								],
								[
									64607,
									64623
								],
								[
									64627,
									64641
								],
								[
									64813,
									64837
								],
								[
									65520,
									65527
								],
								[
									65556,
									65595
								],
								[
									65669,
									65697
								],
								[
									66017,
									66042
								],
								[
									66183,
									66196
								],
								[
									66303,
									66368
								],
								[
									66472,
									66499
								],
								[
									66533,
									66560
								],
								[
									66581,
									66614
								],
								[
									66745,
									66772
								],
								[
									66829,
									66844
								],
								[
									66895,
									66912
								],
								[
									67063,
									67078
								],
								[
									67097,
									67112
								],
								[
									67393,
									67413
								],
								[
									68355,
									68388
								],
								[
									68696,
									68726
								],
								[
									68826,
									68866
								],
								[
									68981,
									69006
								],
								[
									69017,
									69029
								],
								[
									69285,
									69336
								],
								[
									69746,
									69777
								],
								[
									69865,
									69896
								],
								[
									69971,
									70003
								],
								[
									70157,
									70183
								],
								[
									70238,
									70264
								],
								[
									70479,
									70506
								],
								[
									70595,
									70618
								],
								[
									71032,
									71064
								],
								[
									71318,
									71330
								],
								[
									71610,
									71642
								],
								[
									71849,
									71877
								],
								[
									71878,
									71895
								],
								[
									71945,
									71968
								],
								[
									72001,
									72013
								],
								[
									72063,
									72075
								],
								[
									72394,
									72406
								],
								[
									72599,
									72611
								],
								[
									73290,
									73324
								],
								[
									73460,
									73486
								],
								[
									73635,
									73664
								],
								[
									73799,
									73829
								],
								[
									74131,
									74180
								],
								[
									74371,
									74409
								],
								[
									74458,
									74507
								],
								[
									74621,
									74656
								],
								[
									74664,
									74688
								],
								[
									75208,
									75239
								],
								[
									75368,
									75396
								],
								[
									75875,
									75927
								],
								[
									75969,
									75996
								],
								[
									76167,
									76215
								],
								[
									76429,
									76469
								],
								[
									76600,
									76633
								],
								[
									76909,
									76942
								],
								[
									77188,
									77232
								],
								[
									77369,
									77386
								],
								[
									77547,
									77598
								],
								[
									78505,
									78539
								],
								[
									78947,
									78963
								],
								[
									79235,
									79262
								],
								[
									79323,
									79352
								],
								[
									79837,
									79871
								],
								[
									80058,
									80082
								],
								[
									80118,
									80144
								],
								[
									80282,
									80309
								],
								[
									80404,
									80443
								],
								[
									80846,
									80890
								],
								[
									81187,
									81296
								],
								[
									81537,
									81589
								],
								[
									81667,
									81702
								],
								[
									81791,
									81820
								],
								[
									81854,
									81890
								],
								[
									81965,
									81991
								],
								[
									82013,
									82031
								],
								[
									82073,
									82125
								],
								[
									82199,
									82214
								],
								[
									82286,
									82301
								],
								[
									82479,
									82518
								],
								[
									82529,
									82548
								],
								[
									82602,
									82644
								],
								[
									82655,
									82674
								],
								[
									82732,
									82759
								],
								[
									82806,
									82846
								],
								[
									83129,
									83163
								],
								[
									83244,
									83280
								],
								[
									83445,
									83474
								],
								[
									83639,
									83651
								],
								[
									83757,
									83783
								],
								[
									83899,
									83912
								],
								[
									84013,
									84041
								],
								[
									84161,
									84174
								],
								[
									84279,
									84313
								],
								[
									84538,
									84559
								],
								[
									84638,
									84666
								],
								[
									84722,
									84758
								],
								[
									85105,
									85137
								],
								[
									85295,
									85327
								],
								[
									85510,
									85561
								],
								[
									85605,
									85632
								],
								[
									85836,
									85870
								],
								[
									85921,
									85956
								],
								[
									86050,
									86113
								],
								[
									86314,
									86330
								],
								[
									86825,
									86852
								],
								[
									87129,
									87158
								],
								[
									87393,
									87405
								],
								[
									89059,
									89096
								],
								[
									89115,
									89123
								],
								[
									89171,
									89186
								],
								[
									89335,
									89348
								],
								[
									89543,
									89559
								],
								[
									89766,
									89793
								],
								[
									90269,
									90291
								],
								[
									90341,
									90356
								],
								[
									90504,
									90526
								],
								[
									90576,
									90591
								],
								[
									90721,
									90743
								],
								[
									90797,
									90812
								],
								[
									90848,
									90870
								],
								[
									90919,
									90934
								],
								[
									90954,
									90996
								],
								[
									91306,
									91329
								],
								[
									91411,
									91433
								],
								[
									91508,
									91528
								],
								[
									91656,
									91668
								],
								[
									91896,
									91915
								],
								[
									91950,
									91972
								],
								[
									92105,
									92126
								],
								[
									92265,
									92285
								],
								[
									92353,
									92376
								],
								[
									92453,
									92475
								],
								[
									92595,
									92620
								],
								[
									92682,
									92694
								],
								[
									92867,
									92886
								],
								[
									92948,
									92960
								],
								[
									93113,
									93137
								],
								[
									93280,
									93298
								],
								[
									93355,
									93370
								],
								[
									93426,
									93442
								],
								[
									93448,
									93466
								],
								[
									93515,
									93537
								],
								[
									93592,
									93607
								],
								[
									93668,
									93681
								],
								[
									93758,
									93781
								],
								[
									93911,
									93933
								],
								[
									94032,
									94047
								],
								[
									94110,
									94128
								],
								[
									94432,
									94475
								],
								[
									94682,
									94689
								],
								[
									94721,
									94764
								],
								[
									94863,
									94896
								],
								[
									95029,
									95056
								],
								[
									95169,
									95197
								],
								[
									95312,
									95407
								],
								[
									95853,
									95895
								],
								[
									95939,
									95980
								],
								[
									96136,
									96185
								],
								[
									96419,
									96458
								],
								[
									96841,
									96882
								],
								[
									96984,
									97004
								],
								[
									97244,
									97267
								],
								[
									97369,
									97392
								],
								[
									97436,
									97455
								],
								[
									97498,
									97526
								],
								[
									97622,
									97644
								],
								[
									97720,
									97746
								],
								[
									98558,
									98607
								],
								[
									98792,
									98844
								],
								[
									99109,
									99148
								],
								[
									99293,
									99328
								],
								[
									99692,
									99727
								],
								[
									99804,
									99826
								],
								[
									99990,
									100026
								],
								[
									100072,
									100122
								],
								[
									100476,
									100506
								],
								[
									100566,
									100620
								],
								[
									100971,
									101015
								],
								[
									101207,
									101243
								],
								[
									101846,
									101890
								],
								[
									102429,
									102452
								],
								[
									102860,
									102902
								],
								[
									103711,
									103734
								],
								[
									104640,
									104653
								],
								[
									104689,
									104704
								],
								[
									104742,
									104759
								],
								[
									104801,
									104845
								],
								[
									105723,
									105736
								],
								[
									105895,
									105908
								],
								[
									106084,
									106099
								],
								[
									106143,
									106160
								],
								[
									106206,
									106219
								],
								[
									106261,
									106274
								],
								[
									106316,
									106331
								],
								[
									106375,
									106392
								],
								[
									106520,
									106525
								],
								[
									106674,
									106700
								],
								[
									108003,
									108016
								],
								[
									108068,
									108082
								],
								[
									108333,
									108356
								],
								[
									108459,
									108487
								],
								[
									108596,
									108618
								],
								[
									108767,
									108809
								],
								[
									109789,
									109810
								],
								[
									109895,
									109929
								],
								[
									110082,
									110121
								],
								[
									110177,
									110189
								],
								[
									112763,
									112773
								],
								[
									112851,
									112861
								],
								[
									112941,
									112960
								],
								[
									113556,
									113573
								],
								[
									113613,
									113628
								],
								[
									113666,
									113679
								],
								[
									113715,
									113730
								],
								[
									113840,
									113845
								],
								[
									114062,
									114128
								],
								[
									114480,
									114514
								],
								[
									114598,
									114642
								],
								[
									114859,
									114907
								],
								[
									115099,
									115151
								],
								[
									115372,
									115425
								],
								[
									115775,
									115819
								],
								[
									116312,
									116388
								],
								[
									117001,
									117044
								],
								[
									117280,
									117322
								],
								[
									117369,
									117402
								],
								[
									117483,
									117517
								],
								[
									117576,
									117641
								],
								[
									117882,
									117924
								],
								[
									117963,
									117983
								],
								[
									118237,
									118302
								],
								[
									118480,
									118546
								],
								[
									118559,
									118571
								],
								[
									118589,
									118602
								],
								[
									119029,
									119060
								],
								[
									119238,
									119260
								],
								[
									119280,
									119335
								],
								[
									119815,
									119875
								],
								[
									121928,
									121941
								],
								[
									122089,
									122103
								],
								[
									122263,
									122276
								],
								[
									122358,
									122378
								],
								[
									122622,
									122660
								],
								[
									123009,
									123080
								],
								[
									123596,
									123632
								],
								[
									123909,
									123934
								],
								[
									124078,
									124104
								],
								[
									124248,
									124282
								],
								[
									124330,
									124371
								],
								[
									124651,
									124715
								],
								[
									124807,
									124838
								],
								[
									124925,
									124960
								],
								[
									124984,
									125010
								],
								[
									125124,
									125157
								],
								[
									125329,
									125347
								],
								[
									125381,
									125407
								],
								[
									125450,
									125499
								],
								[
									125524,
									125545
								],
								[
									125587,
									125603
								],
								[
									125657,
									125680
								],
								[
									125743,
									125771
								],
								[
									125833,
									125854
								],
								[
									126456,
									126489
								],
								[
									127142,
									127187
								],
								[
									127289,
									127315
								],
								[
									127577,
									127587
								],
								[
									127635,
									127656
								],
								[
									127704,
									127725
								],
								[
									127811,
									127852
								],
								[
									128685,
									128742
								],
								[
									128850,
									128862
								],
								[
									129263,
									129299
								],
								[
									129328,
									129341
								],
								[
									129384,
									129394
								],
								[
									129439,
									129454
								],
								[
									130431,
									130444
								],
								[
									131020,
									131040
								],
								[
									131115,
									131130
								],
								[
									131510,
									131523
								],
								[
									131596,
									131616
								],
								[
									131698,
									131713
								],
								[
									131779,
									131808
								],
								[
									131883,
									131916
								],
								[
									132029,
									132045
								],
								[
									132085,
									132102
								],
								[
									132124,
									132152
								],
								[
									132687,
									132712
								],
								[
									132922,
									132950
								],
								[
									133058,
									133100
								],
								[
									133430,
									133486
								],
								[
									133722,
									133763
								],
								[
									133850,
									133862
								],
								[
									134295,
									134347
								],
								[
									134609,
									134628
								],
								[
									135550,
									135560
								],
								[
									135615,
									135625
								],
								[
									136390,
									136402
								],
								[
									136468,
									136481
								],
								[
									136549,
									136563
								],
								[
									136598,
									136613
								],
								[
									136652,
									136695
								],
								[
									136763,
									136788
								],
								[
									136837,
									136881
								],
								[
									136904,
									136934
								],
								[
									137137,
									137153
								],
								[
									137175,
									137188
								],
								[
									137238,
									137269
								],
								[
									137742,
									137773
								],
								[
									137808,
									137829
								],
								[
									137909,
									137945
								],
								[
									139332,
									139361
								],
								[
									139580,
									139603
								],
								[
									139727,
									139744
								],
								[
									139874,
									139896
								],
								[
									140094,
									140120
								],
								[
									140351,
									140384
								],
								[
									140725,
									140749
								],
								[
									140821,
									140832
								],
								[
									140866,
									140879
								],
								[
									140919,
									140930
								],
								[
									141007,
									141017
								],
								[
									141093,
									141106
								],
								[
									141197,
									141206
								],
								[
									141242,
									141254
								],
								[
									141337,
									141345
								],
								[
									141445,
									141452
								],
								[
									141554,
									141575
								],
								[
									141763,
									141785
								],
								[
									142044,
									142061
								],
								[
									142215,
									142227
								],
								[
									142357,
									142371
								],
								[
									142543,
									142556
								],
								[
									142852,
									142884
								],
								[
									142890,
									142916
								],
								[
									142935,
									142963
								],
								[
									142992,
									143011
								],
								[
									143077,
									143113
								],
								[
									143228,
									143282
								],
								[
									143309,
									143329
								],
								[
									143420,
									143437
								],
								[
									143534,
									143556
								],
								[
									143665,
									143689
								],
								[
									143799,
									143829
								],
								[
									143912,
									143931
								],
								[
									144081,
									144101
								],
								[
									144220,
									144239
								],
								[
									144355,
									144371
								],
								[
									144480,
									144490
								],
								[
									144569,
									144576
								],
								[
									144643,
									144652
								],
								[
									145002,
									145023
								],
								[
									145032,
									145060
								],
								[
									145070,
									145115
								],
								[
									145268,
									145301
								],
								[
									145463,
									145495
								],
								[
									145563,
									145585
								],
								[
									145758,
									145794
								],
								[
									145957,
									145973
								],
								[
									146273,
									146286
								],
								[
									146401,
									146437
								],
								[
									146660,
									146713
								],
								[
									147790,
									147827
								],
								[
									147838,
									147853
								],
								[
									147976,
									147992
								],
								[
									148215,
									148236
								],
								[
									148364,
									148397
								],
								[
									148799,
									148823
								],
								[
									149452,
									149483
								],
								[
									149679,
									149711
								],
								[
									149878,
									149907
								],
								[
									151158,
									151210
								],
								[
									151276,
									151300
								],
								[
									151372,
									151391
								],
								[
									151977,
									152009
								],
								[
									152036,
									152071
								],
								[
									152110,
									152155
								],
								[
									153181,
									153223
								],
								[
									153240,
									153277
								],
								[
									153505,
									153524
								],
								[
									153752,
									153792
								],
								[
									154018,
									154039
								],
								[
									154535,
									154565
								],
								[
									154617,
									154681
								],
								[
									154699,
									154724
								],
								[
									154983,
									155002
								],
								[
									155117,
									155156
								],
								[
									155174,
									155212
								],
								[
									155256,
									155281
								],
								[
									155336,
									155371
								],
								[
									155405,
									155433
								],
								[
									156493,
									156500
								],
								[
									156556,
									156574
								],
								[
									156786,
									156793
								],
								[
									156980,
									156988
								],
								[
									157055,
									157067
								],
								[
									158116,
									158182
								],
								[
									158183,
									158201
								],
								[
									158442,
									158453
								],
								[
									158470,
									158490
								],
								[
									158630,
									158642
								],
								[
									158646,
									158658
								],
								[
									158773,
									158788
								],
								[
									158804,
									158810
								],
								[
									158834,
									158847
								],
								[
									159042,
									159059
								],
								[
									159104,
									159131
								],
								[
									159361,
									159395
								],
								[
									159868,
									159914
								],
								[
									160753,
									160806
								],
								[
									160817,
									160845
								],
								[
									160965,
									160970
								],
								[
									161704,
									161722
								],
								[
									161743,
									161774
								],
								[
									161881,
									161900
								],
								[
									162173,
									162186
								],
								[
									162253,
									162271
								],
								[
									162344,
									162361
								],
								[
									162427,
									162436
								],
								[
									162481,
									162488
								],
								[
									162607,
									162613
								],
								[
									162732,
									162740
								],
								[
									162859,
									162869
								],
								[
									163459,
									163494
								],
								[
									164434,
									164456
								],
								[
									164599,
									164626
								],
								[
									164871,
									164895
								],
								[
									165426,
									165447
								],
								[
									165512,
									165530
								],
								[
									165695,
									165731
								],
								[
									165856,
									165880
								],
								[
									166100,
									166119
								],
								[
									166313,
									166346
								],
								[
									166413,
									166430
								],
								[
									166768,
									166785
								]
							],
							"symlist":
							[
								"Util",
								"Util.formatAnnotatedObject",
								"  padding",
								"Util.curry",
								"  ret",
								"Curried",
								"\tfunction ()",
								"\tfunction (a)",
								"\tfunction (a, b)",
								"\tfunction (a, b, c)",
								"\tfunction (a, b, c, d)",
								"  get()",
								"Util.arityN",
								"\tfunction (fn)",
								"\tfunction ()",
								"\tfunction (fn)",
								"\tfunction (a)",
								"\tfunction (fn)",
								"\tfunction (a, b)",
								"\tfunction (fn)",
								"\tfunction (a, b, c)",
								"\tfunction (fn)",
								"\tfunction (a, b, c, d)",
								"\tfunction (fn)",
								"\tfunction (a, b, c, d, e)",
								"Util.getter",
								"  self",
								"  .fn",
								"  .fn",
								"Util.setter",
								"  self",
								"  .fn",
								"  .fn",
								"Util.remover",
								"Util.hasFn",
								"Util.adder",
								"  self",
								"ChooseFn",
								"  .fn",
								"  .fn",
								"  .fn",
								"  .fn",
								"  .fn",
								"Util.updater",
								"\tdoUpdate",
								"  create",
								"  self",
								"Util.once",
								"\tfunction (...args)",
								"Util.delay",
								"\tfunction (...args)",
								"Util.throttle",
								"\tfunction (...args)",
								"Util.debounce",
								"\tlater",
								"\tdebounced",
								"  .clear",
								"  .flush",
								"Util.debounceAsync",
								"\tfunction (...a)",
								"Util.log",
								"  get: ()",
								"  .setFilters",
								"  .getFilters",
								"Util.msg",
								"Util.generalLog",
								"Util.toSource",
								"  print",
								"Util.debug",
								"  removeCircular",
								"Util.type",
								"Util.functionName",
								"Util.className",
								"Util.unwrapComponent",
								"Util.componentName",
								"Util.count",
								"Util.parseNum",
								"Util.minmax",
								"Util.getExponential",
								"Util.getNumberParts",
								"Util.pow2",
								"Util.pow10",
								"Util.bitValue",
								"Util.bitMask",
								"Util.bitGroups",
								"Util.bitStuff",
								"Util.toBinary",
								"Util.toBits",
								"Util.getBit",
								"Util.isSet",
								"Util.bitCount",
								"Util.toggleBit",
								"Util.setBit",
								"Util.clearBit",
								"Util.range",
								"Util.set",
								"Util.inspect",
								"Util.bitArrayToNumbers",
								"Util.bitsToNumbers",
								"Util.shuffle",
								"Util.sortNum",
								"Util.draw",
								"Util.is",
								"Util.onoff",
								"Util.numbersToBits",
								"Util.randomNumbers",
								"Util.randomBits",
								"Util.padFn",
								"Util.pad",
								"Util.abbreviate",
								"Util.trim",
								"Util.trimRight",
								"Util.indent",
								"Util.define",
								"Util.memoizedProperties",
								"  get()",
								"Util.copyWhole",
								"Util.copyEntries",
								"Util.extend",
								"Util.isCloneable",
								"Util.isUnextendable",
								"  pred",
								"  value",
								"Util.defineGetter",
								"Util.defineGetterSetter",
								"Util.defineGettersSetters",
								"Util.extendArray",
								"\tfunction (pred)",
								"\tfunction ()",
								"\tfunction ()",
								"\tfunction ()",
								"\tfunction (value)",
								"Util.adapter",
								"(index), getItem",
								"  get length()",
								"  get instance()",
								"  key(i)",
								"  get(key)",
								"  has(key)",
								"  set(key, value)",
								"*keys()",
								"*entries()",
								"  toObject()",
								"  toMap()",
								"  .localStorage",
								"Util.array",
								"Util.arrayFromEntries",
								"Util.toMap",
								"Util.extendMap",
								"  .entries",
								"  .toObject",
								"  .match",
								"Util.objectFrom",
								"Util.tail",
								"Util.splice",
								"Util.identity",
								"Util.reverse",
								"Util.keyOf",
								"Util.rotateRight",
								"Util.repeater",
								"  function* ()",
								"  function* ()",
								"Util.repeat",
								"Util.arrayDim",
								"Util.flatten",
								"Util.chunkArray",
								"Util.partition",
								"Util.intersect",
								"Util.difference",
								"Util.symmetricDifference",
								"Util.union",
								"Util.chances",
								"Util.sum",
								"Util.expr",
								"\texpr",
								"\taddArgs",
								"  ret",
								"Util.mod",
								"Util.fnName",
								"Util.objName",
								"Util.findKey",
								"  value : (v)",
								"Util.find",
								"  pred",
								"  pred",
								"  pred",
								"Util.match",
								"  match",
								"Util.toHash",
								"Util.indexOf",
								"Util.greatestCommonDenominator",
								"Util.leastCommonMultiple",
								"  function* (re, str)",
								"Util.toString",
								"  stringFn",
								"  print",
								"Util.dump",
								"Util.ucfirst",
								"Util.lcfirst",
								"Util.typeOf",
								"Util.camelize",
								"Util.decamelize",
								"Util.ifThenElse",
								"\tfunction (value)",
								"Util.if",
								"Util.ifElse",
								"Util.ifThen",
								"  function* (fn, arr)",
								"Util.colorDump",
								"Util.bucketInserter",
								"\tfunction (...args)",
								"\tfunction (...args)",
								"Util.fifo",
								"  resolve",
								"  function* generator()",
								"  push(...args)",
								"  process: function run()",
								"Util.isEmail",
								"Util.isString",
								"Util.isNumeric",
								"Util.isUndefined",
								"Util.isObject",
								"Util.isPrimitive",
								"Util.isFunction",
								"Util.not",
								"\tfunction (...args)",
								"Util.isAsync",
								"Util.isArrowFunction",
								"Util.isEmptyString",
								"Util.isEmpty",
								"Util.isNonEmpty",
								"Util.isIpAddress",
								"Util.isPortNumber",
								"Util.hasProps",
								"Util.validatePassword",
								"Util.clone",
								"Util.deepClone",
								"Util.findVal",
								"Util.deepCloneObservable",
								"Util.toArray",
								"Util.arryToTree",
								"Util.to3wei",
								"Util.arrExchangePos",
								"Util.arrRemove",
								"Util.move",
								"Util.moveIf",
								"Util.logOutClearStorage",
								"Util.getCookie",
								"Util.parseCookie",
								"  pred",
								"Util.encodeCookie",
								"Util.setCookies",
								"Util.clearCookies",
								"Util.deleteCookie",
								"Util.accAdd",
								"Util.Subtr",
								"Util.accDiv",
								"Util.accMul",
								"Util.dateFormatter",
								"Util.numberFormatter",
								"Util.searchObject",
								"Util.parseQuery",
								"Util.encodeQuery",
								"Util.parseURL",
								"  href(override)",
								"Util.makeURL",
								"Util.numberFromURL",
								"Util.tryPromise",
								"  resolve",
								"  reject",
								"  resolve",
								"  reject",
								"  function (...args)",
								"\tfunction (...args)",
								"  resolve",
								"  reject",
								"Util.putError",
								"\tret =>",
								"Util.tryPredicate",
								"Util.isBrowser",
								"Util.waitFor",
								"  clear",
								"Util.timeout",
								"Util.isServer",
								"Util.isMobile",
								"Util.uniquePred",
								"Util.unique",
								"  cmp",
								"Util.zip",
								"  initVal",
								"  setVal",
								"  defKeyFunc",
								"Util.concat",
								"Util.distinct",
								"Util.rangeMinMax",
								"Util.remap",
								"  getR",
								"Util.mergeLists",
								"Util.foreach",
								"Util.all",
								"Util.isGenerator",
								"Util.isIterator",
								"Util.isIterable",
								"Util.isConstructor",
								"  construct(target, args)",
								"Util.filter",
								"  function* ()",
								"Util.reduce",
								"Util.mapFunctional",
								"\tfunction* (arg)",
								"Util.map",
								"  ret",
								"  function* ()",
								"  ret",
								"  function* ()",
								"Util.entriesToObj",
								"Util.isDate",
								"Util.parseDate",
								"Util.isoDate",
								"Util.toUnixTime",
								"Util.unixTime",
								"Util.fromUnixTime",
								"Util.formatTime",
								"(), format",
								"Util.leapYear",
								"Util.timeSpan",
								"Util.randFloat",
								"Util.randInt",
								"Util.randStr",
								"Util.hex",
								"Util.numberParts",
								"Util.roundDigits",
								"Util.roundFunction",
								"\tfunction (value)",
								"Util.roundTo",
								"Util.formatRecord",
								"\tfunction (obj)",
								"Util.isArrayLike",
								"Util.equals",
								"Util.isGetter",
								"Util.isBool",
								"Util.size",
								"Util.isMap",
								"Util.effectiveDeviceWidth",
								"Util.getFormFields",
								"Util.mergeObjects",
								"Util.getUserAgent",
								"Util.factor",
								"Util.factorial",
								"Util.increment",
								"Util.counter",
								"  self",
								"Util.filterKeys",
								"  pred",
								"  pred",
								"Util.filterMembers",
								"  pred",
								"Util.filterOutMembers",
								"  pred",
								"Util.dumpMembers",
								"Util.filterOutKeys",
								"Util.getKeys",
								"Util.numbersConvert",
								"Util.entries",
								"  function* ()",
								"Util.keys",
								"\tfunction* ()",
								"Util.values",
								"\tfunction* ()",
								"Util.removeEqual",
								"Util.clear",
								"Util.remove",
								"Util.removeIf",
								"Util.traverse",
								"\tfunction* walker(o, depth",
								"Util.traverseWithPath",
								"\tfunction* walker(o, path)",
								"Util.indexByPath",
								"Util.pushUnique",
								"Util.insertSorted",
								"  next",
								"Util.keyIterator",
								"Util.entryIterator",
								"  function* ()",
								"Util.mapAdapter",
								"  get(key)",
								"  set(key, value)",
								"  .keys",
								"  .entries",
								"Util.mapFunction",
								"  .set",
								"  .get",
								"  .set",
								"  .get",
								"  .set",
								"  .get",
								"  .set",
								"  .get",
								"  .update",
								"  .entries",
								"  .values",
								"  .keys",
								"\tfunction ()",
								"  .keys",
								"  .entries",
								"  .values",
								"  .keys",
								"  .entries",
								"  .values",
								"  .filter",
								"  function* ()",
								"  .map",
								"  function* ()",
								"  .forEach",
								"  .delete",
								"  .has",
								"  toKey",
								"  fromKey",
								"  .set",
								"  .get",
								"  .keys",
								"  .entries",
								"  .values",
								"  .has",
								"  .delete",
								"Util.mapCombinator",
								"\tkey =>",
								"\tmakeGetter",
								"Util.predicate",
								"Util.some",
								"Util.every",
								"Util.iterateMembers",
								"Util.and",
								"Util.or",
								"Util.memberNameFilter",
								"Util.getMemberNames",
								"Util.getMemberEntries",
								"  accFn",
								"  incFn",
								"  incFn",
								"  inc",
								"  self",
								"  .valueOf",
								"  filterFn",
								"Util.methodNameFilter",
								"Util.getMethodNames",
								"Util.inherit",
								"\tinherits",
								"\tinherits",
								"TempCtor",
								"Util.bindMethods",
								"Util.bindMethodsTo",
								"Util.getConstructor",
								"Util.getPrototypeChain",
								"Util.getPropertyDescriptors",
								"Util.weakAssign",
								"Util.exception",
								"  toString(color = false)",
								"Util.location",
								"  toString(color = false)",
								"  getFileName()",
								"  getLineNumber()",
								"  getColumnNumber()",
								"Util.stackFrame",
								"  propertyMap()",
								"  getFunction()",
								"  getMethodName()",
								"  getFunctionName()",
								"  getTypeName()",
								"  getFileName()",
								"  getLineNumber()",
								"  getColumnNumber()",
								"  get()",
								"  toString(color, opts = {})",
								"  getLocation()",
								"  get location()",
								"Util.scriptName",
								"Util.getFunctionName",
								"Util.scriptDir",
								"Util.stack",
								"\tgetStack",
								"  .prepareStackTrace",
								"\tstackToString",
								"  function* ()",
								"  get: ()",
								"  get: ()",
								"  toString(opts = {})",
								"  getFunctionName()",
								"  getMethodName()",
								"  getFileName()",
								"  getLineNumber()",
								"  get()",
								"Util.getCallerStack",
								"  .prepareStackTrace",
								"Util.getCallerFile",
								"Util.getCallerFunction",
								"Util.getCallerFunctionName",
								"Util.getCallerFunctionNames",
								"Util.getCaller",
								"Util.getCallers",
								"Util.getStackFrames",
								"Util.getStackFrame",
								"Util.rotateLeft",
								"Util.rotateRight",
								"Util.hashString",
								"Util.flatTree",
								"  addOutput",
								"Util.traverseTree",
								"Util.walkTree",
								"  function* ()",
								"  pred",
								"Util.isPromise",
								"  setImmediate",
								"Util.next",
								"Util.getImageAverageColor",
								"  toStringRgb()",
								"  toStringRgba()",
								"  toStringHex()",
								"  toHex",
								"Util.jsonToObject",
								"Util.splitLines",
								"Util.decodeEscapes",
								"Util.stripXML",
								"Util.stripHTML",
								"Util.stripNonPrintable",
								"Util.decodeHTMLEntities",
								"Util.encodeHTMLEntities",
								"Util.stripAnsi",
								"Util.proxy",
								"  get(target, key, receiver)",
								"  set(target, key, value, receiver)",
								"  handler",
								"  get(target, key, receiver)",
								"Util.proxyTree",
								"  applyCallback",
								"  get(target, key)",
								"  set(target, key, value)",
								"  apply(target, thisArg, args)",
								"\tnode",
								"Util.construct",
								"Util.constructApply",
								"Util.immutable",
								"  set: ()",
								"  deleteProperty: ()",
								"  defineProperty: ()",
								"Util.immutableClass",
								"Util.partial",
								"\tfunction ()",
								"Util.coloring",
								"  code(...args)",
								"  text(text)",
								"  concat(...args)",
								"  code(...args)",
								"  text(text, ...color)",
								"  concat(...args)",
								"  code(...args)",
								"  text(text, ...color)",
								"  concat(...args)",
								"Util.colorText",
								"Util.decodeAnsi",
								"  isDigit",
								"  notDigit",
								"  findIndex",
								"Util.stripAnsi",
								"Util.ansiCode",
								"Util.wordWrap",
								"Util.multiParagraphWordWrap",
								"Util.defineInspect",
								"\tfunction ()",
								"Util.bindProperties",
								"  gen",
								"  get: ()",
								"  get: ()",
								"  on: (val)",
								"  off: (val)",
								"  true: (val)",
								"  false: (val)",
								"Util.assert",
								"Util.assignGlobal",
								"Util.weakMapper",
								"  self",
								"  .set",
								"  .get",
								"Util.merge",
								"Util.transformer",
								"\tfunction (...v)",
								"Util.copyTextToClipboard",
								"Util.toPlainObject",
								"Util.timer",
								"  remaining",
								"  finish",
								"  log",
								"  timeout",
								"  add",
								"  get delay()",
								"  get created()",
								"  get start()",
								"  get stop()",
								"  get elapsed()",
								"  get end()",
								"  get remain()",
								"  cancel()",
								"  pause()",
								"  .resume",
								"  .restart",
								"  callback(...args)",
								"  subscribe(f)",
								"  unsubscribe(f)",
								"  start",
								"Util.thenableReject",
								"  then: (resolve, reject)",
								"Util.wrapGenerator",
								"\tfunction (...args)",
								"Util.wrapGeneratorMethods",
								"Util.decorateIterable",
								"  forEach(fn, thisArg)",
								"*map(fn, thisArg)",
								"*filter(pred, thisArg)",
								"  findIndex(pred, thisArg)",
								"  indexOf(item, startIndex = -1)",
								"  find(pred, thisArg)",
								"  every(pred, thisArg)",
								"  some(pred, thisArg)",
								"  reduce(fn, accu)",
								"*entries()",
								"*keys()",
								"*values()",
								"Util.swap",
								"Util.swapArray",
								"Util.cacheAdapter",
								"  getItem(request, opts = {})",
								"  setItem(request, response)",
								"  addItem(request)",
								"  removeItem(request, opts = {})",
								"  key(index)",
								"  clear()",
								"Util.cachedFetch",
								"  self",
								"Util.proxyObject",
								"  ptr",
								"  get(target, key)",
								"\tnode",
								"Util.parseXML",
								"  self",
								"Util.exit",
								"Util.getEnv",
								"Util.getEnvVars",
								"Util.safeFunction",
								"  function (...args)",
								"\tfunction (...args)",
								"Util.safeCall",
								"Util.safeApply",
								"Util.callMain",
								"Util.printReturnValue",
								"  print",
								"  self",
								"Util.replaceAll",
								"  pred",
								"Util.escapeRegex",
								"Util.consolePrinter",
								"  self",
								"  .log",
								"Util.consoleConcat",
								"  self",
								"  .add",
								"  .call",
								"\tconcat",
								"  clear()",
								"  log",
								"  print()",
								"  output()",
								"  add(...args)",
								"Util.booleanAdapter",
								"\tfunction (value)",
								"  set",
								"\tfunction (...args)",
								"  get",
								"  set",
								"  handler",
								"ExFunc",
								"  constructor()",
								"  __call__(...args)",
								"Util.isatty",
								"Util.ttyGetWinSize",
								"Util.timeit",
								"Util.lazyProperty",
								"  replaceProperty",
								"  get()",
								"HighResolutionTime",
								"  constructor(secs = 0, nano = 0)",
								"  static create(s, n)",
								"  get seconds()",
								"  get milliseconds()",
								"  get nanoseconds()",
								"  valueOf()",
								"  diff(o)",
								"  sum(o)",
								"  since(o)",
								"  toString()",
								"\thrtime",
								"  performanceNow",
								"Util.formatColumns",
								"Util.getPlatform",
								"  map",
								"\tfunction* (value)",
								"  log",
								"  function (...args)",
								"\tfunction (...args)",
								"Util.bind",
								"  ret",
								"  ret"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 104.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 90996,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										83031,
										83040
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										82935,
										82935
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										42082,
										42086
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										42023,
										42023
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19627,
										19634
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										19577,
										19577
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										21650,
										21659
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										21579,
										21579
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21712,
										21716
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										21666,
										21666
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										42210,
										42230
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										42111,
										42111
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21133,
										21137
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										21059,
										21059
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10120,
										10124
									],
									[
										20741,
										20746
									],
									[
										21266,
										21270
									],
									[
										21437,
										21441
									],
									[
										22641,
										22645
									],
									[
										23119,
										23123
									],
									[
										26695,
										26700
									],
									[
										26771,
										26776
									],
									[
										41816,
										41820
									],
									[
										74273,
										74285
									],
									[
										80501,
										80505
									],
									[
										82440,
										82444
									],
									[
										82571,
										82575
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										10041,
										10041
									],
									[
										20626,
										20626
									],
									[
										21251,
										21251
									],
									[
										21424,
										21424
									],
									[
										22591,
										22591
									],
									[
										23058,
										23058
									],
									[
										26640,
										26640
									],
									[
										26720,
										26720
									],
									[
										41741,
										41741
									],
									[
										74227,
										74227
									],
									[
										80438,
										80438
									],
									[
										82385,
										82385
									],
									[
										82484,
										82484
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										19866,
										19873
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										19815,
										19815
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19668,
										19675
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										19649,
										19649
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19877,
										19884
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										19815,
										19815
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19616,
										19623
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										19577,
										19577
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19690,
										19697
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										19649,
										19649
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19679,
										19686
									]
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
									[
										19649,
										19649
									]
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										76006,
										76023
									]
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
									[
										75940,
										75940
									]
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
									[
										10281,
										10302
									]
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
									[
										10146,
										10146
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										63988,
										63992
									],
									[
										66350,
										66354
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										63932,
										63932
									],
									[
										66282,
										66282
									]
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19638,
										19645
									]
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
									[
										19577,
										19577
									]
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19712,
										19719
									]
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
									[
										19649,
										19649
									]
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19855,
										19862
									]
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
									[
										19815,
										19815
									]
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19833,
										19840
									]
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
									[
										19815,
										19815
									]
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
									[
										19844,
										19851
									]
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
									[
										19815,
										19815
									]
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19701,
										19708
									]
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
									[
										19649,
										19649
									]
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19594,
										19601
									]
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
									[
										19577,
										19577
									]
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
									[
										19605,
										19612
									]
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
									[
										19577,
										19577
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6234,
										6237
									],
									[
										17845,
										17849
									],
									[
										26863,
										26866
									],
									[
										41924,
										41928
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										6223,
										6223
									],
									[
										17754,
										17754
									],
									[
										26799,
										26799
									],
									[
										41849,
										41849
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										42508,
										42512
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										42487,
										42487
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										75979,
										75996
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
										75940,
										75940
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										81209,
										81216
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										81190,
										81190
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21244,
										21248
									],
									[
										82796,
										82800
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										21231,
										21231
									],
									[
										82771,
										82771
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22655,
										22659
									],
									[
										60476,
										60481
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										22591,
										22591
									],
									[
										60458,
										60458
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								65972,
								65972
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"sorttabs_lastactivated": 1610152737.71,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 31045.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 167303,
						"regions":
						{
						},
						"selection":
						[
							[
								10343,
								10343
							]
						],
						"settings":
						{
							"function_name_status_row": 323,
							"sorttabs_lastactivated": 1610153264.03,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5305.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "commands.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13946,
						"regions":
						{
						},
						"selection":
						[
							[
								2465,
								2465
							]
						],
						"settings":
						{
							"function_name_status_row": 59,
							"sorttabs_lastactivated": 1610152383.25,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1225.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/eagle/boardRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14669,
						"regions":
						{
						},
						"selection":
						[
							[
								9860,
								9860
							]
						],
						"settings":
						{
							"function_name_status_row": 296,
							"sorttabs_lastactivated": 1610152295.45,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4865.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dump-ast.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 16899,
						"regions":
						{
						},
						"selection":
						[
							[
								1354,
								1354
							]
						],
						"settings":
						{
							"function_name_status_row": 41,
							"sorttabs_lastactivated": 1610152447.27,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 442.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 358.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 145.0
	},
	"output.YAMLMacros":
	{
		"height": 169.0
	},
	"output.exec":
	{
		"height": 134.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 69.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"util",
				"lib/util.js"
			],
			[
				"boardRe",
				"lib/eagle/boardRenderer.js"
			],
			[
				"comm",
				"commands.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"test-debu",
				"test-debuggerprotocol.js"
			],
			[
				"test-ff",
				"test-ffi.js"
			],
			[
				"sockval",
				"sockval.c"
			],
			[
				"sock",
				"socket.js"
			],
			[
				"fcntl",
				"fcntl.js"
			],
			[
				"socket",
				"socket.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"consoleSet",
				"lib/consoleSetup.js"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"socket.js",
				"socket.js"
			],
			[
				"test-ffi",
				"test-ffi.js"
			],
			[
				"geom.js",
				"lib/geom.js"
			],
			[
				"test-de",
				"test-debuggerprotocol.js"
			],
			[
				"ecmascrip",
				"lib/ecmascript.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"deep",
				"lib/deep.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"tree.js",
				"lib/tree.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"test-tree",
				"test-tree.js"
			],
			[
				"quickjs/CMa",
				"quickjs/CMakeLists.txt"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"parser",
				"lib/ecmascript/parser.js"
			],
			[
				"lexer",
				"lib/ecmascript/lexer.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"xml.j",
				"lib/xml.js"
			],
			[
				"xml.js",
				"lib/xml.js"
			],
			[
				"librar",
				"libraries.js"
			],
			[
				"libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs-de",
				"quickjs/quickjs-debugger-transport-unix.c"
			],
			[
				"READ",
				"quickjs/ffi/README.md"
			],
			[
				"server",
				"server.js"
			],
			[
				"js_cv",
				"src/js_cv.cpp"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"cannyDe",
				"opencv/CannyDetector_Demo.cpp"
			],
			[
				"main.cp",
				"opencv/main.cpp"
			],
			[
				"getEx",
				"opencv/getExteriorContour.cpp"
			],
			[
				"detectLine",
				"opencv/detectLines.cpp"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"objectIn",
				"lib/objectInspect.js"
			],
			[
				"param",
				"param.js"
			],
			[
				"font.j",
				"~/Dokumente/Sources/plot-cv/font.json"
			],
			[
				"chars.sv",
				"~/Dokumente/Sources/plot-cv/data/chars.svg"
			],
			[
				"linelist",
				"lib/geom/lineList.js"
			],
			[
				"polyline",
				"lib/geom/polyline.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"charac",
				"Characters.svg"
			],
			[
				"zeich",
				"Zeichnung.svg"
			],
			[
				"cvVid",
				"cvVideo.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"test-vi",
				"test-video.js"
			],
			[
				"js_u",
				"src/js_utility.cpp"
			],
			[
				"js-bin",
				"js-bindings.cmake"
			],
			[
				"defs.",
				"quickjs/defs.cmake"
			],
			[
				"cmake",
				"quickjs/CMakeLists.txt"
			],
			[
				"test-video.c",
				"test-video.c"
			],
			[
				"util.h",
				"quickjs/net/libwebsockets/win32port/zlib/zutil.h"
			],
			[
				"consoleset",
				"lib/consoleSetup.js"
			],
			[
				"objetIn",
				"lib/objectInspect.js"
			],
			[
				"jsbin",
				"js-bindings.cmake"
			],
			[
				"_cv.",
				"src/js_cv.cpp"
			],
			[
				"cvV",
				"cvVideo.js"
			],
			[
				"Util.js",
				"lib/util.js"
			],
			[
				"objectInsp",
				"lib/objectInspect.js"
			],
			[
				"cvHigh",
				"cvHighGUI.js"
			],
			[
				"jsbind",
				"js-bindings.cmake"
			],
			[
				"qjs.c",
				"quickjs/qjs.c"
			],
			[
				"jsc.c",
				"quickjs/qjsc.c"
			],
			[
				"cvv",
				"cvVideo.js"
			],
			[
				"js_arra",
				"src/js_array.h"
			],
			[
				"cmakeli",
				"quickjs/CMakeLists.txt"
			],
			[
				"objectIns",
				"lib/objectInspect.js"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"js_cv.",
				"src/js_cv.cpp"
			],
			[
				"js.h",
				"src/js.h"
			],
			[
				"videoSou",
				"videoSource.js"
			],
			[
				"cmake-",
				"scripts/get-cmake-cache.sh"
			],
			[
				"js-bi",
				"js-bindings.cmake"
			],
			[
				"high",
				"highgui-viewer.cmake"
			],
			[
				"imgui",
				"imgui-viewer.cmake"
			],
			[
				"test-ope",
				"test-opencv.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"_brotli",
				"quickjs/net.old/libwebsockets_emscripten/lib/roles/http/compression/brotli/brotli.c"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"ast dump",
				"dump-ast.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"path.js",
				"lib/path.js"
			],
			[
				"dump",
				"dump-ast.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test",
				"test-childprocess.js"
			],
			[
				"opencv/CMa",
				"opencv/CMakeLists.txt"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"js_draw",
				"src/js_draw.cpp"
			],
			[
				"opencv/CM",
				"opencv/CMakeLists.txt"
			],
			[
				"decompo",
				"opencv/decompose_homography.cpp"
			],
			[
				"seeds",
				"opencv/seeds.cpp"
			],
			[
				"js_mat",
				"src/js_mat.cpp"
			],
			[
				"path.",
				"lib/json/path.js"
			],
			[
				"estree",
				"lib/ecmascript/estree.js"
			],
			[
				"childPr",
				"lib/childProcess.js"
			],
			[
				"parser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"utils.js",
				"lib/stream/utils.js"
			],
			[
				"list-export",
				"list-exports.js"
			],
			[
				"utils.",
				"lib/stream/utils.js"
			],
			[
				"test-file",
				"test-filesystem.js"
			],
			[
				"deps.js",
				"read-deps.js"
			],
			[
				"ccache",
				"ccache.cmake"
			],
			[
				"lib/cmakelists",
				"quickjs/net/libwebsockets/lib/CMakeLists.txt"
			],
			[
				"plot-cv.h",
				"src/plot-cv.h"
			],
			[
				"plot-cv.cpp",
				"src/plot-cv.cpp"
			],
			[
				"child",
				"lib/childProcess.js"
			],
			[
				"test-read",
				"test-readdir.js"
			],
			[
				"filesyste",
				"lib/filesystem.js"
			],
			[
				"read-de",
				"read-deps.js"
			],
			[
				"js_ma",
				"src/js_mat.cpp"
			],
			[
				"eagle-q",
				"eagle-query.js"
			],
			[
				"compo",
				"components.js"
			],
			[
				"eagle",
				"lib/eagle.js"
			],
			[
				"line.",
				"lib/geom/line.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"eagle-qu",
				"eagle-query.js"
			],
			[
				"r-co",
				"r-colors.svg"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 1050.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
