{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "LoadSource(filename)\nStart(args, address = '127.0.0.1:9901')\n  function*TokenizeJS(data, filename)\nCreateSocket(url)\nReadSocket()\n  .sendMessage = function(msg)\nGetVariables(ref = 0)\nUpdatePosition()\nStepIn()\nStepOut()\nNext()\nContinue()\nPause()\nEvaluate(expression)\nStackTrace()\nSendRequest(command, args = {})\nShowSource(sourceFile)",
			"settings":
			{
				"buffer_size": 333,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					79,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
						"symkeys":
						[
							[
								35,
								49
							],
							[
								118,
								128
							],
							[
								180,
								189
							],
							[
								283,
								290
							],
							[
								334,
								358
							],
							[
								504,
								523
							],
							[
								627,
								635
							],
							[
								676,
								689
							],
							[
								874,
								890
							],
							[
								1158,
								1179
							],
							[
								1283,
								1304
							],
							[
								1341,
								1355
							],
							[
								1476,
								1492
							],
							[
								1639,
								1656
							],
							[
								1736,
								1755
							],
							[
								1913,
								1927
							],
							[
								2008,
								2021
							],
							[
								2107,
								2118
							],
							[
								2170,
								2180
							],
							[
								2232,
								2242
							],
							[
								2308,
								2318
							],
							[
								2369,
								2415
							]
						],
						"symlist":
						[
							"contains(item)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"add(...items)",
							"pred = (a, b) =>",
							"pred = (arr, item) =>",
							"pred = (arr, item) =>",
							" (...items) =>",
							"delete(...items)",
							"remove(predicate)",
							"predicate = item =>",
							"rotateRight(n)",
							"rotateLeft(n)",
							"get first()",
							"get head()",
							"get tail()",
							"get last()",
							" function extendArray(proto = Array.prototype)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAACMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					80,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								2682,
								2687
							],
							[
								2851,
								2862
							],
							[
								3014,
								3019
							],
							[
								3216,
								3251
							],
							[
								5183,
								5231
							],
							[
								5847,
								5883
							],
							[
								6021,
								6044
							],
							[
								6507,
								6518
							],
							[
								6929,
								6961
							],
							[
								7071,
								7098
							],
							[
								7967,
								7995
							],
							[
								8076,
								8106
							],
							[
								8176,
								8207
							],
							[
								8417,
								8440
							],
							[
								8503,
								8527
							],
							[
								8591,
								8612
							],
							[
								8673,
								8698
							],
							[
								8738,
								8760
							],
							[
								8822,
								8857
							],
							[
								8913,
								8940
							],
							[
								9239,
								9279
							],
							[
								9412,
								9432
							],
							[
								9735,
								9787
							],
							[
								10073,
								10109
							],
							[
								10277,
								10296
							],
							[
								10338,
								10356
							],
							[
								10410,
								10433
							],
							[
								10752,
								10782
							],
							[
								10820,
								10828
							],
							[
								11118,
								11155
							]
						],
						"symlist":
						[
							" e =>",
							"async () =>",
							" e =>",
							"async function LoadSource(filename)",
							"function Start(args, address = '127.0.0.1:9901')",
							"function* TokenizeJS(data, filename)",
							" (acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(url)",
							"async function ReadSocket()",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"(acc, tokens, i) =>",
							"([type, token]) =>",
							"(acc, [type, token]) =>",
							"SourceFile = ({ filename }) =>",
							" resp =>",
							"async function ShowSource(sourceFile)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAjAQAAICBjb250YWlucyhpdGVtKQogIGdldCBsYXN0KCkKICBhdChpbmRleCkKICBjbGVhcigpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIHVuaXF1ZSgpCiAgYWRkKC4uLml0ZW1zKQogIGRlbGV0ZSguLi5pdGVtcykKICByZW1vdmUocHJlZGljYXRlKQogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGdldCBmaXJzdCgpCiAgZ2V0IGhlYWQoKQogIGdldCB0YWlsKCkKICBnZXQgbGFzdCgpCiAgZXh0ZW5kQXJyYXkocHJvdG8gPSBBcnJheS5wcm90b3R5cGUpAAAAAAAAAABNAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					81,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								729
							],
							[
								794,
								812
							],
							[
								1086,
								1104
							],
							[
								1159,
								1174
							],
							[
								1226,
								1242
							],
							[
								1295,
								1311
							],
							[
								1435,
								1453
							],
							[
								1809,
								1831
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNAQAATG9hZFNvdXJjZShmaWxlbmFtZSkKU3RhcnQoYXJncywgYWRkcmVzcyA9ICcxMjcuMC4wLjE6OTkwMScpCiAgZnVuY3Rpb24qVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKQ3JlYXRlU29ja2V0KHVybCkKUmVhZFNvY2tldCgpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQpTaG93U291cmNlKHNvdXJjZUZpbGUpAAAAAAAAAACbAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					82,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								729
							],
							[
								794,
								812
							],
							[
								1090,
								1108
							],
							[
								1163,
								1178
							],
							[
								1230,
								1246
							],
							[
								1299,
								1315
							],
							[
								1439,
								1457
							],
							[
								1813,
								1835
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					83,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								736
							],
							[
								823,
								841
							],
							[
								1127,
								1145
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1476,
								1494
							],
							[
								1850,
								1872
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					84,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								830,
								848
							],
							[
								1134,
								1152
							],
							[
								1207,
								1222
							],
							[
								1274,
								1290
							],
							[
								1343,
								1359
							],
							[
								1483,
								1501
							],
							[
								1857,
								1879
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level....args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					85,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								830,
								848
							],
							[
								1134,
								1152
							],
							[
								1207,
								1222
							],
							[
								1274,
								1290
							],
							[
								1343,
								1359
							],
							[
								1483,
								1501
							],
							[
								1857,
								1879
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					86,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								830,
								848
							],
							[
								1134,
								1152
							],
							[
								1207,
								1222
							],
							[
								1274,
								1290
							],
							[
								1343,
								1359
							],
							[
								1483,
								1501
							],
							[
								1857,
								1879
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					87,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								830,
								848
							],
							[
								1134,
								1152
							],
							[
								1207,
								1222
							],
							[
								1274,
								1290
							],
							[
								1343,
								1359
							],
							[
								1483,
								1501
							],
							[
								1857,
								1879
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					88,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								851,
								869
							],
							[
								1155,
								1173
							],
							[
								1228,
								1243
							],
							[
								1295,
								1311
							],
							[
								1364,
								1380
							],
							[
								1504,
								1522
							],
							[
								1878,
								1900
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					89,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								851,
								869
							],
							[
								1175,
								1193
							],
							[
								1248,
								1263
							],
							[
								1315,
								1331
							],
							[
								1384,
								1400
							],
							[
								1524,
								1542
							],
							[
								1898,
								1920
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					90,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								851,
								869
							],
							[
								1175,
								1193
							],
							[
								1248,
								1263
							],
							[
								1315,
								1331
							],
							[
								1384,
								1400
							],
							[
								1526,
								1544
							],
							[
								1900,
								1922
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					91,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								912,
								930
							],
							[
								1236,
								1254
							],
							[
								1309,
								1324
							],
							[
								1376,
								1392
							],
							[
								1445,
								1461
							],
							[
								1587,
								1605
							],
							[
								1961,
								1983
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					92,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								974,
								992
							],
							[
								1298,
								1316
							],
							[
								1371,
								1386
							],
							[
								1438,
								1454
							],
							[
								1507,
								1523
							],
							[
								1649,
								1667
							],
							[
								2023,
								2045
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					93,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								742
							],
							[
								1012,
								1030
							],
							[
								1336,
								1354
							],
							[
								1409,
								1424
							],
							[
								1476,
								1492
							],
							[
								1545,
								1561
							],
							[
								1687,
								1705
							],
							[
								2061,
								2083
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level,...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					94,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								1026,
								1044
							],
							[
								1354,
								1372
							],
							[
								1427,
								1442
							],
							[
								1494,
								1510
							],
							[
								1563,
								1579
							],
							[
								1705,
								1723
							],
							[
								2079,
								2101
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					95,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								1026,
								1044
							],
							[
								1354,
								1372
							],
							[
								1427,
								1442
							],
							[
								1494,
								1510
							],
							[
								1563,
								1579
							],
							[
								1705,
								1723
							],
							[
								2079,
								2101
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					96,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								1028,
								1046
							],
							[
								1356,
								1374
							],
							[
								1429,
								1444
							],
							[
								1496,
								1512
							],
							[
								1565,
								1581
							],
							[
								1707,
								1725
							],
							[
								2081,
								2103
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					97,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								963,
								981
							],
							[
								1291,
								1309
							],
							[
								1364,
								1379
							],
							[
								1431,
								1447
							],
							[
								1500,
								1516
							],
							[
								1642,
								1660
							],
							[
								2016,
								2038
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					98,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								961,
								979
							],
							[
								1289,
								1307
							],
							[
								1362,
								1377
							],
							[
								1429,
								1445
							],
							[
								1498,
								1514
							],
							[
								1640,
								1658
							],
							[
								2014,
								2036
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					99,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								955,
								973
							],
							[
								1283,
								1301
							],
							[
								1356,
								1371
							],
							[
								1423,
								1439
							],
							[
								1492,
								1508
							],
							[
								1634,
								1652
							],
							[
								2008,
								2030
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								953,
								971
							],
							[
								1281,
								1299
							],
							[
								1354,
								1369
							],
							[
								1421,
								1437
							],
							[
								1490,
								1506
							],
							[
								1632,
								1650
							],
							[
								2006,
								2028
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					101,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								957,
								975
							],
							[
								1285,
								1303
							],
							[
								1358,
								1373
							],
							[
								1425,
								1441
							],
							[
								1494,
								1510
							],
							[
								1636,
								1654
							],
							[
								2010,
								2032
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/package.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								957,
								975
							],
							[
								1285,
								1303
							],
							[
								1358,
								1373
							],
							[
								1425,
								1441
							],
							[
								1494,
								1510
							],
							[
								1636,
								1654
							],
							[
								2010,
								2032
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					104,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								957,
								975
							],
							[
								1285,
								1303
							],
							[
								1358,
								1373
							],
							[
								1425,
								1441
							],
							[
								1494,
								1510
							],
							[
								1636,
								1654
							],
							[
								2010,
								2032
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								957,
								975
							],
							[
								1319,
								1337
							],
							[
								1392,
								1407
							],
							[
								1459,
								1475
							],
							[
								1528,
								1544
							],
							[
								1670,
								1688
							],
							[
								2044,
								2066
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								724,
								743
							],
							[
								975,
								993
							],
							[
								1337,
								1355
							],
							[
								1410,
								1425
							],
							[
								1477,
								1493
							],
							[
								1546,
								1562
							],
							[
								1688,
								1706
							],
							[
								2062,
								2084
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								994,
								1012
							],
							[
								1356,
								1374
							],
							[
								1429,
								1444
							],
							[
								1496,
								1512
							],
							[
								1565,
								1581
							],
							[
								1707,
								1725
							],
							[
								2081,
								2103
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					108,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								995,
								1013
							],
							[
								1357,
								1375
							],
							[
								1430,
								1445
							],
							[
								1497,
								1513
							],
							[
								1566,
								1582
							],
							[
								1708,
								1726
							],
							[
								2082,
								2104
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								996,
								1014
							],
							[
								1358,
								1376
							],
							[
								1431,
								1446
							],
							[
								1498,
								1514
							],
							[
								1567,
								1583
							],
							[
								1709,
								1727
							],
							[
								2083,
								2105
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					110,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								996,
								1014
							],
							[
								1358,
								1376
							],
							[
								1431,
								1446
							],
							[
								1498,
								1514
							],
							[
								1567,
								1583
							],
							[
								1709,
								1727
							],
							[
								2083,
								2105
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/lexer.js",
						"symkeys":
						[
							[
								93,
								122
							],
							[
								794,
								798
							],
							[
								872,
								876
							],
							[
								1225,
								1269
							],
							[
								1360,
								1365
							],
							[
								1389,
								1426
							],
							[
								1454,
								1490
							],
							[
								1515,
								1581
							],
							[
								2334,
								2353
							],
							[
								3077,
								3111
							],
							[
								3246,
								3270
							],
							[
								3494,
								3529
							],
							[
								3920,
								3925
							],
							[
								4100,
								4105
							],
							[
								4213,
								4218
							],
							[
								4380,
								4428
							],
							[
								4541,
								4584
							],
							[
								4744,
								4786
							],
							[
								4846,
								4890
							],
							[
								4994,
								5031
							],
							[
								5152,
								5157
							],
							[
								5186,
								5199
							],
							[
								5376,
								5400
							],
							[
								5747,
								5784
							],
							[
								5975,
								5986
							],
							[
								6192,
								6209
							],
							[
								7882,
								7899
							]
						],
						"symlist":
						[
							"Lexer.defunct = function(chr)",
							"n =>",
							"r =>",
							"function Token(lexeme, index, type, id, loc)",
							"Token",
							"Token.prototype.toString = function()",
							"Token.prototype.valueOf = function()",
							"Lexer.prototype.addRule = function(name, pattern, callback, start)",
							" (sub, def, pos) =>",
							"callback = (lex, lexeme, index) =>",
							" (lex, lexeme, index) =>",
							"action: (result, length, offset) =>",
							"Token",
							"get()",
							"get()",
							"Lexer.prototype.define = function(name, pattern)",
							"Lexer.prototype.pushState = function(state)",
							"Lexer.prototype.popState = function(state)",
							"Lexer.prototype.getRules = function* (state)",
							"Lexer.prototype.topState = function()",
							"Lexer",
							" function* ()",
							" function Lexer(defunct)",
							".setInput = function(input, filename)",
							"incr = n =>",
							".lex = function()",
							" function scan()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAC0CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								996,
								1014
							],
							[
								1358,
								1376
							],
							[
								1431,
								1446
							],
							[
								1498,
								1514
							],
							[
								1567,
								1583
							],
							[
								1709,
								1727
							],
							[
								2083,
								2105
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtAgAATGV4ZXIuZGVmdW5jdCA9IGZ1bmN0aW9uKGNocikKVG9rZW4obGV4ZW1lLCBpbmRleCwgdHlwZSwgaWQsIGxvYykKVG9rZW4KVG9rZW4ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQpUb2tlbi5wcm90b3R5cGUudmFsdWVPZiA9IGZ1bmN0aW9uKCkKTGV4ZXIucHJvdG90eXBlLmFkZFJ1bGUgPSBmdW5jdGlvbihuYW1lLCBwYXR0ZXJuLCBjYWxsYmFjaywgc3RhcnQpClRva2VuCiAgZ2V0KCkKICBnZXQoKQpMZXhlci5wcm90b3R5cGUuZGVmaW5lID0gZnVuY3Rpb24obmFtZSwgcGF0dGVybikKTGV4ZXIucHJvdG90eXBlLnB1c2hTdGF0ZSA9IGZ1bmN0aW9uKHN0YXRlKQpMZXhlci5wcm90b3R5cGUucG9wU3RhdGUgPSBmdW5jdGlvbihzdGF0ZSkKTGV4ZXIucHJvdG90eXBlLmdldFJ1bGVzID0gZnVuY3Rpb24qKHN0YXRlKQpMZXhlci5wcm90b3R5cGUudG9wU3RhdGUgPSBmdW5jdGlvbigpCkxleGVyCiAgZnVuY3Rpb24qKCkKTGV4ZXIoZGVmdW5jdCkKICAuc2V0SW5wdXQgPSBmdW5jdGlvbihpbnB1dCwgZmlsZW5hbWUpCiAgLmxleCA9IGZ1bmN0aW9uKCkKICBzY2FuKCkAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					113,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								916,
								934
							],
							[
								1048,
								1066
							],
							[
								1121,
								1136
							],
							[
								1188,
								1204
							],
							[
								1257,
								1273
							],
							[
								1399,
								1417
							],
							[
								1773,
								1795
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					114,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								919,
								937
							],
							[
								1051,
								1069
							],
							[
								1124,
								1139
							],
							[
								1191,
								1207
							],
							[
								1260,
								1276
							],
							[
								1402,
								1420
							],
							[
								1776,
								1798
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					115,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1173,
								1188
							],
							[
								1240,
								1256
							],
							[
								1309,
								1325
							],
							[
								1451,
								1469
							],
							[
								1825,
								1847
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1173,
								1188
							],
							[
								1240,
								1256
							],
							[
								1309,
								1325
							],
							[
								1451,
								1469
							],
							[
								1825,
								1847
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1173,
								1188
							],
							[
								1240,
								1256
							],
							[
								1309,
								1325
							],
							[
								1451,
								1469
							],
							[
								1825,
								1847
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								206,
								241
							],
							[
								381,
								395
							],
							[
								413,
								435
							],
							[
								544,
								548
							],
							[
								1702,
								1705
							],
							[
								1723,
								1743
							],
							[
								2062,
								2067
							],
							[
								2268,
								2274
							],
							[
								2281,
								2290
							],
							[
								2396,
								2411
							],
							[
								2596,
								2618
							],
							[
								2841,
								2851
							],
							[
								3532,
								3579
							],
							[
								3662,
								3666
							],
							[
								3743,
								3757
							],
							[
								3853,
								3873
							],
							[
								4645,
								4663
							],
							[
								4933,
								4960
							],
							[
								5105,
								5121
							],
							[
								5419,
								5435
							],
							[
								5564,
								5582
							],
							[
								5637,
								5655
							],
							[
								5755,
								5772
							],
							[
								5839,
								5859
							]
						],
						"symlist":
						[
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>",
							"CLI",
							"constructor(prompt2)",
							"() =>",
							"help()",
							"show(arg)",
							"handleCmd(data)",
							"function main(...args)",
							" (a, v) =>",
							" function createWS(url, callbacks, listen = 0)",
							"a =>",
							"(acc, part) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							"onClose(ws, status, reason)",
							"onHttp(req, rsp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg)",
							"onError(ws, error)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAANgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1173,
								1188
							],
							[
								1240,
								1256
							],
							[
								1309,
								1325
							],
							[
								1451,
								1469
							],
							[
								1825,
								1847
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA2AQAAR2V0T3B0KG9wdGlvbnMgPSB7fSwgYXJncykKQ0xJCiAgY29uc3RydWN0b3IocHJvbXB0MikKICBoZWxwKCkKICBzaG93KGFyZykKICBoYW5kbGVDbWQoZGF0YSkKICBtYWluKC4uLmFyZ3MpCiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbiA9IDApCiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cywgc3RhdHVzLCByZWFzb24pCiAgb25IdHRwKHJlcSwgcnNwKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkVycm9yKHdzLCBlcnJvcikKICBnZXQgY29ubmVjdGlvbnMoKQogIHF1aXQod2h5KQAAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1199,
								1214
							],
							[
								1266,
								1282
							],
							[
								1335,
								1351
							],
							[
								1477,
								1495
							],
							[
								1851,
								1873
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					123,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					124,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					126,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								968,
								986
							],
							[
								1100,
								1118
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1198,
								1213
							],
							[
								1265,
								1281
							],
							[
								1334,
								1350
							],
							[
								1476,
								1494
							],
							[
								1850,
								1872
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					128,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								1009,
								1027
							],
							[
								1141,
								1159
							],
							[
								1241,
								1256
							],
							[
								1308,
								1324
							],
							[
								1377,
								1393
							],
							[
								1519,
								1537
							],
							[
								1893,
								1915
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					129,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								1009,
								1027
							],
							[
								1141,
								1159
							],
							[
								1241,
								1256
							],
							[
								1308,
								1324
							],
							[
								1377,
								1393
							],
							[
								1519,
								1537
							],
							[
								1893,
								1915
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								1009,
								1027
							],
							[
								1141,
								1159
							],
							[
								1241,
								1256
							],
							[
								1308,
								1324
							],
							[
								1377,
								1393
							],
							[
								1519,
								1537
							],
							[
								1893,
								1915
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					131,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								979,
								997
							],
							[
								1111,
								1129
							],
							[
								1211,
								1226
							],
							[
								1278,
								1294
							],
							[
								1347,
								1363
							],
							[
								1489,
								1507
							],
							[
								1863,
								1885
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								994,
								1012
							],
							[
								1126,
								1144
							],
							[
								1226,
								1241
							],
							[
								1293,
								1309
							],
							[
								1362,
								1378
							],
							[
								1504,
								1522
							],
							[
								1878,
								1900
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					133,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								994,
								1012
							],
							[
								1126,
								1144
							],
							[
								1226,
								1241
							],
							[
								1293,
								1309
							],
							[
								1362,
								1378
							],
							[
								1504,
								1522
							],
							[
								1878,
								1900
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					134,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								1010,
								1028
							],
							[
								1142,
								1160
							],
							[
								1242,
								1257
							],
							[
								1309,
								1325
							],
							[
								1378,
								1394
							],
							[
								1520,
								1538
							],
							[
								1894,
								1916
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								1010,
								1028
							],
							[
								1142,
								1160
							],
							[
								1242,
								1257
							],
							[
								1309,
								1325
							],
							[
								1378,
								1394
							],
							[
								1517,
								1535
							],
							[
								1891,
								1913
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					136,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1198,
								1213
							],
							[
								1265,
								1281
							],
							[
								1334,
								1350
							],
							[
								1476,
								1494
							],
							[
								1850,
								1872
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					137,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1198,
								1213
							],
							[
								1265,
								1281
							],
							[
								1334,
								1350
							],
							[
								1476,
								1494
							],
							[
								1850,
								1872
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					138,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					139,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								967,
								985
							],
							[
								1099,
								1117
							],
							[
								1201,
								1216
							],
							[
								1268,
								1284
							],
							[
								1337,
								1353
							],
							[
								1479,
								1497
							],
							[
								1853,
								1875
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					140,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1200,
								1215
							],
							[
								1267,
								1283
							],
							[
								1336,
								1352
							],
							[
								1478,
								1496
							],
							[
								1852,
								1874
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					141,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1117,
								1135
							],
							[
								1219,
								1234
							],
							[
								1286,
								1302
							],
							[
								1355,
								1371
							],
							[
								1497,
								1515
							],
							[
								1871,
								1893
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					142,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1117,
								1135
							],
							[
								1219,
								1234
							],
							[
								1286,
								1302
							],
							[
								1355,
								1371
							],
							[
								1497,
								1515
							],
							[
								1871,
								1893
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					143,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1219,
								1234
							],
							[
								1286,
								1302
							],
							[
								1355,
								1371
							],
							[
								1497,
								1515
							],
							[
								1871,
								1893
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					144,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1195,
								1210
							],
							[
								1262,
								1278
							],
							[
								1331,
								1347
							],
							[
								1473,
								1491
							],
							[
								1847,
								1869
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					145,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1195,
								1210
							],
							[
								1262,
								1278
							],
							[
								1331,
								1347
							],
							[
								1473,
								1491
							],
							[
								1847,
								1869
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					146,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1195,
								1210
							],
							[
								1262,
								1278
							],
							[
								1331,
								1347
							],
							[
								1470,
								1488
							],
							[
								1844,
								1866
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					147,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1195,
								1210
							],
							[
								1262,
								1278
							],
							[
								1331,
								1347
							],
							[
								1471,
								1489
							],
							[
								1845,
								1867
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					148,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1195,
								1210
							],
							[
								1262,
								1278
							],
							[
								1331,
								1347
							],
							[
								1471,
								1489
							],
							[
								1845,
								1867
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					149,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1094,
								1112
							],
							[
								1199,
								1214
							],
							[
								1266,
								1282
							],
							[
								1335,
								1351
							],
							[
								1475,
								1493
							],
							[
								1849,
								1871
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					150,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1098,
								1116
							],
							[
								1203,
								1218
							],
							[
								1270,
								1286
							],
							[
								1339,
								1355
							],
							[
								1479,
								1497
							],
							[
								1853,
								1875
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					151,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1096,
								1114
							],
							[
								1201,
								1216
							],
							[
								1268,
								1284
							],
							[
								1337,
								1353
							],
							[
								1477,
								1495
							],
							[
								1851,
								1873
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					152,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								187,
								210
							],
							[
								303,
								323
							],
							[
								444,
								471
							],
							[
								517,
								532
							],
							[
								597,
								622
							],
							[
								669,
								692
							],
							[
								722,
								727
							],
							[
								966,
								984
							],
							[
								1096,
								1114
							],
							[
								1201,
								1216
							],
							[
								1268,
								1284
							],
							[
								1337,
								1353
							],
							[
								1477,
								1495
							],
							[
								1851,
								1873
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"() =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8538,
								8543
							],
							[
								8725,
								8731
							],
							[
								8789,
								8794
							],
							[
								8847,
								8851
							],
							[
								8925,
								8929
							],
							[
								8951,
								8960
							],
							[
								9619,
								9638
							],
							[
								9741,
								9745
							],
							[
								10119,
								10143
							],
							[
								10184,
								10205
							],
							[
								10207,
								10212
							],
							[
								10220,
								10225
							],
							[
								10247,
								10282
							],
							[
								10396,
								10414
							],
							[
								10496,
								10501
							],
							[
								10693,
								10714
							],
							[
								10847,
								10865
							],
							[
								11544,
								11569
							],
							[
								11615,
								11633
							],
							[
								12609,
								12636
							],
							[
								12991,
								13016
							],
							[
								13355,
								13389
							],
							[
								13905,
								13937
							],
							[
								14112,
								14122
							],
							[
								14255,
								14265
							],
							[
								14388,
								14398
							],
							[
								14565,
								14589
							],
							[
								14648,
								14697
							],
							[
								14939,
								14961
							],
							[
								14968,
								14992
							],
							[
								15000,
								15029
							],
							[
								15597,
								15649
							],
							[
								16103,
								16107
							],
							[
								16134,
								16139
							],
							[
								16574,
								16660
							],
							[
								16858,
								16880
							],
							[
								17393,
								17425
							],
							[
								17753,
								17787
							],
							[
								17902,
								17907
							],
							[
								17932,
								17968
							],
							[
								18157,
								18182
							],
							[
								18373,
								18398
							],
							[
								18453,
								18457
							],
							[
								18512,
								18516
							],
							[
								18963,
								18980
							],
							[
								19174,
								19189
							],
							[
								19312,
								19329
							],
							[
								19381,
								19385
							],
							[
								19430,
								19434
							],
							[
								19465,
								19469
							],
							[
								19512,
								19517
							],
							[
								19604,
								19623
							],
							[
								19838,
								19873
							],
							[
								19911,
								19919
							],
							[
								19988,
								19992
							],
							[
								20555,
								20559
							],
							[
								20618,
								20622
							],
							[
								21208,
								21214
							],
							[
								21389,
								21393
							],
							[
								21414,
								21418
							],
							[
								21453,
								21457
							],
							[
								21722,
								21735
							],
							[
								21863,
								21867
							],
							[
								22061,
								22077
							],
							[
								22343,
								22348
							],
							[
								22461,
								22470
							],
							[
								22542,
								22551
							],
							[
								22628,
								22637
							],
							[
								23277,
								23299
							],
							[
								23476,
								23536
							],
							[
								23785,
								23805
							],
							[
								23816,
								23825
							],
							[
								23880,
								23892
							],
							[
								23937,
								23944
							],
							[
								24030,
								24061
							],
							[
								24383,
								24416
							],
							[
								25471,
								25524
							],
							[
								25575,
								25588
							],
							[
								25670,
								25713
							],
							[
								25792,
								25796
							],
							[
								25925,
								25932
							],
							[
								25959,
								25966
							],
							[
								26044,
								26065
							],
							[
								26337,
								26379
							],
							[
								26502,
								26523
							],
							[
								26767,
								26812
							],
							[
								27005,
								27075
							],
							[
								27512,
								27537
							],
							[
								27560,
								27564
							],
							[
								27584,
								27597
							],
							[
								27713,
								27785
							],
							[
								28094,
								28103
							],
							[
								28535,
								28600
							],
							[
								28687,
								28713
							],
							[
								28959,
								28984
							],
							[
								29007,
								29011
							],
							[
								29031,
								29044
							],
							[
								29098,
								29154
							],
							[
								29156,
								29162
							],
							[
								29171,
								29173
							],
							[
								29198,
								29205
							],
							[
								29229,
								29323
							],
							[
								29330,
								29354
							],
							[
								29417,
								29444
							],
							[
								29453,
								29473
							],
							[
								29608,
								29612
							],
							[
								29799,
								29818
							],
							[
								29902,
								29921
							],
							[
								30014,
								30029
							],
							[
								30919,
								30934
							],
							[
								31025,
								31040
							],
							[
								31712,
								31753
							],
							[
								31958,
								31962
							],
							[
								31992,
								32003
							],
							[
								32086,
								32106
							],
							[
								32369,
								32393
							],
							[
								32451,
								32491
							],
							[
								32863,
								32882
							],
							[
								32933,
								32952
							],
							[
								33814,
								33842
							],
							[
								34047,
								34059
							],
							[
								34090,
								34102
							],
							[
								34613,
								34661
							],
							[
								34884,
								34890
							],
							[
								35040,
								35045
							],
							[
								35071,
								35078
							],
							[
								35141,
								35146
							],
							[
								35174,
								35181
							],
							[
								35814,
								35830
							],
							[
								35953,
								35957
							],
							[
								36465,
								36473
							],
							[
								36916,
								36924
							],
							[
								36977,
								36982
							],
							[
								37023,
								37031
							],
							[
								37171,
								37176
							],
							[
								37263,
								37279
							],
							[
								38955,
								38960
							],
							[
								39593,
								39644
							],
							[
								40052,
								40057
							],
							[
								40076,
								40081
							],
							[
								40389,
								40406
							],
							[
								40582,
								40588
							],
							[
								40736,
								40756
							],
							[
								40833,
								40863
							],
							[
								41039,
								41047
							],
							[
								41151,
								41162
							],
							[
								41278,
								41282
							],
							[
								42019,
								42060
							],
							[
								42683,
								42706
							],
							[
								43295,
								43299
							],
							[
								43443,
								43447
							],
							[
								43959,
								43963
							],
							[
								43978,
								44008
							],
							[
								44056,
								44060
							],
							[
								44074,
								44104
							],
							[
								44158,
								44162
							],
							[
								44181,
								44205
							],
							[
								44270,
								44274
							],
							[
								44314,
								44338
							],
							[
								44455,
								44459
							],
							[
								44485,
								44489
							],
							[
								44559,
								44563
							],
							[
								44589,
								44593
							],
							[
								44686,
								44690
							],
							[
								45048,
								45083
							],
							[
								45194,
								45207
							],
							[
								45648,
								45688
							],
							[
								45739,
								45748
							],
							[
								45769,
								45780
							],
							[
								45872,
								45883
							],
							[
								45929,
								45985
							],
							[
								45992,
								45998
							],
							[
								46080,
								46100
							],
							[
								46147,
								46205
							],
							[
								46212,
								46218
							],
							[
								46261,
								46268
							],
							[
								46285,
								46306
							],
							[
								46368,
								46379
							],
							[
								46609,
								46627
							],
							[
								46667,
								46673
							],
							[
								46706,
								46734
							],
							[
								46772,
								46794
							],
							[
								46879,
								46903
							],
							[
								46904,
								46918
							],
							[
								48040,
								48073
							],
							[
								48082,
								48083
							],
							[
								48135,
								48159
							],
							[
								48200,
								48231
							],
							[
								48240,
								48241
							],
							[
								48485,
								48528
							],
							[
								48847,
								48874
							],
							[
								49168,
								49187
							],
							[
								49400,
								49416
							],
							[
								49740,
								49760
							],
							[
								50655,
								50702
							],
							[
								51085,
								51100
							],
							[
								51317,
								51330
							],
							[
								51607,
								51620
							],
							[
								51826,
								51839
							],
							[
								52063,
								52069
							],
							[
								52119,
								52140
							],
							[
								55875,
								55886
							],
							[
								56722,
								56726
							],
							[
								57175,
								57180
							],
							[
								57334,
								57348
							],
							[
								57371,
								57376
							],
							[
								57489,
								57510
							],
							[
								57568,
								57573
							],
							[
								57681,
								57702
							],
							[
								57927,
								57940
							],
							[
								57941,
								57968
							],
							[
								58085,
								58108
							],
							[
								58390,
								58405
							],
							[
								58430,
								58447
							],
							[
								58514,
								58522
							],
							[
								58595,
								58600
							],
							[
								58706,
								58730
							],
							[
								59312,
								59339
							],
							[
								59435,
								59439
							],
							[
								59836,
								59872
							],
							[
								59966,
								59975
							],
							[
								60010,
								60021
							],
							[
								60073,
								60087
							],
							[
								60653,
								60657
							],
							[
								61342,
								61350
							],
							[
								61466,
								61474
							],
							[
								61594,
								61602
							],
							[
								61717,
								61725
							],
							[
								61782,
								61790
							],
							[
								62262,
								62270
							],
							[
								62455,
								62502
							],
							[
								62648,
								62661
							],
							[
								62824,
								62842
							],
							[
								63010,
								63014
							],
							[
								63086,
								63093
							],
							[
								63341,
								63360
							],
							[
								63392,
								63410
							],
							[
								63936,
								63956
							],
							[
								64281,
								64298
							],
							[
								64506,
								64524
							],
							[
								64801,
								64824
							],
							[
								65275,
								65292
							],
							[
								65384,
								65392
							],
							[
								65611,
								65625
							],
							[
								65808,
								65848
							],
							[
								65913,
								65927
							],
							[
								66502,
								66518
							],
							[
								66556,
								66631
							],
							[
								66876,
								66897
							],
							[
								67006,
								67010
							],
							[
								67489,
								67503
							],
							[
								67793,
								67797
							],
							[
								67869,
								67873
							],
							[
								68155,
								68172
							],
							[
								68340,
								68348
							],
							[
								68546,
								68550
							],
							[
								68646,
								68661
							],
							[
								68907,
								68911
							],
							[
								69118,
								69135
							],
							[
								69227,
								69242
							],
							[
								70040,
								70052
							],
							[
								70059,
								70072
							],
							[
								70110,
								70125
							],
							[
								70229,
								70249
							],
							[
								70429,
								70456
							],
							[
								70510,
								70522
							],
							[
								70640,
								70648
							],
							[
								71097,
								71105
							],
							[
								71927,
								71936
							],
							[
								72171,
								72178
							],
							[
								72277,
								72297
							],
							[
								72484,
								72504
							],
							[
								72870,
								72880
							],
							[
								73683,
								73687
							],
							[
								73762,
								73766
							],
							[
								73780,
								73794
							],
							[
								74051,
								74058
							],
							[
								76448,
								76480
							],
							[
								76877,
								76881
							],
							[
								77087,
								77091
							],
							[
								77159,
								77163
							],
							[
								77247,
								77254
							],
							[
								77333,
								77337
							],
							[
								78411,
								78457
							],
							[
								78892,
								78901
							],
							[
								80787,
								80805
							],
							[
								81003,
								81026
							],
							[
								81068,
								81083
							],
							[
								81439,
								81454
							],
							[
								81867,
								81887
							],
							[
								82345,
								82363
							],
							[
								83079,
								83088
							],
							[
								83131,
								83135
							],
							[
								83347,
								83385
							],
							[
								83560,
								83583
							],
							[
								83727,
								83732
							],
							[
								83771,
								83781
							],
							[
								83945,
								83949
							],
							[
								84096,
								84100
							],
							[
								84139,
								84144
							],
							[
								84549,
								84553
							],
							[
								84592,
								84606
							],
							[
								84610,
								84624
							],
							[
								84631,
								84635
							],
							[
								84656,
								84671
							],
							[
								84702,
								84716
							],
							[
								84828,
								84839
							],
							[
								84889,
								84894
							],
							[
								84954,
								84959
							],
							[
								85414,
								85424
							],
							[
								85538,
								85555
							],
							[
								85568,
								85572
							],
							[
								85753,
								85757
							],
							[
								85918,
								85939
							],
							[
								87037,
								87041
							],
							[
								87147,
								87151
							],
							[
								87445,
								87473
							],
							[
								87924,
								87928
							],
							[
								88384,
								88393
							],
							[
								88477,
								88486
							],
							[
								88590,
								88598
							],
							[
								89104,
								89113
							],
							[
								89262,
								89266
							],
							[
								89331,
								89357
							],
							[
								90002,
								90007
							],
							[
								90314,
								90345
							],
							[
								91382,
								91403
							],
							[
								91608,
								91636
							],
							[
								92003,
								92046
							],
							[
								93376,
								93385
							],
							[
								94265,
								94269
							],
							[
								95009,
								95036
							],
							[
								95159,
								95172
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAAAAQ3JlYXRlU2VydmVyKCkKQ3JlYXRlQ2xpZW50KCkKICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAPoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6BgAAICBlbnRyaWVzKCkKICBhcHBlbmRfdG8oZWxlbSwgcCkKRHJhd1NWRyguLi5hcmdzKQogIGFwcGVuZF90byhlbGVtLCBwKQogIGFkanVzdFZpZXdCb3goZSkKICBjYWxjVmlld0JveChib3gpCiAgc2V0Vmlld0JveChzdmdPd25lciwgYm94KQogIHJlYWRGaWxlKGZpbGVuYW1lKQogIHdyaXRlRmlsZShmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKICBleGlzdHMoZmlsZW5hbWUpCiAgcmVhbHBhdGgoZmlsZW5hbWUpCkxvYWRGaWxlKGZpbGUpClNhdmVGaWxlKGZpbGVuYW1lLCBkYXRhLCBjb250ZW50VHlwZSkKU2F2ZVNWRyhmaWxlbmFtZSwgbGF5ZXJzID0gWzEsIDE2LCAyMCwgMjEsIDIyLCAyMywgMjUsIDI3LCA0NywgNDgsIDUxXSkKTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpEcmF3QXJjKHN0YXJ0LCBlbmQsIGFuZ2xlKQpSZWN1cnNlQmluYXJ5Tm9kZShub2RlLCBwYXJlbnQgPSBudWxsLCBkZXB0aCA9IDApCkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKUGF0aHNUb1BvbHlsaW5lcyhwYXRocywgc3RlcCA9IDAuMDEpCk91dHNldFBhdGgocGF0aCwgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4wMSkKICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCk91dHNldFBhdGhzKHBhdGhzLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjI1KQpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKKGl0ZW0uCkVhZ2xlTWFwcyhwcm9qZWN0KQogIGZ1bmN0aW9uKlBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKTmV4dERvY3VtZW50KG4gPSAxKQpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICByZW5hbWVQYWNrYWdlcygpCiAgZm4gPSBmdW5jdGlvbih2KQogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIHh4KCkKKHRyYW5zZm9ybSkKUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpSZWN0ClBhY2thZ2VDaGlsZHJlbihlbGVtZW50LCBsYXllcikKTmV3UGF0aChwYXRoKQpab29tRmFjdG9yKHZhbCA9IGNvbmZpZy4KWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KSGFuZGxlTWVzc2FnZShtc2cpCkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQogIGZ1bmN0aW9uKigpCiAgbG9nKHR5cGUsIHRpbWUsIG1zZykKICBmdW5jdGlvbiooKQpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCiAgYWRkKG5hbWUsIGNvbXBvbmVudCkKICBhZGRFbnRyeShbbmFtZSwgY29tcG9uZW50XSkKICByZW1vdmUobmFtZSkKICB1cGRhdGUoKQogIG1ha2VMYXllck5hbWUobmFtZSwgc2lkZSkKICBmdW5jdGlvbihhLCBiKQogIGZ1bmN0aW9uKGEsIGIpCk1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQogIGZ1bmN0aW9uKldhbGtVcChlKQpOb2RlClRvdWNoRXZlbnQoZXZlbnQpCiAgbW9kKG4sIG0pCiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8538,
								8543
							],
							[
								8725,
								8731
							],
							[
								8789,
								8794
							],
							[
								8847,
								8851
							],
							[
								8925,
								8929
							],
							[
								8951,
								8960
							],
							[
								9619,
								9638
							],
							[
								9741,
								9745
							],
							[
								10119,
								10143
							],
							[
								10184,
								10205
							],
							[
								10207,
								10212
							],
							[
								10220,
								10225
							],
							[
								10247,
								10282
							],
							[
								10396,
								10414
							],
							[
								10496,
								10501
							],
							[
								10693,
								10714
							],
							[
								10847,
								10865
							],
							[
								11544,
								11569
							],
							[
								11615,
								11633
							],
							[
								12609,
								12636
							],
							[
								12991,
								13016
							],
							[
								13355,
								13389
							],
							[
								13905,
								13937
							],
							[
								14112,
								14122
							],
							[
								14255,
								14265
							],
							[
								14388,
								14398
							],
							[
								14565,
								14589
							],
							[
								14648,
								14697
							],
							[
								14939,
								14961
							],
							[
								14968,
								14992
							],
							[
								15000,
								15029
							],
							[
								15597,
								15649
							],
							[
								16103,
								16107
							],
							[
								16134,
								16139
							],
							[
								16574,
								16660
							],
							[
								16858,
								16880
							],
							[
								17393,
								17425
							],
							[
								17753,
								17787
							],
							[
								17902,
								17907
							],
							[
								17932,
								17968
							],
							[
								18157,
								18182
							],
							[
								18373,
								18398
							],
							[
								18453,
								18457
							],
							[
								18512,
								18516
							],
							[
								18963,
								18980
							],
							[
								19174,
								19189
							],
							[
								19312,
								19329
							],
							[
								19381,
								19385
							],
							[
								19430,
								19434
							],
							[
								19465,
								19469
							],
							[
								19512,
								19517
							],
							[
								19604,
								19623
							],
							[
								19838,
								19873
							],
							[
								19911,
								19919
							],
							[
								19988,
								19992
							],
							[
								20555,
								20559
							],
							[
								20618,
								20622
							],
							[
								21208,
								21214
							],
							[
								21389,
								21393
							],
							[
								21414,
								21418
							],
							[
								21453,
								21457
							],
							[
								21722,
								21735
							],
							[
								21863,
								21867
							],
							[
								22061,
								22077
							],
							[
								22343,
								22348
							],
							[
								22461,
								22470
							],
							[
								22542,
								22551
							],
							[
								22628,
								22637
							],
							[
								23277,
								23299
							],
							[
								23476,
								23536
							],
							[
								23785,
								23805
							],
							[
								23816,
								23825
							],
							[
								23880,
								23892
							],
							[
								23937,
								23944
							],
							[
								24030,
								24061
							],
							[
								24383,
								24416
							],
							[
								25471,
								25524
							],
							[
								25575,
								25588
							],
							[
								25670,
								25713
							],
							[
								25792,
								25796
							],
							[
								25925,
								25932
							],
							[
								25959,
								25966
							],
							[
								26044,
								26065
							],
							[
								26337,
								26379
							],
							[
								26502,
								26523
							],
							[
								26767,
								26812
							],
							[
								27005,
								27075
							],
							[
								27512,
								27537
							],
							[
								27560,
								27564
							],
							[
								27584,
								27597
							],
							[
								27713,
								27785
							],
							[
								28094,
								28103
							],
							[
								28535,
								28600
							],
							[
								28687,
								28713
							],
							[
								28959,
								28984
							],
							[
								29007,
								29011
							],
							[
								29031,
								29044
							],
							[
								29098,
								29154
							],
							[
								29156,
								29162
							],
							[
								29171,
								29173
							],
							[
								29198,
								29205
							],
							[
								29229,
								29323
							],
							[
								29330,
								29354
							],
							[
								29417,
								29444
							],
							[
								29453,
								29473
							],
							[
								29608,
								29612
							],
							[
								29799,
								29818
							],
							[
								29902,
								29921
							],
							[
								30014,
								30029
							],
							[
								30919,
								30934
							],
							[
								31025,
								31040
							],
							[
								31712,
								31753
							],
							[
								31958,
								31962
							],
							[
								31992,
								32003
							],
							[
								32086,
								32106
							],
							[
								32369,
								32393
							],
							[
								32451,
								32491
							],
							[
								32863,
								32882
							],
							[
								32933,
								32952
							],
							[
								33814,
								33842
							],
							[
								34047,
								34059
							],
							[
								34090,
								34102
							],
							[
								34613,
								34661
							],
							[
								34884,
								34890
							],
							[
								35040,
								35045
							],
							[
								35071,
								35078
							],
							[
								35141,
								35146
							],
							[
								35174,
								35181
							],
							[
								35814,
								35830
							],
							[
								35953,
								35957
							],
							[
								36465,
								36473
							],
							[
								36916,
								36924
							],
							[
								36977,
								36982
							],
							[
								37023,
								37031
							],
							[
								37171,
								37176
							],
							[
								37263,
								37279
							],
							[
								38955,
								38960
							],
							[
								39593,
								39644
							],
							[
								40052,
								40057
							],
							[
								40076,
								40081
							],
							[
								40389,
								40406
							],
							[
								40582,
								40588
							],
							[
								40736,
								40756
							],
							[
								40833,
								40863
							],
							[
								41039,
								41047
							],
							[
								41151,
								41162
							],
							[
								41278,
								41282
							],
							[
								42019,
								42060
							],
							[
								42683,
								42706
							],
							[
								43295,
								43299
							],
							[
								43443,
								43447
							],
							[
								43959,
								43963
							],
							[
								43978,
								44008
							],
							[
								44056,
								44060
							],
							[
								44074,
								44104
							],
							[
								44158,
								44162
							],
							[
								44181,
								44205
							],
							[
								44270,
								44274
							],
							[
								44314,
								44338
							],
							[
								44455,
								44459
							],
							[
								44485,
								44489
							],
							[
								44559,
								44563
							],
							[
								44589,
								44593
							],
							[
								44686,
								44690
							],
							[
								45048,
								45083
							],
							[
								45194,
								45207
							],
							[
								45648,
								45688
							],
							[
								45739,
								45748
							],
							[
								45769,
								45780
							],
							[
								45872,
								45883
							],
							[
								45929,
								45985
							],
							[
								45992,
								45998
							],
							[
								46080,
								46100
							],
							[
								46147,
								46205
							],
							[
								46212,
								46218
							],
							[
								46261,
								46268
							],
							[
								46285,
								46306
							],
							[
								46368,
								46379
							],
							[
								46609,
								46627
							],
							[
								46667,
								46673
							],
							[
								46706,
								46734
							],
							[
								46772,
								46794
							],
							[
								46879,
								46903
							],
							[
								46904,
								46918
							],
							[
								48040,
								48073
							],
							[
								48082,
								48083
							],
							[
								48135,
								48159
							],
							[
								48200,
								48231
							],
							[
								48240,
								48241
							],
							[
								48485,
								48528
							],
							[
								48847,
								48874
							],
							[
								49168,
								49187
							],
							[
								49400,
								49416
							],
							[
								49740,
								49760
							],
							[
								50655,
								50702
							],
							[
								51085,
								51100
							],
							[
								51317,
								51330
							],
							[
								51607,
								51620
							],
							[
								51826,
								51839
							],
							[
								52063,
								52069
							],
							[
								52119,
								52140
							],
							[
								55875,
								55886
							],
							[
								56722,
								56726
							],
							[
								57175,
								57180
							],
							[
								57334,
								57348
							],
							[
								57371,
								57376
							],
							[
								57489,
								57510
							],
							[
								57568,
								57573
							],
							[
								57681,
								57702
							],
							[
								57927,
								57940
							],
							[
								57941,
								57968
							],
							[
								58085,
								58108
							],
							[
								58390,
								58405
							],
							[
								58430,
								58447
							],
							[
								58514,
								58522
							],
							[
								58595,
								58600
							],
							[
								58706,
								58730
							],
							[
								59312,
								59339
							],
							[
								59435,
								59439
							],
							[
								59836,
								59872
							],
							[
								59966,
								59975
							],
							[
								60010,
								60021
							],
							[
								60073,
								60087
							],
							[
								60653,
								60657
							],
							[
								61342,
								61350
							],
							[
								61466,
								61474
							],
							[
								61594,
								61602
							],
							[
								61717,
								61725
							],
							[
								61782,
								61790
							],
							[
								62262,
								62270
							],
							[
								62455,
								62502
							],
							[
								62648,
								62661
							],
							[
								62824,
								62842
							],
							[
								63010,
								63014
							],
							[
								63086,
								63093
							],
							[
								63341,
								63360
							],
							[
								63392,
								63410
							],
							[
								63936,
								63956
							],
							[
								64281,
								64298
							],
							[
								64506,
								64524
							],
							[
								64801,
								64824
							],
							[
								65275,
								65292
							],
							[
								65384,
								65392
							],
							[
								65611,
								65625
							],
							[
								65808,
								65848
							],
							[
								65913,
								65927
							],
							[
								66502,
								66518
							],
							[
								66556,
								66631
							],
							[
								66876,
								66897
							],
							[
								67006,
								67010
							],
							[
								67489,
								67503
							],
							[
								67793,
								67797
							],
							[
								67869,
								67873
							],
							[
								68155,
								68172
							],
							[
								68340,
								68348
							],
							[
								68546,
								68550
							],
							[
								68646,
								68661
							],
							[
								68907,
								68911
							],
							[
								69118,
								69135
							],
							[
								69227,
								69242
							],
							[
								70040,
								70052
							],
							[
								70059,
								70072
							],
							[
								70110,
								70125
							],
							[
								70229,
								70249
							],
							[
								70429,
								70456
							],
							[
								70510,
								70522
							],
							[
								70640,
								70648
							],
							[
								71097,
								71105
							],
							[
								71927,
								71936
							],
							[
								72171,
								72178
							],
							[
								72277,
								72297
							],
							[
								72484,
								72504
							],
							[
								72870,
								72880
							],
							[
								73683,
								73687
							],
							[
								73762,
								73766
							],
							[
								73780,
								73794
							],
							[
								74051,
								74058
							],
							[
								76448,
								76480
							],
							[
								76877,
								76881
							],
							[
								77087,
								77091
							],
							[
								77159,
								77163
							],
							[
								77247,
								77254
							],
							[
								77333,
								77337
							],
							[
								78411,
								78457
							],
							[
								78892,
								78901
							],
							[
								80787,
								80805
							],
							[
								81003,
								81026
							],
							[
								81068,
								81083
							],
							[
								81439,
								81454
							],
							[
								81867,
								81887
							],
							[
								82345,
								82363
							],
							[
								83079,
								83088
							],
							[
								83131,
								83135
							],
							[
								83347,
								83385
							],
							[
								83560,
								83583
							],
							[
								83727,
								83732
							],
							[
								83771,
								83781
							],
							[
								83945,
								83949
							],
							[
								84096,
								84100
							],
							[
								84139,
								84144
							],
							[
								84549,
								84553
							],
							[
								84592,
								84606
							],
							[
								84610,
								84624
							],
							[
								84631,
								84635
							],
							[
								84656,
								84671
							],
							[
								84702,
								84716
							],
							[
								84828,
								84839
							],
							[
								84889,
								84894
							],
							[
								84954,
								84959
							],
							[
								85414,
								85424
							],
							[
								85538,
								85555
							],
							[
								85568,
								85572
							],
							[
								85753,
								85757
							],
							[
								85918,
								85939
							],
							[
								87037,
								87041
							],
							[
								87147,
								87151
							],
							[
								87445,
								87473
							],
							[
								87924,
								87928
							],
							[
								88384,
								88393
							],
							[
								88477,
								88486
							],
							[
								88590,
								88598
							],
							[
								89104,
								89113
							],
							[
								89262,
								89266
							],
							[
								89331,
								89357
							],
							[
								90002,
								90007
							],
							[
								90314,
								90345
							],
							[
								91382,
								91403
							],
							[
								91608,
								91636
							],
							[
								92003,
								92046
							],
							[
								93376,
								93385
							],
							[
								94265,
								94269
							],
							[
								95009,
								95036
							],
							[
								95159,
								95172
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AQAAAAAAAAAAAAAA+gYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8538,
								8543
							],
							[
								8725,
								8731
							],
							[
								8789,
								8794
							],
							[
								8847,
								8851
							],
							[
								8925,
								8929
							],
							[
								8951,
								8960
							],
							[
								9619,
								9638
							],
							[
								9741,
								9745
							],
							[
								10119,
								10143
							],
							[
								10184,
								10205
							],
							[
								10207,
								10212
							],
							[
								10220,
								10225
							],
							[
								10247,
								10282
							],
							[
								10396,
								10414
							],
							[
								10496,
								10501
							],
							[
								10693,
								10714
							],
							[
								10847,
								10865
							],
							[
								11544,
								11569
							],
							[
								11615,
								11633
							],
							[
								12609,
								12636
							],
							[
								12991,
								13016
							],
							[
								13355,
								13389
							],
							[
								13905,
								13937
							],
							[
								14112,
								14122
							],
							[
								14255,
								14265
							],
							[
								14388,
								14398
							],
							[
								14565,
								14589
							],
							[
								14648,
								14697
							],
							[
								14939,
								14961
							],
							[
								14968,
								14992
							],
							[
								15000,
								15029
							],
							[
								15597,
								15649
							],
							[
								16103,
								16107
							],
							[
								16134,
								16139
							],
							[
								16574,
								16660
							],
							[
								16858,
								16880
							],
							[
								17393,
								17425
							],
							[
								17753,
								17787
							],
							[
								17902,
								17907
							],
							[
								17932,
								17968
							],
							[
								18157,
								18182
							],
							[
								18373,
								18398
							],
							[
								18453,
								18457
							],
							[
								18512,
								18516
							],
							[
								18963,
								18980
							],
							[
								19174,
								19189
							],
							[
								19312,
								19329
							],
							[
								19381,
								19385
							],
							[
								19430,
								19434
							],
							[
								19465,
								19469
							],
							[
								19512,
								19517
							],
							[
								19604,
								19623
							],
							[
								19838,
								19873
							],
							[
								19911,
								19919
							],
							[
								19988,
								19992
							],
							[
								20555,
								20559
							],
							[
								20618,
								20622
							],
							[
								21208,
								21214
							],
							[
								21389,
								21393
							],
							[
								21414,
								21418
							],
							[
								21453,
								21457
							],
							[
								21722,
								21735
							],
							[
								21863,
								21867
							],
							[
								22061,
								22077
							],
							[
								22343,
								22348
							],
							[
								22461,
								22470
							],
							[
								22542,
								22551
							],
							[
								22628,
								22637
							],
							[
								23277,
								23299
							],
							[
								23476,
								23536
							],
							[
								23785,
								23805
							],
							[
								23816,
								23825
							],
							[
								23880,
								23892
							],
							[
								23937,
								23944
							],
							[
								24030,
								24061
							],
							[
								24383,
								24416
							],
							[
								25471,
								25524
							],
							[
								25575,
								25588
							],
							[
								25670,
								25713
							],
							[
								25792,
								25796
							],
							[
								25925,
								25932
							],
							[
								25959,
								25966
							],
							[
								26044,
								26065
							],
							[
								26337,
								26379
							],
							[
								26502,
								26523
							],
							[
								26767,
								26812
							],
							[
								27005,
								27075
							],
							[
								27512,
								27537
							],
							[
								27560,
								27564
							],
							[
								27584,
								27597
							],
							[
								27713,
								27785
							],
							[
								28094,
								28103
							],
							[
								28535,
								28600
							],
							[
								28687,
								28713
							],
							[
								28959,
								28984
							],
							[
								29007,
								29011
							],
							[
								29031,
								29044
							],
							[
								29098,
								29154
							],
							[
								29156,
								29162
							],
							[
								29171,
								29173
							],
							[
								29198,
								29205
							],
							[
								29229,
								29323
							],
							[
								29330,
								29354
							],
							[
								29417,
								29444
							],
							[
								29453,
								29473
							],
							[
								29608,
								29612
							],
							[
								29799,
								29818
							],
							[
								29902,
								29921
							],
							[
								30014,
								30029
							],
							[
								30919,
								30934
							],
							[
								31025,
								31040
							],
							[
								31712,
								31753
							],
							[
								31958,
								31962
							],
							[
								31992,
								32003
							],
							[
								32086,
								32106
							],
							[
								32369,
								32393
							],
							[
								32451,
								32491
							],
							[
								32863,
								32882
							],
							[
								32933,
								32952
							],
							[
								33814,
								33842
							],
							[
								34047,
								34059
							],
							[
								34090,
								34102
							],
							[
								34613,
								34661
							],
							[
								34884,
								34890
							],
							[
								35040,
								35045
							],
							[
								35071,
								35078
							],
							[
								35141,
								35146
							],
							[
								35174,
								35181
							],
							[
								35814,
								35830
							],
							[
								35953,
								35957
							],
							[
								36465,
								36473
							],
							[
								36916,
								36924
							],
							[
								36977,
								36982
							],
							[
								37023,
								37031
							],
							[
								37171,
								37176
							],
							[
								37263,
								37279
							],
							[
								38955,
								38960
							],
							[
								39593,
								39644
							],
							[
								40052,
								40057
							],
							[
								40076,
								40081
							],
							[
								40389,
								40406
							],
							[
								40582,
								40588
							],
							[
								40736,
								40756
							],
							[
								40833,
								40863
							],
							[
								41039,
								41047
							],
							[
								41151,
								41162
							],
							[
								41278,
								41282
							],
							[
								42019,
								42060
							],
							[
								42683,
								42706
							],
							[
								43295,
								43299
							],
							[
								43443,
								43447
							],
							[
								43959,
								43963
							],
							[
								43978,
								44008
							],
							[
								44056,
								44060
							],
							[
								44074,
								44104
							],
							[
								44158,
								44162
							],
							[
								44181,
								44205
							],
							[
								44270,
								44274
							],
							[
								44314,
								44338
							],
							[
								44455,
								44459
							],
							[
								44485,
								44489
							],
							[
								44559,
								44563
							],
							[
								44589,
								44593
							],
							[
								44686,
								44690
							],
							[
								45048,
								45083
							],
							[
								45194,
								45207
							],
							[
								45648,
								45688
							],
							[
								45739,
								45748
							],
							[
								45769,
								45780
							],
							[
								45872,
								45883
							],
							[
								45929,
								45985
							],
							[
								45992,
								45998
							],
							[
								46080,
								46100
							],
							[
								46147,
								46205
							],
							[
								46212,
								46218
							],
							[
								46261,
								46268
							],
							[
								46285,
								46306
							],
							[
								46368,
								46379
							],
							[
								46609,
								46627
							],
							[
								46667,
								46673
							],
							[
								46706,
								46734
							],
							[
								46772,
								46794
							],
							[
								46879,
								46903
							],
							[
								46904,
								46918
							],
							[
								48040,
								48073
							],
							[
								48082,
								48083
							],
							[
								48135,
								48159
							],
							[
								48200,
								48231
							],
							[
								48240,
								48241
							],
							[
								48485,
								48528
							],
							[
								48847,
								48874
							],
							[
								49168,
								49187
							],
							[
								49400,
								49416
							],
							[
								49740,
								49760
							],
							[
								50655,
								50702
							],
							[
								51085,
								51100
							],
							[
								51317,
								51330
							],
							[
								51607,
								51620
							],
							[
								51826,
								51839
							],
							[
								52063,
								52069
							],
							[
								52119,
								52140
							],
							[
								55875,
								55886
							],
							[
								56722,
								56726
							],
							[
								57175,
								57180
							],
							[
								57334,
								57348
							],
							[
								57371,
								57376
							],
							[
								57489,
								57510
							],
							[
								57568,
								57573
							],
							[
								57681,
								57702
							],
							[
								57927,
								57940
							],
							[
								57941,
								57968
							],
							[
								58085,
								58108
							],
							[
								58390,
								58405
							],
							[
								58430,
								58447
							],
							[
								58514,
								58522
							],
							[
								58595,
								58600
							],
							[
								58706,
								58730
							],
							[
								59318,
								59345
							],
							[
								59441,
								59445
							],
							[
								59842,
								59878
							],
							[
								59972,
								59981
							],
							[
								60016,
								60027
							],
							[
								60079,
								60093
							],
							[
								60659,
								60663
							],
							[
								61348,
								61356
							],
							[
								61472,
								61480
							],
							[
								61600,
								61608
							],
							[
								61723,
								61731
							],
							[
								61788,
								61796
							],
							[
								62268,
								62276
							],
							[
								62461,
								62508
							],
							[
								62654,
								62667
							],
							[
								62830,
								62848
							],
							[
								63016,
								63020
							],
							[
								63092,
								63099
							],
							[
								63347,
								63366
							],
							[
								63398,
								63416
							],
							[
								63942,
								63962
							],
							[
								64287,
								64304
							],
							[
								64512,
								64530
							],
							[
								64807,
								64830
							],
							[
								65281,
								65298
							],
							[
								65390,
								65398
							],
							[
								65617,
								65631
							],
							[
								65814,
								65854
							],
							[
								65919,
								65933
							],
							[
								66508,
								66524
							],
							[
								66562,
								66637
							],
							[
								66882,
								66903
							],
							[
								67012,
								67016
							],
							[
								67495,
								67509
							],
							[
								67799,
								67803
							],
							[
								67875,
								67879
							],
							[
								68161,
								68178
							],
							[
								68346,
								68354
							],
							[
								68552,
								68556
							],
							[
								68652,
								68667
							],
							[
								68913,
								68917
							],
							[
								69124,
								69141
							],
							[
								69233,
								69248
							],
							[
								70046,
								70058
							],
							[
								70065,
								70078
							],
							[
								70116,
								70131
							],
							[
								70235,
								70255
							],
							[
								70435,
								70462
							],
							[
								70516,
								70528
							],
							[
								70646,
								70654
							],
							[
								71103,
								71111
							],
							[
								71933,
								71942
							],
							[
								72177,
								72184
							],
							[
								72283,
								72303
							],
							[
								72490,
								72510
							],
							[
								72876,
								72886
							],
							[
								73689,
								73693
							],
							[
								73768,
								73772
							],
							[
								73786,
								73800
							],
							[
								74057,
								74064
							],
							[
								76454,
								76486
							],
							[
								76883,
								76887
							],
							[
								77093,
								77097
							],
							[
								77165,
								77169
							],
							[
								77253,
								77260
							],
							[
								77339,
								77343
							],
							[
								78417,
								78463
							],
							[
								78898,
								78907
							],
							[
								80793,
								80811
							],
							[
								81009,
								81032
							],
							[
								81074,
								81089
							],
							[
								81445,
								81460
							],
							[
								81873,
								81893
							],
							[
								82351,
								82369
							],
							[
								83085,
								83094
							],
							[
								83137,
								83141
							],
							[
								83353,
								83391
							],
							[
								83566,
								83589
							],
							[
								83733,
								83738
							],
							[
								83777,
								83787
							],
							[
								83951,
								83955
							],
							[
								84102,
								84106
							],
							[
								84145,
								84150
							],
							[
								84555,
								84559
							],
							[
								84598,
								84612
							],
							[
								84616,
								84630
							],
							[
								84637,
								84641
							],
							[
								84662,
								84677
							],
							[
								84708,
								84722
							],
							[
								84834,
								84845
							],
							[
								84895,
								84900
							],
							[
								84960,
								84965
							],
							[
								85420,
								85430
							],
							[
								85544,
								85561
							],
							[
								85574,
								85578
							],
							[
								85759,
								85763
							],
							[
								85924,
								85945
							],
							[
								87043,
								87047
							],
							[
								87153,
								87157
							],
							[
								87451,
								87479
							],
							[
								87930,
								87934
							],
							[
								88390,
								88399
							],
							[
								88483,
								88492
							],
							[
								88596,
								88604
							],
							[
								89110,
								89119
							],
							[
								89268,
								89272
							],
							[
								89337,
								89363
							],
							[
								90008,
								90013
							],
							[
								90320,
								90351
							],
							[
								91388,
								91409
							],
							[
								91614,
								91642
							],
							[
								92009,
								92052
							],
							[
								93382,
								93391
							],
							[
								94271,
								94275
							],
							[
								95015,
								95042
							],
							[
								95165,
								95178
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD6BgAAICBlbnRyaWVzKCkKICBhcHBlbmRfdG8oZWxlbSwgcCkKRHJhd1NWRyguLi5hcmdzKQogIGFwcGVuZF90byhlbGVtLCBwKQogIGFkanVzdFZpZXdCb3goZSkKICBjYWxjVmlld0JveChib3gpCiAgc2V0Vmlld0JveChzdmdPd25lciwgYm94KQogIHJlYWRGaWxlKGZpbGVuYW1lKQogIHdyaXRlRmlsZShmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKICBleGlzdHMoZmlsZW5hbWUpCiAgcmVhbHBhdGgoZmlsZW5hbWUpCkxvYWRGaWxlKGZpbGUpClNhdmVGaWxlKGZpbGVuYW1lLCBkYXRhLCBjb250ZW50VHlwZSkKU2F2ZVNWRyhmaWxlbmFtZSwgbGF5ZXJzID0gWzEsIDE2LCAyMCwgMjEsIDIyLCAyMywgMjUsIDI3LCA0NywgNDgsIDUxXSkKTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpEcmF3QXJjKHN0YXJ0LCBlbmQsIGFuZ2xlKQpSZWN1cnNlQmluYXJ5Tm9kZShub2RlLCBwYXJlbnQgPSBudWxsLCBkZXB0aCA9IDApCkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKUGF0aHNUb1BvbHlsaW5lcyhwYXRocywgc3RlcCA9IDAuMDEpCk91dHNldFBhdGgocGF0aCwgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4wMSkKICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCk91dHNldFBhdGhzKHBhdGhzLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjI1KQpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKKGl0ZW0uCkVhZ2xlTWFwcyhwcm9qZWN0KQogIGZ1bmN0aW9uKlBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKTmV4dERvY3VtZW50KG4gPSAxKQpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICByZW5hbWVQYWNrYWdlcygpCiAgZm4gPSBmdW5jdGlvbih2KQogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIHh4KCkKKHRyYW5zZm9ybSkKUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpSZWN0ClBhY2thZ2VDaGlsZHJlbihlbGVtZW50LCBsYXllcikKTmV3UGF0aChwYXRoKQpab29tRmFjdG9yKHZhbCA9IGNvbmZpZy4KWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KSGFuZGxlTWVzc2FnZShtc2cpCkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQogIGZ1bmN0aW9uKigpCiAgbG9nKHR5cGUsIHRpbWUsIG1zZykKICBmdW5jdGlvbiooKQpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCiAgYWRkKG5hbWUsIGNvbXBvbmVudCkKICBhZGRFbnRyeShbbmFtZSwgY29tcG9uZW50XSkKICByZW1vdmUobmFtZSkKICB1cGRhdGUoKQogIG1ha2VMYXllck5hbWUobmFtZSwgc2lkZSkKICBmdW5jdGlvbihhLCBiKQogIGZ1bmN0aW9uKGEsIGIpCk1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQogIGZ1bmN0aW9uKldhbGtVcChlKQpOb2RlClRvdWNoRXZlbnQoZXZlbnQpCiAgbW9kKG4sIG0pCiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQAAAAAAAAAA+gYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoGAAAgIGVudHJpZXMoKQogIGFwcGVuZF90byhlbGVtLCBwKQpEcmF3U1ZHKC4uLmFyZ3MpCiAgYXBwZW5kX3RvKGVsZW0sIHApCiAgYWRqdXN0Vmlld0JveChlKQogIGNhbGNWaWV3Qm94KGJveCkKICBzZXRWaWV3Qm94KHN2Z093bmVyLCBib3gpCiAgcmVhZEZpbGUoZmlsZW5hbWUpCiAgd3JpdGVGaWxlKGZpbGVuYW1lLCBkYXRhLCBvdmVyd3JpdGUgPSB0cnVlKQogIGV4aXN0cyhmaWxlbmFtZSkKICByZWFscGF0aChmaWxlbmFtZSkKTG9hZEZpbGUoZmlsZSkKU2F2ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIGNvbnRlbnRUeXBlKQpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQpMb2FkU1ZHKGZpbGVuYW1lKQpMb2FkSW1hZ2UoZmlsZW5hbWUpClJlbmRlckNvbXBvbmVudChjb21wb25lbnQpCkRyYXdBcmMoc3RhcnQsIGVuZCwgYW5nbGUpClJlY3Vyc2VCaW5hcnlOb2RlKG5vZGUsIHBhcmVudCA9IG51bGwsIGRlcHRoID0gMCkKRHJhd05vZGUoeCwgeSwgbm9kZSkKRHJhd0VkZ2UoaXRlbSwgcGFyZW50KQpHZXRQYXRocyhxdWVyeSwgcGFyZW50ID0gcHJvamVjdC5zdmdFbGVtZW50KQpQYXRoVG9Qb2x5bGluZXMocGF0aCwgc3RlcCA9IDAuMDEpClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQooaXRlbS4KRWFnbGVNYXBzKHByb2plY3QpCiAgZnVuY3Rpb24qUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQpOZXh0RG9jdW1lbnQobiA9IDEpCkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIHJlbmFtZVBhY2thZ2VzKCkKICBmbiA9IGZ1bmN0aW9uKHYpCiAgLm1ha2VHcm91cCA9IGZ1bmN0aW9uKHsgdHJhbnNmb3JtLCAuLi5wcm9wcyB9ID0ge30pCiAgeHgoKQoodHJhbnNmb3JtKQpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpClJlY3QKUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQpOZXdQYXRoKHBhdGgpClpvb21GYWN0b3IodmFsID0gY29uZmlnLgpab29tTG9nKGZhY3RvcikKQWRqdXN0Wm9vbShsID0gY29uZmlnLgpIYW5kbGVNZXNzYWdlKG1zZykKRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCiAgZnVuY3Rpb24qKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQogIGZ1bmN0aW9uKigpCkRvY3VtZW50TGlzdAogIGNvbnN0cnVjdG9yKCkKICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKTW92ZUV2ZW50KGV2ZW50LCBwcmV2RXZlbnQpCiAgZnVuY3Rpb24qV2Fsa1VwKGUpCk5vZGUKVG91Y2hFdmVudChldmVudCkKICBtb2QobiwgbSkKICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpAAAAAAAAAAD6BgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								2682,
								2687
							],
							[
								2851,
								2862
							],
							[
								3014,
								3019
							],
							[
								3216,
								3251
							],
							[
								5183,
								5231
							],
							[
								5847,
								5883
							],
							[
								6021,
								6044
							],
							[
								6507,
								6518
							],
							[
								6929,
								6961
							],
							[
								7071,
								7098
							],
							[
								7967,
								7995
							],
							[
								8076,
								8106
							],
							[
								8176,
								8207
							],
							[
								8417,
								8440
							],
							[
								8503,
								8527
							],
							[
								8591,
								8612
							],
							[
								8673,
								8698
							],
							[
								8738,
								8760
							],
							[
								8822,
								8857
							],
							[
								8913,
								8940
							],
							[
								9239,
								9279
							],
							[
								9412,
								9432
							],
							[
								9735,
								9787
							],
							[
								10073,
								10109
							],
							[
								10277,
								10296
							],
							[
								10338,
								10356
							],
							[
								10410,
								10433
							],
							[
								10752,
								10782
							],
							[
								10820,
								10828
							],
							[
								11118,
								11155
							]
						],
						"symlist":
						[
							" e =>",
							"async () =>",
							" e =>",
							"async function LoadSource(filename)",
							"function Start(args, address = '127.0.0.1:9901')",
							"function* TokenizeJS(data, filename)",
							" (acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(url)",
							"async function ReadSocket()",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"(acc, tokens, i) =>",
							"([type, token]) =>",
							"(acc, [type, token]) =>",
							"SourceFile = ({ filename }) =>",
							" resp =>",
							"async function ShowSource(sourceFile)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6BgAAICBlbnRyaWVzKCkKICBhcHBlbmRfdG8oZWxlbSwgcCkKRHJhd1NWRyguLi5hcmdzKQogIGFwcGVuZF90byhlbGVtLCBwKQogIGFkanVzdFZpZXdCb3goZSkKICBjYWxjVmlld0JveChib3gpCiAgc2V0Vmlld0JveChzdmdPd25lciwgYm94KQogIHJlYWRGaWxlKGZpbGVuYW1lKQogIHdyaXRlRmlsZShmaWxlbmFtZSwgZGF0YSwgb3ZlcndyaXRlID0gdHJ1ZSkKICBleGlzdHMoZmlsZW5hbWUpCiAgcmVhbHBhdGgoZmlsZW5hbWUpCkxvYWRGaWxlKGZpbGUpClNhdmVGaWxlKGZpbGVuYW1lLCBkYXRhLCBjb250ZW50VHlwZSkKU2F2ZVNWRyhmaWxlbmFtZSwgbGF5ZXJzID0gWzEsIDE2LCAyMCwgMjEsIDIyLCAyMywgMjUsIDI3LCA0NywgNDgsIDUxXSkKTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpEcmF3QXJjKHN0YXJ0LCBlbmQsIGFuZ2xlKQpSZWN1cnNlQmluYXJ5Tm9kZShub2RlLCBwYXJlbnQgPSBudWxsLCBkZXB0aCA9IDApCkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKUGF0aHNUb1BvbHlsaW5lcyhwYXRocywgc3RlcCA9IDAuMDEpCk91dHNldFBhdGgocGF0aCwgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4wMSkKICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCk91dHNldFBhdGhzKHBhdGhzLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjI1KQpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKKGl0ZW0uCkVhZ2xlTWFwcyhwcm9qZWN0KQogIGZ1bmN0aW9uKlBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKTmV4dERvY3VtZW50KG4gPSAxKQpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICByZW5hbWVQYWNrYWdlcygpCiAgZm4gPSBmdW5jdGlvbih2KQogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIHh4KCkKKHRyYW5zZm9ybSkKUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpSZWN0ClBhY2thZ2VDaGlsZHJlbihlbGVtZW50LCBsYXllcikKTmV3UGF0aChwYXRoKQpab29tRmFjdG9yKHZhbCA9IGNvbmZpZy4KWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KSGFuZGxlTWVzc2FnZShtc2cpCkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQogIGZ1bmN0aW9uKigpCiAgbG9nKHR5cGUsIHRpbWUsIG1zZykKICBmdW5jdGlvbiooKQpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCiAgYWRkKG5hbWUsIGNvbXBvbmVudCkKICBhZGRFbnRyeShbbmFtZSwgY29tcG9uZW50XSkKICByZW1vdmUobmFtZSkKICB1cGRhdGUoKQogIG1ha2VMYXllck5hbWUobmFtZSwgc2lkZSkKICBmdW5jdGlvbihhLCBiKQogIGZ1bmN0aW9uKGEsIGIpCk1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQogIGZ1bmN0aW9uKldhbGtVcChlKQpOb2RlClRvdWNoRXZlbnQoZXZlbnQpCiAgbW9kKG4sIG0pCiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQAAAAAAAAAATQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 12101,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					52,
					1,
					"insert",
					{
						"characters": "\nline++;"
					},
					"CQAAAFgaAAAAAAAAWRoAAAAAAAAAAAAAWRoAAAAAAABhGgAAAAAAAAAAAABhGgAAAAAAAGIaAAAAAAAAAAAAAGIaAAAAAAAAYxoAAAAAAAAAAAAAYxoAAAAAAABkGgAAAAAAAAAAAABkGgAAAAAAAGUaAAAAAAAAAAAAAGUaAAAAAAAAZhoAAAAAAAAAAAAAZhoAAAAAAABnGgAAAAAAAAAAAABnGgAAAAAAAGgaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgaAAAAAAAAWBoAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJQYAAAAAAAAlRgAAAAAAAAAAAAAlRgAAAAAAACWGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPInAAAAAAAA8ycAAAAAAAAAAAAA8ycAAAAAAADzJwAAAAAAACgAAAAgIGNvbnNvbGUubG9nKCd1c2VJdGVyYWJsZScsIGxpbmVzWzBdKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPInAAAAAAAAGigAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEAqAAAAAAAAQSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAqAAAAAAAAQCoAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " resp"
					},
					"BQAAAEEqAAAAAAAAQioAAAAAAAAAAAAAQioAAAAAAABDKgAAAAAAAAAAAABDKgAAAAAAAEQqAAAAAAAAAAAAAEQqAAAAAAAARSoAAAAAAAAAAAAARSoAAAAAAABGKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEqAAAAAAAAQSoAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAEYqAAAAAAAARyoAAAAAAAAAAAAARyoAAAAAAABIKgAAAAAAAAAAAABIKgAAAAAAAEkqAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYqAAAAAAAARioAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " resp.text"
					},
					"CgAAAEkqAAAAAAAASioAAAAAAAAAAAAASioAAAAAAABLKgAAAAAAAAAAAABLKgAAAAAAAEwqAAAAAAAAAAAAAEwqAAAAAAAATSoAAAAAAAAAAAAATSoAAAAAAABOKgAAAAAAAAAAAABOKgAAAAAAAE8qAAAAAAAAAAAAAE8qAAAAAAAAUCoAAAAAAAAAAAAAUCoAAAAAAABRKgAAAAAAAAAAAABRKgAAAAAAAFIqAAAAAAAAAAAAAFIqAAAAAAAAUyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkqAAAAAAAASSoAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFMqAAAAAAAAVSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMqAAAAAAAAUyoAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAEoqAAAAAAAASyoAAAAAAAAAAAAASyoAAAAAAABMKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoqAAAAAAAASioAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAAEwqAAAAAAAATSoAAAAAAAAAAAAATSoAAAAAAABOKgAAAAAAAAAAAABOKgAAAAAAAE8qAAAAAAAAAAAAAE8qAAAAAAAAUCoAAAAAAAAAAAAAUCoAAAAAAABRKgAAAAAAAAAAAABRKgAAAAAAAFIqAAAAAAAAAAAAAFIqAAAAAAAAUyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwqAAAAAAAATCoAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMqAAAAAAAAVCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMqAAAAAAAAUyoAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAF8qAAAAAAAAYCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8qAAAAAAAAXyoAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAF8qAAAAAAAAXyoAAAAAAAABAAAATQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAqAAAAAAAAYCoAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAF8qAAAAAAAAYCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8qAAAAAAAAXyoAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAGAqAAAAAAAAYSoAAAAAAAAAAAAAYSoAAAAAAABiKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAqAAAAAAAAYCoAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAE0qAAAAAAAATioAAAAAAAAAAAAATioAAAAAAABQKgAAAAAAAAAAAABOKgAAAAAAAE4qAAAAAAAAAgAAACAgTioAAAAAAABSKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0qAAAAAAAATSoAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\nconsool"
					},
					"CgAAAE0qAAAAAAAATioAAAAAAAAAAAAATioAAAAAAABQKgAAAAAAAAAAAABQKgAAAAAAAFIqAAAAAAAAAAAAAFIqAAAAAAAAUyoAAAAAAAAAAAAAUyoAAAAAAABUKgAAAAAAAAAAAABUKgAAAAAAAFUqAAAAAAAAAAAAAFUqAAAAAAAAVioAAAAAAAAAAAAAVioAAAAAAABXKgAAAAAAAAAAAABXKgAAAAAAAFgqAAAAAAAAAAAAAFgqAAAAAAAAWSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0qAAAAAAAATSoAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					2,
					"left_delete",
					null,
					"AgAAAFgqAAAAAAAAWCoAAAAAAAABAAAAbFcqAAAAAAAAVyoAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkqAAAAAAAAWSoAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "löe"
					},
					"AwAAAFcqAAAAAAAAWCoAAAAAAAAAAAAAWCoAAAAAAABZKgAAAAAAAAAAAABZKgAAAAAAAFoqAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcqAAAAAAAAVyoAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAFkqAAAAAAAAWSoAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoqAAAAAAAAWioAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFkqAAAAAAAAWioAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkqAAAAAAAAWSoAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					2,
					"left_delete",
					null,
					"AgAAAFkqAAAAAAAAWSoAAAAAAAABAAAAZVgqAAAAAAAAWCoAAAAAAAACAAAAw7Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoqAAAAAAAAWioAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "e.log"
					},
					"BQAAAFgqAAAAAAAAWSoAAAAAAAAAAAAAWSoAAAAAAABaKgAAAAAAAAAAAABaKgAAAAAAAFsqAAAAAAAAAAAAAFsqAAAAAAAAXCoAAAAAAAAAAAAAXCoAAAAAAABdKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgqAAAAAAAAWCoAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0qAAAAAAAAXyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0qAAAAAAAAXSoAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAF4qAAAAAAAAYCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4qAAAAAAAAXioAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "Fetching"
					},
					"CAAAAF8qAAAAAAAAYCoAAAAAAAAAAAAAYCoAAAAAAABhKgAAAAAAAAAAAABhKgAAAAAAAGIqAAAAAAAAAAAAAGIqAAAAAAAAYyoAAAAAAAAAAAAAYyoAAAAAAABkKgAAAAAAAAAAAABkKgAAAAAAAGUqAAAAAAAAAAAAAGUqAAAAAAAAZioAAAAAAAAAAAAAZioAAAAAAABnKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8qAAAAAAAAXyoAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					2,
					"left_delete",
					null,
					"AgAAAGUqAAAAAAAAZSoAAAAAAAABAAAAbmQqAAAAAAAAZCoAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYqAAAAAAAAZioAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"right_delete",
					null,
					"AQAAAGQqAAAAAAAAZCoAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQqAAAAAAAAZCoAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGUqAAAAAAAAZioAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUqAAAAAAAAZSoAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " resp"
					},
					"BQAAAGYqAAAAAAAAZyoAAAAAAAAAAAAAZyoAAAAAAABoKgAAAAAAAAAAAABoKgAAAAAAAGkqAAAAAAAAAAAAAGkqAAAAAAAAaioAAAAAAAAAAAAAaioAAAAAAABrKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYqAAAAAAAAZioAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwqAAAAAAAAbSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwqAAAAAAAAbCoAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "-uir"
					},
					"BAAAAGsqAAAAAAAAbCoAAAAAAAAAAAAAbCoAAAAAAABtKgAAAAAAAAAAAABtKgAAAAAAAG4qAAAAAAAAAAAAAG4qAAAAAAAAbyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsqAAAAAAAAayoAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					4,
					"left_delete",
					null,
					"BAAAAG4qAAAAAAAAbioAAAAAAAABAAAAcm0qAAAAAAAAbSoAAAAAAAABAAAAaWwqAAAAAAAAbCoAAAAAAAABAAAAdWsqAAAAAAAAayoAAAAAAAABAAAALQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8qAAAAAAAAbyoAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": ".url"
					},
					"BAAAAGsqAAAAAAAAbCoAAAAAAAAAAAAAbCoAAAAAAABtKgAAAAAAAAAAAABtKgAAAAAAAG4qAAAAAAAAAAAAAG4qAAAAAAAAbyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsqAAAAAAAAayoAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"cut",
					null,
					"AQAAAGcqAAAAAAAAZyoAAAAAAAAIAAAAcmVzcC51cmw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcqAAAAAAAAbyoAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "filename"
					},
					"CAAAAGcqAAAAAAAAaCoAAAAAAAAAAAAAaCoAAAAAAABpKgAAAAAAAAAAAABpKgAAAAAAAGoqAAAAAAAAAAAAAGoqAAAAAAAAayoAAAAAAAAAAAAAayoAAAAAAABsKgAAAAAAAAAAAABsKgAAAAAAAG0qAAAAAAAAAAAAAG0qAAAAAAAAbioAAAAAAAAAAAAAbioAAAAAAABvKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcqAAAAAAAAZyoAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "resp,"
					},
					"BQAAAGcqAAAAAAAAaCoAAAAAAAAAAAAAaCoAAAAAAABpKgAAAAAAAAAAAABpKgAAAAAAAGoqAAAAAAAAAAAAAGoqAAAAAAAAayoAAAAAAAAAAAAAayoAAAAAAABsKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcqAAAAAAAAZyoAAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAGsqAAAAAAAAbCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsqAAAAAAAAayoAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"left_delete",
					null,
					"AQAAAGsqAAAAAAAAayoAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwqAAAAAAAAbCoAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": ".status,"
					},
					"CAAAAGsqAAAAAAAAbCoAAAAAAAAAAAAAbCoAAAAAAABtKgAAAAAAAAAAAABtKgAAAAAAAG4qAAAAAAAAAAAAAG4qAAAAAAAAbyoAAAAAAAAAAAAAbyoAAAAAAABwKgAAAAAAAAAAAABwKgAAAAAAAHEqAAAAAAAAAAAAAHEqAAAAAAAAcioAAAAAAAAAAAAAcioAAAAAAABzKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsqAAAAAAAAayoAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMqAAAAAAAAdCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMqAAAAAAAAcyoAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					3,
					"left_delete",
					null,
					"AwAAAHMqAAAAAAAAcyoAAAAAAAABAAAAIHIqAAAAAAAAcioAAAAAAAABAAAALHEqAAAAAAAAcSoAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQqAAAAAAAAdCoAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHEqAAAAAAAAcioAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEqAAAAAAAAcSoAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "Util.makeURL("
					},
					"DQAAAHMqAAAAAAAAdCoAAAAAAAAAAAAAdCoAAAAAAAB1KgAAAAAAAAAAAAB1KgAAAAAAAHYqAAAAAAAAAAAAAHYqAAAAAAAAdyoAAAAAAAAAAAAAdyoAAAAAAAB4KgAAAAAAAAAAAAB4KgAAAAAAAHkqAAAAAAAAAAAAAHkqAAAAAAAAeioAAAAAAAAAAAAAeioAAAAAAAB7KgAAAAAAAAAAAAB7KgAAAAAAAHwqAAAAAAAAAAAAAHwqAAAAAAAAfSoAAAAAAAAAAAAAfSoAAAAAAAB+KgAAAAAAAAAAAAB+KgAAAAAAAH8qAAAAAAAAAAAAAH8qAAAAAAAAgCoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMqAAAAAAAAcyoAAAAAAAAAAAAAAADwvw"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAIAqAAAAAAAAgSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAqAAAAAAAAgCoAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " locatzion"
					},
					"CgAAAIEqAAAAAAAAgioAAAAAAAAAAAAAgioAAAAAAACDKgAAAAAAAAAAAACDKgAAAAAAAIQqAAAAAAAAAAAAAIQqAAAAAAAAhSoAAAAAAAAAAAAAhSoAAAAAAACGKgAAAAAAAAAAAACGKgAAAAAAAIcqAAAAAAAAAAAAAIcqAAAAAAAAiCoAAAAAAAAAAAAAiCoAAAAAAACJKgAAAAAAAAAAAACJKgAAAAAAAIoqAAAAAAAAAAAAAIoqAAAAAAAAiyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEqAAAAAAAAgSoAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					4,
					"left_delete",
					null,
					"BAAAAIoqAAAAAAAAiioAAAAAAAABAAAAbokqAAAAAAAAiSoAAAAAAAABAAAAb4gqAAAAAAAAiCoAAAAAAAABAAAAaYcqAAAAAAAAhyoAAAAAAAABAAAAeg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsqAAAAAAAAiyoAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "ion:"
					},
					"BAAAAIcqAAAAAAAAiCoAAAAAAAAAAAAAiCoAAAAAAACJKgAAAAAAAAAAAACJKgAAAAAAAIoqAAAAAAAAAAAAAIoqAAAAAAAAiyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcqAAAAAAAAhyoAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " '/'+"
					},
					"BQAAAIsqAAAAAAAAjCoAAAAAAAAAAAAAjCoAAAAAAACNKgAAAAAAAAAAAACNKgAAAAAAAI4qAAAAAAAAAAAAAI4qAAAAAAAAjyoAAAAAAAAAAAAAjyoAAAAAAACQKgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsqAAAAAAAAiyoAAAAAAAAAAAAAAADwvw"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAJgqAAAAAAAAmSoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgqAAAAAAAAmCoAAAAAAAAAAAAAAADwvw"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJoqAAAAAAAAmyoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoqAAAAAAAAmioAAAAAAAAAAAAAAADwvw"
				],
				[
					212,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0qAAAAAAAAvyoAAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAEUvAAAAAAAAhTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUvAAAAAAAARS8AAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"join_lines",
					null,
					"LQAAAIQwAAAAAAAAhDAAAAAAAAABAAAACoQwAAAAAAAAhTAAAAAAAAAAAAAAgDAAAAAAAACAMAAAAAAAAAEAAAAKgDAAAAAAAACBMAAAAAAAAAAAAAB8MAAAAAAAAHwwAAAAAAAAAQAAAAp8MAAAAAAAAHwwAAAAAAAAAgAAACAgfDAAAAAAAAB9MAAAAAAAAAAAAABXMAAAAAAAAFcwAAAAAAAAAQAAAApXMAAAAAAAAFcwAAAAAAAABAAAACAgICBCMAAAAAAAAEIwAAAAAAAAAQAAAApCMAAAAAAAAEIwAAAAAAAAAgAAACAgQjAAAAAAAABDMAAAAAAAAAAAAAA9MAAAAAAAAD0wAAAAAAAAAQAAAAo9MAAAAAAAAD0wAAAAAAAAAgAAACAgPTAAAAAAAAA+MAAAAAAAAAAAAAAZMAAAAAAAABkwAAAAAAAAAQAAAAoZMAAAAAAAABkwAAAAAAAABAAAACAgICAFMAAAAAAAAAUwAAAAAAAAAQAAAAoFMAAAAAAAAAUwAAAAAAAAAgAAACAgBTAAAAAAAAAGMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAQAAAAoAMAAAAAAAAAAwAAAAAAAAAgAAACAgADAAAAAAAAABMAAAAAAAAAAAAADZLwAAAAAAANkvAAAAAAAAAQAAAArZLwAAAAAAANkvAAAAAAAABAAAACAgICDCLwAAAAAAAMIvAAAAAAAAAQAAAArCLwAAAAAAAMIvAAAAAAAAAgAAACAgwi8AAAAAAADDLwAAAAAAAAAAAAC9LwAAAAAAAL0vAAAAAAAAAQAAAAq9LwAAAAAAAL0vAAAAAAAAAgAAACAgvS8AAAAAAAC+LwAAAAAAAAAAAACWLwAAAAAAAJYvAAAAAAAAAQAAAAqWLwAAAAAAAJYvAAAAAAAABAAAACAgICB/LwAAAAAAAH8vAAAAAAAAAQAAAAp/LwAAAAAAAH8vAAAAAAAAAgAAACAgfy8AAAAAAACALwAAAAAAAAAAAAByLwAAAAAAAHIvAAAAAAAAAQAAAApyLwAAAAAAAHIvAAAAAAAAAgAAACAgci8AAAAAAABzLwAAAAAAAAAAAABmLwAAAAAAAGYvAAAAAAAAAQAAAApmLwAAAAAAAGYvAAAAAAAAAgAAACAgZi8AAAAAAABnLwAAAAAAAAAAAABRLwAAAAAAAFEvAAAAAAAAAQAAAApRLwAAAAAAAFEvAAAAAAAAAgAAACAgWTAAAAAAAABZMAAAAAAAAAEAAAAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUwAAAAAAAARy8AAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFEvAAAAAAAAUi8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEvAAAAAAAAUS8AAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"cut",
					null,
					"AQAAAEUvAAAAAAAARS8AAAAAAAAVAQAAbmV0LmNsaWVudCh7IGhvc3Q6ICcxMjcuMC4wLjEnLCBwb3J0OiAyMiwgcmF3OiB0cnVlLCBvbk1lc3NhZ2Uod3MsIG1zZykge2NvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB3cywgbXNnKTsgfSwgb25Db25uZWN0KHdzLCByZXEpIHtjb25zb2xlLmxvZygnb25Db25uZWN0Jywgd3MsIHJlcSk7IH0sIG9uUG9uZyh3cywgcmVxKSB7Y29uc29sZS5sb2coJ29uUG9uZycsIHdzLCByZXEpOyB9LCBvbkNsb3NlKHdzLCByZXEpIHtjb25zb2xlLmxvZygnb25DbG9zZScsIHdzLCByZXEpOyB9IH0pOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUvAAAAAAAAWjAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-minnet.js",
			"settings":
			{
				"buffer_size": 2374,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAAFkGAAAAAAAAWQYAAAAAAAAbAAAAVXRpbC5jYWxsTWFpbihtYWluLCB0cnVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkGAAAAAAAAdAYAAAAAAAAAAAAAAAAAAA"
				],
				[
					9,
					6,
					"right_delete",
					null,
					"BgAAAJAFAAAAAAAAkAUAAAAAAAABAAAAYZAFAAAAAAAAkAUAAAAAAAABAAAAc5AFAAAAAAAAkAUAAAAAAAABAAAAeZAFAAAAAAAAkAUAAAAAAAABAAAAbpAFAAAAAAAAkAUAAAAAAAABAAAAY5AFAAAAAAAAkAUAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAFAAAAAAAAkAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"paste",
					null,
					"AQAAAFMGAAAAAAAADQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMGAAAAAAAAUwYAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACEAgAAAAAAAAAAAACEAgAAAAAAAIUCAAAAAAAAAAAAAIUCAAAAAAAAhwIAAAAAAAAAAAAAggIAAAAAAACCAgAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIECAAAAAAAAgQIAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\nnet."
					},
					"BgAAAIICAAAAAAAAgwIAAAAAAAAAAAAAhAIAAAAAAACEAgAAAAAAAAIAAAAgIIMCAAAAAAAAhAIAAAAAAAAAAAAAhAIAAAAAAACFAgAAAAAAAAAAAACFAgAAAAAAAIYCAAAAAAAAAAAAAIYCAAAAAAAAhwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIICAAAAAAAAggIAAAAAAAAAAAAAAAAwQA"
				],
				[
					25,
					4,
					"left_delete",
					null,
					"BAAAAIYCAAAAAAAAhgIAAAAAAAABAAAALoUCAAAAAAAAhQIAAAAAAAABAAAAdIQCAAAAAAAAhAIAAAAAAAABAAAAZYMCAAAAAAAAgwIAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcCAAAAAAAAhwIAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "setLog"
					},
					"BgAAAIMCAAAAAAAAhAIAAAAAAAAAAAAAhAIAAAAAAACFAgAAAAAAAAAAAACFAgAAAAAAAIYCAAAAAAAAAAAAAIYCAAAAAAAAhwIAAAAAAAAAAAAAhwIAAAAAAACIAgAAAAAAAAAAAACIAgAAAAAAAIkCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMCAAAAAAAAgwIAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAIkCAAAAAAAAiwIAAAAAAAAAAAAAigIAAAAAAACMAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkCAAAAAAAAiQIAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAIwCAAAAAAAAjQIAAAAAAAAAAAAAjQIAAAAAAACOAgAAAAAAAAAAAACOAgAAAAAAAI8CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwCAAAAAAAAjAIAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8CAAAAAAAAkAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8CAAAAAAAAjwIAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJACAAAAAAAAkgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ",setLog"
					},
					"BwAAAB4AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "22"
					},
					"AwAAALECAAAAAAAAsgIAAAAAAAAAAAAAsgIAAAAAAACyAgAAAAAAAAQAAAA3OTgxsgIAAAAAAACzAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAgAAAAAAALUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"paste",
					null,
					"AgAAAMwCAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAeBAAAAAAAAGIBAAAsCiAgICBvbkNvbm5lY3Q6IHNvY2tldCA9PiB7CiAgICAgIHByaW50KCdDb25uZWN0ZWQgdG8gc2VydmVyJyk7CiAgICAgIHNvY2tldC5zZW5kKCdIZWxsbyBmcm9tIGNsaWVudCcpOwogICAgfSwKICAgIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PiB7CiAgICAgIHByaW50KCdSZWNlaXZlZCBmcm9tIHNlcnZlcjogJywgbXNnKTsKICAgIH0sCiAgICBvbkNsb3NlOiB3aHkgPT4gewogICAgICBwcmludCgnRGlzY29ubmVjdGVkIGZyb20gc2VydmVyLiBSZWFzb246ICcsIHdoeSk7CiAgICB9LAogICAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PiB7CiAgICAgIHByaW50KCdQb25nOiAnLCBkYXRhKTsKICAgIH0KICB9KTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAgAAAAAAAC4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAgAAAAAAAJoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					6,
					"right_delete",
					null,
					"BgAAALoCAAAAAAAAugIAAAAAAAABAAAAc7oCAAAAAAAAugIAAAAAAAABAAAAZboCAAAAAAAAugIAAAAAAAABAAAAcroCAAAAAAAAugIAAAAAAAABAAAAdroCAAAAAAAAugIAAAAAAAABAAAAZboCAAAAAAAAugIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AgAAAAAAALoCAAAAAAAAAAAAAAAAQEA"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAALoCAAAAAAAAuwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AgAAAAAAALoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAALoCAAAAAAAAugIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AgAAAAAAALsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "host"
					},
					"BAAAALoCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC8AgAAAAAAAAAAAAC8AgAAAAAAAL0CAAAAAAAAAAAAAL0CAAAAAAAAvgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AgAAAAAAALoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUBwAAaW1wb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIGZldGNoLHNldExvZyB9IGZyb20gJ25ldCc7CmltcG9ydCBVdGlsIGZyb20gJy4vbGliL3V0aWwuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CgpmdW5jdGlvbiBDcmVhdGVTZXJ2ZXIoKSB7CiAgcHJpbnQoJ1NFUlZFUicpOwogIHNlcnZlcih7CiAgICBwb3J0OiAzMzAwLAogICAgbW91bnRzOiBbWycvJywgJy4nLCAnaW5kZXguaHRtbCddXSwKICAgIG9uQ29ubmVjdDogc29ja2V0ID0+IHsKICAgICAgcHJpbnQoJ0NsaWVudCBjb25uZWN0ZWQnKTsKICAgICAgcHJpbnQoJ1NvY2tldDogJyArIHNvY2tldCk7CiAgICAgIHNvY2tldC5zZW5kKCdIZWxsbyBmcm9tIHNlcnZlcicpOwogICAgfSwKICAgIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PiB7CiAgICAgIHByaW50KCdSZWNlaXZlZDogJywgbXNnKTsKICAgIH0sCiAgICBvbkNsb3NlOiB3aHkgPT4gewogICAgICBwcmludCgnQ2xpZW50IGRpc2Nvbm5lY3RlZC4gUmVhc29uOiAnLCB3aHkpOwogICAgfSwKICAgIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4gewogICAgICBwcmludCgnUG9uZzogJywgZGF0YSk7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIENyZWF0ZUNsaWVudCgpIHsKICBwcmludCgnQ0xJRU5UJyk7CgpzZXRMb2coKCkgPT4ge30pOwoKICBjbGllbnQoewogICAgcG9ydDogMjIsCiAgICBob3N0OiAnbG9jYWxob3N0Jywgb25NZXNzYWdlKHdzLCBtc2cpIHtjb25zb2xlLmxvZygnb25NZXNzYWdlJywgd3MsIG1zZyk7IH0sIG9uQ29ubmVjdCh3cywgcmVxKSB7Y29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHdzLCByZXEpOyB9LCBvblBvbmcod3MsIHJlcSkge2NvbnNvbGUubG9nKCdvblBvbmcnLCB3cywgcmVxKTsgfSwgb25DbG9zZSh3cywgcmVxKSB7Y29uc29sZS5sb2coJ29uQ2xvc2UnLCB3cywgcmVxKTsgfSwgb25GZChmZCwgcmQsd3IpIHsgY29uc29sZS5sb2coJ29uRmQnLCBmZCwgcmQsd3IpO29zLnNldFJlYWRIYW5kbGVyKHdzLmZkLCByZCk7b3Muc2V0V3JpdGVIYW5kbGVyKHdzLmZkLCB3cik7IH0gfSk7Cn0KCmZ1bmN0aW9uIGdldEpTT04oKSB7CiAgY29uc29sZS5sb2coJ2dldEpTT04nKTsKICBjb25zdCByZXMgPSBmZXRjaCgnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9yc2Vubi9wbG90LWN2JywgewogICAgbWV0aG9kOiAnaGVhZCcKICB9KTsKICBjb25zdCB7IG9rLCBzdGF0dXMsIHR5cGUgfSA9IHJlczsKICBjb25zb2xlLmxvZygncmVzOicsIHsgb2ssIHN0YXR1cywgdHlwZSB9KTsKCiAgY29uc3QganNvbiA9IHJlcy5qc29uKCk7CiAgY29uc29sZS5sb2coJ2pzb246JywganNvbik7CgogIGNvbnN0IGRhdGEgPSBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKGpzb24pKTsKICBjb25zb2xlLmxvZygnZGF0YTonLCBkYXRhKTsKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgc3dpdGNoIChhcmdzWzBdKSB7CiAgICBjYXNlICdzJzoKICAgICAgQ3JlYXRlU2VydmVyKCk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAnYyc6CiAgICAgIENyZWF0ZUNsaWVudCgpOwogICAgICBicmVhazsKICAgIGNhc2UgJ2YnOgogICAgICBnZXRKU09OKCk7CiAgICAgIGJyZWFrOwogIH0KfQoKCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yPy5tZXNzYWdlID8/IGVycm9yfVxuJHtlcnJvcj8uc3RhY2t9YCk7CiAgMTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICAvL2NvbnNvbGUubG9nKCdTVUNDRVNTJyk7Cn0KAAAAAAAAAAByBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AgAAAAAAAL4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					4,
					"left_delete",
					null,
					"BAAAAEMEAAAAAAAAQwQAAAAAAAABAAAAZkIEAAAAAAAAQgQAAAAAAAABAAAALkEEAAAAAAAAQQQAAAAAAAABAAAAc0AEAAAAAAAAQAQAAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEBAAAAAAAAEQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAEAEAAAAAAAAQQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABABAAAAAAAAEAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					3,
					"right_delete",
					null,
					"AwAAAGIEAAAAAAAAYgQAAAAAAAABAAAAd2IEAAAAAAAAYgQAAAAAAAABAAAAc2IEAAAAAAAAYgQAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiBAAAAAAAAGIEAAAAAAAAAAAAAAAAaUA"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "127.0.0.1"
					},
					"CgAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADFAgAAAAAAAAkAAABsb2NhbGhvc3TFAgAAAAAAAMYCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAxwIAAAAAAADIAgAAAAAAAAAAAADIAgAAAAAAAMkCAAAAAAAAAAAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAADLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAgAAAAAAAM0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\nraw:"
					},
					"BgAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADUAgAAAAAAAAAAAADUAgAAAAAAANUCAAAAAAAAAAAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAgAAAAAAAM8CAAAAAAAA////////738"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " true,"
					},
					"BgAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAADdAgAAAAAAAN4CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAgAAAAAAANgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "/(("
					},
					"AwAAABYEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWBAAAAAAAABYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					2,
					"left_delete",
					null,
					"AgAAABgEAAAAAAAAGAQAAAAAAAABAAAAKBcEAAAAAAAAFwQAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZBAAAAAAAABkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAABcEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXBAAAAAAAABcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACkAgAAAAAAAKUCAAAAAAAAAAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAgAAAAAAAKICAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgCAAAAAAAAqQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAgAAAAAAAKgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAjBgAAAAAAAAAAAAAjBgAAAAAAACQGAAAAAAAAAAAAACQGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAmBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgBgAAAAAAACAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmBgAAAAAAACYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAACcGAAAAAAAAJwYAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoBgAAAAAAACgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "ws;"
					},
					"AwAAACcGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAACoGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnBgAAAAAAACcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "ws="
					},
					"AwAAAFQGAAAAAAAAVQYAAAAAAAAAAAAAVQYAAAAAAABWBgAAAAAAAAAAAABWBgAAAAAAAFcGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUBgAAAAAAAFQGAAAAAAAAAAAAAAAASEA"
				],
				[
					109,
					1,
					"cut",
					null,
					"AQAAAFQGAAAAAAAAVAYAAAAAAAADAAAAd3M9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBgAAAAAAAFQGAAAAAAAAAAAAAAAASEA"
				],
				[
					110,
					1,
					"paste",
					null,
					"AQAAAFQGAAAAAAAAVwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUBgAAAAAAAFQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAIgGAAAAAAAAiwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBgAAAAAAAIgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"paste",
					null,
					"AQAAALsGAAAAAAAAvgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7BgAAAAAAALsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAANoGAAAAAAAA2wYAAAAAAAAAAAAA2wYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAADgBgAAAAAAAOEGAAAAAAAAAAAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA4gYAAAAAAADjBgAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA5QYAAAAAAADmBgAAAAAAAAAAAADmBgAAAAAAAOcGAAAAAAAAAAAAAOcGAAAAAAAA6AYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBgAAAAAAANoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOgGAAAAAAAA6gYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoBgAAAAAAAOgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOkGAAAAAAAA6wYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpBgAAAAAAAOkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAOoGAAAAAAAA6wYAAAAAAAAAAAAA6wYAAAAAAADsBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqBgAAAAAAAOoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ",ws"
					},
					"AwAAAO0GAAAAAAAA7gYAAAAAAAAAAAAA7gYAAAAAAADvBgAAAAAAAAAAAADvBgAAAAAAAPAGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtBgAAAAAAAO0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPEGAAAAAAAA8gYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxBgAAAAAAAPEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "2222"
					},
					"BQAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC9AgAAAAAAAAIAAAAyMr0CAAAAAAAAvgIAAAAAAAAAAAAAvgIAAAAAAAC/AgAAAAAAAAAAAAC/AgAAAAAAAMACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AgAAAAAAAL4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAeBAAAAAAAAAQAAAAgIC8v",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhBAAAAAAAAB0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					2,
					"left_delete",
					null,
					"AgAAAL8CAAAAAAAAvwIAAAAAAAABAAAAMr4CAAAAAAAAvgIAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAgAAAAAAAMACAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "\ns"
					},
					"AwAAACcDAAAAAAAAKAMAAAAAAAAAAAAAKAMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAwAAAAAAACcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"left_delete",
					null,
					"AQAAAC4DAAAAAAAALgMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAwAAAAAAAC8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "ws.s"
					},
					"BAAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAwAAAAAAAC4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"left_delete",
					null,
					"AQAAADEDAAAAAAAAMQMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAwAAAAAAADIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": ".send"
					},
					"BQAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADYDAAAAAAAAOAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADsDAAAAAAAAPAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"left_delete",
					null,
					"AQAAADsDAAAAAAAAOwMAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AwAAAAAAADwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADsDAAAAAAAAPAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"left_delete",
					null,
					"AQAAADADAAAAAAAAMAMAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAwAAAAAAAC4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"cut",
					null,
					"AQAAAAUDAAAAAAAABQMAAAAAAAApAAAAY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHdzLCBtc2cpOwogICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAwAAAAAAAC4DAAAAAAAAAAAAAAAASEA"
				],
				[
					201,
					1,
					"paste",
					null,
					"AQAAAAUDAAAAAAAALgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"paste",
					null,
					"AQAAAEgDAAAAAAAAcQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAwAAAAAAAEgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"paste",
					null,
					"AgAAAFUDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABlAwAAAAAAAAkAAABvbk1lc3NhZ2U",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAwAAAAAAAF4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"BAAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABpAwAAAAAAAAcAAAB3cywgbXNnaQMAAAAAAABqAwAAAAAAAAAAAABqAwAAAAAAAGsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAwAAAAAAAG8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "\nbinary:true,"
					},
					"DgAAAOUCAAAAAAAA5gIAAAAAAAAAAAAA5gIAAAAAAADqAgAAAAAAAAAAAADqAgAAAAAAAOsCAAAAAAAAAAAAAOsCAAAAAAAA7AIAAAAAAAAAAAAA7AIAAAAAAADtAgAAAAAAAAAAAADtAgAAAAAAAO4CAAAAAAAAAAAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA7wIAAAAAAADwAgAAAAAAAAAAAADwAgAAAAAAAPECAAAAAAAAAAAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAADzAgAAAAAAAPQCAAAAAAAAAAAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAgAAAAAAAOUCAAAAAAAAAAAAAAAAc0A"
				],
				[
					227,
					1,
					"paste",
					null,
					"AQAAAHcGAAAAAAAA1AYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3BgAAAAAAAHcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"cut",
					null,
					"AQAAAFUDAAAAAAAAVQMAAAAAAAAqAAAAICAgIGNvbnNvbGUubG9nKCdyZXQ9d3Muc2VuZChtc2cpJywgcmV0KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAwAAAAAAAH8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"paste",
					null,
					"AQAAAFUDAAAAAAAAfwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAwAAAAAAAFUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFQDAAAAAAAAVQMAAAAAAAAAAAAAVQMAAAAAAABbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAwAAAAAAAFQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					3,
					"left_delete",
					null,
					"BAAAAFEDAAAAAAAAUQMAAAAAAAABAAAAZ1QDAAAAAAAAVAMAAAAAAAAGAAAAICAgICAgUAMAAAAAAABQAwAAAAAAAAEAAABzTwMAAAAAAABPAwAAAAAAAAEAAABt",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAwAAAAAAAFIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAE8DAAAAAAAAUQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAwAAAAAAAE8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "\\\\"
					},
					"AgAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAwAAAAAAAFADAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					2,
					"left_delete",
					null,
					"AgAAAFEDAAAAAAAAUQMAAAAAAAABAAAAXFADAAAAAAAAUAMAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAwAAAAAAAFIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "»»»"
					},
					"AwAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAwAAAAAAAFADAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					3,
					"left_delete",
					null,
					"AwAAAFIDAAAAAAAAUgMAAAAAAAACAAAAwrtRAwAAAAAAAFEDAAAAAAAAAgAAAMK7UAMAAAAAAABQAwAAAAAAAAIAAADCuw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAwAAAAAAAFMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "XXX\\n"
					},
					"BQAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAwAAAAAAAFADAAAAAAAAAAAAAAAA8L8"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "2222"
					},
					"BQAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC9AgAAAAAAAAIAAAAyMr0CAAAAAAAAvgIAAAAAAAAAAAAAvgIAAAAAAAC/AgAAAAAAAAAAAAC/AgAAAAAAAMACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AgAAAAAAAL4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAwAAAAAAAEgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAAEgDAAAAAAAASAMAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAwAAAAAAAEkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " =ws.send("
					},
					"CgAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABNAwAAAAAAAAAAAABNAwAAAAAAAE4DAAAAAAAAAAAAAE4DAAAAAAAATwMAAAAAAAAAAAAATwMAAAAAAABQAwAAAAAAAAAAAABQAwAAAAAAAFEDAAAAAAAAAAAAAFEDAAAAAAAAUgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAwAAAAAAAEgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "msg.slice(0,10"
					},
					"DgAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABUAwAAAAAAAAAAAABUAwAAAAAAAFUDAAAAAAAAAAAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABXAwAAAAAAAAAAAABXAwAAAAAAAFgDAAAAAAAAAAAAAFgDAAAAAAAAWQMAAAAAAAAAAAAAWQMAAAAAAABaAwAAAAAAAAAAAABaAwAAAAAAAFsDAAAAAAAAAAAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAAXwMAAAAAAABgAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAwAAAAAAAFIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "));"
					},
					"AwAAAGADAAAAAAAAYQMAAAAAAAAAAAAAYQMAAAAAAABiAwAAAAAAAAAAAABiAwAAAAAAAGMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAwAAAAAAAGADAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAGMDAAAAAAAAZAMAAAAAAAAAAAAAZAMAAAAAAABlAwAAAAAAAAAAAABlAwAAAAAAAGYDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					2,
					"left_delete",
					null,
					"AgAAAL8CAAAAAAAAvwIAAAAAAAABAAAAMr4CAAAAAAAAvgIAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAgAAAAAAAMACAAAAAAAAAAAAAAAA8L8"
				],
				[
					306,
					1,
					"left_delete",
					null,
					"AQAAAFoDAAAAAAAAWgMAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAFoDAAAAAAAAWwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAwAAAAAAAFoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					311,
					2,
					"left_delete",
					null,
					"AgAAAF0DAAAAAAAAXQMAAAAAAAABAAAAMFwDAAAAAAAAXAMAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAwAAAAAAAF4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "30"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAwAAAAAAAFwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					315,
					1,
					"left_delete",
					null,
					"AQAAAFoDAAAAAAAAWgMAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAwAAAAAAAFoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					1,
					"left_delete",
					null,
					"AQAAAFoDAAAAAAAAWgMAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAFoDAAAAAAAAWwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAwAAAAAAAFoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAaW1wb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIGZldGNoLCBzZXRMb2cgfSBmcm9tICduZXQnOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					339,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAABqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "concat"
					},
					"BwAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA+AAAAAAAAAB8AAAAgY2xpZW50LCBzZXJ2ZXIsIGZldGNoLCBzZXRMb2cgPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AAAAAAAAAFwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					345,
					3,
					"left_delete",
					null,
					"AwAAAE0AAAAAAAAATQAAAAAAAAABAAAAdEwAAAAAAAAATAAAAAAAAAABAAAAZUsAAAAAAAAASwAAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "util"
					},
					"BAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": ",escape"
					},
					"BwAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "misc"
					},
					"BAAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					361,
					4,
					"left_delete",
					null,
					"BAAAAHcDAAAAAAAAdwMAAAAAAAABAAAAY3YDAAAAAAAAdgMAAAAAAAABAAAAc3UDAAAAAAAAdQMAAAAAAAABAAAAaXQDAAAAAAAAdAMAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AwAAAAAAAHgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "concat('BLA"
					},
					"CwAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAB5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAB8AwAAAAAAAH0DAAAAAAAAAAAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "H'+"
					},
					"AwAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACBAwAAAAAAAAAAAACBAwAAAAAAAIIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AwAAAAAAAH8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					367,
					1,
					"left_delete",
					null,
					"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAwAAAAAAAIIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIEDAAAAAAAAggMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAwAAAAAAAIEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					370,
					1,
					"left_delete",
					null,
					"AQAAAIwDAAAAAAAAjAMAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAwAAAAAAAI0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					372,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIDAAAAAAAAlAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAwAAAAAAAJIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					373,
					1,
					"left_delete",
					null,
					"AQAAAJIDAAAAAAAAkgMAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAwAAAAAAAJMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					384,
					1,
					"cut",
					null,
					"AQAAAHQDAAAAAAAAdAMAAAAAAAAeAAAAY29uY2F0KCdCTEFIJyxtc2cuc2xpY2UoMCwzMCkp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAJIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAHQDAAAAAAAAdQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": "\nb"
					},
					"AwAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAwAAAAAAAFwDAAAAAAAA////////738"
				],
				[
					391,
					1,
					"left_delete",
					null,
					"AQAAAGMDAAAAAAAAYwMAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAwAAAAAAAGQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAGMDAAAAAAAAZAMAAAAAAAAAAAAAZAMAAAAAAABlAwAAAAAAAAAAAABlAwAAAAAAAGYDAAAAAAAAAAAAAGYDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABoAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " b="
					},
					"AwAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAABqAwAAAAAAAGsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAwAAAAAAAGgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"paste",
					null,
					"AQAAAGsDAAAAAAAAiQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAwAAAAAAAGsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIkDAAAAAAAAigMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAwAAAAAAAIkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAwAAAAAAAOMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": " toStrinG"
					},
					"CQAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAADmAwAAAAAAAOcDAAAAAAAAAAAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAADpAwAAAAAAAOoDAAAAAAAAAAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAwAAAAAAAOQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO0DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAwAAAAAAAO0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAO0DAAAAAAAA7QMAAAAAAAABAAAAKO0DAAAAAAAA7QMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAwAAAAAAAO4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					405,
					1,
					"left_delete",
					null,
					"AQAAAOwDAAAAAAAA7AMAAAAAAAABAAAARw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAwAAAAAAAO0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAwAAAAAAAOwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO0DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAwAAAAAAAO0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAwAAAAAAAO4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": ",toSring"
					},
					"CAAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAE0AAAAAAAAAAAAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAEoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					418,
					4,
					"left_delete",
					null,
					"BAAAAFEAAAAAAAAAUQAAAAAAAAABAAAAZ1AAAAAAAAAAUAAAAAAAAAABAAAAbk8AAAAAAAAATwAAAAAAAAABAAAAaU4AAAAAAAAATgAAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "tring"
					},
					"BQAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACvAwAAAAAAAAQAAAAgLy89",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAwAAAAAAAK4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					477,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAK8DAAAAAAAAsQMAAAAAAAAAAAAAowMAAAAAAAClAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAwAAAAAAAKMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGwDAAAAAAAAbQMAAAAAAAAAAAAAbQMAAAAAAABuAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAwAAAAAAAGwDAAAAAAAAAAAAAAAASEA"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMwDAAAAAAAAzQMAAAAAAAAAAAAAzQMAAAAAAADOAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAwAAAAAAAMwDAAAAAAAAAAAAAAAAQEA"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGkDAAAAAAAAagMAAAAAAAAAAAAAagMAAAAAAABqAwAAAAAAAAUAAAAgICAvLw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAwAAAAAAAGkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACZAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					511,
					1,
					"paste",
					null,
					"AQAAAJUDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAJUDAAAAAAAAlgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AgAAAKIDAAAAAAAAowMAAAAAAAAAAAAAowMAAAAAAACjAwAAAAAAABAAAAByZXQ9d3Muc2VuZChtc2cp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAwAAAAAAALIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "b);"
					},
					"BAAAAKUDAAAAAAAApgMAAAAAAAAAAAAApgMAAAAAAACmAwAAAAAAABMAAAAgcmV0LCB0b1N0cmluZyhiKSk7pgMAAAAAAACnAwAAAAAAAAAAAACnAwAAAAAAAKgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAwAAAAAAALgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					531,
					1,
					"cut",
					null,
					"AQAAAJUDAAAAAAAAlQMAAAAAAAATAAAAY29uc29sZS5sb2coJ2InLGIpOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAwAAAAAAAJUDAAAAAAAAAAAAAAAAOEA"
				],
				[
					532,
					1,
					"paste",
					null,
					"AQAAAJUDAAAAAAAAqAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"paste",
					null,
					"AQAAAGoDAAAAAAAAfQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAwAAAAAAAGoDAAAAAAAAAAAAAAAAQEA"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAACCAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AwAAAAAAAH0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "toArrayBN"
					},
					"CQAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRAwAAAAAAAJEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					545,
					1,
					"left_delete",
					null,
					"AQAAAJkDAAAAAAAAmQMAAAAAAAABAAAATg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAwAAAAAAAJoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "uffer("
					},
					"BgAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJwDAAAAAAAAnQMAAAAAAAAAAAAAnQMAAAAAAACeAwAAAAAAAAAAAACeAwAAAAAAAJ8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAwAAAAAAAJkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKUDAAAAAAAApgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAwAAAAAAAKUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					552,
					1,
					"left_delete",
					null,
					"AQAAAGoDAAAAAAAAagMAAAAAAAAYAAAAY29uc29sZS5sb2coJ2InLGIpOwogICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAwAAAAAAAIIDAAAAAAAAAAAAAAAAQEA"
				],
				[
					557,
					1,
					"cut",
					null,
					"AQAAAEoAAAAAAAAASgAAAAAAAAAJAAAALHRvU3RyaW5n",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAFMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					2,
					"paste",
					null,
					"AgAAAEoAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAEoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "Arra"
					},
					"BQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABXAAAAAAAAAAYAAABTdHJpbmdXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert_completion",
					{
						"completion": "toArrayBuffer",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "toArrayBuffer"
					},
					"AgAAAFQAAAAAAAAAVAAAAAAAAAAGAAAAdG9BcnJhVAAAAAAAAABhAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAPgDAAAAAAAA+QMAAAAAAAAAAAAA+QMAAAAAAAD5AwAAAAAAAAcAAAAgICAgLy9j",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AwAAAAAAAPgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANUDAAAAAAAA1gMAAAAAAAAAAAAA1gMAAAAAAADWAwAAAAAAAAIAAAAvKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAwAAAAAAANcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " //"
					},
					"BAAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADjAwAAAAAAAAIAAAAqL+MDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAwAAAAAAAOQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					587,
					1,
					"cut",
					null,
					"AQAAAIcDAAAAAAAAhwMAAAAAAAAWAAAAdG9BcnJheUJ1ZmZlcignQkxBSCcpLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAwAAAAAAAJ0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					588,
					1,
					"paste",
					null,
					"AQAAAIcDAAAAAAAAnQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAwAAAAAAAIcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					593,
					1,
					"paste",
					null,
					"AgAAAKwDAAAAAAAAwgMAAAAAAAAAAAAAwgMAAAAAAADCAwAAAAAAAAEAAAAp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAwAAAAAAAKwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					594,
					1,
					"left_delete",
					null,
					"AQAAAMEDAAAAAAAAwQMAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAwAAAAAAAMIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAMEDAAAAAAAAwgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAwAAAAAAAMEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					597,
					4,
					"left_delete",
					null,
					"BAAAAL4DAAAAAAAAvgMAAAAAAAABAAAASL0DAAAAAAAAvQMAAAAAAAABAAAAQbwDAAAAAAAAvAMAAAAAAAABAAAATLsDAAAAAAAAuwMAAAAAAAABAAAAQg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AwAAAAAAAL8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAALsDAAAAAAAAvAMAAAAAAAAAAAAAvAMAAAAAAAC9AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AwAAAAAAALsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKwDAAAAAAAArQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAwAAAAAAAKwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAiCQAAaW1wb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIGZldGNoLCBzZXRMb2cgfSBmcm9tICduZXQnOwppbXBvcnQge2NvbmNhdCxlc2NhcGUsdG9TdHJpbmcsdG9BcnJheUJ1ZmZlcn0gZnJvbSAndXRpbCc7CmltcG9ydCBVdGlsIGZyb20gJy4vbGliL3V0aWwuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CgpmdW5jdGlvbiBDcmVhdGVTZXJ2ZXIoKSB7CiAgcHJpbnQoJ1NFUlZFUicpOwogIHNlcnZlcih7CiAgICBwb3J0OiAzMzAwLAogICAgbW91bnRzOiBbWycvJywgJy4nLCAnaW5kZXguaHRtbCddXSwKICAgIG9uQ29ubmVjdDogc29ja2V0ID0+IHsKICAgICAgcHJpbnQoJ0NsaWVudCBjb25uZWN0ZWQnKTsKICAgICAgcHJpbnQoJ1NvY2tldDogJyArIHNvY2tldCk7CiAgICAgIHNvY2tldC5zZW5kKCdIZWxsbyBmcm9tIHNlcnZlcicpOwogICAgfSwKICAgIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PiB7CiAgICAgIHByaW50KCdSZWNlaXZlZDogJywgbXNnKTsKICAgIH0sCiAgICBvbkNsb3NlOiB3aHkgPT4gewogICAgICBwcmludCgnQ2xpZW50IGRpc2Nvbm5lY3RlZC4gUmVhc29uOiAnLCB3aHkpOwogICAgfSwKICAgIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4gewogICAgICBwcmludCgnUG9uZzogJywgZGF0YSk7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIENyZWF0ZUNsaWVudCgpIHsKICBwcmludCgnQ0xJRU5UJyk7CgogIHNldExvZygoKSA9PiB7fSk7CgogIHJldHVybiBjbGllbnQoewogICAgcG9ydDogMjIsCiAgICBob3N0OiAnMTI3LjAuMC4xJywKICAgIHJhdzogdHJ1ZSwKICAgIGJpbmFyeTp0cnVlLAogICAgb25NZXNzYWdlKHdzLCBtc2cpIHsKICAgICAgY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHdzLCBtc2cpOwogICAgY29uc3QgYj1jb25jYXQodG9BcnJheUJ1ZmZlcignQkxBSCcpLG1zZy5zbGljZSgwLDMwKSx0b0FycmF5QnVmZmVyKCdcbicpKTsKICAgY29uc29sZS5sb2coJ2InLGIpOwogICAgICBsZXQgcmV0ID0gd3Muc2VuZChiKTsgIC8vd3Muc2VuZCgnWFhYXG4nKTsKCmNvbnNvbGUubG9nKCdyZXQ9d3Muc2VuZChtc2cpJywgcmV0LCB0b1N0cmluZyhiKSk7CiAgICAgIH0sCiAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICBjb25zb2xlLmxvZygnb25Db25uZWN0Jywgd3MsIHJlcSk7CiAgICB9LAogICAgb25Qb25nKHdzLCByZXEpIHsKICAgICAgY29uc29sZS5sb2coJ29uUG9uZycsIHdzLCByZXEpOwogICAgfSwKICAgIG9uQ2xvc2Uod3MsIHJlcSkgewogICAgICBjb25zb2xlLmxvZygnb25DbG9zZScsIHdzLCByZXEpOwogICAgfSwKICAgIG9uRmQoZmQsIHJkLCB3cikgewogICAgIGNvbnNvbGUubG9nKCdvbkZkJywgZmQsIHJkLCB3cik7CiAgICAgIG9zLnNldFJlYWRIYW5kbGVyKGZkLCByZCk7CiAgICAgIG9zLnNldFdyaXRlSGFuZGxlcihmZCwgd3IpOwogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBnZXRKU09OKCkgewogIGNvbnNvbGUubG9nKCdnZXRKU09OJyk7CiAgY29uc3QgcmVzID0gZmV0Y2goJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvcnNlbm4vcGxvdC1jdicsIHsKICAgIG1ldGhvZDogJ2hlYWQnCiAgfSk7CiAgY29uc3QgeyBvaywgc3RhdHVzLCB0eXBlIH0gPSByZXM7CiAgY29uc29sZS5sb2coJ3JlczonLCB7IG9rLCBzdGF0dXMsIHR5cGUgfSk7CgogIGNvbnN0IGpzb24gPSByZXMuanNvbigpOwogIGNvbnNvbGUubG9nKCdqc29uOicsIGpzb24pOwoKICBjb25zdCBkYXRhID0gbmV3IE1hcChPYmplY3QuZW50cmllcyhqc29uKSk7CiAgY29uc29sZS5sb2coJ2RhdGE6JywgZGF0YSk7CiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsgaW5zcGVjdE9wdGlvbnM6IHsgY29tcGFjdDogMiwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9IH0pOwogIGxldCB3czsKICBzd2l0Y2ggKGFyZ3NbMF0pIHsKICAgIGNhc2UgJ3MnOgogICAgICB3cz1DcmVhdGVTZXJ2ZXIoKTsKICAgICAgYnJlYWs7CiAgICBjYXNlICdjJzoKICAgICAgd3M9Q3JlYXRlQ2xpZW50KCk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAnZic6CiAgICAgd3M9IGdldEpTT04oKTsKICAgICAgYnJlYWs7CiAgfQogIGNvbnNvbGUubG9nKCd3cycsd3MpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvcj8ubWVzc2FnZSA/PyBlcnJvcn1cbiR7ZXJyb3I/LnN0YWNrfWApOwogIDE7CiAgc3RkLmV4aXQoMSk7Cn0gZmluYWxseSB7CiAgLy9jb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAPgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAwAAAAAAAK0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "'http://127.0"
					},
					"DQAAAPACAAAAAAAA8QIAAAAAAAAAAAAA8QIAAAAAAADyAgAAAAAAAAAAAADyAgAAAAAAAPMCAAAAAAAAAAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAPYCAAAAAAAA9wIAAAAAAAAAAAAA9wIAAAAAAAD4AgAAAAAAAAAAAAD4AgAAAAAAAPkCAAAAAAAAAAAAAPkCAAAAAAAA+gIAAAAAAAAAAAAA+gIAAAAAAAD7AgAAAAAAAAAAAAD7AgAAAAAAAPwCAAAAAAAAAAAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAgAAAAAAAPACAAAAAAAAAAAAAAAA8L8"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AgAAAAAAAP0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"left_delete",
					null,
					"AQAAAP0CAAAAAAAA/QIAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AgAAAAAAAP4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					617,
					1,
					"insert",
					{
						"characters": ".0.1:"
					},
					"BQAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAD/AgAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAACAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AgAAAAAAAP0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "3000/"
					},
					"BQAAAAIDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABgMAAAAAAAAAAAAABgMAAAAAAAAHAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAwAAAAAAAAIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAAcDAAAAAAAACAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAwAAAAAAAAcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					620,
					1,
					"left_delete",
					null,
					"AQAAAAcDAAAAAAAABwMAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAwAAAAAAAAgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "index.html'0"
					},
					"DAAAAAcDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAoDAAAAAAAAAAAAAAoDAAAAAAAACwMAAAAAAAAAAAAACwMAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAA0DAAAAAAAAAAAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAwAAAAAAAAcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					622,
					1,
					"left_delete",
					null,
					"AQAAABIDAAAAAAAAEgMAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					623,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABIDAAAAAAAAEwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAwAAAAAAABIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMDAAAAAAAAFAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					628,
					1,
					"cut",
					null,
					"AQAAABYDAAAAAAAAFgMAAAAAAABGAAAAICAgIHBvcnQ6IDIyLAogICAgaG9zdDogJzEyNy4wLjAuMScsCiAgICByYXc6IHRydWUsCiAgICBiaW5hcnk6IHRydWUsCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAwAAAAAAAFwDAAAAAAAAAAAAAAAAAAA"
				],
				[
					646,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADIEAAAAAAAANAQAAAAAAAAAAAAAWQMAAAAAAABbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZAwAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					648,
					1,
					"indent",
					null,
					"BAAAAFgDAAAAAAAAWgMAAAAAAAAAAAAAsgMAAAAAAAC0AwAAAAAAAAAAAADPAwAAAAAAANEDAAAAAAAAAAAAAAIEAAAAAAAABAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAADQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": ".."
					},
					"AgAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAgAAAAAAANUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					656,
					1,
					"left_delete",
					null,
					"AQAAANYCAAAAAAAA1gIAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAgAAAAAAANcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "..args"
					},
					"BgAAANYCAAAAAAAA1wIAAAAAAAAAAAAA1wIAAAAAAADYAgAAAAAAAAAAAADYAgAAAAAAANkCAAAAAAAAAAAAANkCAAAAAAAA2gIAAAAAAAAAAAAA2gIAAAAAAADbAgAAAAAAAAAAAADbAgAAAAAAANwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAgAAAAAAAN0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					662,
					1,
					"left_delete",
					null,
					"AQAAAN0CAAAAAAAA3QIAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAgAAAAAAAN4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					664,
					1,
					"insert",
					{
						"characters": "conws"
					},
					"BQAAAOACAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADiAgAAAAAAAOMCAAAAAAAAAAAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					665,
					2,
					"left_delete",
					null,
					"AgAAAOQCAAAAAAAA5AIAAAAAAAABAAAAc+MCAAAAAAAA4wIAAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAgAAAAAAAOUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					666,
					1,
					"insert",
					{
						"characters": "sole.log8"
					},
					"CQAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADrAgAAAAAAAAAAAADrAgAAAAAAAOwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAgAAAAAAAOMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					667,
					1,
					"left_delete",
					null,
					"AQAAAOsCAAAAAAAA6wIAAAAAAAABAAAAOA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAgAAAAAAAOwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					668,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAgAAAAAAAOsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					669,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOwCAAAAAAAA7gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAgAAAAAAAOwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": "WI"
					},
					"AgAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAgAAAAAAAO0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					671,
					1,
					"left_delete",
					null,
					"AQAAAO4CAAAAAAAA7gIAAAAAAAABAAAASQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAgAAAAAAAO8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": "SI"
					},
					"AgAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA7wIAAAAAAADwAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAgAAAAAAAO4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": ",...args"
					},
					"CAAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAADzAgAAAAAAAPQCAAAAAAAAAAAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAgAAAAAAAPECAAAAAAAAAAAAAAAA8L8"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AgAAAAAAAPoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					678,
					1,
					"left_delete",
					null,
					"AQAAAPwCAAAAAAAA/AIAAAAAAAAGAAAAIHt9KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AgAAAAAAAAIDAAAAAAAAAAAAAACAeEA"
				],
				[
					683,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOACAAAAAAAA4QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAgAAAAAAAOACAAAAAAAAAAAAAAAA8L8"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": "level."
					},
					"BgAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAgAAAAAAANUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					687,
					1,
					"left_delete",
					null,
					"AQAAANoCAAAAAAAA2gIAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAgAAAAAAANsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANoCAAAAAAAA2wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAgAAAAAAANoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "level"
					},
					"BQAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAADpAgAAAAAAAOoCAAAAAAAAAAAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADsAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAgAAAAAAAOcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAgAAAAAAAOwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": " 256"
					},
					"BAAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA7wIAAAAAAADwAgAAAAAAAAAAAADwAgAAAAAAAPECAAAAAAAAAAAAAPECAAAAAAAA8gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAgAAAAAAAO4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAgAAAAAAAPICAAAAAAAAAAAAAAAA8L8"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0AgAAAAAAAPQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAA8DAAAAAAAAEAMAAAAAAAAAAAAAEAMAAAAAAAARAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAwAAAAAAAA8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": " null"
					},
					"BQAAABEDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFQMAAAAAAAAAAAAAFQMAAAAAAAAWAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAwAAAAAAABEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					716,
					1,
					"insert",
					{
						"characters": ".s"
					},
					"AgAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAwAAAAAAAI4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					717,
					1,
					"left_delete",
					null,
					"AQAAAI8DAAAAAAAAjwMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAwAAAAAAAJADAAAAAAAAAAAAAAAA8L8"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAI8DAAAAAAAAkAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAwAAAAAAAI8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					719,
					1,
					"left_delete",
					null,
					"AQAAAI8DAAAAAAAAjwMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAwAAAAAAAJADAAAAAAAAAAAAAAAA8L8"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "slice"
					},
					"BQAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAACRAwAAAAAAAJIDAAAAAAAAAAAAAJIDAAAAAAAAkwMAAAAAAAAAAAAAkwMAAAAAAACUAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAwAAAAAAAI8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					721,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQDAAAAAAAAlgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAwAAAAAAAJQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": "0,1"
					},
					"AwAAAJUDAAAAAAAAlgMAAAAAAAAAAAAAlgMAAAAAAACXAwAAAAAAAAAAAACXAwAAAAAAAJgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					723,
					1,
					"left_delete",
					null,
					"AQAAAJcDAAAAAAAAlwMAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					724,
					1,
					"insert",
					{
						"characters": "30"
					},
					"AgAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAwAAAAAAAJcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": "escape("
					},
					"BwAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACNAwAAAAAAAAAAAACNAwAAAAAAAI4DAAAAAAAAAAAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAwAAAAAAAIsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKIDAAAAAAAAowMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAwAAAAAAAKIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					737,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIEFAAAAAAAAggUAAAAAAAAAAAAAggUAAAAAAACDBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBBQAAAAAAAIEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					741,
					1,
					"paste",
					null,
					"AgAAACoDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACHAwAAAAAAACAAAABodHRwOi8vMTI3LjAuMC4xOjMwMDAvaW5kZXguaHRtbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAwAAAAAAAEoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					748,
					1,
					"paste",
					null,
					"AQAAAI4DAAAAAAAAkwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAwAAAAAAAI4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					749,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJMDAAAAAAAAlAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAwAAAAAAAJMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAwAAAAAAAJQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					751,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJUDAAAAAAAAlwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					752,
					1,
					"paste",
					null,
					"AQAAAJYDAAAAAAAAuQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAwAAAAAAAJYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAALkDAAAAAAAAugMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AwAAAAAAALkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					754,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALkDAAAAAAAAuQMAAAAAAAABAAAAJ7kDAAAAAAAAuQMAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AwAAAAAAALoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					755,
					1,
					"left_delete",
					null,
					"AQAAALgDAAAAAAAAuAMAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AwAAAAAAALkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					756,
					1,
					"insert",
					{
						"characters": "',"
					},
					"AgAAALgDAAAAAAAAuQMAAAAAAAAAAAAAuQMAAAAAAAC6AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AwAAAAAAALgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					757,
					1,
					"insert_completion",
					{
						"completion": "${1:value_name}: ${0:value},",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": ":,"
					},
					"AQAAALoDAAAAAAAAzAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AwAAAAAAALoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC9AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AwAAAAAAALoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					762,
					1,
					"paste",
					null,
					"AQAAAL0DAAAAAAAAxAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9AwAAAAAAAL0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					763,
					1,
					"insert",
					{
						"characters": ":'localhost.c"
					},
					"DQAAAMQDAAAAAAAAxQMAAAAAAAAAAAAAxQMAAAAAAADGAwAAAAAAAAAAAADGAwAAAAAAAMcDAAAAAAAAAAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAAyAMAAAAAAADJAwAAAAAAAAAAAADJAwAAAAAAAMoDAAAAAAAAAAAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAADMAwAAAAAAAM0DAAAAAAAAAAAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAADPAwAAAAAAANADAAAAAAAAAAAAANADAAAAAAAA0QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAwAAAAAAAMQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": "rt',"
					},
					"BAAAANEDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAADTAwAAAAAAANQDAAAAAAAAAAAAANQDAAAAAAAA1QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAwAAAAAAANEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": "\nsslKEy:'"
					},
					"CgAAANUDAAAAAAAA1gMAAAAAAAAAAAAA1gMAAAAAAADYAwAAAAAAAAAAAADYAwAAAAAAANkDAAAAAAAAAAAAANkDAAAAAAAA2gMAAAAAAAAAAAAA2gMAAAAAAADbAwAAAAAAAAAAAADbAwAAAAAAANwDAAAAAAAAAAAAANwDAAAAAAAA3QMAAAAAAAAAAAAA3QMAAAAAAADeAwAAAAAAAAAAAADeAwAAAAAAAN8DAAAAAAAAAAAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAwAAAAAAANUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					766,
					1,
					"paste",
					null,
					"AQAAAOADAAAAAAAA5wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAwAAAAAAAOADAAAAAAAAAAAAAAAA8L8"
				],
				[
					767,
					7,
					"left_delete",
					null,
					"BwAAAOYDAAAAAAAA5gMAAAAAAAABAAAAdOUDAAAAAAAA5QMAAAAAAAABAAAAcuQDAAAAAAAA5AMAAAAAAAABAAAAZeMDAAAAAAAA4wMAAAAAAAABAAAAQ+IDAAAAAAAA4gMAAAAAAAABAAAAbOEDAAAAAAAA4QMAAAAAAAABAAAAc+ADAAAAAAAA4AMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAwAAAAAAAOcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					768,
					1,
					"insert",
					{
						"characters": "localhost.key',"
					},
					"DwAAAOADAAAAAAAA4QMAAAAAAAAAAAAA4QMAAAAAAADiAwAAAAAAAAAAAADiAwAAAAAAAOMDAAAAAAAAAAAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA5AMAAAAAAADlAwAAAAAAAAAAAADlAwAAAAAAAOYDAAAAAAAAAAAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADrAwAAAAAAAAAAAADrAwAAAAAAAOwDAAAAAAAAAAAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA7QMAAAAAAADuAwAAAAAAAAAAAADuAwAAAAAAAO8DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAwAAAAAAAOADAAAAAAAAAAAAAAAA8L8"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA8AMAAAAAAADyAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAwAAAAAAAO8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					771,
					1,
					"left_delete",
					null,
					"AQAAAPIDAAAAAAAA8gMAAAAAAAASAAAAdmFsdWVfbmFtZTogdmFsdWUs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAwAAAAAAAAQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					773,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYCgAAaW1wb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIGZldGNoLCBzZXRMb2cgfSBmcm9tICduZXQnOwppbXBvcnQgeyBjb25jYXQsIGVzY2FwZSwgdG9TdHJpbmcsIHRvQXJyYXlCdWZmZXIgfSBmcm9tICd1dGlsJzsKaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKCmZ1bmN0aW9uIENyZWF0ZVNlcnZlcigpIHsKICBwcmludCgnU0VSVkVSJyk7CiAgc2VydmVyKHsKICAgIHBvcnQ6IDMzMDAsCiAgICBtb3VudHM6IFtbJy8nLCAnLicsICdpbmRleC5odG1sJ11dLAogICAgb25Db25uZWN0OiBzb2NrZXQgPT4gewogICAgICBwcmludCgnQ2xpZW50IGNvbm5lY3RlZCcpOwogICAgICBwcmludCgnU29ja2V0OiAnICsgc29ja2V0KTsKICAgICAgc29ja2V0LnNlbmQoJ0hlbGxvIGZyb20gc2VydmVyJyk7CiAgICB9LAogICAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+IHsKICAgICAgcHJpbnQoJ1JlY2VpdmVkOiAnLCBtc2cpOwogICAgfSwKICAgIG9uQ2xvc2U6IHdoeSA9PiB7CiAgICAgIHByaW50KCdDbGllbnQgZGlzY29ubmVjdGVkLiBSZWFzb246ICcsIHdoeSk7CiAgICB9LAogICAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PiB7CiAgICAgIHByaW50KCdQb25nOiAnLCBkYXRhKTsKICAgIH0KICB9KTsKfQoKZnVuY3Rpb24gQ3JlYXRlQ2xpZW50KCkgewogIHByaW50KCdDTElFTlQnKTsKCiAgc2V0TG9nKChsZXZlbCwuLi5hcmdzKSA9PiBsZXZlbCA+IDI1NiA/IGNvbnNvbGUubG9nKCdXU0knLC4uLmFyZ3MpIDogbnVsbCk7CiAgcmV0dXJuIGNsaWVudCgnaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3NsaWNlJywgewogIHNzbENBOiAnL2V0Yy9zc2wvY2VydHMvY2EtY2VydGlmaWNhdGVzLmNydCcsCiAgc3NsQ2VydDonbG9jYWxob3N0LmNydCcsCiAgc3NsS0V5Oidsb2NhbGhvc3Qua2V5JywKICAgIG9uTWVzc2FnZSh3cywgbXNnKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB3cywgZXNjYXBlKG1zZy5zbGljZSgwLDMwKSkpOwogICAvKiAgICAgY29uc3QgYiA9IGNvbmNhdCh0b0FycmF5QnVmZmVyKCdCTEFIJyksIG1zZy5zbGljZSgwLCAzMCksIHRvQXJyYXlCdWZmZXIoJ1xuJykpOwogICAgICAgIGNvbnNvbGUubG9nKCdiJywgYik7CiAgICAgICAgbGV0IHJldCA9IHdzLnNlbmQoYik7IC8vd3Muc2VuZCgnWFhYXG4nKTsKCiAgICAgICAgY29uc29sZS5sb2coJ3JldD13cy5zZW5kKG1zZyknLCByZXQsIHRvU3RyaW5nKGIpKTsqLwogICAgfSwKICAgIG9uQ29ubmVjdCh3cywgcmVxKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB3cywgcmVxKTsKICAgIH0sCiAgICBvblBvbmcod3MsIHJlcSkgewogICAgICBjb25zb2xlLmxvZygnb25Qb25nJywgd3MsIHJlcSk7CiAgICB9LAogICAgb25DbG9zZSh3cywgcmVxKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkNsb3NlJywgd3MsIHJlcSk7CiAgICB9LAogICAgb25GZChmZCwgcmQsIHdyKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ29uRmQnLCBmZCwgcmQsIHdyKTsKICAgICAgb3Muc2V0UmVhZEhhbmRsZXIoZmQsIHJkKTsKICAgICAgb3Muc2V0V3JpdGVIYW5kbGVyKGZkLCB3cik7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIGdldEpTT04oKSB7CiAgY29uc29sZS5sb2coJ2dldEpTT04nKTsKICBjb25zdCByZXMgPSBmZXRjaCgnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9yc2Vubi9wbG90LWN2JywgewogICAgbWV0aG9kOiAnaGVhZCcKICB9KTsKICBjb25zdCB7IG9rLCBzdGF0dXMsIHR5cGUgfSA9IHJlczsKICBjb25zb2xlLmxvZygncmVzOicsIHsgb2ssIHN0YXR1cywgdHlwZSB9KTsKCiAgY29uc3QganNvbiA9IHJlcy5qc29uKCk7CiAgY29uc29sZS5sb2coJ2pzb246JywganNvbik7CgogIGNvbnN0IGRhdGEgPSBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKGpzb24pKTsKICBjb25zb2xlLmxvZygnZGF0YTonLCBkYXRhKTsKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9uczogeyBjb21wYWN0OiAyLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0gfSk7CiAgbGV0IHdzOwogIHN3aXRjaCAoYXJnc1swXSkgewogICAgY2FzZSAncyc6CiAgICAgIHdzID0gQ3JlYXRlU2VydmVyKCk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAnYyc6CiAgICAgIHdzID0gQ3JlYXRlQ2xpZW50KCk7CiAgICAgIGJyZWFrOwogICAgY2FzZSAnZic6CiAgICAgIHdzID0gZ2V0SlNPTigpOwogICAgICBicmVhazsKICB9CiAgY29uc29sZS5sb2coJ3dzJywgd3MpOwp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvcj8ubWVzc2FnZSA/PyBlcnJvcn1cbiR7ZXJyb3I/LnN0YWNrfWApOwogIDE7CiAgc3RkLmV4aXQoMSk7Cn0gZmluYWxseSB7CiAgLy9jb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CgAAAAAAAAAAKAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAwAAAAAAAPIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					776,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAwAAAAAAAJQDAAAAAAAAAAAAAAAAQEA"
				],
				[
					782,
					1,
					"left_delete",
					null,
					"AQAAAOkDAAAAAAAA6QMAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAwAAAAAAAOoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					783,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAwAAAAAAAOkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					788,
					1,
					"paste",
					null,
					"AgAAANEDAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADgAwAAAAAAAA0AAABsb2NhbGhvc3QuY3J0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAwAAAAAAAN4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					792,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAwAAAAAAAOcDAAAAAAAAAAAAAAAAQEA"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": "AA"
					},
					"AgAAAMsDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAwAAAAAAAMsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					798,
					3,
					"right_delete",
					null,
					"AwAAAM0DAAAAAAAAzQMAAAAAAAABAAAAZc0DAAAAAAAAzQMAAAAAAAABAAAAcs0DAAAAAAAAzQMAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAwAAAAAAAM0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					799,
					1,
					"left_delete",
					null,
					"AQAAAMwDAAAAAAAAzAMAAAAAAAABAAAAQQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAwAAAAAAAM0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					805,
					1,
					"insert",
					{
						"characters": "transistorisiert"
					},
					"EQAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA3AwAAAAAAABUAAABkZXZlbG9wZXIubW96aWxsYS5vcmc3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAABDAwAAAAAAAEQDAAAAAAAAAAAAAEQDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABGAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AwAAAAAAAEsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					806,
					1,
					"insert",
					{
						"characters": ".ch"
					},
					"AwAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAwAAAAAAAEYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					810,
					1,
					"left_delete",
					null,
					"AQAAAEoDAAAAAAAASgMAAAAAAAA/AAAAZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL3NsaWNl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAwAAAAAAAIkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					818,
					1,
					"paste",
					null,
					"AgAAAC4DAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABIAwAAAAAAABwAAABodHRwczovL3RyYW5zaXN0b3Jpc2llcnQuY2gv",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAwAAAAAAAEoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					823,
					1,
					"paste",
					null,
					"AgAAAC4DAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABCAwAAAAAAABoAAABodHRwczovL2xpYndlYnNvY2tldHMub3JnLw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAwAAAAAAAEgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					833,
					1,
					"left_delete",
					null,
					"AQAAADIDAAAAAAAAMgMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAwAAAAAAADMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": "127.0.0.1"
					},
					"CQAAADUDAAAAAAAANgMAAAAAAAAAAAAANgMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADgDAAAAAAAAAAAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AwAAAAAAADUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					837,
					11,
					"right_delete",
					null,
					"CwAAAD4DAAAAAAAAPgMAAAAAAAABAAAAdz4DAAAAAAAAPgMAAAAAAAABAAAAYT4DAAAAAAAAPgMAAAAAAAABAAAAcj4DAAAAAAAAPgMAAAAAAAABAAAAbT4DAAAAAAAAPgMAAAAAAAABAAAAYz4DAAAAAAAAPgMAAAAAAAABAAAAYT4DAAAAAAAAPgMAAAAAAAABAAAAdD4DAAAAAAAAPgMAAAAAAAABAAAALj4DAAAAAAAAPgMAAAAAAAABAAAAYz4DAAAAAAAAPgMAAAAAAAABAAAAbz4DAAAAAAAAPgMAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAD4DAAAAAAAAPwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "3000"
					},
					"BAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AwAAAAAAAD8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "9000"
					},
					"BQAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABAAwAAAAAAAAQAAAAzMDAwQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AwAAAAAAAEMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					862,
					1,
					"insert",
					{
						"characters": "\nconsole.lo"
					},
					"DAAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAWBAAAAAAAAAAAAAAWBAAAAAAAABcEAAAAAAAAAAAAABcEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABoEAAAAAAAAAAAAABoEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAAB0EAAAAAAAAAAAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAfBAAAAAAAAAAAAAAfBAAAAAAAACAEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPBAAAAAAAAA8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					863,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACAEAAAAAAAAIgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgBAAAAAAAACAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					864,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACAEAAAAAAAAIAQAAAAAAAABAAAAKCAEAAAAAAAAIAQAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhBAAAAAAAACEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAACAEAAAAAAAAIQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgBAAAAAAAACAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					866,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACEEAAAAAAAAIwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhBAAAAAAAACEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					867,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACIEAAAAAAAAJAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					868,
					1,
					"insert",
					{
						"characters": "data:\\n"
					},
					"BwAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAAlBAAAAAAAACYEAAAAAAAAAAAAACYEAAAAAAAAJwQAAAAAAAAAAAAAJwQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACkEAAAAAAAAAAAAACkEAAAAAAAAKgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjBAAAAAAAACMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					870,
					1,
					"insert",
					{
						"characters": "+msg"
					},
					"BAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAAtBAAAAAAAAC4EAAAAAAAAAAAAAC4EAAAAAAAALwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArBAAAAAAAACsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADAEAAAAAAAAMQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "debugger-client."
					},
					"EAAAAEQDAAAAAAAARQMAAAAAAAAAAAAARQMAAAAAAABGAwAAAAAAAAAAAABGAwAAAAAAAEcDAAAAAAAAAAAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABJAwAAAAAAAEoDAAAAAAAAAAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAwAAAAAAAEQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					877,
					1,
					"insert",
					{
						"characters": "js"
					},
					"AgAAAFQDAAAAAAAAVQMAAAAAAAAAAAAAVQMAAAAAAABWAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAwAAAAAAAFQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					883,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAgAAAAAAAMwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					887,
					1,
					"paste",
					null,
					"AQAAAMoCAAAAAAAAGgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAgAAAAAAAMoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAgAAAAAAANICAAAAAAAAAAAAAAAA8L8"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAgAAAAAAANQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " {});"
					},
					"BQAAANYCAAAAAAAA1wIAAAAAAAAAAAAA1wIAAAAAAADYAgAAAAAAAAAAAADYAgAAAAAAANkCAAAAAAAAAAAAANkCAAAAAAAA2gIAAAAAAAAAAAAA2gIAAAAAAADbAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					898,
					1,
					"left_delete",
					null,
					"AQAAANsCAAAAAAAA2wIAAAAAAABIAAAAKGxldmVsLCAuLi5hcmdzKSA9PiAobGV2ZWwgPiAyNTYgPyBjb25zb2xlLmxvZygnV1NJJywgLi4uYXJncykgOiBudWxsKSk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAgAAAAAAACMDAAAAAAAA////////738"
				],
				[
					905,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAEYDAAAAAAAARwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAwAAAAAAAEYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAABxAwAAAAAAADMAAAAgICAgLy9zc2xDQTogJy9ldGMvc3NsL2NlcnRzL2NhLWNlcnRpZmljYXRlcy5jcnQnLAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAwAAAAAAAKMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					941,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACQAwAAAAAAAB8AAAAgICAgLy9zc2xLZXk6ICdsb2NhbGhvc3Qua2V5JywK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAwAAAAAAAK4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					946,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAsEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAMBAAAAAAAAOcAAAAgICAgLyogICAgIGNvbnN0IGIgPSBjb25jYXQodG9BcnJheUJ1ZmZlcignQkxBSCcpLCBtc2cuc2xpY2UoMCwgMzApLCB0b0FycmF5QnVmZmVyKCdcbicpKTsKICAgICAgICBjb25zb2xlLmxvZygnYicsIGIpOwogICAgICAgIGxldCByZXQgPSB3cy5zZW5kKGIpOyAvL3dzLnNlbmQoJ1hYWFxuJyk7CgogICAgICAgIGNvbnNvbGUubG9nKCdyZXQ9d3Muc2VuZChtc2cpJywgcmV0LCB0b1N0cmluZyhiKSk7Ki8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALBAAAAAAAAPIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					956,
					1,
					"doxy_enter",
					null,
					"AgAAADADAAAAAAAAMQMAAAAAAAAAAAAAMQMAAAAAAAAyAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAwAAAAAAADADAAAAAAAAAAAAAAAA8L8"
				],
				[
					957,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAAxAwAAAAAAADEDAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAwAAAAAAADIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					966,
					1,
					"cut",
					null,
					"AQAAAEQDAAAAAAAARAMAAAAAAAArAAAAJ2h0dHBzOi8vMTI3LjAuMC4xOjkwMDAvZGVidWdnZXItY2xpZW50LmpzJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAwAAAAAAAG8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					969,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAADMDAAAAAAAANAMAAAAAAAAAAAAANAMAAAAAAAA1AwAAAAAAAAAAAAA1AwAAAAAAADYDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAwAAAAAAADMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					970,
					1,
					"insert",
					{
						"characters": " url;"
					},
					"BQAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA4AwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AwAAAAAAADYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					971,
					1,
					"insert",
					{
						"characters": "\nurl="
					},
					"BgAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					972,
					1,
					"paste",
					null,
					"AQAAAEEDAAAAAAAAbAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAwAAAAAAAEEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwDAAAAAAAAbQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAwAAAAAAAGwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					974,
					1,
					"insert",
					{
						"characters": "\nurl="
					},
					"BgAAAG0DAAAAAAAAbgMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABvAwAAAAAAAHADAAAAAAAAAAAAAHADAAAAAAAAcQMAAAAAAAAAAAAAcQMAAAAAAAByAwAAAAAAAAAAAAByAwAAAAAAAHMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAwAAAAAAAG0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					975,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHMDAAAAAAAAdQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAwAAAAAAAHMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": "h"
					},
					"AQAAAHQDAAAAAAAAdQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					977,
					1,
					"left_delete",
					null,
					"AQAAAHQDAAAAAAAAdAMAAAAAAAABAAAAaA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AwAAAAAAAHUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": "ws://127.0.0"
					},
					"DAAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAB5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAB8AwAAAAAAAH0DAAAAAAAAAAAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAB/AwAAAAAAAIADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": ".1:9000/"
					},
					"CAAAAIADAAAAAAAAgQMAAAAAAAAAAAAAgQMAAAAAAACCAwAAAAAAAAAAAACCAwAAAAAAAIMDAAAAAAAAAAAAAIMDAAAAAAAAhAMAAAAAAAAAAAAAhAMAAAAAAACFAwAAAAAAAAAAAACFAwAAAAAAAIYDAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAwAAAAAAAIADAAAAAAAAAAAAAAAA8L8"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAIgDAAAAAAAAiQMAAAAAAAAAAAAAiQMAAAAAAACKAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAwAAAAAAAIgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIsDAAAAAAAAjAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAwAAAAAAAIsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "url"
					},
					"AwAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAwAAAAAAAJ0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					999,
					1,
					"insert",
					{
						"characters": "\nws.send"
					},
					"CQAAAIkEAAAAAAAAigQAAAAAAAAAAAAAigQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJEEAAAAAAAAAAAAAJEEAAAAAAAAkgQAAAAAAAAAAAAAkgQAAAAAAACTBAAAAAAAAAAAAACTBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAJcEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJBAAAAAAAAIkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1000,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJcEAAAAAAAAmQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXBAAAAAAAAJcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1001,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJgEAAAAAAAAmgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1002,
					1,
					"insert",
					{
						"characters": "HELLO!\\¶"
					},
					"CAAAAJkEAAAAAAAAmgQAAAAAAAAAAAAAmgQAAAAAAACbBAAAAAAAAAAAAACbBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAnQQAAAAAAAAAAAAAnQQAAAAAAACeBAAAAAAAAAAAAACeBAAAAAAAAJ8EAAAAAAAAAAAAAJ8EAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAAChBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZBAAAAAAAAJkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1003,
					1,
					"left_delete",
					null,
					"AQAAAKAEAAAAAAAAoAQAAAAAAAACAAAAwrY",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChBAAAAAAAAKEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1004,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAKAEAAAAAAAAoQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBAAAAAAAAKAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": "M;"
					},
					"AgAAAKMEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAAClBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBAAAAAAAAKMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1009,
					2,
					"left_delete",
					null,
					"AgAAAKQEAAAAAAAApAQAAAAAAAABAAAAO6MEAAAAAAAAowQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClBAAAAAAAAKUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1010,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKMEAAAAAAAApAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjBAAAAAAAAKMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1043,
					1,
					"cut",
					null,
					"AQAAAG4DAAAAAAAAbgMAAAAAAAAfAAAAIHVybD0nd3M6Ly8xMjcuMC4wLjE6OTAwMC93cyc7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAwAAAAAAAI0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1044,
					1,
					"paste",
					null,
					"AQAAAG4DAAAAAAAAjQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAwAAAAAAAG4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1049,
					1,
					"insert",
					{
						"characters": "httpü"
					},
					"BgAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB1AwAAAAAAAAIAAAB3c3UDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAB3AwAAAAAAAHgDAAAAAAAAAAAAAHgDAAAAAAAAeQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1050,
					1,
					"left_delete",
					null,
					"AQAAAHgDAAAAAAAAeAMAAAAAAAACAAAAw7w",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AwAAAAAAAHkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1054,
					1,
					"left_delete",
					null,
					"AQAAAIoDAAAAAAAAigMAAAAAAAACAAAAd3M",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAwAAAAAAAIwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1060,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB1AwAAAAAAAAQAAABodHRwdQMAAAAAAAB2AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIwEAAAAAAAAjQQAAAAAAAAAAAAAjQQAAAAAAACOBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMBAAAAAAAAIwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1162,
					1,
					"insert",
					{
						"characters": "6200"
					},
					"BQAAAIMDAAAAAAAAhAMAAAAAAAAAAAAAhAMAAAAAAACEAwAAAAAAAAQAAAA5MDAwhAMAAAAAAACFAwAAAAAAAAAAAACFAwAAAAAAAIYDAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAwAAAAAAAIcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1166,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHYDAAAAAAAAdwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AwAAAAAAAHYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1169,
					1,
					"left_delete",
					null,
					"AQAAAHYDAAAAAAAAdgMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AwAAAAAAAHcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": "ws.send"
					},
					"BwAAAD4EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEEEAAAAAAAAAAAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABDBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAARQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+BAAAAAAAAD4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1175,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEUEAAAAAAAARwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFBAAAAAAAAEUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1176,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEYEAAAAAAAASAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGBAAAAAAAAEYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1177,
					1,
					"insert",
					{
						"characters": "HELLO\\n"
					},
					"BwAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAABJBAAAAAAAAEoEAAAAAAAAAAAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAE0EAAAAAAAAAAAAAE0EAAAAAAAATgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHBAAAAAAAAEcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1179,
					1,
					"insert",
					{
						"characters": ";s"
					},
					"AgAAAFAEAAAAAAAAUQQAAAAAAAAAAAAAUQQAAAAAAABSBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQBAAAAAAAAFAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1180,
					1,
					"left_delete",
					null,
					"AQAAAFEEAAAAAAAAUQQAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSBAAAAAAAAFIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1196,
					1,
					"cut",
					null,
					"AQAAADsEAAAAAAAAOwQAAAAAAAAXAAAAICAgd3Muc2VuZCgnSEVMTE9cbicpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BAAAAAAAAFIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1199,
					1,
					"paste",
					null,
					"AQAAAIcEAAAAAAAAngQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBAAAAAAAAIcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ4EAAAAAAAAnwQAAAAAAAAAAAAAnwQAAAAAAACfBAAAAAAAABkAAAAgLy8gIHdzLnNlbmQoJ0hFTExPIVxuJyk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeBAAAAAAAALcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1216,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEsFAAAAAAAATAUAAAAAAAAAAAAATAUAAAAAAABMBQAAAAAAAAQAAAAgLy9j",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBQAAAAAAAE8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1219,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBQAAAAAAAEwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1225,
					1,
					"insert",
					{
						"characters": "9i000"
					},
					"BgAAAIMDAAAAAAAAhAMAAAAAAAAAAAAAhAMAAAAAAACEAwAAAAAAAAQAAAA2MjAwhAMAAAAAAACFAwAAAAAAAAAAAACFAwAAAAAAAIYDAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAwAAAAAAAIcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1226,
					4,
					"left_delete",
					null,
					"BAAAAIcDAAAAAAAAhwMAAAAAAAABAAAAMIYDAAAAAAAAhgMAAAAAAAABAAAAMIUDAAAAAAAAhQMAAAAAAAABAAAAMIQDAAAAAAAAhAMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAwAAAAAAAIgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": "000"
					},
					"AwAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAhQMAAAAAAACGAwAAAAAAAAAAAACGAwAAAAAAAIcDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAwAAAAAAAIQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1234,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJ0EAAAAAAAAnwQAAAAAAAAAAAAAhwQAAAAAAACJBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBAAAAAAAAJ0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1240,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAABgEAAAAAAAAGgQAAAAAAAAAAAAA3QMAAAAAAADfAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAwAAAAAAABgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1245,
					2,
					"left_delete",
					null,
					"AgAAADYEAAAAAAAANgQAAAAAAAABAAAAbjUEAAAAAAAANQQAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3BAAAAAAAADcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1250,
					1,
					"left_delete",
					null,
					"AQAAADYEAAAAAAAANgQAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3BAAAAAAAADcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1251,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADYEAAAAAAAANwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2BAAAAAAAADYEAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 95215,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					21,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAAIvnAAAAAAAAjOcAAAAAAAAAAAAAjOcAAAAAAACN5wAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi+cAAAAAAACL5wAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAAIznAAAAAAAAjOcAAAAAAAABAAAALovnAAAAAAAAi+cAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAjecAAAAAAACN5wAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ".files"
					},
					"BgAAAIvnAAAAAAAAjOcAAAAAAAAAAAAAjOcAAAAAAACN5wAAAAAAAAAAAACN5wAAAAAAAI7nAAAAAAAAAAAAAI7nAAAAAAAAj+cAAAAAAAAAAAAAj+cAAAAAAACQ5wAAAAAAAAAAAACQ5wAAAAAAAJHnAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi+cAAAAAAACL5wAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/wscli.js",
			"settings":
			{
				"buffer_size": 6113,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 8125,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-net.js",
			"settings":
			{
				"buffer_size": 2878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/lib/extendArray.js",
			"settings":
			{
				"buffer_size": 2689,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACBCgAAZXhwb3J0IGNvbnN0IEFycmF5RXh0ZW5zaW9ucyA9IHsKICBjb250YWlucyhpdGVtKSB7CiAgICByZXR1cm4gdGhpcy5pbmRleE9mKGl0ZW0pICE9IC0xOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBsYXN0KCkgewogICAgICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgICAgIH0sCiAgYXQoaW5kZXgpIHsKICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSB0aGlzOwogICAgcmV0dXJuIHRoaXNbKChpbmRleCAlIGxlbmd0aCkgKyBsZW5ndGgpICUgbGVuZ3RoXTsKICB9LAogIGNsZWFyKCkgewogICAgdGhpcy5zcGxpY2UoMCwgdGhpcy5sZW5ndGgpOwogIH0sCgogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKSB7CiAgICBmb3IobGV0IGkgPSB0aGlzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgIGNvbnN0IHggPSB0aGlzW2ldOwogICAgICBpZihwcmVkaWNhdGUoeCwgaSwgdGhpcykpIHJldHVybiBpOwogICAgfQogICAgcmV0dXJuIC0xOwogIH0sCiAgZmluZExhc3QocHJlZGljYXRlKSB7CiAgICBsZXQgaTsKICAgIGlmKChpID0gdGhpcy5maW5kTGFzdEluZGV4KHByZWRpY2F0ZSkpID09IC0xKSByZXR1cm4gbnVsbDsKICAgIHJldHVybiB0aGlzW2ldOwogIH0sCiAgdW5pcXVlKCkgewogICAgcmV0dXJuIFsuLi5uZXcgU2V0KHRoaXMpXTsKICB9LAogIGFkZCguLi5pdGVtcykgewogICAgbGV0IHJldCA9IGZhbHNlOwogICAgZm9yKGxldCBpdGVtIG9mIGl0ZW1zKSB7CiAgICAgIGlmKHRoaXMuc2VhcmNoKGl0ZW0pID09IC0xKSB7CiAgICAgICAgcmV0ID0gdHJ1ZTsKICAgICAgICB0aGlzLnB1c2goaXRlbSk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiB0aGlzOwogIH0sCiAgc2VhcmNoKGl0ZW0sIHByZWQgPSAoYSwgYikgPT4gKGEgPT0gYiA/IHRydWUgOiBhICYmIGIgJiYgYS5jb25zdHJ1Y3RvciAmJiBiLmNvbnN0cnVjdG9yICYmIGEuY29uc3RydWN0b3IgPT09IGIuY29uc3RydWN0b3IgJiYgYS5jb25zdHJ1Y3Rvci5lcXVhbCA/IGEuY29uc3RydWN0b3IuZXF1YWwoYSwgYikgOiBmYWxzZSkpIHsKICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSBpZihwcmVkKGl0ZW0sIHRoaXNbaV0pKSByZXR1cm4gaTsKICAgIHJldHVybiAtMTsKICB9LAoKICBwdXNoSWYoaXRlbSwgcHJlZCA9IChhcnIsIGl0ZW0pID0+IGFyci5pbmRleE9mKGl0ZW0pID09IC0xKSB7CiAgICBpZihwcmVkKHRoaXMsIGl0ZW0pKSB0aGlzLnB1c2goaXRlbSk7CgogICAgcmV0dXJuIHRoaXM7CiAgfSwKICBpbnNlcnRlcihwcmVkID0gKGFyciwgaXRlbSkgPT4gYXJyLnNlYXJjaChpdGVtKSA9PSAtMSkgewogICAgcmV0dXJuICguLi5pdGVtcykgPT4gewogICAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgICBpZihwcmVkKHRoaXMsIGl0ZW0pKSB0aGlzLnB1c2goaXRlbSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXM7CiAgICB9OwogIH0sCiAgZGVsZXRlKC4uLml0ZW1zKSB7CiAgICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIHsKICAgICAgbGV0IGluZGV4OwogICAgICBpZigoaW5kZXggPSB0aGlzLmluZGV4T2YoaXRlbSkpICE9IC0xKSB0aGlzLnNwbGljZShpbmRleCwgMSk7CiAgICB9CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJlbW92ZShwcmVkaWNhdGUpIHsKICAgIGlmKHR5cGVvZiBwcmVkaWNhdGUgIT0gJ2Z1bmN0aW9uJykgewogICAgICBsZXQgbmVlZGxlID0gcHJlZGljYXRlOwogICAgICBwcmVkaWNhdGUgPSBpdGVtID0+IGl0ZW0gPT0gbmVlZGxlOwogICAgfQogICAgZm9yKGxldCBpID0gdGhpcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgewogICAgICBpZihwcmVkaWNhdGUodGhpc1tpXSwgaSwgdGhpcykpIHRoaXMuc3BsaWNlKGksIDEpOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfSwKICByb3RhdGVSaWdodChuKSB7CiAgICB0aGlzLnVuc2hpZnQoLi4udGhpcy5zcGxpY2UobiwgdGhpcy5sZW5ndGggLSBuKSk7CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJvdGF0ZUxlZnQobikgewogICAgdGhpcy5wdXNoKC4uLnRoaXMuc3BsaWNlKDAsIG4pKTsKICAgIHJldHVybiB0aGlzOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBmaXJzdCgpIHsKICAgIHJldHVybiB0aGlzWzBdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBoZWFkKCkgewogICAgcmV0dXJuIHRoaXNbMF07CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IHRhaWwoKSB7CiAgICByZXR1cm4gdGhpc1t0aGlzLmxlbmd0aCAtIDFdOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBsYXN0KCkgewogICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGggLSAxXTsKICB9Cn07CgpleHBvcnQgZnVuY3Rpb24gZXh0ZW5kQXJyYXkocHJvdG8gPSBBcnJheS5wcm90b3R5cGUpIHsKICBsZXQgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKEFycmF5RXh0ZW5zaW9ucyk7CgogIGZvcihsZXQgbmFtZSBpbiBkZXNjKSB7CiAgICBkZXNjW25hbWVdLmVudW1lcmFibGUgPSBmYWxzZTsKICAgIGlmKCFkZXNjW25hbWVdLmdldCkgZGVzY1tuYW1lXS53cml0YWJsZSA9IGZhbHNlOwogIH0KCiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocHJvdG8sIGRlc2MpOwogIHJldHVybiBwcm90bzsKfQoKZXhwb3J0IGRlZmF1bHQgZXh0ZW5kQXJyYXk7CgAAAAAAAAAAgQoAAAAAAAAAAAAAAAAAAAAAAACBCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/hooks/useFetch.js",
			"settings":
			{
				"buffer_size": 503,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/lexer.js",
			"settings":
			{
				"buffer_size": 9207,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"cut",
					null,
					"AQAAAJMBAAAAAAAAkwEAAAAAAAAjAAAAJyAoJyArCiAgICAgIGxvYy50b1N0cmluZygpICsKICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMBAAAAAAAAtgEAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAJUBAAAAAAAAlQEAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYBAAAAAAAAlgEAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADJAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIBAAAAAAAAwgEAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMkBAAAAAAAAywEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkBAAAAAAAAyQEAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMkBAAAAAAAAyQEAAAAAAAABAAAAIskBAAAAAAAAyQEAAAAAAAABAAAAIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAygEAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMkBAAAAAAAAywEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkBAAAAAAAAyQEAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMoBAAAAAAAAywEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAygEAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAMoBAAAAAAAAygEAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsBAAAAAAAAywEAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\"\\nloc:"
					},
					"BwAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAANABAAAAAAAA0QEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAygEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEBAAAAAAAA0gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"paste",
					null,
					"AQAAANMBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMBAAAAAAAA0wEAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADUAQAAAAAAAAQAAAAnICgn",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMBAAAAAAAA1wEAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAPsBAAAAAAAA+wEAAAAAAAABAAAAIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwBAAAAAAAA/AEAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					5,
					"left_delete",
					null,
					"BQAAAPIBAAAAAAAA8gEAAAAAAAABAAAAIPABAAAAAAAA8AEAAAAAAAACAAAAICDuAQAAAAAAAO4BAAAAAAAAAgAAACAg7QEAAAAAAADtAQAAAAAAAAEAAAAK7AEAAAAAAADsAQAAAAAAAAEAAAAr",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMBAAAAAAAA8wEAAAAAAAAAAAAAAABMQA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwBAAAAAAAA7AEAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "this.ipt"
					},
					"CQAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC+AQAAAAAAAAQAAABsaW5lvgEAAAAAAAC/AQAAAAAAAAAAAAC/AQAAAAAAAMABAAAAAAAAAAAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAADCAQAAAAAAAMMBAAAAAAAAAAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0BAAAAAAAAwQEAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					2,
					"left_delete",
					null,
					"AgAAAMQBAAAAAAAAxAEAAAAAAAABAAAAdMMBAAAAAAAAwwEAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUBAAAAAAAAxQEAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "nput.substring(."
					},
					"EAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAADOAQAAAAAAAM8BAAAAAAAAAAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMBAAAAAAAAwwEAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "..line)"
					},
					"BwAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADVAQAAAAAAAAAAAADVAQAAAAAAANYBAAAAAAAAAAAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADYAQAAAAAAAAAAAADYAQAAAAAAANkBAAAAAAAAAAAAANkBAAAAAAAA2gEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMBAAAAAAAA0wEAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "slice"
					},
					"BgAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADJAQAAAAAAAAkAAABzdWJzdHJpbmfJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgBAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC+AQAAAAAAABQAAAB0aGlzLmlucHV0LnNsaWNlKC4uLg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0BAAAAAAAA0QEAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAAMIBAAAAAAAAwgEAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMBAAAAAAAAwwEAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "-1)"
					},
					"AwAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "];"
					},
					"AgAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8AAAAAAAAA7wAAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n\nline.push("
					},
					"DwAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9wAAAAAAAAAAAAAA8gAAAAAAAADyAAAAAAAAAAIAAAAgIPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEAAAAAAAAA8QAAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					2,
					"right_delete",
					null,
					"AgAAAP8AAAAAAAAA/wAAAAAAAAABAAAALP8AAAAAAAAA/wAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8AAAAAAAAA/wAAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "lines"
					},
					"BgAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAeAQAAAAAAAAUAAABpbmRleB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACEBAAAAAAAAAAAAACEBAAAAAAAAIgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0BAAAAAAAAIgEAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"left_delete",
					null,
					"AQAAACEBAAAAAAAAIQEAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIBAAAAAAAAIgEAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACEBAAAAAAAAIwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEBAAAAAAAAIQEAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACIBAAAAAAAAIwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIBAAAAAAAAIgEAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAACUBAAAAAAAAJQEAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAACUBAAAAAAAAJQEAAAAAAAABAAAAXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAACYBAAAAAAAAJgEAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcBAAAAAAAAJwEAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAACkBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"left_delete",
					null,
					"AQAAACkBAAAAAAAAKQEAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoBAAAAAAAAKgEAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "line"
					},
					"BAAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0BAAAAAAAALQEAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " this.input.slice"
					},
					"EQAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADgBAAAAAAAAAAAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA9AQAAAAAAAAAAAAA9AQAAAAAAAD4BAAAAAAAAAAAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEABAAAAAAAAQgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEABAAAAAAAAQAEAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "...line"
					},
					"BwAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAEcBAAAAAAAASAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEBAAAAAAAAQQEAAAAAAAAAAAAAAADwvw"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEkBAAAAAAAASgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkBAAAAAAAASQEAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEoBAAAAAAAASwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoBAAAAAAAASgEAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					2,
					"right_delete",
					null,
					"AgAAABgBAAAAAAAAGAEAAAAAAAAEAAAAdGhpcxgBAAAAAAAAGAEAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgBAAAAAAAAHAEAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"cut",
					null,
					"AQAAAPMAAAAAAAAA8wAAAAAAAAAwAAAAICBsaW5lLnB1c2godGhpcy5pbnB1dC5pbmRleE9mKCdcbicsIGxpbmVbMF0pKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMAAAAAAAAAIwEAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					2,
					"paste",
					null,
					"AgAAAPMAAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAABTAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMAAAAAAAAA8wAAAAAAAAAAAAAAAADwvw"
				],
				[
					228,
					1,
					"cut",
					null,
					"AQAAAPMAAAAAAAAA8wAAAAAAAAAwAAAAICBsaW5lLnB1c2godGhpcy5pbnB1dC5pbmRleE9mKCdcbicsIGxpbmVbMF0pKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMAAAAAAAAAIwEAAAAAAAAAAAAAAADwvw"
				],
				[
					239,
					1,
					"cut",
					null,
					"AQAAAJ0AAAAAAAAAnQAAAAAAAAAqAAAAICBjb25zb2xlLmxvZygnZGVmdW5jdCcsIHsgbG9jLCBzdGF0ZSB9KTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0AAAAAAAAAxwAAAAAAAAAAAAAAAADwvw"
				],
				[
					240,
					2,
					"paste",
					null,
					"AgAAAJ0AAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADxAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0AAAAAAAAAnQAAAAAAAAAAAAAAAADwvw"
				],
				[
					250,
					1,
					"paste",
					null,
					"AgAAANYAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADgAAAAAAAAAAcAAABkZWZ1bmN0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYAAAAAAAAA3QAAAAAAAAAAAAAAAADwvw"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": ".,"
					},
					"AgAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAADwvw"
				],
				[
					252,
					1,
					"left_delete",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIAAAAAAAAA4gAAAAAAAAAAAAAAAADwvw"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "kle"
					},
					"AwAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					254,
					3,
					"left_delete",
					null,
					"AwAAAOMAAAAAAAAA4wAAAAAAAAABAAAAZeIAAAAAAAAA4gAAAAAAAAABAAAAbOEAAAAAAAAA4QAAAAAAAAABAAAAaw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAADwvw"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "length"
					},
					"BgAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					261,
					1,
					"paste",
					null,
					"AgAAAOkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD6AAAAAAAAAA8AAAAgeyBsb2MsIHN0YXRlIH0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkAAAAAAAAA+AAAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"cut",
					null,
					"AQAAAMcAAAAAAAAAxwAAAAAAAAA2AAAAICBjb25zb2xlLmxvZygndGhpcy5pbnB1dC5sZW5ndGgnLHRoaXMuaW5wdXQubGVuZ3RoKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcAAAAAAAAA/QAAAAAAAAAAAAAAAADwvw"
				],
				[
					268,
					2,
					"paste",
					null,
					"AgAAAMcAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAAzAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcAAAAAAAAAxwAAAAAAAAAAAAAAAADwvw"
				],
				[
					272,
					2,
					"left_delete",
					null,
					"AgAAABcBAAAAAAAAFwEAAAAAAAAGAAAAbGVuZ3RoFgEAAAAAAAAWAQAAAAAAAAEAAAAu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcBAAAAAAAAHQEAAAAAAAAAAAAAAADwvw"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "slice"
					},
					"BgAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAkAQAAAAAAAAYAAABsZW5ndGgkAQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMBAAAAAAAAKQEAAAAAAAAAAAAAAADwvw"
				],
				[
					277,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgBAAAAAAAAKgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgBAAAAAAAAKAEAAAAAAAAAAAAAAADwvw"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "0,100"
					},
					"BQAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAuAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAADwvw"
				],
				[
					294,
					1,
					"cut",
					null,
					"AQAAAP0AAAAAAAAA/QAAAAAAAAA1AAAAICBjb25zb2xlLmxvZygndGhpcy5pbnB1dCcsdGhpcy5pbnB1dC5zbGljZSgwLDEwMCkpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0AAAAAAAAAMgEAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					2,
					"paste",
					null,
					"AgAAAP0AAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAABnAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0AAAAAAAAA/QAAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AgAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABHAQAAAAAAAAUAAABpbnB1dA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYBAAAAAAAASwEAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAEYBAAAAAAAARgEAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcBAAAAAAAARwEAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "loc.file"
					},
					"CAAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYBAAAAAAAARgEAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					1,
					"paste",
					null,
					"AgAAAFABAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABdAQAAAAAAABcAAAB0aGlzLmlucHV0LnNsaWNlKDAsMTAwKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFABAAAAAAAAZwEAAAAAAAAAAAAAAADwvw"
				],
				[
					312,
					1,
					"paste",
					null,
					"AQAAAFABAAAAAAAAnAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFABAAAAAAAAUAEAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AwAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABuAQAAAAAAAC8AAAAncXVpY2tqcy9xanMtbW9kdWxlcy9saWIvZXh0ZW5kR2VuZXJhdG9yLmpzJyB9KW4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0BAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB/AQAAAAAAAAAAAAB9AQAAAAAAAH0BAAAAAAAAAgAAACAgfQEAAAAAAACBAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwBAAAAAAAAfAEAAAAAAAAAAAAAAADwvw"
				],
				[
					319,
					3,
					"left_delete",
					null,
					"AwAAAH8BAAAAAAAAfwEAAAAAAAACAAAAICB9AQAAAAAAAH0BAAAAAAAAAgAAACAgfAEAAAAAAAB8AQAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEBAAAAAAAAgQEAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHwBAAAAAAAAfQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwBAAAAAAAAfAEAAAAAAAAAAAAAAADwvw"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAH4BAAAAAAAAfwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4BAAAAAAAAfgEAAAAAAAAAAAAAAADwvw"
				],
				[
					324,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8BAAAAAAAAfwEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "static/debugger.css",
			"settings":
			{
				"buffer_size": 3131,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					25,
					1,
					"paste",
					null,
					"AQAAAOYCAAAAAAAA+QIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYCAAAAAAAA5gIAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"prett",
				"Build With: prettier"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/parse",
		"/home/roman/Projects/plot-cv/lib/preact",
		"/home/roman/Projects/plot-cv/lib/repeater"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/lib/lexer.js",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/static/svg/arrow-right.svg",
		"/home/roman/Projects/plot-cv/lib/dom/css.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/css/button.css",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/lib/hooks/useClick.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/lib/hooks.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js",
		"/home/roman/Projects/plot-cv/test-jslexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useGenerator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterator.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/token.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFetch.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.ejs",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/test-console.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebounce.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDrag.js",
		"/home/roman/Projects/plot-cv/prism-core.js",
		"/home/roman/Projects/plot-cv/prism-clike.js",
		"/home/roman/Projects/plot-cv/prism-javascript.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor/node_modules/prismjs/components/prism-core.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/test-ecmascript.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/printer.js",
		"/home/roman/Projects/plot-cv/test-sockets.js",
		"/home/roman/Projects/plot-cv/lib/websocket-client.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/repeater/react-hooks.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/list-exports.js",
		"/home/roman/Projects/plot-cv/lib/hooks/utils.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useMousePosition.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebouncedCallback.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFocus.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/errval.c",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/lib/events.js",
		"/home/roman/Projects/plot-cv/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/lib/childProcess.js",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/test-childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/defs.cmake",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/waitval.c",
		"/home/roman/Projects/plot-cv/w32val.c",
		"/home/roman/Projects/plot-cv/apival.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/.config/sublime-text/Packages/User/Themes/ES6 Next.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-ffi/lib/socket.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.h",
		"/home/roman/Projects/plot-cv/httpd.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/opt/fontforge/share/mime/packages",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake_install.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/test-mmap.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Projects/plot-cv/lib/net/websocket-async.js",
		"/home/roman/Projects/plot-cv/wscli.js",
		"/home/roman/Projects/plot-cv/lib/grammars/ECMAScript.g4",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/fire.cjs",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/quickjs/cfg.sh",
		"/home/roman/Projects/plot-cv/cfg.sh",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/scripts/iwatch.sh"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"onsole.log('ret=ws.send(msg)', ret, toString(b));",
			"22",
			"main",
			"code.*offset",
			"font-size",
			"TokenizeJS",
			"lineno",
			"Button =",
			"shadow",
			"active",
			"Button =",
			"panel",
			"\\.header",
			"Panel",
			"Panel,",
			"Panel, ",
			"Button",
			"Button, ",
			"Button =",
			"220",
			"utton.*active",
			"active",
			"border",
			"220",
			"getStyleSheet",
			"48px",
			"button",
			"LineTerm",
			"yield ",
			"prev",
			"useGener",
			"react_1\\.",
			"react_1",
			"result",
			"useAsy",
			"react_1\\.",
			"react",
			"useAc",
			"'lineno'",
			"extendArray",
			"misc.js",
			"'match",
			"misc",
			"lexer",
			"Location",
			"196",
			"state =",
			"match",
			"define",
			"stateMask",
			"TemplateEle",
			"matches",
			"this.state",
			"state =",
			"states",
			"scan",
			"currentSource",
			"pattern\\.",
			"global",
			"start",
			"\\.start",
			"lexer.js",
			"CreateSock",
			"cwd",
			"lexer",
			"Lexer",
			"\\['\\.*",
			"currentFile =",
			"currentSource",
			"Pause",
			"^import",
			"'file'",
			"CreateSource",
			"Object.assign\\(globalThis",
			"whitecontainer_editor_line_number",
			"line.num",
			"line",
			"highlight",
			" <[A-Z]",
			"cwd",
			"comp",
			"window",
			"lib/",
			"Dropping",
			"Dropp",
			"PrintAs",
			"puts",
			"console.log",
			"Processing",
			"ShowOutput",
			"'addToken",
			"\\.position",
			"\\.type",
			"addToken",
			"\\.type",
			"eof",
			"types.eof",
			"token\\.type",
			"matchKeywords",
			"parsePrimary",
			"new Token",
			"types",
			"position",
			"value",
			"new Token",
			"Location",
			"this\\.loc",
			" loc\\(",
			"Location",
			"createTextNode",
			"document.body",
			"StringToArrayBuffer",
			"ArrayBufferToString",
			"Socket",
			"asyncRead",
			"waitRead",
			"escape",
			"handleMessage",
			"^\\s*console",
			"'main",
			"onRead",
			"waitRead",
			"Stack Frame",
			"handleMessage",
			"recv",
			"connection",
			"onmessage",
			"ArrayBufferToString"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask",
			"a.push(\\1);",
			"fd",
			"log",
			"cv::KeyPoint",
			"cv::KeyPoints",
			"getMat",
			"Feature2DClass",
			", ",
			"}\\n\\nstatic",
			"s",
			"",
			"\\(",
			" this.send",
			"this.sendMessage",
			"this.sock",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 333,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-client.js",
							"function_name_status_row": 2,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									3216,
									3251
								],
								[
									5183,
									5231
								],
								[
									5847,
									5883
								],
								[
									6929,
									6961
								],
								[
									7071,
									7098
								],
								[
									7967,
									7995
								],
								[
									8076,
									8106
								],
								[
									8176,
									8207
								],
								[
									8417,
									8440
								],
								[
									8503,
									8527
								],
								[
									8591,
									8612
								],
								[
									8673,
									8698
								],
								[
									8738,
									8760
								],
								[
									8822,
									8857
								],
								[
									8913,
									8940
								],
								[
									9239,
									9279
								],
								[
									11118,
									11155
								]
							],
							"symlist":
							[
								"LoadSource(filename)",
								"Start(args, address = '127.0.0.1:9901')",
								"  function*TokenizeJS(data, filename)",
								"CreateSocket(url)",
								"ReadSocket()",
								"  .sendMessage = function(msg)",
								"GetVariables(ref = 0)",
								"UpdatePosition()",
								"StepIn()",
								"StepOut()",
								"Next()",
								"Continue()",
								"Pause()",
								"Evaluate(expression)",
								"StackTrace()",
								"SendRequest(command, args = {})",
								"ShowSource(sourceFile)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633735088.77,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 163.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-client.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12101,
						"regions":
						{
						},
						"selection":
						[
							[
								10955,
								10955
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 321,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633756350.47,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4815.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-minnet.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2374,
						"regions":
						{
						},
						"selection":
						[
							[
								1286,
								1286
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 49,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633755960.98,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 95215,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										86975,
										86984
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										86879,
										86879
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										44808,
										44812
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										44791,
										44791
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21041,
										21048
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										20991,
										20991
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										23125,
										23134
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										23112,
										23112
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										23189,
										23193
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										23143,
										23143
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										44950,
										44970
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										44851,
										44851
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22600,
										22604
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										22526,
										22526
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11158,
										11162
									],
									[
										22199,
										22204
									],
									[
										22733,
										22737
									],
									[
										22904,
										22908
									],
									[
										24138,
										24142
									],
									[
										24708,
										24712
									],
									[
										28341,
										28346
									],
									[
										28417,
										28422
									],
									[
										44508,
										44512
									],
									[
										77448,
										77460
									],
									[
										84487,
										84491
									],
									[
										86412,
										86416
									],
									[
										86541,
										86545
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										11079,
										11079
									],
									[
										22184,
										22184
									],
									[
										22718,
										22718
									],
									[
										22891,
										22891
									],
									[
										24123,
										24123
									],
									[
										24693,
										24693
									],
									[
										28286,
										28286
									],
									[
										28366,
										28366
									],
									[
										44437,
										44437
									],
									[
										77405,
										77405
									],
									[
										84427,
										84427
									],
									[
										86359,
										86359
									],
									[
										86456,
										86456
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21278,
										21285
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										21227,
										21227
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21082,
										21089
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										21063,
										21063
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21289,
										21296
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										21227,
										21227
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21030,
										21037
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										20991,
										20991
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21104,
										21111
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										21063,
										21063
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21093,
										21100
									]
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
									[
										21063,
										21063
									]
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										79002,
										79019
									]
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
									[
										78981,
										78981
									]
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
									[
										11375,
										11396
									]
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
									[
										11328,
										11328
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										67330,
										67334
									],
									[
										69709,
										69713
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										67274,
										67274
									],
									[
										69641,
										69641
									]
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21052,
										21059
									]
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
									[
										20991,
										20991
									]
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21126,
										21133
									]
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
									[
										21063,
										21063
									]
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21267,
										21274
									]
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
									[
										21227,
										21227
									]
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21245,
										21252
									]
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
									[
										21227,
										21227
									]
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21256,
										21263
									]
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
									[
										21227,
										21227
									]
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21115,
										21122
									]
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
									[
										21063,
										21063
									]
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21008,
										21015
									]
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
									[
										20991,
										20991
									]
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21019,
										21026
									]
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
									[
										20991,
										20991
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										7061,
										7064
									],
									[
										19236,
										19240
									],
									[
										28509,
										28512
									],
									[
										44612,
										44616
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										7050,
										7050
									],
									[
										19223,
										19223
									],
									[
										28445,
										28445
									],
									[
										44541,
										44541
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45248,
										45252
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										45227,
										45227
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										78961,
										78978
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
										78939,
										78939
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										85141,
										85148
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										85124,
										85124
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										22711,
										22715
									],
									[
										86752,
										86756
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										22698,
										22698
									],
									[
										86729,
										86729
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										24158,
										24162
									],
									[
										63684,
										63689
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										24145,
										24145
									],
									[
										63666,
										63666
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								59281,
								59281
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1803,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633756346.97,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 26812.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs/qjs-net/wscli.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6113,
						"regions":
						{
						},
						"selection":
						[
							[
								4310,
								4310
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 148,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633753811.83,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2340.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8125,
						"regions":
						{
						},
						"selection":
						[
							[
								166,
								201
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633746142.24,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-net.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2878,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633739031.35,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/qjs-modules/lib/extendArray.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2689,
						"regions":
						{
						},
						"selection":
						[
							[
								535,
								537
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 23,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633748139.44,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/hooks/useFetch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 503,
						"regions":
						{
						},
						"selection":
						[
							[
								233,
								235
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633738622.15,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/lexer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9207,
						"regions":
						{
						},
						"selection":
						[
							[
								876,
								876
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633753740.14,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "static/debugger.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3131,
						"regions":
						{
						},
						"selection":
						[
							[
								761,
								761
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 52,
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1633738503.86,
							"tabs_extra_last_activated_sheet_index": 2,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 601.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.801223223095,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"debugger-c",
				"debugger-client.js"
			],
			[
				"test-jsl",
				"test-jslexer.js"
			],
			[
				"hooks",
				"lib/hooks.js"
			],
			[
				"test-jsle",
				"test-jslexer.js"
			],
			[
				"misc.j",
				"lib/misc.js"
			],
			[
				"token",
				"lib/ecmascript/token.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"jslexer",
				"lib/jslexer.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"",
				"debugger-server.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"react-sim",
				"react-simple-code-editor.js"
			],
			[
				"prism-co",
				"prism-core.js"
			],
			[
				"prism-core",
				"prism-core.js"
			],
			[
				"debugger",
				"debugger-server.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"hooks.j",
				"lib/hooks.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"hook",
				"lib/hooks.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"parser.",
				"lib/ecmascript/parser.js"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"arser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"test-lexer",
				"test-lexer.js"
			],
			[
				"elemen",
				"lib/dom/element.js"
			],
			[
				"element",
				"lib/dom/element.js"
			],
			[
				"debugger.html",
				"debugger.html"
			],
			[
				"process.js",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debu",
				"debugger-server.js"
			],
			[
				"errval",
				"errval.c"
			],
			[
				"events",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"events.",
				"lib/events.js"
			],
			[
				"path.c",
				"quickjs/qjs-modules/path.c"
			],
			[
				"syscall",
				"quickjs/qjs-modules/quickjs-syscallerror.c"
			],
			[
				"path.js",
				"lib/path.js"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"childProcess.js",
				"lib/childProcess.js"
			],
			[
				"socket.js",
				"quickjs/qjs-ffi/lib/socket.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"parser2",
				"lib/ecmascript/parser2.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/rpc.js"
			],
			[
				"httpd.",
				"httpd.js"
			],
			[
				"httpd.js",
				"httpd.js"
			],
			[
				"ws-worker",
				"ws-worker.js"
			],
			[
				"test-rpc.js",
				"test-rpc.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"quickjs-inspe",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/utils.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-inter",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"quickjs-internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/vector.h"
			],
			[
				"quickjs-mis",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"test-debug",
				"test-debuggerprotocol.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"console.",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"debuggerpro",
				"debuggerprotocol.js"
			],
			[
				"packages",
				"opt/fontforge/share/mime/packages"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"test-mm",
				"test-mmap.js"
			],
			[
				"websocket-asy",
				"lib/net/websocket-async.js"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"estree",
				"lib/ecmascript/estree.js"
			],
			[
				"ECMAScr",
				"lib/grammars/ECMAScript.g4"
			],
			[
				"resolve-im",
				"plot-cv/resolve-imports.js"
			],
			[
				"fire.cjs",
				"plot-cv/fire.cjs"
			],
			[
				"fire.js",
				"plot-cv/fire.js"
			],
			[
				"fire.html",
				"plot-cv/fire.html"
			],
			[
				"cfg.s",
				"plot-cv/cfg.sh"
			],
			[
				"ast-shell",
				"plot-cv/ast-shell.js"
			],
			[
				"uickjs-lib",
				"plot-cv/quickjs/quickjs-libc.c"
			],
			[
				"package.",
				"plot-cv/package.json"
			],
			[
				"clang-as",
				"plot-cv/clang-ast.js"
			],
			[
				"quickjs-ins",
				"plot-cv/quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"fs",
				"plot-cv/quickjs/qjs-modules/lib/fs.js"
			],
			[
				"test-mma",
				"plot-cv/test-mmap.js"
			],
			[
				"test-util",
				"plot-cv/test-util.js"
			],
			[
				"mmap",
				"plot-cv/test-mmap.js"
			],
			[
				"termina",
				"plot-cv/terminal.js"
			],
			[
				"iwatch",
				"plot-cv/scripts/iwatch.sh"
			],
			[
				"js_rec",
				"plot-cv/qjs-opencv/js_rect.cpp"
			],
			[
				"test-minn",
				"plot-cv/test-minnet.js"
			],
			[
				"sockets.c",
				"plot-cv/quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"quickjs-find",
				"plot-cv/quickjs/quickjs-find-module.c"
			],
			[
				"repl",
				"plot-cv/quickjs/qjs-modules/lib/repl.js"
			],
			[
				"clang-list",
				"plot-cv/clang-list.js"
			],
			[
				"quickjs-in",
				"plot-cv/quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"esparse",
				"plot-cv/esparse.js"
			],
			[
				"clang-ast",
				"plot-cv/clang-ast.js"
			],
			[
				"io-helper",
				"plot-cv/io-helpers.js"
			],
			[
				"test_lexer",
				"plot-cv/quickjs/qjs-modules/tests/test_lexer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
