{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"makeEa",
				"makeEagleElement"
			],
			[
				"Ali",
				"AlignmentAttrs"
			],
			[
				"HOR",
				"HORIZONTAL_VERTICAL"
			],
			[
				"exte",
				"extendArray"
			],
			[
				"Trans",
				"TransformationList"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors"
			],
			[
				"BoardRe",
				"BoardRenderer.renderCollection"
			],
			[
				"lazy",
				"lazyProperties"
			],
			[
				"getM",
				"getMeasures"
			],
			[
				"eventP",
				"eventProxyCapture"
			],
			[
				"strok",
				"strokeParams"
			],
			[
				"skel",
				"skeletonization"
			],
			[
				"Debugger",
				"DebuggerDispatcher"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"B",
				"BOOL"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"Asyn",
				"AsyncIterator"
			],
			[
				"ret",
				"return_flag"
			],
			[
				"ImportID",
				"ImportIdMap"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"dbuf_",
				"dbuf_init2"
			],
			[
				"has_",
				"has_dot_or_slash"
			],
			[
				"My",
				"MySQLResult"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"CF",
				"CFunctionClosureRecord"
			],
			[
				"js_",
				"js_mysqlresult_class_id"
			],
			[
				"extendA",
				"extendAsyncGenerator"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"MYSQL_TYPE_NEW",
				"MYSQL_TYPE_NEWDECIMAL"
			],
			[
				"JS_CF",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"js_mysqlresult_fun",
				"js_mysqlresult_functions"
			],
			[
				"JS_ToCSt",
				"JS_ToCStringLen"
			],
			[
				"js_mysql_f",
				"js_mysql_functions"
			],
			[
				"MARIA",
				"MARIADBCLIENT_LIBRARY"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"depden",
				"dependencyTree"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					238,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					239,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5137,
								5141
							],
							[
								5545,
								5559
							],
							[
								5639,
								5654
							],
							[
								5735,
								5747
							],
							[
								5825,
								5841
							],
							[
								5924,
								5939
							],
							[
								6260,
								6267
							],
							[
								6315,
								6354
							],
							[
								6439,
								6469
							],
							[
								6583,
								6587
							],
							[
								6783,
								6818
							],
							[
								6907,
								6956
							],
							[
								7202,
								7223
							],
							[
								7298,
								7316
							],
							[
								7401,
								7416
							],
							[
								7487,
								7497
							],
							[
								7518,
								7525
							],
							[
								7564,
								7601
							],
							[
								7757,
								7783
							],
							[
								7823,
								7835
							],
							[
								7953,
								7971
							],
							[
								8054,
								8072
							],
							[
								9603,
								9632
							],
							[
								9971,
								10004
							],
							[
								10075,
								10079
							],
							[
								10081,
								10085
							],
							[
								10208,
								10214
							],
							[
								10216,
								10220
							],
							[
								10320,
								10324
							],
							[
								10326,
								10330
							],
							[
								10381,
								10385
							],
							[
								10420,
								10424
							],
							[
								10815,
								10844
							],
							[
								10926,
								10931
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AQAAAAAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					240,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5168,
								5172
							],
							[
								5576,
								5590
							],
							[
								5670,
								5685
							],
							[
								5766,
								5778
							],
							[
								5856,
								5872
							],
							[
								5955,
								5970
							],
							[
								6291,
								6298
							],
							[
								6346,
								6385
							],
							[
								6470,
								6500
							],
							[
								6614,
								6618
							],
							[
								6814,
								6849
							],
							[
								6938,
								6987
							],
							[
								7233,
								7254
							],
							[
								7329,
								7347
							],
							[
								7432,
								7447
							],
							[
								7518,
								7528
							],
							[
								7549,
								7556
							],
							[
								7595,
								7632
							],
							[
								7788,
								7814
							],
							[
								7854,
								7866
							],
							[
								7984,
								8002
							],
							[
								8085,
								8103
							],
							[
								9634,
								9663
							],
							[
								10002,
								10035
							],
							[
								10106,
								10110
							],
							[
								10112,
								10116
							],
							[
								10239,
								10245
							],
							[
								10247,
								10251
							],
							[
								10351,
								10355
							],
							[
								10357,
								10361
							],
							[
								10412,
								10416
							],
							[
								10451,
								10455
							],
							[
								10846,
								10875
							],
							[
								10957,
								10962
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					241,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					242,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5168,
								5172
							],
							[
								5576,
								5590
							],
							[
								5670,
								5685
							],
							[
								5766,
								5778
							],
							[
								5856,
								5872
							],
							[
								5955,
								5970
							],
							[
								6291,
								6298
							],
							[
								6346,
								6385
							],
							[
								6470,
								6500
							],
							[
								6614,
								6618
							],
							[
								6814,
								6849
							],
							[
								6938,
								6987
							],
							[
								7233,
								7254
							],
							[
								7329,
								7347
							],
							[
								7432,
								7447
							],
							[
								7518,
								7528
							],
							[
								7549,
								7556
							],
							[
								7595,
								7632
							],
							[
								7788,
								7814
							],
							[
								7854,
								7866
							],
							[
								7984,
								8002
							],
							[
								8085,
								8103
							],
							[
								9634,
								9663
							],
							[
								10002,
								10035
							],
							[
								10106,
								10110
							],
							[
								10112,
								10116
							],
							[
								10239,
								10245
							],
							[
								10247,
								10251
							],
							[
								10351,
								10355
							],
							[
								10357,
								10361
							],
							[
								10412,
								10416
							],
							[
								10451,
								10455
							],
							[
								10846,
								10875
							],
							[
								10957,
								10962
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AQAAAAAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					243,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5153,
								5157
							],
							[
								5561,
								5575
							],
							[
								5655,
								5670
							],
							[
								5751,
								5763
							],
							[
								5841,
								5857
							],
							[
								5940,
								5955
							],
							[
								6276,
								6283
							],
							[
								6331,
								6370
							],
							[
								6455,
								6485
							],
							[
								6599,
								6603
							],
							[
								6799,
								6834
							],
							[
								6923,
								6972
							],
							[
								7218,
								7239
							],
							[
								7314,
								7332
							],
							[
								7417,
								7432
							],
							[
								7503,
								7513
							],
							[
								7534,
								7541
							],
							[
								7580,
								7617
							],
							[
								7773,
								7799
							],
							[
								7839,
								7851
							],
							[
								7969,
								7987
							],
							[
								8070,
								8088
							],
							[
								9619,
								9648
							],
							[
								9987,
								10020
							],
							[
								10091,
								10095
							],
							[
								10097,
								10101
							],
							[
								10224,
								10230
							],
							[
								10232,
								10236
							],
							[
								10336,
								10340
							],
							[
								10342,
								10346
							],
							[
								10397,
								10401
							],
							[
								10436,
								10440
							],
							[
								10831,
								10860
							],
							[
								10942,
								10947
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					244,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8514,
								8532
							],
							[
								9054,
								9065
							],
							[
								9343,
								9361
							],
							[
								9462,
								9479
							],
							[
								9653,
								9657
							],
							[
								9732,
								9769
							],
							[
								9928,
								9932
							],
							[
								10276,
								10308
							],
							[
								10477,
								10501
							],
							[
								10515,
								10541
							],
							[
								10848,
								10852
							],
							[
								10982,
								11005
							],
							[
								11060,
								11068
							],
							[
								11186,
								11201
							],
							[
								11644,
								11659
							],
							[
								12043,
								12072
							],
							[
								12162,
								12175
							],
							[
								12874,
								12884
							],
							[
								13027,
								13045
							],
							[
								13526,
								13544
							],
							[
								13545,
								13552
							],
							[
								13585,
								13640
							],
							[
								13901,
								13912
							],
							[
								14090,
								14119
							],
							[
								14337,
								14363
							],
							[
								14374,
								14388
							],
							[
								14605,
								14620
							],
							[
								14650,
								14669
							],
							[
								14698,
								14720
							],
							[
								15033,
								15043
							],
							[
								15251,
								15265
							],
							[
								15319,
								15333
							],
							[
								16351,
								16394
							],
							[
								16588,
								16594
							],
							[
								16607,
								16623
							],
							[
								18197,
								18233
							],
							[
								18421,
								18456
							],
							[
								18596,
								18600
							],
							[
								18727,
								18745
							],
							[
								18899,
								18931
							],
							[
								19312,
								19323
							],
							[
								19478,
								19489
							],
							[
								19549,
								19569
							],
							[
								20158,
								20193
							],
							[
								20596,
								20615
							],
							[
								20716,
								20758
							],
							[
								21534,
								21557
							],
							[
								21595,
								21602
							],
							[
								22182,
								22187
							],
							[
								23360,
								23375
							],
							[
								23715,
								23721
							],
							[
								26976,
								26982
							],
							[
								27387,
								27412
							],
							[
								27735,
								27752
							],
							[
								27804,
								27818
							],
							[
								28164,
								28174
							],
							[
								28298,
								28315
							],
							[
								28347,
								28362
							],
							[
								28405,
								28419
							],
							[
								28423,
								28438
							],
							[
								28581,
								28585
							],
							[
								28662,
								28672
							],
							[
								29160,
								29169
							],
							[
								29285,
								29291
							],
							[
								29349,
								29362
							],
							[
								29577,
								29594
							],
							[
								29711,
								29753
							],
							[
								30118,
								30149
							],
							[
								30231,
								30247
							],
							[
								30430,
								30450
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAACEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					245,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					246,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8514,
								8532
							],
							[
								9054,
								9065
							],
							[
								9343,
								9361
							],
							[
								9462,
								9479
							],
							[
								9653,
								9657
							],
							[
								9732,
								9769
							],
							[
								9928,
								9932
							],
							[
								10276,
								10308
							],
							[
								10477,
								10501
							],
							[
								10515,
								10541
							],
							[
								10848,
								10852
							],
							[
								10982,
								11005
							],
							[
								11060,
								11068
							],
							[
								11186,
								11201
							],
							[
								11644,
								11659
							],
							[
								12043,
								12072
							],
							[
								12162,
								12175
							],
							[
								12874,
								12884
							],
							[
								13027,
								13045
							],
							[
								13526,
								13544
							],
							[
								13545,
								13552
							],
							[
								13585,
								13640
							],
							[
								13901,
								13912
							],
							[
								14090,
								14119
							],
							[
								14337,
								14363
							],
							[
								14374,
								14388
							],
							[
								14605,
								14620
							],
							[
								14650,
								14669
							],
							[
								14698,
								14720
							],
							[
								15033,
								15043
							],
							[
								15251,
								15265
							],
							[
								15319,
								15333
							],
							[
								16351,
								16394
							],
							[
								16588,
								16594
							],
							[
								16607,
								16623
							],
							[
								18197,
								18233
							],
							[
								18421,
								18456
							],
							[
								18596,
								18600
							],
							[
								18727,
								18745
							],
							[
								18899,
								18931
							],
							[
								19312,
								19323
							],
							[
								19478,
								19489
							],
							[
								19549,
								19569
							],
							[
								20158,
								20193
							],
							[
								20596,
								20615
							],
							[
								20716,
								20758
							],
							[
								21534,
								21557
							],
							[
								21595,
								21602
							],
							[
								22182,
								22187
							],
							[
								23360,
								23375
							],
							[
								23715,
								23721
							],
							[
								26976,
								26982
							],
							[
								27387,
								27412
							],
							[
								27735,
								27752
							],
							[
								27804,
								27818
							],
							[
								28164,
								28174
							],
							[
								28298,
								28315
							],
							[
								28347,
								28362
							],
							[
								28405,
								28419
							],
							[
								28423,
								28438
							],
							[
								28581,
								28585
							],
							[
								28662,
								28672
							],
							[
								29160,
								29169
							],
							[
								29285,
								29291
							],
							[
								29349,
								29362
							],
							[
								29577,
								29594
							],
							[
								29711,
								29753
							],
							[
								30118,
								30149
							],
							[
								30231,
								30247
							],
							[
								30430,
								30450
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					247,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8514,
								8532
							],
							[
								8958,
								8969
							],
							[
								9247,
								9265
							],
							[
								9366,
								9383
							],
							[
								9557,
								9561
							],
							[
								9636,
								9673
							],
							[
								9832,
								9836
							],
							[
								10180,
								10212
							],
							[
								10381,
								10405
							],
							[
								10419,
								10445
							],
							[
								10752,
								10756
							],
							[
								10886,
								10909
							],
							[
								10964,
								10972
							],
							[
								11090,
								11105
							],
							[
								11548,
								11563
							],
							[
								11947,
								11976
							],
							[
								12066,
								12079
							],
							[
								12778,
								12788
							],
							[
								12931,
								12949
							],
							[
								13430,
								13448
							],
							[
								13449,
								13456
							],
							[
								13489,
								13544
							],
							[
								13805,
								13816
							],
							[
								13994,
								14023
							],
							[
								14241,
								14267
							],
							[
								14278,
								14292
							],
							[
								14509,
								14524
							],
							[
								14554,
								14573
							],
							[
								14602,
								14624
							],
							[
								14937,
								14947
							],
							[
								15155,
								15169
							],
							[
								15223,
								15237
							],
							[
								16255,
								16298
							],
							[
								16492,
								16498
							],
							[
								16511,
								16527
							],
							[
								18101,
								18137
							],
							[
								18325,
								18360
							],
							[
								18500,
								18504
							],
							[
								18631,
								18649
							],
							[
								18803,
								18835
							],
							[
								19216,
								19227
							],
							[
								19382,
								19393
							],
							[
								19453,
								19473
							],
							[
								20062,
								20097
							],
							[
								20500,
								20519
							],
							[
								20620,
								20662
							],
							[
								21438,
								21461
							],
							[
								21499,
								21506
							],
							[
								22086,
								22091
							],
							[
								23264,
								23279
							],
							[
								23619,
								23625
							],
							[
								26880,
								26886
							],
							[
								27291,
								27316
							],
							[
								27639,
								27656
							],
							[
								27708,
								27722
							],
							[
								28068,
								28078
							],
							[
								28202,
								28219
							],
							[
								28251,
								28266
							],
							[
								28309,
								28323
							],
							[
								28327,
								28342
							],
							[
								28485,
								28489
							],
							[
								28566,
								28576
							],
							[
								29064,
								29073
							],
							[
								29189,
								29195
							],
							[
								29253,
								29266
							],
							[
								29481,
								29498
							],
							[
								29615,
								29657
							],
							[
								30022,
								30053
							],
							[
								30135,
								30151
							],
							[
								30334,
								30354
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					248,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8514,
								8532
							],
							[
								9015,
								9026
							],
							[
								9333,
								9351
							],
							[
								9452,
								9469
							],
							[
								9643,
								9647
							],
							[
								9722,
								9759
							],
							[
								9918,
								9922
							],
							[
								10266,
								10298
							],
							[
								10467,
								10491
							],
							[
								10505,
								10531
							],
							[
								10838,
								10842
							],
							[
								10972,
								10995
							],
							[
								11050,
								11058
							],
							[
								11176,
								11191
							],
							[
								11634,
								11649
							],
							[
								12033,
								12062
							],
							[
								12152,
								12165
							],
							[
								12864,
								12874
							],
							[
								13017,
								13035
							],
							[
								13516,
								13534
							],
							[
								13535,
								13542
							],
							[
								13575,
								13630
							],
							[
								13891,
								13902
							],
							[
								14080,
								14109
							],
							[
								14327,
								14353
							],
							[
								14364,
								14378
							],
							[
								14595,
								14610
							],
							[
								14640,
								14659
							],
							[
								14688,
								14710
							],
							[
								15023,
								15033
							],
							[
								15241,
								15255
							],
							[
								15309,
								15323
							],
							[
								16341,
								16384
							],
							[
								16578,
								16584
							],
							[
								16597,
								16613
							],
							[
								18187,
								18223
							],
							[
								18411,
								18446
							],
							[
								18586,
								18590
							],
							[
								18717,
								18735
							],
							[
								18889,
								18921
							],
							[
								19302,
								19313
							],
							[
								19468,
								19479
							],
							[
								19539,
								19559
							],
							[
								20148,
								20183
							],
							[
								20586,
								20605
							],
							[
								20706,
								20748
							],
							[
								21524,
								21547
							],
							[
								21585,
								21592
							],
							[
								22172,
								22177
							],
							[
								23350,
								23365
							],
							[
								23705,
								23711
							],
							[
								26966,
								26972
							],
							[
								27377,
								27402
							],
							[
								27725,
								27742
							],
							[
								27794,
								27808
							],
							[
								28154,
								28164
							],
							[
								28288,
								28305
							],
							[
								28337,
								28352
							],
							[
								28395,
								28409
							],
							[
								28413,
								28428
							],
							[
								28571,
								28575
							],
							[
								28652,
								28662
							],
							[
								29150,
								29159
							],
							[
								29275,
								29281
							],
							[
								29339,
								29352
							],
							[
								29567,
								29584
							],
							[
								29701,
								29743
							],
							[
								30108,
								30139
							],
							[
								30221,
								30237
							],
							[
								30420,
								30440
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					249,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8514,
								8532
							],
							[
								9019,
								9030
							],
							[
								9339,
								9357
							],
							[
								9458,
								9475
							],
							[
								9649,
								9653
							],
							[
								9728,
								9765
							],
							[
								9924,
								9928
							],
							[
								10272,
								10304
							],
							[
								10473,
								10497
							],
							[
								10511,
								10537
							],
							[
								10844,
								10848
							],
							[
								10978,
								11001
							],
							[
								11056,
								11064
							],
							[
								11182,
								11197
							],
							[
								11640,
								11655
							],
							[
								12039,
								12068
							],
							[
								12158,
								12171
							],
							[
								12870,
								12880
							],
							[
								13023,
								13041
							],
							[
								13522,
								13540
							],
							[
								13541,
								13548
							],
							[
								13581,
								13636
							],
							[
								13897,
								13908
							],
							[
								14086,
								14115
							],
							[
								14333,
								14359
							],
							[
								14370,
								14384
							],
							[
								14601,
								14616
							],
							[
								14646,
								14665
							],
							[
								14694,
								14716
							],
							[
								15029,
								15039
							],
							[
								15247,
								15261
							],
							[
								15315,
								15329
							],
							[
								16347,
								16390
							],
							[
								16584,
								16590
							],
							[
								16603,
								16619
							],
							[
								18193,
								18229
							],
							[
								18417,
								18452
							],
							[
								18592,
								18596
							],
							[
								18723,
								18741
							],
							[
								18895,
								18927
							],
							[
								19308,
								19319
							],
							[
								19474,
								19485
							],
							[
								19545,
								19565
							],
							[
								20154,
								20189
							],
							[
								20592,
								20611
							],
							[
								20712,
								20754
							],
							[
								21530,
								21553
							],
							[
								21591,
								21598
							],
							[
								22178,
								22183
							],
							[
								23356,
								23371
							],
							[
								23711,
								23717
							],
							[
								26972,
								26978
							],
							[
								27383,
								27408
							],
							[
								27731,
								27748
							],
							[
								27800,
								27814
							],
							[
								28160,
								28170
							],
							[
								28294,
								28311
							],
							[
								28343,
								28358
							],
							[
								28401,
								28415
							],
							[
								28419,
								28434
							],
							[
								28577,
								28581
							],
							[
								28658,
								28668
							],
							[
								29156,
								29165
							],
							[
								29281,
								29287
							],
							[
								29345,
								29358
							],
							[
								29573,
								29590
							],
							[
								29707,
								29749
							],
							[
								30114,
								30145
							],
							[
								30227,
								30243
							],
							[
								30426,
								30446
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					252,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8542,
								8560
							],
							[
								9047,
								9058
							],
							[
								9367,
								9385
							],
							[
								9486,
								9503
							],
							[
								9677,
								9681
							],
							[
								9756,
								9793
							],
							[
								9952,
								9956
							],
							[
								10300,
								10332
							],
							[
								10501,
								10525
							],
							[
								10539,
								10565
							],
							[
								10872,
								10876
							],
							[
								11006,
								11029
							],
							[
								11084,
								11092
							],
							[
								11210,
								11225
							],
							[
								11668,
								11683
							],
							[
								12067,
								12096
							],
							[
								12186,
								12199
							],
							[
								12898,
								12908
							],
							[
								13051,
								13069
							],
							[
								13550,
								13568
							],
							[
								13569,
								13576
							],
							[
								13609,
								13664
							],
							[
								13925,
								13936
							],
							[
								14114,
								14143
							],
							[
								14361,
								14387
							],
							[
								14398,
								14412
							],
							[
								14629,
								14644
							],
							[
								14674,
								14693
							],
							[
								14722,
								14744
							],
							[
								15057,
								15067
							],
							[
								15275,
								15289
							],
							[
								15343,
								15357
							],
							[
								16375,
								16418
							],
							[
								16612,
								16618
							],
							[
								16631,
								16647
							],
							[
								18221,
								18257
							],
							[
								18445,
								18480
							],
							[
								18620,
								18624
							],
							[
								18751,
								18769
							],
							[
								18923,
								18955
							],
							[
								19336,
								19347
							],
							[
								19502,
								19513
							],
							[
								19573,
								19593
							],
							[
								20182,
								20217
							],
							[
								20620,
								20639
							],
							[
								20740,
								20782
							],
							[
								21558,
								21581
							],
							[
								21619,
								21626
							],
							[
								22206,
								22211
							],
							[
								23384,
								23399
							],
							[
								23739,
								23745
							],
							[
								27000,
								27006
							],
							[
								27411,
								27436
							],
							[
								27759,
								27776
							],
							[
								27828,
								27842
							],
							[
								28188,
								28198
							],
							[
								28322,
								28339
							],
							[
								28371,
								28386
							],
							[
								28429,
								28443
							],
							[
								28447,
								28462
							],
							[
								28605,
								28609
							],
							[
								28686,
								28696
							],
							[
								29184,
								29193
							],
							[
								29309,
								29315
							],
							[
								29373,
								29386
							],
							[
								29601,
								29618
							],
							[
								29735,
								29777
							],
							[
								30142,
								30173
							],
							[
								30255,
								30271
							],
							[
								30454,
								30474
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8366,
								8413
							],
							[
								8552,
								8570
							],
							[
								9057,
								9068
							],
							[
								9377,
								9395
							],
							[
								9496,
								9513
							],
							[
								9687,
								9691
							],
							[
								9766,
								9803
							],
							[
								9962,
								9966
							],
							[
								10310,
								10342
							],
							[
								10511,
								10535
							],
							[
								10549,
								10575
							],
							[
								10882,
								10886
							],
							[
								11016,
								11039
							],
							[
								11094,
								11102
							],
							[
								11220,
								11235
							],
							[
								11678,
								11693
							],
							[
								12077,
								12106
							],
							[
								12196,
								12209
							],
							[
								12908,
								12918
							],
							[
								13061,
								13079
							],
							[
								13560,
								13578
							],
							[
								13579,
								13586
							],
							[
								13619,
								13674
							],
							[
								13935,
								13946
							],
							[
								14124,
								14153
							],
							[
								14371,
								14397
							],
							[
								14408,
								14422
							],
							[
								14639,
								14654
							],
							[
								14684,
								14703
							],
							[
								14732,
								14754
							],
							[
								15067,
								15077
							],
							[
								15285,
								15299
							],
							[
								15353,
								15367
							],
							[
								16385,
								16428
							],
							[
								16622,
								16628
							],
							[
								16641,
								16657
							],
							[
								18231,
								18267
							],
							[
								18455,
								18490
							],
							[
								18630,
								18634
							],
							[
								18761,
								18779
							],
							[
								18933,
								18965
							],
							[
								19346,
								19357
							],
							[
								19512,
								19523
							],
							[
								19583,
								19603
							],
							[
								20192,
								20227
							],
							[
								20630,
								20649
							],
							[
								20750,
								20792
							],
							[
								21568,
								21591
							],
							[
								21629,
								21636
							],
							[
								22216,
								22221
							],
							[
								23394,
								23409
							],
							[
								23749,
								23755
							],
							[
								27010,
								27016
							],
							[
								27421,
								27446
							],
							[
								27769,
								27786
							],
							[
								27838,
								27852
							],
							[
								28198,
								28208
							],
							[
								28332,
								28349
							],
							[
								28381,
								28396
							],
							[
								28439,
								28453
							],
							[
								28457,
								28472
							],
							[
								28615,
								28619
							],
							[
								28696,
								28706
							],
							[
								29194,
								29203
							],
							[
								29319,
								29325
							],
							[
								29383,
								29396
							],
							[
								29611,
								29628
							],
							[
								29745,
								29787
							],
							[
								30152,
								30183
							],
							[
								30265,
								30281
							],
							[
								30464,
								30484
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					254,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7977,
								7999
							],
							[
								8403,
								8450
							],
							[
								8589,
								8607
							],
							[
								9094,
								9105
							],
							[
								9414,
								9432
							],
							[
								9533,
								9550
							],
							[
								9724,
								9728
							],
							[
								9803,
								9840
							],
							[
								9999,
								10003
							],
							[
								10347,
								10379
							],
							[
								10548,
								10572
							],
							[
								10586,
								10612
							],
							[
								10919,
								10923
							],
							[
								11053,
								11076
							],
							[
								11131,
								11139
							],
							[
								11257,
								11272
							],
							[
								11715,
								11730
							],
							[
								12114,
								12143
							],
							[
								12233,
								12246
							],
							[
								12945,
								12955
							],
							[
								13098,
								13116
							],
							[
								13597,
								13615
							],
							[
								13616,
								13623
							],
							[
								13656,
								13711
							],
							[
								13972,
								13983
							],
							[
								14161,
								14190
							],
							[
								14408,
								14434
							],
							[
								14445,
								14459
							],
							[
								14676,
								14691
							],
							[
								14721,
								14740
							],
							[
								14769,
								14791
							],
							[
								15104,
								15114
							],
							[
								15322,
								15336
							],
							[
								15390,
								15404
							],
							[
								16422,
								16465
							],
							[
								16659,
								16665
							],
							[
								16678,
								16694
							],
							[
								18268,
								18304
							],
							[
								18492,
								18527
							],
							[
								18667,
								18671
							],
							[
								18798,
								18816
							],
							[
								18970,
								19002
							],
							[
								19383,
								19394
							],
							[
								19549,
								19560
							],
							[
								19620,
								19640
							],
							[
								20229,
								20264
							],
							[
								20667,
								20686
							],
							[
								20787,
								20829
							],
							[
								21605,
								21628
							],
							[
								21666,
								21673
							],
							[
								22253,
								22258
							],
							[
								23431,
								23446
							],
							[
								23786,
								23792
							],
							[
								27047,
								27053
							],
							[
								27458,
								27483
							],
							[
								27806,
								27823
							],
							[
								27875,
								27889
							],
							[
								28235,
								28245
							],
							[
								28369,
								28386
							],
							[
								28418,
								28433
							],
							[
								28476,
								28490
							],
							[
								28494,
								28509
							],
							[
								28652,
								28656
							],
							[
								28733,
								28743
							],
							[
								29231,
								29240
							],
							[
								29356,
								29362
							],
							[
								29420,
								29433
							],
							[
								29648,
								29665
							],
							[
								29782,
								29824
							],
							[
								30189,
								30220
							],
							[
								30302,
								30318
							],
							[
								30501,
								30521
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					255,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5150,
								5154
							],
							[
								5558,
								5572
							],
							[
								5652,
								5667
							],
							[
								5748,
								5760
							],
							[
								5838,
								5854
							],
							[
								5937,
								5952
							],
							[
								6273,
								6280
							],
							[
								6328,
								6367
							],
							[
								6452,
								6482
							],
							[
								6596,
								6600
							],
							[
								6796,
								6831
							],
							[
								6920,
								6969
							],
							[
								7215,
								7236
							],
							[
								7311,
								7329
							],
							[
								7414,
								7429
							],
							[
								7500,
								7510
							],
							[
								7531,
								7538
							],
							[
								7577,
								7614
							],
							[
								7770,
								7796
							],
							[
								7836,
								7848
							],
							[
								7966,
								7984
							],
							[
								8067,
								8085
							],
							[
								9616,
								9645
							],
							[
								9984,
								10017
							],
							[
								10088,
								10092
							],
							[
								10094,
								10098
							],
							[
								10221,
								10227
							],
							[
								10229,
								10233
							],
							[
								10333,
								10337
							],
							[
								10339,
								10343
							],
							[
								10394,
								10398
							],
							[
								10433,
								10437
							],
							[
								10828,
								10857
							],
							[
								10939,
								10944
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAC3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					256,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					257,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					258,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7961,
								7983
							],
							[
								8392,
								8439
							],
							[
								8582,
								8600
							],
							[
								9096,
								9107
							],
							[
								9417,
								9435
							],
							[
								9536,
								9553
							],
							[
								9727,
								9731
							],
							[
								9806,
								9843
							],
							[
								10002,
								10006
							],
							[
								10350,
								10382
							],
							[
								10551,
								10575
							],
							[
								10589,
								10615
							],
							[
								10922,
								10926
							],
							[
								11056,
								11079
							],
							[
								11134,
								11142
							],
							[
								11260,
								11275
							],
							[
								11718,
								11733
							],
							[
								12117,
								12146
							],
							[
								12236,
								12249
							],
							[
								12948,
								12958
							],
							[
								13101,
								13119
							],
							[
								13600,
								13618
							],
							[
								13619,
								13626
							],
							[
								13659,
								13714
							],
							[
								13981,
								13992
							],
							[
								14170,
								14199
							],
							[
								14417,
								14443
							],
							[
								14454,
								14468
							],
							[
								14685,
								14700
							],
							[
								14730,
								14749
							],
							[
								14778,
								14800
							],
							[
								15113,
								15123
							],
							[
								15331,
								15345
							],
							[
								15399,
								15413
							],
							[
								16431,
								16474
							],
							[
								16668,
								16674
							],
							[
								16687,
								16703
							],
							[
								18277,
								18313
							],
							[
								18501,
								18536
							],
							[
								18676,
								18680
							],
							[
								18807,
								18825
							],
							[
								18979,
								19011
							],
							[
								19392,
								19403
							],
							[
								19558,
								19569
							],
							[
								19629,
								19649
							],
							[
								20238,
								20273
							],
							[
								20676,
								20695
							],
							[
								20796,
								20838
							],
							[
								21614,
								21637
							],
							[
								21675,
								21682
							],
							[
								22262,
								22267
							],
							[
								23440,
								23455
							],
							[
								23795,
								23801
							],
							[
								27056,
								27062
							],
							[
								27467,
								27492
							],
							[
								27815,
								27832
							],
							[
								27884,
								27898
							],
							[
								28244,
								28254
							],
							[
								28378,
								28395
							],
							[
								28427,
								28442
							],
							[
								28485,
								28499
							],
							[
								28503,
								28518
							],
							[
								28661,
								28665
							],
							[
								28742,
								28752
							],
							[
								29240,
								29249
							],
							[
								29365,
								29371
							],
							[
								29429,
								29442
							],
							[
								29657,
								29674
							],
							[
								29791,
								29833
							],
							[
								30198,
								30229
							],
							[
								30311,
								30327
							],
							[
								30510,
								30530
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					259,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					260,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					261,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7961,
								7983
							],
							[
								8392,
								8439
							],
							[
								8582,
								8600
							],
							[
								9096,
								9107
							],
							[
								9417,
								9435
							],
							[
								9536,
								9553
							],
							[
								9727,
								9731
							],
							[
								9806,
								9843
							],
							[
								10002,
								10006
							],
							[
								10350,
								10382
							],
							[
								10551,
								10575
							],
							[
								10589,
								10615
							],
							[
								10922,
								10926
							],
							[
								11056,
								11079
							],
							[
								11134,
								11142
							],
							[
								11260,
								11275
							],
							[
								11718,
								11733
							],
							[
								12117,
								12146
							],
							[
								12236,
								12249
							],
							[
								12948,
								12958
							],
							[
								13101,
								13119
							],
							[
								13600,
								13618
							],
							[
								13619,
								13626
							],
							[
								13659,
								13714
							],
							[
								13981,
								13992
							],
							[
								14170,
								14199
							],
							[
								14417,
								14443
							],
							[
								14454,
								14468
							],
							[
								14685,
								14700
							],
							[
								14730,
								14749
							],
							[
								14778,
								14800
							],
							[
								15113,
								15123
							],
							[
								15331,
								15345
							],
							[
								15399,
								15413
							],
							[
								16431,
								16474
							],
							[
								16668,
								16674
							],
							[
								16687,
								16703
							],
							[
								18277,
								18313
							],
							[
								18501,
								18536
							],
							[
								18676,
								18680
							],
							[
								18807,
								18825
							],
							[
								18979,
								19011
							],
							[
								19392,
								19403
							],
							[
								19558,
								19569
							],
							[
								19629,
								19649
							],
							[
								20238,
								20273
							],
							[
								20676,
								20695
							],
							[
								20796,
								20838
							],
							[
								21614,
								21637
							],
							[
								21675,
								21682
							],
							[
								22262,
								22267
							],
							[
								23440,
								23455
							],
							[
								23795,
								23801
							],
							[
								27056,
								27062
							],
							[
								27467,
								27492
							],
							[
								27815,
								27832
							],
							[
								27884,
								27898
							],
							[
								28244,
								28254
							],
							[
								28378,
								28395
							],
							[
								28427,
								28442
							],
							[
								28485,
								28499
							],
							[
								28503,
								28518
							],
							[
								28661,
								28665
							],
							[
								28742,
								28752
							],
							[
								29240,
								29249
							],
							[
								29365,
								29371
							],
							[
								29429,
								29442
							],
							[
								29657,
								29674
							],
							[
								29791,
								29833
							],
							[
								30198,
								30229
							],
							[
								30311,
								30327
							],
							[
								30510,
								30530
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					262,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7956,
								7978
							],
							[
								8387,
								8434
							],
							[
								8577,
								8595
							],
							[
								9091,
								9102
							],
							[
								9412,
								9430
							],
							[
								9531,
								9548
							],
							[
								9722,
								9726
							],
							[
								9801,
								9838
							],
							[
								9997,
								10001
							],
							[
								10345,
								10377
							],
							[
								10546,
								10570
							],
							[
								10584,
								10610
							],
							[
								10917,
								10921
							],
							[
								11051,
								11074
							],
							[
								11129,
								11137
							],
							[
								11255,
								11270
							],
							[
								11713,
								11728
							],
							[
								12112,
								12141
							],
							[
								12231,
								12244
							],
							[
								12943,
								12953
							],
							[
								13096,
								13114
							],
							[
								13595,
								13613
							],
							[
								13614,
								13621
							],
							[
								13654,
								13709
							],
							[
								13976,
								13987
							],
							[
								14165,
								14194
							],
							[
								14412,
								14438
							],
							[
								14449,
								14463
							],
							[
								14680,
								14695
							],
							[
								14725,
								14744
							],
							[
								14773,
								14795
							],
							[
								15108,
								15118
							],
							[
								15326,
								15340
							],
							[
								15394,
								15408
							],
							[
								16426,
								16469
							],
							[
								16663,
								16669
							],
							[
								16682,
								16698
							],
							[
								18272,
								18308
							],
							[
								18496,
								18531
							],
							[
								18671,
								18675
							],
							[
								18802,
								18820
							],
							[
								18974,
								19006
							],
							[
								19387,
								19398
							],
							[
								19553,
								19564
							],
							[
								19624,
								19644
							],
							[
								20233,
								20268
							],
							[
								20671,
								20690
							],
							[
								20791,
								20833
							],
							[
								21609,
								21632
							],
							[
								21670,
								21677
							],
							[
								22257,
								22262
							],
							[
								23435,
								23450
							],
							[
								23790,
								23796
							],
							[
								27051,
								27057
							],
							[
								27462,
								27487
							],
							[
								27810,
								27827
							],
							[
								27879,
								27893
							],
							[
								28239,
								28249
							],
							[
								28373,
								28390
							],
							[
								28422,
								28437
							],
							[
								28480,
								28494
							],
							[
								28498,
								28513
							],
							[
								28656,
								28660
							],
							[
								28737,
								28747
							],
							[
								29235,
								29244
							],
							[
								29360,
								29366
							],
							[
								29424,
								29437
							],
							[
								29652,
								29669
							],
							[
								29786,
								29828
							],
							[
								30193,
								30224
							],
							[
								30306,
								30322
							],
							[
								30505,
								30525
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					263,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7956,
								7978
							],
							[
								8387,
								8434
							],
							[
								8577,
								8595
							],
							[
								9091,
								9102
							],
							[
								9412,
								9430
							],
							[
								9531,
								9548
							],
							[
								9722,
								9726
							],
							[
								9801,
								9838
							],
							[
								9997,
								10001
							],
							[
								10345,
								10377
							],
							[
								10546,
								10570
							],
							[
								10584,
								10610
							],
							[
								10917,
								10921
							],
							[
								11051,
								11074
							],
							[
								11129,
								11137
							],
							[
								11255,
								11270
							],
							[
								11713,
								11728
							],
							[
								12112,
								12141
							],
							[
								12231,
								12244
							],
							[
								12943,
								12953
							],
							[
								13096,
								13114
							],
							[
								13595,
								13613
							],
							[
								13614,
								13621
							],
							[
								13654,
								13709
							],
							[
								13976,
								13987
							],
							[
								14165,
								14194
							],
							[
								14412,
								14438
							],
							[
								14449,
								14463
							],
							[
								14680,
								14695
							],
							[
								14725,
								14744
							],
							[
								14773,
								14795
							],
							[
								15108,
								15118
							],
							[
								15326,
								15340
							],
							[
								15394,
								15408
							],
							[
								16426,
								16469
							],
							[
								16663,
								16669
							],
							[
								16682,
								16698
							],
							[
								18272,
								18308
							],
							[
								18496,
								18531
							],
							[
								18671,
								18675
							],
							[
								18802,
								18820
							],
							[
								18974,
								19006
							],
							[
								19387,
								19398
							],
							[
								19553,
								19564
							],
							[
								19624,
								19644
							],
							[
								20233,
								20268
							],
							[
								20671,
								20690
							],
							[
								20791,
								20833
							],
							[
								21609,
								21632
							],
							[
								21670,
								21677
							],
							[
								22257,
								22262
							],
							[
								23435,
								23450
							],
							[
								23790,
								23796
							],
							[
								27051,
								27057
							],
							[
								27462,
								27487
							],
							[
								27810,
								27827
							],
							[
								27879,
								27893
							],
							[
								28239,
								28249
							],
							[
								28373,
								28390
							],
							[
								28422,
								28437
							],
							[
								28480,
								28494
							],
							[
								28498,
								28513
							],
							[
								28656,
								28660
							],
							[
								28737,
								28747
							],
							[
								29235,
								29244
							],
							[
								29360,
								29366
							],
							[
								29424,
								29437
							],
							[
								29652,
								29669
							],
							[
								29786,
								29828
							],
							[
								30193,
								30224
							],
							[
								30306,
								30322
							],
							[
								30505,
								30525
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					264,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7956,
								7978
							],
							[
								8386,
								8433
							],
							[
								8576,
								8594
							],
							[
								9090,
								9101
							],
							[
								9411,
								9429
							],
							[
								9530,
								9547
							],
							[
								9721,
								9725
							],
							[
								9800,
								9837
							],
							[
								9996,
								10000
							],
							[
								10344,
								10376
							],
							[
								10545,
								10569
							],
							[
								10583,
								10609
							],
							[
								10916,
								10920
							],
							[
								11050,
								11073
							],
							[
								11128,
								11136
							],
							[
								11254,
								11269
							],
							[
								11712,
								11727
							],
							[
								12111,
								12140
							],
							[
								12230,
								12243
							],
							[
								12942,
								12952
							],
							[
								13095,
								13113
							],
							[
								13594,
								13612
							],
							[
								13613,
								13620
							],
							[
								13653,
								13708
							],
							[
								13975,
								13986
							],
							[
								14164,
								14193
							],
							[
								14411,
								14437
							],
							[
								14448,
								14462
							],
							[
								14679,
								14694
							],
							[
								14724,
								14743
							],
							[
								14772,
								14794
							],
							[
								15107,
								15117
							],
							[
								15325,
								15339
							],
							[
								15393,
								15407
							],
							[
								16425,
								16468
							],
							[
								16662,
								16668
							],
							[
								16681,
								16697
							],
							[
								18271,
								18307
							],
							[
								18495,
								18530
							],
							[
								18670,
								18674
							],
							[
								18801,
								18819
							],
							[
								18973,
								19005
							],
							[
								19386,
								19397
							],
							[
								19552,
								19563
							],
							[
								19623,
								19643
							],
							[
								20232,
								20267
							],
							[
								20670,
								20689
							],
							[
								20790,
								20832
							],
							[
								21608,
								21631
							],
							[
								21669,
								21676
							],
							[
								22256,
								22261
							],
							[
								23434,
								23449
							],
							[
								23789,
								23795
							],
							[
								27050,
								27056
							],
							[
								27461,
								27486
							],
							[
								27809,
								27826
							],
							[
								27878,
								27892
							],
							[
								28238,
								28248
							],
							[
								28372,
								28389
							],
							[
								28421,
								28436
							],
							[
								28479,
								28493
							],
							[
								28497,
								28512
							],
							[
								28655,
								28659
							],
							[
								28736,
								28746
							],
							[
								29234,
								29243
							],
							[
								29359,
								29365
							],
							[
								29423,
								29436
							],
							[
								29651,
								29668
							],
							[
								29785,
								29827
							],
							[
								30192,
								30223
							],
							[
								30305,
								30321
							],
							[
								30504,
								30524
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					265,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7955,
								7977
							],
							[
								8385,
								8432
							],
							[
								8575,
								8593
							],
							[
								9089,
								9100
							],
							[
								9410,
								9428
							],
							[
								9529,
								9546
							],
							[
								9720,
								9724
							],
							[
								9799,
								9836
							],
							[
								9995,
								9999
							],
							[
								10343,
								10375
							],
							[
								10544,
								10568
							],
							[
								10582,
								10608
							],
							[
								10915,
								10919
							],
							[
								11049,
								11072
							],
							[
								11127,
								11135
							],
							[
								11253,
								11268
							],
							[
								11711,
								11726
							],
							[
								12110,
								12139
							],
							[
								12229,
								12242
							],
							[
								12941,
								12951
							],
							[
								13094,
								13112
							],
							[
								13593,
								13611
							],
							[
								13612,
								13619
							],
							[
								13652,
								13707
							],
							[
								13974,
								13985
							],
							[
								14163,
								14192
							],
							[
								14410,
								14436
							],
							[
								14447,
								14461
							],
							[
								14678,
								14693
							],
							[
								14723,
								14742
							],
							[
								14771,
								14793
							],
							[
								15106,
								15116
							],
							[
								15324,
								15338
							],
							[
								15392,
								15406
							],
							[
								16424,
								16467
							],
							[
								16661,
								16667
							],
							[
								16680,
								16696
							],
							[
								18270,
								18306
							],
							[
								18494,
								18529
							],
							[
								18669,
								18673
							],
							[
								18800,
								18818
							],
							[
								18972,
								19004
							],
							[
								19385,
								19396
							],
							[
								19551,
								19562
							],
							[
								19622,
								19642
							],
							[
								20231,
								20266
							],
							[
								20669,
								20688
							],
							[
								20789,
								20831
							],
							[
								21607,
								21630
							],
							[
								21668,
								21675
							],
							[
								22255,
								22260
							],
							[
								23433,
								23448
							],
							[
								23788,
								23794
							],
							[
								27049,
								27055
							],
							[
								27460,
								27485
							],
							[
								27808,
								27825
							],
							[
								27877,
								27891
							],
							[
								28237,
								28247
							],
							[
								28371,
								28388
							],
							[
								28420,
								28435
							],
							[
								28478,
								28492
							],
							[
								28496,
								28511
							],
							[
								28654,
								28658
							],
							[
								28735,
								28745
							],
							[
								29233,
								29242
							],
							[
								29358,
								29364
							],
							[
								29422,
								29435
							],
							[
								29650,
								29667
							],
							[
								29784,
								29826
							],
							[
								30191,
								30222
							],
							[
								30304,
								30320
							],
							[
								30503,
								30523
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					266,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1829,
								1872
							],
							[
								2219,
								2256
							],
							[
								2323,
								2328
							],
							[
								2886,
								2903
							],
							[
								3299,
								3331
							],
							[
								3494,
								3515
							],
							[
								3708,
								3738
							],
							[
								4109,
								4137
							],
							[
								4149,
								4163
							],
							[
								4422,
								4436
							],
							[
								5100,
								5104
							],
							[
								5151,
								5155
							],
							[
								5352,
								5359
							],
							[
								5386,
								5403
							],
							[
								5677,
								5724
							],
							[
								6211,
								6274
							],
							[
								6813,
								6836
							],
							[
								7808,
								7830
							],
							[
								8238,
								8285
							],
							[
								8428,
								8446
							],
							[
								8942,
								8953
							],
							[
								9263,
								9281
							],
							[
								9382,
								9399
							],
							[
								9573,
								9577
							],
							[
								9652,
								9689
							],
							[
								9848,
								9852
							],
							[
								10196,
								10228
							],
							[
								10397,
								10421
							],
							[
								10435,
								10461
							],
							[
								10768,
								10772
							],
							[
								10902,
								10925
							],
							[
								10980,
								10988
							],
							[
								11106,
								11121
							],
							[
								11564,
								11579
							],
							[
								11963,
								11992
							],
							[
								12082,
								12095
							],
							[
								12794,
								12804
							],
							[
								12947,
								12965
							],
							[
								13446,
								13464
							],
							[
								13465,
								13472
							],
							[
								13505,
								13560
							],
							[
								13827,
								13838
							],
							[
								14016,
								14045
							],
							[
								14263,
								14289
							],
							[
								14300,
								14314
							],
							[
								14531,
								14546
							],
							[
								14576,
								14595
							],
							[
								14624,
								14646
							],
							[
								14959,
								14969
							],
							[
								15177,
								15191
							],
							[
								15245,
								15259
							],
							[
								16277,
								16320
							],
							[
								16514,
								16520
							],
							[
								16533,
								16549
							],
							[
								18123,
								18159
							],
							[
								18347,
								18382
							],
							[
								18522,
								18526
							],
							[
								18653,
								18671
							],
							[
								18825,
								18857
							],
							[
								19238,
								19249
							],
							[
								19404,
								19415
							],
							[
								19475,
								19495
							],
							[
								20084,
								20119
							],
							[
								20522,
								20541
							],
							[
								20642,
								20684
							],
							[
								21460,
								21483
							],
							[
								21521,
								21528
							],
							[
								22108,
								22113
							],
							[
								23286,
								23301
							],
							[
								23641,
								23647
							],
							[
								26902,
								26908
							],
							[
								27313,
								27338
							],
							[
								27661,
								27678
							],
							[
								27730,
								27744
							],
							[
								28090,
								28100
							],
							[
								28224,
								28241
							],
							[
								28273,
								28288
							],
							[
								28331,
								28345
							],
							[
								28349,
								28364
							],
							[
								28507,
								28511
							],
							[
								28588,
								28598
							],
							[
								29086,
								29095
							],
							[
								29211,
								29217
							],
							[
								29275,
								29288
							],
							[
								29503,
								29520
							],
							[
								29637,
								29679
							],
							[
								30044,
								30075
							],
							[
								30157,
								30173
							],
							[
								30356,
								30376
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAhBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					267,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					268,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5150,
								5154
							],
							[
								5558,
								5572
							],
							[
								5652,
								5667
							],
							[
								5748,
								5760
							],
							[
								5838,
								5854
							],
							[
								5937,
								5952
							],
							[
								6273,
								6280
							],
							[
								6328,
								6367
							],
							[
								6452,
								6482
							],
							[
								6596,
								6600
							],
							[
								6796,
								6831
							],
							[
								6920,
								6969
							],
							[
								7215,
								7236
							],
							[
								7311,
								7329
							],
							[
								7414,
								7429
							],
							[
								7500,
								7510
							],
							[
								7531,
								7538
							],
							[
								7577,
								7614
							],
							[
								7770,
								7796
							],
							[
								7836,
								7848
							],
							[
								7966,
								7984
							],
							[
								8067,
								8085
							],
							[
								9616,
								9645
							],
							[
								9984,
								10017
							],
							[
								10088,
								10092
							],
							[
								10094,
								10098
							],
							[
								10221,
								10227
							],
							[
								10229,
								10233
							],
							[
								10333,
								10337
							],
							[
								10339,
								10343
							],
							[
								10394,
								10398
							],
							[
								10433,
								10437
							],
							[
								10828,
								10857
							],
							[
								10939,
								10944
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AQAAAAAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					269,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					270,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5150,
								5154
							],
							[
								5558,
								5572
							],
							[
								5652,
								5667
							],
							[
								5748,
								5760
							],
							[
								5838,
								5854
							],
							[
								5937,
								5952
							],
							[
								6273,
								6280
							],
							[
								6328,
								6367
							],
							[
								6452,
								6482
							],
							[
								6596,
								6600
							],
							[
								6796,
								6831
							],
							[
								6920,
								6969
							],
							[
								7215,
								7236
							],
							[
								7311,
								7329
							],
							[
								7414,
								7429
							],
							[
								7500,
								7510
							],
							[
								7531,
								7538
							],
							[
								7577,
								7614
							],
							[
								7770,
								7796
							],
							[
								7836,
								7848
							],
							[
								7966,
								7984
							],
							[
								8067,
								8085
							],
							[
								9616,
								9645
							],
							[
								9984,
								10017
							],
							[
								10088,
								10092
							],
							[
								10094,
								10098
							],
							[
								10221,
								10227
							],
							[
								10229,
								10233
							],
							[
								10333,
								10337
							],
							[
								10339,
								10343
							],
							[
								10394,
								10398
							],
							[
								10433,
								10437
							],
							[
								10828,
								10857
							],
							[
								10939,
								10944
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AQAAAAAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					271,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5149,
								5153
							],
							[
								5557,
								5571
							],
							[
								5651,
								5666
							],
							[
								5747,
								5759
							],
							[
								5837,
								5853
							],
							[
								5936,
								5951
							],
							[
								6272,
								6279
							],
							[
								6327,
								6366
							],
							[
								6451,
								6481
							],
							[
								6595,
								6599
							],
							[
								6795,
								6830
							],
							[
								6919,
								6968
							],
							[
								7214,
								7235
							],
							[
								7310,
								7328
							],
							[
								7413,
								7428
							],
							[
								7499,
								7509
							],
							[
								7530,
								7537
							],
							[
								7576,
								7613
							],
							[
								7769,
								7795
							],
							[
								7835,
								7847
							],
							[
								7965,
								7983
							],
							[
								8066,
								8084
							],
							[
								9615,
								9644
							],
							[
								9983,
								10016
							],
							[
								10087,
								10091
							],
							[
								10093,
								10097
							],
							[
								10220,
								10226
							],
							[
								10228,
								10232
							],
							[
								10332,
								10336
							],
							[
								10338,
								10342
							],
							[
								10393,
								10397
							],
							[
								10432,
								10436
							],
							[
								10827,
								10856
							],
							[
								10938,
								10943
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					272,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					273,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5149,
								5153
							],
							[
								5557,
								5571
							],
							[
								5651,
								5666
							],
							[
								5747,
								5759
							],
							[
								5837,
								5853
							],
							[
								5936,
								5951
							],
							[
								6272,
								6279
							],
							[
								6327,
								6366
							],
							[
								6451,
								6481
							],
							[
								6595,
								6599
							],
							[
								6795,
								6830
							],
							[
								6919,
								6968
							],
							[
								7214,
								7235
							],
							[
								7310,
								7328
							],
							[
								7413,
								7428
							],
							[
								7499,
								7509
							],
							[
								7530,
								7537
							],
							[
								7576,
								7613
							],
							[
								7769,
								7795
							],
							[
								7835,
								7847
							],
							[
								7965,
								7983
							],
							[
								8066,
								8084
							],
							[
								9615,
								9644
							],
							[
								9983,
								10016
							],
							[
								10087,
								10091
							],
							[
								10093,
								10097
							],
							[
								10220,
								10226
							],
							[
								10228,
								10232
							],
							[
								10332,
								10336
							],
							[
								10338,
								10342
							],
							[
								10393,
								10397
							],
							[
								10432,
								10436
							],
							[
								10827,
								10856
							],
							[
								10938,
								10943
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AQAAAAAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					274,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5150,
								5154
							],
							[
								5558,
								5572
							],
							[
								5652,
								5667
							],
							[
								5748,
								5760
							],
							[
								5838,
								5854
							],
							[
								5937,
								5952
							],
							[
								6273,
								6280
							],
							[
								6328,
								6367
							],
							[
								6452,
								6482
							],
							[
								6596,
								6600
							],
							[
								6796,
								6831
							],
							[
								6920,
								6969
							],
							[
								7215,
								7236
							],
							[
								7311,
								7329
							],
							[
								7414,
								7429
							],
							[
								7500,
								7510
							],
							[
								7531,
								7538
							],
							[
								7577,
								7614
							],
							[
								7770,
								7796
							],
							[
								7836,
								7848
							],
							[
								7966,
								7984
							],
							[
								8067,
								8085
							],
							[
								9616,
								9645
							],
							[
								9984,
								10017
							],
							[
								10088,
								10092
							],
							[
								10094,
								10098
							],
							[
								10221,
								10227
							],
							[
								10229,
								10233
							],
							[
								10333,
								10337
							],
							[
								10339,
								10343
							],
							[
								10394,
								10398
							],
							[
								10433,
								10437
							],
							[
								10828,
								10857
							],
							[
								10939,
								10944
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					275,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								613,
								617
							],
							[
								634,
								667
							],
							[
								1323,
								1332
							],
							[
								1588,
								1629
							],
							[
								2283,
								2292
							],
							[
								3474,
								3492
							],
							[
								3576,
								3582
							],
							[
								3617,
								3641
							],
							[
								3687,
								3704
							],
							[
								3808,
								3820
							],
							[
								5150,
								5154
							],
							[
								5558,
								5572
							],
							[
								5652,
								5667
							],
							[
								5748,
								5760
							],
							[
								5838,
								5854
							],
							[
								5937,
								5952
							],
							[
								6273,
								6280
							],
							[
								6328,
								6367
							],
							[
								6452,
								6482
							],
							[
								6596,
								6600
							],
							[
								6796,
								6831
							],
							[
								6920,
								6969
							],
							[
								7215,
								7236
							],
							[
								7311,
								7329
							],
							[
								7414,
								7429
							],
							[
								7500,
								7510
							],
							[
								7531,
								7538
							],
							[
								7577,
								7614
							],
							[
								7770,
								7796
							],
							[
								7836,
								7848
							],
							[
								7966,
								7984
							],
							[
								8067,
								8085
							],
							[
								9616,
								9645
							],
							[
								9984,
								10017
							],
							[
								10088,
								10092
							],
							[
								10094,
								10098
							],
							[
								10221,
								10227
							],
							[
								10229,
								10233
							],
							[
								10333,
								10337
							],
							[
								10339,
								10343
							],
							[
								10394,
								10398
							],
							[
								10433,
								10437
							],
							[
								10828,
								10857
							],
							[
								10939,
								10944
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					276,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					277,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					278,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					279,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					280,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					281,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					282,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					283,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					284,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 11545,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAADctAAAAAAAAOC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpDgAAAAAAAOkOAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAEIPAAAAAAAAQw8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCDwAAAAAAAEIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAEMPAAAAAAAARA8AAAAAAAAAAAAARA8AAAAAAABMDwAAAAAAAAAAAABEDwAAAAAAAEQPAAAAAAAACAAAACAgICAgICAgRA8AAAAAAABODwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDDwAAAAAAAEMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					6,
					"left_delete",
					null,
					"BgAAAEwPAAAAAAAATA8AAAAAAAACAAAAICBKDwAAAAAAAEoPAAAAAAAAAgAAACAgSA8AAAAAAABIDwAAAAAAAAIAAAAgIEYPAAAAAAAARg8AAAAAAAACAAAAICBEDwAAAAAAAEQPAAAAAAAAAgAAACAgQw8AAAAAAABDDwAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABODwAAAAAAAE4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAEIPAAAAAAAAQg8AAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDDwAAAAAAAEMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".?"
					},
					"AgAAAEIPAAAAAAAAQw8AAAAAAAAAAAAAQw8AAAAAAABEDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCDwAAAAAAAEIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAEMPAAAAAAAAQw8AAAAAAAABAAAAP0IPAAAAAAAAQg8AAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEDwAAAAAAAEQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAF8PAAAAAAAAYQ8AAAAAAAAAAAAAMw8AAAAAAAA1DwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzDwAAAAAAAF8PAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYDgAAAAAAAOAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAOAOAAAAAAAA4Q4AAAAAAAAAAAAA4Q4AAAAAAADiDgAAAAAAAAAAAADiDgAAAAAAAOMOAAAAAAAAAAAAAOMOAAAAAAAA5A4AAAAAAAAAAAAA5A4AAAAAAADlDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgDgAAAAAAAOAOAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOUOAAAAAAAA5g4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlDgAAAAAAAOUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAA8TAAAAAAAAEBMAAAAAAAAAAAAAEBMAAAAAAAAREwAAAAAAAAAAAAAREwAAAAAAABITAAAAAAAAAAAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAAUEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPEwAAAAAAAA8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQTAAAAAAAAFRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUEwAAAAAAABQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAABASAAAAAAAAERIAAAAAAAAAAAAAERIAAAAAAAASEgAAAAAAAAAAAAASEgAAAAAAABMSAAAAAAAAAAAAABMSAAAAAAAAFBIAAAAAAAAAAAAAFBIAAAAAAAAVEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQEgAAAAAAABASAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUSAAAAAAAAFhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEgAAAAAAABUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAEsQAAAAAAAATBAAAAAAAAAAAAAATBAAAAAAAABNEAAAAAAAAAAAAABNEAAAAAAAAE4QAAAAAAAAAAAAAE4QAAAAAAAATxAAAAAAAAAAAAAATxAAAAAAAABQEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLEAAAAAAAAEsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAQAAAAAAAAURAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABVLQAAaW1wb3J0ICogYXMgZGVlcCBmcm9tICcuL2xpYi9kZWVwLmpzJzsKCmltcG9ydCB7IGFuc2lTdHlsZXMgfSBmcm9tICcuL2xpYi9taXNjLmpzJzsKCmltcG9ydCB7IGRlZmluZSB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgeyBlcnJvciB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CgppbXBvcnQgeyBQb2ludGVyIH0gZnJvbSAnLi9saWIvcG9pbnRlci5qcyc7Cmdsb2JhbFRoaXMucHJvY2VzcyA/Pz0geyBlbnY6IHt9IH07Cgp2YXIgd29ya2VyOwp2YXIgY291bnRlcjsKbGV0IHNvY2tldHMgPSAoZ2xvYmFsVGhpcy5zb2NrZXRzID8/PSBuZXcgU2V0KCkpOwpsZXQgbGlzdGVuZXJzID0gKGdsb2JhbFRoaXMubGlzdGVuZXJzID0ge30pOwoKY29uc3QgeyByZWRCcmlnaHQsIGdyZWVuQnJpZ2h0LCBjeWFuQnJpZ2h0LCB5ZWxsb3dCcmlnaHQsIG1hZ2VudGFCcmlnaHQgfSA9IGFuc2lTdHlsZXM7Cgpjb25zdCBzeW50YXhQYWxldHRlID0gW3sgb3BlbjogJ1x4MWJbMG0nIH0sIHJlZEJyaWdodCwgZ3JlZW5CcmlnaHQsIHllbGxvd0JyaWdodCwgY3lhbkJyaWdodCwgbWFnZW50YUJyaWdodF0ubWFwKGMgPT4gYy5vcGVuKTsKCmV4cG9ydCBmdW5jdGlvbiBUcml2aWFsVG9rZW5pemVyKGlucHV0KSB7CiAgY29uc3QgcmUgPQogICAgLyhcbnxcdHwgKXwoXGIoPzphcmd1bWVudHN8YXN8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb25zdHJ1Y3Rvcnxjb250aW51ZXxkZWJ1Z2dlcnxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVudW18ZXZhbHxleHBvcnR8ZXh0ZW5kc3xmYWxzZXxmaW5hbGx5fGZvcnxmcm9tfGZ1bmN0aW9ufGdldHxpZGVudGlmaWVyfGlmfGltcGxlbWVudHN8aW1wb3J0fGlufGluc3RhbmNlb2Z8aW50ZXJmYWNlfGxldHxtZXRhfG5ld3xudWxsfG51bWJlcnxvZnxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZXR1cm58c2V0fHN0YXRpY3xzdHJpbmd8c3VwZXJ8c3dpdGNofHRhcmdldHx0aGlzfHRocm93fHRydWV8dHJ5fHR5cGVvZnx2YXJ8dm9pZHx3aGlsZXx3aXRofHlpZWxkKVxiKXwoXC9cKig/OlteKl1cL3xbXlwvXSkqXCpcL3xcL1wvW15cbl0qXG4pfChbQS1aYS16X11bQS1aYS16XzAtOV0qKXwoIig/OlxcInxbXiJcbl0pKiJ8Jyg/OlxcJ3xbXidcbl0pKid8W15cc0EtWmEtel8nIl0pL2c7CiAgbGV0IG1hdGNoLAogICAgcHJldiwKICAgIHJldCA9IFtdOwoKICB3aGlsZSgobWF0Y2ggPSByZS5leGVjKGlucHV0KSkpIHsKICAgIGxldCB0b2tlblR5cGUgPSBtYXRjaC5maW5kSW5kZXgoKG0sIGkpID0+IGkgPiAwICYmIG0gIT09IHVuZGVmaW5lZCk7CiAgICBjb25zdCB7IGluZGV4IH0gPSBtYXRjaDsKICAgIGxldCBzdHIgPSBtYXRjaFt0b2tlblR5cGVdID8/IG1hdGNoWzBdOwoKICAgIHJldC5wdXNoKFtbdW5kZWZpbmVkLCAnd2hpdGVzcGFjZScsICdrZXl3b3JkJywgJ2NvbW1lbnQnLCAnaWRlbnRpZmllcicsICdzdHJpbmcnXVt0b2tlblR5cGVdLCBzdHJdKTsKICAgIHByZXYgPSB0b2tlblR5cGU7CiAgfQogIHJldHVybiByZXQ7Cn0KCmV4cG9ydCBmdW5jdGlvbiBUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpIHsKICBjb25zdCByZSA9CiAgICAvKFxufFx0fCApfChcYig/OmFyZ3VtZW50c3xhc3xhc3luY3xhd2FpdHxicmVha3xjYXNlfGNhdGNofGNsYXNzfGNvbnN0fGNvbnN0cnVjdG9yfGNvbnRpbnVlfGRlYnVnZ2VyfGRlZmF1bHR8ZGVsZXRlfGRvfGVsc2V8ZW51bXxldmFsfGV4cG9ydHxleHRlbmRzfGZhbHNlfGZpbmFsbHl8Zm9yfGZyb218ZnVuY3Rpb258Z2V0fGlkZW50aWZpZXJ8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5zdGFuY2VvZnxpbnRlcmZhY2V8bGV0fG1ldGF8bmV3fG51bGx8bnVtYmVyfG9mfHBhY2thZ2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cHVibGljfHJldHVybnxzZXR8c3RhdGljfHN0cmluZ3xzdXBlcnxzd2l0Y2h8dGFyZ2V0fHRoaXN8dGhyb3d8dHJ1ZXx0cnl8dHlwZW9mfHZhcnx2b2lkfHdoaWxlfHdpdGh8eWllbGQpXGIpfChcL1wqKD86W14qXVwvfFteXC9dKSpcKlwvfFwvXC9bXlxuXSpcbil8KFtBLVphLXpfXVtBLVphLXpfMC05XSopfCgiKD86XFwifFteIlxuXSkqInwnKD86XFwnfFteJ1xuXSkqJ3xbXlxzQS1aYS16XyciXSkvZzsKICBsZXQgbWF0Y2gsCiAgICBwcmV2LAogICAgcyA9ICcnOwoKICB3aGlsZSgobWF0Y2ggPSByZS5leGVjKGlucHV0KSkpIHsKICAgIGxldCB0b2tlblR5cGUgPSBtYXRjaC5maW5kSW5kZXgoKG0sIGkpID0+IGkgPiAwICYmIG0gIT09IHVuZGVmaW5lZCk7CiAgICBjb25zdCB7IGluZGV4IH0gPSBtYXRjaDsKICAgIGxldCBzdHIgPSBtYXRjaFt0b2tlblR5cGVdID8/IG1hdGNoWzBdOwoKICAgIGlmKHRva2VuVHlwZSA9PSAxIHx8IHRva2VuVHlwZSAhPSBwcmV2KSBpZiAoc3ludGF4UGFsZXR0ZVt0b2tlblR5cGUgLSAxXSkgc3RyID0gc3ludGF4UGFsZXR0ZVt0b2tlblR5cGUgLSAxXSArIHN0cjsKCiAgICBzICs9IHN0cjsKICAgIHByZXYgPSB0b2tlblR5cGU7CiAgfQogIHJldHVybiBzOwp9CgovKmV4cG9ydCBmdW5jdGlvbiBFQ01BU2NyaXB0U3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQsIGZpbGVuYW1lKSB7CiAgY29uc3QgbGV4ZXIgPSBuZXcgRUNNQVNjcmlwdExleGVyKGlucHV0LCBmaWxlbmFtZSk7CiAgbGV0IHByZXYgPSAwLAogICAgcyA9ICcnOwogIGNvbnN1bWVTeW5jKGxleGVyLnZhbHVlcygpLCAoeyBpZCwgdHlwZSwgbGV4ZW1lIH0pID0+IHsKICAgIGxldCBjb2xvciA9IHsKICAgICAgc2hlYmFuZzogMzIsCiAgICAgIGNvbW1lbnQ6IDMyLAogICAgICByZWdleHBMaXRlcmFsOiAzNSwKICAgICAgdGVtcGxhdGVMaXRlcmFsOiAzNSwKICAgICAgdGVtcGxhdGVMaXRlcmFsSGVhZDogMzUsCiAgICAgIHRlbXBsYXRlTGl0ZXJhbFBhcnQ6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWxUYWlsOiAzNSwKICAgICAgcHVuY3R1YXRvcjogMzYsCiAgICAgIG51bWVyaWNMaXRlcmFsOiAzNiwKICAgICAgc3RyaW5nTGl0ZXJhbDogMzYsCiAgICAgIGJvb2xlYW5MaXRlcmFsOiAzMSwKICAgICAgbnVsbExpdGVyYWw6IDM1LAogICAgICBrZXl3b3JkOiAzMSwKICAgICAgaWRlbnRpZmllcjogMzMsCiAgICAgIHByaXZhdGVJZGVudGlmaWVyOiAzMywKICAgICAgd2hpdGVzcGFjZTogZmFsc2UKICAgIH1bdHlwZV07CgogICAgaWYobGV4ZW1lLmluZGV4T2YoJ1xuJykgIT0gLTEpIGNvbG9yID0gMDsKCiAgICBpZihjb2xvciAhPT0gZmFsc2UpIHsKICAgICAgaWYocHJldiAhPSBjb2xvcikgbGV4ZW1lID0gJ1x4MWJbJyArIChjb2xvciA/ICcxOycgOiAnJykgKyBjb2xvciArICdtJyArIGxleGVtZTsKICAgICAgcHJldiA9IGNvbG9yOwogICAgfQoKICAgIHMgKz0gbGV4ZW1lOwogIH0pOwoKICBpZihwcmV2KSBzICs9ICdceDFiWzBtJzsKICByZXR1cm4gczsKfQoqLwpleHBvcnQgY2xhc3MgRGVidWdnZXJEaXNwYXRjaGVyIHsKICAjc2VxID0gMDsKICAjcmVzcG9uc2VzID0ge307CiAgI2NhbGxiYWNrID0gbnVsbDsKICAjcHJvbWlzZSA9IG51bGw7CiAgb25jbG9zZSA9ICgpID0+IGNvbnNvbGUubG9nKCdDTE9TRUQnKTsKICBvbmVycm9yID0gKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4gY29uc29sZS5sb2coJ0VSUk9SJywgeyBlcnJubywgbWVzc2FnZSB9KTsKCiAgY29uc3RydWN0b3IoY29ubikgewogICAgY29uc29sZS5sb2coJ0RlYnVnZ2VyRGlzcGF0Y2hlcicsIHsgY29ubiB9KTsKCiAgICBsZXQgcmV0OwoKICAgIHRyeSB7CiAgICAgIGxldCB2ID0gY29ubi5wcm9jZXNzKGFzeW5jIG1zZyA9PiB7CiAgICAgICAgaWYocHJvY2Vzcy5lbnYuREVCVUcpIGNvbnNvbGUubG9nKCdceDFiWzM4OzU7MjIwbVJFQ0VJVkVceDFiWzBtICcsIC8qIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogLTEsIGRlcHRoOiAxMCB9KSwqLyBtc2cpOwoKICAgICAgICBjb25zdCB7IHR5cGUsIGV2ZW50LCByZXF1ZXN0X3NlcSwgYm9keSB9ID0gbXNnOwoKICAgICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICAgIGNhc2UgJ3Jlc3BvbnNlJzoKICAgICAgICAgICAgbGV0IGZuID0gdGhpcy4jcmVzcG9uc2VzW3JlcXVlc3Rfc2VxXSA/PyB0aGlzLiNjYWxsYmFjazsKICAgICAgICAgICAgaWYodHlwZW9mIGZuID09ICdmdW5jdGlvbicpIGF3YWl0IGZuLmNhbGwodGhpcywgbXNnKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdldmVudCc6CiAgICAgICAgICAgIGNvbnN0IHByb3AgPSAnb24nICsgZXZlbnQudHlwZS5zbGljZSgwLCBldmVudC50eXBlLmluZGV4T2YoJ0V2ZW50JykpLnRvTG93ZXJDYXNlKCk7CgogICAgICAgICAgICBmb3IobGV0IHJlY2VpdmVyIG9mIFt0aGlzLCBjb25uXSkgewogICAgICAgICAgICAgIGlmKCFyZWNlaXZlcltwcm9wXSkgY29udGludWU7CiAgICAgICAgICAgICAgaWYocmVjZWl2ZXJbcHJvcF0pIHsKICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrID0gcmVjZWl2ZXJbcHJvcF07CiAgICAgICAgICAgICAgICBpZihwcm9jZXNzLmVudi5ERUJVRykgY29uc29sZS5sb2coJ1x4MWJbMzg7NTs1Nm1FVkVOVFx4MWJbMG0gJywgeyBwcm9wLCBldmVudCB9KTsKICAgICAgICAgICAgICAgIGlmKGF3YWl0IGNhbGxiYWNrLmNhbGwocmVjZWl2ZXIsIGV2ZW50KSA9PT0gZmFsc2UpIGlmIChyZWNlaXZlcltwcm9wXSA9PT0gY2FsbGJhY2spIGRlbGV0ZSByZWNlaXZlcltwcm9wXTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdEZWJ1Z2dlckRpc3BhdGNoZXInLCB7IG1zZyB9KTsKICAgICAgICAgICAgaWYoY29ubi5vbm1lc3NhZ2UpIGF3YWl0IGNvbm4ub25tZXNzYWdlKG1zZyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKCdwcm9jZXNzKGhhbmRsZXIpIHJldHVybmVkOicsIHYpOwoKICAgICAgaXNGdW5jdGlvbih2LnRoZW4pICYmIHYudGhlbihyID0+IChyZXQgPSByKSk7CiAgICB9IGNhdGNoKGVycikgewogICAgICBjb25zb2xlLmxvZygncHJvY2VzcyhoYW5kbGVyKSB0aHJldzonLCBlcnIubWVzc2FnZSArICdcbicgKyBlcnIuc3RhY2spOwogICAgICByZXQgPSAtMTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmKHJldCA9PSAwKSBpc0Z1bmN0aW9uKHRoaXMub25jbG9zZSkgJiYgdGhpcy5vbmNsb3NlKCk7CiAgICAgIGlmKHJldCA8IDApIGlzRnVuY3Rpb24odGhpcy5vbmVycm9yKSAmJiB0aGlzLm9uZXJyb3IoZXJyb3IoKSk7CiAgICAgIGNvbnNvbGUubG9nKCdwcm9jZXNzKGhhbmRsZXIpIGZ1bmN0aW9uIHJldHVybmVkOicsIHJldCk7CiAgICB9CgogICAgZGVmaW5lKHRoaXMsIHsKICAgICAgc2VuZE1lc3NhZ2U6IGFzeW5jIG1zZyA9PiB7CiAgICAgICAgY29uc3QgcmV0ID0gYXdhaXQgY29ubi5zZW5kTWVzc2FnZSgobXNnID0gSlNPTi5zdHJpbmdpZnkobXNnKSkpOwogICAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbVNFTkRceDFiWzBtICgnICsgcmV0ICsgJykgJyArIG1zZyk7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfQogICAgfSk7CiAgfQoKICBzdGVwSW4oKSB7CiAgICByZXR1cm4gdGhpcy5zZW5kUmVxdWVzdCgnc3RlcEluJykudGhlbihyZXNwID0+IHRoaXMud2FpdFJ1bigpKTsKICB9CiAgc3RlcE91dCgpIHsKICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0KCdzdGVwT3V0JykudGhlbihyZXNwID0+IHRoaXMud2FpdFJ1bigpKTsKICB9CiAgbmV4dCgpIHsKICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0KCduZXh0JykudGhlbihyZXNwID0+IHRoaXMud2FpdFJ1bigpKTsKICB9CiAgY29udGludWUoKSB7CiAgICByZXR1cm4gdGhpcy5zZW5kUmVxdWVzdCgnY29udGludWUnKS50aGVuKHJlc3AgPT4gdGhpcy53YWl0UnVuKCkpOwogIH0KCiAgYXN5bmMgd2FpdFJ1bigpIHsKICAgIHByb2Nlc3MuZW52LkRFQlVHICYmIGNvbnNvbGUubG9nKCdceDFiWzM4OzU7MTE4bVJVTk5JTkdceDFiWzBtICAnKTsKICAgIHRoaXMucnVubmluZyA9IHRydWU7CiAgICBjb25zdCBldmVudCA9IGF3YWl0IHdhaXRFdmVudCgnc3RvcHBlZCcpOwogICAgcHJvY2Vzcy5lbnYuREVCVUcgJiYgY29uc29sZS5sb2coJ1x4MWJbMzg7NTsxMjRtU1RPUFBFRFx4MWJbMG0gICcpOwogICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7CiAgICBjb25zdCB0cmFjZSA9IGF3YWl0IHRoaXMuc3RhY2tUcmFjZSgpOwogICAgcmV0dXJuIFtldmVudCwgdHJhY2VdOwogIH0KCiAgcGF1c2UoKSB7CiAgICByZXR1cm4gdGhpcy5zZW5kUmVxdWVzdCgncGF1c2UnKTsKICB9CgogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKSB7CiAgICByZXR1cm4gdGhpcy5zZW5kTWVzc2FnZSh7IHR5cGU6ICdzdG9wT25FeGNlcHRpb24nLCBzdG9wT25FeGNlcHRpb24gfSk7CiAgfQoKICBicmVha3BvaW50cyhwYXRoLCBicmVha3BvaW50cykgewogICAgaWYoQXJyYXkuaXNBcnJheShicmVha3BvaW50cykpIHsKICAgICAgaWYodHlwZW9mIGJyZWFrcG9pbnRzWzBdID09ICdudW1iZXInKSBicmVha3BvaW50cyA9IGJyZWFrcG9pbnRzLm1hcChuID0+ICh7IGxpbmU6IG4gfSkpOwogICAgfQogICAgY29uc3QgbXNnID0gYnJlYWtwb2ludHMgPyB7IHR5cGU6ICdicmVha3BvaW50cycsIGJyZWFrcG9pbnRzOiB7IHBhdGgsIGJyZWFrcG9pbnRzIH0gfSA6IHsgdHlwZTogJ2JyZWFrcG9pbnRzJywgcGF0aCB9OwogICAgdGhpcy5zZW5kTWVzc2FnZShtc2cpOwogICAgcmV0dXJuIG1zZzsKICB9CgogIGFzeW5jIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pIHsKICAgIHJldHVybiAoYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnZXZhbHVhdGUnLCB7IGZyYW1lSWQsIGV4cHJlc3Npb24gfSkpLmJvZHk7CiAgfQoKICBhc3luYyB2YXJpYWJsZXModmFyaWFibGVzUmVmZXJlbmNlLCBvcHRpb25zID0ge30pIHsKICAgIGlmKEFycmF5LmlzQXJyYXkodmFyaWFibGVzUmVmZXJlbmNlKSkgewogICAgICBjb25zdCBbZnJhbWUsIHNjb3BlXSA9IHZhcmlhYmxlc1JlZmVyZW5jZTsKICAgICAgdmFyaWFibGVzUmVmZXJlbmNlID0gZnJhbWUgKiA0ICsgc2NvcGU7CiAgICB9CiAgICByZXR1cm4gKGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJ3ZhcmlhYmxlcycsIHsgdmFyaWFibGVzUmVmZXJlbmNlLCAuLi5vcHRpb25zIH0pKS5ib2R5OwogIH0KCiAgYXN5bmMgc2NvcGVzKGZyYW1lSWQpIHsKICAgIHJldHVybiAoYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnc2NvcGVzJywgeyBmcmFtZUlkIH0pKS5ib2R5OwogIH0KCiAgYXN5bmMgc3RhY2tUcmFjZSgpIHsKICAgIGxldCB7IGJvZHkgfSA9IGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJ3N0YWNrVHJhY2UnKTsKCiAgICByZXR1cm4gYm9keTsKICB9CgogIHdhaXRFdmVudChuYW1lKSB7CiAgICBjb25zdCBwcm9wID0gJ29uJyArIG5hbWUudG9Mb3dlckNhc2UoKTsKCiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgIHRoaXNbcHJvcF0gPSBhcmcgPT4gKHJlc29sdmUoYXJnKSwgZmFsc2UpOwogICAgfSk7CiAgfQoKICBhc3luYyBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pIHsKICAgIGNvbnN0IHJlcXVlc3Rfc2VxID0gKyt0aGlzLiNzZXE7CgogICAgYXdhaXQgdGhpcy5zZW5kTWVzc2FnZSh7IHR5cGU6ICdyZXF1ZXN0JywgcmVxdWVzdDogeyByZXF1ZXN0X3NlcSwgY29tbWFuZCwgYXJncyB9IH0pOwoKICAgIHJldHVybiBuZXcgUHJvbWlzZSgKICAgICAgKHJlc29sdmUsIHJlamVjdCkgPT4KICAgICAgICAodGhpcy4jcmVzcG9uc2VzW3JlcXVlc3Rfc2VxXSA9IHJlc3BvbnNlID0+IHsKICAgICAgICAgIGRlbGV0ZSB0aGlzLiNyZXNwb25zZXNbcmVxdWVzdF9zZXFdOwogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfSkKICAgICk7CiAgfQp9CgpPYmplY3QuYXNzaWduKERlYnVnZ2VyRGlzcGF0Y2hlci5wcm90b3R5cGUsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdEZWJ1Z2dlckRpc3BhdGNoZXInIH0pOwpPYmplY3Quc2V0UHJvdG90eXBlT2YoRGVidWdnZXJEaXNwYXRjaGVyLnByb3RvdHlwZSwgbnVsbCk7CgovKmZ1bmN0aW9uIFRlc3RXb3JrZXIoKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgY29sb3JzOiB0cnVlLAogICAgY29tcGFjdDogMSwKICAgIHByZWZpeDogJ1x4MWJbMzg7NTsyMjBtUEFSRU5UXHgxYlswbScKICB9KTsKICB3b3JrZXIgPSBuZXcgV29ya2VyKCcuL3dzLXdvcmtlci5qcycpOwogIGNvdW50ZXIgPSAwOwogIHdvcmtlci5vbm1lc3NhZ2UgPSBXb3JrZXJNZXNzYWdlOwogIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBsaW5lID0gcHJvY2Vzcy5zdGRpbi5nZXRsaW5lKCk7CiAgICB3b3JrZXIucG9zdE1lc3NhZ2UoeyBsaW5lIH0pOwogIH0pOwp9CgpsZXQgc29jaywgY29ubmVjdGlvbjsKZnVuY3Rpb24gV29ya2VyTWVzc2FnZShlKSB7CiAgdmFyIGV2ID0gZS5kYXRhOwogIGNvbnN0IHsgbWVzc2FnZSwgaWQgfSA9IGV2OwogIHN3aXRjaCAoZXYudHlwZSkgewogICAgY2FzZSAnbWVzc2FnZSc6IHsKICAgICAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHsKICAgICAgICBjYXNlICdzdGFydCc6IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdTVEFSVCcsIG1lc3NhZ2Uuc3RhcnQpOwogICAgICAgICAgY29uc3QgeyBhcmdzLCBjb25uZWN0LCBhZGRyZXNzIH0gPSBtZXNzYWdlLnN0YXJ0OwogICAgICAgICAgbGV0IGNoaWxkID0gU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKTsKICAgICAgICAgIHNsZWVwKDEwMDApOwogICAgICAgICAgc29jayA9IENvbm5lY3REZWJ1Z2dlcihhZGRyZXNzKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBkZWZhdWx0OiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnRnJvbSBXT1JLRVInLCBldik7CiAgICAgICAgICBjb25uZWN0aW9uLnNlbmRNZXNzYWdlKG1lc3NhZ2UpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnbnVtJzogewogICAgICBhc3NlcnQoZXYubnVtLCBjb3VudGVyKTsKICAgICAgY291bnRlcisrOwogICAgICBpZihjb3VudGVyID09IDEwKSB7CiAgICAgICAgbGV0IHNhYiA9IG5ldyBTaGFyZWRBcnJheUJ1ZmZlcigxMCk7CiAgICAgICAgbGV0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNhYik7CiAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ3NhYicsIGJ1ZjogYnVmIH0pOwogICAgICAgIGNvdW50ZXIgPSAwOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnc2FiX2RvbmUnOiB7CiAgICAgIGxldCBidWYgPSBldi5idWY7CiAgICAgIGFzc2VydChidWZbMl0sIDEwKTsKICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ2Fib3J0JyB9KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdkb25lJzogewogICAgICBicmVhazsKICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHNlbmQoaWQsIGJvZHkpIHsKICB3b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiAnc2VuZCcsIGlkLCBib2R5IH0pOwp9Ki8KCmV4cG9ydCBmdW5jdGlvbiogR2V0QXJndW1lbnRzKG5vZGUpIHsKICBmb3IobGV0IHBhcmFtIG9mIG5vZGUucGFyYW1zKSB7CiAgICBsZXQgbmFtZSA9ICcnOwoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ0Fzc2lnbm1lbnRQYXR0ZXJuJykgcGFyYW0gPSBwYXJhbS5sZWZ0OwoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ1Jlc3RFbGVtZW50JykgewogICAgICBuYW1lICs9ICcuLi4nOwogICAgICBwYXJhbSA9IHBhcmFtLmFyZ3VtZW50OwogICAgfQoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ0lkZW50aWZpZXInKSBuYW1lICs9IHBhcmFtLm5hbWU7CgogICAgaWYobmFtZSAhPT0gJycpIHlpZWxkIG5hbWU7CiAgICBlbHNlIHlpZWxkIHBhcmFtOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIEdldEZ1bmN0aW9uTmFtZShhc3QsIHApIHsKICB0cnkgewogICAgbGV0IHB0ciA9IG5ldyBQb2ludGVyKHApOwogICAgbGV0IGggPSBwdHIuaGllcigpLmZpbHRlcihwID0+IChuID0+ICFBcnJheS5pc0FycmF5KG4pKShkZWVwLmdldChhc3QsIHApKSk7CiAgICAvLyBjb25zb2xlLmxvZygnaCcsaCk7CiAgICAvLwogICAgbGV0IHN0YXJ0ID0gMSArIGguc2xpY2UoMCwgLTEpLmZpbmRMYXN0SW5kZXgocHRyID0+IChuID0+IC9GdW5jLy50ZXN0KG4udHlwZSkpKGRlZXAuZ2V0KGFzdCwgcHRyKSkpOwogICAgaCA9IGguc2xpY2Uoc3RhcnQpOwoKICAgIC8vCiAgICByZXR1cm4gaAogICAgICAubWFwKHAgPT4gKG4gPT4gbi5pZCA/PyBuLmtleSA/PyBuKShkZWVwLmdldChhc3QsIHApKSkKICAgICAgLm1hcChzID0+IChzICYmIHMubmFtZSkgfHwgcykKICAgICAgLmZpbHRlcihzID0+IHR5cGVvZiBzID09ICdzdHJpbmcnKQogICAgICAuam9pbignLicpOwogIH0gY2F0Y2goZSkge30KICBsZXQgbmFtZTsKICB0cnkgewogICAgaWYocC5sYXN0ID09ICd2YWx1ZScpIG5hbWUgPSBkZWVwLmdldChhc3QsIHAuc2xpY2UoMCwgLTEpLmNvbmNhdChbJ2tleScsICduYW1lJ10pKTsKICB9IGNhdGNoKGUpIHt9CiAgbGV0IHBhcmVudCA9IGRlZXAuZ2V0KGFzdCwgcC5zbGljZSgwLCAtMSkpOwoKICBpZihwYXJlbnQudHlwZSA9PSAnUHJvcGVydHknKSB7CiAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgIG5hbWUgPz89IHBhcmVudC5rZXkudmFsdWU7CiAgICB9CiAgfQogIG5hbWUgPz89IHYuaWQ/Lm5hbWU7CiAgcmV0dXJuIG5hbWU7Cn0KCmV4cG9ydCBmdW5jdGlvbiogRmluZEZ1bmN0aW9ucyhhc3QpIHsKICBGaW5kRnVuY3Rpb25zLnBhdGhzID8/PSBuZXcgV2Vha01hcCgpOwoKICBmb3IobGV0IFt2LCBwXSBvZiBkZWVwLml0ZXJhdGUoYXN0LCB2ID0+IC9eKEFycm93fClGdW5jLy50ZXN0KHYudHlwZSkpKSB7CiAgICBsZXQgbmFtZSA9IEdldEZ1bmN0aW9uTmFtZShhc3QsIHApOwogICAgbGV0IHBhcmVudCA9IGRlZXAuZ2V0KGFzdCwgcC5zbGljZSgwLCAtMSkpOwoKICAgIC8qICAgIHRyeSB7CiAgICAgIGlmKHAubGFzdCA9PSAndmFsdWUnKSBuYW1lID0gZGVlcC5nZXQoYXN0LCBwLnNsaWNlKDAsIC0xKS5jb25jYXQoWydrZXknLCAnbmFtZSddKSk7CiAgICB9IGNhdGNoKGUpIHt9CgogICAgaWYocGFyZW50LnR5cGUgPT0gJ1Byb3BlcnR5JykgewogICAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgICAgbmFtZSA/Pz0gcGFyZW50LmtleS52YWx1ZTsKICAgICAgfQogICAgfSovCgogICAgaWYodi5hc3luYykgbmFtZSA9ICdhc3luYyAnICsgbmFtZTsKCiAgICBpZih2LmxvYy5zdGFydCkgewogICAgICBsZXQgeyBsaW5lLCBjb2x1bW4gfSA9IHYubG9jLnN0YXJ0OwogICAgICArK2NvbHVtbjsKCiAgICAgIC8qaWYobmFtZSkqLyB5aWVsZCBbbmFtZSwgeyBsaW5lLCBjb2x1bW4gfSwgWy4uLkdldEFyZ3VtZW50cyh2KV0sIHYuZXhwcmVzc2lvbiwgcF07CiAgICB9CiAgfQp9CgAAAAAAAAAAVy0AAAAAAAAAAAAAAAAAAAAAAABXLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6DgAAAAAAALoOAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAABgWAAAAAAAAGRYAAAAAAAAAAAAAGRYAAAAAAAAaFgAAAAAAAAAAAAAaFgAAAAAAABsWAAAAAAAAAAAAABsWAAAAAAAAHBYAAAAAAAAAAAAAHBYAAAAAAAAdFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBYAAAAAAAAYFgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0WAAAAAAAAHhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRYAAAAAAAAdFgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BgAAAC0WAAAAAAAALhYAAAAAAAAAAAAALhYAAAAAAAAuFgAAAAAAAAYAAAByZXR1cm4uFgAAAAAAAC8WAAAAAAAAAAAAAC8WAAAAAAAAMBYAAAAAAAAAAAAAMBYAAAAAAAAxFgAAAAAAAAAAAAAxFgAAAAAAADIWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRYAAAAAAAAzFgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAE0WAAAAAAAAThYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRYAAAAAAABNFgAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAE4WAAAAAAAATxYAAAAAAAAAAAAATxYAAAAAAABTFgAAAAAAAAAAAABTFgAAAAAAAFQWAAAAAAAAAAAAAFQWAAAAAAAAVRYAAAAAAAAAAAAAVRYAAAAAAABWFgAAAAAAAAAAAABWFgAAAAAAAFcWAAAAAAAAAAAAAFcWAAAAAAAAWBYAAAAAAAAAAAAAWBYAAAAAAABZFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThYAAAAAAABOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkWAAAAAAAAWhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRYAAAAAAABZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					14,
					"right_delete",
					null,
					"DgAAAFoWAAAAAAAAWhYAAAAAAAABAAAALloWAAAAAAAAWhYAAAAAAAABAAAAdFoWAAAAAAAAWhYAAAAAAAABAAAAaFoWAAAAAAAAWhYAAAAAAAABAAAAZVoWAAAAAAAAWhYAAAAAAAABAAAAbloWAAAAAAAAWhYAAAAAAAABAAAAKFoWAAAAAAAAWhYAAAAAAAABAAAAcloWAAAAAAAAWhYAAAAAAAABAAAAZVoWAAAAAAAAWhYAAAAAAAABAAAAc1oWAAAAAAAAWhYAAAAAAAABAAAAcFoWAAAAAAAAWhYAAAAAAAABAAAAIFoWAAAAAAAAWhYAAAAAAAABAAAAPVoWAAAAAAAAWhYAAAAAAAABAAAAPloWAAAAAAAAWhYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAWhYAAAAAAABaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAFoWAAAAAAAAWxYAAAAAAAAAAAAAWxYAAAAAAABcFgAAAAAAAAAAAABcFgAAAAAAAF0WAAAAAAAAAAAAAF0WAAAAAAAAXhYAAAAAAAAAAAAAXhYAAAAAAABfFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhYAAAAAAABaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF8WAAAAAAAAYBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxYAAAAAAABfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAAG8WAAAAAAAAbxYAAAAAAAABAAAAO24WAAAAAAAAbhYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAcBYAAAAAAABwFgAAAAAAAP///////+9/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG4WAAAAAAAAbxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhYAAAAAAABuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"cut",
					null,
					"AQAAABYWAAAAAAAAFhYAAAAAAABeAAAAICBhc3luYyBzdGVwSW4oKSB7CiAgICBhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCdzdGVwSW4nKTsKICAgIHJldHVybiBhd2FpdCB0aGlzLndhaXRSdW4oKTsKICB9Cg",
					"AQAAAAAAAAABAAAAFhYAAAAAAAB0FgAAAAAAAAAAAAAAAAAA"
				],
				[
					33,
					2,
					"paste",
					null,
					"AgAAABYWAAAAAAAAdBYAAAAAAAAAAAAAdBYAAAAAAADSFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhYAAAAAAAAWFgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"paste",
					null,
					"AgAAAHwWAAAAAAAAgxYAAAAAAAAAAAAAgxYAAAAAAACDFgAAAAAAAAYAAABzdGVwSW4",
					"AQAAAAAAAAABAAAAfBYAAAAAAACCFgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"paste",
					null,
					"AgAAAKQWAAAAAAAAqxYAAAAAAAAAAAAAqxYAAAAAAACrFgAAAAAAAAYAAABzdGVwSW4",
					"AQAAAAAAAAABAAAApBYAAAAAAACqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAADVFgAAAAAAAFYAAAAgIHN0ZXBPdXQoKSB7CiAgICByZXR1cm4gdGhpcy5zZW5kUmVxdWVzdCgnc3RlcE91dCcpLnRoZW4ocmVzcCA9PiB0aGlzLndhaXRSdW4oKSk7CiAgfQ",
					"AQAAAAAAAAABAAAA1BYAAAAAAAAqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"cut",
					null,
					"AQAAAHQWAAAAAAAAdBYAAAAAAABhAAAAICBhc3luYyBzdGVwT3V0KCkgewogICAgYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnc3RlcE91dCcpOwogICAgcmV0dXJuIGF3YWl0IHRoaXMud2FpdFJ1bigpOwogIH0KIA",
					"AQAAAAAAAAABAAAA1RYAAAAAAAB0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"paste",
					null,
					"AgAAAHQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAAA2FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBYAAAAAAAB0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "next"
					},
					"BgAAAN0WAAAAAAAA3hYAAAAAAAAAAAAA3hYAAAAAAADeFgAAAAAAAAcAAABzdGVwT3V0LxcAAAAAAAAvFwAAAAAAAAEAAAAg3hYAAAAAAADfFgAAAAAAAAAAAADfFgAAAAAAAOAWAAAAAAAAAAAAAOAWAAAAAAAA4RYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RYAAAAAAADkFgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste",
					null,
					"AgAAAAIXAAAAAAAABhcAAAAAAAAAAAAABhcAAAAAAAAGFwAAAAAAAAcAAABzdGVwT3V0",
					"AQAAAAAAAAABAAAAAhcAAAAAAAAJFwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAC4XAAAAAAAALxcAAAAAAAAAAAAALxcAAAAAAAAvFwAAAAAAAFIAAAAKCiAgbmV4dCgpIHsKICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0KCduZXh0JykudGhlbihyZXNwID0+IHRoaXMud2FpdFJ1bigpKTsKICB9",
					"AQAAAAAAAAABAAAALhcAAAAAAACAFwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"cut",
					null,
					"AQAAANUWAAAAAAAA1RYAAAAAAABaAAAAICBhc3luYyBuZXh0KCkgewogICAgYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnbmV4dCcpOwogICAgcmV0dXJuIGF3YWl0IHRoaXMud2FpdFJ1bigpOwogIH0g",
					"AQAAAAAAAAABAAAA1RYAAAAAAAAvFwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					2,
					"paste",
					null,
					"AgAAANUWAAAAAAAALxcAAAAAAAAAAAAALxcAAAAAAACJFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RYAAAAAAADVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "cio"
					},
					"BAAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA4FwAAAAAAAAQAAABuZXh0OBcAAAAAAAA5FwAAAAAAAAAAAAA5FwAAAAAAADoXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxcAAAAAAAA7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"left_delete",
					null,
					"AgAAADkXAAAAAAAAORcAAAAAAAABAAAAbzgXAAAAAAAAOBcAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAOhcAAAAAAAA6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "ontinue"
					},
					"BwAAADgXAAAAAAAAORcAAAAAAAAAAAAAORcAAAAAAAA6FwAAAAAAAAAAAAA6FwAAAAAAADsXAAAAAAAAAAAAADsXAAAAAAAAPBcAAAAAAAAAAAAAPBcAAAAAAAA9FwAAAAAAAAAAAAA9FwAAAAAAAD4XAAAAAAAAAAAAAD4XAAAAAAAAPxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBcAAAAAAAA4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"paste",
					null,
					"AgAAAGAXAAAAAAAAaBcAAAAAAAAAAAAAaBcAAAAAAABoFwAAAAAAAAQAAABuZXh0",
					"AQAAAAAAAAABAAAAYBcAAAAAAABkFwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJEXAAAAAAAAkhcAAAAAAAAAAAAAkhcAAAAAAACSFwAAAAAAAFkAAAAKICBjb250aW51ZSgpIHsKICAgIHJldHVybiB0aGlzLnNlbmRSZXF1ZXN0KCdjb250aW51ZScpLnRoZW4ocmVzcCA9PiB0aGlzLndhaXRSdW4oKSk7CiAgfQ",
					"AQAAAAAAAAABAAAAkRcAAAAAAADqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAkhcAAAAAAACSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": ".,"
					},
					"AgAAAOoVAAAAAAAA6xUAAAAAAAAAAAAA6xUAAAAAAADsFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hUAAAAAAADqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwVAAAAAAAA7RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BUAAAAAAADsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					3,
					"left_delete",
					null,
					"AwAAAOwVAAAAAAAA7BUAAAAAAAABAAAAIOsVAAAAAAAA6xUAAAAAAAABAAAALOoVAAAAAAAA6hUAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA7RUAAAAAAADtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOoVAAAAAAAA6xUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hUAAAAAAADqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsVAAAAAAAA7BUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xUAAAAAAADrFQAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOwVAAAAAAAA7hUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BUAAAAAAADsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAO0VAAAAAAAA7hUAAAAAAAAAAAAA7hUAAAAAAADvFQAAAAAAAAAAAADvFQAAAAAAAPAVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RUAAAAAAADtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"left_delete",
					null,
					"AQAAADcVAAAAAAAANxUAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADcVAAAAAAAAORUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxUAAAAAAAA3FQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					7,
					"right_delete",
					null,
					"BwAAADgVAAAAAAAAOBUAAAAAAAABAAAAKTgVAAAAAAAAOBUAAAAAAAABAAAAIDgVAAAAAAAAOBUAAAAAAAABAAAAYTgVAAAAAAAAOBUAAAAAAAABAAAAczgVAAAAAAAAOBUAAAAAAAABAAAAeTgVAAAAAAAAOBUAAAAAAAABAAAAbjgVAAAAAAAAOBUAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"right_delete",
					null,
					"AQAAADgVAAAAAAAAOBUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOBUAAAAAAAA4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					2,
					"right_delete",
					null,
					"AgAAADwVAAAAAAAAPBUAAAAAAAABAAAAPTwVAAAAAAAAPBUAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAPBUAAAAAAAA8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"left_delete",
					null,
					"AQAAADsVAAAAAAAAOxUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPBUAAAAAAAA8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADsVAAAAAAAAPBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxUAAAAAAAA7FQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAACwVAAAAAAAALRUAAAAAAAAAAAAALRUAAAAAAAAuFQAAAAAAAAAAAAAuFQAAAAAAAC8VAAAAAAAAAAAAAC8VAAAAAAAAMBUAAAAAAAAAAAAAMBUAAAAAAAAxFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBUAAAAAAAAsFQAAAAAAAAAAAAAAgFBA"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADEVAAAAAAAAMhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRUAAAAAAAAxFQAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOcVAAAAAAAA6BUAAAAAAAAAAAAA6BUAAAAAAADoFQAAAAAAAAcAAAAsIHtyZXR9",
					"AQAAAAAAAAABAAAA5xUAAAAAAADuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"CAAAAEQVAAAAAAAARRUAAAAAAAAAAAAARRUAAAAAAABLFQAAAAAAAAAAAABLFQAAAAAAAE0VAAAAAAAAAAAAAE0VAAAAAAAAThUAAAAAAAAAAAAAThUAAAAAAABPFQAAAAAAAAAAAABPFQAAAAAAAFAVAAAAAAAAAAAAAFAVAAAAAAAAURUAAAAAAAAAAAAAURUAAAAAAABSFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBUAAAAAAABEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAFIVAAAAAAAAUxUAAAAAAAAAAAAAUxUAAAAAAABUFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhUAAAAAAABSFQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFQVAAAAAAAAVhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBUAAAAAAABUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "sock"
					},
					"BAAAAFUVAAAAAAAAVhUAAAAAAAAAAAAAVhUAAAAAAABXFQAAAAAAAAAAAABXFQAAAAAAAFgVAAAAAAAAAAAAAFgVAAAAAAAAWRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVRUAAAAAAABVFQAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFoVAAAAAAAAWxUAAAAAAAAAAAAAWxUAAAAAAABcFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhUAAAAAAABaFQAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": " conn;"
					},
					"BgAAAFwVAAAAAAAAXRUAAAAAAAAAAAAAXRUAAAAAAABeFQAAAAAAAAAAAABeFQAAAAAAAF8VAAAAAAAAAAAAAF8VAAAAAAAAYBUAAAAAAAAAAAAAYBUAAAAAAABhFQAAAAAAAAAAAABhFQAAAAAAAGIVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBUAAAAAAABcFQAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "('')"
					},
					"BAAAAPAVAAAAAAAA8RUAAAAAAAAAAAAA8RUAAAAAAADyFQAAAAAAAAAAAADyFQAAAAAAAPMVAAAAAAAAAAAAAPMVAAAAAAAA9BUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BUAAAAAAADwFQAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQVAAAAAAAA9RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BUAAAAAAAD0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"left_delete",
					null,
					"AQAAAPMVAAAAAAAA8xUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA9BUAAAAAAAD0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAPMVAAAAAAAA9BUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xUAAAAAAADzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"left_delete",
					null,
					"AQAAAPAVAAAAAAAA8BUAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA8RUAAAAAAADxFQAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAPAVAAAAAAAA8RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BUAAAAAAADwFQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "++"
					},
					"AgAAAPIVAAAAAAAA8xUAAAAAAAAAAAAA8xUAAAAAAAD0FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hUAAAAAAADyFQAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "sock.fd"
					},
					"BwAAAPMVAAAAAAAA9BUAAAAAAAAAAAAA9BUAAAAAAAD1FQAAAAAAAAAAAAD1FQAAAAAAAPYVAAAAAAAAAAAAAPYVAAAAAAAA9xUAAAAAAAAAAAAA9xUAAAAAAAD4FQAAAAAAAAAAAAD4FQAAAAAAAPkVAAAAAAAAAAAAAPkVAAAAAAAA+hUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xUAAAAAAADzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "sg"
					},
					"AwAAAI4VAAAAAAAAjxUAAAAAAAAAAAAAjxUAAAAAAACPFQAAAAAAABsAAAAobXNnID0gSlNPTi5zdHJpbmdpZnkobXNnKSmPFQAAAAAAAJAVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhUAAAAAAACpFQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					2,
					"left_delete",
					null,
					"AgAAAI8VAAAAAAAAjxUAAAAAAAABAAAAZ44VAAAAAAAAjhUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAkBUAAAAAAACQFQAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAAI4VAAAAAAAAjxUAAAAAAAAAAAAAjxUAAAAAAACQFQAAAAAAAAAAAACQFQAAAAAAAJEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhUAAAAAAACOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"cut",
					null,
					"AQAAAJQVAAAAAAAAlBUAAAAAAABrAAAAICAgICAgICBpZihwcm9jZXNzLmVudi5ERUJVRykgY29uc29sZS5sb2coJ1x4MWJbMzg7NTszM21TRU5EXHgxYlswbSBbJytzb2NrLmZkKyddICgnICsgcmV0ICsgJykgJyArIG1zZyApOwo",
					"AQAAAAAAAAABAAAAlBUAAAAAAAD/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAlBUAAAAAAACUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"left_delete",
					null,
					"AQAAAJUVAAAAAAAAlRUAAAAAAABuAAAAICAgICAgICBpZihwcm9jZXNzLmVudi5ERUJVRykgY29uc29sZS5sb2coJ1x4MWJbMzg7NTszM21TRU5EXHgxYlswbSBbJyArIHNvY2suZmQgKyAnXSAoJyArIHJldCArICcpICcgKyBtc2cpOwo",
					"AQAAAAAAAAABAAAAlRUAAAAAAAADFgAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AwAAAGgVAAAAAAAAaRUAAAAAAAAAAAAAaRUAAAAAAABpFQAAAAAAAA8AAAAgICAgY29uc3QgcmV0ID1pFQAAAAAAAGoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxUAAAAAAABoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					2,
					"left_delete",
					null,
					"AgAAAGkVAAAAAAAAaRUAAAAAAAABAAAAZWgVAAAAAAAAaBUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAahUAAAAAAABqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAGgVAAAAAAAAaRUAAAAAAAAAAAAAaRUAAAAAAABqFQAAAAAAAAAAAABqFQAAAAAAAGsVAAAAAAAAAAAAAGsVAAAAAAAAbBUAAAAAAAAAAAAAbBUAAAAAAABtFQAAAAAAAAAAAABtFQAAAAAAAG4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBUAAAAAAABoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4VAAAAAAAAbxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhUAAAAAAABuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": " sebnd"
					},
					"BgAAACUVAAAAAAAAJhUAAAAAAAAAAAAAJhUAAAAAAAAnFQAAAAAAAAAAAAAnFQAAAAAAACgVAAAAAAAAAAAAACgVAAAAAAAAKRUAAAAAAAAAAAAAKRUAAAAAAAAqFQAAAAAAAAAAAAAqFQAAAAAAACsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRUAAAAAAAAlFQAAAAAAAAAAAAAAwGhA"
				],
				[
					383,
					3,
					"left_delete",
					null,
					"AwAAACoVAAAAAAAAKhUAAAAAAAABAAAAZCkVAAAAAAAAKRUAAAAAAAABAAAAbigVAAAAAAAAKBUAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAKxUAAAAAAAArFQAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "ndMessage:"
					},
					"CgAAACgVAAAAAAAAKRUAAAAAAAAAAAAAKRUAAAAAAAAqFQAAAAAAAAAAAAAqFQAAAAAAACsVAAAAAAAAAAAAACsVAAAAAAAALBUAAAAAAAAAAAAALBUAAAAAAAAtFQAAAAAAAAAAAAAtFQAAAAAAAC4VAAAAAAAAAAAAAC4VAAAAAAAALxUAAAAAAAAAAAAALxUAAAAAAAAwFQAAAAAAAAAAAAAwFQAAAAAAADEVAAAAAAAAAAAAADEVAAAAAAAAMhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBUAAAAAAAAoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": " conn.sendM"
					},
					"CwAAADIVAAAAAAAAMxUAAAAAAAAAAAAAMxUAAAAAAAA0FQAAAAAAAAAAAAA0FQAAAAAAADUVAAAAAAAAAAAAADUVAAAAAAAANhUAAAAAAAAAAAAANhUAAAAAAAA3FQAAAAAAAAAAAAA3FQAAAAAAADgVAAAAAAAAAAAAADgVAAAAAAAAORUAAAAAAAAAAAAAORUAAAAAAAA6FQAAAAAAAAAAAAA6FQAAAAAAADsVAAAAAAAAAAAAADsVAAAAAAAAPBUAAAAAAAAAAAAAPBUAAAAAAAA9FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhUAAAAAAAAyFQAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "essage"
					},
					"BgAAAD0VAAAAAAAAPhUAAAAAAAAAAAAAPhUAAAAAAAA/FQAAAAAAAAAAAAA/FQAAAAAAAEAVAAAAAAAAAAAAAEAVAAAAAAAAQRUAAAAAAAAAAAAAQRUAAAAAAABCFQAAAAAAAAAAAABCFQAAAAAAAEMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRUAAAAAAAA9FQAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": " });"
					},
					"BAAAAEMVAAAAAAAARBUAAAAAAAAAAAAARBUAAAAAAABFFQAAAAAAAAAAAABFFQAAAAAAAEYVAAAAAAAAAAAAAEYVAAAAAAAARxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxUAAAAAAABDFQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"left_delete",
					null,
					"AQAAAEcVAAAAAAAARxUAAAAAAACLAAAACiAgICAgIGFzeW5jIHNlbmRNZXNzYWdlKG1zZykgewogICAgICAgIGNvbnN0IHsgc29jayB9ID0gY29ubjsKICAgIHJldHVybiAgYXdhaXQgY29ubi5zZW5kTWVzc2FnZShtc2cpOwogICAgICAgIHJldHVybiByZXQ7CiAgICAgIH0KICAgIH0pOw",
					"AQAAAAAAAAABAAAARxUAAAAAAADSFQAAAAAAAAAAAAAA4IFA"
				],
				[
					512,
					1,
					"cut",
					null,
					"AQAAAAMSAAAAAAAAAxIAAAAAAAB9AAAAICAgICAgICAgICAgICAgIGlmKChhd2FpdCBjYWxsYmFjay5jYWxsKHJlY2VpdmVyLCBldmVudCkpID09PSBmYWxzZSkgaWYgKHJlY2VpdmVyW3Byb3BdID09PSBjYWxsYmFjaykgZGVsZXRlIHJlY2VpdmVyW3Byb3BdOwo",
					"AQAAAAAAAAABAAAAAxIAAAAAAACAEgAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					2,
					"paste",
					null,
					"AgAAAAMSAAAAAAAAgBIAAAAAAAAAAAAAgBIAAAAAAAD9EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxIAAAAAAAADEgAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI8SAAAAAAAAkBIAAAAAAAAAAAAAkBIAAAAAAACQEgAAAAAAAAsAAAAgaWYoKGF3YWl0IA",
					"AQAAAAAAAAABAAAAjxIAAAAAAACaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAK4SAAAAAAAArxIAAAAAAAAAAAAArxIAAAAAAACvEgAAAAAAAC0AAAApID09PSBmYWxzZSkgaWYgKHJlY2VpdmVyW3Byb3BdID09PSBjYWxsYmFjayk",
					"AQAAAAAAAAABAAAArhIAAAAAAADbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"left_delete",
					null,
					"AQAAAK4SAAAAAAAArhIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAArxIAAAAAAACvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK4SAAAAAAAArxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhIAAAAAAACuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK8SAAAAAAAAsBIAAAAAAAAAAAAAsBIAAAAAAADAEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxIAAAAAAACvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABMSAAAAAAAAFBIAAAAAAAAAAAAAFBIAAAAAAAAVEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExIAAAAAAAATEgAAAAAAAAAAAAAAAGZA"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "console.config"
					},
					"DgAAAPERAAAAAAAA8hEAAAAAAAAAAAAA8hEAAAAAAADzEQAAAAAAAAAAAADzEQAAAAAAAPQRAAAAAAAAAAAAAPQRAAAAAAAA9REAAAAAAAAAAAAA9REAAAAAAAD2EQAAAAAAAAAAAAD2EQAAAAAAAPcRAAAAAAAAAAAAAPcRAAAAAAAA+BEAAAAAAAAAAAAA+BEAAAAAAAD5EQAAAAAAAAAAAAD5EQAAAAAAAPoRAAAAAAAAAAAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA+xEAAAAAAAD8EQAAAAAAAAAAAAD8EQAAAAAAAP0RAAAAAAAAAAAAAP0RAAAAAAAA/hEAAAAAAAAAAAAA/hEAAAAAAAD/EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8REAAAAAAADxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "({"
					},
					"AgAAAP8RAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAABEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xEAAAAAAAD/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": " compact:"
					},
					"CQAAAAESAAAAAAAAAhIAAAAAAAAAAAAAAhIAAAAAAAADEgAAAAAAAAAAAAADEgAAAAAAAAQSAAAAAAAAAAAAAAQSAAAAAAAABRIAAAAAAAAAAAAABRIAAAAAAAAGEgAAAAAAAAAAAAAGEgAAAAAAAAcSAAAAAAAAAAAAAAcSAAAAAAAACBIAAAAAAAAAAAAACBIAAAAAAAAJEgAAAAAAAAAAAAAJEgAAAAAAAAoSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARIAAAAAAAABEgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": " 0}),"
					},
					"BQAAAAoSAAAAAAAACxIAAAAAAAAAAAAACxIAAAAAAAAMEgAAAAAAAAAAAAAMEgAAAAAAAA0SAAAAAAAAAAAAAA0SAAAAAAAADhIAAAAAAAAAAAAADhIAAAAAAAAPEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChIAAAAAAAAKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8SAAAAAAAAEBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxIAAAAAAAAPEgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADoPAAAAAAAAOw8AAAAAAAAAAAAAOw8AAAAAAAA7DwAAAAAAAAIAAAAvKg",
					"AQAAAAAAAAABAAAAPA8AAAAAAAA6DwAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFYPAAAAAAAAVw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVg8AAAAAAABWDwAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					2,
					"right_delete",
					null,
					"AgAAAFcPAAAAAAAAVw8AAAAAAAABAAAALVcPAAAAAAAAVw8AAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAVw8AAAAAAABXDwAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					11,
					"right_delete",
					null,
					"CwAAAFcPAAAAAAAAVw8AAAAAAAABAAAALFcPAAAAAAAAVw8AAAAAAAABAAAAIFcPAAAAAAAAVw8AAAAAAAABAAAAZFcPAAAAAAAAVw8AAAAAAAABAAAAZVcPAAAAAAAAVw8AAAAAAAABAAAAcFcPAAAAAAAAVw8AAAAAAAABAAAAdFcPAAAAAAAAVw8AAAAAAAABAAAAaFcPAAAAAAAAVw8AAAAAAAABAAAAOlcPAAAAAAAAVw8AAAAAAAABAAAAIFcPAAAAAAAAVw8AAAAAAAABAAAAMVcPAAAAAAAAVw8AAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAVw8AAAAAAABXDwAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					2,
					"right_delete",
					null,
					"AgAAAFsPAAAAAAAAWw8AAAAAAAABAAAAKlsPAAAAAAAAWw8AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAWw8AAAAAAABbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAWw8AAAAAAABbDwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAADYPAAAAAAAANg8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANw8AAAAAAAA3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsRAAAAAAAA3BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xEAAAAAAADbEQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 11563,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 30703,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					303,
					1,
					"cut",
					null,
					"AQAAAGQgAAAAAAAAZCAAAAAAAAAvAAAAICAgICAgY29uc29sZS5sb2coJ29uc3RvcHBlZCcsIHsgYXJncywgc3QgfSk7Cgo",
					"AQAAAAAAAAABAAAAZCAAAAAAAACTIAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"paste",
					null,
					"AQAAAD4gAAAAAAAAbSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPiAAAAAAAAA+IAAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					3,
					"left_delete",
					null,
					"AwAAAGUgAAAAAAAAZSAAAAAAAAACAAAAc3RkIAAAAAAAAGQgAAAAAAAAAQAAACBjIAAAAAAAAGMgAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAZSAAAAAAAABnIAAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALUdAAAAAAAAth0AAAAAAAAAAAAAth0AAAAAAADAHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtR0AAAAAAAC1HQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAMAdAAAAAAAAwR0AAAAAAAAAAAAAwR0AAAAAAADCHQAAAAAAAAAAAADCHQAAAAAAAMMdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwB0AAAAAAADAHQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": " result="
					},
					"CAAAAMMdAAAAAAAAxB0AAAAAAAAAAAAAxB0AAAAAAADFHQAAAAAAAAAAAADFHQAAAAAAAMYdAAAAAAAAAAAAAMYdAAAAAAAAxx0AAAAAAAAAAAAAxx0AAAAAAADIHQAAAAAAAAAAAADIHQAAAAAAAMkdAAAAAAAAAAAAAMkdAAAAAAAAyh0AAAAAAAAAAAAAyh0AAAAAAADLHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwx0AAAAAAADDHQAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					17,
					"right_delete",
					null,
					"EQAAAMsdAAAAAAAAyx0AAAAAAAABAAAACssdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAIMsdAAAAAAAAyx0AAAAAAAABAAAAYcsdAAAAAAAAyx0AAAAAAAABAAAAd8sdAAAAAAAAyx0AAAAAAAABAAAAYcsdAAAAAAAAyx0AAAAAAAABAAAAacsdAAAAAAAAyx0AAAAAAAABAAAAdMsdAAAAAAAAyx0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAyx0AAAAAAADLHQAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "\nawait"
					},
					"BwAAACEeAAAAAAAAIh4AAAAAAAAAAAAAIh4AAAAAAAAsHgAAAAAAAAAAAAAsHgAAAAAAAC0eAAAAAAAAAAAAAC0eAAAAAAAALh4AAAAAAAAAAAAALh4AAAAAAAAvHgAAAAAAAAAAAAAvHgAAAAAAADAeAAAAAAAAAAAAADAeAAAAAAAAMR4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIR4AAAAAAAAhHgAAAAAAAP///////+9/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " result;"
					},
					"CAAAADEeAAAAAAAAMh4AAAAAAAAAAAAAMh4AAAAAAAAzHgAAAAAAAAAAAAAzHgAAAAAAADQeAAAAAAAAAAAAADQeAAAAAAAANR4AAAAAAAAAAAAANR4AAAAAAAA2HgAAAAAAAAAAAAA2HgAAAAAAADceAAAAAAAAAAAAADceAAAAAAAAOB4AAAAAAAAAAAAAOB4AAAAAAAA5HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR4AAAAAAAAxHgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHodAAAAAAAAex0AAAAAAAAAAAAAex0AAAAAAAB8HQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeh0AAAAAAAB6HQAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOUdAAAAAAAA5h0AAAAAAAAAAAAA5h0AAAAAAADnHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5R0AAAAAAADlHQAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"left_delete",
					null,
					"AQAAAEs/AAAAAAAASz8AAAAAAAABAAAAIQ",
					"AQAAAAAAAAABAAAATD8AAAAAAABMPwAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": " <="
					},
					"AwAAAFc/AAAAAAAAWD8AAAAAAAAAAAAAWD8AAAAAAABZPwAAAAAAAAAAAABZPwAAAAAAAFo/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVz8AAAAAAABXPwAAAAAAAP///////+9/"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAFo/AAAAAAAAWz8AAAAAAAAAAAAAWz8AAAAAAABcPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWj8AAAAAAABaPwAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAABg/AAAAAAAAGT8AAAAAAAAAAAAAGT8AAAAAAAAaPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGD8AAAAAAAAYPwAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAABo/AAAAAAAAGz8AAAAAAAAAAAAAGz8AAAAAAAAcPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGj8AAAAAAAAaPwAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAAMfAAAAAAAABB8AAAAAAAAAAAAABB8AAAAAAAAFHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAx8AAAAAAAADHwAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAAAUfAAAAAAAABh8AAAAAAAAAAAAABh8AAAAAAAAHHwAAAAAAAAAAAAAHHwAAAAAAAAgfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABR8AAAAAAAAFHwAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"right_delete",
					null,
					"AQAAAAgfAAAAAAAACB8AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAACB8AAAAAAAAIHwAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"left_delete",
					null,
					"AQAAAAcfAAAAAAAABx8AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAACB8AAAAAAAAIHwAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					9,
					"right_delete",
					null,
					"CQAAAAcfAAAAAAAABx8AAAAAAAABAAAAIAcfAAAAAAAABx8AAAAAAAABAAAAbQcfAAAAAAAABx8AAAAAAAABAAAAcwcfAAAAAAAABx8AAAAAAAABAAAAZwcfAAAAAAAABx8AAAAAAAABAAAAIAcfAAAAAAAABx8AAAAAAAABAAAAPQcfAAAAAAAABx8AAAAAAAABAAAAPgcfAAAAAAAABx8AAAAAAAABAAAAIAcfAAAAAAAABx8AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAABx8AAAAAAAAHHwAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAAAcfAAAAAAAACB8AAAAAAAAAAAAACB8AAAAAAAAJHwAAAAAAAAAAAAAJHwAAAAAAAAofAAAAAAAAAAAAAAofAAAAAAAACx8AAAAAAAAAAAAACx8AAAAAAAAMHwAAAAAAAAAAAAAMHwAAAAAAAA0fAAAAAAAAAAAAAA0fAAAAAAAADh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABx8AAAAAAAAHHwAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " this.s"
					},
					"BwAAAA4fAAAAAAAADx8AAAAAAAAAAAAADx8AAAAAAAAQHwAAAAAAAAAAAAAQHwAAAAAAABEfAAAAAAAAAAAAABEfAAAAAAAAEh8AAAAAAAAAAAAAEh8AAAAAAAATHwAAAAAAAAAAAAATHwAAAAAAABQfAAAAAAAAAAAAABQfAAAAAAAAFR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADh8AAAAAAAAOHwAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFQfAAAAAAAAVR8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVB8AAAAAAABUHwAAAAAAAP///////+9/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFUfAAAAAAAAVh8AAAAAAAAAAAAAVh8AAAAAAABXHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVR8AAAAAAABVHwAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAAAQfAAAAAAAABR8AAAAAAAAAAAAABR8AAAAAAAAGHwAAAAAAAAAAAAAGHwAAAAAAAAcfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABB8AAAAAAAAEHwAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAAsfAAAAAAAADB8AAAAAAAAAAAAADB8AAAAAAAAQHwAAAAAAAAAAAAAMHwAAAAAAAAwfAAAAAAAABAAAACAgICAMHwAAAAAAABIfAAAAAAAAAAAAABIfAAAAAAAAEx8AAAAAAAAAAAAAEx8AAAAAAAAZHwAAAAAAAAAAAAAMHwAAAAAAAAwfAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAACx8AAAAAAAALHwAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAAwfAAAAAAAADR8AAAAAAAAAAAAADR8AAAAAAAAOHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADB8AAAAAAAAMHwAAAAAAAAAAAAAAgFBA"
				],
				[
					517,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA4fAAAAAAAAEB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADh8AAAAAAAAOHwAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAA8fAAAAAAAAEB8AAAAAAAAAAAAAEB8AAAAAAAARHwAAAAAAAAAAAAARHwAAAAAAABIfAAAAAAAAAAAAABIfAAAAAAAAEx8AAAAAAAAAAAAAEx8AAAAAAAAUHwAAAAAAAAAAAAAUHwAAAAAAABUfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADx8AAAAAAAAPHwAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": " msg!="
					},
					"BgAAABUfAAAAAAAAFh8AAAAAAAAAAAAAFh8AAAAAAAAXHwAAAAAAAAAAAAAXHwAAAAAAABgfAAAAAAAAAAAAABgfAAAAAAAAGR8AAAAAAAAAAAAAGR8AAAAAAAAaHwAAAAAAAAAAAAAaHwAAAAAAABsfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFR8AAAAAAAAVHwAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsfAAAAAAAAHB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGx8AAAAAAAAbHwAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABwfAAAAAAAAHh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHB8AAAAAAAAcHwAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": "string"
					},
					"BgAAAB0fAAAAAAAAHh8AAAAAAAAAAAAAHh8AAAAAAAAfHwAAAAAAAAAAAAAfHwAAAAAAACAfAAAAAAAAAAAAACAfAAAAAAAAIR8AAAAAAAAAAAAAIR8AAAAAAAAiHwAAAAAAAAAAAAAiHwAAAAAAACMfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHR8AAAAAAAAdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "\nmsg=JSON."
					},
					"CwAAACUfAAAAAAAAJh8AAAAAAAAAAAAAJh8AAAAAAAAoHwAAAAAAAAAAAAAoHwAAAAAAACkfAAAAAAAAAAAAACkfAAAAAAAAKh8AAAAAAAAAAAAAKh8AAAAAAAArHwAAAAAAAAAAAAArHwAAAAAAACwfAAAAAAAAAAAAACwfAAAAAAAALR8AAAAAAAAAAAAALR8AAAAAAAAuHwAAAAAAAAAAAAAuHwAAAAAAAC8fAAAAAAAAAAAAAC8fAAAAAAAAMB8AAAAAAAAAAAAAMB8AAAAAAAAxHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJR8AAAAAAAAlHwAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "stringify"
					},
					"CQAAADEfAAAAAAAAMh8AAAAAAAAAAAAAMh8AAAAAAAAzHwAAAAAAAAAAAAAzHwAAAAAAADQfAAAAAAAAAAAAADQfAAAAAAAANR8AAAAAAAAAAAAANR8AAAAAAAA2HwAAAAAAAAAAAAA2HwAAAAAAADcfAAAAAAAAAAAAADcfAAAAAAAAOB8AAAAAAAAAAAAAOB8AAAAAAAA5HwAAAAAAAAAAAAA5HwAAAAAAADofAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMR8AAAAAAAAxHwAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADofAAAAAAAAPB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOh8AAAAAAAA6HwAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "ms"
					},
					"AgAAADsfAAAAAAAAPB8AAAAAAAAAAAAAPB8AAAAAAAA9HwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOx8AAAAAAAA7HwAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"left_delete",
					null,
					"AQAAAD0fAAAAAAAAPR8AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAPh8AAAAAAAA+HwAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "g);"
					},
					"AwAAAD0fAAAAAAAAPh8AAAAAAAAAAAAAPh8AAAAAAAA/HwAAAAAAAAAAAAA/HwAAAAAAAEAfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPR8AAAAAAAA9HwAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"paste",
					null,
					"AQAAAEMfAAAAAAAArh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQx8AAAAAAABDHwAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": "this."
					},
					"BQAAAIofAAAAAAAAix8AAAAAAAAAAAAAix8AAAAAAACMHwAAAAAAAAAAAACMHwAAAAAAAI0fAAAAAAAAAAAAAI0fAAAAAAAAjh8AAAAAAAAAAAAAjh8AAAAAAACPHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAih8AAAAAAACKHwAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAALcfAAAAAAAAuB8AAAAAAAAAAAAAuB8AAAAAAAC4HwAAAAAAAAYAAAByZXR1cm64HwAAAAAAALkfAAAAAAAAAAAAALkfAAAAAAAAuh8AAAAAAAAAAAAAuh8AAAAAAAC7HwAAAAAAAAAAAAC7HwAAAAAAALwfAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtx8AAAAAAAC9HwAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAALwfAAAAAAAAvR8AAAAAAAAAAAAAvR8AAAAAAAC+HwAAAAAAAAAAAAC+HwAAAAAAAL8fAAAAAAAAAAAAAL8fAAAAAAAAwB8AAAAAAAAAAAAAwB8AAAAAAADBHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvB8AAAAAAAC8HwAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"cut",
					null,
					"AQAAAEEfAAAAAAAAQR8AAAAAAAByAAAAICAgICAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbVNFTkRceDFiWzBtIFsnK3RoaXMuc29jay5mZCsnXSAoJyArIHJldCArICcpICcgKyBtc2cgKTsK",
					"AQAAAAAAAAABAAAAQR8AAAAAAACzHwAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAFAfAAAAAAAAUR8AAAAAAAAAAAAAUR8AAAAAAABSHwAAAAAAAAAAAABSHwAAAAAAAFMfAAAAAAAAAAAAAFMfAAAAAAAAVB8AAAAAAAAAAAAAVB8AAAAAAABVHwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUB8AAAAAAABQHwAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUfAAAAAAAAVh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVR8AAAAAAABVHwAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAJ0fAAAAAAAAnh8AAAAAAAAAAAAAnh8AAAAAAACiHwAAAAAAAAAAAACeHwAAAAAAAJ4fAAAAAAAABAAAACAgICCeHwAAAAAAAKAfAAAAAAAAAAAAAKAfAAAAAAAAoR8AAAAAAAAAAAAAoR8AAAAAAACjHwAAAAAAAAAAAACeHwAAAAAAAJ4fAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAnR8AAAAAAACdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"paste",
					null,
					"AQAAAJ4fAAAAAAAAECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnh8AAAAAAACeHwAAAAAAAAAAAAAAADZA"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAPceAAAAAAAA+B4AAAAAAAAAAAAA+B4AAAAAAAD5HgAAAAAAAAAAAAD5HgAAAAAAAPoeAAAAAAAAAAAAAPoeAAAAAAAA+x4AAAAAAAAAAAAA+x4AAAAAAAD8HgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9x4AAAAAAAD3HgAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPweAAAAAAAA/R4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/B4AAAAAAAD8HgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA/R4AAAAAAAD9HgAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					2,
					"right_delete",
					null,
					"AgAAAGkfAAAAAAAAaR8AAAAAAAAEAAAAdGhpc2kfAAAAAAAAaR8AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAaR8AAAAAAABtHwAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					2,
					"right_delete",
					null,
					"AgAAAPIfAAAAAAAA8h8AAAAAAAAEAAAAdGhpc/IfAAAAAAAA8h8AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA8h8AAAAAAAD2HwAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFobAAAAAAAAWxsAAAAAAAAAAAAAWxsAAAAAAABiGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhsAAAAAAABaGwAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"paste",
					null,
					"AQAAAFobAAAAAAAAphsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhsAAAAAAABaGwAAAAAAAAAAAAAAQFNA"
				],
				[
					636,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAHAbAAAAAAAAcBsAAAAAAAAIAAAAZnVuY05hbWVwGwAAAAAAAHobAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBsAAAAAAAB4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": "Receivewd"
					},
					"CgAAAHEbAAAAAAAAchsAAAAAAAAAAAAAchsAAAAAAAByGwAAAAAAAAgAAABmdW5jTmFtZXIbAAAAAAAAcxsAAAAAAAAAAAAAcxsAAAAAAAB0GwAAAAAAAAAAAAB0GwAAAAAAAHUbAAAAAAAAAAAAAHUbAAAAAAAAdhsAAAAAAAAAAAAAdhsAAAAAAAB3GwAAAAAAAAAAAAB3GwAAAAAAAHgbAAAAAAAAAAAAAHgbAAAAAAAAeRsAAAAAAAAAAAAAeRsAAAAAAAB6GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRsAAAAAAAB5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					2,
					"left_delete",
					null,
					"AgAAAHkbAAAAAAAAeRsAAAAAAAABAAAAZHgbAAAAAAAAeBsAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAehsAAAAAAAB6GwAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAHgbAAAAAAAAeRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBsAAAAAAAB4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHobAAAAAAAAexsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehsAAAAAAAB6GwAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsbAAAAAAAAfBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexsAAAAAAAB7GwAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHwbAAAAAAAAfhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBsAAAAAAAB8GwAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "len"
					},
					"AwAAAH0bAAAAAAAAfhsAAAAAAAAAAAAAfhsAAAAAAAB/GwAAAAAAAAAAAAB/GwAAAAAAAIAbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRsAAAAAAAB9GwAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAIEbAAAAAAAAghsAAAAAAAAAAAAAghsAAAAAAACDGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRsAAAAAAACBGwAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"cut",
					null,
					"AQAAAIMbAAAAAAAAgxsAAAAAAAAuAAAAICsgJzogXHgxYlszODs1OzE5Nm1iZWZvcmUgY2FsbGJhY2tceDFiWzBtJyk7Cg",
					"AQAAAAAAAAABAAAAgxsAAAAAAACxGwAAAAAAAAAAAAAAgIBA"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIMbAAAAAAAAhBsAAAAAAAAAAAAAhBsAAAAAAACVGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxsAAAAAAACDGwAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"cut",
					null,
					"AQAAAGQbAAAAAAAAZBsAAAAAAAAxAAAAY29uc29sZS5sb2coJ1JlY2VpdmVkJywge2xlbn0pOwogICAgICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAZBsAAAAAAACVGwAAAAAAAAAAAAAAYGdA"
				],
				[
					653,
					1,
					"paste",
					null,
					"AQAAAGQbAAAAAAAAlRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBsAAAAAAABkGwAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"paste",
					null,
					"AQAAAEwcAAAAAAAAfRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBwAAAAAAABMHAAAAAAAAAAAAAAAgGBA"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAH0cAAAAAAAAfhwAAAAAAAAAAAAAfhwAAAAAAACPHAAAAAAAAAAAAACEGwAAAAAAAIQbAAAAAAAAEQAAACAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAfRwAAAAAAAB9HAAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"cut",
					null,
					"AQAAAC8cAAAAAAAALxwAAAAAAAAsAAAAICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkJywge2xlbn0pOwo",
					"AQAAAAAAAAABAAAALxwAAAAAAABbHAAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"paste",
					null,
					"AQAAABIdAAAAAAAAPh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEh0AAAAAAAASHQAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": "ret.s"
					},
					"BgAAADcdAAAAAAAAOB0AAAAAAAAAAAAAOB0AAAAAAAA4HQAAAAAAAAMAAABsZW44HQAAAAAAADkdAAAAAAAAAAAAADkdAAAAAAAAOh0AAAAAAAAAAAAAOh0AAAAAAAA7HQAAAAAAAAAAAAA7HQAAAAAAADwdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANx0AAAAAAAA6HQAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					2,
					"left_delete",
					null,
					"AgAAADsdAAAAAAAAOx0AAAAAAAABAAAAczodAAAAAAAAOh0AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAPB0AAAAAAAA8HQAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": ",s"
					},
					"AgAAADodAAAAAAAAOx0AAAAAAAAAAAAAOx0AAAAAAAA8HQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOh0AAAAAAAA6HQAAAAAAAAAAAAAAAPC/"
				],
				[
					745,
					1,
					"cut",
					null,
					"AQAAAKAhAAAAAAAAoCEAAAAAAAAqAAAAICAgICAgY29uc29sZS5sb2coJ29uc3RvcHBlZCcsIHsgYXJncyB9KTsK",
					"AQAAAAAAAAABAAAAoCEAAAAAAADKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"paste",
					null,
					"AQAAANIhAAAAAAAA/CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0iEAAAAAAADSIQAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": ",st"
					},
					"AwAAAPchAAAAAAAA+CEAAAAAAAAAAAAA+CEAAAAAAAD5IQAAAAAAAAAAAAD5IQAAAAAAAPohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9yEAAAAAAAD3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAP4hAAAAAAAA/yEAAAAAAAAAAAAA/yEAAAAAAAAKIgAAAAAAAAAAAAAKIgAAAAAAAAsiAAAAAAAAAAAAAAsiAAAAAAAAFiIAAAAAAAAAAAAA/yEAAAAAAAD/IQAAAAAAAAsAAAAgICAgICAgICAgIAsiAAAAAAAADCIAAAAAAAAAAAAADCIAAAAAAAAXIgAAAAAAAAAAAAAAIgAAAAAAAAAiAAAAAAAACwAAACAgICAgICAgICAg",
					"AQAAAAAAAAABAAAA/iEAAAAAAAD+IQAAAAAAAAAAAAAAAPC/"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AgAAAAAiAAAAAAAAASIAAAAAAAAAAAAAAiIAAAAAAAACIgAAAAAAAAsAAAAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAACIAAAAAAAAAIgAAAAAAAAAAAAAAQF5A"
				],
				[
					765,
					1,
					"left_delete",
					null,
					"AQAAAAAiAAAAAAAAACIAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAASIAAAAAAAABIgAAAAAAAAAAAAAAAPC/"
				],
				[
					766,
					1,
					"insert",
					{
						"characters": "script??="
					},
					"CQAAAAAiAAAAAAAAASIAAAAAAAAAAAAAASIAAAAAAAACIgAAAAAAAAAAAAACIgAAAAAAAAMiAAAAAAAAAAAAAAMiAAAAAAAABCIAAAAAAAAAAAAABCIAAAAAAAAFIgAAAAAAAAAAAAAFIgAAAAAAAAYiAAAAAAAAAAAAAAYiAAAAAAAAByIAAAAAAAAAAAAAByIAAAAAAAAIIgAAAAAAAAAAAAAIIgAAAAAAAAkiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": " st"
					},
					"AwAAAAkiAAAAAAAACiIAAAAAAAAAAAAACiIAAAAAAAALIgAAAAAAAAAAAAALIgAAAAAAAAwiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACSIAAAAAAAAJIgAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAwiAAAAAAAADiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADCIAAAAAAAAMIgAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAA0iAAAAAAAADiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADSIAAAAAAAANIgAAAAAAAAAAAAAAAPC/"
				],
				[
					771,
					1,
					"insert",
					{
						"characters": ".filename;"
					},
					"CgAAAA8iAAAAAAAAECIAAAAAAAAAAAAAECIAAAAAAAARIgAAAAAAAAAAAAARIgAAAAAAABIiAAAAAAAAAAAAABIiAAAAAAAAEyIAAAAAAAAAAAAAEyIAAAAAAAAUIgAAAAAAAAAAAAAUIgAAAAAAABUiAAAAAAAAAAAAABUiAAAAAAAAFiIAAAAAAAAAAAAAFiIAAAAAAAAXIgAAAAAAAAAAAAAXIgAAAAAAABgiAAAAAAAAAAAAABgiAAAAAAAAGSIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyIAAAAAAAAPIgAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					1,
					"paste",
					null,
					"AQAAABoiAAAAAAAATCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGiIAAAAAAAAaIgAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "scro"
					},
					"BQAAAEAiAAAAAAAAQSIAAAAAAAAAAAAAQSIAAAAAAABBIgAAAAAAAAgAAABhcmdzLHN0IEEiAAAAAAAAQiIAAAAAAAAAAAAAQiIAAAAAAABDIgAAAAAAAAAAAABDIgAAAAAAAEQiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCIAAAAAAABIIgAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					2,
					"left_delete",
					null,
					"AgAAAEMiAAAAAAAAQyIAAAAAAAABAAAAb0IiAAAAAAAAQiIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAARCIAAAAAAABEIgAAAAAAAAAAAAAAAPC/"
				],
				[
					796,
					1,
					"insert",
					{
						"characters": "ript"
					},
					"BAAAAEIiAAAAAAAAQyIAAAAAAAAAAAAAQyIAAAAAAABEIgAAAAAAAAAAAABEIgAAAAAAAEUiAAAAAAAAAAAAAEUiAAAAAAAARiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiIAAAAAAABCIgAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAAAiAAAAAAAAASIAAAAAAAAAAAAAASIAAAAAAAACIgAAAAAAAAAAAAACIgAAAAAAAAMiAAAAAAAAAAAAAAMiAAAAAAAABCIAAAAAAAAAAAAABCIAAAAAAAAFIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUiAAAAAAAABiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSIAAAAAAAAFIgAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAwiAAAAAAAADSIAAAAAAAAAAAAADSIAAAAAAAANIgAAAAAAAAIAAAA/Pw",
					"AQAAAAAAAAABAAAADCIAAAAAAAAOIgAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"cut",
					null,
					"AQAAAFo2AAAAAAAAWjYAAAAAAAA0AAAAICBjb25zdCBkYmcgPSBDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbik7Cg",
					"AQAAAAAAAAABAAAAWjYAAAAAAACONgAAAAAAAAAAAAAAAPC/"
				],
				[
					880,
					1,
					"paste",
					null,
					"AQAAAM02AAAAAAAAATcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzTYAAAAAAADNNgAAAAAAAAAAAAAAAPC/"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": ".call"
					},
					"BQAAAOo2AAAAAAAA6zYAAAAAAAAAAAAA6zYAAAAAAADsNgAAAAAAAAAAAADsNgAAAAAAAO02AAAAAAAAAAAAAO02AAAAAAAA7jYAAAAAAAAAAAAA7jYAAAAAAADvNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6jYAAAAAAADqNgAAAAAAAAAAAAAAAPC/"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": "dbg,"
					},
					"BAAAAPA2AAAAAAAA8TYAAAAAAAAAAAAA8TYAAAAAAADyNgAAAAAAAAAAAADyNgAAAAAAAPM2AAAAAAAAAAAAAPM2AAAAAAAA9DYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8DYAAAAAAADwNgAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQ2AAAAAAAA9TYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9DYAAAAAAAD0NgAAAAAAAAAAAAAAAPC/"
				],
				[
					899,
					1,
					"insert",
					{
						"characters": "th"
					},
					"AgAAAGgaAAAAAAAAaRoAAAAAAAAAAAAAaRoAAAAAAABqGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBoAAAAAAABoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					2,
					"left_delete",
					null,
					"AgAAAGkaAAAAAAAAaRoAAAAAAAABAAAAaGgaAAAAAAAAaBoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAahoAAAAAAABqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": "this"
					},
					"BAAAAGgaAAAAAAAAaRoAAAAAAAAAAAAAaRoAAAAAAABqGgAAAAAAAAAAAABqGgAAAAAAAGsaAAAAAAAAAAAAAGsaAAAAAAAAbBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBoAAAAAAABoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					902,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAGwaAAAAAAAAbRoAAAAAAAAAAAAAbRoAAAAAAABuGgAAAAAAAAAAAABuGgAAAAAAAG8aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBoAAAAAAABsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					903,
					1,
					"insert",
					{
						"characters": " {};"
					},
					"BAAAAG8aAAAAAAAAcBoAAAAAAAAAAAAAcBoAAAAAAABxGgAAAAAAAAAAAABxGgAAAAAAAHIaAAAAAAAAAAAAAHIaAAAAAAAAcxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxoAAAAAAABvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					1,
					"insert",
					{
						"characters": "\n\nce"
					},
					"BwAAAHMaAAAAAAAAdBoAAAAAAAAAAAAAdBoAAAAAAAB2GgAAAAAAAAAAAAB2GgAAAAAAAHcaAAAAAAAAAAAAAHcaAAAAAAAAeRoAAAAAAAAAAAAAdBoAAAAAAAB0GgAAAAAAAAIAAAAgIHcaAAAAAAAAeBoAAAAAAAAAAAAAeBoAAAAAAAB5GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxoAAAAAAABzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					2,
					"left_delete",
					null,
					"AgAAAHgaAAAAAAAAeBoAAAAAAAABAAAAZXcaAAAAAAAAdxoAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAeRoAAAAAAAB5GgAAAAAAAAAAAAAAAPC/"
				],
				[
					906,
					1,
					"insert",
					{
						"characters": "define(dbgt"
					},
					"CwAAAHcaAAAAAAAAeBoAAAAAAAAAAAAAeBoAAAAAAAB5GgAAAAAAAAAAAAB5GgAAAAAAAHoaAAAAAAAAAAAAAHoaAAAAAAAAexoAAAAAAAAAAAAAexoAAAAAAAB8GgAAAAAAAAAAAAB8GgAAAAAAAH0aAAAAAAAAAAAAAH0aAAAAAAAAfhoAAAAAAAAAAAAAfhoAAAAAAAB/GgAAAAAAAAAAAAB/GgAAAAAAAIAaAAAAAAAAAAAAAIAaAAAAAAAAgRoAAAAAAAAAAAAAgRoAAAAAAACCGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxoAAAAAAAB3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					907,
					1,
					"left_delete",
					null,
					"AQAAAIEaAAAAAAAAgRoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAghoAAAAAAACCGgAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIEaAAAAAAAAghoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRoAAAAAAACBGgAAAAAAAAAAAAAAAPC/"
				],
				[
					909,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIaAAAAAAAAgxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghoAAAAAAACCGgAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"left_delete",
					null,
					"AQAAALIgAAAAAAAAsiAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAsyAAAAAAAACzIAAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAALIgAAAAAAAAsyAAAAAAAAAAAAAAsyAAAAAAAAC0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsiAAAAAAAACyIAAAAAAAAAAAAAAAAPC/"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAHY2AAAAAAAAdzYAAAAAAAAAAAAAdzYAAAAAAAB4NgAAAAAAAAAAAAB4NgAAAAAAAHk2AAAAAAAAAAAAAHk2AAAAAAAAejYAAAAAAAAAAAAAejYAAAAAAAB7NgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdjYAAAAAAAB2NgAAAAAAAAAAAAAAAPC/"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": " dbg=this??"
					},
					"CwAAAHs2AAAAAAAAfDYAAAAAAAAAAAAAfDYAAAAAAAB9NgAAAAAAAAAAAAB9NgAAAAAAAH42AAAAAAAAAAAAAH42AAAAAAAAfzYAAAAAAAAAAAAAfzYAAAAAAACANgAAAAAAAAAAAACANgAAAAAAAIE2AAAAAAAAAAAAAIE2AAAAAAAAgjYAAAAAAAAAAAAAgjYAAAAAAACDNgAAAAAAAAAAAACDNgAAAAAAAIQ2AAAAAAAAAAAAAIQ2AAAAAAAAhTYAAAAAAAAAAAAAhTYAAAAAAACGNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAezYAAAAAAAB7NgAAAAAAAAAAAAAAAPC/"
				],
				[
					977,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIY2AAAAAAAAiDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhjYAAAAAAACGNgAAAAAAAAAAAAAAAPC/"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIg2AAAAAAAAiTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiDYAAAAAAACINgAAAAAAAAAAAAAAAPC/"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIk2AAAAAAAAijYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiTYAAAAAAACJNgAAAAAAAAAAAAAAAPC/"
				],
				[
					984,
					6,
					"right_delete",
					null,
					"BgAAAP02AAAAAAAA/TYAAAAAAAACAAAAICD9NgAAAAAAAP02AAAAAAAAAQAAAGP9NgAAAAAAAP02AAAAAAAAAQAAAG/9NgAAAAAAAP02AAAAAAAAAQAAAG79NgAAAAAAAP02AAAAAAAAAQAAAHP9NgAAAAAAAP02AAAAAAAAAQAAAHQ",
					"AQAAAAAAAAABAAAA/TYAAAAAAAD9NgAAAAAAAAAAAAAAAAAA"
				],
				[
					996,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAP42AAAAAAAA/zYAAAAAAAAAAAAA/zYAAAAAAAD/NgAAAAAAAAYAAABkYmcgPSA",
					"AQAAAAAAAAABAAAA/jYAAAAAAAAENwAAAAAAAAAAAAAAAPC/"
				],
				[
					1014,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABwiAAAAAAAAHSIAAAAAAAAAAAAAHSIAAAAAAAAdIgAAAAAAAAUAAABjb25zdA",
					"AQAAAAAAAAABAAAAHCIAAAAAAAAhIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1021,
					1,
					"insert",
					{
						"characters": "??"
					},
					"AgAAACUiAAAAAAAAJiIAAAAAAAAAAAAAJiIAAAAAAAAnIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJSIAAAAAAAAlIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAG4bAAAAAAAAbxsAAAAAAAAAAAAAbxsAAAAAAABvGwAAAAAAADEAAAAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCcsIHtsZW59KTsK",
					"AQAAAAAAAAABAAAAbhsAAAAAAACfGwAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPUcAAAAAAAA9hwAAAAAAAAAAAAA9hwAAAAAAAD2HAAAAAAAADYAAAAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSZWNlaXZlZCcsIHtyZXQsc30pOwo",
					"AQAAAAAAAAABAAAA9RwAAAAAAAArHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1068,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIQhAAAAAAAAhSEAAAAAAAAAAAAAhSEAAAAAAACFIQAAAAAAADIAAAAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvbnN0b3BwZWQnLCB7IGFyZ3Msc3QgfSk7Cg",
					"AQAAAAAAAAABAAAAhCEAAAAAAAC2IQAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKMhAAAAAAAApCEAAAAAAAAAAAAApCEAAAAAAACkIQAAAAAAADAAAAAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvbnN0b3BwZWQnLCB7IHNjcmlwdH0pOwo",
					"AQAAAAAAAAABAAAAoyEAAAAAAADTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"insert",
					{
						"characters": "console.config("
					},
					"DwAAAHAiAAAAAAAAcSIAAAAAAAAAAAAAcSIAAAAAAAByIgAAAAAAAAAAAAByIgAAAAAAAHMiAAAAAAAAAAAAAHMiAAAAAAAAdCIAAAAAAAAAAAAAdCIAAAAAAAB1IgAAAAAAAAAAAAB1IgAAAAAAAHYiAAAAAAAAAAAAAHYiAAAAAAAAdyIAAAAAAAAAAAAAdyIAAAAAAAB4IgAAAAAAAAAAAAB4IgAAAAAAAHkiAAAAAAAAAAAAAHkiAAAAAAAAeiIAAAAAAAAAAAAAeiIAAAAAAAB7IgAAAAAAAAAAAAB7IgAAAAAAAHwiAAAAAAAAAAAAAHwiAAAAAAAAfSIAAAAAAAAAAAAAfSIAAAAAAAB+IgAAAAAAAAAAAAB+IgAAAAAAAH8iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCIAAAAAAABwIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "{depth:"
					},
					"BwAAAH8iAAAAAAAAgCIAAAAAAAAAAAAAgCIAAAAAAACBIgAAAAAAAAAAAACBIgAAAAAAAIIiAAAAAAAAAAAAAIIiAAAAAAAAgyIAAAAAAAAAAAAAgyIAAAAAAACEIgAAAAAAAAAAAACEIgAAAAAAAIUiAAAAAAAAAAAAAIUiAAAAAAAAhiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfyIAAAAAAAB/IgAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"insert",
					{
						"characters": " 0}),"
					},
					"BQAAAIYiAAAAAAAAhyIAAAAAAAAAAAAAhyIAAAAAAACIIgAAAAAAAAAAAACIIgAAAAAAAIkiAAAAAAAAAAAAAIkiAAAAAAAAiiIAAAAAAAAAAAAAiiIAAAAAAACLIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiIAAAAAAACGIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIsiAAAAAAAAjCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyIAAAAAAACLIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"paste",
					null,
					"AQAAAAAjAAAAAAAAHSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					1,
					"paste",
					null,
					"AQAAAJsjAAAAAAAAuCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyMAAAAAAACbIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": "cim"
					},
					"BAAAAIAiAAAAAAAAgSIAAAAAAAAAAAAAgSIAAAAAAACBIgAAAAAAAAUAAABkZXB0aIEiAAAAAAAAgiIAAAAAAAAAAAAAgiIAAAAAAACDIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgCIAAAAAAACFIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					2,
					"left_delete",
					null,
					"AgAAAIIiAAAAAAAAgiIAAAAAAAABAAAAbYEiAAAAAAAAgSIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAgyIAAAAAAACDIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"insert",
					{
						"characters": "ompact"
					},
					"BgAAAIEiAAAAAAAAgiIAAAAAAAAAAAAAgiIAAAAAAACDIgAAAAAAAAAAAACDIgAAAAAAAIQiAAAAAAAAAAAAAIQiAAAAAAAAhSIAAAAAAAAAAAAAhSIAAAAAAACGIgAAAAAAAAAAAACGIgAAAAAAAIciAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgSIAAAAAAACBIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					1,
					"paste",
					null,
					"AgAAABMjAAAAAAAAGiMAAAAAAAAAAAAAGiMAAAAAAAAaIwAAAAAAAAUAAABkZXB0aA",
					"AQAAAAAAAAABAAAAEyMAAAAAAAAYIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1123,
					1,
					"paste",
					null,
					"AgAAALAjAAAAAAAAtyMAAAAAAAAAAAAAtyMAAAAAAAC3IwAAAAAAAAUAAABkZXB0aA",
					"AQAAAAAAAAABAAAAsCMAAAAAAAC1IwAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"insert",
					{
						"characters": "cio"
					},
					"AwAAAAAhAAAAAAAAASEAAAAAAAAAAAAAASEAAAAAAAACIQAAAAAAAAAAAAACIQAAAAAAAAMhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					2,
					"left_delete",
					null,
					"AgAAAAIhAAAAAAAAAiEAAAAAAAABAAAAbwEhAAAAAAAAASEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAAyEAAAAAAAADIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1132,
					1,
					"insert",
					{
						"characters": "onsole.config({d"
					},
					"EAAAAAEhAAAAAAAAAiEAAAAAAAAAAAAAAiEAAAAAAAADIQAAAAAAAAAAAAADIQAAAAAAAAQhAAAAAAAAAAAAAAQhAAAAAAAABSEAAAAAAAAAAAAABSEAAAAAAAAGIQAAAAAAAAAAAAAGIQAAAAAAAAchAAAAAAAAAAAAAAchAAAAAAAACCEAAAAAAAAAAAAACCEAAAAAAAAJIQAAAAAAAAAAAAAJIQAAAAAAAAohAAAAAAAAAAAAAAohAAAAAAAACyEAAAAAAAAAAAAACyEAAAAAAAAMIQAAAAAAAAAAAAAMIQAAAAAAAA0hAAAAAAAAAAAAAA0hAAAAAAAADiEAAAAAAAAAAAAADiEAAAAAAAAPIQAAAAAAAAAAAAAPIQAAAAAAABAhAAAAAAAAAAAAABAhAAAAAAAAESEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAASEAAAAAAAABIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": "epth:"
					},
					"BQAAABEhAAAAAAAAEiEAAAAAAAAAAAAAEiEAAAAAAAATIQAAAAAAAAAAAAATIQAAAAAAABQhAAAAAAAAAAAAABQhAAAAAAAAFSEAAAAAAAAAAAAAFSEAAAAAAAAWIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAESEAAAAAAAARIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"insert",
					{
						"characters": " 1}),"
					},
					"BQAAABYhAAAAAAAAFyEAAAAAAAAAAAAAFyEAAAAAAAAYIQAAAAAAAAAAAAAYIQAAAAAAABkhAAAAAAAAAAAAABkhAAAAAAAAGiEAAAAAAAAAAAAAGiEAAAAAAAAbIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFiEAAAAAAAAWIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABshAAAAAAAAHCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyEAAAAAAAAbIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"insert",
					{
						"characters": ",compact:0"
					},
					"CgAAABghAAAAAAAAGSEAAAAAAAAAAAAAGSEAAAAAAAAaIQAAAAAAAAAAAAAaIQAAAAAAABshAAAAAAAAAAAAABshAAAAAAAAHCEAAAAAAAAAAAAAHCEAAAAAAAAdIQAAAAAAAAAAAAAdIQAAAAAAAB4hAAAAAAAAAAAAAB4hAAAAAAAAHyEAAAAAAAAAAAAAHyEAAAAAAAAgIQAAAAAAAAAAAAAgIQAAAAAAACEhAAAAAAAAAAAAACEhAAAAAAAAIiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGCEAAAAAAAAYIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"paste",
					null,
					"AQAAAHEgAAAAAAAAliAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSAAAAAAAABxIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACAeAAAaW1wb3J0IHsgZXhpc3RzU3luYywgcmVhZGVyLCByZWFkZXJTeW5jLCByZWFkU3luYywgd3JpdGVTeW5jIH0gZnJvbSAnZnMnOwppbXBvcnQgeyBjcmVhdGVTZXJ2ZXIsIGdldFNlc3Npb25zLCBMTExfSU5GTywgTExMX05PVElDRSwgTExMX1VTRVIsIExMTF9XQVJOLCBsb2dMZXZlbHMsIHNldExvZyB9IGZyb20gJ25ldCc7CmltcG9ydCB7IGtpbGwsIHNldFJlYWRIYW5kbGVyLCBTSUdURVJNLCBzbGVlcCwgdHR5U2V0UmF3LCBXb3JrZXIgfSBmcm9tICdvcyc7CmltcG9ydCB7IGNsZWFySW50ZXJ2YWwsIHNldEludGVydmFsLCBzZXRUaW1lb3V0IH0gZnJvbSAndGltZXJzJzsKaW1wb3J0IHsgYXRleGl0LCBiaW5kTWV0aG9kcywgYnRvYSwgZGVmaW5lLCBrZXlzLCBmaWx0ZXJLZXlzLCBnZXRPcHQsIGlzT2JqZWN0LCBsYXp5UHJvcGVydGllcywgbWVtb2l6ZSwgbW9kLCBvbmNlLCBwcm9wZXJ0eUxvb2t1cCwgcXVvdGUsIHRvU3RyaW5nLCB0cnlDYXRjaCwgdHlwZXMgfSBmcm9tICd1dGlsJzsKaW1wb3J0IHsgTGlzdCwgVGFibGUgfSBmcm9tICcuL2NsaS1oZWxwZXJzLmpzJzsKaW1wb3J0IHsgRGVidWdnZXJEaXNwYXRjaGVyLCBGaW5kRnVuY3Rpb25zLCBHZXRGdW5jdGlvbk5hbWUsIFRyaXZpYWxTeW50YXhIaWdobGlnaHRlciB9IGZyb20gJy4vZGVidWdnZXIuanMnOwppbXBvcnQgeyBEZWJ1Z2dlclByb3RvY29sIH0gZnJvbSAnLi9kZWJ1Z2dlcnByb3RvY29sLmpzJzsKaW1wb3J0IHsgUmVhZEZpbGUsIFJlYWRKU09OLCBXcml0ZUpTT04gfSBmcm9tICcuL2lvLWhlbHBlcnMuanMnOwppbXBvcnQgeyBjb25zdW1lLCBtYXAgfSBmcm9tICcuL2xpYi9hc3luYy9oZWxwZXJzLmpzJzsKaW1wb3J0IHsgYWJzb2x1dGUsIGJhc2VuYW1lLCBleHRuYW1lLCByZWxhdGl2ZSB9IGZyb20gJy4vbGliL3BhdGguanMnOwppbXBvcnQgeyBSZXBlYXRlciB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3JlcGVhdGVyLmpzJzsKaW1wb3J0IHsgU3Bhd24sIFdOT0hBTkcgfSBmcm9tICcuL29zLWhlbHBlcnMuanMnOwppbXBvcnQgeyBGX0dFVEZMLCBGX1NFVEZMLCBmY250bCwgT19OT05CTE9DSyB9IGZyb20gJy4vcXVpY2tqcy9xanMtZmZpL2xpYi9mY250bC5qcyc7CmltcG9ydCB7IFJFUEwgfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3JlcGwuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IExvY2F0aW9uIH0gZnJvbSAnbG9jYXRpb24nOwppbXBvcnQgcHJvY2VzcyBmcm9tICdwcm9jZXNzJzsKaW1wb3J0IGV4dGVuZEFycmF5IGZyb20gJ2V4dGVuZEFycmF5JzsKaW1wb3J0IHsgQUZfSU5FVCwgQXN5bmNTb2NrZXQsIElQUFJPVE9fVENQLCBTT0NLX1NUUkVBTSwgU29ja0FkZHIgfSBmcm9tICdzb2NrZXRzJzsKaW1wb3J0IHsgZXJyIGFzIHN0ZGVyciB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IGNvZGVjcywgUlBDQXBpLCBSUENQcm94eSwgUlBDT2JqZWN0LCBSUENGYWN0b3J5LCBDb25uZWN0aW9uLCBSUENTZXJ2ZXIsIFJQQ0NsaWVudCwgUlBDU29ja2V0LCBpc1RoZW5hYmxlLCBoYXNIYW5kbGVyLCBjYWxsSGFuZGxlciwgcGFyc2VVUkwsIEdldFByb3BlcnRpZXMsIEdldEtleXMsIGdldFByb3BlcnR5RGVzY3JpcHRvcnMsIHdlYWtEZWZpbmUsIHNldEhhbmRsZXJzRnVuY3Rpb24sIGdldFByb3RvdHlwZU5hbWUsIE1ha2VDb21tYW5kRnVuY3Rpb24sIE1ha2VTZW5kRnVuY3Rpb24sIFNlcmlhbGl6ZVZhbHVlLCBEZXNlcmlhbGl6ZVN5bWJvbHMsIERlc2VyaWFsaXplVmFsdWUsIFJQQ0Nvbm5lY3QsIFJQQ0xpc3RlbiB9IGZyb20gJy4vcXVpY2tqcy9xanMtbmV0L2pzL3JwYy5qcyc7CgpmdW5jdGlvbiBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpIHsKICBpZighQXJyYXkuaXNBcnJheShkZWNvcmF0b3JzKSkgZGVjb3JhdG9ycyA9IFtkZWNvcmF0b3JzXTsKICBmb3IobGV0IGRlY29yYXRvciBvZiBkZWNvcmF0b3JzKQogICAgZm9yKGxldCBwcm9wIG9mIGtleXMob2JqKSkKICAgICAgaWYodHlwZW9mIG9ialtwcm9wXSA9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgbGV0IG5ld2ZuID0gZGVjb3JhdG9yKG9ialtwcm9wXSwgb2JqLCBwcm9wLCAuLi5hcmdzKTsKICAgICAgICBpZihvYmpbcHJvcF0gIT09IG5ld2ZuKSBvYmpbcHJvcF0gPSBuZXdmbjsKICAgICAgfQogIHJldHVybiBvYmo7Cn0KCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7Cgpjb25zdCBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+IGJhc2VuYW1lKGFyZywgZXh0bmFtZShhcmcpKTsKCmNvbnN0IGNoaWxkcmVuID0gbmV3IFNldCgpOwoKYXRleGl0KCgpID0+IHsKICBmb3IobGV0IHBpZCBvZiBjaGlsZHJlbikgewogICAgY29uc29sZS5sb2coJ2F0ZXhpdCBraWxsaW5nIGNoaWxkJywgcGlkKTsKICAgIGtpbGwocGlkLCBTSUdURVJNKTsKICB9Cn0pOwoKT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7CiAgY29kZWNzLAogIFJQQ0FwaSwKICBSUENQcm94eSwKICBSUENPYmplY3QsCiAgUlBDRmFjdG9yeSwKICBDb25uZWN0aW9uLAogIFJQQ1NlcnZlciwKICBSUENDbGllbnQsCiAgUlBDU29ja2V0LAogIGlzVGhlbmFibGUsCiAgaGFzSGFuZGxlciwKICBjYWxsSGFuZGxlciwKICBwYXJzZVVSTCwKICBHZXRQcm9wZXJ0aWVzLAogIEdldEtleXMsCiAgZ2V0UHJvcGVydHlEZXNjcmlwdG9ycywKICB3ZWFrRGVmaW5lLAogIHNldEhhbmRsZXJzRnVuY3Rpb24sCgogIGdldFByb3RvdHlwZU5hbWUsCiAgTWFrZUNvbW1hbmRGdW5jdGlvbiwKICBNYWtlU2VuZEZ1bmN0aW9uLAogIFNlcmlhbGl6ZVZhbHVlLAogIERlc2VyaWFsaXplU3ltYm9scywKICBEZXNlcmlhbGl6ZVZhbHVlLAogIFJQQ0Nvbm5lY3QsCiAgUlBDTGlzdGVuCn0pOwoKY29uc3Qgc2lnbmFsTmFtZSA9IG4gPT4KICAnU0lHJyArCiAgWwogICAgLAogICAgJ0hVUCcsCiAgICAnSU5UJywKICAgICdRVUlUJywKICAgICdJTEwnLAogICAgJ1RSQVAnLAogICAgJ0FCUlQnLAogICAgJ0JVUycsCiAgICAnRlBFJywKICAgICdLSUxMJywKICAgICdVU1IxJywKICAgICdTRUdWJywKICAgICdVU1IyJywKICAgICdQSVBFJywKICAgICdBTFJNJywKICAgICdURVJNJywKICAgICdTVEtGTFQnLAogICAgJ0NITEQnLAogICAgJ0NPTlQnLAogICAgJ1NUT1AnLAogICAgJ1RTVFAnLAogICAgJ1RUSU4nLAogICAgJ1RUT1UnLAogICAgJ1VSRycsCiAgICAnWENQVScsCiAgICAnWEZTWicsCiAgICAnVlRBTFJNJywKICAgICdQUk9GJywKICAgICdXSU5DSCcsCiAgICAnSU8nLAogICAgJ1BXUicsCiAgICAnU1lTJwogIF1bbl07CgpmdW5jdGlvbiBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKSB7CiAgY29uc3QgeyBleGl0ZWQsIHRlcm1zaWcsIHNpZ25hbGVkLCBleGl0Y29kZSB9ID0gY2hpbGQ7CgogIHJldHVybiBleGl0ZWQgPyAoc2lnbmFsZWQgPyBgc2lnbmFsbGVkICR7c2lnbmFsTmFtZSh0ZXJtc2lnKX1gIDogYGV4aXRjb2RlICR7ZXhpdGNvZGV9YCkgOiBudWxsOwp9CgpmdW5jdGlvbiBHZXRMb2Mobm9kZSkgewogIGlmKG5vZGUubG9jPy5zdGFydD8ubGluZSkgewogICAgY29uc3QgeyBsaW5lLCBjb2x1bW4gfSA9IG5vZGUubG9jLnN0YXJ0OwogICAgY29uc3QgW2NoYXJPZmZzZXRdID0gbm9kZS5yYW5nZSA/PyBbbm9kZS5zdGFydF07CiAgICByZXR1cm4gbmV3IExvY2F0aW9uKGxpbmUsIGNvbHVtbiArIDEsIGNoYXJPZmZzZXQpOwogIH0KfQoKYXN5bmMgZnVuY3Rpb24gTG9hZEFTVChzb3VyY2UpIHsKICBpZighZXhpc3RzU3luYyhzb3VyY2UpKSByZXR1cm4gbnVsbDsKICBjb25zdCBjaGlsZCA9IFNwYXduKCdtZXJpeWFoJywgWyctbCcsIHNvdXJjZV0sIHsgYmxvY2s6IGZhbHNlLCBzdGRpbzogWydpbmhlcml0JywgJ3BpcGUnLCAnaW5oZXJpdCddIH0pOwoKICBsZXQgcyA9ICcnOwogIGZvcihsZXQgY2h1bmsgb2YgcmVhZGVyU3luYyhjaGlsZC5zdGRvdXQpKSBzICs9IHRvU3RyaW5nKGNodW5rKTsKCiAgY29uc3Qgc3RhdHVzID0gY2hpbGQud2FpdCgpOwogIGNvbnN0IHsgbGVuZ3RoIH0gPSBzOwogIC8vY29uc29sZS5sb2coJ2xvYWRBU1QnLCB7IHNvdXJjZSwgbGVuZ3RoLCBzdGF0dXMgfSk7CgogIHJldHVybiBKU09OLnBhcnNlKHMpOwp9CgpmdW5jdGlvbiBTdGFydFJFUEwocHJlZml4ID0gc2NyaXB0TmFtZSgpLCBzdWZmaXggPSAnJykgewogIGxldCByZXBsID0gbmV3IFJFUEwoYFx4MWJbMzg7NTsxNjVtJHtwcmVmaXh9IFx4MWJbMzg7NTszOW0ke3N1ZmZpeH1ceDFiWzBtYCwgZmFsc2UpOwogIHJlcGwuaGlzdG9yeUxvYWQobnVsbCk7CiAgbGV0IHsgbG9nIH0gPSBjb25zb2xlOwoKICBjb25zb2xlLmxvZyA9IHJlcGwucHJpbnRGdW5jdGlvbihsb2cuYmluZChjb25zb2xlLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDIgfSkpKTsKICBsZXQgeyBzaG93IH0gPSByZXBsOwoKICByZXBsLnNob3cgPSBhcmcgPT4gewogICAgLypjb25zb2xlLmxvZygncmVwbC5zaG93JywgYXJnKTsKICAgIGlmKHR5cGVzLmlzUHJvbWlzZShhcmcpKSB7CiAgICAgIHJlcGwucHJpbnRTdGF0dXMoJ1Byb21pc2UnKTsKICAgICAgYXJnLnRoZW4odmFsID0+IHJlcGwucHJpbnRTdGF0dXMocmVwbC5zaG93KHZhbCkpKTsKICAgICAgcmV0dXJuOwogICAgfSovCiAgICBpZihpc09iamVjdChhcmcpKSB7CiAgICAgIGlmKGFyZ1tTeW1ib2wuZm9yKCdwcmludCcpXSkgcmV0dXJuIGFyZy50b1N0cmluZyA/IGFyZy50b1N0cmluZygpIDogYXJnICsgJyc7CgogICAgICAvL2lmKEFycmF5LmlzQXJyYXkoYXJnKSAmJiB0eXBlb2YgYXJnWzBdID09ICdvYmplY3QnICYmICBBcnJheS5pc0FycmF5KGFyZ1swXSkpIHsKICAgICAgaWYoQXJyYXkuaXNBcnJheShhcmcpICYmIHR5cGVvZiBhcmdbMF0gPT0gJ29iamVjdCcpIHsKICAgICAgICBpZighQXJyYXkuaXNBcnJheShhcmdbMF0pICYmIChhcmcubGVuZ3RoICE9PSAyIHx8ICFBcnJheS5pc0FycmF5KGFyZ1sxXSkpKSB7CiAgICAgICAgICBpZihhcmcubGVuZ3RoID09IDIgJiYgQXJyYXkuaXNBcnJheShhcmdbMV0pKSB7CiAgICAgICAgICAgIGNvbnN0IFtldmVudCwgc3RhY2tdID0gYXJnOwogICAgICAgICAgICBpZihbJ3R5cGUnLCAncmVhc29uJ10uZXZlcnkoayA9PiBrIGluIGV2ZW50KSkgaWYgKFsnaWQnLCAnbmFtZScsICdsaW5lJ10uZXZlcnkoayA9PiBrIGluIHN0YWNrWzBdKSkgcmV0dXJuIFtMaXN0KFtldmVudF0pLCBMaXN0KHN0YWNrKV07CiAgICAgICAgICB9CgogICAgICAgICAgaWYoCiAgICAgICAgICAgIGFyZy5sZW5ndGggPj0gMiAvKk9iamVjdC5rZXlzKGFyZ1swXSkuc29tZShrZXkgPT4gYXJnLmV2ZXJ5KGEgPT4ga2V5IGluIGEpKSB8fCovICYmCiAgICAgICAgICAgIGFyZy5tYXAoaXRlbSA9PiBPYmplY3Qua2V5cyhpdGVtKSkucmVkdWNlKChhY2MsIGtleXMsIGkpID0+IChpID09IDAgPyBrZXlzIDogYWNjID8ga2V5cy5lcXVhbChhY2MpICYmIGtleXMgOiBmYWxzZSkpCiAgICAgICAgICApCiAgICAgICAgICAgIHJldHVybiByZXBsLnNob3coVGFibGUoYXJnKSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHNob3cuY2FsbChyZXBsLCBhcmcpOwogIH07CgogIHJlcGwubG9hZFNhdmVPcHRpb25zKCk7CiAgLy9yZXBsLnByaW50UHJvbWlzZSA9ICgpID0+IHt9OwogIHJlcGwucnVuKCk7CiAgcmV0dXJuIHJlcGw7Cn0KCmV4cG9ydCBmdW5jdGlvbiBTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpIHsKICBsZXQgZW52ID0gcHJvY2Vzcy5lbnYgPz8ge307CgogIGFkZHJlc3MgPz89ICcxMjcuMC4wLjE6OTkwMSc7CgogIGVudlsnRElTUExBWSddID8/PSAnOjAuMCc7CgogIGlmKGNvbm5lY3QpIGVudlsnUVVJQ0tKU19ERUJVR19BRERSRVNTJ10gPSBhZGRyZXNzOwogIGVsc2UgZW52WydRVUlDS0pTX0RFQlVHX0xJU1RFTl9BRERSRVNTJ10gPSBhZGRyZXNzOwoKICBjb25zdCBjaGlsZCA9IFNwYXduKCdxanNtJywgYXJncywgeyBibG9jazogZmFsc2UsIGVudiwgc3RkaW86IFsnaW5oZXJpdCcsICdwaXBlJywgJ3BpcGUnXSB9KTsKCiAgaWYoIWNvbm5lY3QpIGxpc3RlbmVyc1thZGRyZXNzXSA9IGNoaWxkOwoKICBjb25zb2xlLmxvZygnU3RhcnREZWJ1Z2dlcicsIHsgYXJncywgY29ubmVjdCwgYWRkcmVzcyB9LCBjaGlsZCk7CgogIGNoaWxkcmVuLmFkZChjaGlsZC5waWQpOwoKICByZXR1cm4gZGVmaW5lKGNoaWxkLCB7IGFyZ3MgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKSB7CiAgY29uc3QgYWRkciA9IG5ldyBTb2NrQWRkcihBRl9JTkVULCAuLi5hZGRyZXNzLnNwbGl0KCc6JykpOwogIGNvbnN0IHNvY2sgPSBuZXcgQXN5bmNTb2NrZXQoQUZfSU5FVCwgU09DS19TVFJFQU0sIElQUFJPVE9fVENQKTsKCiAgY29uc3QgcmV0ID0gc29jay5jb25uZWN0KGFkZHIpOwoKICBpZih0eXBlb2YgY2FsbGJhY2sgIT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgY2FsbGJhY2sgPT0gJ29iamVjdCcpIGNhbGxiYWNrID0gY2FsbGJhY2sub25NZXNzYWdlOwogIGNvbnNvbGUubG9nKCdDb25uZWN0RGVidWdnZXInLCB7IHJldCB9KTsKCiAgaWYocmV0ID49IDApIHsKICAgIHNvY2submRlbGF5KHRydWUpOwogICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCcsICtzb2NrLCAndG8nLCBzb2NrLnJlbW90ZSk7CiAgICBzb2NrZXRzLmFkZChzb2NrKTsKICAgIC8vY29uc29sZS5sb2coJ3NvY2tldHMnLCBzb2NrZXRzKTsKICB9CgogIGNvbnN0IGRiZyA9IHRoaXMgPz8ge307CgogIGRlZmluZShkYmcsIHsKICAgIHNvY2ssCiAgICBhZGRyLAogICAgYXN5bmMgcHJvY2VzcyhjYWxsYmFjaykgewogICAgICBsZXQgcmV0LAogICAgICAgIGxlbkJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcig5KTsKICAgICAgdHJ5IHsKICAgICAgICB3aGlsZSgocmV0ID0gYXdhaXQgc29jay5yZWN2KGxlbkJ1ZiwgMCwgOSkpID4gMCkgewogICAgICAgICAgbGV0IGxlbiA9IHBhcnNlSW50KHRvU3RyaW5nKGxlbkJ1ZiwgMCwgcmV0KSwgMTYpOwogCiAgICAgICAgICBsZXQgZGF0YUJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcihsZW4pOwogICAgICAgICAgbGV0IG9mZnNldCA9IDA7CiAgICAgICAgICB3aGlsZShvZmZzZXQgPCBsZW4pIHsKICAgICAgICAgICAgcmV0ID0gYXdhaXQgc29jay5yZWN2KGRhdGFCdWYsIG9mZnNldCwgbGVuIC0gb2Zmc2V0KTsKICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICBpZihyZXQgPD0gMCkgewogICAgICAgICAgICAgIHNvY2suY2xvc2UoKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBvZmZzZXQgKz0gcmV0OwogICAgICAgICAgfQogICAgICAgICAgaWYocmV0IDw9IDApIGJyZWFrOwogICAgICAgICAgbGV0IHMgPSB0b1N0cmluZyhkYXRhQnVmKTsKICAgbGV0IG9iaiA9IEpTT04ucGFyc2Uocyk7CgogICAgICAgICAgY29uc3QgZnVuY05hbWUgPSAnXHgxYlszODs1OzIwOG1wcm9jZXNzXHgxYlsxOzM2bSgpJzsKICAgICAgICAgIGNvbnNvbGUubG9nKGZ1bmNOYW1lICsgJzogXHgxYlszODs1OzE5Nm1iZWZvcmUgY2FsbGJhY2tceDFiWzBtJyk7CiAgICAgICAgICAvLyBjb25zb2xlLnRpbWUoZnVuY05hbWUgKyAnOiBceDFiWzM4OzU7ODJtY2FsbGJhY2tceDFiWzBtJyk7CiAgICAgICAgICBsZXQgcmVzdWx0ID0gY2FsbGJhY2sob2JqKTsKICAgICAgICAgIC8vIGNvbnNvbGUudGltZUVuZChmdW5jTmFtZSArICc6IFx4MWJbMzg7NTs4Mm1jYWxsYmFja1x4MWJbMG0nKTsKICAgICAgICAgIGF3YWl0IHJlc3VsdDsKICAgICAgICB9CiAgICAgIH0gY2F0Y2goZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygnU29ja2V0IGVycm9yOicsIGVycm9yLm1lc3NhZ2UgKyAnXG4nICsgZXJyb3Iuc3RhY2spOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHNvY2suY2xvc2UoKTsKICAgICAgICByZXR1cm4gcmV0OwogICAgICB9CiAgICB9LAogICAgYXN5bmMgc2VuZE1lc3NhZ2UobXNnKSB7CiAgICAgIGlmKHR5cGVvZiBtc2cgIT0gJ3N0cmluZycpIG1zZyA9IEpTT04uc3RyaW5naWZ5KG1zZyk7CiAgICAgIGNvbnN0IHJldCA9IGF3YWl0IHNvY2suc2VuZChtc2cubGVuZ3RoLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg4LCAnMCcpICsgJ1xuJyArIG1zZyk7CiAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbVNFTkRceDFiWzBtIFsnICsgc29jay5mZCArICddICgnICsgcmV0ICsgJykgJyArIG1zZyk7CiAgICB9CiAgfSk7CgogIGNvbnNvbGUubG9nKCdDb25uZWN0RGVidWdnZXInLGNvbnNvbGUuY29uZmlnKHtkZXB0aDogMSxjb21wYWN0OjB9KSwgZGJnKTsKCiAgTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluKTsKCiAgcmV0dXJuIGRiZzsKfQoKZnVuY3Rpb24gTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkgewogIGNvbnNvbGUubG9nKCdMYXVuY2hEZWJ1Z2dlcicsIGNvbnNvbGUuY29uZmlnKHtkZXB0aDogMSxjb21wYWN0OjB9KSwgeyBkYmcsIHNraXBUb01haW4gfSk7CiAgaWYoc2tpcFRvTWFpbikgewogICAgZGJnLm9uc3RvcHBlZCA9IG9uY2UoYXN5bmMgKC4uLmFyZ3MpID0+IHsKCiAgICAgIGxldCBzdCA9IGF3YWl0IGRpc3BhdGNoLnN0YWNrVHJhY2UoKTsKIAogIHNjcmlwdCA/Pz0gc3RbMF0uZmlsZW5hbWU7CiAKIGxldCBmbnMgPSBhd2FpdCBmaWxlc1tzY3JpcHRdLm1hdGNoKC9tYWluJC9naSk7CiAgICAgIGNvbnNvbGUubG9nKCdtYXRjaGVkIC9tYWluJC9naScsIGZucyAvKi5tYXAoKHsgbmFtZSB9KSA9PiBuYW1lKSovKTsKCiAgICAgIGRiZy5vbnN0b3BwZWQgPSBudWxsOwogICAgICBsZXQgcmVzcDsKICAgICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKCknLCBjb25zb2xlLmNvbmZpZyh7Y29tcGFjdDogMH0pLCB7IHNjcmlwdCwgZm5zIH0pOwogICAgICByZXNwID0gYXdhaXQgZGlzcGF0Y2guYnJlYWtwb2ludHMoc2NyaXB0LCBmbnMpOwogICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMoKSByZXNwb25zZTonLCBjb25zb2xlLmNvbmZpZyh7Y29tcGFjdDogMH0pLCAgcmVzcCk7CgogICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsKICAgICAgICByZXNwID0gYXdhaXQgZGlzcGF0Y2guY29udGludWUoKTsKICAgICAgICBjb25zb2xlLmxvZygnY29udGludWUoKSByZXNwb25zZTonLCAgY29uc29sZS5jb25maWcoe2NvbXBhY3Q6IDB9KSwgcmVzcCk7CiAgICAgIH0sIDEwMCk7CiAgICB9KTsKICB9CiAgLy9kYmcub25zdG9wcGVkID8/PSBPblN0b3BwZWQ7CgogIGxldCBkaXNwYXRjaCA9IChnbG9iYWxUaGlzLmRpc3BhdGNoID0gbmV3IERlYnVnZ2VyRGlzcGF0Y2hlcihkYmcpKTsKCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCBiaW5kTWV0aG9kcyhkaXNwYXRjaCwgRGVidWdnZXJEaXNwYXRjaGVyLnByb3RvdHlwZSwge30pKTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIEdldExvYywKICAgIFByaW50U3RhY2tGcmFtZSwKICAgIFByaW50U3RhY2ssCiAgICBhc3luYyB2YWx1ZShuYW1lKSB7CiAgICAgIGxldCBzdGFjayA9IGF3YWl0IGRpc3BhdGNoLnN0YWNrVHJhY2UoKTsKCiAgICAgIGZvcihsZXQgZnJhbWUgb2Ygc3RhY2spIHsKICAgICAgICBsZXQgeyBsb2NhbCB9ID0gYXdhaXQgZGlzcGF0Y2gudmFyaWFibGVzKGZyYW1lLmlkLCAxKTsKCiAgICAgICAgbGV0IHYgPSBsb2NhbC5maW5kKHYgPT4gdi5uYW1lID09IG5hbWUpOwoKICAgICAgICByZXR1cm4gdjsKICAgICAgfQogICAgfQogIH0pOwoKICByZXR1cm4gZGJnOwp9Cgphc3luYyBmdW5jdGlvbiBQcmludFN0YWNrRnJhbWUoZnJhbWUpIHsKICBpZihmcmFtZSA9PT0gdW5kZWZpbmVkKSBmcmFtZSA9IDA7CgogIGxldCB7IGlkLCBuYW1lLCBmaWxlbmFtZSwgbGluZSB9ID0gZnJhbWU7CiAgbGV0IHBhcmFtczsKICB0cnkgewogICAgcGFyYW1zID0gKGF3YWl0IGZpbGVzW2ZpbGVuYW1lXS5mdW5jdGlvbnMpLmZpbmQoZiA9PiBmLm5hbWUgPT0gbmFtZSk/LnBhcmFtczsKICB9IGNhdGNoKGUpIHt9CiAgaWYocGFyYW1zKSBuYW1lICs9IGAoJHtwYXJhbXMuam9pbignLCAnKX0pYDsKICBsZXQgbG9jID0gbGluZSAhPT0gdW5kZWZpbmVkID8gbmV3IExvY2F0aW9uKGZpbGVuYW1lLCBsaW5lKSA6IHVuZGVmaW5lZDsKICBsZXQgY29kZSA9IGxpbmUgIT09IHVuZGVmaW5lZCA/IGZpbGVzW2ZpbGVuYW1lXS5saW5lKGxpbmUgLSAxKSA6IHVuZGVmaW5lZDsKICByZXR1cm4gW2AjJHtpZH1gLCBgIGF0ICR7bmFtZS5wYWRFbmQoMzApfWAsIGxvYyA/ICcgaW4gJyArIGxvYyA6ICcnXS5jb25jYXQoY29kZSA/IFtjb2RlXSA6IFtdKTsKfQoKYXN5bmMgZnVuY3Rpb24gUHJpbnRTdGFjayhzdGFjaykgewogIHN0YWNrID8/PSBhd2FpdCBzdGFja1RyYWNlKCk7CiAgbGV0IGZyYW1lcyA9IFtdOwogIGZvcihsZXQgZnJhbWUgb2Ygc3RhY2spIHsKICAgIGZyYW1lcy5wdXNoKGF3YWl0IFByaW50U3RhY2tGcmFtZShmcmFtZSkpOwogIH0KICByZXR1cm4gTGlzdChmcmFtZXMpOwp9CgpkZWNvcmF0ZSgKICAobWVtYmVyLCBvYmosIHByb3ApID0+CiAgICAoewogICAgICBhc3luYyBicmVha3BvaW50cyguLi5hcmdzKSB7CiAgICAgICAgaWYoISh0eXBlb2YgYXJnc1swXSA9PSAnc3RyaW5nJykpIGFyZ3MudW5zaGlmdChnbG9iYWxUaGlzLnNjcmlwdCk7CgogICAgICAgIGxldCBbZmlsZSwgYnJlYWtwb2ludHNdID0gYXJnczsKICAgICAgICBmaWxlID0gYWJzb2x1dGUoZmlsZSk7CgogICAgICAgIGlmKHR5cGVzLmlzUHJvbWlzZShicmVha3BvaW50cykpIGJyZWFrcG9pbnRzID0gYXdhaXQgYnJlYWtwb2ludHM7CgogICAgICAgIGlmKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludHMpKSB7CiAgICAgICAgICBicmVha3BvaW50cyA9IGJyZWFrcG9pbnRzLm1hcChiID0+IGZpbHRlcktleXMoYiwgWyduYW1lJywgJ2xpbmUnLCAnY29sdW1uJ10pKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CiAgICAgIH0sCiAgICAgIGFzeW5jIHN0YWNrVHJhY2UoZnJhbWUpIHsKICAgICAgICByZXR1cm4gKGF3YWl0IG1lbWJlci5jYWxsKHRoaXMsIGZyYW1lKSkubWFwKGZyYW1lID0+ICh0eXBlb2YgZnJhbWUuZmlsZW5hbWUgPT0gJ3N0cmluZycgJiYgKGZyYW1lLmZpbGVuYW1lID0gcmVsYXRpdmUoYWJzb2x1dGUoZnJhbWUuZmlsZW5hbWUpKSksIGZyYW1lKSk7CiAgICAgIH0sCiAgICAgIGFzeW5jIHNjb3BlcyhuKSB7CiAgICAgICAgLy9sZXQgdiA9IGF3YWl0IHRoaXMudmFyaWFibGVzKG4pOwogICAgICAgIC8vY29uc29sZS5sb2coJ3Njb3BlcycsIHt2fSk7CiAgICAgICAgbGV0IHN0YWNrID0gYXdhaXQgdGhpcy5zdGFja1RyYWNlKCk7CiAgICAgICAgaWYobiA+PSBzdGFjay5sZW5ndGgpIHJldHVybiBudWxsOwogICAgICAgIGxldCBzY29wZXMgPSBbXTsKICAgICAgICBmb3IobGV0IHNjb3BlIG9mIGF3YWl0IG1lbWJlci5jYWxsKHRoaXMsIG4pKSB7CiAgICAgICAgICBjb25zdCB2YXJpYWJsZXMgPSBhd2FpdCB0aGlzLnZhcmlhYmxlcyhzY29wZS5yZWZlcmVuY2UpOwogICAgICAgICAgc2NvcGUudmFyaWFibGVzID0gdmFyaWFibGVzLmxlbmd0aDsKICAgICAgICAgIHNjb3Blcy5wdXNoKHNjb3BlKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHNjb3BlczsKICAgICAgfSwKICAgICAgYXN5bmMgd2FpdFJ1bigpIHsKICAgICAgICBjb25zdCBbZXZlbnQsIHN0YWNrXSA9IGF3YWl0IG1lbWJlci5jYWxsKHRoaXMpOwogICAgICAgIGRlZmluZShnbG9iYWxUaGlzLCB7IGV2ZW50LCBzdGFjayB9KTsKICAgICAgICAvL2NvbnNvbGUubG9nKCd3YWl0UnVuJywgeyBldmVudCwgc3RhY2sgfSk7CgogICAgICAgIHJlcGwucHJpbnRTdGF0dXMoKGF3YWl0IFByaW50U3RhY2tGcmFtZShzdGFja1swXSkpLmpvaW4oJyAnKSArICdcbicpOwoKICAgICAgICBjb25zdCB7IGZpbGVuYW1lLCBsaW5lIH0gPSBzdGFja1swXTsKCiAgICAgICAgZGVmaW5lKGdsb2JhbFRoaXMsIHsgZmlsZTogZmlsZW5hbWUsIGxpbmUgfSk7CgogICAgICAgIHJldHVybiBbZXZlbnQsIHN0YWNrXTsKICAgICAgfSwKICAgICAgYXN5bmMgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkgewogICAgICAgIGNvbnN0IGxpc3QgPSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBuKTsKICAgICAgICBjb25zdCByZXQgPSBbXTsKICAgICAgICBjb25zdCBhZGQgPSBpdGVtID0+IChpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSA9PT0gMCAmJiBkZWxldGUgaXRlbS52YXJpYWJsZXNSZWZlcmVuY2UsIHJldC5wdXNoKGl0ZW0pKTsKICAgICAgICBmb3IobGV0IGl0ZW0gb2YgbGlzdCkgewogICAgICAgICAgYWRkKGl0ZW0pOwoKICAgICAgICAgIGlmKGRlcHRoID4gMCkgewogICAgICAgICAgICBpZihpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSA+IDApIHsKICAgICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBhd2FpdCB0aGlzLnZhcmlhYmxlcyhpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSwgZGVwdGggLSAxKTsKICAgICAgICAgICAgICBmb3IobGV0IGNoaWxkIG9mIGNoaWxkcmVuKSB7CiAgICAgICAgICAgICAgICBpZighaXNOYU4oY2hpbGQubmFtZSkpIGNoaWxkLm5hbWUgPSAnICBbJyArIGNoaWxkLm5hbWUgKyAnXSc7CiAgICAgICAgICAgICAgICBlbHNlIGNoaWxkLm5hbWUgPSAnICAuJyArIGNoaWxkLm5hbWU7CgogICAgICAgICAgICAgICAgaWYoY2hpbGQudmFsdWU/LnN0YXJ0c1dpdGgoJ2Z1bmN0aW9uICcpKSBjb250aW51ZTsKICAgICAgICAgICAgICAgIGFkZChjaGlsZCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZGVmaW5lKHJldCwgewogICAgICAgICAgW1N5bWJvbC5mb3IoJ3ByaW50JyldOiB0cnVlLAogICAgICAgICAgdG9TdHJpbmcoKSB7CiAgICAgICAgICAgIHJldHVybiBUYWJsZSh0aGlzLCBbJ25hbWUnLCAndmFsdWUnLCAndHlwZScsICd2YXJpYWJsZXNSZWZlcmVuY2UnXSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH1bcHJvcF0gfHwgbWVtYmVyKSwKCiAgRGVidWdnZXJEaXNwYXRjaGVyLnByb3RvdHlwZQopOwoKLypkZWNvcmF0ZSgobWVtYmVyLCBvYmosIHByb3ApID0+IHsKICByZXR1cm4gYXN5bmMgZnVuY3Rpb24oLi4uYXJncykgewogICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1lbWJlci5jYWxsKHRoaXMsIC4uLmFyZ3MpOwogCiAgICBpZihBcnJheS5pc0FycmF5KHJlc3VsdCkgJiYgQXJyYXkuaXNBcnJheShyZXN1bHRbMV0pICYmICdpZCcgaW4gcmVzdWx0WzFdWzBdKSB7CiAgICAgIGxldCBbZXZlbnQsIHN0YWNrXSA9IHJlc3VsdDsKICAgICAgY29uc3QgeyBmaWxlbmFtZSwgbGluZSwgbmFtZSB9ID0gc3RhY2tbMF07CiAgICAgIHJlcGwucHJpbnRTdGF0dXMoZmlsZW5hbWUgKyAnOicgKyBsaW5lICsgJzogJyArIGZpbGVzW2ZpbGVuYW1lXS5saW5lKGxpbmUpICsgJ1xuJyk7CiAgICB9CiAgICByZXR1cm4gcmVzdWx0OwogIH07Cn0sIERlYnVnZ2VyRGlzcGF0Y2hlci5wcm90b3R5cGUpOyovCgpjb25zdCBta2FkZHIgPSAoCiAgKHBvcnQgPSA4Nzc3KSA9PgogICgpID0+CiAgICBgMTI3LjAuMC4xOiR7cG9ydC0tfWAKKSgpOwoKZnVuY3Rpb24gTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKSB7CiAgYWRkcmVzcyA/Pz0gbWthZGRyKCk7CgogIGNvbnN0IGNoaWxkID0gKGdsb2JhbFRoaXMuY2hpbGQgPSBnbG9iYWxUaGlzLmxpc3RlbmVyc1thZGRyZXNzXSB8fCBTdGFydERlYnVnZ2VyKGFyZ3MsIGZhbHNlLCBhZGRyZXNzKSk7CiAgbGV0IGRpc3BhdGNoOwoKICBnbG9iYWxUaGlzLnNjcmlwdCA9IGFyZ3NbMF07CgogIHNsZWVwKDUwMCk7Cgpjb25zdCBkYmc9dGhpcz8/e307CgogIGRlZmluZShkYmcsIHsKICAgIGNoaWxkLAogICAgYXJncywKICAgIGtpbGw6ICgpID0+IChjaGlsZHJlbi5kZWxldGUoY2hpbGQucGlkKSwga2lsbChjaGlsZC5waWQsIFNJR1RFUk0pKQogIH0pOwogIENvbm5lY3REZWJ1Z2dlci5jYWxsKGRiZywgYWRkcmVzcywgc2tpcFRvTWFpbik7CgogIC8vICBjb25zdW1lKGRiZywgZGJnLm9ubWVzc2FnZSk7CgogIHJldHVybiBkYmc7IC8vZGlzcGF0Y2g7Cn0KCmFzeW5jIGZ1bmN0aW9uIE9uU3RvcHBlZChtc2cpIHsKICBjb25zdCBzdCA9IChnbG9iYWxUaGlzLnN0YWNrID0gYXdhaXQgZGlzcGF0Y2guc3RhY2tUcmFjZSgpKTsKICBsZXQgW3RvcF0gPSBzdDsKICBsZXQgeyBpZCwgbmFtZSwgZmlsZW5hbWUsIGxpbmUgfSA9IHRvcDsKICByZXBsLnByaW50U3RhdHVzKGAjJHtpZH0gJHtuYW1lfUAke2ZpbGVuYW1lfToke2xpbmV9ICBgICsgZmlsZXNbZmlsZW5hbWVdLmxpbmUobGluZSkpOwp9CgpmdW5jdGlvbiBVUkxXb3JrZXIoc2NyaXB0KSB7CiAgY29uc3QgZGF0YVVSTCA9IHMgPT4gYGRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxgICsgYnRvYShzKS5yZXBsYWNlQWxsKCcrJywgJy0nKS5yZXBsYWNlQWxsKCcvJywgJ18nKS5yZXBsYWNlQWxsKCc9JywgJycpOwoKICBjb25zdCB1cmwgPSBkYXRhVVJMKHNjcmlwdCk7CiAgY29uc3QgdyA9IG5ldyBXb3JrZXIodXJsKTsKCiAgcmV0dXJuIGRlZmluZShuZXcgUmVwZWF0ZXIoKHB1c2gsIHN0b3ApID0+ICh3Lm9ubWVzc2FnZSA9IHB1c2gpKSwgewogICAgcG9zdE1lc3NhZ2U6IG1zZyA9PiB3LnBvc3RNZXNzYWdlKG1zZykKICB9KTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgYmFzZSA9IHNjcmlwdE5hbWUoKS5yZXBsYWNlKC9cLlthLXpdKiQvLCAnJyk7CgogIGNvbnN0IGNvbmZpZyA9IFJlYWRKU09OKGAuJHtiYXNlfS1jb25maWdgKSA/PyB7fTsKCiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoc3RkZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogeyBkZXB0aDogSW5maW5pdHksIGNvbXBhY3Q6IDEsIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9CiAgfSk7CgogIGxldCBwYXJhbXMgPSBnZXRPcHQoCiAgICB7CiAgICAgIHZlcmJvc2U6IFtmYWxzZSwgKGEsIHYpID0+ICh2IHwgMCkgKyAxLCAndiddLAogICAgICBsaXN0ZW46IFtmYWxzZSwgbnVsbCwgJ2wnXSwKICAgICAgY29ubmVjdDogW2ZhbHNlLCBudWxsLCAnYyddLAogICAgICBjbGllbnQ6IFtmYWxzZSwgbnVsbCwgJ0MnXSwKICAgICAgc2VydmVyOiBbZmFsc2UsIG51bGwsICdTJ10sCiAgICAgIGRlYnVnOiBbZmFsc2UsIG51bGwsICd4J10sCiAgICAgIHRsczogW2ZhbHNlLCAodiwgcHYsIG8pID0+ICgoby50bHMgPSB0cnVlKSwgdHJ1ZSksICd0J10sCiAgICAgICduby10bHMnOiBbZmFsc2UsICh2LCBwdiwgbykgPT4gKChvLnRscyA9IGZhbHNlKSwgdHJ1ZSksICdUJ10sCiAgICAgIGFkZHJlc3M6IFt0cnVlLCBudWxsLCAnYSddLAogICAgICBwb3J0OiBbdHJ1ZSwgbnVsbCwgJ3AnXSwKICAgICAgcXVpZXQ6IFtmYWxzZSwgbnVsbCwgJ3EnXSwKICAgICAgJ3NzbC1jZXJ0JzogW3RydWUsIG51bGxdLAogICAgICAnc3NsLXByaXZhdGUta2V5JzogW3RydWUsIG51bGxdLAogICAgICAnc3NsLWNhJzogW3RydWUsIG51bGxdLAogICAgICAnQCc6ICdhZGRyZXNzLHBvcnQnCiAgICB9LAogICAgYXJncwogICk7CiAgaWYocGFyYW1zWyduby10bHMnXSA9PT0gdHJ1ZSkgcGFyYW1zLnRscyA9IGZhbHNlOwogIGNvbnN0IHsKICAgIGFkZHJlc3MgPSAnMC4wLjAuMCcsCiAgICBwb3J0ID0gODk5OSwKICAgICdzc2wtY2VydCc6IHNzbENlcnQgPSAnbG9jYWxob3N0LmNydCcsCiAgICAnc3NsLXByaXZhdGUta2V5Jzogc3NsUHJpdmF0ZUtleSA9ICdsb2NhbGhvc3Qua2V5JywKICAgICdzc2wtY2EnOiBzc2xDQSA9ICcvZXRjL3NzbC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0JywKICAgIHF1aWV0ID0gZmFsc2UsCiAgICBkZWJ1ZyA9IGZhbHNlLAogICAgdGxzID0gdHJ1ZQogIH0gPSBwYXJhbXM7CgogIGNvbnN0IGxpc3RlbiA9IHBhcmFtcy5jb25uZWN0ICYmICFwYXJhbXMubGlzdGVuID8gZmFsc2UgOiB0cnVlOwoKICAvL2NvbnN0IHNlcnZlciA9ICFwYXJhbXMuY2xpZW50IHx8IHBhcmFtcy5zZXJ2ZXI7CgogIGxldCBuYW1lID0gc2NyaXB0QXJnc1swXTsKICBuYW1lID0gbmFtZQogICAgLnJlcGxhY2UoLy4qXC8vLCAnJykKICAgIC5yZXBsYWNlKC8tL2csICcgJykKICAgIC5yZXBsYWNlKC9cLlteXC8uXSokLywgJycpOwoKICBsZXQgW3ByZWZpeCwgc3VmZml4XSA9IG5hbWUuc3BsaXQoJyAnKTsKCiAgbGV0IHByb3RvY29sID0gbmV3IFdlYWtNYXAoKTsKCiAgbGV0IHNvY2tldHMgPSAoZ2xvYmFsVGhpcy5zb2NrZXRzID8/PSBuZXcgU2V0KCkpOwogIC8vY29uc29sZS5sb2cobmFtZSwgcGFyYW1zWydAJ10pOwoKICBmdW5jdGlvbiBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSB7CiAgICAvL2NvbnNvbGUubG9nKCdjcmVhdGVXUycsIHsgdXJsLCBjYWxsYmFja3MsIGxpc3RlbiB9KTsKCiAgICBzZXRMb2coCiAgICAgIHF1aWV0ID8gMCA6IExMTF9VU0VSIHwgKCgoZGVidWcgPiAxID8gTExMX0lORk8gOiBMTExfV0FSTikgPDwgMSkgLSAxKSwKICAgICAgcXVpZXQgfHwgcGFyYW1zLmRlYnVnIDw9IDEKICAgICAgICA/ICgpID0+IHt9CiAgICAgICAgOiAobGV2ZWwsIHN0cikgPT4gewogICAgICAgICAgICBpZigvQklORF9QUk9UT0NPTHxEUk9QX1BST1RPQ09MfENIRUNLX0FDQ0VTU19SSUdIVFN8QUREX0hFQURFUlMvLnRlc3Qoc3RyKSkgcmV0dXJuOwogICAgICAgICAgICBjb25zb2xlLmxvZyhsb2dMZXZlbHNbbGV2ZWxdLnBhZEVuZCgxMCksIHN0ci50cmltKCkpOwogICAgICAgICAgfQogICAgKTsKCiAgICBsZXQgb3B0aW9uczsKICAgIGxldCBkYmc7CiAgICBjb25zb2xlLmxvZygnY3JlYXRlV1MnLCB7IHVybCB9KTsKICAgIHJldHVybiBjcmVhdGVTZXJ2ZXIoCiAgICAgIHVybCwKICAgICAgKG9wdGlvbnMgPSB7CiAgICAgICAgdGxzOiBwYXJhbXMudGxzLAogICAgICAgIHNzbENlcnQsCiAgICAgICAgc3NsUHJpdmF0ZUtleSwKICAgICAgICBzc2xDQSwKICAgICAgICBtaW1ldHlwZXM6IFsKICAgICAgICAgIFsnLnN2Z3onLCAnYXBwbGljYXRpb24vZ3ppcCddLAogICAgICAgICAgWycubWpzJywgJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnXSwKICAgICAgICAgIFsnLmVzJywgJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnXSwKICAgICAgICAgIFsnLndhc20nLCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ10sCiAgICAgICAgICBbJy5lb3QnLCAnYXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3QnXSwKICAgICAgICAgIFsnLmxpYicsICdhcHBsaWNhdGlvbi94LWFyY2hpdmUnXSwKICAgICAgICAgIFsnLmJ6MicsICdhcHBsaWNhdGlvbi94LWJ6aXAyJ10sCiAgICAgICAgICBbJy5naXRpZ25vcmUnLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycuY21ha2UnLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycuaGV4JywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLm1kJywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLnBieHByb2onLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycud2F0JywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLmMnLCAndGV4dC94LWMnXSwKICAgICAgICAgIFsnLmgnLCAndGV4dC94LWMnXSwKICAgICAgICAgIFsnLmNwcCcsICd0ZXh0L3gtYysrJ10sCiAgICAgICAgICBbJy5ocHAnLCAndGV4dC94LWMrKyddLAogICAgICAgICAgWycuZmlsdGVycycsICd0ZXh0L3htbCddLAogICAgICAgICAgWycucGxpc3QnLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLnN0b3J5Ym9hcmQnLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLnZjeHByb2onLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLmJhdCcsICd0ZXh0L3gtbXNkb3MtYmF0Y2gnXSwKICAgICAgICAgIFsnLm1tJywgJ3RleHQveC1vYmplY3RpdmUtYyddLAogICAgICAgICAgWycubScsICd0ZXh0L3gtb2JqZWN0aXZlLWMnXSwKICAgICAgICAgIFsnLnNoJywgJ3RleHQveC1zaGVsbHNjcmlwdCddCiAgICAgICAgXSwKICAgICAgICBtb3VudHM6IFsKICAgICAgICAgIFsnL3Byb3h5JywgJ2lwdjQ6MTI3LjAuMC4xOjIyJywgbnVsbCwgJ3Byb3h5LXdzLXJhdy13cyddLAogICAgICAgICAgWycvbHdzJywgJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jaC8nLCBudWxsLCAnJ10sCiAgICAgICAgICBbJy8nLCAnLicsICdkZWJ1Z2dlci5odG1sJ10sCiAgICAgICAgICBmdW5jdGlvbiogY29uZmlnKHJlcSwgcmVzKSB7CiAgICAgICAgICAgIGNvbnN0IHsgYm9keSwgaGVhZGVycyB9ID0gcmVxOwogICAgICAgICAgICBjb25zb2xlLmxvZygnL2NvbmZpZycsIHsgcmVxLCByZXMgfSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcqY29uZmlnJywgeyBib2R5LCBoZWFkZXJzIH0pOwogICAgICAgICAgICB5aWVsZCAne30nOwogICAgICAgICAgfSwKICAgICAgICAgIGZ1bmN0aW9uKiBmaWxlcyhyZXEsIHJlcykgewogICAgICAgICAgICBjb25zdCB7IGJvZHksIGhlYWRlcnMgfSA9IHJlcTsKICAgICAgICAgICAgeWllbGQgZnMKICAgICAgICAgICAgICAucmVhZGRpclN5bmMoJy4nKQogICAgICAgICAgICAgIC5zb3J0KCkKICAgICAgICAgICAgICAubWFwKGYgPT4gZiArICdcbicpCiAgICAgICAgICAgICAgLmpvaW4oJycpOwogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgLi4udXJsLAogICAgICAgIC4uLmNhbGxiYWNrcywKICAgICAgICBibG9jazogZmFsc2UsCiAgICAgICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSwgcmVxICYmIHJlcS5oZWFkZXJzKTsKCiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh3cywgewogICAgICAgICAgICBzZW5kTWVzc2FnZTogewogICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpIHsKICAgICAgICAgICAgICAgIGxldCByZXQgPSB0aGlzLnNlbmQoSlNPTi5zdHJpbmdpZnkobXNnKSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgd3Muc2VuZE1lc3NhZ2UoYCwgY29uc29sZS5jb25maWcoeyBjb21wYWN0OiAwIH0pLCBtc2csIGApID0gJHtyZXR9YCk7CiAgICAgICAgICAgICAgICByZXR1cm4gcmV0OwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGJnOiB7IHZhbHVlOiBudWxsLCB3cml0YWJsZTogdHJ1ZSwgZW51bWVyYWJsZTogZmFsc2UgfQogICAgICAgICAgfSk7CgogICAgICAgICAgc29ja2V0cy5hZGQod3MpOwogICAgICAgIH0sCiAgICAgICAgb25DbG9zZSh3cykgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCBkYmcgfSk7CiAgICAgICAgICBkYmc/LmNsb3NlKCk7CgogICAgICAgICAgcHJvdG9jb2wuZGVsZXRlKHdzKTsKICAgICAgICAgIHNvY2tldHMuZGVsZXRlKHdzKTsKICAgICAgICB9LAogICAgICAgIG9uRXJyb3Iod3MpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgd3MpOwogICAgICAgIH0sCiAgICAgICAgb25SZXF1ZXN0KHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc3QgeyBtZXRob2QsIGhlYWRlcnMgfSA9IHJlcTsKICAgICAgICAgIC8vY29uc29sZS5sb2coJ1x4MWJbMzg7NTszM21vblJlcXVlc3RceDFiWzBtIFtcbiAgJywgcmVxLCAnLFxuICAnLCByZXNwLCAnXG5dJyk7CiAgICAgICAgICBjb25zdCB7IGJvZHksIHVybCB9ID0gcmVzcDsKCiAgICAgICAgICBjb25zdCBmaWxlID0gdXJsLnBhdGguc2xpY2UoMSk7CiAgICAgICAgICBjb25zdCBkaXIgPSBmaWxlLnJlcGxhY2UoL1wvW15cL10qJC9nLCAnJyk7CiAgICAgICAgICBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbW9uUmVxdWVzdFx4MWJbMG0nLCB7IGZpbGUsIGRpciwgYm9keSB9KTsKCiAgICAgICAgICBpZihmaWxlLmVuZHNXaXRoKCcuanMnKSAmJiByZXNwLmJvZHkpIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnb25SZXF1ZXN0JywgeyBmaWxlLCBkaXIgfSk7CiAgICAgICAgICAgIGNvbnN0IHJlID0gL14oXHMqKGltfGV4KXBvcnRbXlxuXSpmcm9tIFsnIl0pKFteLi8nIl0qKShbJyJdXHMqO1tcdCBdKlxuPykvZ207CgogICAgICAgICAgICByZXNwLmJvZHkgPSBib2R5LnJlcGxhY2VBbGwocmUsIChtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4gewogICAgICAgICAgICAgIGlmKCEvW1wvXC5dLy50ZXN0KHAyKSkgewogICAgICAgICAgICAgICAgbGV0IGZuYW1lID0gYCR7cDJ9LmpzYDsKCiAgICAgICAgICAgICAgICBpZighZXhpc3RzU3luYyhkaXIgKyAnLycgKyBmbmFtZSkpIHJldHVybiBgLyogJHttYXRjaH0gKi9gOwoKICAgICAgICAgICAgICAgIG1hdGNoID0gW3AxLCAnLi8nICsgZm5hbWUsIHAzXS5qb2luKCcnKTsKCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdhcmdzJywgeyBtYXRjaCwgcDEsIHAyLCBwMywgb2Zmc2V0IH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gbWF0Y2g7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiByZXNwOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBkYXRhKSB7CiAgICAgICAgICBsZXQgY2hpbGQgPSB3cy5jaGlsZDsKICAgICAgICAgIC8vIHNob3dTZXNzaW9ucygpOwoKICAgICAgICAgIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpOwoKICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpIHsKICAgICAgICAgICAgbGV0IG9iaiA9IEpTT04ucGFyc2UoZGF0YSk7CgogICAgICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlKHgpJywgb2JqKTsKCiAgICAgICAgICAgIGNvbnN0IHsgY29tbWFuZCwgLi4ucmVzdCB9ID0gb2JqOwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnb25NZXNzYWdlJywgY29tbWFuZCwgcmVzdCk7CiAgICAgICAgICAgIGNvbnN0IHsgY29ubmVjdCA9IHRydWUsIGFkZHJlc3MgPSAnMTI3LjAuMC4xOicgKyBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAoNjU1MzUgLSAxMDI0KSkgKyAxMDI0LCBhcmdzID0gW10gfSA9IHJlc3Q7CgogICAgICAgICAgICBzd2l0Y2ggKGNvbW1hbmQpIHsKICAgICAgICAgICAgICBjYXNlICdzdGFydCc6IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3cycsIHdzKTsKICAgICAgICAgICAgICAgIGNoaWxkID0gd3MuY2hpbGQgPSBTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpOwoKICAgICAgICAgICAgICAgIGNvbnN0IHsgc3Rkb3V0LCBzdGRlcnIgfSA9IGNoaWxkOwogICAgICAgICAgICAgICAgZm9yKGxldCBmZCBvZiBbc3Rkb3V0LCBzdGRlcnJdKSB7CiAgICAgICAgICAgICAgICAgIGxldCBmbGFncyA9IGZjbnRsKGZkLCBGX0dFVEZMKTsKICAgICAgICAgICAgICAgICAgZmxhZ3MgfD0gT19OT05CTE9DSzsKICAgICAgICAgICAgICAgICAgZmNudGwoZmQsIEZfU0VURkwsIGZsYWdzKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zdCBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgogICAgICAgICAgICAgICAgICBjb25zdW1lKHJlYWRlcihmZCksIGJ1ZiA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB0b1N0cmluZyhidWYuc2xpY2UoMCwgcikpOwogICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coYHJlYWQoJHtmZH0sIGJ1ZikgPSAke3J9ICgke3F1b3RlKGRhdGEsICInIil9KWApOwoKICAgICAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnb3V0cHV0JywKICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IG5hbWUsCiAgICAgICAgICAgICAgICAgICAgICBkYXRhCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgZm9yd2FyZChzdGRvdXQsICdzdGRvdXQnKTsKICAgICAgICAgICAgICAgIGZvcndhcmQoc3RkZXJyLCAnc3RkZXJyJyk7CiAgICAgICAgICAgICAgICBkZWZpbmUoZ2xvYmFsVGhpcywgeyBzdGRvdXQsIHN0ZGVyciwgcmVhZGVyIH0pOwoKICAgICAgICAgICAgICAgIHNsZWVwKDEwMDApOwoKICAgICAgICAgICAgICAgIGxldCB0aWQsIGV4aXRlZDsKCiAgICAgICAgICAgICAgICB0aWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgIGxldCBwaWQgPSBjaGlsZC53YWl0KFdOT0hBTkcpOwoKICAgICAgICAgICAgICAgICAgaWYoKGV4aXRlZCA9IGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpKSkgewogICAgICAgICAgICAgICAgICAgIHdzLnNlbmRNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgICAgICAgICAgICBjb21tYW5kOiAnc3RhcnQnLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogYGNoaWxkIHByb2Nlc3MgJHtwaWR9ICR7ZXhpdGVkfWAKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRpZCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sIDEwMDApOwoKICAgICAgICAgICAgICAgIGxldCBwaWQgPSBjaGlsZC53YWl0KFdOT0hBTkcpOwoKICAgICAgICAgICAgICAgIGlmKChleGl0ZWQgPSBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKSkpIHsKICAgICAgICAgICAgICAgICAgd3Muc2VuZE1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgICAgICAgICAgY29tbWFuZDogJ3N0YXJ0JywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBgdW5hYmxlIHRvIHN0YXJ0IGRlYnVnZ2VyOiAke2V4aXRlZH1gCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zdCBjd2QgPSBwcm9jZXNzLmN3ZCgpOwogICAgICAgICAgICAgICAgd3Muc2VuZE1lc3NhZ2UoewogICAgICAgICAgICAgICAgICB0eXBlOiAncmVzcG9uc2UnLAogICAgICAgICAgICAgICAgICByZXNwb25zZTogewogICAgICAgICAgICAgICAgICAgIGNvbW1hbmQ6ICdzdGFydCcsCiAgICAgICAgICAgICAgICAgICAgYXJncywKICAgICAgICAgICAgICAgICAgICBjd2QsCiAgICAgICAgICAgICAgICAgICAgYWRkcmVzcwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgY2FzZSAnY29ubmVjdCc6IHsKICAgICAgICAgICAgICAgIGRiZyA9IHdzLmRiZyA9IENvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCAoZGJnLCBzb2NrKSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3YWl0KFdOT0hBTkcpID0nLCBjaGlsZC53YWl0KFdOT0hBTkcpKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NoaWxkJywgY2hpbGQpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY29ubmVjdCBjb21tYW5kJywgeyB3cywgZGJnIH0pOwogICAgICAgICAgICAgICAgc29ja2V0cy5hZGQoZGJnKTsKCiAgICAgICAgICAgICAgICBjb25zdCBjd2QgPSBwcm9jZXNzLmN3ZCgpOwogICAgICAgICAgICAgICAgbGV0IGNvbm5lY3RlZDsKCiAgICAgICAgICAgICAgICBkYmcucHJvY2Vzcyhtc2cgPT4gewogICAgICAgICAgICAgICAgICBpZighY29ubmVjdGVkKSB7CiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncmVzcG9uc2UnLAogICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29tbWFuZDogJ3N0YXJ0JywKICAgICAgICAgICAgICAgICAgICAgICAgYXJncywKICAgICAgICAgICAgICAgICAgICAgICAgY3dkLAogICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRGVidWdnZXIucmVhZCgpID0nLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IGZhbHNlLCBtYXhTdHJpbmdMZW5ndGg6IDIwMCB9KSwgbXNnKTsKICAgICAgICAgICAgICAgICAgICBtc2cgPSBKU09OLnN0cmluZ2lmeShtc2cpOwogICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBtc2cgPT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgICAgICAgICAgIGxldCByZXQ7CiAgICAgICAgICAgICAgICAgICAgICByZXQgPSB3cy5zZW5kKG1zZyk7CiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgd3Muc2VuZCgke3F1b3RlKG1zZywgIiciKX0pID0gJHtyZXR9YCk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbG9zZWQgc29ja2V0JywgZGJnKTsKICAgICAgICAgICAgICAgICAgICAgIHNvY2tldHMuZGVsZXRlKGRiZyk7CiAgICAgICAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlbmQnLAogICAgICAgICAgICAgICAgICAgICAgICByZWFzb246ICdjbG9zZWQnCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gY2F0Y2goZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCB7IG1lc3NhZ2UsIHN0YWNrIH0gPSBlcnJvcjsKICAgICAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InLAogICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHsgbWVzc2FnZSwgc3RhY2sgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGRiZy5jbG9zZSgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkYmcnLCBkYmcpOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGNhc2UgJ2ZpbGUnOiB7CiAgICAgICAgICAgICAgICBjb25zdCB7IHBhdGggfSA9IHJlc3Q7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gUmVhZEZpbGUocGF0aCwgJ3V0Zi04Jyk7CiAgICAgICAgICAgICAgICAvL3dzLnNlbmQoSlNPTi5zdHJpbmdpZnkoeyB0eXBlOiAncmVzcG9uc2UnLCByZXNwb25zZTogeyBjb21tYW5kOiAnZmlsZScsIHBhdGgsIGRhdGEgfSB9KSk7CgogICAgICAgICAgICAgICAgY29uc3QgbGV4ZXIgPSBuZXcgTGV4ZXIoZGF0YSwgcGF0aCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbGV4ZXInLCBsZXhlcik7CiAgICAgICAgICAgICAgICBjb25zdCBsaW5lcyA9IFtdOwoKICAgICAgICAgICAgICAgIGZvcig7OykgewogICAgICAgICAgICAgICAgICBjb25zdCB7IHBvcywgc2l6ZSB9ID0gbGV4ZXI7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsZXhlcicsIHsgcG9zLCBzaXplIH0pOwogICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gbGV4ZXIubmV4dCgpOwogICAgICAgICAgICAgICAgICBpZihyZXN1bHQuZG9uZSkgYnJlYWs7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuID0gcmVzdWx0LnZhbHVlOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndG9rZW4nLCB7CiAgICAgICAgICAgICAgICAgICAgbGV4ZW1lOiB0b2tlbi5sZXhlbWUsCiAgICAgICAgICAgICAgICAgICAgaWQ6IHRva2VuLmlkLAogICAgICAgICAgICAgICAgICAgIGxvYzogdG9rZW4ubG9jICsgJycKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHsgdHlwZSwgaWQsIGxleGVtZSwgbG9jIH0gPSB0b2tlbjsKICAgICAgICAgICAgICAgICAgY29uc3QgeyBsaW5lLCBjb2x1bW4sIGZpbGUgfSA9IGxvYzsKICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygndG9rZW4nLCB7bGV4ZW1lLGlkLGxpbmV9KTsKCiAgICAgICAgICAgICAgICAgIGlmKCFsaW5lc1tsaW5lIC0gMV0pIGxpbmVzLnB1c2goW10pOwogICAgICAgICAgICAgICAgICBsZXQgYSA9IGxpbmVzW2xpbmUgLSAxXTsKICAgICAgICAgICAgICAgICAgYS5wdXNoKFtsZXhlbWUsIGlkXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbGluZXMnLCBsaW5lcyk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgZGVmYXVsdDogewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NlbmQgdG8gZGVidWdnZXInLCB7IGNvbW1hbmQsIGRhdGEgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc2VuZCB0byBkZWJ1Z2dlcicsIHdzLmRiZyk7CgogICAgICAgICAgICAgICAgd3MuZGJnPy5zZW5kTWVzc2FnZShkYXRhKTsKCiAgICAgICAgICAgICAgICAvL0RlYnVnZ2VyUHJvdG9jb2wuc2VuZChkYmcsIGRhdGEpOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAvKmxldCBwID0gbmV3IERlYnVnZ2VyUHJvdG9jb2woKTsKICAgICAgICBwcm90b2NvbC5zZXQod3MsIHApOyovCiAgICAgICAgfSwKICAgICAgICAuLi4odXJsICYmIHVybC5ob3N0ID8gdXJsIDoge30pCiAgICAgIH0pCiAgICApOwogIH0KCiAgY29uc29sZS5sb2coJ1hYJyk7CgogIGRlbGV0ZSBnbG9iYWxUaGlzLkRFQlVHOwoKICBsZXQgaW5wdXRCdWYgPSBuZXcgQXJyYXlCdWZmZXIoMTApOwogIHR0eVNldFJhdygwKTsKCiAgc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgbGV0IHIgPSByZWFkU3luYygwLCBpbnB1dEJ1ZiwgMCwgaW5wdXRCdWYuYnl0ZUxlbmd0aCk7CgogICAgaWYociA+IDApIHsKICAgICAgbGV0IGEgPSBuZXcgVWludDhBcnJheShpbnB1dEJ1Zi5zbGljZSgwLCByKSk7CgogICAgICAvL2NvbnNvbGUubG9nKCdhJywgYSk7CgogICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykgaWYoYVtpXSA9PSAxMykgYVtpXSA9IDEwOwoKICAgICAgaWYoYS5sZW5ndGggPT0gMSAmJiBhWzBdID09IDEyNykgYSA9IG5ldyBVaW50OEFycmF5KFs4LCAweDIwLCA4XSk7CgogICAgICBpZihhLmxlbmd0aCA9PSAxICYmIGFbMF0gPT0gMjcpIHNob3dTZXNzaW9ucygpOwogICAgICBlbHNlIHdyaXRlU3luYygxLCBhLmJ1ZmZlcik7CiAgICB9CiAgfSk7CgogIGZ1bmN0aW9uIHNob3dTZXNzaW9ucygpIHsKICAgIGxldCBzZXNzaW9ucyA9IGdldFNlc3Npb25zKCk7CiAgICBjb25zb2xlLmxvZygnc2Vzc2lvbnMnLCBjb25zb2xlLmNvbmZpZyh7IG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwgZGVwdGg6IDQsIGN1c3RvbUluc3BlY3Q6IHRydWUsIGNvbXBhY3Q6IDAgfSksIHNlc3Npb25zKTsKICB9CgogIC8vc2V0SW50ZXJ2YWwoKCkgPT4gY29uc29sZS5sb2coJ2ludGVydmFsJyksIDUwMDApOwoKICBnbG9iYWxUaGlzLnNlcnZlciA9IGNyZWF0ZVdTKGB3c3M6Ly8ke2FkZHJlc3N9Ojg5OTgvd3NgLCB7fSwgdHJ1ZSk7CgogIGRlZmluZShnbG9iYWxUaGlzLCB7CiAgICBnZXQgY29ubmVjdGlvbnMoKSB7CiAgICAgIHJldHVybiBbLi4uZ2xvYmFsVGhpcy5zb2NrZXRzXTsKICAgIH0sCiAgICBnZXQgc29ja2xpc3QoKSB7CiAgICAgIHJldHVybiBbLi4uZ2xvYmFsVGhpcy5zb2NrZXRzXTsKICAgIH0sCiAgICBuZXQ6IHsgc2V0TG9nLCBMTExfVVNFUiwgTExMX05PVElDRSwgTExMX1dBUk4sIGNyZWF0ZVNlcnZlciB9LAogICAgVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyLAogICAgTmV3RGVidWdnZXIsCiAgICBMYXVuY2hEZWJ1Z2dlciwKICAgIFN0YXJ0RGVidWdnZXIsCiAgICBDb25uZWN0RGVidWdnZXIsCiAgICBEZWJ1Z2dlckRpc3BhdGNoZXIsCiAgICBEZWJ1Z2dlclByb3RvY29sLAogICAgR2V0RnVuY3Rpb25OYW1lLAogICAgRmluZEZ1bmN0aW9ucywKICAgIExvYWRBU1QsCiAgICBUYWJsZSwKICAgIExpc3QsCiAgICBnZXQgZmlsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmlsZXNbdGhpcy5zY3JpcHRdOwogICAgfSwKICAgIGZpbGVzOiBwcm9wZXJ0eUxvb2t1cCgKICAgICAgKGdsb2JhbFRoaXMuZmlsZUNhY2hlID0ge30pLAogICAgICBtZW1vaXplKChmaWxlLCBzb3VyY2UpID0+IHsKICAgICAgICBzb3VyY2UgPz89IHRyeUNhdGNoKAogICAgICAgICAgKCkgPT4gVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyKFJlYWRGaWxlKGZpbGUpKSwKICAgICAgICAgIHMgPT4gcywKICAgICAgICAgICgpID0+IFJlYWRGaWxlKGZpbGUpCiAgICAgICAgKTsKICAgICAgICByZXR1cm4gZGVmaW5lKAogICAgICAgICAgewogICAgICAgICAgICBzb3VyY2UsCiAgICAgICAgICAgIGluZGV4bGlzdDogWy4uLnNvdXJjZS5tYXRjaEFsbCgvXlteXG5dKi9nbSldLm1hcChtID0+IG0uaW5kZXgpCiAgICAgICAgICB9LAogICAgICAgICAgbGF6eVByb3BlcnRpZXMoCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBsaW5lKGksIGopIHsKICAgICAgICAgICAgICAgIGlmKGkgPT09IHVuZGVmaW5lZCkgcmV0dXJuICcnOwogICAgICAgICAgICAgICAgY29uc3QgeyBzb3VyY2UsIGluZGV4bGlzdCB9ID0gdGhpczsKICAgICAgICAgICAgICAgIGogPz89IGkgKyAxOwogICAgICAgICAgICAgICAgY29uc3QgbSA9IG1vZChpbmRleGxpc3QubGVuZ3RoIC0gMSk7CiAgICAgICAgICAgICAgICBjb25zdCBbc3RhcnQsIGVuZF0gPSBbaW5kZXhsaXN0W20oaSldLCBpbmRleGxpc3RbbShqKV1dOwogICAgICAgICAgICAgICAgbGV0IGxpbmUgPSBzb3VyY2Uuc2xpY2Uoc3RhcnQsIChlbmQgPz8gMCkgLSAxKTsKCiAgICAgICAgICAgICAgICBpZihbLi4ubGluZS5tYXRjaEFsbCgvXHgxYihbXkEtWmEtel0qW0EtWmEtel0pL2cpXS5sYXN0ICE9ICdceDFiWzBtJykgbGluZSArPSAnXHgxYlswbSc7CgogICAgICAgICAgICAgICAgcmV0dXJuIGxpbmU7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtYXRjaChyZSkgewogICAgICAgICAgICAgICAgaWYodHlwZW9mIHJlID09ICdzdHJpbmcnKSByZSA9IG5ldyBSZWdFeHAocmUsICdnaScpOwoKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZ1bmN0aW9ucy50aGVuKGZucyA9PgogICAgICAgICAgICAgICAgICBkZWZpbmUoCiAgICAgICAgICAgICAgICAgICAgZm5zLmZpbHRlcigoeyBuYW1lIH0pID0+IHJlLnRlc3QobmFtZSkpLAogICAgICAgICAgICAgICAgICAgIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdGdW5jdGlvbkxpc3QnLCBmaWxlIH0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAvLyBlc3RyZWU6ICgpID0+ICwKICAgICAgICAgICAgICBhc3luYyBmdW5jdGlvbnMoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKGdsb2JhbFRoaXMuZnVuY3Rpb25DYWNoZSA9IFsuLi5GaW5kRnVuY3Rpb25zKChnbG9iYWxUaGlzLmFzdCA9IGF3YWl0IExvYWRBU1QoZmlsZSkpKV0ubWFwKChbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogICAgICAgICAgICAgICAgICBkZWZpbmUoCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHBhcmFtcywKICAgICAgICAgICAgICAgICAgICAgIC4uLmxvYywKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb24KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsgcGF0aCB9CiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyBhc3luYzogZmFsc2UgfQogICAgICAgICAgKQogICAgICAgICk7CiAgICAgIH0pCiAgICApLAogICAgYXN5bmMgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKSB7CiAgICAgIGxldCByOwogICAgICBpZih0eXBlb2YgY29uZCA9PSAnbnVtYmVyJykgewogICAgICAgIGxldCBuID0gY29uZDsKICAgICAgICBjb25kID0gKHIsIGkpID0+IGkgPj0gbiB8fCByID09PSB0cnVlOwogICAgICB9CiAgICAgIGZvcihsZXQgaSA9IDA7IDsgaSsrKSB7CiAgICAgICAgciA9IGF3YWl0IGZuKC4uLmFyZ3MpOwoKICAgICAgICBpZihjb25kKHIsIGkpKSBicmVhazsKICAgICAgfQogICAgICByZXR1cm4gcjsKICAgIH0sCiAgICByZXBsOiBTdGFydFJFUEwoKQogIH0pOwoKICBmdW5jdGlvbiBxdWl0KHdoeSkgewogICAgY29uc29sZS5sb2coYHF1aXQoJyR7d2h5fScpYCk7CgogICAgbGV0IGNmZyA9IHsgaW5zcGVjdE9wdGlvbnM6IGNvbnNvbGUub3B0aW9ucyB9OwogICAgV3JpdGVKU09OKGAuJHtiYXNlfS1jb25maWdgLCBjZmcpOwogICAgLy8gcmVwbC5jbGVhbnVwKHdoeSk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvcj8ubWVzc2FnZSA/PyBlcnJvcn1cbiR7ZXJyb3I/LnN0YWNrfWApOwp9IGZpbmFsbHkgewogIC8vY29uc29sZS5sb2coJ1NVQ0NFU1MnKTsKfQoAAAAAAAAAAIl4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliAAAAAAAACWIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1162,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAADgdAAAAAAAAOR0AAAAAAAAAAAAAOR0AAAAAAAA5HQAAAAAAAAQAAAAxOzM2",
					"AQAAAAAAAAABAAAAOB0AAAAAAAA8HQAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					2,
					"right_delete",
					null,
					"AgAAADodAAAAAAAAOh0AAAAAAAABAAAAKDodAAAAAAAAOh0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAOh0AAAAAAAA6HQAAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"upper_case",
					null,
					"AQAAACwdAAAAAAAAMx0AAAAAAAAHAAAAcHJvY2Vzcw",
					"AQAAAAAAAAABAAAALB0AAAAAAAAzHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1184,
					1,
					"left_delete",
					null,
					"AQAAAAQgAAAAAAAABCAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAABSAAAAAAAAAFIAAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"left_delete",
					null,
					"AQAAAF8dAAAAAAAAXx0AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAYB0AAAAAAABgHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"cut",
					null,
					"AQAAAJIdAAAAAAAAkh0AAAAAAABIAAAALy8gY29uc29sZS50aW1lKGZ1bmNOYW1lICsgJzogXHgxYlszODs1OzgybWNhbGxiYWNrXHgxYlswbScpOwogICAgICAgICAg",
					"AQAAAAAAAAABAAAAkh0AAAAAAADaHQAAAAAAAAAAAAAAgFtA"
				],
				[
					1198,
					1,
					"cut",
					null,
					"AQAAALgdAAAAAAAAuB0AAAAAAABLAAAALy8gY29uc29sZS50aW1lRW5kKGZ1bmNOYW1lICsgJzogXHgxYlszODs1OzgybWNhbGxiYWNrXHgxYlswbScpOwogICAgICAgICAg",
					"AQAAAAAAAAABAAAAuB0AAAAAAAADHgAAAAAAAAAAAAAAgFtA"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/check-dep.js",
			"settings":
			{
				"buffer_size": 11487,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAADotAAAAAAAAOy0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSFgAAAAAAAFgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCBAAAAAAAAMsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwgQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ou",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/dir-helpers.js",
		"/home/roman/Projects/plot-cv/lib/location.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/io.js",
		"/home/roman/Projects/plot-cv/search-engine.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/eagle-server.js",
		"/home/roman/Projects/plot-cv/lib/eagle/common.js",
		"/home/roman/Projects/an-tronics/eagle/StyroCutter-556-heatsink-5V.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/bbox.js",
		"/home/roman/Projects/plot-cv/lib/whatwg/url.js",
		"/home/roman/Projects/plot-cv/lib/whatwg/observable.js",
		"/home/roman/Projects/plot-cv/lib/defer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/circle.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/package.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/signals.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/libraryRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/dump-ast.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/xml2react.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/importReplacer.js",
		"/home/roman/Projects/plot-cv/cursor.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/create-tamper.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/lib/fetch.js",
		"/home/roman/Projects/plot-cv/eagle-commands.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/adsb-server.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/adsb-map.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/lib/stream/utils.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/lib/lexer.js",
		"/home/roman/Projects/plot-cv/lib/stack.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/test-opencv-worker.js",
		"/home/roman/Projects/plot-cv/opencv-worker.js",
		"/home/roman/Projects/plot-cv/lib/web-streams-polyfill.js",
		"/home/roman/Projects/plot-cv/lib/container/sortedMap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/lib/cbor.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/tmp/VCF-LM324-Stereo-LFO-POT2x3.board.svg",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/test-util.js",
		"/home/roman/Projects/plot-cv/test-ffi.js",
		"/home/roman/Projects/plot-cv/lib/repeater/limiters.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFocus.js",
		"/home/roman/Projects/plot-cv/lib/autoplacer/autoplacer.js",
		"/home/roman/Projects/plot-cv/lib/gerber/parser.js",
		"/home/roman/Projects/plot-cv/lib/color/rgba.js",
		"/home/roman/Projects/plot-cv/lib/geom.js",
		"/home/roman/Projects/plot-cv/lib/lua.js",
		"/home/roman/Projects/plot-cv/lib/devtools.js",
		"/home/roman/Projects/plot-cv/get-msys-packages.js",
		"/home/roman/Projects/plot-cv/xml2js.js",
		"/home/roman/Projects/plot-cv/test-eagle.js",
		"/home/roman/Projects/plot-cv/lib/github.js",
		"/home/roman/Projects/plot-cv/lib/consoleSetup.js",
		"/home/roman/Projects/plot-cv/test-renderer.js",
		"/home/roman/Projects/plot-cv/test-attributes.js",
		"/home/roman/Projects/plot-cv/svgtransform.js",
		"/home/roman/Projects/plot-cv/svg-scale.js",
		"/home/roman/Projects/plot-cv/lib/iterator.js",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/lib/eventEmitter.js",
		"/home/roman/Projects/plot-cv/immutableClass.js",
		"/home/roman/Projects/plot-cv/test-websocket.js",
		"/home/roman/Projects/plot-cv/test-stack.js",
		"/home/roman/Projects/plot-cv/test-parsetmpl.js",
		"/home/roman/Projects/plot-cv/test-membrane.js",
		"/home/roman/Projects/plot-cv/test-jsjs.js",
		"/home/roman/Projects/plot-cv/test-filesystem.js",
		"/home/roman/Projects/plot-cv/read-deps.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/deep.js",
		"/home/roman/Projects/plot-cv/plot-cv.js",
		"/home/roman/Projects/plot-cv/message.js",
		"/home/roman/Projects/plot-cv/lib/swipeTracker.js",
		"/home/roman/Projects/plot-cv/lib/sourceMap.js",
		"/home/roman/Projects/plot-cv/lib/devpane.js",
		"/home/roman/Projects/plot-cv/convert-imports.js",
		"/home/roman/Projects/plot-cv/test-repl.js",
		"/home/roman/Projects/plot-cv/test-parsexml.js",
		"/home/roman/Projects/plot-cv/test-eval.js",
		"/home/roman/Projects/plot-cv/test-coverage.js",
		"/home/roman/Projects/plot-cv/test-console.js",
		"/home/roman/Projects/plot-cv/test-cli.js",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_contours.js",
		"/home/roman/Projects/plot-cv/lib/lazyInitializer.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/lib/inspect.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/lib/OpenLayers.js",
		"/home/roman/Projects/plot-cv/lib/process.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/colorscheme.js",
		"/home/roman/Projects/plot-cv/clang-list.js"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*,-*/doc/html/*,-*/openlayers/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*,-*/doc/html/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.jsx,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"RECEIVE",
			"38;5",
			"process.*\\(",
			"ConnectDebug",
			"LaunchDebugger\\(",
			"ConnectDebugger",
			"NewDebugger",
			"\\bon\\b",
			"'on",
			"'on'",
			"waitEvent",
			"'on'",
			"onstopped",
			"stopped",
			"recv\\(",
			"atexit",
			"atexist",
			"sendMessage",
			" sendMessage",
			"sendMessage",
			"send\\b",
			"sendMessage",
			"send\\b",
			"send",
			"sendMessage",
			"debug",
			"sendMessage",
			"decorate",
			"stackTrace",
			"next",
			"statusRes",
			"decorate\\(",
			"unused",
			"RPCServer",
			"RPCApi",
			"assign",
			"define, ",
			"define",
			"commant",
			"consume",
			"forward\\(",
			"StartDebugger",
			"StartDeb",
			"');",
			"timeEnd",
			"wait\\(",
			"wait",
			"checkChildExited",
			"child.wait",
			"checkChildExited",
			"signalName",
			"std\\.",
			"os\\.",
			"setRead",
			"os\\.",
			"std\\.",
			"setInterval",
			"process\\(",
			"callback",
			"process\\(",
			"console.config",
			"sendMessage",
			"'error'",
			"wait\\(\\)",
			"wait\\(",
			"Spawn\\(",
			"Spawn",
			"StartDebugger",
			"child = ",
			" Start\\(",
			"child\\.wait",
			"child_process",
			"\\bStart\\b",
			"DNS",
			"#entriesCast",
			"entriesCast",
			"#getCast",
			"getCast",
			"MapLike",
			"_getCast",
			"this\\._",
			"\\b_address\\b",
			"this\\._",
			"SearchParams",
			"_entriesCast",
			"_getCast",
			"#getCast",
			"_entriesCast",
			"_getCast",
			"_entriesCast",
			"_getCast",
			"this\\._url",
			"^export class",
			"this\\._query",
			"this\\._url",
			"this\\.#url",
			"this\\._url",
			"\\._url",
			"this\\._map",
			"this\\.#map",
			"this\\._map",
			"class URLSea",
			"addAcChild",
			"AbortSignal",
			"Subscriber",
			"^export ",
			"signal",
			"addAc",
			"addAcChild",
			"Child",
			"^}\\n([^\\n])",
			"prevName",
			"ElementToComponent\\(",
			"ElementNameToComponent\\(",
			"PrimitiveComponents",
			"RenderElement\\(",
			"ElementToComponent\\(",
			"ElementToComponent",
			"ElementToComponent\\(",
			"ElementNameToComponent\\(",
			"ElementNameToComponent",
			"CONTEXT_VERSION_M",
			"CONTEXT_VERSION_MAJOR",
			"Clear",
			"cv\\.",
			"context",
			"glfw\\.",
			"CONTEXT_VERSION_MAJOR"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"_entriesCast",
			"_getCast",
			"#address",
			"#entriesCast",
			"#getCast",
			"#entriesCast",
			"#getCast",
			"#entriesCast",
			"this.#url",
			"this.#query",
			"this.#url",
			"this.#map",
			"}\\n\\n\\1",
			"",
			" './",
			"process.cwd()",
			"fs.",
			"log",
			"TestOpenCVWorker",
			"",
			",",
			"",
			"Pointer",
			"setRect(viewBox);",
			"},",
			"",
			"lookup('",
			"",
			"doRender",
			"doRender(",
			"unmount(",
			"diffElementNodes(",
			"commitRoot(",
			"diff(",
			"reorderChildren(",
			"eventProxyCapture(",
			"eventProxy(",
			"setProperty(",
			"setStyle(",
			"applyRef(",
			"diffProps(",
			"placeChild(",
			"diffChildren(",
			"enqueueRender(",
			"process",
			"process(",
			"updateParentDomPointers(",
			"getDomSibling(",
			"createVNode(",
			"createElement(",
			"createElement",
			"removeNode(",
			"assign(",
			"invokeOrReturn",
			"argsChanged",
			"invokeEffect",
			"invokeCleanup",
			"HAS_RAF",
			"flushAfterPaintEffects",
			"oldBeforeUnmount",
			"oldCommit",
			"oldAfterDiff",
			"oldBeforeRender",
			"afterPaintEffects",
			"currentHook",
			"currentIndex",
			"currentComponent",
			"diff(",
			"",
			"^",
			" \\\\\\n\\t--",
			"",
			"strokeStyle",
			"export function",
			"",
			"\\n\\n",
			"\\1//console.log",
			"\\1console.log",
			"",
			"spawn",
			"}\\n\\n\\1\\2",
			"}\\n\\n  \\1",
			"buf",
			"\\1",
			"debug(`\\1 ${\\2}`)",
			"fs.readFileSync",
			", ",
			"strOrRegex",
			"argumentsOfType",
			"valuePointer",
			"file",
			"arrayOrString",
			"",
			"\\1//console.",
			"obj[name]"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 18,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1689803176.6,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11545,
						"regions":
						{
						},
						"selection":
						[
							[
								6148,
								6149
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 127,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1689808335.9,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								6,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3452.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11563,
						"regions":
						{
						},
						"selection":
						[
							[
								3920,
								3920
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 123,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1689799034.59,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2706.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30703,
						"regions":
						{
						},
						"selection":
						[
							[
								30342,
								30344
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 253,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1689803292.1,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21250.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs/qjs-net/check-dep.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11487,
						"regions":
						{
						},
						"selection":
						[
							[
								1218,
								1227
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 53,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1689797381.01,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 548.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.coffeecompile_output":
	{
		"height": 162.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"",
				"debugger.js"
			],
			[
				"os-helpers",
				"os-helpers.js"
			],
			[
				"defer.js",
				"lib/defer.js"
			],
			[
				"ecmascript/lexer",
				"lib/ecmascript/lexer.js"
			],
			[
				"lexer.js",
				"lib/lexer.js"
			],
			[
				"stack.js",
				"lib/stack.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"geom/bbox",
				"lib/geom/bbox.js"
			],
			[
				"compone",
				"lib/eagle/components.js"
			],
			[
				"create-tamp",
				"create-tamper.js"
			],
			[
				"cursor.j",
				"cursor.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"eagle-comm",
				"eagle-commands.js"
			],
			[
				"componen",
				"components.js"
			],
			[
				"lib/fetch",
				"lib/fetch.js"
			],
			[
				"importRe",
				"importReplacer.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"resolve-impo",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"adsb-server",
				"adsb-server.js"
			],
			[
				"adsb-ser",
				"adsb-server.js"
			],
			[
				"xml2reac",
				"xml2react.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"os-help",
				"os-helpers.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"dir-help",
				"dir-helpers.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-nanovg",
				"test-nanovg.js"
			],
			[
				"test-opencv-w",
				"test-opencv-worker.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"lib/util",
				"lib/util.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"importReplace",
				"importReplacer.js"
			],
			[
				"io-helpers",
				"io-helpers.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"dump-as",
				"dump-ast.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"commands.js",
				"commands.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"eagle-shel",
				"eagle-shell.js"
			],
			[
				"eventEmi",
				"lib/eventEmitter.js"
			],
			[
				"lib/OpenLay",
				"lib/OpenLayers.js"
			],
			[
				"commands.",
				"commands.js"
			],
			[
				"load-server",
				"upload-server.js"
			],
			[
				"search-engine",
				"search-engine.js"
			],
			[
				"eagle-server",
				"eagle-server.js"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"hashList",
				"lib/container/hashList.js"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"async/dec",
				"lib/async/debounce.js"
			],
			[
				"til.js",
				"lib/util.js"
			],
			[
				"parser2",
				"lib/ecmascript/parser2.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"estree",
				"lib/ecmascript/estree.js"
			],
			[
				"renderUt",
				"lib/eagle/renderUtils.js"
			],
			[
				"devtool",
				"lib/devtools.js"
			],
			[
				"eagle-com",
				"eagle-commands.js"
			],
			[
				"lineLis",
				"lib/geom/lineList.js"
			],
			[
				"css.js",
				"lib/dom/css.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"lscache",
				"lib/lscache.js"
			],
			[
				"command",
				"commands.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"docum",
				"lib/eagle/document.js"
			],
			[
				"ref.js",
				"lib/eagle/ref.js"
			],
			[
				"size.js",
				"lib/geom/size.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"bbox",
				"lib/geom/bbox.js"
			],
			[
				"matrix.js",
				"lib/geom/matrix.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"ruler-dra",
				"ruler-draggable.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"dom/ele",
				"lib/dom/element.js"
			],
			[
				"symbol.js",
				"lib/eagle/components/symbol.js"
			],
			[
				"text.js",
				"lib/eagle/components/text.js"
			],
			[
				"textEle",
				"lib/eagle/components/textElement.js"
			],
			[
				"transform",
				"lib/geom/transformation.js"
			],
			[
				"transformation",
				"lib/geom/transformation.js"
			],
			[
				"renderer",
				"lib/eagle/renderer.js"
			],
			[
				"board",
				"lib/eagle/boardRenderer.js"
			],
			[
				"element.js",
				"lib/eagle/element.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"nodeList",
				"lib/eagle/nodeList.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"common.js",
				"lib/eagle/common.js"
			],
			[
				"svgren",
				"lib/eagle/svgRenderer.js"
			],
			[
				"components.js",
				"lib/eagle/components.js"
			],
			[
				"preact.js",
				"preact.js"
			],
			[
				"preact.mjs",
				"lib/preact.mjs"
			],
			[
				"react.mod",
				"lib/preact.module.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"preact.module",
				"lib/preact.module.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"event.js",
				"lib/iterator/event.js"
			],
			[
				"preact.stand",
				"lib/preact.standalone.js"
			],
			[
				"package.json",
				"package.json"
			],
			[
				"importrepl",
				"importReplacer.js"
			],
			[
				"compile",
				"lib/compileCommand.js"
			],
			[
				"testsock",
				"test-sockets.js"
			],
			[
				"test-socke",
				"test-sockets.js"
			],
			[
				"test-ffi",
				"test-ffi.js"
			],
			[
				"vec3",
				"lib/gl-matrix/vec3.js"
			],
			[
				"gl-matrix/vec",
				"lib/gl-matrix/vec4.js"
			],
			[
				"359",
				"tmp/discogs/8369022-359.html"
			],
			[
				"bbox.",
				"lib/geom/bbox.js"
			],
			[
				"align.js",
				"lib/geom/align.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"svg-crop",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1017.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
