{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/util.js",
						"symkeys":
						[
							[
								132,
								149
							],
							[
								384,
								433
							],
							[
								1320,
								1324
							],
							[
								2140,
								2147
							],
							[
								2669,
								2683
							],
							[
								2943,
								2949
							],
							[
								3052,
								3079
							],
							[
								3127,
								3158
							],
							[
								3314,
								3324
							],
							[
								3363,
								3387
							],
							[
								3454,
								3470
							],
							[
								3515,
								3532
							],
							[
								3580,
								3600
							],
							[
								3651,
								3674
							],
							[
								3722,
								3748
							],
							[
								4149,
								4154
							],
							[
								4213,
								4237
							],
							[
								4260,
								4276
							],
							[
								4291,
								4302
							],
							[
								4342,
								4358
							],
							[
								4373,
								4385
							],
							[
								4426,
								4442
							],
							[
								4457,
								4472
							],
							[
								4516,
								4532
							],
							[
								4547,
								4565
							],
							[
								4612,
								4628
							],
							[
								4643,
								4664
							],
							[
								4714,
								4730
							],
							[
								4745,
								4769
							],
							[
								4895,
								4918
							],
							[
								5001,
								5021
							],
							[
								5276,
								5288
							],
							[
								5338,
								5350
							],
							[
								5470,
								5493
							],
							[
								5576,
								5603
							],
							[
								5858,
								5879
							],
							[
								5942,
								5963
							],
							[
								6099,
								6123
							],
							[
								6209,
								6216
							],
							[
								6237,
								6244
							],
							[
								6274,
								6296
							],
							[
								6379,
								6386
							],
							[
								6404,
								6411
							],
							[
								6436,
								6458
							],
							[
								6508,
								6515
							],
							[
								6569,
								6576
							],
							[
								6608,
								6637
							],
							[
								6983,
								7008
							],
							[
								7135,
								7154
							],
							[
								7236,
								7255
							],
							[
								7442,
								7461
							],
							[
								7539,
								7558
							],
							[
								7623,
								7642
							],
							[
								7738,
								7778
							],
							[
								7920,
								7933
							],
							[
								7959,
								7992
							],
							[
								8241,
								8255
							],
							[
								8416,
								8423
							],
							[
								8640,
								8646
							],
							[
								9052,
								9076
							],
							[
								9455,
								9491
							],
							[
								9533,
								9551
							],
							[
								9734,
								9771
							],
							[
								9852,
								9870
							],
							[
								9888,
								9899
							],
							[
								9965,
								9999
							],
							[
								10026,
								10044
							],
							[
								10319,
								10364
							],
							[
								10564,
								10582
							],
							[
								10833,
								10859
							],
							[
								11118,
								11137
							],
							[
								11216,
								11235
							],
							[
								11385,
								11433
							],
							[
								11614,
								11629
							],
							[
								11655,
								11665
							],
							[
								11752,
								11757
							],
							[
								12524,
								12530
							],
							[
								12606,
								12611
							],
							[
								12620,
								12625
							],
							[
								12654,
								12663
							],
							[
								12687,
								12697
							],
							[
								12719,
								12732
							],
							[
								12760,
								12774
							],
							[
								12800,
								12817
							],
							[
								12845,
								12863
							],
							[
								12964,
								12969
							],
							[
								13177,
								13200
							],
							[
								13651,
								13655
							],
							[
								13697,
								13701
							],
							[
								13808,
								13820
							],
							[
								14409,
								14419
							],
							[
								14507,
								14535
							],
							[
								14569,
								14575
							],
							[
								14637,
								14661
							],
							[
								14691,
								14732
							],
							[
								15008,
								15020
							],
							[
								15053,
								15085
							],
							[
								15127,
								15167
							],
							[
								15321,
								15341
							],
							[
								16627,
								16657
							],
							[
								16717,
								16754
							],
							[
								16939,
								16945
							],
							[
								17160,
								17190
							],
							[
								17270,
								17302
							],
							[
								17530,
								17560
							],
							[
								17697,
								17700
							],
							[
								17837,
								17871
							],
							[
								18028,
								18060
							],
							[
								18350,
								18378
							],
							[
								18456,
								18485
							],
							[
								18560,
								18597
							],
							[
								18647,
								18682
							],
							[
								18863,
								18898
							],
							[
								19198,
								19221
							],
							[
								19252,
								19276
							],
							[
								19340,
								19367
							],
							[
								19400,
								19440
							],
							[
								19558,
								19601
							],
							[
								19904,
								19933
							],
							[
								19990,
								20004
							],
							[
								20053,
								20082
							],
							[
								20124,
								20151
							],
							[
								20261,
								20268
							],
							[
								20288,
								20316
							],
							[
								20406,
								20433
							],
							[
								20472,
								20499
							],
							[
								20549,
								20573
							],
							[
								20648,
								20683
							],
							[
								20785,
								20817
							],
							[
								20902,
								20936
							],
							[
								21021,
								21051
							],
							[
								21271,
								21281
							],
							[
								21334,
								21338
							],
							[
								21406,
								21443
							],
							[
								21480,
								21497
							],
							[
								21520,
								21537
							],
							[
								21597,
								21614
							],
							[
								21700,
								21709
							],
							[
								21781,
								21795
							],
							[
								21863,
								21868
							],
							[
								22566,
								22604
							],
							[
								22755,
								22790
							],
							[
								22874,
								22892
							],
							[
								22950,
								22994
							],
							[
								23008,
								23017
							],
							[
								23049,
								23077
							],
							[
								23091,
								23100
							],
							[
								23169,
								23212
							],
							[
								23332,
								23365
							],
							[
								23392,
								23399
							],
							[
								23528,
								23533
							],
							[
								23549,
								23583
							],
							[
								23660,
								23686
							],
							[
								23784,
								23818
							],
							[
								23841,
								23855
							],
							[
								23890,
								23940
							],
							[
								24078,
								24124
							],
							[
								24185,
								24247
							],
							[
								24258,
								24274
							],
							[
								24409,
								24446
							],
							[
								24485,
								24542
							],
							[
								24913,
								24947
							],
							[
								25077,
								25116
							],
							[
								25191,
								25228
							],
							[
								25345,
								25376
							],
							[
								26131,
								26174
							],
							[
								26305,
								26310
							],
							[
								26466,
								26500
							],
							[
								26708,
								26744
							],
							[
								26806,
								26832
							],
							[
								27592,
								27617
							],
							[
								27685,
								27713
							],
							[
								28306,
								28325
							],
							[
								28420,
								28435
							],
							[
								28563,
								28588
							],
							[
								28888,
								28945
							],
							[
								29068,
								29133
							],
							[
								29243,
								29295
							],
							[
								29416,
								29466
							],
							[
								29582,
								29597
							],
							[
								29668,
								29679
							],
							[
								29767,
								29778
							],
							[
								29804,
								29819
							],
							[
								29897,
								29911
							],
							[
								29951,
								29970
							],
							[
								30193,
								30282
							],
							[
								30285,
								30382
							],
							[
								30438,
								30450
							],
							[
								30515,
								30529
							],
							[
								30561,
								30567
							],
							[
								30610,
								30618
							],
							[
								30664,
								30672
							],
							[
								30728,
								30743
							],
							[
								30796,
								30803
							],
							[
								30914,
								30924
							],
							[
								31066,
								31076
							],
							[
								31139,
								31146
							],
							[
								31231,
								31258
							],
							[
								31282,
								31291
							],
							[
								31317,
								31325
							],
							[
								31342,
								31351
							],
							[
								31390,
								31398
							],
							[
								31409,
								31422
							],
							[
								31433,
								31448
							],
							[
								31477,
								31495
							],
							[
								31575,
								31599
							],
							[
								32020,
								32054
							],
							[
								32085,
								32096
							],
							[
								32101,
								32111
							],
							[
								32125,
								32136
							],
							[
								32157,
								32193
							],
							[
								32697,
								32727
							],
							[
								32771,
								32802
							],
							[
								33037,
								33059
							],
							[
								33119,
								33145
							],
							[
								33261,
								33272
							],
							[
								33384,
								33415
							],
							[
								33619,
								33644
							],
							[
								33711,
								33763
							],
							[
								33875,
								33897
							],
							[
								33903,
								33924
							],
							[
								33941,
								33973
							],
							[
								34093,
								34128
							],
							[
								34193,
								34226
							],
							[
								34273,
								34285
							],
							[
								34355,
								34367
							],
							[
								34424,
								34455
							],
							[
								34499,
								34541
							],
							[
								34717,
								34745
							],
							[
								34856,
								34886
							],
							[
								34898,
								34915
							],
							[
								35039,
								35075
							],
							[
								35152,
								35178
							],
							[
								35220,
								35259
							],
							[
								35371,
								35375
							],
							[
								35402,
								35406
							],
							[
								35445,
								35449
							],
							[
								35477,
								35481
							],
							[
								35504,
								35540
							],
							[
								35578,
								35610
							],
							[
								35728,
								35769
							],
							[
								35862,
								35886
							],
							[
								35909,
								35920
							],
							[
								35938,
								35955
							],
							[
								36041,
								36065
							],
							[
								36088,
								36114
							],
							[
								36570,
								36602
							],
							[
								36856,
								36865
							],
							[
								36896,
								36905
							],
							[
								36936,
								36945
							],
							[
								36976,
								36985
							],
							[
								37016,
								37025
							],
							[
								37055,
								37064
							],
							[
								37095,
								37104
							],
							[
								37113,
								37133
							],
							[
								37177,
								37182
							],
							[
								37225,
								37234
							],
							[
								37402,
								37435
							],
							[
								37809,
								37835
							],
							[
								38061,
								38104
							],
							[
								38146,
								38158
							],
							[
								38236,
								38281
							],
							[
								38402,
								38422
							],
							[
								38543,
								38550
							],
							[
								38569,
								38576
							],
							[
								38756,
								38785
							],
							[
								38914,
								38959
							],
							[
								39087,
								39119
							],
							[
								39198,
								39219
							],
							[
								39470,
								39488
							],
							[
								39675,
								39688
							],
							[
								39810,
								39858
							],
							[
								39871,
								39880
							],
							[
								39918,
								39928
							],
							[
								39975,
								40009
							],
							[
								40286,
								40328
							],
							[
								40382,
								40420
							],
							[
								40582,
								40601
							],
							[
								40801,
								40840
							],
							[
								40974,
								40991
							],
							[
								41531,
								41551
							],
							[
								41639,
								41658
							],
							[
								41699,
								41718
							],
							[
								43571,
								43578
							],
							[
								43593,
								43600
							],
							[
								45217,
								45250
							],
							[
								45398,
								45407
							],
							[
								45427,
								45435
							],
							[
								45439,
								45448
							],
							[
								45589,
								45617
							],
							[
								45731,
								45759
							],
							[
								45873,
								45891
							],
							[
								46270,
								46305
							],
							[
								46345,
								46372
							],
							[
								46453,
								46501
							],
							[
								46702,
								46789
							],
							[
								46800,
								46816
							],
							[
								46925,
								46965
							],
							[
								46991,
								46995
							],
							[
								47012,
								47017
							],
							[
								47036,
								47041
							],
							[
								47059,
								47096
							],
							[
								47122,
								47126
							],
							[
								47132,
								47138
							],
							[
								47153,
								47159
							],
							[
								47167,
								47173
							],
							[
								47189,
								47226
							],
							[
								47252,
								47256
							],
							[
								47270,
								47276
							],
							[
								47284,
								47290
							],
							[
								47297,
								47303
							],
							[
								47320,
								47373
							],
							[
								47374,
								47391
							],
							[
								47496,
								47515
							],
							[
								47562,
								47600
							],
							[
								47625,
								47638
							],
							[
								48233,
								48277
							],
							[
								48349,
								48367
							],
							[
								48621,
								48639
							],
							[
								48966,
								48993
							],
							[
								49002,
								49017
							],
							[
								49093,
								49120
							],
							[
								49247,
								49251
							],
							[
								49329,
								49342
							],
							[
								49539,
								49568
							],
							[
								49676,
								49702
							],
							[
								49770,
								49797
							],
							[
								50069,
								50090
							],
							[
								50160,
								50185
							],
							[
								50205,
								50227
							],
							[
								50291,
								50316
							],
							[
								50441,
								50465
							],
							[
								50689,
								50705
							],
							[
								50706,
								50725
							],
							[
								50758,
								50778
							],
							[
								50867,
								50895
							],
							[
								50993,
								51018
							],
							[
								51068,
								51095
							],
							[
								51098,
								51117
							],
							[
								51422,
								51452
							],
							[
								51495,
								51510
							],
							[
								51578,
								51601
							],
							[
								51640,
								51644
							],
							[
								51684,
								51688
							],
							[
								51726,
								51750
							],
							[
								51817,
								51853
							],
							[
								51918,
								51925
							],
							[
								51963,
								52002
							],
							[
								52142,
								52175
							],
							[
								52367,
								52378
							],
							[
								52475,
								52506
							],
							[
								52565,
								52621
							],
							[
								52985,
								53026
							],
							[
								53392,
								53432
							],
							[
								53660,
								53708
							],
							[
								53740,
								53749
							],
							[
								54032,
								54071
							],
							[
								54082,
								54091
							],
							[
								54130,
								54141
							],
							[
								54546,
								54587
							],
							[
								54633,
								54666
							],
							[
								54743,
								54778
							],
							[
								54878,
								54921
							],
							[
								55101,
								55137
							],
							[
								55454,
								55493
							],
							[
								55624,
								55672
							],
							[
								55840,
								55854
							],
							[
								56026,
								56033
							],
							[
								56149,
								56156
							],
							[
								56491,
								56515
							],
							[
								56545,
								56562
							],
							[
								56619,
								56641
							],
							[
								56670,
								56687
							],
							[
								56793,
								56824
							],
							[
								56898,
								56918
							],
							[
								57052,
								57086
							],
							[
								57116,
								57125
							],
							[
								57145,
								57153
							],
							[
								57157,
								57166
							],
							[
								57259,
								57293
							],
							[
								57594,
								57627
							],
							[
								57989,
								58023
							],
							[
								58393,
								58427
							],
							[
								58710,
								58754
							],
							[
								59379,
								59418
							],
							[
								59546,
								59628
							],
							[
								60754,
								60767
							],
							[
								60785,
								60794
							],
							[
								60812,
								60821
							],
							[
								60872,
								60883
							],
							[
								60907,
								60919
							],
							[
								60926,
								60937
							],
							[
								60974,
								60979
							],
							[
								61082,
								61087
							],
							[
								61232,
								61237
							],
							[
								61270,
								61275
							],
							[
								61310,
								61315
							],
							[
								61510,
								61515
							],
							[
								61719,
								61752
							],
							[
								61765,
								61766
							],
							[
								62175,
								62208
							],
							[
								62372,
								62409
							],
							[
								62417,
								62418
							],
							[
								62894,
								62901
							],
							[
								63040,
								63051
							],
							[
								63137,
								63148
							],
							[
								63435,
								63449
							],
							[
								63992,
								64024
							],
							[
								64534,
								64572
							],
							[
								64871,
								64894
							],
							[
								64907,
								64927
							],
							[
								64990,
								65004
							],
							[
								65008,
								65022
							],
							[
								65099,
								65114
							],
							[
								65188,
								65202
							],
							[
								65245,
								65268
							],
							[
								65460,
								65478
							],
							[
								65684,
								65698
							],
							[
								65702,
								65716
							],
							[
								65887,
								65909
							],
							[
								66453,
								66458
							],
							[
								66500,
								66506
							],
							[
								66549,
								66556
							],
							[
								66585,
								66624
							],
							[
								66653,
								66663
							],
							[
								66669,
								66678
							],
							[
								66696,
								66723
							],
							[
								66763,
								66772
							],
							[
								66781,
								66789
							],
							[
								66837,
								66846
							],
							[
								66872,
								66881
							],
							[
								66892,
								66900
							],
							[
								66972,
								66981
							],
							[
								67072,
								67116
							],
							[
								67178,
								67239
							],
							[
								67547,
								67573
							],
							[
								67601,
								67606
							],
							[
								67630,
								67643
							],
							[
								67751,
								67816
							],
							[
								67920,
								67946
							],
							[
								67980,
								68006
							],
							[
								68027,
								68060
							],
							[
								68088,
								68104
							],
							[
								68119,
								68126
							],
							[
								68148,
								68164
							],
							[
								68189,
								68216
							],
							[
								68273,
								68288
							],
							[
								68310,
								68322
							],
							[
								68339,
								68354
							],
							[
								68364,
								68373
							],
							[
								68413,
								68422
							],
							[
								68429,
								68435
							],
							[
								68447,
								68476
							],
							[
								68562,
								68572
							],
							[
								68613,
								68628
							],
							[
								68647,
								68660
							],
							[
								69085,
								69095
							],
							[
								69234,
								69246
							],
							[
								69526,
								69547
							],
							[
								69733,
								69744
							],
							[
								69781,
								69790
							],
							[
								69870,
								69903
							],
							[
								70208,
								70237
							],
							[
								70281,
								70303
							],
							[
								70337,
								70376
							],
							[
								70410,
								70416
							],
							[
								70489,
								70514
							],
							[
								70525,
								70537
							],
							[
								70729,
								70739
							],
							[
								70791,
								70841
							],
							[
								71249,
								71279
							],
							[
								71365,
								71395
							],
							[
								71468,
								71499
							],
							[
								71653,
								71677
							],
							[
								71732,
								71756
							],
							[
								71883,
								71887
							],
							[
								71967,
								71992
							],
							[
								72080,
								72103
							],
							[
								72135,
								72141
							],
							[
								72284,
								72285
							],
							[
								72376,
								72380
							],
							[
								72514,
								72545
							],
							[
								72796,
								72808
							],
							[
								72924,
								72938
							],
							[
								73084,
								73116
							],
							[
								73320,
								73346
							],
							[
								73347,
								73364
							],
							[
								73413,
								73436
							],
							[
								73469,
								73479
							],
							[
								73528,
								73540
							],
							[
								73855,
								73865
							],
							[
								74057,
								74069
							],
							[
								74744,
								74777
							],
							[
								74805,
								74819
							],
							[
								74913,
								74938
							],
							[
								75087,
								75115
							],
							[
								75249,
								75278
							],
							[
								75578,
								75626
							],
							[
								75815,
								75852
							],
							[
								75901,
								75949
							],
							[
								76063,
								76097
							],
							[
								76105,
								76129
							],
							[
								76643,
								76673
							],
							[
								76799,
								76826
							],
							[
								77303,
								77354
							],
							[
								77396,
								77423
							],
							[
								77593,
								77641
							],
							[
								77853,
								77888
							],
							[
								78095,
								78128
							],
							[
								78400,
								78431
							],
							[
								78677,
								78721
							],
							[
								78857,
								78873
							],
							[
								79033,
								79083
							],
							[
								79477,
								79482
							],
							[
								79563,
								79576
							],
							[
								79625,
								79635
							],
							[
								79639,
								79652
							],
							[
								79727,
								79742
							],
							[
								79791,
								79801
							],
							[
								79805,
								79820
							],
							[
								79887,
								79920
							],
							[
								80030,
								80037
							],
							[
								80321,
								80336
							],
							[
								80593,
								80618
							],
							[
								80679,
								80707
							],
							[
								80796,
								80805
							],
							[
								81772,
								81803
							],
							[
								81975,
								81989
							],
							[
								82612,
								82646
							],
							[
								82831,
								82853
							],
							[
								82889,
								82913
							],
							[
								82916,
								82936
							],
							[
								83180,
								83206
							],
							[
								83301,
								83339
							],
							[
								83741,
								83784
							],
							[
								83856,
								83878
							],
							[
								83900,
								83926
							],
							[
								84051,
								84159
							],
							[
								84397,
								84448
							],
							[
								84526,
								84560
							],
							[
								84648,
								84676
							],
							[
								84710,
								84745
							],
							[
								84819,
								84844
							],
							[
								84866,
								84883
							],
							[
								84925,
								84974
							],
							[
								85047,
								85060
							],
							[
								85131,
								85144
							],
							[
								85320,
								85358
							],
							[
								85369,
								85388
							],
							[
								85442,
								85483
							],
							[
								85494,
								85513
							],
							[
								85571,
								85596
							],
							[
								85643,
								85682
							],
							[
								85767,
								85780
							],
							[
								85819,
								85829
							],
							[
								85883,
								85890
							],
							[
								85915,
								85921
							],
							[
								85963,
								85976
							],
							[
								85996,
								86032
							],
							[
								86117,
								86130
							],
							[
								86169,
								86179
							],
							[
								86212,
								86219
							],
							[
								86325,
								86358
							],
							[
								86438,
								86473
							],
							[
								86513,
								86523
							],
							[
								86638,
								86666
							],
							[
								86828,
								86840
							],
							[
								86945,
								86970
							],
							[
								87085,
								87098
							],
							[
								87197,
								87224
							],
							[
								87343,
								87356
							],
							[
								87459,
								87492
							],
							[
								87715,
								87734
							],
							[
								87813,
								87841
							],
							[
								87860,
								87879
							],
							[
								87897,
								87932
							],
							[
								88275,
								88306
							],
							[
								88365,
								88378
							],
							[
								88462,
								88494
							],
							[
								88675,
								88725
							],
							[
								88768,
								88795
							],
							[
								88997,
								89030
							],
							[
								89081,
								89116
							],
							[
								89129,
								89143
							],
							[
								89210,
								89272
							],
							[
								89471,
								89487
							],
							[
								89714,
								89724
							],
							[
								89762,
								89772
							],
							[
								89792,
								89802
							],
							[
								89830,
								89855
							],
							[
								89981,
								90006
							],
							[
								90280,
								90307
							],
							[
								90539,
								90551
							],
							[
								92204,
								92239
							],
							[
								92258,
								92266
							],
							[
								92314,
								92329
							],
							[
								92477,
								92490
							],
							[
								92683,
								92699
							],
							[
								92906,
								92931
							],
							[
								92946,
								92968
							],
							[
								93184,
								93188
							],
							[
								93402,
								93424
							],
							[
								93446,
								93456
							],
							[
								93474,
								93487
							],
							[
								93634,
								93656
							],
							[
								93678,
								93688
							],
							[
								93706,
								93719
							],
							[
								93848,
								93870
							],
							[
								93896,
								93906
							],
							[
								93924,
								93937
							],
							[
								93973,
								93995
							],
							[
								94016,
								94026
							],
							[
								94044,
								94057
							],
							[
								94077,
								94118
							],
							[
								94425,
								94448
							],
							[
								94529,
								94551
							],
							[
								94625,
								94645
							],
							[
								94772,
								94783
							],
							[
								94816,
								94833
							],
							[
								95009,
								95028
							],
							[
								95063,
								95085
							],
							[
								95217,
								95238
							],
							[
								95376,
								95396
							],
							[
								95463,
								95486
							],
							[
								95562,
								95584
							],
							[
								95702,
								95726
							],
							[
								95788,
								95800
							],
							[
								95971,
								95989
							],
							[
								96051,
								96063
							],
							[
								96215,
								96238
							],
							[
								96379,
								96395
							],
							[
								96451,
								96464
							],
							[
								96496,
								96564
							],
							[
								96605,
								96627
							],
							[
								96656,
								96666
							],
							[
								96682,
								96695
							],
							[
								96755,
								96768
							],
							[
								96844,
								96867
							],
							[
								96995,
								97017
							],
							[
								97114,
								97127
							],
							[
								97189,
								97205
							],
							[
								97243,
								97247
							],
							[
								97506,
								97549
							],
							[
								97564,
								97589
							],
							[
								97732,
								97740
							],
							[
								97754,
								97761
							],
							[
								97770,
								97775
							],
							[
								97793,
								97834
							],
							[
								97847,
								97854
							],
							[
								97931,
								97970
							],
							[
								98122,
								98133
							],
							[
								98168,
								98189
							],
							[
								98267,
								98274
							],
							[
								98306,
								98331
							],
							[
								98389,
								98398
							],
							[
								98415,
								98422
							],
							[
								98440,
								98466
							],
							[
								98524,
								98533
							],
							[
								98551,
								98558
							],
							[
								98577,
								98672
							],
							[
								99304,
								99324
							],
							[
								99325,
								99339
							],
							[
								99361,
								99368
							],
							[
								99395,
								99415
							],
							[
								99416,
								99430
							],
							[
								99451,
								99458
							],
							[
								99502,
								99516
							],
							[
								99588,
								99637
							],
							[
								99650,
								99666
							],
							[
								99700,
								99716
							],
							[
								99808,
								99840
							],
							[
								99871,
								99910
							],
							[
								100291,
								100332
							],
							[
								100371,
								100378
							],
							[
								100434,
								100454
							],
							[
								100492,
								100511
							],
							[
								100585,
								100602
							],
							[
								100621,
								100641
							],
							[
								100645,
								100662
							],
							[
								100712,
								100735
							],
							[
								100836,
								100859
							],
							[
								100903,
								100922
							],
							[
								100965,
								100993
							],
							[
								101089,
								101110
							],
							[
								101186,
								101212
							],
							[
								101325,
								101343
							],
							[
								101397,
								101402
							],
							[
								101405,
								101411
							],
							[
								101424,
								101470
							],
							[
								101553,
								101566
							],
							[
								101944,
								101957
							],
							[
								102020,
								102069
							],
							[
								102082,
								102098
							],
							[
								102120,
								102133
							],
							[
								102161,
								102173
							],
							[
								102177,
								102190
							],
							[
								102252,
								102304
							],
							[
								102493,
								102506
							],
							[
								102569,
								102608
							],
							[
								102752,
								102787
							],
							[
								102859,
								102863
							],
							[
								102890,
								102899
							],
							[
								103150,
								103185
							],
							[
								103261,
								103282
							],
							[
								103297,
								103305
							],
							[
								103318,
								103327
							],
							[
								103349,
								103353
							],
							[
								103392,
								103396
							],
							[
								103543,
								103585
							],
							[
								103917,
								103945
							],
							[
								104005,
								104056
							],
							[
								104307,
								104350
							],
							[
								104403,
								104446
							],
							[
								104482,
								104487
							],
							[
								104564,
								104578
							],
							[
								104613,
								104623
							],
							[
								104636,
								104671
							],
							[
								104715,
								104723
							],
							[
								105270,
								105314
							],
							[
								105849,
								105872
							],
							[
								106280,
								106322
							],
							[
								107128,
								107151
							],
							[
								107523,
								107528
							],
							[
								108082,
								108095
							],
							[
								108131,
								108146
							],
							[
								108184,
								108201
							],
							[
								108243,
								108287
							],
							[
								108486,
								108493
							],
							[
								109136,
								109149
							],
							[
								109184,
								109193
							],
							[
								109250,
								109269
							],
							[
								109375,
								109388
							],
							[
								109563,
								109578
							],
							[
								109622,
								109639
							],
							[
								109685,
								109698
							],
							[
								109740,
								109753
							],
							[
								109795,
								109810
							],
							[
								109854,
								109871
							],
							[
								109999,
								110004
							],
							[
								110153,
								110179
							],
							[
								110356,
								110370
							],
							[
								110393,
								110398
							],
							[
								111032,
								111036
							],
							[
								111094,
								111098
							],
							[
								111341,
								111350
							],
							[
								111475,
								111488
							],
							[
								111562,
								111576
							],
							[
								111827,
								111850
							],
							[
								111868,
								111877
							],
							[
								111894,
								111905
							],
							[
								111915,
								111924
							],
							[
								111944,
								111972
							],
							[
								112080,
								112113
							],
							[
								112280,
								112302
							],
							[
								112320,
								112329
							],
							[
								112349,
								112362
							],
							[
								112420,
								112429
							],
							[
								112449,
								112491
							],
							[
								112964,
								112972
							],
							[
								113007,
								113018
							],
							[
								113095,
								113133
							],
							[
								113484,
								113505
							],
							[
								113590,
								113624
							],
							[
								113777,
								113816
							],
							[
								113871,
								113883
							],
							[
								114342,
								114350
							],
							[
								114482,
								114489
							],
							[
								114548,
								114556
							],
							[
								114669,
								114686
							],
							[
								114765,
								114769
							],
							[
								114823,
								114840
							],
							[
								114952,
								115000
							],
							[
								115286,
								115381
							],
							[
								115516,
								115528
							],
							[
								115538,
								115550
							],
							[
								115555,
								115568
							],
							[
								115674,
								115686
							],
							[
								115696,
								115708
							],
							[
								115713,
								115726
							],
							[
								115834,
								115842
							],
							[
								116053,
								116061
							],
							[
								116436,
								116446
							],
							[
								116526,
								116536
							],
							[
								116617,
								116625
							],
							[
								116756,
								116775
							],
							[
								117324,
								117328
							],
							[
								117397,
								117414
							],
							[
								117454,
								117469
							],
							[
								117507,
								117520
							],
							[
								117556,
								117571
							],
							[
								117681,
								117686
							],
							[
								117756,
								117765
							],
							[
								117786,
								117796
							],
							[
								117903,
								117968
							],
							[
								118319,
								118353
							],
							[
								118437,
								118480
							],
							[
								118696,
								118743
							],
							[
								118934,
								118985
							],
							[
								119205,
								119257
							],
							[
								119605,
								119648
							],
							[
								119964,
								119968
							],
							[
								120083,
								120158
							],
							[
								120476,
								120480
							],
							[
								120713,
								120755
							],
							[
								120819,
								120827
							],
							[
								120988,
								121029
							],
							[
								121076,
								121108
							],
							[
								121189,
								121222
							],
							[
								121281,
								121345
							],
							[
								121585,
								121626
							],
							[
								121664,
								121682
							],
							[
								121731,
								121738
							],
							[
								121932,
								121996
							],
							[
								122172,
								122237
							],
							[
								122250,
								122262
							],
							[
								122279,
								122290
							],
							[
								122314,
								122329
							],
							[
								122712,
								122742
							],
							[
								122919,
								122939
							],
							[
								122959,
								123013
							],
							[
								123236,
								123242
							],
							[
								123294,
								123299
							],
							[
								123355,
								123361
							],
							[
								123438,
								123443
							],
							[
								123486,
								123545
							],
							[
								125594,
								125607
							],
							[
								125755,
								125769
							],
							[
								125929,
								125942
							],
							[
								126024,
								126043
							],
							[
								126286,
								126323
							],
							[
								126671,
								126741
							],
							[
								127097,
								127139
							],
							[
								127190,
								127199
							],
							[
								127365,
								127400
							],
							[
								127527,
								127531
							],
							[
								127553,
								127564
							],
							[
								127674,
								127697
							],
							[
								127841,
								127865
							],
							[
								127966,
								127970
							],
							[
								127993,
								127997
							],
							[
								128009,
								128041
							],
							[
								128089,
								128129
							],
							[
								128358,
								128377
							],
							[
								128409,
								128473
							],
							[
								128525,
								128530
							],
							[
								128563,
								128593
							],
							[
								128680,
								128715
							],
							[
								128739,
								128765
							],
							[
								128879,
								128912
							],
							[
								129051,
								129109
							],
							[
								129134,
								129160
							],
							[
								129203,
								129238
							],
							[
								129281,
								129302
							],
							[
								129451,
								129477
							],
							[
								129635,
								129654
							],
							[
								129976,
								130025
							],
							[
								130050,
								130071
							],
							[
								130113,
								130129
							],
							[
								130183,
								130206
							],
							[
								130269,
								130297
							],
							[
								130359,
								130380
							],
							[
								130404,
								130409
							],
							[
								130982,
								131013
							],
							[
								131016,
								131034
							],
							[
								131086,
								131087
							],
							[
								131100,
								131111
							],
							[
								131666,
								131711
							],
							[
								131813,
								131837
							],
							[
								132099,
								132109
							],
							[
								132157,
								132178
							],
							[
								132226,
								132247
							],
							[
								132333,
								132374
							],
							[
								132522,
								132526
							],
							[
								132572,
								132580
							],
							[
								132609,
								132613
							],
							[
								132988,
								133001
							],
							[
								133054,
								133074
							],
							[
								133400,
								133457
							],
							[
								133564,
								133575
							],
							[
								133915,
								133935
							],
							[
								133975,
								134011
							],
							[
								134040,
								134053
							],
							[
								134096,
								134106
							],
							[
								134151,
								134166
							],
							[
								134969,
								134982
							],
							[
								135553,
								135573
							],
							[
								135648,
								135663
							],
							[
								136040,
								136053
							],
							[
								136124,
								136144
							],
							[
								136226,
								136241
							],
							[
								136307,
								136336
							],
							[
								136410,
								136443
							],
							[
								136555,
								136569
							],
							[
								136609,
								136624
							],
							[
								136646,
								136674
							],
							[
								137203,
								137226
							],
							[
								137433,
								137461
							],
							[
								137568,
								137610
							],
							[
								137937,
								137993
							],
							[
								138227,
								138268
							],
							[
								138354,
								138365
							],
							[
								138514,
								138527
							],
							[
								138848,
								138864
							],
							[
								138893,
								138945
							],
							[
								139014,
								139021
							],
							[
								139105,
								139119
							],
							[
								139203,
								139218
							],
							[
								139324,
								139328
							],
							[
								139360,
								139380
							],
							[
								139431,
								139444
							],
							[
								139494,
								139506
							],
							[
								139800,
								139815
							],
							[
								140136,
								140146
							],
							[
								140201,
								140211
							],
							[
								140295,
								140306
							],
							[
								140363,
								140370
							],
							[
								140973,
								140983
							],
							[
								141049,
								141060
							],
							[
								141128,
								141140
							],
							[
								141175,
								141188
							],
							[
								141233,
								141248
							],
							[
								141267,
								141294
							],
							[
								141480,
								141523
							],
							[
								141684,
								141744
							],
							[
								141830,
								141855
							],
							[
								141904,
								141947
							],
							[
								141958,
								141968
							],
							[
								141977,
								142006
							],
							[
								142262,
								142278
							],
							[
								142300,
								142311
							],
							[
								142361,
								142391
							],
							[
								142460,
								142465
							],
							[
								142494,
								142499
							],
							[
								142794,
								142807
							],
							[
								142858,
								142889
							],
							[
								142910,
								142923
							],
							[
								142924,
								142944
							],
							[
								144448,
								144475
							],
							[
								144500,
								144505
							],
							[
								144556,
								144585
							],
							[
								144664,
								144669
							],
							[
								144751,
								144764
							],
							[
								144815,
								144826
							],
							[
								144866,
								144887
							],
							[
								145011,
								145028
							],
							[
								145158,
								145178
							],
							[
								145374,
								145400
							],
							[
								145488,
								145494
							],
							[
								145524,
								145529
							],
							[
								145605,
								145638
							],
							[
								145796,
								145801
							],
							[
								145852,
								145865
							],
							[
								145889,
								145895
							],
							[
								145978,
								146002
							],
							[
								146096,
								146107
							],
							[
								146163,
								146176
							],
							[
								146238,
								146249
							],
							[
								146348,
								146358
							],
							[
								146456,
								146469
							],
							[
								146582,
								146591
							],
							[
								146649,
								146661
							],
							[
								146744,
								146752
							],
							[
								146852,
								146859
							],
							[
								146961,
								146981
							],
							[
								147169,
								147190
							],
							[
								147449,
								147466
							],
							[
								147619,
								147631
							],
							[
								147760,
								147774
							],
							[
								147945,
								147958
							],
							[
								147975,
								147995
							],
							[
								148254,
								148284
							],
							[
								148290,
								148316
							],
							[
								148335,
								148361
							],
							[
								148390,
								148408
							],
							[
								148474,
								148508
							],
							[
								148622,
								148676
							],
							[
								148703,
								148723
							],
							[
								148813,
								148830
							],
							[
								148926,
								148948
							],
							[
								149055,
								149079
							],
							[
								149187,
								149217
							],
							[
								149248,
								149257
							],
							[
								149300,
								149319
							],
							[
								149468,
								149488
							],
							[
								149605,
								149624
							],
							[
								149738,
								149754
							],
							[
								149862,
								149872
							],
							[
								149950,
								149957
							],
							[
								150023,
								150032
							],
							[
								150377,
								150398
							],
							[
								150407,
								150435
							],
							[
								150445,
								150490
							],
							[
								150545,
								150556
							],
							[
								150578,
								150588
							],
							[
								150601,
								150612
							],
							[
								150640,
								150673
							],
							[
								150834,
								150866
							],
							[
								150934,
								150956
							],
							[
								151128,
								151164
							],
							[
								151326,
								151342
							],
							[
								151403,
								151439
							],
							[
								151515,
								151526
							],
							[
								151591,
								151595
							],
							[
								151634,
								151647
							],
							[
								151761,
								151797
							],
							[
								151974,
								151979
							],
							[
								152020,
								152073
							],
							[
								153011,
								153040
							],
							[
								153194,
								153231
							],
							[
								153242,
								153255
							],
							[
								153268,
								153277
							],
							[
								153324,
								153344
							],
							[
								153378,
								153394
							],
							[
								153616,
								153637
							],
							[
								153765,
								153797
							],
							[
								153824,
								153833
							],
							[
								153845,
								153858
							],
							[
								153936,
								153960
							],
							[
								154027,
								154036
							],
							[
								154052,
								154062
							],
							[
								154079,
								154096
							],
							[
								154124,
								154133
							],
							[
								154134,
								154157
							],
							[
								154203,
								154227
							],
							[
								154375,
								154380
							],
							[
								154398,
								154407
							],
							[
								154507,
								154515
							],
							[
								154519,
								154528
							],
							[
								154550,
								154563
							],
							[
								154580,
								154593
							],
							[
								154600,
								154613
							],
							[
								154639,
								154656
							],
							[
								154669,
								154685
							],
							[
								154755,
								154760
							],
							[
								154778,
								154787
							],
							[
								154887,
								154895
							],
							[
								154908,
								154917
							],
							[
								154932,
								154937
							],
							[
								155025,
								155062
							],
							[
								155219,
								155235
							],
							[
								155249,
								155271
							],
							[
								155384,
								155390
							],
							[
								156438,
								156453
							],
							[
								156503,
								156517
							],
							[
								156531,
								156546
							],
							[
								157076,
								157093
							],
							[
								157143,
								157159
							],
							[
								157443,
								157473
							],
							[
								157491,
								157500
							],
							[
								157518,
								157528
							],
							[
								157541,
								157550
							],
							[
								157693,
								157722
							],
							[
								157740,
								157749
							],
							[
								157767,
								157777
							],
							[
								157781,
								157790
							],
							[
								159071,
								159123
							],
							[
								159189,
								159212
							],
							[
								159284,
								159302
							],
							[
								159651,
								159661
							],
							[
								159665,
								159679
							],
							[
								159881,
								159913
							],
							[
								159940,
								159975
							],
							[
								160015,
								160038
							],
							[
								160199,
								160215
							],
							[
								160400,
								160409
							],
							[
								160435,
								160455
							],
							[
								160482,
								160491
							],
							[
								160506,
								160530
							],
							[
								160670,
								160715
							],
							[
								160747,
								160765
							],
							[
								160911,
								160923
							],
							[
								161068,
								161073
							],
							[
								161387,
								161394
							],
							[
								161531,
								161550
							],
							[
								161568,
								161590
							],
							[
								161874,
								161916
							],
							[
								161933,
								161970
							],
							[
								162218,
								162237
							],
							[
								162607,
								162647
							],
							[
								162690,
								162704
							],
							[
								162774,
								162804
							],
							[
								162853,
								162883
							],
							[
								162950,
								163028
							],
							[
								163478,
								163506
							],
							[
								163558,
								163622
							],
							[
								163640,
								163664
							],
							[
								163923,
								163942
							],
							[
								164057,
								164093
							],
							[
								164818,
								164856
							],
							[
								164873,
								164911
							],
							[
								166200,
								166207
							],
							[
								166263,
								166281
							],
							[
								166493,
								166500
							],
							[
								166548,
								166552
							],
							[
								166684,
								166692
							],
							[
								166759,
								166771
							],
							[
								167747,
								167813
							],
							[
								167814,
								167831
							],
							[
								168069,
								168080
							],
							[
								168097,
								168116
							],
							[
								168230,
								168294
							],
							[
								168310,
								168319
							],
							[
								168331,
								168339
							],
							[
								168392,
								168407
							],
							[
								168423,
								168429
							],
							[
								168453,
								168466
							],
							[
								168661,
								168678
							],
							[
								168723,
								168748
							],
							[
								168847,
								168853
							],
							[
								168973,
								169005
							],
							[
								169082,
								169086
							],
							[
								169216,
								169237
							],
							[
								169275,
								169296
							],
							[
								169388,
								169413
							],
							[
								169584,
								169617
							],
							[
								169850,
								169877
							],
							[
								169969,
								169973
							],
							[
								170080,
								170085
							],
							[
								170349,
								170395
							],
							[
								170985,
								170994
							],
							[
								171230,
								171283
							],
							[
								171294,
								171320
							],
							[
								171623,
								171639
							],
							[
								171723,
								171734
							],
							[
								171980,
								171984
							],
							[
								172268,
								172321
							],
							[
								172549,
								172562
							],
							[
								172573,
								172589
							],
							[
								172764,
								172773
							],
							[
								172815,
								172824
							],
							[
								172864,
								172869
							],
							[
								172905,
								172923
							],
							[
								172944,
								172975
							],
							[
								173082,
								173101
							],
							[
								173394,
								173407
							],
							[
								173496,
								173514
							],
							[
								173609,
								173626
							],
							[
								173759,
								173766
							],
							[
								173885,
								173891
							],
							[
								174041,
								174049
							],
							[
								174168,
								174178
							],
							[
								174407,
								174416
							],
							[
								174909,
								174949
							],
							[
								175258,
								175293
							],
							[
								175624,
								175630
							],
							[
								175666,
								175684
							],
							[
								175728,
								175738
							],
							[
								175821,
								175831
							],
							[
								175880,
								175912
							],
							[
								176159,
								176178
							],
							[
								176796,
								176818
							],
							[
								177117,
								177177
							],
							[
								177887,
								177912
							],
							[
								177941,
								177957
							],
							[
								177966,
								177977
							],
							[
								178069,
								178075
							],
							[
								178084,
								178095
							],
							[
								178155,
								178179
							],
							[
								178197,
								178206
							],
							[
								178230,
								178239
							],
							[
								178267,
								178278
							],
							[
								178305,
								178316
							],
							[
								178349,
								178362
							],
							[
								178381,
								178394
							],
							[
								178406,
								178419
							],
							[
								178570,
								178581
							],
							[
								178683,
								178708
							],
							[
								178726,
								178752
							],
							[
								178843,
								178877
							],
							[
								179149,
								179170
							],
							[
								179235,
								179253
							],
							[
								179421,
								179457
							],
							[
								179879,
								179899
							],
							[
								180102,
								180117
							],
							[
								180393,
								180416
							],
							[
								180625,
								180643
							],
							[
								180861,
								180873
							],
							[
								180903,
								180918
							],
							[
								180963,
								180969
							],
							[
								181021,
								181035
							],
							[
								181177,
								181195
							],
							[
								181391,
								181423
							],
							[
								181489,
								181505
							],
							[
								181841,
								181857
							],
							[
								182304,
								182307
							],
							[
								182320,
								182321
							],
							[
								182351,
								182387
							],
							[
								182828,
								182867
							],
							[
								182956,
								182982
							],
							[
								183030,
								183091
							],
							[
								183498,
								183526
							],
							[
								183633,
								183651
							],
							[
								183946,
								183984
							]
						],
						"symlist":
						[
							" function Util(g)",
							"Util.formatAnnotatedObject = function(subject, o)",
							"i =>",
							"item =>",
							"padding = x =>",
							"arr =>",
							"Util.curry = (fn, arity) =>",
							"ret = function curried(...args)",
							" (v, i) =>",
							"Curried = function(...a)",
							" function()",
							" function(a)",
							" function(a, b)",
							" function(a, b, c)",
							" function(a, b, c, d)",
							"get()",
							"Util.arityN = (fn, n) =>",
							" function(fn)",
							" function()",
							" function(fn)",
							" function(a)",
							" function(fn)",
							" function(a, b)",
							" function(fn)",
							" function(a, b, c)",
							" function(fn)",
							" function(a, b, c, d)",
							" function(fn)",
							" function(a, b, c, d, e)",
							"Util.getter = target =>",
							"self = function(key)",
							".fn = key =>",
							".fn = key =>",
							"Util.setter = target =>",
							"self = function(key, value)",
							".fn = (key, value) =>",
							".fn = (key, value) =>",
							"Util.remover = target =>",
							" key =>",
							" key =>",
							"Util.hasFn = target =>",
							" key =>",
							" key =>",
							"Util.adder = target =>",
							" arg =>",
							" arg =>",
							"self = function(obj, arg = 1)",
							" function ChooseFn(a, o)",
							".fn = (obj, arg) =>",
							".fn = (obj, arg) =>",
							".fn = (obj, arg) =>",
							".fn = (num, arg) =>",
							".fn = (obj, arg) =>",
							"Util.updater = (target, get, set, fn) =>",
							" (k, f, i) =>",
							" function doUpdate(key, func, i)",
							"create = () =>",
							" key =>",
							" () =>",
							"self = function(...args)",
							"Util.once = (fn, thisArg, memoFn) =>",
							" function(...args)",
							"Util.delay = (func, wait, thisObj) =>",
							" function(...args)",
							"function ()",
							"Util.throttle = (f, t, thisObj) =>",
							" function(...args)",
							"Util.debounce = (func, wait, options = {}) =>",
							" function later()",
							" function debounced(...a)",
							".clear = function()",
							".flush = function()",
							"Util.debounceAsync = (fn, wait, options = {}) =>",
							" function(...a)",
							"resolve =>",
							"() =>",
							"arg =>",
							" g =>",
							" g =>",
							" () =>",
							" err =>",
							" () =>",
							" err =>",
							" () =>",
							" err =>",
							"() =>",
							"Util.log = (...args) =>",
							"f =>",
							"f =>",
							"(a, p, i) =>",
							"get: () =>",
							".setFilters = function(args)",
							"arg =>",
							".getFilters = function()",
							"Util.msg = (strings, ...substitutions) =>",
							"(base, n) =>",
							"Util.generalLog = function(n, x)",
							"Util.toSource = function(arg, opts = {})",
							"print = (...args) =>",
							"Util.debug = function(message)",
							"removeCircular = function(key, value)",
							"arg =>",
							"Util.type = function({ type })",
							"Util.functionName = function(fn)",
							"Util.className = function(obj)",
							"obj",
							"Util.unwrapComponent = function(c)",
							"Util.componentName = function(c)",
							"Util.count = function(s, ch)",
							"Util.parseNum = function(str)",
							"Util.minmax = function(num, min, max)",
							"Util.getExponential = function(num)",
							"Util.getNumberParts = function(num)",
							"Util.pow2 = function(n)",
							"Util.pow10 = function(n)",
							"Util.bitValue = function(n)",
							"Util.bitMask = function(bits, start = 0)",
							"Util.bitGroups = function(num, bpp, minLen)",
							"Util.bitStuff = (arr, bpp) =>",
							"([b, f], n) =>",
							"Util.toBinary = function(num)",
							"Util.toBits = function(num)",
							" bit =>",
							"Util.getBit = function(v, n)",
							"Util.isSet = function(v, n)",
							"Util.bitCount = function(n)",
							"Util.bitNo = function(n)",
							"Util.toggleBit = function(num, bit)",
							"Util.setBit = function(num, bit)",
							"Util.clearBit = function(num, bit)",
							"Util.range = function(...args)",
							" (v, k) =>",
							"n =>",
							"Util.set = function(obj, prop, value)",
							" (prop, value) =>",
							" (prop, value) =>",
							" (prop, value) =>",
							" value =>",
							"(obj, prop) =>",
							"() =>",
							"Util.bitArrayToNumbers = function(arr)",
							"Util.bitsToNumbers = function(bits)",
							"(val, key, arr) =>",
							"Util.shuffle = function(arr, rnd = Util.rng)",
							"(a, b) =>",
							"Util.sortNum = function(arr)",
							"(a, b) =>",
							"Util.draw = (arr, n = 1, rnd = Util.rng) =>",
							"Util.is = function(what, ...pred)",
							"type =>",
							"fn =>",
							"Util.instanceOf = (value, ctor) =>",
							"Util.onoff = function(val)",
							"Util.numbersToBits = function(arr)",
							"(bits, num) =>",
							"Util.randomNumbers = function([start, end], draws)",
							"Util.randomBits = function(r = [1, 50], n = 5)",
							"Util.padFn = function(len, char = ' ', fn = (str, pad) => pad)",
							" (s, n = len) =>",
							"Util.pad = function(s, n, char = ' ')",
							"Util.abbreviate = function(str, max = 40, suffix = '...')",
							"Util.trim = function(str, charset)",
							"Util.trimRight = function(str, charset)",
							"Util.indent = (text, space = ' ') =>",
							"Util.define = (obj, ...args) =>",
							"Util.memoizedProperties = (obj, methods) =>",
							"get()",
							"Util.copyWhole = (dst, ...args) =>",
							"Util.copyEntries = (obj, entries) =>",
							"Util.extend = (...args) =>",
							"Util.isCloneable = obj =>",
							"Util.isUnextendable = val =>",
							"pred = (k, v, f) =>",
							"(key, depth) =>",
							"value = function(...args)",
							"Util.defineGetter = (obj, key, fn, enumerable = false) =>",
							"Util.defineGetterSetter = (obj, key, g, s, enumerable = false) =>",
							"Util.defineGettersSetters = (obj, gettersSetters) =>",
							"Util.extendArray = function(arr = Array.prototype)",
							" function(pred)",
							" function()",
							" function()",
							"(item, i, a) =>",
							" function()",
							" function(value)",
							"Util.adapter = function(obj, getLength = obj => obj.length, getKey = (obj, index) => obj.",
							"(index), getItem = (obj, key) => obj[key], setItem = (obj, index, value) => (obj[index] = value))",
							"get length()",
							"get instance()",
							"key(i)",
							"get(key)",
							"has(key)",
							"set(key, value)",
							"*keys()",
							"*entries()",
							"toObject()",
							"toMap()",
							".localStorage = function(s)",
							" () =>",
							" w =>",
							" () =>",
							" l =>",
							" (l, i) =>",
							" (l, key) =>",
							" (l, key, v) =>",
							"Util.array = function(a)",
							"Util.arrayFromEntries = entries =>",
							"([k, v]) =>",
							" key =>",
							"([k, v]) =>",
							"Util.toMap = function(hash = {}, fn)",
							"Util.extendMap = function(map)",
							".entries = function* iterator()",
							".toObject = function()",
							".match = function(...args)",
							" entries =>",
							"Util.objectFrom = function(any)",
							"Util.tail = function(arr)",
							"Util.splice = function(str, index, delcount, insert)",
							"Util.identity = arg =>",
							"Util.reverse = arr =>",
							"Util.keyOf = function(obj, prop)",
							"Util.rotateRight = function(arr, n)",
							"Util.repeater = function(n, what)",
							"function* ()",
							"function* ()",
							"Util.repeat = function(n, what)",
							"Util.arrayDim = function(dimensions, init)",
							"Util.flatten = function(arr)",
							"Util.chunkArray = (a, size) =>",
							"(acc, item, i) =>",
							"Util.partition = function* (a, size)",
							"Util.intersect = (a, b) =>",
							"Util.difference = (a, b, incicludes) =>",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							"Util.symmetricDifference = (a, b) =>",
							"Util.union = (a, b, equality) =>",
							"Util.chances = function(numbers, matches)",
							"Util.sum = function(arr)",
							"(acc, n) =>",
							"Util.expr = fn =>",
							" function expr(...args)",
							" function addArgs(args)",
							"ret = function returnFn(...args)",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"Util.mod = (a, b) =>",
							" n =>",
							"(a, b) =>",
							"Util.fnName = function(f, parent)",
							"Util.objName = function(o)",
							"Util.findKey = function(obj, pred, thisVal)",
							"value : v =>",
							"Util.find = function(arr, value, prop = 'id')",
							"pred = function(obj)",
							" obj =>",
							" obj =>",
							"pred = ([key, value], arr) =>",
							"Util.findIndex = function(obj, pred, thisArg)",
							"Util.match = function(arg, pred)",
							"match = (val, key) =>",
							"(acc, val, key) =>",
							"(acc, key) =>",
							"Util.toHash = function(map, keyTransform = k => ",
							"('' + k))",
							" (v, k) =>",
							"Util.indexOf = function(obj, prop)",
							"Util.greatestCommonDenominator = (a, b) =>",
							"Util.leastCommonMultiple = (n1, n2) =>",
							"function* (re, str)",
							"Util.inspect = function(obj, opts = {})",
							"stringFn = str =>",
							"print = (...args) =>",
							" (space = false) =>",
							" (space = false) =>",
							" key =>",
							" key =>",
							"Util.dump = function(name, props)",
							" () =>",
							" w =>",
							" () =>",
							"Util.ucfirst = function(str)",
							"Util.lcfirst = function(str)",
							"Util.typeOf = v =>",
							"Util.camelize = (text, sep = '') =>",
							" (match, p1, p2, offset) =>",
							"Util.decamelize = function(str, separator = '-')",
							"Util.ifThenElse = function(pred = value => !!value, _then = () => {}, _else = () => {})",
							" function(value)",
							"Util.if = (value, _then, _else, pred) =>",
							"v =>",
							"() =>",
							"() =>",
							"Util.ifElse = (value, _else, pred) =>",
							"v =>",
							" () =>",
							" () =>",
							" () =>",
							"Util.ifThen = (value, _then, pred) =>",
							"v =>",
							" () =>",
							" () =>",
							" () =>",
							"Util.switch = ({ default: defaultCase, ...cases }) =>",
							" function(value)",
							"function* (fn, arr)",
							"Util.colorDump = (iterable, textFn) =>",
							"(color, n) =>",
							"Util.bucketInserter = (map, ...extraArgs) =>",
							" function(...args)",
							" function(...args)",
							"Util.fifo = function fifo()",
							"resolve = () =>",
							"async function* generator()",
							"r =>",
							"push(...args)",
							"process: async function run()",
							"Util.isEmail = function(v)",
							"Util.isString = function(v)",
							"Util.isNumeric = v =>",
							"Util.isUndefined = arg =>",
							"Util.isObject = obj =>",
							"Util.isPrimitive = obj =>",
							"Util.isFunction = arg =>",
							"Util.not = fn =>",
							" function(...args)",
							"Util.isAsync = fn =>",
							"Util.isArrowFunction = fn =>",
							"Util.isEmptyString = v =>",
							"Util.isEmpty = (...args) =>",
							" function empty(v)",
							"Util.isNonEmpty = (...args) =>",
							"nonEmpty = v =>",
							"Util.isIpAddress = v =>",
							"i =>",
							"i =>",
							"Util.isPortNumber = v =>",
							"Util.hasProps = function(obj, props)",
							"prop =>",
							"Util.validatePassword = function(value)",
							"Util.clone = function(obj, proto)",
							"constructor",
							"Util.deepClone = function(data)",
							"Util.findVal = function(object, propName, maxDepth = 10)",
							"Util.deepCloneObservable = function(data)",
							"Util.toArray = function(observableArray)",
							"Util.arryToTree = function(data, id, pId, appId)",
							"(e, i) =>",
							"Util.to3wei = function(a, old, id, pId)",
							"(e, i) =>",
							"(se, si) =>",
							"Util.arrExchangePos = function(arr, i, j)",
							"Util.arrRemove = function(arr, i)",
							"Util.move = function(src, dst = [])",
							"Util.moveIf = function(src, pred, dst = [])",
							"Util.logOutClearStorage = function()",
							"Util.getCookie = function(cookie, name)",
							"Util.parseCookie = function(c = document.cookie)",
							"pred = char =>",
							"char =>",
							"char =>",
							"Util.encodeCookie = c =>",
							"([key, value]) =>",
							"Util.setCookies = c =>",
							"([key, value]) =>",
							"Util.clearCookies = function(c)",
							" (acc, name) =>",
							"Util.deleteCookie = function(name)",
							" () =>",
							" w =>",
							" () =>",
							"Util.accAdd = function(arg1, arg2)",
							"Util.Subtr = function(arg1, arg2)",
							"Util.accDiv = function(arg1, arg2)",
							"Util.accMul = function(arg1, arg2)",
							"Util.dateFormatter = function(date, formate)",
							"Util.numberFormatter = function(numStr)",
							"Util.searchObject = function(object, matchCallback, currentPath, result, searched)",
							"(req = {}) =>",
							" () =>",
							" () =>",
							" () =>",
							" url =>",
							" () =>",
							"() =>",
							"() =>",
							"() =>",
							"() =>",
							"() =>",
							"() =>",
							"Util.parseQuery = function(url = ",
							")",
							"Util.encodeQuery = function(data)",
							"Util.parseURL = function(href = this.",
							")",
							"part =>",
							"([k, v]) =>",
							"(acc, m) =>",
							"href(override)",
							"Util.makeURL = function(...args)",
							"Util.numberFromURL = function(url, fn)",
							"Util.tryPromise = fn =>",
							"(resolve, reject) =>",
							"resolve = a =>",
							"reject = () =>",
							"resolve = () =>",
							"reject = () =>",
							"async function(...args)",
							" function(...args)",
							"resolve = a =>",
							"reject = () =>",
							"Util.putError = err =>",
							"() =>",
							" fn =>",
							" ret =>",
							"Util.tryPredicate = (fn, defaultRet) =>",
							" ret =>",
							" () =>",
							"Util.isBrowser = function()",
							" () =>",
							" w =>",
							" () =>",
							" () =>",
							" d =>",
							" () =>",
							"Util.waitFor = async function waitFor(msecs)",
							"({ setTimeout, clearTimeout, setInterval, clearInterval }) =>",
							"async (resolve, reject) =>",
							"() =>",
							"clear = () =>",
							"Util.timeout = async (msecs, promises, promiseClass = Promise) =>",
							"Util.isServer = function()",
							"Util.isMobile = function()",
							"Util.uniquePred = (cmp = null) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"Util.unique = (arr, cmp) =>",
							"cmp = (a, b) =>",
							"(e, i, a) =>",
							"Util.zip = a =>",
							"(a, b) =>",
							"(_, i) =>",
							"arr =>",
							"Util.histogram = (...args) =>",
							" (k, v) =>",
							"initVal = () =>",
							"setVal = v =>",
							"(it, i) =>",
							"(item, i) =>",
							" (entry, idx, key) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"Util.concat = function* (...args)",
							"Util.distinct = function(arr)",
							" (value, index, me) =>",
							"Util.rangeMinMax = function(arr, field)",
							"obj =>",
							"Util.remap = (...args) =>",
							"getR = () =>",
							"r = val =>",
							"Util.mergeLists = function(arr1, arr2, key = 'id')",
							"Util.foreach = function(o, fn)",
							"Util.all = function(obj, pred)",
							"Util.isGenerator = function(fn)",
							"Util.isIterator = obj =>",
							"Util.isIterable = obj =>",
							"x =>",
							"Util.isConstructor = x =>",
							"construct(target, args)",
							"target",
							"x",
							"m =>",
							"Util.filter = function(a, pred)",
							"function* ()",
							"fn = (k, v) =>",
							"Util.reduce = (obj, fn, accu) =>",
							"Util.mapFunctional = fn =>",
							" function* (arg)",
							"Util.map = (...args) =>",
							"ret = a =>",
							"function* ()",
							"ret = a =>",
							"function* ()",
							"Util.entriesToObj = function(arr)",
							"(acc, item) =>",
							"Util.isDate = function(d)",
							"Util.parseDate = function(d)",
							"Util.isoDate = function(date)",
							"Util.toUnixTime = function(dateObj, utc = false)",
							"Util.unixTime = function(utc = false)",
							"Util.fromUnixTime = function(epoch, utc = false)",
							"Util.formatTime = function(date = ",
							"(), format = 'HH:MM:SS')",
							"Util.leapYear = function(year)",
							"Util.timeSpan = function(s)",
							"Util.randFloat = function(min, max, rnd = Util.rng)",
							"Util.randInt = (...args) =>",
							"Util.randStr = (len, charset, rnd = Util.rng) =>",
							"Util.hex = function(num, numDigits)",
							"Util.numberParts = (num, base) =>",
							"Util.roundDigits = precision =>",
							"Util.roundFunction = (prec, digits, type) =>",
							" function(value)",
							"Util.roundTo = function(value, prec, digits, type)",
							"() =>",
							" utf8 =>",
							" v =>",
							" utf8 =>",
							" base64 =>",
							" v =>",
							" string =>",
							"Util.formatRecord = function(obj)",
							"item =>",
							" function(obj)",
							"Util.isArrayLike = obj =>",
							"Util.equals = function(a, b)",
							"(e, i) =>",
							"Util.versionCompare = (a, b) =>",
							"isdigit = c =>",
							"Util.isGetter = (obj, propName) =>",
							"Util.isBool = value =>",
							"Util.size = (...args) =>",
							" function size(obj)",
							"Util.isMap = function(obj)",
							"Util.effectiveDeviceWidth = function()",
							"Util.getFormFields = function(initialState)",
							"(acc, { elements }) =>",
							"(acc2, { name, value }) =>",
							"Util.mergeObjects = function(objArr, predicate = (dst, src, key) => (src[key] == '' ? undefined : src[key]))",
							"Util.getUserAgent = function(headers = req.headers)",
							"Util.factor = function(start, end)",
							"Util.factorial = function(n)",
							"Util.increment = function(obj, key)",
							"Util.counter = function()",
							"self = function()",
							"Util.filterKeys = function(obj, pred = k => true)",
							"pred = str =>",
							"pred = str =>",
							"Util.filterMembers = function(obj, fn)",
							"pred = (k, v, o) =>",
							"Util.filterOutMembers = function(obj, fn)",
							"pred = (v, k, o) =>",
							"Util.dumpMembers = obj =>",
							"Util.filterOutKeys = function(obj, arr)",
							" (v, k, o) =>",
							" (k, v) =>",
							" key =>",
							" () =>",
							" (v, k, o) =>",
							"Util.removeKeys = function(obj, arr)",
							" (v, k, o) =>",
							" (k, v) =>",
							" key =>",
							"Util.getKeys = function(obj, arr)",
							"Util.numbersConvert = function(str)",
							"(ch, i) =>",
							"Util.entries = function(arg)",
							"function* ()",
							"Util.keys = function(arg)",
							" function* ()",
							"Util.values = function(arg)",
							" function* ()",
							"Util.removeEqual = function(a, b)",
							"Util.clear = obj =>",
							"Util.remove = (arr, item) =>",
							" (other, i, arr) =>",
							"Util.removeIf = function(arr, pred)",
							"Util.traverse = function(o, fn)",
							" (v, k, a) =>",
							" function* walker(o, depth = 0)",
							"Util.traverseWithPath = function(o, rootPath = [])",
							" function* walker(o, path)",
							"Util.indexByPath = function(o, p)",
							"Util.pushUnique = (arr, ...args) =>",
							"(acc, item) =>",
							"Util.insertSorted = function(arr, item, cmp = (a, b) => b - a)",
							"next = (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							"fn = function(key, value)",
							"Util.keyIterator = obj =>",
							"Util.entryIterator = obj =>",
							"function* ()",
							"Util.mapAdapter = getSetFunction =>",
							"get(key)",
							"set(key, value)",
							".keys = () =>",
							".entries = () =>",
							"Util.mapFunction = map =>",
							"fn = function(...args)",
							"m =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".update = function(key, fn = (k, v) => v)",
							".entries = function* ()",
							".values = function* ()",
							".keys = function* ()",
							" function()",
							"([key, value]) =>",
							".keys = async () =>",
							".entries = async () =>",
							".values = async () =>",
							".keys = function* ()",
							".entries = function* ()",
							".values = function* ()",
							".filter = function(pred)",
							"function* ()",
							".map = function(t)",
							"function* ()",
							".forEach = function(fn)",
							".delete = key =>",
							".has = key =>",
							"Util.mapWrapper = (map, toKey = key => key, fromKey = key => key) =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".keys = () =>",
							".entries = function* ()",
							".values = function* ()",
							".has = key =>",
							".delete = key =>",
							"m =>",
							"Util.mapCombinator = (forward, backward) =>",
							"fn = function(key, value)",
							"(a,m) =>",
							" key =>",
							" a =>",
							" function makeGetter(map, next = a => a)",
							" key =>",
							"Util.predicate = (fn_or_regex, pred) =>",
							"fn = arg =>",
							".valueOf = function()",
							" arg =>",
							"Util.some = predicates =>",
							" value =>",
							"pred =>",
							"Util.every = predicates =>",
							" value =>",
							"pred =>",
							"Util.iterateMembers = function* (obj, predicate = (name, depth, obj, proto) => true, depth = 0)",
							" (...predicates) =>",
							" (...args) =>",
							"pred =>",
							" (...predicates) =>",
							" (...args) =>",
							"pred =>",
							"(pred, obj) =>",
							"Util.memberNameFilter = (depth = 1, start = 0) =>",
							" (m, l, o) =>",
							" (m, l, o) =>",
							" (name, depth, obj, proto) =>",
							"Util.getMemberNames = (obj, ...args) =>",
							"Util.getMemberEntries = (obj, ...args) =>",
							"name =>",
							"accFn = (a, m, o) =>",
							" (obj, ...args) =>",
							" (a, m) =>",
							" (r, a, m) =>",
							" (r, a) =>",
							"incFn = (c, n, self) =>",
							"incFn = (c, n, self) =>",
							"inc = (i, n = 1) =>",
							"self = function Count(n = 1)",
							".valueOf = function()",
							"filterFn = (key, value) =>",
							"(acc, mem, idx) =>",
							" r =>",
							" () =>",
							"fn = function ReduceIntoMap(arg, acc = mapObj)",
							"(acc, arg) =>",
							" (a, m, o) =>",
							"Util.methodNameFilter = (depth = 1, start = 0) =>",
							" (m, l, o) =>",
							" () =>",
							" b =>",
							" () =>",
							"Util.getMethodNames = (obj, depth = 1, start = 0) =>",
							" (a, m, o) =>",
							"Util.inherit = (dst, src, depth = 1) =>",
							" function inherits(ctor, superCtor)",
							"ctor",
							"superCtor",
							" function inherits(ctor, superCtor)",
							"TempCtor = function()",
							"TempCtor",
							"superCtor",
							"ctor",
							"ctor",
							"Util.bindMethods = (obj, methods, dest) =>",
							"Util.getConstructor = obj =>",
							"Util.getPrototypeChain = function(obj, fn = p => p)",
							"Util.getObjectChain = (obj, fn = p => p) =>",
							"Util.getPropertyDescriptors = function(obj)",
							" p =>",
							"fn = (c, p) =>",
							" (p, o) =>",
							"Util.weakAssign = function(...args)",
							"other =>",
							"Util.exception = function Exception(...args)",
							"toString(color = false)",
							"Util.location = function Location(...args)",
							"toString(color = false)",
							" t =>",
							"getFileName()",
							"getLineNumber()",
							"getColumnNumber()",
							"Util.stackFrame = function StackFrame(frame)",
							"prop =>",
							"propertyMap()",
							"method =>",
							"([method, func]) =>",
							"getFunction()",
							"getMethodName()",
							"getFunctionName()",
							"getTypeName()",
							"getFileName()",
							"getLineNumber()",
							"getColumnNumber()",
							"get()",
							"toString(color, opts = {})",
							" (t, color) =>",
							" t =>",
							"p =>",
							"p =>",
							"(f, i) =>",
							"getLocation()",
							"get location()",
							"Util.scriptName = () =>",
							" () =>",
							" args =>",
							" () =>",
							"Util.getFunctionName = () =>",
							"Util.getFunctionArguments = fn =>",
							"Util.scriptDir = () =>",
							" () =>",
							" script =>",
							" () =>",
							"Util.stack = function Stack(stack, offset)",
							"frame =>",
							"([m, p]) =>",
							" (acc, [method, property]) =>",
							" function getStack()",
							".prepareStackTrace = (_, stack) =>",
							" function stackToString(st, start = 0)",
							"function* ()",
							"frame =>",
							"part =>",
							"frame =>",
							"([func, file]) =>",
							"n =>",
							"([func, file]) =>",
							"([func, [columnNumber, lineNumber, ...file]]) =>",
							"({ methodName, functionName: func, fileName: file, columnNumber: column, lineNumber: line }) =>",
							" s =>",
							" s =>",
							" () =>",
							" s =>",
							" s =>",
							" () =>",
							"frame =>",
							"frame =>",
							"get: () =>",
							"get: () =>",
							"*value()",
							"toString(opts = {})",
							"f =>",
							"getFunctionName()",
							"getMethodName()",
							"getFileName()",
							"getLineNumber()",
							"get()",
							"(a, f) =>",
							"(fn, i) =>",
							"Util.getCallerStack = function(position = 2, limit = 1000, stack)",
							".prepareStackTrace = (_, stack) =>",
							"Util.getCallerFile = function(position = 2)",
							"Util.getCallerFunction = function(position = 2)",
							"Util.getCallerFunctionName = function(position = 2)",
							"Util.getCallerFunctionNames = function(position = 2)",
							"Util.getCaller = function(index = 1, stack)",
							"f =>",
							"Util.getCallers = function(index = 1, num = Number.MAX_SAFE_INTEGER, stack)",
							"f =>",
							"Util.getStackFrames = function(offset = 2)",
							"frame =>",
							"Util.getStackFrame = function(offset = 2)",
							"Util.rotateLeft = function(x, n)",
							"Util.rotateRight = function(x, n)",
							"Util.hashString = function(string, bits = 32, mask = 0xffffffff)",
							"Util.flatTree = function(tree, addOutput)",
							"addOutput = arg =>",
							" key =>",
							"Util.traverseTree = function(tree, fn, depth = 0, parent = null)",
							"Util.walkTree = function(node, pred, t, depth = 0, parent = null)",
							"function* ()",
							"pred = i =>",
							"t = function(i)",
							"Util.isPromise = function(obj)",
							"setImmediate = fn =>",
							"Util.next = function(iter, observer, prev = undefined)",
							"val =>",
							"() =>",
							"err =>",
							"() =>",
							"Util.getImageAverageColor = function(imageElement, options)",
							"toStringRgb()",
							"toStringRgba()",
							"toStringHex()",
							"toHex = function(d)",
							"Util.jsonToObject = function(jsonStr)",
							"Util.splitLines = function(str, max_linelen = Number.MAX_SAFE_INTEGER)",
							"Util.splitAt = function* (str, ...indexes)",
							"(a, b) =>",
							"Util.decodeEscapes = function(text)",
							"m =>",
							"([s, t]) =>",
							"Util.stripXML = text =>",
							"Util.stripHTML = html =>",
							"p =>",
							"p =>",
							"Util.stripNonPrintable = text =>",
							"Util.decodeHTMLEntities = function(text)",
							" (match, entity) =>",
							"Util.encodeHTMLEntities = (str, charset = '\\u00A0-\\u9999<>&') =>",
							" i =>",
							"Util.stripAnsi = function(str)",
							"Util.proxy = (obj = {}, handler) =>",
							"get(target, key, receiver)",
							"set(target, key, value, receiver)",
							"Util.propertyLookup = (obj = {}, handler = key => null) =>",
							"get(target, key, receiver)",
							"Util.traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"Util.proxyTree = function proxyTree(...callbacks)",
							"applyCallback = () =>",
							"get(target, key)",
							"set(target, key, value)",
							"apply(target, thisArg, args)",
							" function node(path)",
							"() =>",
							"Util.construct = constructor =>",
							" function F(args)",
							"F",
							"constructor",
							"Util.constructApply = (constructor, array) =>",
							"Util.immutable = args =>",
							"set: () =>",
							"deleteProperty: () =>",
							"defineProperty: () =>",
							"Util.immutableClass = (orig, ...proto) =>",
							"p =>",
							" ctor =>",
							"ctor",
							"imm = base =>",
							"constructor(...args)",
							"Util.partial = function partial(fn /*, arg1, arg2 etc */)",
							" function()",
							"(min, max, value) =>",
							"Util.coloring = (useColor = true) =>",
							"code(...args)",
							"text(text)",
							"concat(...args)",
							"code(...args)",
							"text(text, ...color)",
							"concat(...args)",
							"code(...args)",
							"text(text, ...color)",
							"concat(...args)",
							"Util.colorText = (...args) =>",
							"Util.decodeAnsi = (str, index) =>",
							"isDigit = c =>",
							"notDigit = c =>",
							"findIndex = (pred, start) =>",
							"Util.stripAnsi = str =>",
							"Util.ansiCode = (...args) =>",
							"Util.wordWrap = (str, width, delimiter) =>",
							"Util.multiParagraphWordWrap = (str, width, delimiter) =>",
							"Util.defineInspect = (proto, ...props) =>",
							" function()",
							"(acc, key) =>",
							"(a, b, value) =>",
							"Util.bindProperties = (proxy, target, props, gen) =>",
							"name =>",
							"(acc, name) =>",
							"gen = p => v =>",
							"k =>",
							" (a, [k, v]) =>",
							" (...args) =>",
							"(...args) =>",
							" (a, k) =>",
							"get: () =>",
							"get: () =>",
							"function ()",
							" obj =>",
							"on: val =>",
							"off: val =>",
							"true: val =>",
							"false: val =>",
							"AssertionFailed",
							"constructor(message, stack)",
							"Util.assert = function assert(val, message)",
							"Util.assertEqual = function assertEqual(val1, val2, message)",
							"Util.assignGlobal = () =>",
							"Util.weakMapper = function(createFn, map = ",
							"(), hitFn)",
							"self = function(obj, ...args)",
							".set = (k, v) =>",
							".get = k =>",
							"Util.merge = function(...args)",
							" a =>",
							" a =>",
							"(acc, arg) =>",
							"Util.transformer = (a, ...l) =>",
							" (c, f) =>",
							" function(...v)",
							"Util.toPlainObject = obj =>",
							" v =>",
							"Util.toBuiltinObject = obj =>",
							" v =>",
							"t = (v, n) =>",
							"(acc, k) =>",
							"Util.timer = msecs =>",
							"remaining = () =>",
							"finish = callback =>",
							"log = (method, ...args) =>",
							"obj =>",
							" v =>",
							"timeout = (msecs, tmr = timer) =>",
							"() =>",
							" (...args) =>",
							" () =>",
							"add = (arr, ...items) =>",
							"get delay()",
							"get created()",
							"get start()",
							"get stop()",
							"get elapsed()",
							"get end()",
							"get remain()",
							"cancel()",
							"pause()",
							".resume = function()",
							".restart = function()",
							"callback(...args)",
							"subscribe(f)",
							"unsubscribe(f)",
							"start = () =>",
							"(resolve, reject) =>",
							"Util.thenableReject = error =>",
							"then: (resolve, reject) =>",
							"Util.wrapGenerator = fn =>",
							" function(...args)",
							"Util.wrapGeneratorMethods = obj =>",
							"Util.decorateIterable = (proto, generators = false) =>",
							"forEach(fn, thisArg)",
							"*map(fn, thisArg)",
							"*filter(pred, thisArg)",
							"findIndex(pred, thisArg)",
							"indexOf(item, startIndex = -1)",
							"(e, i) =>",
							"find(pred, thisArg)",
							"every(pred, thisArg)",
							"some(pred, thisArg)",
							"reduce(fn, accu)",
							"*entries()",
							"*keys()",
							"*values()",
							"Util.swap = (a, b) =>",
							"Util.swapArray = ([a, b]) =>",
							"Util.cacheAdapter = (st, defaultOpts = {}) =>",
							" () =>",
							"async c =>",
							" () =>",
							"async getItem(request, opts = {})",
							"async setItem(request, response)",
							"async addItem(request)",
							"async removeItem(request, opts = {})",
							"async key(index)",
							"async keys(urls = false, t = a => a)",
							"response =>",
							"r =>",
							"async clear()",
							"Util.cachedFetch = (allOpts = {}) =>",
							"() =>",
							"self = async function CachedFetch(request, opts = {})",
							"(returnValue, fn, ...args) =>",
							"Util.proxyObject = (root, handler) =>",
							"ptr = path =>",
							"(a, i) =>",
							" (value, path) =>",
							"get(target, key)",
							" function node(path)",
							"Util.parseXML = function(xmlStr)",
							" () =>",
							" parser =>",
							"fn = (value, ...args) =>",
							" () =>",
							" map =>",
							"(obj, ...args) =>",
							" () =>",
							" (obj, ...args) =>",
							"self = (obj, ...args) =>",
							"() =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" fn =>",
							" () =>",
							" () =>",
							" a =>",
							"() =>",
							" () =>",
							" a =>",
							" () =>",
							"() =>",
							"Util.getOpt = (options = {}, args) =>",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" () =>",
							" v =>",
							" () =>",
							" () =>",
							" v =>",
							"Util.getEnv = async varName =>",
							" () =>",
							"async e =>",
							" () =>",
							"Util.getEnvVars = async () =>",
							" () =>",
							"async e =>",
							" () =>",
							"Util.safeFunction = (fn, trapExceptions, thisObj) =>",
							"async function(...args)",
							" function(...args)",
							" a =>",
							" error =>",
							"Util.safeCall = (fn, ...args) =>",
							"Util.safeApply = (fn, args = []) =>",
							"Util.exit = exitCode =>",
							"stdExit = std =>",
							" () =>",
							" ([obj, exit]) =>",
							" () =>",
							"Util.atexit = handler =>",
							"Util.callMain = async (fn, trapExceptions) =>",
							"async (...args) =>",
							"async ret =>",
							"() =>",
							" err =>",
							" () =>",
							" argv1 =>",
							"Util.printReturnValue = (fn, opts = {}) =>",
							"print = (returnValue, fn, ...args) =>",
							"self = (...args) =>",
							"Util.replaceAll = (needles, haystack) =>",
							"([re, str]) =>",
							"(acc, [match, replacement]) =>",
							"Util.quote = (str, q = '\"') =>",
							"Util.escape = (str, pred = codePoint => codePoint < 32 || codePoint > 0xff) =>",
							"Util.escapeRegex = string =>",
							"Util.consolePrinter = function ConsolePrinter(log = console.log)",
							"self = function(...args)",
							".log = (...args) =>",
							"Util.consoleJoin = function(...args)",
							"Util.consoleConcat = function(...args)",
							"self = function ConsoleConcat(...args)",
							"clear()",
							"log = (...args) =>",
							"print()",
							"i =>",
							"output()",
							"add(...args)",
							"Util.booleanAdapter = (getSetFn, trueValue = 1, falseValue = 0) =>",
							" function(value)",
							"set = () =>",
							" function(...args)",
							"Util.deriveGetSet = (fn, get = v => v, set = v => v, thisObj) =>",
							" () =>",
							" v =>",
							"handler = () =>",
							"ExFunc",
							"constructor()",
							"__call__(...args)",
							"Util.isatty = async fd =>",
							"mod =>",
							"Util.ttyGetWinSize = (fd = 1) =>",
							"m =>",
							" (resolve, reject) =>",
							" (resolve, reject) =>",
							" (fd = 0, mode = true) =>",
							"Util.stdio = (fd, mode = true) =>",
							"Util.signal = (num, act) =>",
							"m =>",
							"() =>",
							"Util.timeit = (fn, args = [], options = {}) =>",
							"(p, c) =>",
							"Util.lazyProperty = (obj, name, getter, opts = {}) =>",
							"replaceProperty = value =>",
							"async function()",
							" function()",
							"v =>",
							"Util.lazyProperties = (obj, gettersObj, opts = {}) =>",
							"f = (a, b) =>",
							" function(a, b)",
							"(a, b) =>",
							"(a, b) =>",
							"() =>",
							"HighResolutionTime",
							"constructor(secs = 0, nano = 0)",
							"static create(s, n)",
							"get seconds()",
							"get milliseconds()",
							"get nanoseconds()",
							"diff(o)",
							"sum(o)",
							"since(o)",
							"toString()",
							"inspect()",
							"async function hrtime(previousTimestamp)",
							" function hrtime(previousTimestamp)",
							" () =>",
							" (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"Util.getNow = () =>",
							"performanceNow = () =>",
							"performanceNow = async function(clock = CLOCK_MONOTONIC_RAW)",
							"Util.formatColumns = a =>",
							"(acc, row, i) =>",
							"(col, j) =>",
							"row =>",
							"(col, j) =>",
							"Util.getPlatform = () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"async () =>",
							"Util.colIndexes = line =>",
							"([prev, cols], char, i) =>",
							"Util.colSplit = (line, indexes) =>",
							"map = (name, flag) =>",
							" function* (value)",
							"log = (duration, name, args, ret) =>",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"both = () =>",
							"(name, args) =>",
							"arg =>",
							"(name, ret) =>",
							" function(...args)",
							"Util.bind = function(f, ...args)",
							"ret = function()",
							"ret = function()",
							"ret",
							"f",
							"Util.bytesToUTF8 = function* (bytes)",
							"Util.codePointsToString = codePoints =>",
							"Util.bufferToString = b =>",
							"Util.levenshteinDistance = function levenshteinDistance(a, b)",
							"Util.padTrunc = (...args) =>",
							" (s, pad = ' ') =>",
							"Util.setReadHandler = (fd, handler) =>"
						]
					},
					"AQAAAAAAAAAAAAAA7mcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/CMakeLists.txt",
						"symkeys":
						[
							[
								31,
								55
							],
							[
								219,
								231
							],
							[
								235,
								257
							],
							[
								265,
								277
							],
							[
								281,
								302
							],
							[
								338,
								350
							],
							[
								386,
								398
							],
							[
								511,
								528
							],
							[
								570,
								584
							],
							[
								2713,
								2737
							],
							[
								2790,
								2802
							],
							[
								2806,
								2818
							],
							[
								2822,
								2837
							]
						],
						"symlist":
						[
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLEW_LIBRARY",
							"pkgcfg_lib_GLEW_glew32",
							"GLFW_LIBRARY",
							"pkgcfg_lib_GLFW_glfw3",
							"GLEW_LIBRARY",
							"GLFW_LIBRARY",
							"GLFW_INCLUDE_DIRS",
							"GLFW_LIBRARIES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLEW_LIBRARY",
							"GLFW_LIBRARY",
							"QUICKJS_LIBRARY"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/cmake/UseMultiArch.cmake",
						"symkeys":
						[
							[
								97,
								117
							],
							[
								238,
								258
							],
							[
								414,
								430
							],
							[
								520,
								536
							],
							[
								551,
								562
							],
							[
								621,
								632
							],
							[
								670,
								686
							],
							[
								707,
								723
							],
							[
								727,
								743
							],
							[
								813,
								824
							],
							[
								860,
								880
							],
							[
								884,
								904
							],
							[
								908,
								919
							],
							[
								931,
								951
							],
							[
								958,
								969
							],
							[
								1006,
								1026
							],
							[
								1030,
								1050
							],
							[
								1054,
								1065
							],
							[
								1106,
								1126
							]
						],
						"symlist":
						[
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_C_COMPILER",
							"HOST_SYSTEM_NAME",
							"SYSTEM_NAME",
							"SYSTEM_NAME",
							"CMAKE_CROSS_ARCH",
							"CMAKE_CROSS_ARCH",
							"CMAKE_CROSS_ARCH",
							"SYSTEM_NAME",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_LIBDIR",
							"SYSTEM_NAME",
							"CMAKE_INSTALL_LIBDIR",
							"SYSTEM_NAME",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_LIBDIR",
							"SYSTEM_NAME",
							"CMAKE_INSTALL_LIBDIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhAAAAQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkdMRVdfTElCUkFSWQogIHBrZ2NmZ19saWJfR0xFV19nbGV3MzIKR0xGV19MSUJSQVJZCiAgcGtnY2ZnX2xpYl9HTEZXX2dsZnczCkdMRVdfTElCUkFSWQpHTEZXX0xJQlJBUlkKR0xGV19JTkNMVURFX0RJUlMKR0xGV19MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkdMRVdfTElCUkFSWQpHTEZXX0xJQlJBUlkKUVVJQ0tKU19MSUJSQVJZAAAAAAAAAABEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								170,
								184
							],
							[
								187,
								208
							],
							[
								375,
								380
							],
							[
								410,
								428
							],
							[
								457,
								475
							],
							[
								495,
								513
							],
							[
								581,
								595
							],
							[
								605,
								614
							],
							[
								654,
								678
							],
							[
								764,
								788
							],
							[
								792,
								816
							],
							[
								823,
								847
							],
							[
								910,
								935
							],
							[
								976,
								990
							],
							[
								1007,
								1025
							],
							[
								1072,
								1077
							],
							[
								1101,
								1106
							],
							[
								1138,
								1142
							],
							[
								1152,
								1163
							],
							[
								1174,
								1178
							],
							[
								1198,
								1209
							],
							[
								1220,
								1225
							],
							[
								1257,
								1268
							],
							[
								1272,
								1287
							],
							[
								1291,
								1305
							],
							[
								1339,
								1350
							],
							[
								1404,
								1428
							],
							[
								1454,
								1474
							],
							[
								1502,
								1506
							],
							[
								1574,
								1590
							],
							[
								1594,
								1618
							],
							[
								1622,
								1638
							],
							[
								1650,
								1674
							],
							[
								1717,
								1728
							],
							[
								1745,
								1750
							],
							[
								1782,
								1793
							],
							[
								1809,
								1828
							],
							[
								2006,
								2037
							],
							[
								2179,
								2193
							],
							[
								2197,
								2215
							],
							[
								2227,
								2236
							],
							[
								2313,
								2324
							],
							[
								2436,
								2450
							],
							[
								2600,
								2619
							],
							[
								2885,
								2900
							],
							[
								2904,
								2917
							],
							[
								2956,
								2976
							],
							[
								2980,
								3000
							],
							[
								3082,
								3102
							],
							[
								3150,
								3170
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAQAAQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfQ19DT01QSUxFUgpIT1NUX1NZU1RFTV9OQU1FClNZU1RFTV9OQU1FClNZU1RFTV9OQU1FCkNNQUtFX0NST1NTX0FSQ0gKQ01BS0VfQ1JPU1NfQVJDSApDTUFLRV9DUk9TU19BUkNIClNZU1RFTV9OQU1FCkNNQUtFX0lOU1RBTExfUFJFRklYCkNNQUtFX0lOU1RBTExfTElCRElSClNZU1RFTV9OQU1FCkNNQUtFX0lOU1RBTExfTElCRElSClNZU1RFTV9OQU1FCkNNQUtFX0lOU1RBTExfUFJFRklYCkNNQUtFX0lOU1RBTExfTElCRElSClNZU1RFTV9OQU1FCkNNQUtFX0lOU1RBTExfTElCRElSAAAAAAAAAABCAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								170,
								184
							],
							[
								187,
								208
							],
							[
								375,
								380
							],
							[
								410,
								428
							],
							[
								457,
								475
							],
							[
								495,
								513
							],
							[
								581,
								595
							],
							[
								605,
								614
							],
							[
								654,
								678
							],
							[
								764,
								788
							],
							[
								792,
								816
							],
							[
								823,
								847
							],
							[
								910,
								935
							],
							[
								976,
								990
							],
							[
								1007,
								1025
							],
							[
								1072,
								1077
							],
							[
								1101,
								1106
							],
							[
								1138,
								1142
							],
							[
								1152,
								1163
							],
							[
								1174,
								1178
							],
							[
								1198,
								1209
							],
							[
								1220,
								1225
							],
							[
								1257,
								1268
							],
							[
								1272,
								1287
							],
							[
								1291,
								1305
							],
							[
								1339,
								1350
							],
							[
								1404,
								1428
							],
							[
								1454,
								1474
							],
							[
								1502,
								1506
							],
							[
								1574,
								1590
							],
							[
								1594,
								1618
							],
							[
								1622,
								1638
							],
							[
								1650,
								1674
							],
							[
								1717,
								1728
							],
							[
								1745,
								1750
							],
							[
								1782,
								1793
							],
							[
								1809,
								1828
							],
							[
								2006,
								2037
							],
							[
								2179,
								2193
							],
							[
								2197,
								2215
							],
							[
								2227,
								2236
							],
							[
								2313,
								2324
							],
							[
								2436,
								2450
							],
							[
								2600,
								2619
							],
							[
								2885,
								2900
							],
							[
								2904,
								2917
							],
							[
								2956,
								2976
							],
							[
								3049,
								3069
							],
							[
								3073,
								3093
							],
							[
								3171,
								3191
							],
							[
								3239,
								3259
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABCAwAARElTQUJMRV9XRVJST1IKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0xJQkZGSV9mZmkKTElCREwKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0xJQlJBUlkKRkZJX0ZPVU5ECkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9TWVNURU1fSU5DTFVERV9QQVRICkRJU0FCTEVfV0VSUk9SCiAgbWFrZV9zaGFyZWRfbW9kdWxlCkZOQU1FCkZOQU1FCk5BTUUKVEFSR0VUX05BTUUKTkFNRQpUQVJHRVRfTkFNRQpGTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKTElCRkZJX0xJQlJBUlkKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCk5BTUUKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKVU5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9GRklfZmZpCkZGSV9GT1VORApIQVZFX0xJQkZGSQpMSUJGRklfTElCUkFSWQpKU19CSU5ESU5HU19TT1VSQ0VTClFVSUNLSlNfTElCUkFSWQpGRklfTElCUkFSSUVTClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYClFVSUNLSlNfQ19NT0RVTEVfRElSClFVSUNLSlNfQ19NT0RVTEVfRElSAAAAAAAAAABXAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVwMAAERJU0FCTEVfV0VSUk9SCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9MSUJGRklfZmZpCkxJQkRMCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9MSUJSQVJZCkZGSV9GT1VORApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfU1lTVEVNX0lOQ0xVREVfUEFUSApESVNBQkxFX1dFUlJPUgogIG1ha2Vfc2hhcmVkX21vZHVsZQpGTkFNRQpGTkFNRQpOQU1FClRBUkdFVF9OQU1FCk5BTUUKVEFSR0VUX05BTUUKRk5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZCkxJQkZGSV9MSUJSQVJZClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX1BSRUZJWApOQU1FCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClVOQU1FClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpMSUJGRklfTElCUkFSWQogIHBrZ2NmZ19saWJfRkZJX2ZmaQpGRklfRk9VTkQKSEFWRV9MSUJGRkkKTElCRkZJX0xJQlJBUlkKSlNfQklORElOR1NfU09VUkNFUwpRVUlDS0pTX0xJQlJBUlkKRkZJX0xJQlJBUklFUwpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgAAAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAwAARElTQUJMRV9XRVJST1IKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0xJQkZGSV9mZmkKTElCREwKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0xJQlJBUlkKRkZJX0ZPVU5ECkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9TWVNURU1fSU5DTFVERV9QQVRICkRJU0FCTEVfV0VSUk9SCiAgbWFrZV9zaGFyZWRfbW9kdWxlCkZOQU1FCkZOQU1FCk5BTUUKVEFSR0VUX05BTUUKTkFNRQpUQVJHRVRfTkFNRQpGTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKTElCRkZJX0xJQlJBUlkKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCk5BTUUKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKVU5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9GRklfZmZpCkZGSV9GT1VORApIQVZFX0xJQkZGSQpMSUJGRklfTElCUkFSWQpKU19CSU5ESU5HU19TT1VSQ0VTClFVSUNLSlNfTElCUkFSWQpGRklfTElCUkFSSUVTCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSClFVSUNLSlNfQ19NT0RVTEVfRElSAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								170,
								184
							],
							[
								187,
								208
							],
							[
								375,
								380
							],
							[
								410,
								428
							],
							[
								457,
								475
							],
							[
								495,
								513
							],
							[
								581,
								595
							],
							[
								605,
								614
							],
							[
								654,
								678
							],
							[
								764,
								788
							],
							[
								792,
								816
							],
							[
								823,
								847
							],
							[
								910,
								935
							],
							[
								976,
								990
							],
							[
								1007,
								1025
							],
							[
								1072,
								1077
							],
							[
								1101,
								1106
							],
							[
								1138,
								1142
							],
							[
								1152,
								1163
							],
							[
								1174,
								1178
							],
							[
								1198,
								1209
							],
							[
								1220,
								1225
							],
							[
								1257,
								1268
							],
							[
								1272,
								1287
							],
							[
								1291,
								1305
							],
							[
								1339,
								1350
							],
							[
								1404,
								1428
							],
							[
								1454,
								1474
							],
							[
								1502,
								1506
							],
							[
								1574,
								1590
							],
							[
								1594,
								1618
							],
							[
								1622,
								1638
							],
							[
								1650,
								1674
							],
							[
								1717,
								1728
							],
							[
								1745,
								1750
							],
							[
								1782,
								1793
							],
							[
								1809,
								1828
							],
							[
								2006,
								2037
							],
							[
								2179,
								2193
							],
							[
								2197,
								2215
							],
							[
								2227,
								2236
							],
							[
								2313,
								2324
							],
							[
								2436,
								2450
							],
							[
								2600,
								2619
							],
							[
								2885,
								2900
							],
							[
								2904,
								2917
							],
							[
								2956,
								2976
							],
							[
								3049,
								3069
							],
							[
								3073,
								3093
							],
							[
								3171,
								3191
							],
							[
								3239,
								3259
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAwAARElTQUJMRV9XRVJST1IKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0xJQkZGSV9mZmkKTElCREwKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0xJQlJBUlkKRkZJX0ZPVU5ECkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9TWVNURU1fSU5DTFVERV9QQVRICkRJU0FCTEVfV0VSUk9SCiAgbWFrZV9zaGFyZWRfbW9kdWxlCkZOQU1FCkZOQU1FCk5BTUUKVEFSR0VUX05BTUUKTkFNRQpUQVJHRVRfTkFNRQpGTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKTElCRkZJX0xJQlJBUlkKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCk5BTUUKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKVU5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9GRklfZmZpCkZGSV9GT1VORApIQVZFX0xJQkZGSQpMSUJGRklfTElCUkFSWQpKU19CSU5ESU5HU19TT1VSQ0VTClFVSUNLSlNfTElCUkFSWQpGRklfTElCUkFSSUVTCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSClFVSUNLSlNfQ19NT0RVTEVfRElSAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								170,
								184
							],
							[
								187,
								208
							],
							[
								375,
								380
							],
							[
								410,
								428
							],
							[
								457,
								475
							],
							[
								495,
								513
							],
							[
								581,
								595
							],
							[
								605,
								614
							],
							[
								654,
								678
							],
							[
								764,
								788
							],
							[
								792,
								816
							],
							[
								823,
								847
							],
							[
								910,
								935
							],
							[
								976,
								990
							],
							[
								1007,
								1025
							],
							[
								1072,
								1077
							],
							[
								1101,
								1106
							],
							[
								1138,
								1142
							],
							[
								1152,
								1163
							],
							[
								1174,
								1178
							],
							[
								1198,
								1209
							],
							[
								1220,
								1225
							],
							[
								1257,
								1268
							],
							[
								1272,
								1287
							],
							[
								1291,
								1305
							],
							[
								1339,
								1350
							],
							[
								1404,
								1428
							],
							[
								1454,
								1474
							],
							[
								1502,
								1506
							],
							[
								1574,
								1590
							],
							[
								1594,
								1618
							],
							[
								1622,
								1638
							],
							[
								1650,
								1674
							],
							[
								1717,
								1728
							],
							[
								1745,
								1750
							],
							[
								1782,
								1793
							],
							[
								1809,
								1828
							],
							[
								2006,
								2037
							],
							[
								2179,
								2193
							],
							[
								2197,
								2215
							],
							[
								2227,
								2236
							],
							[
								2313,
								2324
							],
							[
								2436,
								2450
							],
							[
								2600,
								2619
							],
							[
								2885,
								2900
							],
							[
								2904,
								2917
							],
							[
								2956,
								2976
							],
							[
								3049,
								3069
							],
							[
								3073,
								3093
							],
							[
								3171,
								3191
							],
							[
								3239,
								3259
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAVwMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								113,
								137
							],
							[
								175,
								199
							],
							[
								293,
								307
							],
							[
								310,
								331
							],
							[
								498,
								503
							],
							[
								533,
								551
							],
							[
								580,
								598
							],
							[
								618,
								636
							],
							[
								704,
								718
							],
							[
								728,
								737
							],
							[
								825,
								849
							],
							[
								853,
								877
							],
							[
								884,
								908
							],
							[
								971,
								996
							],
							[
								1037,
								1051
							],
							[
								1068,
								1086
							],
							[
								1133,
								1138
							],
							[
								1162,
								1167
							],
							[
								1199,
								1203
							],
							[
								1213,
								1224
							],
							[
								1235,
								1239
							],
							[
								1259,
								1270
							],
							[
								1281,
								1286
							],
							[
								1318,
								1329
							],
							[
								1333,
								1348
							],
							[
								1352,
								1366
							],
							[
								1400,
								1411
							],
							[
								1465,
								1489
							],
							[
								1515,
								1535
							],
							[
								1563,
								1567
							],
							[
								1635,
								1651
							],
							[
								1655,
								1679
							],
							[
								1683,
								1699
							],
							[
								1711,
								1735
							],
							[
								1778,
								1789
							],
							[
								1806,
								1811
							],
							[
								1843,
								1854
							],
							[
								1870,
								1889
							],
							[
								2067,
								2098
							],
							[
								2240,
								2254
							],
							[
								2258,
								2276
							],
							[
								2288,
								2297
							],
							[
								2374,
								2385
							],
							[
								2497,
								2511
							],
							[
								2661,
								2680
							],
							[
								2946,
								2961
							],
							[
								2965,
								2978
							],
							[
								3017,
								3037
							],
							[
								3110,
								3130
							],
							[
								3134,
								3154
							],
							[
								3232,
								3252
							],
							[
								3300,
								3320
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABXAwAARElTQUJMRV9XRVJST1IKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0xJQkZGSV9mZmkKTElCREwKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0xJQlJBUlkKRkZJX0ZPVU5ECkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9TWVNURU1fSU5DTFVERV9QQVRICkRJU0FCTEVfV0VSUk9SCiAgbWFrZV9zaGFyZWRfbW9kdWxlCkZOQU1FCkZOQU1FCk5BTUUKVEFSR0VUX05BTUUKTkFNRQpUQVJHRVRfTkFNRQpGTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKTElCRkZJX0xJQlJBUlkKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCk5BTUUKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKVU5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9GRklfZmZpCkZGSV9GT1VORApIQVZFX0xJQkZGSQpMSUJGRklfTElCUkFSWQpKU19CSU5ESU5HU19TT1VSQ0VTClFVSUNLSlNfTElCUkFSWQpGRklfTElCUkFSSUVTCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSClFVSUNLSlNfQ19NT0RVTEVfRElSAAAAAAAAAABwAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAMAAERJU0FCTEVfV0VSUk9SCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0xJQkZGSV9mZmkKTElCREwKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0xJQlJBUlkKRkZJX0ZPVU5ECkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX1NZU1RFTV9JTkNMVURFX1BBVEgKRElTQUJMRV9XRVJST1IKICBtYWtlX3NoYXJlZF9tb2R1bGUKRk5BTUUKRk5BTUUKTkFNRQpUQVJHRVRfTkFNRQpOQU1FClRBUkdFVF9OQU1FCkZOQU1FClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWQpMSUJGRklfTElCUkFSWQpUQVJHRVRfTkFNRQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTkFNRQpDTUFLRV9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpUQVJHRVRfTkFNRQpVTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX1BPU0lUSU9OX0lOREVQRU5ERU5UX0NPREUKTElCRkZJX0xJQlJBUlkKICBwa2djZmdfbGliX0ZGSV9mZmkKRkZJX0ZPVU5ECkhBVkVfTElCRkZJCkxJQkZGSV9MSUJSQVJZCkpTX0JJTkRJTkdTX1NPVVJDRVMKUVVJQ0tKU19MSUJSQVJZCkZGSV9MSUJSQVJJRVMKQ01BS0VfSU5TVEFMTF9MSUJESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIKQ01BS0VfSU5TVEFMTF9MSUJESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIAAAAAAAAAAHADAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-ffi/CMakeLists.txt",
						"symkeys":
						[
							[
								60,
								74
							],
							[
								90,
								114
							],
							[
								152,
								176
							],
							[
								294,
								308
							],
							[
								311,
								332
							],
							[
								499,
								504
							],
							[
								534,
								552
							],
							[
								581,
								599
							],
							[
								619,
								637
							],
							[
								705,
								719
							],
							[
								729,
								738
							],
							[
								826,
								850
							],
							[
								854,
								878
							],
							[
								885,
								909
							],
							[
								972,
								997
							],
							[
								1038,
								1052
							],
							[
								1069,
								1087
							],
							[
								1134,
								1139
							],
							[
								1163,
								1168
							],
							[
								1200,
								1204
							],
							[
								1214,
								1225
							],
							[
								1236,
								1240
							],
							[
								1260,
								1271
							],
							[
								1282,
								1287
							],
							[
								1319,
								1330
							],
							[
								1334,
								1349
							],
							[
								1353,
								1367
							],
							[
								1401,
								1412
							],
							[
								1466,
								1490
							],
							[
								1516,
								1536
							],
							[
								1564,
								1568
							],
							[
								1636,
								1652
							],
							[
								1656,
								1680
							],
							[
								1684,
								1700
							],
							[
								1712,
								1736
							],
							[
								1779,
								1790
							],
							[
								1807,
								1812
							],
							[
								1844,
								1855
							],
							[
								1871,
								1890
							],
							[
								2068,
								2099
							],
							[
								2241,
								2255
							],
							[
								2259,
								2277
							],
							[
								2289,
								2298
							],
							[
								2375,
								2386
							],
							[
								2498,
								2512
							],
							[
								2662,
								2681
							],
							[
								2947,
								2962
							],
							[
								2966,
								2979
							],
							[
								3018,
								3038
							],
							[
								3111,
								3131
							],
							[
								3135,
								3155
							],
							[
								3233,
								3253
							],
							[
								3301,
								3321
							]
						],
						"symlist":
						[
							"DISABLE_WERROR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_LIBFFI_ffi",
							"LIBDL",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_INCLUDE_DIR",
							"LIBFFI_LIBRARY",
							"FFI_FOUND",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_SYSTEM_INCLUDE_PATH",
							"DISABLE_WERROR",
							"make_shared_module",
							"FNAME",
							"FNAME",
							"NAME",
							"TARGET_NAME",
							"NAME",
							"TARGET_NAME",
							"FNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY",
							"LIBFFI_LIBRARY",
							"TARGET_NAME",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_PREFIX",
							"NAME",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"TARGET_NAME",
							"UNAME",
							"TARGET_NAME",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"LIBFFI_LIBRARY",
							"pkgcfg_lib_FFI_ffi",
							"FFI_FOUND",
							"HAVE_LIBFFI",
							"LIBFFI_LIBRARY",
							"JS_BINDINGS_SOURCES",
							"QUICKJS_LIBRARY",
							"FFI_LIBRARIES",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABwAwAARElTQUJMRV9XRVJST1IKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpMSUJGRklfTElCUkFSWQogIHBrZ2NmZ19saWJfTElCRkZJX2ZmaQpMSUJETApMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfTElCUkFSWQpGRklfRk9VTkQKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfU1lTVEVNX0lOQ0xVREVfUEFUSApESVNBQkxFX1dFUlJPUgogIG1ha2Vfc2hhcmVkX21vZHVsZQpGTkFNRQpGTkFNRQpOQU1FClRBUkdFVF9OQU1FCk5BTUUKVEFSR0VUX05BTUUKRk5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZCkxJQkZGSV9MSUJSQVJZClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX1BSRUZJWApOQU1FCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClVOQU1FClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpMSUJGRklfTElCUkFSWQogIHBrZ2NmZ19saWJfRkZJX2ZmaQpGRklfRk9VTkQKSEFWRV9MSUJGRkkKTElCRkZJX0xJQlJBUlkKSlNfQklORElOR1NfU09VUkNFUwpRVUlDS0pTX0xJQlJBUlkKRkZJX0xJQlJBUklFUwpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgAAAAAAAAAAcAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHADAABESVNBQkxFX1dFUlJPUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9MSUJGRklfZmZpCkxJQkRMCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9MSUJSQVJZCkZGSV9GT1VORApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9TWVNURU1fSU5DTFVERV9QQVRICkRJU0FCTEVfV0VSUk9SCiAgbWFrZV9zaGFyZWRfbW9kdWxlCkZOQU1FCkZOQU1FCk5BTUUKVEFSR0VUX05BTUUKTkFNRQpUQVJHRVRfTkFNRQpGTkFNRQpUQVJHRVRfTkFNRQpRVUlDS0pTX0xJQlJBUlkKTElCRkZJX0xJQlJBUlkKVEFSR0VUX05BTUUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCk5BTUUKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEFSR0VUX05BTUUKVU5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkxJQkZGSV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9GRklfZmZpCkZGSV9GT1VORApIQVZFX0xJQkZGSQpMSUJGRklfTElCUkFSWQpKU19CSU5ESU5HU19TT1VSQ0VTClFVSUNLSlNfTElCUkFSWQpGRklfTElCUkFSSUVTCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSClFVSUNLSlNfQ19NT0RVTEVfRElSAAAAAAAAAABwAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					4,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BQAAAAAAAAAAAAAAAAAAAAAAAABwAwAARElTQUJMRV9XRVJST1IKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpMSUJGRklfTElCUkFSWQogIHBrZ2NmZ19saWJfTElCRkZJX2ZmaQpMSUJETApMSUJGRklfSU5DTFVERV9ESVIKTElCRkZJX0lOQ0xVREVfRElSCkxJQkZGSV9JTkNMVURFX0RJUgpMSUJGRklfTElCUkFSWQpGRklfRk9VTkQKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfU1lTVEVNX0lOQ0xVREVfUEFUSApESVNBQkxFX1dFUlJPUgogIG1ha2Vfc2hhcmVkX21vZHVsZQpGTkFNRQpGTkFNRQpOQU1FClRBUkdFVF9OQU1FCk5BTUUKVEFSR0VUX05BTUUKRk5BTUUKVEFSR0VUX05BTUUKUVVJQ0tKU19MSUJSQVJZCkxJQkZGSV9MSUJSQVJZClRBUkdFVF9OQU1FCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX1BSRUZJWApOQU1FCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClRBUkdFVF9OQU1FClVOQU1FClRBUkdFVF9OQU1FClFVSUNLSlNfTElCUkFSWV9ESVIKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpMSUJGRklfTElCUkFSWQogIHBrZ2NmZ19saWJfRkZJX2ZmaQpGRklfRk9VTkQKSEFWRV9MSUJGRkkKTElCRkZJX0xJQlJBUlkKSlNfQklORElOR1NfU09VUkNFUwpRVUlDS0pTX0xJQlJBUlkKRkZJX0xJQlJBUklFUwpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"redo_stack":
			[
				[
					453,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAPw/AAAAAAAALUAAAAAAAAAAAAAA+z8AAAAAAAD7PwAAAAAAAAEAAAAx",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPw/AAAAAAAA/D8AAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 23453,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"paste",
					null,
					"AQAAAHwIAAAAAAAA7QgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwIAAAAAAAAfAgAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"paste",
					null,
					"AgAAAMlNAAAAAAAAEk4AAAAAAAAAAAAAEk4AAAAAAAASTgAAAAAAAC4AAAAgIEFsaWduSXRlbSwKICAgIEFsaWduQWxsLAogICAgVXBkYXRlTWVhc3VyZXMs",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMlNAAAAAAAA900AAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAABJOAAAAAAAAE04AAAAAAAAAAAAAE04AAAAAAAAUTgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABJOAAAAAAAAEk4AAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					2,
					"left_delete",
					null,
					"AgAAABNOAAAAAAAAE04AAAAAAAABAAAALhJOAAAAAAAAEk4AAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABROAAAAAAAAFE4AAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABJOAAAAAAAAE04AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABJOAAAAAAAAEk4AAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"paste",
					null,
					"AgAAAEZPAAAAAAAAj08AAAAAAAAAAAAAj08AAAAAAACPTwAAAAAAAGIAAAAgIEdldENvbG9yQmFuZHMsCiAgICBkaWdpdDJjb2xvciwKICAgIFVuaXRGb3JOYW1lLAogICAgVXBkYXRlTWVhc3VyZXMsCiAgICBBbGlnbkl0ZW0sCiAgICBBbGlnbkFsbA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEZPAAAAAAAAqE8AAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAMdNAAAAAAAAx00AAAAAAABNAAAAICBHZXRDb2xvckJhbmRzLCBVcGRhdGVNZWFzdXJlcywgQWxpZ25JdGVtLCBBbGlnbkFsbCwgc2NpZW50aWZpYywgbnVtMmNvbG9yLAo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMdNAAAAAAAAFE4AAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " ,m"
					},
					"BAAAAJIIAAAAAAAAkwgAAAAAAAAAAAAAkwgAAAAAAACTCAAAAAAAACYAAAAsIFVwZGF0ZU1lYXN1cmVzLCBBbGlnbkl0ZW0sIEFsaWduQWxsLJMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACVCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIIAAAAAAAAuAgAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAAJQIAAAAAAAAlAgAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUIAAAAAAAAlQgAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"left_delete",
					null,
					"AQAAAG8HAAAAAAAAbwcAAAAAAABiAAAAaW1wb3J0IHsgbnVtMmNvbG9yLCBzY2llbnRpZmljLCBVcGRhdGVNZWFzdXJlcywgQWxpZ25JdGVtLCBBbGlnbkFsbCB9IGZyb20gJy4vZWFnbGUtY29tbWFuZHMuanMnOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8HAAAAAAAA0QcAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					3,
					"left_delete",
					null,
					"AwAAAO8GAAAAAAAA7wYAAAAAAAANAAAAR2V0Q29sb3JCYW5kc+4GAAAAAAAA7gYAAAAAAAABAAAAIO0GAAAAAAAA7QYAAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8GAAAAAAAA/AYAAAAAAAAAAAAAAADwvw"
				],
				[
					181,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADoWgAAaW1wb3J0IHsgRWFnbGVTVkdSZW5kZXJlciwgU2NoZW1hdGljUmVuZGVyZXIsIEJvYXJkUmVuZGVyZXIsIExpYnJhcnlSZW5kZXJlciwgRWFnbGVOb2RlTGlzdCwgdXNlVHJrbCwgUkFEMkRFRywgREVHMlJBRCwgVkVSVElDQUwsIEhPUklaT05UQUwsIEhPUklaT05UQUxfVkVSVElDQUwsIERFQlVHLCBsb2csIHNldERlYnVnLCBQaW5TaXplcywgRXNjYXBlQ2xhc3NOYW1lLCBVbmVzY2FwZUNsYXNzTmFtZSwgTGF5ZXJUb0NsYXNzLCBFbGVtZW50VG9DbGFzcywgQ2xhbXBBbmdsZSwgQWxpZ25tZW50QW5nbGUsIE1ha2VSb3RhdGlvbiwgRWFnbGVBbGlnbm1lbnRzLCBBbGlnbm1lbnQsIFNWR0FsaWdubWVudHMsIEFsaWdubWVudEF0dHJzLCBSb3RhdGVUcmFuc2Zvcm1hdGlvbiwgTGF5ZXJBdHRyaWJ1dGVzLCBJbnZlcnRZLCBQb2xhclRvQ2FydGVzaWFuLCBDYXJ0ZXNpYW5Ub1BvbGFyLCBSZW5kZXJBcmMsIENhbGN1bGF0ZUFyY1JhZGl1cywgTGluZXNUb1BhdGgsIE1ha2VDb29yZFRyYW5zZm9ybWVyLCB1c2VBdHRyaWJ1dGVzLCBFYWdsZURvY3VtZW50LCBFYWdsZVJlZmVyZW5jZSwgRWFnbGVSZWYsIG1ha2VFYWdsZU5vZGUsIEVhZ2xlTm9kZSwgUmVuZGVyZXIsIEVhZ2xlUHJvamVjdCwgRWFnbGVFbGVtZW50LCBtYWtlRWFnbGVFbGVtZW50LCBFYWdsZUVsZW1lbnRQcm94eSwgRWFnbGVOb2RlTWFwLCBJbW11dGFibGVQYXRoLCBEZXJlZmVyZW5jZUVycm9yIH0gZnJvbSAnLi9saWIvZWFnbGUuanMnOwppbXBvcnQgVXRpbCBmcm9tICcuL2xpYi91dGlsLmpzJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICcuL2xpYi9kZWVwLmpzJzsKaW1wb3J0IHBhdGggZnJvbSAnLi9saWIvcGF0aC5qcyc7CmltcG9ydCB7IExpbmVMaXN0LCBQb2ludCwgQ2lyY2xlLCBSZWN0LCBTaXplLCBMaW5lLCBUcmFuc2Zvcm1hdGlvbkxpc3QsIFJvdGF0aW9uLCBUcmFuc2xhdGlvbiwgU2NhbGluZywgTWF0cml4LCBCQm94IH0gZnJvbSAnLi9saWIvZ2VvbS5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IFJFUEwgZnJvbSAnLi94cmVwbC5qcyc7CmltcG9ydCB7IEJpbmFyeVRyZWUsIEJ1Y2tldFN0b3JlLCBCdWNrZXRNYXAsIENvbXBvbmVudE1hcCwgQ29tcG9zaXRlTWFwLCBEZXF1ZSwgRW51bSwgSGFzaExpc3QsIE11bHRpbWFwLCBTaGFzaCwgU29ydGVkTWFwLCBIYXNoTXVsdGltYXAsIE11bHRpQmlNYXAsIE11bHRpS2V5TWFwLCBEZW5zZVNwYXRpYWxIYXNoMkQsIFNwYXRpYWxIYXNoMkQsIEhhc2hNYXAsIFNwYXRpYWxILCBTcGF0aWFsSGFzaCwgU3BhdGlhbEhhc2hNYXAsIEJveEhhc2ggfSBmcm9tICcuL2xpYi9jb250YWluZXIuanMnOwppbXBvcnQgZnMgZnJvbSAnZnMnOwppbXBvcnQgeyBQb2ludGVyIH0gZnJvbSAnLi9saWIvcG9pbnRlci5qcyc7CmltcG9ydCB7IHJlYWQgYXMgZnJvbVhNTCwgd3JpdGUgYXMgdG9YTUwgfSBmcm9tICcuL2xpYi94bWwuanMnOwppbXBvcnQgaW5zcGVjdCBmcm9tICcuL2xpYi9vYmplY3RJbnNwZWN0LmpzJzsKaW1wb3J0IHsgUmVhZEZpbGUsIExvYWRIaXN0b3J5LCBSZWFkSlNPTiwgTWFwRmlsZSwgUmVhZEJKU09OLCBXcml0ZUZpbGUsIFdyaXRlSlNPTiwgV3JpdGVCSlNPTiwgRGlySXRlcmF0b3IsIFJlY3Vyc2l2ZURpckl0ZXJhdG9yIH0gZnJvbSAnLi9pby1oZWxwZXJzLmpzJzsKaW1wb3J0IHsgR2V0RXhwb25lbnQsIEdldE1hbnRpc3NhLCBWYWx1ZVRvTnVtYmVyLCBOdW1iZXJUb1ZhbHVlLCBHZXRNdWx0aXBsaWVycywgR2V0TXVsdGlwbGllciwgR2V0RmFjdG9yLCBCRywgUGFydFNjYWxlcywgZGlnaXQyY29sb3IgfSBmcm9tICcuL2xpYi9lZGEvY29sb3JDb2RpbmcuanMnOwppbXBvcnQgeyBVbml0Rm9yTmFtZSB9IGZyb20gJy4vbGliL2VkYS91bml0cy5qcyc7CmltcG9ydCB7IGRlZmluZSwgaXNPYmplY3QsIG1lbW9pemUsIHVuaXF1ZSB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgeyBIU0xBLCBpc0hTTEEsIEltbXV0YWJsZUhTTEEsIFJHQkEsIGlzUkdCQSwgSW1tdXRhYmxlUkdCQSwgQ29sb3JlZFRleHQgfSBmcm9tICcuL2xpYi9jb2xvci5qcyc7CmltcG9ydCB7IEdldENvbG9yQmFuZHMgLCBzY2llbnRpZmljLCBudW0yY29sb3IgfSBmcm9tICcuL2VhZ2xlLWNvbW1hbmRzLmpzJzsKCmxldCBjbWRoaXN0OwoKVXRpbC5kZWZpbmUoQXJyYXkucHJvdG90eXBlLCB7CiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpIHsKICAgIGZvcihsZXQgaSA9IHRoaXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgY29uc3QgeCA9IHRoaXNbaV07CiAgICAgIGlmKHByZWRpY2F0ZSh4LCBpLCB0aGlzKSkgewogICAgICAgIHJldHVybiBpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gLTE7CiAgfSwKICByb3RhdGVSaWdodChuKSB7CiAgICB0aGlzLnVuc2hpZnQoLi4udGhpcy5zcGxpY2UobiwgdGhpcy5sZW5ndGggLSBuKSk7CiAgICByZXR1cm4gdGhpczsKICB9LAogIHJvdGF0ZUxlZnQobikgewogICAgdGhpcy5wdXNoKC4uLnRoaXMuc3BsaWNlKDAsIG4pKTsKICAgIHJldHVybiB0aGlzOwogIH0sCiAgYXQoaW5kZXgpIHsKICAgIHJldHVybiB0aGlzW1V0aWwubW9kKGluZGV4LCB0aGlzLmxlbmd0aCldOwogIH0sCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBoZWFkKCkgewogICAgcmV0dXJuIHRoaXNbdGhpcy5sZW5ndGgtMV07CiAgfSwKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IHRhaWwoKSB7CiAgICByZXR1cm4gdGhpc1t0aGlzLmxlbmd0aC0xXTsKICB9Cn0pOwoKZnVuY3Rpb24gVGVybWluYXRlKGV4aXRDb2RlKSB7CiAgY29uc29sZS5sb2coJ1Rlcm1pbmF0ZScsIGV4aXRDb2RlKTsKCiAgVXRpbC5leGl0KGV4aXRDb2RlKTsKfQoKLypmdW5jdGlvbiBMb2FkSGlzdG9yeShmaWxlbmFtZSkgewogIGxldCBjb250ZW50cyA9IGZzLnJlYWRGaWxlU3luYyhmaWxlbmFtZSwgJ3V0Zi04Jyk7CiAgbGV0IGRhdGE7CgogIGNvbnN0IHBhcnNlID0gKCkgPT4gewogICAgdHJ5IHsKICAgICAgZGF0YSA9IEpTT04ucGFyc2UoY29udGVudHMpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgICB0cnkgewogICAgICBkYXRhID0gY29udGVudHMuc3BsaXQoL1xuL2cpOwogICAgfSBjYXRjaChlKSB7fQogICAgaWYoZGF0YSkgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIChwYXJzZSgpID8/IFtdKS5maWx0ZXIoZW50cnkgPT4gKGVudHJ5ICsgJycpLnRyaW0oKSAhPSAnJykubWFwKGVudHJ5ID0+IGVudHJ5LnJlcGxhY2UoL1xcbi9nLCAnXG4nKSk7Cn0KCmZ1bmN0aW9uIFJlYWRKU09OKGZpbGVuYW1lKSB7CiAgbGV0IGRhdGEgPSBzdGQubG9hZEZpbGUoZmlsZW5hbWUpOwoKICBpZihkYXRhKSBjb25zb2xlLmxvZyhgUmVhZEpTT04oJyR7ZmlsZW5hbWV9JykgJHtkYXRhLmxlbmd0aH0gYnl0ZXMgcmVhZGApOwogIHJldHVybiBkYXRhID8gSlNPTi5wYXJzZShkYXRhKSA6IG51bGw7Cn0qLwoKYXN5bmMgZnVuY3Rpb24gaW1wb3J0TW9kdWxlKG1vZHVsZU5hbWUsIC4uLmFyZ3MpIHsKICAvL2NvbnNvbGUubG9nKCdpbXBvcnRNb2R1bGUnLCBtb2R1bGVOYW1lLCBhcmdzKTsKICBsZXQgZG9uZSA9IGZhbHNlOwogIHJldHVybiBhd2FpdCBpbXBvcnQobW9kdWxlTmFtZSkKICAgIC50aGVuKG1vZHVsZSA9PiB7CiAgICAgIC8vY29uc29sZS5sb2coJ2ltcG9ydCcsIHsgbW9kdWxlIH0pOwogICAgICBkb25lID0gdHJ1ZTsKICAgICAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IFttb2R1bGVOYW1lXTogbW9kdWxlIH0pOwogICAgICByZXR1cm4gbW9kdWxlOwogICAgfSkKICAgIC5jYXRjaChlID0+IHsKICAgICAgY29uc29sZS5lcnJvcihtb2R1bGVOYW1lICsgJzonLCBlKTsKICAgICAgZG9uZSA9IHRydWU7CiAgICB9KTsKICAvLyB3aGlsZSghZG9uZSkgc3RkLnNsZWVwKDUwKTsKfQoKZnVuY3Rpb24gVXBkYXRlTWVhc3VyZXMoYm9hcmQpIHsKICBpZighYm9hcmQpIHJldHVybiBmYWxzZTsKICBsZXQgYm91bmRzID0gYm9hcmQuZ2V0Qm91bmRzKCk7CiAgbGV0IG1lYXN1cmVzID0gYm9hcmQuZ2V0TWVhc3VyZXMoKTsKCiAgaWYobWVhc3VyZXMpIHsKICAgIGNvbnNvbGUubG9nKCdnb3QgbWVhc3VyZXM6JywgbWVhc3VyZXMpOwogIH0gZWxzZSB7CiAgICBsZXQgcmVjdCA9IG5ldyBSZWN0KGJvdW5kcy5yZWN0KTsKICAgIGxldCBsaW5lcyA9IHJlY3QudG9MaW5lcyhsaW5lcyA9PiBuZXcgTGluZUxpc3QobGluZXMpKTsKICAgIGxldCB7IHBsYWluIH0gPSBib2FyZDsKICAgIHBsYWluLnJlbW92ZShlID0+IGUudGFnTmFtZSA9PSAnd2lyZScgJiYgZS5hdHRyaWJ1dGVzLmxheWVyID09ICc0NycpOwogICAgcGxhaW4uYXBwZW5kKAogICAgICAuLi5saW5lcy5tYXAobGluZSA9PiAoewogICAgICAgIHRhZ05hbWU6ICd3aXJlJywKICAgICAgICBhdHRyaWJ1dGVzOiB7IC4uLmxpbmUudG9PYmplY3QoKSwgbGF5ZXI6IDQ3LCB3aWR0aDogMCB9CiAgICAgIH0pKQogICAgKTsKICAgIC8vY29uc29sZS5sb2coJ25vIG1lYXN1cmVzOicsIHsgYm91bmRzLCBsaW5lcyB9LCBbLi4ucGxhaW5dKTsKICAgIC8vcGxhaW4ucmVtb3ZlKGUgPT4gZS5hdHRyaWJ1dGVzLmxheWVyID09ICc1MScpOwogIH0KICAvL2NvbnNvbGUubG9nKCdib2FyZC5wbGFpbjonLCBib2FyZC5wbGFpbik7CiAgcmV0dXJuICFtZWFzdXJlczsKfQoKZnVuY3Rpb24gQWxpZ25JdGVtKGl0ZW0pIHsKICBsZXQgY2hhbmdlZDsKICAvLyBjb25zb2xlLmxvZygnQWxpZ25JdGVtJywgeyBpdGVtIH0pOwogIGxldCBvZmZzZXRQb3MgPSBuZXcgUG9pbnQoMCwgMCk7CiAgbGV0IGdlb21ldHJ5ID0gaXRlbS5nZW9tZXRyeTsKICBpZihpdGVtLnRhZ05hbWUgPT0gJ2VsZW1lbnQnKSB7CiAgICBsZXQgcGtnID0gaXRlbVsncGFja2FnZSddOwogICAgbGV0IHRyYW5zZm9ybWF0aW9uID0gaXRlbS50cmFuc2Zvcm1hdGlvbigpLmZpbHRlcih0ciA9PiB0ci50eXBlICE9ICd0cmFuc2xhdGUnKTsKICAgIGxldCBtYXRyaXggPSB0cmFuc2Zvcm1hdGlvbi50b01hdHJpeCgpOwogICAgLy9jb25zb2xlLmxvZygnQWxpZ25JdGVtOicsIHsgdHJhbnNmb3JtYXRpb24sIG1hdHJpeCB9KTsKICAgIG9mZnNldFBvcyA9IG5ldyBQb2ludChwa2cucGFkc1swXSkudHJhbnNmb3JtKG1hdHJpeCk7CiAgICBsZXQgaW5jaFBvcyA9IG9mZnNldFBvcy5xdW90KDIuNTQpOwogICAgLy8gY29uc29sZS5sb2coJ0FsaWduSXRlbTonLCB7IG9mZnNldFBvcywgaW5jaFBvcyB9KTsKICAgIGxldCBvbGRQb3MgPSBuZXcgUG9pbnQoaXRlbSk7CiAgICBpbmNoUG9zID0gb2xkUG9zLnF1b3QoMi41NCk7CiAgICAvLyBjb25zb2xlLmxvZygnQWxpZ25JdGVtOicsIHsgb2xkUG9zLCBpbmNoUG9zIH0pOwogICAgbGV0IHBhZFBvcyA9IG9sZFBvcy5zdW0ob2Zmc2V0UG9zKTsKICAgIGluY2hQb3MgPSBwYWRQb3MucXVvdCgyLjU0KTsKICAgIC8vIGNvbnNvbGUubG9nKCdBbGlnbkl0ZW06JywgeyBwYWRQb3MsIGluY2hQb3MgfSk7CiAgICBsZXQgbmV3UG9zID0gcGFkUG9zLnJvdW5kKDIuNTQpLmRpZmYob2Zmc2V0UG9zKS5yb3VuZCgwLjAwMDEsIDQpOwogICAgbGV0IGRpZmYgPSBuZXdQb3MuZGlmZihvbGRQb3MpOwogICAgbGV0IGJlZm9yZSA9IGl0ZW0ucGFyZW50Tm9kZS50b1hNTCgpOwogICAgLy9jb25zb2xlLmxvZygnZ2VvbWV0cnk6JywgT2JqZWN0LmVudHJpZXMoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoZ2VvbWV0cnkpKS5tYXAoKFtuYW1lLCB7IHZhbHVlIH1dKSA9PiBbbmFtZSwgdmFsdWUgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModmFsdWUpXSksIGdlb21ldHJ5LngxKTsKICAgIGluY2hQb3MgPSBuZXdQb3MucXVvdCgyLjU0KTsKICAgIC8vY29uc29sZS5sb2coJ0FsaWduSXRlbTonLCB7IG5ld1BvcywgZGlmZiwgaW5jaFBvcyB9KTsKICAgIGdlb21ldHJ5LmFkZChkaWZmKTsKICAgIGNoYW5nZWQgPSAhZGlmZi5pc051bGwoKTsKICB9CiAgaWYoaXRlbS50YWdOYW1lID09ICd3aXJlJykgewogICAgbGV0IG9sZENvb3JkID0gZ2VvbWV0cnkuY2xvbmUoKTsKICAgIGxldCBpbmNoQ29vcmQgPSBvbGRDb29yZC5xdW90KDIuNTQpOwogICAgLy9jb25zb2xlLmxvZygnQWxpZ25JdGVtOicsIHsgb2xkQ29vcmQsIGluY2hDb29yZCB9KTsKICAgIGxldCBuZXdDb29yZCA9IG9sZENvb3JkLmNsb25lKCkucm91bmQoMi41NCk7CiAgICBpbmNoQ29vcmQgPSBuZXdDb29yZC5xdW90KDIuNTQpOwogICAgLy9jb25zb2xlLmxvZygnQWxpZ25JdGVtOicsIHsgbmV3Q29vcmQsIGluY2hDb29yZCB9KTsKICAgIGxldCBkaWZmID0gbmV3Q29vcmQuZGlmZihvbGRDb29yZCk7CiAgICAvL2NvbnNvbGUubG9nKCdBbGlnbkl0ZW06JywgeyBkaWZmIH0pOwogICAgY2hhbmdlZCA9ICFkaWZmLmlzTnVsbCgpOwogICAgZ2VvbWV0cnkuYWRkKGRpZmYpOwogIH0KICBpZihjaGFuZ2VkKSB7CiAgICBjb25zb2xlLmxvZyhpdGVtKTsKICAgIC8qICAgIGNvbnNvbGUubG9nKCdhZnRlcjonLCBVdGlsLmFiYnJldmlhdGUoaXRlbS5wYXJlbnROb2RlLnRvWE1MKCkpKTsKICAgICBjb25zb2xlLmxvZygnYWxpZ25cbicsIGl0ZW0ueHBhdGgoKSwgJ1xuIG5ld1BvczonLCBuZXdQb3MsICdcbiBkaWZmOicsIGRpZmYsICdcbiBhdHRyOicsIGl0ZW0ucmF3LmF0dHJpYnV0ZXMpOyovCiAgfQogIHJldHVybiBjaGFuZ2VkOwp9CgpmdW5jdGlvbiBBbGlnbkFsbChkb2MgPSBnbG9iYWxUaGlzLmRvY3VtZW50KSB7CiAgaWYoIWRvYykgcmV0dXJuIGZhbHNlOwoKICBsZXQgaXRlbXMgPSBkb2MuZ2V0QWxsKGRvYy50eXBlID09ICdicmQnID8gJ2VsZW1lbnQnIDogJ2luc3RhbmNlJyk7CiAgbGV0IGNoYW5nZWQgPSBmYWxzZTsKICBpdGVtcyA9IFsuLi5pdGVtc107CiAgY29uc29sZS5sb2coJ2l0ZW1zOicsIGl0ZW1zKTsKICBmb3IobGV0IGl0ZW0gb2YgaXRlbXMpIGNoYW5nZWQgfD0gQWxpZ25JdGVtKGl0ZW0pOwogIGxldCBzaWduYWxzX25ldHMgPSBkb2MuZ2V0QWxsKC8oc2lnbmFsc3xuZXRzKS8pOwogIC8vY29uc29sZS5sb2coJ3NpZ25hbHNfbmV0czonLCBzaWduYWxzX25ldHMpOwogIGZvcihsZXQgbmV0IG9mIHNpZ25hbHNfbmV0cykgZm9yIChsZXQgaXRlbSBvZiBuZXQuZ2V0QWxsKCd3aXJlJykpIGNoYW5nZWQgfD0gQWxpZ25JdGVtKGl0ZW0pOwogIHJldHVybiAhIWNoYW5nZWQ7Cn0KCmZ1bmN0aW9uIGZpeFZhbHVlKGVsZW1lbnQpIHsKICBsZXQgdmFsdWUgPSBlbGVtZW50LnZhbHVlOwogIGxldCBuZXdWYWx1ZTsKCiAgc3dpdGNoIChlbGVtZW50Lm5hbWVbMF0pIHsKICAgIGNhc2UgJ1InOiB7CiAgICAgIG5ld1ZhbHVlID0gdmFsdWUucmVwbGFjZSgvXihbMC05Ll0rKShbbWtNXT8pKD86XHhFRlx4QkZceEJEfFx4QzJceEE5fFx4MjZceEMyKlx4QTkrfFx1MjEyNj9bXHg4MC1ceEZGXSspKFtceDAwLVx4N0ZdKikvLCAnJDEkMlx1MjEyNiQzJyk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnTCc6IHsKICAgICAgbmV3VmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9eKFswLTkuXSspKD86W1x4N0YtXHhGRl0qXHhCNXxceEVGXHhCRlx4QkQpKEguKikvLCAnJDFcdTAwQjUkMicpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ0MnOiB7CiAgICAgIG5ld1ZhbHVlID0gdmFsdWUucmVwbGFjZSgvXihbMC05Ll0rKSg/OltceDdGLVx4RkZdKlx4QjV8XHhFRlx4QkZceEJEKShGLiopLywgJyQxXHUwMEI1JDInKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQogIGlmKG5ld1ZhbHVlICYmIG5ld1ZhbHVlICE9IHZhbHVlKSB7CiAgICBjb25zb2xlLmxvZyhgZWxlbWVudCAke2VsZW1lbnR9IHZhbHVlIGNoYW5nZWQgZnJvbSAnJHt2YWx1ZX0nIHRvICcke25ld1ZhbHVlfSdgKTsKICAgIGVsZW1lbnQuYXR0cmlidXRlc1sndmFsdWUnXSA9IG5ld1ZhbHVlOwogIH0KfQoKZnVuY3Rpb24gZml4VmFsdWVzKGRvYykgewogIGlmKGRvYy50eXBlID09ICdicmQnKSBkb2MuZWxlbWVudHMuZm9yRWFjaChmaXhWYWx1ZSk7CiAgZWxzZSBpZihkb2MudHlwZSA9PSAnc2NoJykgZG9jLnBhcnRzLmZvckVhY2goZml4VmFsdWUpOwp9CgpmdW5jdGlvbiBjb29yZE1hcChkb2MpIHsKICBsZXQgbWFwID0gbmV3IE11bHRpbWFwKCk7CgogIGlmKGRvYy50eXBlID09ICdicmQnKSB7CiAgICBmb3IobGV0IFssIHNpZ25hbF0gb2YgZG9jLnNpZ25hbHMpIHsKICAgICAgZm9yKGxldCB3aXJlIG9mIHNpZ25hbC53aXJlcykgewogICAgICAgIGxldCBsaW5lID0gbmV3IExpbmUod2lyZS5nZW9tZXRyeSk7CiAgICAgICAgbGV0IHBvaW50cyA9IGxpbmUudG9Qb2ludHMoKTsKICAgICAgICBsZXQgW2EsIGJdID0gcG9pbnRzLm1hcChwID0+IG5ldyBQb2ludChwKSk7CgogICAgICAgIC8vICAgY29uc29sZS5sb2coYHNpZ25hbCAnJHtzaWduYWwubmFtZX0nIHdpcmUgIyR7c2lnbmFsLndpcmVzLmluZGV4T2Yod2lyZSl9OmAsIHBvaW50cyk7CiAgICAgICAgY29uc29sZS5sb2coYHNpZ25hbCAnJHtzaWduYWwubmFtZX0nIHdpcmUgIyR7c2lnbmFsLndpcmVzLmluZGV4T2Yod2lyZSl9OmAsIHsgYSwgYiB9KTsKCiAgICAgICAgbWFwLnNldChhLnRvU3RyaW5nKCksIFtzaWduYWwubmFtZSwgd2lyZSwgYl0pOwogICAgICAgIG1hcC5zZXQoYi50b1N0cmluZygpLCBbc2lnbmFsLm5hbWUsIHdpcmUsIGFdKTsKICAgICAgfQogICAgfQogICAgZm9yKGxldCBlbGVtZW50IG9mIGRvYy5ib2FyZC5lbGVtZW50cy5jaGlsZHJlbikgewogICAgICBsZXQgcG9zID0gbmV3IFBvaW50KGVsZW1lbnQuZ2VvbWV0cnkpOwogICAgICBsZXQgdHJhbnNmb3JtID0gZWxlbWVudC50cmFuc2Zvcm1hdGlvbigpLmZpbHRlcih0ID0+IHQudHlwZSAhPSAndHJhbnNsYXRlJyk7CiAgICAgIGNvbnNvbGUubG9nKGBlbGVtZW50ICcke2VsZW1lbnQubmFtZX0nOmAsIHBvcywgdHJhbnNmb3JtKTsKICAgICAgbGV0IGkgPSAwOwogICAgICBsZXQgeyBjb250YWN0cmVmcyB9ID0gZWxlbWVudDsKICAgICAgY29uc29sZS5sb2coYGNvbnRhY3RyZWZzIGAsIGNvbnRhY3RyZWZzKTsKICAgICAgZm9yKGxldCBwYWQgb2YgZWxlbWVudC5wYWRzLmxpc3QpIHsKICAgICAgICBsZXQgeyBnZW9tZXRyeSB9ID0gcGFkOwogICAgICAgIGNvbnNvbGUubG9nKGBwYWQgJyR7ZWxlbWVudC5uYW1lfS4ke3BhZC5uYW1lfSc6YCwgZ2VvbWV0cnkpOwogICAgICAgIGxldCBwYWRQb3MgPSBuZXcgUG9pbnQoZ2VvbWV0cnkpOwogICAgICAgIGxldCBjcmVmID0gY29udGFjdHJlZnNbcGFkLm5hbWVdOwogICAgICAgIG1hcC5zZXQocGFkUG9zLnRvU3RyaW5nKCksIFtjcmVmPy5wYXJlbnROb2RlID8/IG51bGwsIGVsZW1lbnQsIHBhZCAvKiwgY3JlZiovXSk7CiAgICAgIH0KICAgIH0KICB9CiAgZ2xvYmFsVGhpcy5tYXBDb29yZHMgPSBtYXA7CiAgLy8gIGNvbnNvbGUubG9nKCdjb29yZE1hcCcsIHsgbWFwIH0pOwogIC8vICByZXR1cm4gbWFwOwp9CgpmdW5jdGlvbiBHZXRQb2x5Z29ucyhkID0gZG9jKSB7CiAgcmV0dXJuIFsuLi5kLmdldEFsbChlID0+IGUudGFnTmFtZSA9PSAncG9seWdvbicgJiYgWzEsIDE2XS5pbmRleE9mKCtlLmF0dHJpYnV0ZXMubGF5ZXIpICE9IC0xKV07Cn0KCmZ1bmN0aW9uIEZpbmRQb2x5Z29ucygpIHsKICByZXR1cm4gKGdsb2JhbFRoaXMucG9seWdvbnMgPSBkb2NzLm1hcChkb2MgPT4gW2RvYywgR2V0UG9seWdvbnMoZG9jKS5tYXAoZSA9PiBlLnBhdGgpXSkpOwp9CgpmdW5jdGlvbiBSZW1vdmVQb2x5Z29ucyhwID0gcG9seWdvbnMpIHsKICBwb2x5Z29ucy5mb3JFYWNoKChbZG9jLCBsaXN0XSkgPT4gewogICAgbGlzdC5mb3JFYWNoKHBhdGggPT4gZGVlcC51bnNldChkb2MucmF3LCBwYXRoKSk7CgogICAgZG9jLnNhdmVUbygpOwogIH0pOwp9CgpmdW5jdGlvbiBHZXROYW1lcyhkb2MsIHByZWQpIHsKICBsZXQgbGlzdCwgbmFtZXM7CiAgaWYodHlwZW9mIHByZWQgIT0gJ2Z1bmN0aW9uJykgcHJlZCA9IGUgPT4gISFlLnBhY2thZ2U7CgogIHN3aXRjaCAoZG9jLnR5cGUpIHsKICAgIGNhc2UgJ3NjaCc6IHsKICAgICAgbGlzdCA9IGRvYy5zaGVldHMubWFwKHNoZWV0ID0+IFsuLi5zaGVldC5pbnN0YW5jZXMubGlzdF0pLmZsYXQoKTsKICAgICAgbGlzdCA9IFsuLi5saXN0XS5maWx0ZXIocHJlZCk7CiAgICAgIG5hbWVzID0gbGlzdC5tYXAoZSA9PiBlLmF0dHJpYnV0ZXMucGFydCk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnYnJkJzogewogICAgICBsaXN0ID0gZG9jLmVsZW1lbnRzLmxpc3Q7CiAgICAgIGxpc3QgPSBbLi4ubGlzdF0uZmlsdGVyKHByZWQpOwogICAgICBuYW1lcyA9IGxpc3QubWFwKGUgPT4gZS5hdHRyaWJ1dGVzLm5hbWUpOwogICAgICBicmVhazsKICAgIH0KICAgIGRlZmF1bHQ6IHsKICAgICAgbmFtZXMgPSBkZWVwCiAgICAgICAgLnNlbGVjdChkb2MucmF3LCBlID0+IGUuYXR0cmlidXRlcy5uYW1lLCBkZWVwLlJFVFVSTl9WQUxVRV9QQVRIKQogICAgICAgIC5maWx0ZXIoKFt2LCBwXSkgPT4gWydzeW1ib2wnLCAnZGV2aWNlJywgJ3BhY2thZ2UnXS5pbmRleE9mKHYudGFnTmFtZSkgIT0gLTEpCiAgICAgICAgLm1hcCgoW3YsIHBdKSA9PiB2LmF0dHJpYnV0ZXMubmFtZSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICByZXR1cm4gVXRpbC51bmlxdWUobmFtZXMpOwp9CgpsZXQgbmFtZU1hcHMgPSAoKCkgPT4gewogIGxldCBhc3NvYyA9IG5ldyBXZWFrTWFwKCk7CgogIHJldHVybiBVdGlsLm1lbW9pemUoZG9jID0+IHsKICAgIGxldCBtYXA7CiAgICBzd2l0Y2ggKGRvYy50eXBlKSB7CiAgICAgIGNhc2UgJ3NjaCc6IHsKICAgICAgICBtYXAgPSBuZXcgTWFwKGRvYy5zaGVldHMubWFwKHNoZWV0ID0+IFsuLi5zaGVldC5pbnN0YW5jZXNdKS5mbGF0KCkpOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGNhc2UgJ2JyZCc6IHsKICAgICAgICBtYXAgPSBuZXcgTWFwKFsuLi5kb2MuZWxlbWVudHNdKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogICAgcmV0dXJuIG1hcDsKICB9KTsKfSkoKTsKCmZ1bmN0aW9uIEdldEJ5TmFtZShkb2MsIG5hbWUpIHsKICBsZXQgbWFwID0gbmFtZU1hcHMoZG9jKTsKCiAgLy9jb25zb2xlLmxvZygiR2V0QnlOYW1lIiwgbWFwKTsKICByZXR1cm4gbWFwLmdldChuYW1lKTsKfQoKZnVuY3Rpb24gQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQoc2NoZW1hdGljLCBib2FyZCkgewogIGlmKCFzY2hlbWF0aWMpIHNjaGVtYXRpYyA9IHByb2plY3Quc2NoZW1hdGljOwogIGlmKCFib2FyZCkgYm9hcmQgPSBwcm9qZWN0LmJvYXJkOwogIGxldCBkb2N1bWVudHMgPSBbc2NoZW1hdGljLCBib2FyZF07CiAgbGV0IG5hbWVzID0gZG9jdW1lbnRzLm1hcChkID0+IEdldE5hbWVzKGQpKTsKICBsZXQgYWxsTmFtZXMgPSBNYXRoLm1heCguLi5uYW1lcy5tYXAobiA9PiBuLmxlbmd0aCkpOwogIGxldCBpbnRlcnNlY3Rpb24gPSBVdGlsLmludGVyc2VjdCguLi5uYW1lcyk7CgogIGlmKGFsbE5hbWVzLmxlbmd0aCA+IGludGVyc2VjdGlvbi5sZW5ndGgpIGNvbnNvbGUud2FybihgV0FSTklORzogT25seSAke2ludGVyc2VjdGlvbi5sZW5ndGh9IG5hbWVzIG9mICR7YWxsTmFtZXMubGVuZ3RofSBjb3JyZWxhdGVgKTsKICBjb25zb2xlLmxvZyhgaW50ZXJzZWN0aW9uYCwgaW50ZXJzZWN0aW9uKTsKCiAgcmV0dXJuIC8qbmV3IE1hcCovIGludGVyc2VjdGlvbi5tYXAobmFtZSA9PiBbbmFtZSwgZG9jdW1lbnRzLm1hcChkb2MgPT4gR2V0QnlOYW1lKGRvYywgbmFtZSkpXSk7Cn0KCmZ1bmN0aW9uIFNhdmVMaWJyYXJpZXMoKSB7CiAgY29uc3QgeyBzY2hlbWF0aWMsIGJvYXJkIH0gPSBwcm9qZWN0OwogIGNvbnN0IGxheWVyTWFwID0gLypPYmplY3QudmFsdWVzKi8gWy4uLnNjaGVtYXRpYy5sYXllcnMsIC4uLmJvYXJkLmxheWVyc10uZmlsdGVyKChbbiwgZV0pID0+IGUuYWN0aXZlKS5yZWR1Y2UoKGFjYywgW24sIGVdKSA9PiAoeyAuLi5hY2MsIFtlLm51bWJlcl06IGUucmF3IH0pLCB7fSk7CiAgY29uc3QgZW50aXRpZXMgPSBbJ3N5bWJvbHMnLCAncGFja2FnZXMnLCAnZGV2aWNlc2V0cyddOwoKICBsZXQgbGF5ZXJJZHMgPSBkZWVwCiAgICAuc2VsZWN0KFtzY2hlbWF0aWMucmF3LCBib2FyZC5yYXddLCBlID0+IGUgJiYgZS5sYXllcikKICAgIC5tYXAoZSA9PiArZS5sYXllcikKICAgIC5jb25jYXQoVXRpbC5yYW5nZSgxNywgNDkpKQogICAgLnNvcnQoKGEsIGIpID0+IGEgLSBiKTsKICBsYXllcklkcyA9IFV0aWwudW5pcXVlKGxheWVySWRzKTsKICBsZXQgbGF5ZXJzID0gbGF5ZXJJZHMubWFwKGlkID0+IGxheWVyTWFwW2lkXSk7CgogIC8vICBjb25zb2xlLmxvZygnbGF5ZXJzJywgbGF5ZXJzKTsKICBjb25zb2xlLmxvZygKICAgICdsYXllcklkcycsCiAgICBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDIgfSksCiAgICBsYXllcklkcy5tYXAoaWQgPT4gW2lkLCBsYXllck1hcFtpZF0uYXR0cmlidXRlcy5uYW1lXSkKICApOwoKICBjb25zdCBsaWJyYXJ5TmFtZXMgPSBVdGlsLnVuaXF1ZShbLi4uc2NoZW1hdGljLmxpYnJhcmllcywgLi4uYm9hcmQubGlicmFyaWVzXS5tYXAoKFtuLCBlXSkgPT4gbikpOwogIGNvbnNvbGUubG9nKCdsaWJyYXJ5TmFtZXMnLCBsaWJyYXJ5TmFtZXMpOwoKICBjb25zdCBsaWJyYXJpZXMgPSBsaWJyYXJ5TmFtZXMubWFwKG5hbWUgPT4gW25hbWUsIHNjaGVtYXRpYy5saWJyYXJpZXNbbmFtZV0sIGJvYXJkLmxpYnJhcmllc1tuYW1lXV0pOwogIGZvcihsZXQgW25hbWUsIC4uLmxpYnNdIG9mIGxpYnJhcmllcykgewogICAgbGV0IG9iaiA9IHsgc3ltYm9sczogW10sIHBhY2thZ2VzOiBbXSwgZGV2aWNlc2V0czogW10gfTsKCiAgICBsZXQgeG1sID0gewogICAgICB0YWdOYW1lOiAnbGlicmFyeScsCiAgICAgIGNoaWxkcmVuOiBbeyB0YWdOYW1lOiAnZGVzY3JpcHRpb24nLCBhdHRyaWJ1dGVzOiB7fSwgY2hpbGRyZW46IFtgJHtuYW1lfS5sYnIgbGlicmFyeWBdIH1dLAogICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfQogICAgfTsKCiAgICBmb3IobGV0IGxpYiBvZiBsaWJzKSB7CiAgICAgIGlmKGxpYikgewogICAgICAgIGZvcihsZXQgZW50aXR5IG9mIGVudGl0aWVzKSB7CiAgICAgICAgICBpZihsaWJbZW50aXR5XSkgb2JqW2VudGl0eV0gPSBbLi4ub2JqW2VudGl0eV0sIC4uLmxpYltlbnRpdHldXTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIGZvcihsZXQgZW50aXR5IG9mIGVudGl0aWVzKSB7CiAgICAgIG9ialtlbnRpdHldID0gb2JqW2VudGl0eV0ucmVkdWNlKChhY2MsIFtuLCBlXSkgPT4gKHsgLi4uYWNjLCBbbl06IGUucmF3IH0pLCB7fSk7CiAgICB9CgogICAgZm9yKGxldCBlbnRpdHkgb2YgZW50aXRpZXMpIHsKICAgICAgb2JqW2VudGl0eV0gPSBPYmplY3QudmFsdWVzKG9ialtlbnRpdHldKTsKCiAgICAgIHhtbC5jaGlsZHJlbi5wdXNoKHsgdGFnTmFtZTogZW50aXR5LCBjaGlsZHJlbjogb2JqW2VudGl0eV0gfSk7CiAgICB9CgogICAgLy8gY29uc29sZS5sb2coJycsIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMywgZGVwdGg6IDQgfSksIHhtbCk7CgogICAgeG1sID0gewogICAgICB0YWdOYW1lOiAnP3htbCcsCiAgICAgIGF0dHJpYnV0ZXM6IHsgdmVyc2lvbjogJzEuMCcsIGVuY29kaW5nOiAndXRmLTgnIH0sCiAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgeyB0YWdOYW1lOiAnIURPQ1RZUEUgZWFnbGUgU1lTVEVNICJlYWdsZS5kdGQiJywgYXR0cmlidXRlczoge30sIGNoaWxkcmVuOiBbXSB9LAogICAgICAgIHsKICAgICAgICAgIHRhZ05hbWU6ICdlYWdsZScsCiAgICAgICAgICBhdHRyaWJ1dGVzOiB7IHZlcnNpb246ICc2LjQuMScgfSwKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB0YWdOYW1lOiAnZHJhd2luZycsCiAgICAgICAgICAgICAgYXR0cmlidXRlczoge30sCiAgICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgdGFnTmFtZTogJ3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczoge30sCiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgICAgICAgeyB0YWdOYW1lOiAnc2V0dGluZycsIGF0dHJpYnV0ZXM6IHsgYWx3YXlzdmVjdG9yZm9udDogJ25vJyB9IH0sCiAgICAgICAgICAgICAgICAgICAgeyB0YWdOYW1lOiAnc2V0dGluZycsIGF0dHJpYnV0ZXM6IHsgdmVydGljYWx0ZXh0OiAndXAnIH0gfQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0YWdOYW1lOiAnZ3JpZCcsCiAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsKICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZTogJzAuMzE3NScsCiAgICAgICAgICAgICAgICAgICAgdW5pdGRpc3Q6ICdtbScsCiAgICAgICAgICAgICAgICAgICAgdW5pdDogJ21tJywKICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2xpbmVzJywKICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZTogJzEnLAogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICd5ZXMnLAogICAgICAgICAgICAgICAgICAgIGFsdGRpc3RhbmNlOiAnMC4wMjUnLAogICAgICAgICAgICAgICAgICAgIGFsdHVuaXRkaXN0OiAnbW0nLAogICAgICAgICAgICAgICAgICAgIGFsdHVuaXQ6ICdtbScKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgdGFnTmFtZTogJ2xheWVycycsCiAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHt9LAogICAgICAgICAgICAgICAgICBjaGlsZHJlbjogbGF5ZXJzCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeG1sCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdCiAgICB9OwoKICAgIC8vICAgIGNvbnNvbGUubG9nKCd4bWwnLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDMsIGRlcHRoOiA5IH0pLCB4bWwpOwogICAgV3JpdGVGaWxlKGAke25hbWV9LmxicmAsIHRvWE1MKHhtbCkpOwogIH0KCiAgcmV0dXJuIHhtbDsKICAvL2NvbnNvbGUubG9nKCdsaWJyYXJpZXMnLCBsaWJyYXJpZXMpOwp9Cgphc3luYyBmdW5jdGlvbiB0ZXN0RWFnbGUoZmlsZW5hbWUpIHsKICBjb25zb2xlLmxvZygndGVzdEVhZ2xlOiAnLCBmaWxlbmFtZSk7CiAgbGV0IHByb2ogPSBuZXcgRWFnbGVQcm9qZWN0KGZpbGVuYW1lLCBmcyk7CiAgY29uc29sZS5sb2coJ1Byb2plY3QgbG9hZGVkOiAnLCAhcHJvai5mYWlsZWQpOwogIGNvbnNvbGUubG9nKCdQcm9qZWN0OiAnLCBwcm9qKTsKICBjb25zb2xlLmxvZygncHJvai5kb2N1bWVudHMnLCBwcm9qLmRvY3VtZW50cyk7CiAgbGV0IHsgYm9hcmQsIHNjaGVtYXRpYyB9ID0gcHJvajsKICBjb25zdCBwYWNrYWdlcyA9IHsKICAgIGJvYXJkOiAoYm9hcmQgJiYgYm9hcmQuZWxlbWVudHMgJiYgWy4uLmJvYXJkLmVsZW1lbnRzXS5tYXAoKFtuYW1lLCBlXSkgPT4gZS5wYWNrYWdlKSkgfHwgW10sCiAgICBzY2hlbWF0aWM6IChzY2hlbWF0aWMgJiYgc2NoZW1hdGljLnNoZWV0cyAmJiBbLi4uc2NoZW1hdGljLnNoZWV0c10ubWFwKGUgPT4gWy4uLmUuaW5zdGFuY2VzXS5tYXAoKFtuYW1lLCBpXSkgPT4gaS5wYXJ0LmRldmljZS5wYWNrYWdlKS5maWx0ZXIocCA9PiBwICE9PSB1bmRlZmluZWQpKS5mbGF0KCkpIHx8IFtdCiAgfTsKICBsZXQgcGFydHMgPSAoc2NoZW1hdGljICYmIHNjaGVtYXRpYy5wYXJ0cykgfHwgW107CiAgbGV0IHNoZWV0cyA9IChzY2hlbWF0aWMgJiYgc2NoZW1hdGljLnNoZWV0cykgfHwgW107CiAgbGV0IGxpYnJhcmllcyA9IChib2FyZCAmJiBib2FyZC5saWJyYXJpZXMpIHx8IFtdOwogIGxldCBlbGVtZW50cyA9IChib2FyZCAmJiBib2FyZC5lbGVtZW50cykgfHwgW107CiAgZm9yKGxldCBbbGliTmFtZSwgbGliXSBvZiBsaWJyYXJpZXMpIHsKICAgIGZvcihsZXQgW3BrZ05hbWUsIHBrZ10gb2YgbGliLnBhY2thZ2VzKQogICAgICBmb3IobGV0IHBhZCBvZiBwa2cuY2hpbGRyZW4pIHsKICAgICAgICBpZihwYWQudGFnTmFtZSAhPT0gJ3BhZCcpIGNvbnRpbnVlOwogICAgICAgIHBhZC5zZXRBdHRyaWJ1dGUoJ2RyaWxsJywgJzAuNycpOwogICAgICAgIHBhZC5zZXRBdHRyaWJ1dGUoJ2RpYW1ldGVyJywgJzEuNzc4Jyk7CiAgICAgICAgcGFkLnJlbW92ZUF0dHJpYnV0ZSgnc3RvcCcpOwogICAgICAgIHBhZC5yZW1vdmVBdHRyaWJ1dGUoJ3JvdCcpOwogICAgICAgIHBhZC5yZW1vdmVBdHRyaWJ1dGUoJ3NoYXBlJyk7CiAgICAgIH0KICB9CiAgbGV0IGNtZHMgPSBbXTsKICBmb3IobGV0IFtuYW1lLCBlbGVtXSBvZiBlbGVtZW50cykgewogICAgY21kcy5wdXNoKGBNT1ZFICR7ZWxlbS5uYW1lfSAke2VsZW0ucG9zfTtgKTsKICAgIGlmKGVsZW0ucm90KSBjbWRzLnB1c2goYFJPVEFURSAke2VsZW0ucm90fSAke2VsZW0ubmFtZX07YCk7CiAgfQogIGNvbnNvbGUubG9nKCdwcm9qLmJvYXJkJywgcHJvai5ib2FyZCk7CiAgaWYocHJvai5ib2FyZCkgVXBkYXRlTWVhc3VyZXMocHJvai5ib2FyZCk7CiAgaWYoQWxpZ25BbGwoYm9hcmQpIHx8IEFsaWduQWxsKHNjaGVtYXRpYykpIGNvbnNvbGUubG9nKCdTYXZlZDonLCBhd2FpdCBwcm9qLnNhdmVUbygndG1wJywgdHJ1ZSkpOwogIGNvbnNvbGUubG9nKCdkb2N1bWVudHMnLCBwcm9qLmRvY3VtZW50cyk7CiAgY29uc29sZS5sb2coJ3NhdmVkOicsIGF3YWl0IHByb2ouc2F2ZVRvKCd0bXAnLCB0cnVlKSk7CiAgZm9yKGxldCBkb2Mgb2YgcHJvai5kb2N1bWVudHMpIHsKICAgIGxldCBjaGFuZ2VkID0gZmFsc2U7CiAgICBjb25zb2xlLmxvZygnZWFnbGU6JywgVXRpbC5jbGFzc05hbWUoZG9jLmZpbmQoJ2VhZ2xlJykpKTsKICAgIGZvcihsZXQgcGtnIG9mIGRvYy5maW5kKCdlYWdsZScpLmdldEFsbCgncGFja2FnZScpKSB7CiAgICAgIGxldCBpbmRleGVzID0gWy4uLnBrZy5jaGlsZHJlbl0ubWFwKChjaGlsZCwgaSwgYSkgPT4KICAgICAgICBhCiAgICAgICAgICAuc2xpY2UoaSArIDEpCiAgICAgICAgICAubWFwKChjaGlsZDIsIGkyKSA9PiBbaTIgKyBpICsgMSwgVXRpbC5lcXVhbHMoY2hpbGQucmF3LCBjaGlsZDIucmF3KV0pCiAgICAgICAgICAuZmlsdGVyKChbaW5kZXgsIGVxdWFsXSkgPT4gZXF1YWwpCiAgICAgICAgICAubWFwKChbaW5kZXhdKSA9PiBpbmRleCkKICAgICAgKTsKICAgICAgaW5kZXhlcyA9IGluZGV4ZXMuZmxhdCgpLnJldmVyc2UoKTsKICAgICAgbGV0IHBhdGhzID0gaW5kZXhlcy5tYXAoaSA9PiBwa2cucGF0aC5kb3duKCdjaGlsZHJlbicsIGkpKTsKICAgICAgY29uc29sZS5sb2coJ2luZGV4ZXMnLCBwa2cubmFtZSwgcGF0aHMpOwogICAgICBwYXRocy5mb3JFYWNoKGkgPT4gZGVlcC51bnNldChkb2MucmF3LCBbLi4uaV0pKTsKICAgICAgY2hhbmdlZCA9IGNoYW5nZWQgfHwgaW5kZXhlcy5sZW5ndGggPiAwOwogICAgfQogICAgaWYoY2hhbmdlZCkgewogICAgICBkb2Muc2F2ZVRvKGRvYy5maWxlbmFtZSk7CiAgICAgIGNvbnNvbGUubG9nKCdTYXZlZDonLCBkb2MuZmlsZW5hbWUpOwogICAgfQogIH0KICBsZXQgZGVzYyA9IHByb2ouZG9jdW1lbnRzLm1hcChkb2MgPT4gW2RvYy5maWxlbmFtZSwgZG9jLmZpbmQoJ2Rlc2NyaXB0aW9uJyldKTsKICBjb25zb2xlLmxvZygnZGVzYycsIGRlc2MpOwogIGRlc2MgPSBkZXNjLm1hcCgoW2ZpbGUsIGVdKSA9PiBbZmlsZSwgZSAmJiBlLnhwYXRoKCldKS5tYXAoKFtmaWxlLCB4cGF0aF0pID0+IFtmaWxlLCB4cGF0aCAmJiB4cGF0aC50b0NvZGUoJycsIHsgc3BhY2luZzogJycsIGZ1bmN0aW9uOiB0cnVlIH0pXSk7CiAgZGVzYyA9IG5ldyBNYXAoZGVzYyk7CiAgY29uc29sZS5sb2coJ2Rlc2NyaXB0aW9ucycsIFsuLi5VdGlsLm1hcChkZXNjLCAoW2ssIHZdKSA9PiBbaywgdl0pXSk7CiAgcmV0dXJuIHByb2o7Cn0KCmFzeW5jIGZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsgaW5zcGVjdE9wdGlvbnM6IHsgYnJlYWtMZW5ndGg6IDEwMCwgY29sb3JzOiB0cnVlLCBkZXB0aDogSW5maW5pdHksIGNvbXBhY3Q6IDIsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSB9KTsKCiAgbGV0IGRlYnVnTG9nOwoKICAvKiBpZihVdGlsLmdldFBsYXRmb3JtKCkgPT0gJ3F1aWNranMnKSB7CiAgICBnbG9iYWxUaGlzLnN0ZCA9IGF3YWl0IGltcG9ydCgnc3RkJyk7CiAgICBnbG9iYWxUaGlzLm9zID0gYXdhaXQgaW1wb3J0KCdvcycpOwogICAgZ2xvYmFsVGhpcy5mcyA9IGZzID0gYXdhaXQgaW1wb3J0KCcuL2xpYi9maWxlc3lzdGVtLmpzJyk7CiAgfSBlbHNlIHsKICAgIGNvbnN0IGNiID0gZmlsZXN5c3RlbSA9PiB7CiAgICAgIGdsb2JhbFRoaXMuZnMgPSBmcyA9IGZpbGVzeXN0ZW07CiAgICB9OwogICAgYXdhaXQgUG9ydGFibGVGaWxlU3lzdGVtKGNiKTsKICB9Ki8KCiAgZGVidWdMb2cgPSBmcy5vcGVuU3luYygnZGVidWcubG9nJywgJ2EnKTsKCiAgY29uc3QgcHJvZ05hbWUgPSBVdGlsLmdldEFyZ3YoKVsxXTsKICBjb25zdCBiYXNlID0gcGF0aC5iYXNlbmFtZShwcm9nTmFtZSwgcGF0aC5leHRuYW1lKHByb2dOYW1lKSk7CiAgY29uc3QgaGlzdGZpbGUgPSBgLiR7YmFzZX0taGlzdG9yeWA7CgogIGxldCBwYXJhbXMgPSBVdGlsLmdldE9wdCgKICAgIHsKICAgICAgZGVidWc6IFtmYWxzZSwgbnVsbCwgJ3gnXSwKICAgICAgJ291dHB1dC1kaXInOiBbdHJ1ZSwgbnVsbCwgJ2QnXSwKICAgICAgJ0AnOiAnaW5wdXQnCiAgICB9LAogICAgYXJncwogICk7CgogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgewogICAgU2F2ZUxpYnJhcmllcywKICAgIEVhZ2xlU1ZHUmVuZGVyZXIsCiAgICBTY2hlbWF0aWNSZW5kZXJlciwKICAgIEJvYXJkUmVuZGVyZXIsCiAgICBMaWJyYXJ5UmVuZGVyZXIsCiAgICBFYWdsZU5vZGVMaXN0LAogICAgdXNlVHJrbCwKICAgIFJBRDJERUcsCiAgICBERUcyUkFELAogICAgVkVSVElDQUwsCiAgICBIT1JJWk9OVEFMLAogICAgSE9SSVpPTlRBTF9WRVJUSUNBTCwKICAgIERFQlVHLAogICAgbG9nLAogICAgc2V0RGVidWcsCiAgICBQaW5TaXplcywKICAgIEVzY2FwZUNsYXNzTmFtZSwKICAgIFVuZXNjYXBlQ2xhc3NOYW1lLAogICAgTGF5ZXJUb0NsYXNzLAogICAgRWxlbWVudFRvQ2xhc3MsCiAgICBDbGFtcEFuZ2xlLAogICAgQWxpZ25tZW50QW5nbGUsCiAgICBNYWtlUm90YXRpb24sCiAgICBFYWdsZUFsaWdubWVudHMsCiAgICBBbGlnbm1lbnQsCiAgICBTVkdBbGlnbm1lbnRzLAogICAgQWxpZ25tZW50QXR0cnMsCiAgICBSb3RhdGVUcmFuc2Zvcm1hdGlvbiwKICAgIExheWVyQXR0cmlidXRlcywKICAgIEludmVydFksCiAgICBQb2xhclRvQ2FydGVzaWFuLAogICAgQ2FydGVzaWFuVG9Qb2xhciwKICAgIFJlbmRlckFyYywKICAgIENhbGN1bGF0ZUFyY1JhZGl1cywKICAgIExpbmVzVG9QYXRoLAogICAgTWFrZUNvb3JkVHJhbnNmb3JtZXIsCiAgICB1c2VBdHRyaWJ1dGVzLAogICAgRWFnbGVEb2N1bWVudCwKICAgIEVhZ2xlUmVmZXJlbmNlLAogICAgRWFnbGVSZWYsCiAgICBtYWtlRWFnbGVOb2RlLAogICAgRWFnbGVOb2RlLAogICAgUmVuZGVyZXIsCiAgICBFYWdsZVByb2plY3QsCiAgICBFYWdsZUVsZW1lbnQsCiAgICBtYWtlRWFnbGVFbGVtZW50LAogICAgRWFnbGVFbGVtZW50UHJveHksCiAgICBFYWdsZU5vZGVNYXAsCiAgICBJbW11dGFibGVQYXRoLAogICAgRGVyZWZlcmVuY2VFcnJvciwKICAgIEdldE5hbWVzLAogICAgR2V0QnlOYW1lLAogICAgQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQsCiAgICBSZWFkRmlsZSwKICAgIExvYWRIaXN0b3J5LAogICAgUmVhZEpTT04sCiAgICBNYXBGaWxlLAogICAgUmVhZEJKU09OLAogICAgV3JpdGVGaWxlLAogICAgV3JpdGVKU09OLAogICAgV3JpdGVCSlNPTiwKICAgIERpckl0ZXJhdG9yLAogICAgUmVjdXJzaXZlRGlySXRlcmF0b3IKICB9KTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIEdldEV4cG9uZW50LAogICAgR2V0TWFudGlzc2EsCiAgICBWYWx1ZVRvTnVtYmVyLAogICAgTnVtYmVyVG9WYWx1ZSwKICAgIEdldE11bHRpcGxpZXJzLAogICAgR2V0RmFjdG9yLAogIEdldENvbG9yQmFuZHMsIFVwZGF0ZU1lYXN1cmVzLCBBbGlnbkl0ZW0sIEFsaWduQWxsLCBzY2llbnRpZmljLCBudW0yY29sb3IKICB9KTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIGRlZmluZSwKICAgIGlzT2JqZWN0LAogICAgbWVtb2l6ZSwKICAgIHVuaXF1ZQogIH0pOwogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgewogICAgbG9hZChmaWxlbmFtZSwgcHJvamVjdCA9IGdsb2JhbFRoaXMucHJvamVjdCkgewogICAgICBnbG9iYWxUaGlzLmRvY3VtZW50ID0gbmV3IEVhZ2xlRG9jdW1lbnQoZnMucmVhZEZpbGVTeW5jKGZpbGVuYW1lLCAndXRmLTgnKSwgcHJvamVjdCwgZmlsZW5hbWUsIG51bGwsIGZzKTsKICAgIH0sCiAgICBuZXdQcm9qZWN0KGZpbGVuYW1lKSB7CiAgICAgIGlmKCFnbG9iYWxUaGlzLnByb2plY3QpIGdsb2JhbFRoaXMucHJvamVjdCA9IG5ldyBFYWdsZVByb2plY3QobnVsbCk7CgogICAgICBwcm9qZWN0LmxhenlPcGVuKGZpbGVuYW1lKTsKICAgIH0KICB9KTsKICAvLyBnbG9iYWxUaGlzLmRvY3MgPSBhcmdzLm1hcChhcmcgPT4gKGdsb2JhbFRoaXMuZG9jID0gbG9hZChhcmcpKSk7CgogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgewogICAgVXBkYXRlTWVhc3VyZXMsCiAgICBBbGlnbkl0ZW0sCiAgICBBbGlnbkFsbCwKICAgIGZpeFZhbHVlLAogICAgZml4VmFsdWVzLAogICAgY29vcmRNYXAsCiAgICBVdGlsLAogICAgTGluZUxpc3QsCiAgICBQb2ludCwKICAgIENpcmNsZSwKICAgIFJlY3QsCiAgICBTaXplLAogICAgTGluZSwKICAgIFRyYW5zZm9ybWF0aW9uTGlzdCwKICAgIFJvdGF0aW9uLAogICAgVHJhbnNsYXRpb24sCiAgICBTY2FsaW5nLAogICAgTWF0cml4LAogICAgQkJveCwKICAgIGZzLAogICAgUG9pbnRlciwKICAgIGRlZXAKICB9KTsKCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7CiAgICBCaW5hcnlUcmVlLAogICAgQnVja2V0U3RvcmUsCiAgICBCdWNrZXRNYXAsCiAgICBDb21wb25lbnRNYXAsCiAgICBDb21wb3NpdGVNYXAsCiAgICBEZXF1ZSwKICAgIEVudW0sCiAgICBIYXNoTGlzdCwKICAgIE11bHRpbWFwLAogICAgU2hhc2gsCiAgICBTb3J0ZWRNYXAsCiAgICBIYXNoTXVsdGltYXAsCiAgICBNdWx0aUJpTWFwLAogICAgTXVsdGlLZXlNYXAsCiAgICBEZW5zZVNwYXRpYWxIYXNoMkQsCiAgICBTcGF0aWFsSGFzaDJELAogICAgSGFzaE1hcCwKICAgIFNwYXRpYWxILAogICAgU3BhdGlhbEhhc2gsCiAgICBTcGF0aWFsSGFzaE1hcCwKICAgIEJveEhhc2gsCiAgICBSZWFkSlNPTiwKICAgIEdldFBvbHlnb25zLAogICAgRmluZFBvbHlnb25zLAogICAgUmVtb3ZlUG9seWdvbnMsCiAgICBxdWl0KGFyZykgewogICAgICByZXBsLmNsZWFudXAoKTsKICAgICAgVXRpbC5leGl0KGFyZyA/PyAwKTsKICAgIH0KICB9KTsKCiAgY21kaGlzdCA9IGAuJHtiYXNlfS1jbWRoaXN0b3J5YDsKCiAgbGV0IHJlcGwgPSAoZ2xvYmFsVGhpcy5yZXBsID0gbmV3IFJFUEwoYmFzZSwgZmFsc2UpKTsKCiAgLy9jb25zb2xlLmxvZyhgcmVwbGAsIHJlcGwpOwogIC8vY29uc29sZS5sb2coYGRlYnVnTG9nYCwgVXRpbC5nZXRNZXRob2RzKGRlYnVnTG9nLCBJbmZpbml0eSwgMCkpOwoKICByZXBsLmRlYnVnTG9nID0gZGVidWdMb2c7CiAgcmVwbC5leGl0ID0gVGVybWluYXRlOwogIHJlcGwuaW1wb3J0TW9kdWxlID0gaW1wb3J0TW9kdWxlOwogIHJlcGwuZGVidWcgPSAoLi4uYXJncykgPT4gewogICAgbGV0IHMgPSAnJzsKICAgIGZvcihsZXQgYXJnIG9mIGFyZ3MpIHsKICAgICAgaWYocykgcyArPSAnICc7CiAgICAgIGlmKHR5cGVvZiBhcmcgIT0gJ3N0cnBpbmcnIHx8IGFyZy5pbmRleE9mKCdceDFiJykgPT0gLTEpIHMgKz0gaW5zcGVjdChhcmcsIHsgZGVwdGg6IEluZmluaXR5LCBkZXB0aDogNiwgY29tcGFjdDogZmFsc2UgfSk7CiAgICAgIGVsc2UgcyArPSBhcmc7CiAgICB9CiAgICBmcy53cml0ZVN5bmMoZGVidWdMb2csIGZzLmJ1ZmZlckZyb20ocyArICdcbicpKTsKCiAgICAvLyAgICBkZWJ1Z0xvZy5wdXRzKHMgKyAnXG4nKTsKICAgIGZzLmZsdXNoU3luYyhkZWJ1Z0xvZyk7CiAgfTsKICByZXBsLnNob3cgPSB2YWx1ZSA9PiB7CiAgICBpZihVdGlsLmlzT2JqZWN0KHZhbHVlKSAmJiB2YWx1ZSBpbnN0YW5jZW9mIEVhZ2xlTm9kZSkgewogICAgICBjb25zb2xlLmxvZyh2YWx1ZS5pbnNwZWN0KCkpOwogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS5sb2codmFsdWUpOwogICAgfQogIH07CgogIC8vIHJlcGwuaGlzdG9yeVNldChKU09OLnBhcnNlKHN0ZC5sb2FkRmlsZShoaXN0ZmlsZSkgfHwgJ1tdJykpOwoKICByZXBsLmFkZENsZWFudXBIYW5kbGVyKCgpID0+IHsKICAgIGxldCBoaXN0ID0gcmVwbC5oaXN0b3J5LmZpbHRlcigoaXRlbSwgaSwgYSkgPT4gYS5sYXN0SW5kZXhPZihpdGVtKSA9PSBpKTsKCiAgICAvLyAgICBmcy53cml0ZUZpbGVTeW5jKGNtZGhpc3QsIEpTT04uc3RyaW5naWZ5KGhpc3QsIG51bGwsIDIpKTsKICAgIGZzLndyaXRlRmlsZVN5bmMoCiAgICAgIGNtZGhpc3QsCiAgICAgIGhpc3QKICAgICAgICAuZmlsdGVyKGVudHJ5ID0+IChlbnRyeSArICcnKS50cmltKCkgIT0gJycpCiAgICAgICAgLm1hcChlbnRyeSA9PiBlbnRyeS5yZXBsYWNlKC9cbi9nLCAnXFxcXG4nKSArICdcbicpCiAgICAgICAgLmpvaW4oJycpCiAgICApOwoKICAgIGNvbnNvbGUubG9nKGBFWElUICh3cm90ZSAke2hpc3QubGVuZ3RofSBoaXN0b3J5IGVudHJpZXMpYCk7CiAgICBUZXJtaW5hdGUoMCk7CiAgfSk7CgogIGZvcihsZXQgZmlsZSBvZiBwYXJhbXNbJ0AnXSkgewogICAgY29uc29sZS5sb2coYExvYWRpbmcgJyR7ZmlsZX0nLi4uYCk7CiAgICBuZXdQcm9qZWN0KGZpbGUpOwogIH0KCiAgcmVwbC5oaXN0b3J5ID0gTG9hZEhpc3RvcnkoY21kaGlzdCk7CiAgY29uc29sZS5sb2coYExvYWRlZCAke3JlcGwuaGlzdG9yeS5sZW5ndGh9IGhpc3RvcnkgZW50cmllcylgKTsKCiAgYXdhaXQgcmVwbC5ydW4oKTsKfQoKVXRpbC5jYWxsTWFpbihtYWluLCB0cnVlKTsKLyoKdHJ5IHsKICBtYWluKC4uLlV0aWwuZ2V0QXJncygpLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yLm1lc3NhZ2V9XG4ke2Vycm9yLnN0YWNrfWApOwogIFV0aWwuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICBjb25zb2xlLmxvZygnU1VDQ0VTUycpOwp9CiovCgAAAAAAAAAA/VoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0GAAAAAAAA7QYAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADgIAAAAAAAAOQgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgIAAAAAAAAOAgAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkIAAAAAAAAOggAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkIAAAAAAAAOQgAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"paste",
					null,
					"AQAAADoIAAAAAAAAQggAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoIAAAAAAAAOggAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMxOAAAAAAAAzU4AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMxOAAAAAAAAzE4AAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\nGetPartgs"
					},
					"CwAAAM1OAAAAAAAAzk4AAAAAAAAAAAAAzk4AAAAAAADSTgAAAAAAAAAAAADSTgAAAAAAANNOAAAAAAAAAAAAANNOAAAAAAAA1E4AAAAAAAAAAAAA1E4AAAAAAADVTgAAAAAAAAAAAADVTgAAAAAAANZOAAAAAAAAAAAAANZOAAAAAAAA104AAAAAAAAAAAAA104AAAAAAADYTgAAAAAAAAAAAADYTgAAAAAAANlOAAAAAAAAAAAAANlOAAAAAAAA2k4AAAAAAAAAAAAA2k4AAAAAAADbTgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM1OAAAAAAAAzU4AAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					2,
					"left_delete",
					null,
					"AgAAANpOAAAAAAAA2k4AAAAAAAABAAAAc9lOAAAAAAAA2U4AAAAAAAABAAAAZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANtOAAAAAAAA204AAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAANlOAAAAAAAA2k4AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANlOAAAAAAAA2U4AAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANpOAAAAAAAA204AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANpOAAAAAAAA2k4AAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"paste",
					null,
					"AQAAANtOAAAAAAAA504AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANtOAAAAAAAA204AAAAAAAAAAAAAAADwvw"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEIIAAAAAAAAQwgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIIAAAAAAAAQggAAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMIAAAAAAAARAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMIAAAAAAAAQwgAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"paste",
					null,
					"AQAAAEQIAAAAAAAAUAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQIAAAAAAAARAgAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFAIAAAAAAAAUQgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAADwvw"
				],
				[
					223,
					1,
					"paste",
					null,
					"AQAAAFEIAAAAAAAAXQgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEIAAAAAAAAUQgAAAAAAAAAAAAAAADwvw"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": ",getE"
					},
					"BQAAAF0IAAAAAAAAXggAAAAAAAAAAAAAXggAAAAAAABfCAAAAAAAAAAAAABfCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAYQgAAAAAAAAAAAAAYQgAAAAAAABiCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0IAAAAAAAAXQgAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					4,
					"left_delete",
					null,
					"BAAAAGEIAAAAAAAAYQgAAAAAAAABAAAARWAIAAAAAAAAYAgAAAAAAAABAAAAdF8IAAAAAAAAXwgAAAAAAAABAAAAZV4IAAAAAAAAXggAAAAAAAABAAAAZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIIAAAAAAAAYggAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "GetElemen"
					},
					"CQAAAF4IAAAAAAAAXwgAAAAAAAAAAAAAXwgAAAAAAABgCAAAAAAAAAAAAABgCAAAAAAAAGEIAAAAAAAAAAAAAGEIAAAAAAAAYggAAAAAAAAAAAAAYggAAAAAAABjCAAAAAAAAAAAAABjCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABmCAAAAAAAAAAAAABmCAAAAAAAAGcIAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4IAAAAAAAAXggAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "ts,"
					},
					"AwAAAGcIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAGoIAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcIAAAAAAAAZwgAAAAAAAAAAAAAAADwvw"
				],
				[
					228,
					2,
					"left_delete",
					null,
					"AgAAAGkIAAAAAAAAaQgAAAAAAAABAAAALGgIAAAAAAAAaAgAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoIAAAAAAAAaggAAAAAAAAAAAAAAADwvw"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAGgIAAAAAAAAaQgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgIAAAAAAAAaAgAAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAABNPAAAAAAAAFE8AAAAAAAAAAAAAFE8AAAAAAAAVTwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABNPAAAAAAAAE08AAAAAAAAAAAAAAADwvw"
				],
				[
					247,
					2,
					"left_delete",
					null,
					"AgAAABRPAAAAAAAAFE8AAAAAAAABAAAALhNPAAAAAAAAE08AAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABVPAAAAAAAAFU8AAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"paste",
					null,
					"AQAAABNPAAAAAAAALE8AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABNPAAAAAAAAE08AAAAAAAAAAAAAAADwvw"
				],
				[
					251,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACxPAAAAAAAALE8AAAAAAAAAAAAAAADwvw"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAALZGAAAAAAAAt0YAAAAAAAAAAAAAt0YAAAAAAAC3RgAAAAAAAAEAAAAy",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALZGAAAAAAAAt0YAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAEILAAAAAAAAQwsAAAAAAAAAAAAAQwsAAAAAAABDCwAAAAAAAAQAAABVdGlsQwsAAAAAAABECwAAAAAAAAAAAABECwAAAAAAAEULAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEILAAAAAAAARgsAAAAAAAAAAAAAAADwvw"
				],
				[
					348,
					1,
					"paste",
					null,
					"AQAAADpVAAAAAAAAW1UAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADpVAAAAAAAAOlUAAAAAAAAAAAAAAADwvw"
				],
				[
					387,
					1,
					"left_delete",
					null,
					"AQAAAIoHAAAAAAAAigcAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsHAAAAAAAAiwcAAAAAAAAAAAAAAADwvw"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAIoHAAAAAAAAiwcAAAAAAAAAAAAAiwcAAAAAAACMBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoHAAAAAAAAigcAAAAAAAAAAAAAAADwvw"
				],
				[
					389,
					2,
					"left_delete",
					null,
					"AgAAAIsHAAAAAAAAiwcAAAAAAAABAAAAYYoHAAAAAAAAigcAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIoHAAAAAAAAiwcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoHAAAAAAAAigcAAAAAAAAAAAAAAADwvw"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": " atexit"
					},
					"BwAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACNBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAACQBwAAAAAAAJEHAAAAAAAAAAAAAJEHAAAAAAAAkgcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsHAAAAAAAAiwcAAAAAAAAAAAAAAADwvw"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIHAAAAAAAAkwcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIHAAAAAAAAkgcAAAAAAAAAAAAAAADwvw"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAERVAAAAAAAARVUAAAAAAAAAAAAARVUAAAAAAABGVQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAERVAAAAAAAARFUAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/iterator/helpers.js",
			"settings":
			{
				"buffer_size": 1794,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"cut",
					null,
					"AQAAANQAAAAAAAAA1AAAAAAAAACBAAAACmV4cG9ydCBmdW5jdGlvbiByZWR1Y2Uoc3RyZWFtLCBmbiwgYWNjdSkgewogIGxldCBpID0gMDsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSBhY2N1ID0gZm4oYWNjdSwgbiwgaSsrLCBzdHJlYW0pOwogIHJldHVybiBhY2N1Owp9",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAAVQEAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"paste",
					null,
					"AgAAANQAAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAADWAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "every"
					},
					"BgAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABnAQAAAAAAAAYAAAByZWR1Y2VnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYBAAAAAAAAbAEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFUBAAAAAAAAVgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUBAAAAAAAAVQEAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					3,
					"left_delete",
					null,
					"AwAAAHkBAAAAAAAAeQEAAAAAAAAEAAAAYWNjdXgBAAAAAAAAeAEAAAAAAAABAAAAIHcBAAAAAAAAdwEAAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkBAAAAAAAAfQEAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAHoBAAAAAAAAewEAAAAAAAAAAAAAewEAAAAAAAB9AQAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoBAAAAAAAAegEAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " reduce"
					},
					"BwAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMBAAAAAAAAgwEAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAIoBAAAAAAAAjAEAAAAAAAAAAAAAiwEAAAAAAACNAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoBAAAAAAAAigEAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "acc,n"
					},
					"BQAAAIwBAAAAAAAAjQEAAAAAAAAAAAAAjQEAAAAAAACOAQAAAAAAAAAAAACOAQAAAAAAAI8BAAAAAAAAAAAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwBAAAAAAAAjAEAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIBAAAAAAAAkgEAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUBAAAAAAAAlQEAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "acc"
					},
					"AwAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYBAAAAAAAAlgEAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAmQEAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwBAAAAAAAAnAEAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACfAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0BAAAAAAAAnQEAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAJ8BAAAAAAAAnwEAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKABAAAAAAAAoAEAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8BAAAAAAAAoQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8BAAAAAAAAnwEAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "n,"
					},
					"AgAAAKABAAAAAAAAoQEAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKABAAAAAAAAoAEAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIBAAAAAAAAowEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIBAAAAAAAAogEAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": ",i,strm"
					},
					"BwAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlQEAAAAAAACWAQAAAAAAAAAAAACWAQAAAAAAAJcBAAAAAAAAAAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEBAAAAAAAAkQEAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					5,
					"left_delete",
					null,
					"BQAAAJcBAAAAAAAAlwEAAAAAAAABAAAAbZYBAAAAAAAAlgEAAAAAAAABAAAAcpUBAAAAAAAAlQEAAAAAAAABAAAAdJQBAAAAAAAAlAEAAAAAAAABAAAAc5MBAAAAAAAAkwEAAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgBAAAAAAAAmAEAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "i,"
					},
					"AgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQBAAAAAAAApAEAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " stream)"
					},
					"CAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYBAAAAAAAApgEAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					2,
					"right_delete",
					null,
					"AgAAAK4BAAAAAAAArgEAAAAAAAABAAAAIK4BAAAAAAAArgEAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAK4BAAAAAAAArwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " fa"
					},
					"AwAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8BAAAAAAAArwEAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					2,
					"left_delete",
					null,
					"AgAAALEBAAAAAAAAsQEAAAAAAAABAAAAYbABAAAAAAAAsAEAAAAAAAABAAAAZg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIBAAAAAAAAsgEAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "true)"
					},
					"BQAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACyAQAAAAAAAAAAAACyAQAAAAAAALMBAAAAAAAAAAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALABAAAAAAAAsAEAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALUBAAAAAAAAtgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUBAAAAAAAAtQEAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAALcBAAAAAAAAtwEAAAAAAABUAAAAICBsZXQgaSA9IDA7CiAgZm9yKGxldCBuIG9mIHN0cmVhbSkgYWNjdSA9IGZuKGFjY3UsIG4sIGkrKywgc3RyZWFtKTsKICByZXR1cm4gYWNjdTsK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcBAAAAAAAACwIAAAAAAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"cut",
					null,
					"AQAAAFYBAAAAAAAAVgEAAAAAAABjAAAACmV4cG9ydCBmdW5jdGlvbiBldmVyeShzdHJlYW0sIGZuKSB7CiAgcmV0dXJuIHJlZHVjZSgoYWNjLG4saSkgPT4gYWNjICYmIGZuKG4saSwgc3RyZWFtKSwgdHJ1ZSk7Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYBAAAAAAAAuQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					107,
					2,
					"paste",
					null,
					"AgAAAFYBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAAcAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYBAAAAAAAAVgEAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "some"
					},
					"BQAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADLAQAAAAAAAAUAAABldmVyecsBAAAAAAAAzAEAAAAAAAAAAAAAzAEAAAAAAADNAQAAAAAAAAAAAADNAQAAAAAAAM4BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAzwEAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "||"
					},
					"AwAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAD/AQAAAAAAAAIAAAAmJv8BAAAAAAAAAAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4BAAAAAAAAAAIAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					4,
					"left_delete",
					null,
					"BAAAABUCAAAAAAAAFQIAAAAAAAABAAAAZRQCAAAAAAAAFAIAAAAAAAABAAAAdRMCAAAAAAAAEwIAAAAAAAABAAAAchICAAAAAAAAEgIAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYCAAAAAAAAFgIAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BQAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAAUAgAAAAAAAAAAAAAUAgAAAAAAABUCAAAAAAAAAAAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABICAAAAAAAAEgIAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"cut",
					null,
					"AQAAALkBAAAAAAAAuQEAAAAAAABjAAAACmV4cG9ydCBmdW5jdGlvbiBzb21lKHN0cmVhbSwgZm4pIHsKICByZXR1cm4gcmVkdWNlKChhY2MsbixpKSA9PiBhY2MgfHwgZm4obixpLCBzdHJlYW0pLCBmYWxzZSk7Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkBAAAAAAAAHAIAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"paste",
					null,
					"AQAAALkBAAAAAAAAHAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkBAAAAAAAAuQEAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"paste",
					null,
					"AQAAAGoAAAAAAAAAzQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoAAAAAAAAAagAAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "concat"
					},
					"BwAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB8AAAAAAAAAAQAAABzb21lfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsAAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIAAAAAAAAAggAAAAAAAAAAAAAAAADwvw"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACMAAAAAAAAAAQAAAAsIGZu",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsAAAAAAAAAjwAAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACSAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8AAAAAAAAAjwAAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAHoAAAAAAAAAewAAAAAAAAAAAAAAkQAAAAAAAACRAAAAAAAAAAIAAAAgIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoAAAAAAAAAegAAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAAAAAAAAAAkAAAAAAAAAD////////vfw"
				],
				[
					200,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJYAAAAAAAAAmAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYAAAAAAAAAlgAAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcAAAAAAAAAlwAAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " satr"
					},
					"BQAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoAAAAAAAAAmgAAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					4,
					"left_delete",
					null,
					"BAAAAJ4AAAAAAAAAngAAAAAAAAABAAAAcp0AAAAAAAAAnQAAAAAAAAABAAAAdJwAAAAAAAAAnAAAAAAAAAABAAAAYZsAAAAAAAAAmwAAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8AAAAAAAAAnwAAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "stream"
					},
					"BgAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsAAAAAAAAAmwAAAAAAAAAAAAAAAADwvw"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " stream"
					},
					"BwAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAADwvw"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BwAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACvAAAAAAAAAAAAAACtAAAAAAAAAK0AAAAAAAAAAgAAACAgrQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALQAAAAAAAAAtgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoAAAAAAAAAugAAAAAAAAAAAAAAAADwvw"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": " stream"
					},
					"BwAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "\nyield"
					},
					"CQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADKAAAAAAAAAAAAAADGAAAAAAAAAMYAAAAAAAAABAAAACAgICDGAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUAAAAAAAAAxQAAAAAAAAAAAAAAAADwvw"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": " n)"
					},
					"AwAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEAAAAAAAAA0QAAAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\nyield"
					},
					"CQAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACvAAAAAAAAAAAAAACtAAAAAAAAAK0AAAAAAAAAAgAAACAgrQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAADwvw"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYAAAAAAAAAtgAAAAAAAAAAAAAAAADwvw"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgAAAAAAAAAuQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"left_delete",
					null,
					"AQAAALgAAAAAAAAAuAAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkAAAAAAAAAuQAAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "stream;"
					},
					"BwAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAKsAAAAAAAAArAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsAAAAAAAAAqwAAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"AQAAAMEAAAAAAAAAwQAAAAAAAABmAAAAICAgIGZvcihsZXQgbiBvZiBzdHJlYW0pCiAgICAgIHlpZWxkIG47CgogIHJldHVybiByZWR1Y2UoKGFjYyxuLGkpID0+IGFjYyB8fCBmbihuLGksIHN0cmVhbSksIGZhbHNlKTsK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEAAAAAAAAAJwEAAAAAAAAAAAAAAAAAAA"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACcAAAAAAAAAAYAAABzdHJlYW0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsAAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC1AAAAAAAAAAYAAABzdHJlYW0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQAAAAAAAAAugAAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABrAAAAZXhwb3J0IGZ1bmN0aW9uKiBtYXAoc3RyZWFtLCB0cmFuc2Zvcm0gPSBhID0+IGEpIHsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSB7CiAgICB5aWVsZCB0cmFuc2Zvcm0obik7CiAgfQp9Cgo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					292,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAADWAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB9AAAAAAAAAAMAAABtYXA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwAAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					308,
					1,
					"left_delete",
					null,
					"AQAAAHwAAAAAAAAAfAAAAAAAAAABAAAAZg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0AAAAAAAAAfQAAAAAAAAAAAAAAAADwvw"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "oil"
					},
					"AwAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAADwvw"
				],
				[
					310,
					3,
					"left_delete",
					null,
					"AwAAAH4AAAAAAAAAfgAAAAAAAAABAAAAbH0AAAAAAAAAfQAAAAAAAAABAAAAaXwAAAAAAAAAfAAAAAAAAAABAAAAbw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8AAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "filter"
					},
					"BgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "predicate"
					},
					"CgAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACMAAAAAAAAAAkAAAB0cmFuc2Zvcm2MAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsAAAAAAAAAlAAAAAAAAAAAAAAAAADwvw"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAAJcAAAAAAAAAlwAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAAADwvw"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcAAAAAAAAAlwAAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"right_delete",
					null,
					"AQAAAJwAAAAAAAAAnAAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAADwvw"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "true"
					},
					"BAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAADwvw"
				],
				[
					329,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAJwAAAAAAAAAnAAAAAAAAAAEAAAAdHJ1ZZwAAAAAAAAAogAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAAAAAAAAAAnAAAAAAAAAAAAAAAAADwvw"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACeAAAAAAAAAAQAAAB0cnVl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0AAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					331,
					1,
					"left_delete",
					null,
					"AQAAAJ0AAAAAAAAAnQAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4AAAAAAAAAngAAAAAAAAAAAAAAAADwvw"
				],
				[
					332,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJwAAAAAAAAAnAAAAAAAAAABAAAAKJwAAAAAAAAAnAAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0AAAAAAAAAnQAAAAAAAAAAAAAAAADwvw"
				],
				[
					333,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJwAAAAAAAAAngAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAADwvw"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL8AAAAAAAAAAAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoAAAAAAAAAugAAAAAAAAAAAAAAAEB6QA"
				],
				[
					344,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMEAAAAAAAAAwwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "predica<te"
					},
					"CgAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIAAAAAAAAAwgAAAAAAAAAAAAAAAADwvw"
				],
				[
					346,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMwAAAAAAAAAzgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAADwvw"
				],
				[
					347,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMwAAAAAAAAAzAAAAAAAAAABAAAAKMwAAAAAAAAAzAAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0AAAAAAAAAzQAAAAAAAAAAAAAAAADwvw"
				],
				[
					348,
					3,
					"left_delete",
					null,
					"AwAAAMsAAAAAAAAAywAAAAAAAAABAAAAZcoAAAAAAAAAygAAAAAAAAABAAAAdMkAAAAAAAAAyQAAAAAAAAABAAAAPA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAADwvw"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkAAAAAAAAAyQAAAAAAAAAAAAAAAADwvw"
				],
				[
					350,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMsAAAAAAAAAzQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsAAAAAAAAAywAAAAAAAAAAAAAAAADwvw"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "n,i,"
					},
					"BAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAADwvw"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": " stream"
					},
					"BwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAADwvw"
				],
				[
					356,
					1,
					"left_delete",
					null,
					"AQAAAO8AAAAAAAAA7wAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAADwvw"
				],
				[
					359,
					10,
					"left_delete",
					null,
					"CgAAAO0AAAAAAAAA7QAAAAAAAAABAAAAKOwAAAAAAAAA7AAAAAAAAAABAAAAbesAAAAAAAAA6wAAAAAAAAABAAAAcuoAAAAAAAAA6gAAAAAAAAABAAAAb+kAAAAAAAAA6QAAAAAAAAABAAAAZugAAAAAAAAA6AAAAAAAAAABAAAAc+cAAAAAAAAA5wAAAAAAAAABAAAAbuYAAAAAAAAA5gAAAAAAAAABAAAAYeUAAAAAAAAA5QAAAAAAAAABAAAAcuQAAAAAAAAA5AAAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACnAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAA0QA"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAAA0QA"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAADwvw"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": " =0"
					},
					"AwAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkAAAAAAAAAqQAAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": " ;"
					},
					"AgAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAADwvw"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "++"
					},
					"AgAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAADwvw"
				],
				[
					389,
					1,
					"cut",
					null,
					"AQAAAGoAAAAAAAAAagAAAAAAAACSAAAACmV4cG9ydCBmdW5jdGlvbiogZmlsdGVyKHN0cmVhbSwgcHJlZGljYXRlID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSB7CiAgICBpZihwcmVkaWNhdGUobixpKyssIHN0cmVhbSkpCiAgICB5aWVsZCBuOwogIH0KfQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoAAAAAAAAA/AAAAAAAAAAAAAAAAADwvw"
				],
				[
					390,
					2,
					"paste",
					null,
					"AgAAAGoAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAACOAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoAAAAAAAAAagAAAAAAAAAAAAAAAADwvw"
				],
				[
					413,
					1,
					"insert",
					{
						"characters": "find"
					},
					"BQAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPAQAAAAAAAAYAAABmaWx0ZXIPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4BAAAAAAAAFAEAAAAAAAAAAAAAAADwvw"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "UI"
					},
					"AgAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIBAAAAAAAAEgEAAAAAAAAAAAAAAADwvw"
				],
				[
					417,
					2,
					"left_delete",
					null,
					"AgAAABMBAAAAAAAAEwEAAAAAAAABAAAASRIBAAAAAAAAEgEAAAAAAAABAAAAVQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQBAAAAAAAAFAEAAAAAAAAAAAAAAADwvw"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "Index"
					},
					"BQAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIBAAAAAAAAEgEAAAAAAAAAAAAAAADwvw"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAH0BAAAAAAAAfgEAAAAAAAAAAAAAfgEAAAAAAACCAQAAAAAAAAAAAAB+AQAAAAAAAH4BAAAAAAAABAAAACAgICB+AQAAAAAAAIQBAAAAAAAAAAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAACGAQAAAAAAAIcBAAAAAAAAAAAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACJAQAAAAAAAAAAAACJAQAAAAAAAIoBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0BAAAAAAAAfQEAAAAAAAD////////vfw"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": " i;"
					},
					"AwAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoBAAAAAAAAigEAAAAAAAAAAAAAAADwvw"
				],
				[
					429,
					1,
					"left_delete",
					null,
					"AQAAAI4BAAAAAAAAjgEAAAAAAAANAAAAICAgIHlpZWxkIG47Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4BAAAAAAAAmwEAAAAAAAAAAAAAAAAAAA"
				],
				[
					430,
					1,
					"right_delete",
					null,
					"AQAAAI4BAAAAAAAAjgEAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4BAAAAAAAAjgEAAAAAAAAAAAAAAADwvw"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAACRAQAAAAAAAJIBAAAAAAAAAAAAAJIBAAAAAAAAkwEAAAAAAAAAAAAAkwEAAAAAAACUAQAAAAAAAAAAAACUAQAAAAAAAJUBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8BAAAAAAAAjwEAAAAAAAD////////vfw"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": " -1;"
					},
					"BAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYBAAAAAAAAlgEAAAAAAAAAAAAAAADwvw"
				],
				[
					440,
					2,
					"left_delete",
					null,
					"AgAAAI4BAAAAAAAAjgEAAAAAAAABAAAAfY0BAAAAAAAAjQEAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8BAAAAAAAAjwEAAAAAAAAAAAAAAABZQA"
				],
				[
					443,
					2,
					"left_delete",
					null,
					"AgAAAFsBAAAAAAAAWwEAAAAAAAABAAAAe1oBAAAAAAAAWgEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwBAAAAAAAAXAEAAAAAAAD////////vfw"
				],
				[
					448,
					1,
					"right_delete",
					null,
					"AQAAAAwBAAAAAAAADAEAAAAAAAABAAAAKg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAADwvw"
				],
				[
					453,
					1,
					"cut",
					null,
					"AQAAAPwAAAAAAAAA/AAAAAAAAACcAAAACmV4cG9ydCBmdW5jdGlvbiBmaW5kSW5kZXgoc3RyZWFtLCBwcmVkaWNhdGUgPSBuID0+IHt9KSB7CiAgbGV0IGkgPTAgOwogIGZvcihsZXQgbiBvZiBzdHJlYW0pCiAgICBpZihwcmVkaWNhdGUobixpKyssIHN0cmVhbSkpCiAgICAgIHJldHVybiBpOwpyZXR1cm4gLTE7Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwAAAAAAAAAmAEAAAAAAAAAAAAAAADwvw"
				],
				[
					454,
					2,
					"paste",
					null,
					"AgAAAPwAAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAAA0AgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAADwvw"
				],
				[
					457,
					1,
					"left_delete",
					null,
					"AQAAAK0BAAAAAAAArQEAAAAAAAAFAAAASW5kZXg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0BAAAAAAAAsgEAAAAAAAAAAAAAAADwvw"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "findIndex"
					},
					"CgAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADXAQAAAAAAAAMAAAAwIDvXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYBAAAAAAAA2QEAAAAAAAAAAAAAAABkQA"
				],
				[
					471,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN8BAAAAAAAA4QEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8BAAAAAAAA3wEAAAAAAAAAAAAAAADwvw"
				],
				[
					475,
					1,
					"cut",
					null,
					"AQAAADYBAAAAAAAANgEAAAAAAABgAAAAICBsZXQgaSA9MCA7CiAgZm9yKGxldCBuIG9mIHN0cmVhbSkKICAgIGlmKHByZWRpY2F0ZShuLGkrKywgc3RyZWFtKSkKICAgICAgcmV0dXJuIGk7CnJldHVybiAtMTsK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYBAAAAAAAANgEAAAAAAAAAAAAAAAAAAA"
				],
				[
					476,
					1,
					"paste",
					null,
					"AQAAADYBAAAAAAAAlgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYBAAAAAAAANgEAAAAAAAAAAAAAAADwvw"
				],
				[
					479,
					1,
					"paste",
					null,
					"AQAAAM0BAAAAAAAALQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0BAAAAAAAAzQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					481,
					1,
					"left_delete",
					null,
					"AQAAAC0CAAAAAAAALQIAAAAAAABoAAAAICBsZXQgaSA9ZmluZEluZGV4KCkKICBmb3IobGV0IG4gb2Ygc3RyZWFtKQogICAgaWYocHJlZGljYXRlKG4saSsrLCBzdHJlYW0pKQogICAgICByZXR1cm4gaTsKcmV0dXJuIC0xOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0CAAAAAAAAlQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					483,
					1,
					"left_delete",
					null,
					"AQAAACICAAAAAAAAIgIAAAAAAAALAAAAcmV0dXJuIC0xOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0CAAAAAAAAIgIAAAAAAAAAAAAAAAAAAA"
				],
				[
					485,
					1,
					"left_delete",
					null,
					"AQAAAB8CAAAAAAAAHwIAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACACAAAAAAAAIAIAAAAAAAAAAAAAAADwvw"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "mn"
					},
					"AgAAAB8CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAhAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8CAAAAAAAAHwIAAAAAAAAAAAAAAADwvw"
				],
				[
					487,
					2,
					"left_delete",
					null,
					"AgAAACACAAAAAAAAIAIAAAAAAAABAAAAbh8CAAAAAAAAHwIAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACECAAAAAAAAIQIAAAAAAAAAAAAAAADwvw"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "  m"
					},
					"AwAAAB8CAAAAAAAAIAIAAAAAAAAAAAAAIAIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACICAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8CAAAAAAAAHwIAAAAAAAAAAAAAAADwvw"
				],
				[
					489,
					2,
					"left_delete",
					null,
					"AgAAACECAAAAAAAAIQIAAAAAAAABAAAAbSACAAAAAAAAIAIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACICAAAAAAAAIgIAAAAAAAAAAAAAAADwvw"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAACACAAAAAAAAIQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACACAAAAAAAAIAIAAAAAAAAAAAAAAADwvw"
				],
				[
					491,
					2,
					"left_delete",
					null,
					"AgAAACACAAAAAAAAIAIAAAAAAAABAAAAbh8CAAAAAAAAHwIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACECAAAAAAAAIQIAAAAAAAAAAAAAAADwvw"
				],
				[
					492,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAB8CAAAAAAAAIAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8CAAAAAAAAHwIAAAAAAAAAAAAAAADwvw"
				],
				[
					502,
					1,
					"cut",
					null,
					"AQAAAJkBAAAAAAAAmQEAAAAAAACMAAAAZXhwb3J0IGZ1bmN0aW9uIGZpbmQoc3RyZWFtLCBwcmVkaWNhdGUgPSBuID0+IHt9KSB7CiAgbGV0IGkgPTAgOwogIGZvcihsZXQgbiBvZiBzdHJlYW0pCiAgICBpZihwcmVkaWNhdGUobixpKyssIHN0cmVhbSkpCiAgICAgIHJldHVybiBuOwp9Cgo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAJQIAAAAAAAAAAAAAAAAAAA"
				],
				[
					503,
					2,
					"paste",
					null,
					"AgAAAJkBAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAACxAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAmQEAAAAAAAAAAAAAAADwvw"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "folr"
					},
					"BQAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA2AgAAAAAAAAQAAABmaW5kNgIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUCAAAAAAAAOQIAAAAAAAAAAAAAAADwvw"
				],
				[
					509,
					2,
					"left_delete",
					null,
					"AgAAADgCAAAAAAAAOAIAAAAAAAABAAAAcjcCAAAAAAAANwIAAAAAAAABAAAAbA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkCAAAAAAAAOQIAAAAAAAAAAAAAAADwvw"
				],
				[
					510,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcCAAAAAAAANwIAAAAAAAAAAAAAAADwvw"
				],
				[
					511,
					1,
					"left_delete",
					null,
					"AQAAADgCAAAAAAAAOAIAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkCAAAAAAAAOQIAAAAAAAAAAAAAAADwvw"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "Each"
					},
					"BAAAADgCAAAAAAAAOQIAAAAAAAAAAAAAOQIAAAAAAAA6AgAAAAAAAAAAAAA6AgAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAPAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgCAAAAAAAAOAIAAAAAAAAAAAAAAADwvw"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AwAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABGAgAAAAAAAAkAAABwcmVkaWNhdGVGAgAAAAAAAEcCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUCAAAAAAAATgIAAAAAAAAAAAAAAADwvw"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AwAAAIACAAAAAAAAgQIAAAAAAAAAAAAAgQIAAAAAAACBAgAAAAAAAAkAAABwcmVkaWNhdGWBAgAAAAAAAIICAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIACAAAAAAAAiQIAAAAAAAAAAAAAAADwvw"
				],
				[
					538,
					3,
					"left_delete",
					null,
					"AwAAAH8CAAAAAAAAfwIAAAAAAAABAAAAKH4CAAAAAAAAfgIAAAAAAAABAAAAZn0CAAAAAAAAfQIAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIACAAAAAAAAgAIAAAAAAAAAAAAAAADwvw"
				],
				[
					540,
					1,
					"left_delete",
					null,
					"AQAAAI4CAAAAAAAAjgIAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8CAAAAAAAAjwIAAAAAAAD////////vfw"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAI4CAAAAAAAAjwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4CAAAAAAAAjgIAAAAAAAAAAAAAAADwvw"
				],
				[
					544,
					1,
					"left_delete",
					null,
					"AQAAAJACAAAAAAAAkAIAAAAAAAAQAAAAICAgICAgcmV0dXJuIG47Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAoAIAAAAAAAAAAAAAAAAAAA"
				],
				[
					561,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABrAAAAZXhwb3J0IGZ1bmN0aW9uKiBtYXAoc3RyZWFtLCB0cmFuc2Zvcm0gPSBhID0+IGEpIHsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSB7CiAgICB5aWVsZCB0cmFuc2Zvcm0obik7CiAgfQp9Cgo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAawAAAAAAAAAAAAAAAADwvw"
				],
				[
					562,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAADWAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "frm"
					},
					"BAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASAAAAAAAAAAMAAABtYXASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					568,
					1,
					"left_delete",
					null,
					"AQAAABMAAAAAAAAAEwAAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					569,
					1,
					"insert",
					{
						"characters": "om"
					},
					"AgAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAADwvw"
				],
				[
					575,
					1,
					"left_delete",
					null,
					"AQAAAEsAAAAAAAAASwAAAAAAAAABAAAAew",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAOBwQA"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "\nyield"
					},
					"CQAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABOAAAAAAAAAAAAAABMAAAAAAAAAEwAAAAAAAAAAgAAACAgTAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAD////////vfw"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": " n;"
					},
					"AwAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAADwvw"
				],
				[
					584,
					1,
					"left_delete",
					null,
					"AQAAAFkAAAAAAAAAWQAAAAAAAAAcAAAAICAgIHlpZWxkIHRyYW5zZm9ybShuKTsKICB9Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkAAAAAAAAAdQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					599,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAACoAAAAAAAAAKgAAAAAAAAABAAAAYSoAAAAAAAAALQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKwAAAAAAAAAAAAAAAADwvw"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "el,i"
					},
					"BQAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsAAAAAAAAAAEAAABhLAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsAAAAAAAAALAAAAAAAAAAAAAAAAADwvw"
				],
				[
					601,
					3,
					"left_delete",
					null,
					"AwAAAC4AAAAAAAAALgAAAAAAAAABAAAAaS0AAAAAAAAALQAAAAAAAAABAAAALCwAAAAAAAAALAAAAAAAAAABAAAAbA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAADwvw"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": ",i"
					},
					"AgAAACwAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAuAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwAAAAAAAAALAAAAAAAAAAAAAAAAADwvw"
				],
				[
					605,
					1,
					"left_delete",
					null,
					"AQAAADMAAAAAAAAAMwAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQAAAAAAAAANAAAAAAAAAAAAAAAAADwvw"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAADwvw"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "transform("
					},
					"CgAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoAAAAAAAAAWgAAAAAAAAAAAAAAAADwvw"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUAAAAAAAAAZQAAAAAAAAAAAAAAAADwvw"
				],
				[
					623,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABfBQAAZXhwb3J0IGZ1bmN0aW9uKiBmcm9tKHN0cmVhbSwgdHJhbnNmb3JtID0gKGUsaSkgPT4gZSkgewogIGZvcihsZXQgbiBvZiBzdHJlYW0pIAogICAgeWllbGQgdHJhbnNmb3JtKG4pOwp9CgpleHBvcnQgZnVuY3Rpb24qIG1hcChzdHJlYW0sIHRyYW5zZm9ybSA9IGEgPT4gYSkgewogIGZvcihsZXQgbiBvZiBzdHJlYW0pIHsKICAgIHlpZWxkIHRyYW5zZm9ybShuKTsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiogZmlsdGVyKHN0cmVhbSwgcHJlZGljYXRlID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSB7CiAgICBpZihwcmVkaWNhdGUobixpKyssIHN0cmVhbSkpCiAgICB5aWVsZCBuOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIGZpbmRJbmRleChzdHJlYW0sIHByZWRpY2F0ZSA9IG4gPT4ge30pIHsKICBsZXQgaSA9MCA7CiAgZm9yKGxldCBuIG9mIHN0cmVhbSkKICAgIGlmKHByZWRpY2F0ZShuLGkrKywgc3RyZWFtKSkKICAgICAgcmV0dXJuIGk7CnJldHVybiAtMTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGZpbmQoc3RyZWFtLCBwcmVkaWNhdGUgPSBuID0+IHt9KSB7CiAgbGV0IGkgPTAgOwogIGZvcihsZXQgbiBvZiBzdHJlYW0pCiAgICBpZihwcmVkaWNhdGUobixpKyssIHN0cmVhbSkpCiAgICAgIHJldHVybiBuOwp9CgpleHBvcnQgZnVuY3Rpb24gZm9yRWFjaChzdHJlYW0sIGZuID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKQogICAgZm4obixpKyssIHN0cmVhbSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiogY29uY2F0KC4uLnN0cmVhbXMpIHsKICBmb3IobGV0IHMgb2Ygc3RyZWFtcykKICAgIHlpZWxkICpzOwp9CgpleHBvcnQgZnVuY3Rpb24gY29uc3VtZShzdHJlYW0sIGZuID0gYSA9PiBjb25zb2xlLmxvZyhgY29uc3VtZSA9YCwgYSkpIHsKICBmb3IobGV0IG4gb2Ygc3RyZWFtKSBmbihuKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHJlZHVjZShzdHJlYW0sIGZuLCBhY2N1KSB7CiAgbGV0IGkgPSAwOwogIGZvcihsZXQgbiBvZiBzdHJlYW0pIGFjY3UgPSBmbihhY2N1LCBuLCBpKyssIHN0cmVhbSk7CiAgcmV0dXJuIGFjY3U7Cn0KCmV4cG9ydCBmdW5jdGlvbiBldmVyeShzdHJlYW0sIGZuKSB7CiAgcmV0dXJuIHJlZHVjZSgoYWNjLG4saSkgPT4gYWNjICYmIGZuKG4saSwgc3RyZWFtKSwgdHJ1ZSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBzb21lKHN0cmVhbSwgZm4pIHsKICByZXR1cm4gcmVkdWNlKChhY2MsbixpKSA9PiBhY2MgfHwgZm4obixpLCBzdHJlYW0pLCBmYWxzZSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBhY2N1bXVsYXRlKHN0cmVhbSwgYWNjdSkgewogIHJldHVybiBjb25zdW1lKHN0cmVhbSwgYSA9PiBhY2N1LnB1c2goYSkpLCBhY2N1Owp9CgAAAAAAAAAA8wQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYAAAAAAAAAZgAAAAAAAAAAAAAAAIBrQA"
				],
				[
					632,
					1,
					"cut",
					null,
					"AQAAANoBAAAAAAAA2gEAAAAAAACBAAAACgpleHBvcnQgZnVuY3Rpb24gZmluZChpdCwgcHJlZGljYXRlID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpCiAgICBpZihwcmVkaWNhdGUobixpKyssIGl0KSkKICAgICAgcmV0dXJuIG47Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsCAAAAAAAA2gEAAAAAAAAAAAAAAADwvw"
				],
				[
					633,
					2,
					"paste",
					null,
					"AgAAANoBAAAAAAAAWwIAAAAAAAAAAAAAWwIAAAAAAADcAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoBAAAAAAAA2gEAAAAAAAAAAAAAAADwvw"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "inclucde"
					},
					"CQAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABuAgAAAAAAAAQAAABmaW5kbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAcQIAAAAAAAAAAAAAAADwvw"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "include"
					},
					"CAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABuAgAAAAAAAAgAAABpbmNsdWNkZW4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAABwAgAAAAAAAHECAAAAAAAAAAAAAHECAAAAAAAAcgIAAAAAAAAAAAAAcgIAAAAAAABzAgAAAAAAAAAAAABzAgAAAAAAAHQCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAdQIAAAAAAAAAAAAAAADwvw"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": "searchElemen"
					},
					"DAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAHwCAAAAAAAAfQIAAAAAAAAAAAAAfQIAAAAAAAB+AgAAAAAAAAAAAAB+AgAAAAAAAH8CAAAAAAAAAAAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACBAgAAAAAAAAAAAACBAgAAAAAAAIICAAAAAAAAAAAAAIICAAAAAAAAgwIAAAAAAAAAAAAAgwIAAAAAAACEAgAAAAAAAAAAAACEAgAAAAAAAIUCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkCAAAAAAAAeQIAAAAAAAAAAAAAAADwvw"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": "t,"
					},
					"AgAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUCAAAAAAAAhQIAAAAAAAAAAAAAAADwvw"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcCAAAAAAAAiAIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcCAAAAAAAAhwIAAAAAAAAAAAAAAADwvw"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "fromIndex"
					},
					"CQAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAACQAgAAAAAAAJECAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgCAAAAAAAAiAIAAAAAAAAAAAAAAADwvw"
				],
				[
					651,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJECAAAAAAAAkgIAAAAAAAAAAAAAkgIAAAAAAACTAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJECAAAAAAAAkQIAAAAAAAAAAAAAAADwvw"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJMCAAAAAAAAlAIAAAAAAAAAAAAAlAIAAAAAAACVAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMCAAAAAAAAkwIAAAAAAAAAAAAAAADwvw"
				],
				[
					655,
					1,
					"left_delete",
					null,
					"AQAAAJUCAAAAAAAAlQIAAAAAAAATAAAAcHJlZGljYXRlID0gbiA9PiB7fQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAqAIAAAAAAAAAAAAAAADwvw"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALgCAAAAAAAAuQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgCAAAAAAAAuAIAAAAAAAAAAAAAAICBQA"
				],
				[
					658,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAALkCAAAAAAAAugIAAAAAAAAAAAAA6AIAAAAAAADsAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkCAAAAAAAAuQIAAAAAAAAAAAAAAADwvw"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAMICAAAAAAAAwwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMICAAAAAAAAwgIAAAAAAAAAAAAAAADwvw"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": " >="
					},
					"AwAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMCAAAAAAAAwwIAAAAAAAAAAAAAAADwvw"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": " fro"
					},
					"BAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAxwIAAAAAAADIAgAAAAAAAAAAAADIAgAAAAAAAMkCAAAAAAAAAAAAAMkCAAAAAAAAygIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYCAAAAAAAAxgIAAAAAAAAAAAAAAADwvw"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADMAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoCAAAAAAAAygIAAAAAAAAAAAAAAADwvw"
				],
				[
					664,
					2,
					"left_delete",
					null,
					"AgAAAMsCAAAAAAAAywIAAAAAAAABAAAAbcoCAAAAAAAAygIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwCAAAAAAAAzAIAAAAAAAAAAAAAAADwvw"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "mIndex"
					},
					"BgAAAMoCAAAAAAAAywIAAAAAAAAAAAAAywIAAAAAAADMAgAAAAAAAAAAAADMAgAAAAAAAM0CAAAAAAAAAAAAAM0CAAAAAAAAzgIAAAAAAAAAAAAAzgIAAAAAAADPAgAAAAAAAAAAAADPAgAAAAAAANACAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoCAAAAAAAAygIAAAAAAAAAAAAAAADwvw"
				],
				[
					666,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANACAAAAAAAA0QIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANACAAAAAAAA0AIAAAAAAAAAAAAAAADwvw"
				],
				[
					669,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHQCAAAAAAAAdQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQCAAAAAAAAdAIAAAAAAAAAAAAAAADwvw"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANICAAAAAAAA0wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANICAAAAAAAA0gIAAAAAAAAAAAAAAADwvw"
				],
				[
					673,
					1,
					"left_delete",
					null,
					"AQAAANICAAAAAAAA0gIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMCAAAAAAAA0wIAAAAAAAAAAAAAAADwvw"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANICAAAAAAAA0gIAAAAAAAAAAAAAAADwvw"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQCAAAAAAAA1QIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQCAAAAAAAA1AIAAAAAAAAAAAAAAADwvw"
				],
				[
					679,
					1,
					"left_delete",
					null,
					"AQAAAJUCAAAAAAAAlQIAAAAAAAABAAAAMA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYCAAAAAAAAlgIAAAAAAAAAAAAAAADwvw"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACXAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYCAAAAAAAA1gIAAAAAAAAAAAAAAADwvw"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADZAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcCAAAAAAAA1wIAAAAAAAAAAAAAAADwvw"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANoCAAAAAAAA2wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoCAAAAAAAA2gIAAAAAAAAAAAAAAADwvw"
				],
				[
					688,
					1,
					"left_delete",
					null,
					"AQAAANoCAAAAAAAA2gIAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsCAAAAAAAA2wIAAAAAAAAAAAAAAADwvw"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANoCAAAAAAAA2wIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoCAAAAAAAA2gIAAAAAAAAAAAAAAADwvw"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": " searchElemene"
					},
					"DgAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAADdAgAAAAAAAN4CAAAAAAAAAAAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA3wIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAOECAAAAAAAA4gIAAAAAAAAAAAAA4gIAAAAAAADjAgAAAAAAAAAAAADjAgAAAAAAAOQCAAAAAAAAAAAAAOQCAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADmAgAAAAAAAAAAAADmAgAAAAAAAOcCAAAAAAAAAAAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsCAAAAAAAA2wIAAAAAAAAAAAAAAADwvw"
				],
				[
					691,
					1,
					"left_delete",
					null,
					"AQAAAOgCAAAAAAAA6AIAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkCAAAAAAAA6QIAAAAAAAAAAAAAAADwvw"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": "t)"
					},
					"AgAAAOgCAAAAAAAA6QIAAAAAAAAAAAAA6QIAAAAAAADqAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgCAAAAAAAA6AIAAAAAAAAAAAAAAADwvw"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CgAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADvAgAAAAAAAAAAAADrAgAAAAAAAOsCAAAAAAAABAAAACAgICDrAgAAAAAAAPECAAAAAAAAAAAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAADzAgAAAAAAAPQCAAAAAAAAAAAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoCAAAAAAAA6gIAAAAAAAAAAAAAAADwvw"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": " true;"
					},
					"BgAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA+wIAAAAAAAD8AgAAAAAAAAAAAAD8AgAAAAAAAP0CAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcCAAAAAAAA9wIAAAAAAAAAAAAAAADwvw"
				],
				[
					699,
					1,
					"left_delete",
					null,
					"AQAAAP0CAAAAAAAA/QIAAAAAAAAlAAAAcHJlZGljYXRlKG4saSsrLCBpdCkpCiAgICAgIHJldHVybiBuOw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0CAAAAAAAAIgMAAAAAAAAAAAAAAIBmQA"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABgMAAAAAAAAAAAAABgMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAgDAAAAAAAAAAAAAAgDAAAAAAAACQMAAAAAAAAAAAAACQMAAAAAAAAKAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEDAAAAAAAAAQMAAAAAAAAAAAAAAIBmQA"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": " false;"
					},
					"BwAAAAoDAAAAAAAACwMAAAAAAAAAAAAACwMAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAA0DAAAAAAAAAAAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoDAAAAAAAACgMAAAAAAAAAAAAAAADwvw"
				],
				[
					710,
					1,
					"left_delete",
					null,
					"AQAAAFsCAAAAAAAAWwIAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwCAAAAAAAAXAIAAAAAAAAAAAAAAAAkQA"
				],
				[
					726,
					1,
					"cut",
					null,
					"AQAAAFsCAAAAAAAAWwIAAAAAAAC4AAAACmV4cG9ydCBmdW5jdGlvbiBpbmNsdWRlcyhpdCwgc2VhcmNoRWxlbWVudCwgZnJvbUluZGV4ID0gLTEpIHsKICBsZXQgaSA9MCA7CiAgZm9yKGxldCBuIG9mIGl0KSB7CiAgICBpZihpID49IGZyb21JbmRleCAmJiBuID09PSBzZWFyY2hFbGVtZW50KQogICAgICByZXR1cm4gdHJ1ZTsKICB9CiAgcmV0dXJuIGZhbHNlOwp9Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsCAAAAAAAAEwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					727,
					2,
					"paste",
					null,
					"AgAAAFsCAAAAAAAAEwMAAAAAAAAAAAAAEwMAAAAAAADLAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsCAAAAAAAAWwIAAAAAAAAAAAAAAADwvw"
				],
				[
					734,
					1,
					"insert",
					{
						"characters": "ibnde"
					},
					"BgAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAlAwAAAAAAAAgAAABpbmNsdWRlcyUDAAAAAAAAJgMAAAAAAAAAAAAAJgMAAAAAAAAnAwAAAAAAAAAAAAAnAwAAAAAAACgDAAAAAAAAAAAAACgDAAAAAAAAKQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQDAAAAAAAALAMAAAAAAAAAAAAAAADwvw"
				],
				[
					735,
					4,
					"left_delete",
					null,
					"BAAAACgDAAAAAAAAKAMAAAAAAAABAAAAZScDAAAAAAAAJwMAAAAAAAABAAAAZCYDAAAAAAAAJgMAAAAAAAABAAAAbiUDAAAAAAAAJQMAAAAAAAABAAAAYg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkDAAAAAAAAKQMAAAAAAAAAAAAAAADwvw"
				],
				[
					736,
					1,
					"insert",
					{
						"characters": "ndexOf"
					},
					"BgAAACUDAAAAAAAAJgMAAAAAAAAAAAAAJgMAAAAAAAAnAwAAAAAAAAAAAAAnAwAAAAAAACgDAAAAAAAAAAAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUDAAAAAAAAJQMAAAAAAAAAAAAAAADwvw"
				],
				[
					745,
					1,
					"insert",
					{
						"characters": "++"
					},
					"AgAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsDAAAAAAAAewMAAAAAAAAAAAAAAADwvw"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": "++"
					},
					"AgAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQCAAAAAAAAxAIAAAAAAAAAAAAAAADwvw"
				],
				[
					810,
					1,
					"cut",
					null,
					"AQAAAH0DAAAAAAAAfQMAAAAAAAACAAAAKys",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0DAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				],
				[
					813,
					1,
					"insert",
					{
						"characters": "\ni++;"
					},
					"CAAAALUDAAAAAAAAtgMAAAAAAAAAAAAAtgMAAAAAAAC8AwAAAAAAAAAAAAC2AwAAAAAAALYDAAAAAAAABgAAACAgICAgILYDAAAAAAAAugMAAAAAAAAAAAAAugMAAAAAAAC7AwAAAAAAAAAAAAC7AwAAAAAAALwDAAAAAAAAAAAAALwDAAAAAAAAvQMAAAAAAAAAAAAAvQMAAAAAAAC+AwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUDAAAAAAAAtQMAAAAAAAD////////vfw"
				],
				[
					817,
					4,
					"left_delete",
					null,
					"BAAAALMDAAAAAAAAswMAAAAAAAABAAAAZbIDAAAAAAAAsgMAAAAAAAABAAAAdbEDAAAAAAAAsQMAAAAAAAABAAAAcrADAAAAAAAAsAMAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQDAAAAAAAAtAMAAAAAAAAAAAAAAADwvw"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAALADAAAAAAAAsQMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALADAAAAAAAAsAMAAAAAAAAAAAAAAADwvw"
				],
				[
					832,
					4,
					"left_delete",
					null,
					"BAAAAM0DAAAAAAAAzQMAAAAAAAABAAAAZcwDAAAAAAAAzAMAAAAAAAABAAAAc8sDAAAAAAAAywMAAAAAAAABAAAAbMoDAAAAAAAAygMAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4DAAAAAAAAzgMAAAAAAAAAAAAAAADwvw"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAMoDAAAAAAAAywMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					834,
					2,
					"left_delete",
					null,
					"AgAAAMoDAAAAAAAAygMAAAAAAAABAAAALckDAAAAAAAAyQMAAAAAAAABAAAAZg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					835,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAAMkDAAAAAAAAygMAAAAAAAAAAAAAygMAAAAAAADLAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					848,
					1,
					"cut",
					null,
					"AQAAABUDAAAAAAAAFQMAAAAAAAC5AAAACmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGl0LCBzZWFyY2hFbGVtZW50LCBmcm9tSW5kZXggPSAtMSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIGlmKGkgPj0gZnJvbUluZGV4ICYmIG4gPT09IHNlYXJjaEVsZW1lbnQpCiAgICAgIHJldHVybiBpOwogICAgaSsrOwogIH0KICByZXR1cm4gLTE7Cn0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUDAAAAAAAAzgMAAAAAAAAAAAAAAADwvw"
				],
				[
					849,
					2,
					"paste",
					null,
					"AgAAABUDAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAACHBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUDAAAAAAAAFQMAAAAAAAAAAAAAAADwvw"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "lastI"
					},
					"BQAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8DAAAAAAAA3wMAAAAAAAAAAAAAAADwvw"
				],
				[
					855,
					1,
					"right_delete",
					null,
					"AQAAAOQDAAAAAAAA5AMAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": ",j=-1"
					},
					"BQAAABsEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAdBAAAAAAAAAAAAAAdBAAAAAAAAB4EAAAAAAAAAAAAAB4EAAAAAAAAHwQAAAAAAAAAAAAAHwQAAAAAAAAgBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsEAAAAAAAAGwQAAAAAAAAAAAAAAADwvw"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": "j=i;"
					},
					"BQAAAGsEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABsBAAAAAAAAAkAAAByZXR1cm4gaTtsBAAAAAAAAG0EAAAAAAAAAAAAAG0EAAAAAAAAbgQAAAAAAAAAAAAAbgQAAAAAAABvBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQEAAAAAAAAawQAAAAAAAAAAAAAAABOQA"
				],
				[
					871,
					2,
					"left_delete",
					null,
					"AgAAAIcEAAAAAAAAhwQAAAAAAAABAAAAMYYEAAAAAAAAhgQAAAAAAAABAAAALQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgEAAAAAAAAiAQAAAAAAAAAAAAAAADwvw"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAIYEAAAAAAAAhwQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYEAAAAAAAAhgQAAAAAAAAAAAAAAADwvw"
				],
				[
					880,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8DAAAAAAAAzwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					889,
					1,
					"cut",
					null,
					"AQAAAGIAAAAAAAAAYgAAAAAAAABjAAAACmV4cG9ydCBmdW5jdGlvbiogbWFwKGl0LCB0cmFuc2Zvcm0gPSBhID0+IGEpIHsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIHlpZWxkIHRyYW5zZm9ybShuKTsKICB9Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIAAAAAAAAAxQAAAAAAAAAAAAAAAADwvw"
				],
				[
					892,
					1,
					"paste",
					null,
					"AQAAACkEAAAAAAAAjAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkEAAAAAAAAKQQAAAAAAAAAAAAAAADwvw"
				],
				[
					895,
					1,
					"cut",
					null,
					"AQAAAIwEAAAAAAAAjAQAAAAAAABiAAAACmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoKGl0LCBmbiA9IG4gPT4ge30pIHsKICBsZXQgaSA9MCA7CiAgZm9yKGxldCBuIG9mIGl0KQogICAgZm4obixpKyssIGl0KTsKfQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwEAAAAAAAA7gQAAAAAAAAAAAAAAADwvw"
				],
				[
					902,
					1,
					"paste",
					null,
					"AQAAAPgBAAAAAAAAWgIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgBAAAAAAAA+AEAAAAAAAAAAAAAAADwvw"
				],
				[
					909,
					1,
					"cut",
					null,
					"AQAAAHgBAAAAAAAAeAEAAAAAAACAAAAACmV4cG9ydCBmdW5jdGlvbiBmaW5kKGl0LCBwcmVkaWNhdGUgPSBuID0+IHt9KSB7CiAgbGV0IGkgPTAgOwogIGZvcihsZXQgbiBvZiBpdCkKICAgIGlmKHByZWRpY2F0ZShuLGkrKywgaXQpKQogICAgICByZXR1cm4gbjsKfQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgBAAAAAAAA+AEAAAAAAAAAAAAAAADwvw"
				],
				[
					912,
					1,
					"paste",
					null,
					"AQAAAOgAAAAAAAAAaAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAADwvw"
				],
				[
					919,
					1,
					"cut",
					null,
					"AQAAABUGAAAAAAAAFQYAAAAAAABbAAAACmV4cG9ydCBmdW5jdGlvbiBldmVyeShpdCwgZm4pIHsKICByZXR1cm4gcmVkdWNlKChhY2MsbixpKSA9PiBhY2MgJiYgZm4obixpLCBpdCksIHRydWUpOwp9Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUGAAAAAAAAcAYAAAAAAAAAAAAAAADwvw"
				],
				[
					925,
					1,
					"paste",
					null,
					"AQAAAGIAAAAAAAAAvQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIAAAAAAAAAYgAAAAAAAAAAAAAAAADwvw"
				],
				[
					934,
					1,
					"cut",
					null,
					"AQAAAEkFAAAAAAAASQUAAAAAAACxAAAACmV4cG9ydCBmdW5jdGlvbiogY29uY2F0KC4uLnN0cmVhbXMpIHsKICBmb3IobGV0IHMgb2Ygc3RyZWFtcykKICAgIHlpZWxkICpzOwp9CgpleHBvcnQgZnVuY3Rpb24gY29uc3VtZShpdCwgZm4gPSBhID0+IGNvbnNvbGUubG9nKGBjb25zdW1lID1gLCBhKSkgewogIGZvcihsZXQgbiBvZiBpdCkgZm4obik7Cn0K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkFAAAAAAAA+gUAAAAAAAAAAAAAAADwvw"
				],
				[
					940,
					1,
					"paste",
					null,
					"AQAAAGIAAAAAAAAAEwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIAAAAAAAAAYgAAAAAAAAAAAAAAAADwvw"
				],
				[
					949,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABiAAAAZXhwb3J0IGZ1bmN0aW9uKiBmcm9tKGl0LCB0cmFuc2Zvcm0gPSAoZSxpKSA9PiBlKSB7CiAgZm9yKGxldCBuIG9mIGl0KSAKICAgIHlpZWxkIHRyYW5zZm9ybShuKTsKfQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					952,
					1,
					"paste",
					null,
					"AQAAAAQDAAAAAAAAZgMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQDAAAAAAAABAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1042,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAAAkBwAACmV4cG9ydCBmdW5jdGlvbiogY29uY2F0KC4uLnN0cmVhbXMpIHsKICBmb3IobGV0IHMgb2Ygc3RyZWFtcykKICAgIHlpZWxkICpzOwp9CgpleHBvcnQgZnVuY3Rpb24gY29uc3VtZShpdCwgZm4gPSBhID0+IGNvbnNvbGUubG9nKGBjb25zdW1lID1gLCBhKSkgewogIGZvcihsZXQgbiBvZiBpdCkgZm4obik7Cn0KCmV4cG9ydCBmdW5jdGlvbiBldmVyeShpdCwgZm4pIHsKICByZXR1cm4gcmVkdWNlKChhY2MsbixpKSA9PiBhY2MgJiYgZm4obixpLCBpdCksIHRydWUpOwp9CgpleHBvcnQgZnVuY3Rpb24qIGZpbHRlcihpdCwgcHJlZGljYXRlID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIGlmKHByZWRpY2F0ZShuLGkrKywgaXQpKQogICAgeWllbGQgbjsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBmaW5kKGl0LCBwcmVkaWNhdGUgPSBuID0+IHt9KSB7CiAgbGV0IGkgPTAgOwogIGZvcihsZXQgbiBvZiBpdCkKICAgIGlmKHByZWRpY2F0ZShuLGkrKywgaXQpKQogICAgICByZXR1cm4gbjsKfQoKZXhwb3J0IGZ1bmN0aW9uIGZpbmRJbmRleChpdCwgcHJlZGljYXRlID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpCiAgICBpZihwcmVkaWNhdGUobixpKyssIGl0KSkKICAgICAgcmV0dXJuIGk7CnJldHVybiAtMTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2goaXQsIGZuID0gbiA9PiB7fSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpCiAgICBmbihuLGkrKywgaXQpOwp9CmV4cG9ydCBmdW5jdGlvbiogZnJvbShpdCwgdHJhbnNmb3JtID0gKGUsaSkgPT4gZSkgewogIGZvcihsZXQgbiBvZiBpdCkgCiAgICB5aWVsZCB0cmFuc2Zvcm0obik7Cn0KCmV4cG9ydCBmdW5jdGlvbiBpbmNsdWRlcyhpdCwgc2VhcmNoRWxlbWVudCwgZnJvbUluZGV4ID0gLTEpIHsKICBsZXQgaSA9MCA7CiAgZm9yKGxldCBuIG9mIGl0KSB7CiAgICBpZihpKysgPj0gZnJvbUluZGV4ICYmIG4gPT09IHNlYXJjaEVsZW1lbnQpCiAgICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0KCmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGl0LCBzZWFyY2hFbGVtZW50LCBmcm9tSW5kZXggPSAtMSkgewogIGxldCBpID0wIDsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIGlmKGkgPj0gZnJvbUluZGV4ICYmIG4gPT09IHNlYXJjaEVsZW1lbnQpCiAgICAgIHJldHVybiBpOwogICAgaSsrOwogIH0KICByZXR1cm4gLTE7Cn0KCmV4cG9ydCBmdW5jdGlvbiBsYXN0SW5kZXhPZihpdCwgc2VhcmNoRWxlbWVudCwgZnJvbUluZGV4ID0gLTEpIHsKICBsZXQgaSA9MCAsaj0tMTsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIGlmKGkgPj0gZnJvbUluZGV4ICYmIG4gPT09IHNlYXJjaEVsZW1lbnQpCiAgICAgIGo9aTsKICAgIGkrKzsKICB9CiAgcmV0dXJuIGo7Cn0KCmV4cG9ydCBmdW5jdGlvbiogbWFwKGl0LCB0cmFuc2Zvcm0gPSBhID0+IGEpIHsKICBmb3IobGV0IG4gb2YgaXQpIHsKICAgIHlpZWxkIHRyYW5zZm9ybShuKTsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiByZWR1Y2UoaXQsIGZuLCBhY2N1KSB7CiAgbGV0IGkgPSAwOwogIGZvcihsZXQgbiBvZiBpdCkgYWNjdSA9IGZuKGFjY3UsIG4sIGkrKywgaXQpOwogIHJldHVybiBhY2N1Owp9CgpleHBvcnQgZnVuY3Rpb24gc29tZShpdCwgZm4pIHsKICByZXR1cm4gcmVkdWNlKChhY2MsbixpKSA9PiBhY2MgfHwgZm4obixpLCBpdCksIGZhbHNlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGFjY3VtdWxhdGUoaXQsIGFjY3UpIHsKICByZXR1cm4gY29uc3VtZShpdCwgYSA9PiBhY2N1LnB1c2goYSkpLCBhY2N1Owp9CgAAAAAAAAAAAgcAAAAAAAAAAAAAAAAAAAAAAAACBwAAAAAAAAAAAAAAAAAAAAAAAAIHAAAAAAAAAAAAAAAAAAAAAAAAAgcAAAAAAAAAAAAAAAAAAAAAAAACBwAAAAAAAAAAAAAAAAAAAAAAAAIHAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoBAAAAAAAAjAEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs/quickjs-opcode.h",
			"settings":
			{
				"buffer_size": 15401,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFS0AAAAAAAAVLQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "qjs-opencv/tests/test_freetype.js",
			"settings":
			{
				"buffer_size": 5250,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					33,
					1,
					"insert",
					{
						"characters": "0x3e0"
					},
					"BgAAAFMIAAAAAAAAVAgAAAAAAAAAAAAAVAgAAAAAAABUCAAAAAAAAAIAAAA2NVQIAAAAAAAAVQgAAAAAAAAAAAAAVQgAAAAAAABWCAAAAAAAAAAAAABWCAAAAAAAAFcIAAAAAAAAAAAAAFcIAAAAAAAAWAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTCAAAAAAAAFUIAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAAFcIAAAAAAAAVwgAAAAAAAABAAAAMFYIAAAAAAAAVggAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYCAAAAAAAAFgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFYIAAAAAAAAVwgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWCAAAAAAAAFYIAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					4,
					"right_delete",
					null,
					"BAAAAFkIAAAAAAAAWQgAAAAAAAABAAAAMVkIAAAAAAAAWQgAAAAAAAABAAAAMFkIAAAAAAAAWQgAAAAAAAABAAAAMFkIAAAAAAAAWQgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "9x"
					},
					"AgAAAFkIAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABbCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAAFoIAAAAAAAAWggAAAAAAAABAAAAeFkIAAAAAAAAWQgAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbCAAAAAAAAFsIAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFkIAAAAAAAAWggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAAFkIAAAAAAAAWQgAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaCAAAAAAAAFoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "9x3"
					},
					"AwAAAFkIAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABbCAAAAAAAAAAAAABbCAAAAAAAAFwIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAFsIAAAAAAAAWwgAAAAAAAABAAAAM1oIAAAAAAAAWggAAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcCAAAAAAAAFwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "9x"
					},
					"AgAAAFoIAAAAAAAAWwgAAAAAAAAAAAAAWwgAAAAAAABcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaCAAAAAAAAFoIAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					3,
					"left_delete",
					null,
					"AwAAAFsIAAAAAAAAWwgAAAAAAAABAAAAeFoIAAAAAAAAWggAAAAAAAABAAAAOVkIAAAAAAAAWQgAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcCAAAAAAAAFwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "9x38"
					},
					"BAAAAFkIAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABbCAAAAAAAAAAAAABbCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAXQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					4,
					"left_delete",
					null,
					"BAAAAFwIAAAAAAAAXAgAAAAAAAABAAAAOFsIAAAAAAAAWwgAAAAAAAABAAAAM1oIAAAAAAAAWggAAAAAAAABAAAAeFkIAAAAAAAAWQgAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdCAAAAAAAAF0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "0x39)"
					},
					"BQAAAFkIAAAAAAAAWggAAAAAAAAAAAAAWggAAAAAAABbCAAAAAAAAAAAAABbCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAXQgAAAAAAAAAAAAAXQgAAAAAAABeCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACiEwAAaW1wb3J0ICogYXMgY3YgZnJvbSAnb3BlbmN2JzsKaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IHsgV2luZG93LCBNb3VzZUZsYWdzLCBNb3VzZUV2ZW50cywgTW91c2UsIFRleHRTdHlsZSwgRHJhd1RleHQgfSBmcm9tICcuLi9qcy9jdkhpZ2hHVUkuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3YpIHsKICBjb25zdCBhcmdzID0gYXJndi5zbGljZSgxKTsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAyLAogICAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICAgIGNvbXBhY3Q6IDEKICAgIH0KICB9KTsKCiAgLyogY3YubmFtZWRXaW5kb3coJ291dCcpOwogIGN2LnJlc2l6ZVdpbmRvdygnb3V0JywgNjQwLCA0ODApOyovCiAgbGV0IG1hdDsKICBsZXQgY29sb3JzID0gWwogICAgWzAsIDAsIDBdLAogICAgWzI1NSwgMjU1LCAyNTVdCiAgXTsKCiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbNjM5LCA0NzldLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBbZm9udEZpbGUgPSAnTWlzY0ZpeGVkU0M2MTMudHRmJywgZm9udFNpemUgPSAxMl0gPSBhcmdzOwoKICBjb25zb2xlLmxvZygnZm9udEZpbGUnLCBmb250RmlsZSk7CiAgbGV0IGV4dCA9IHBhdGguZXh0bmFtZShmb250RmlsZSk7CgogIGxldCBmb250TmFtZSA9IHBhdGguYmFzZW5hbWUoZm9udEZpbGUsIGV4dCk7CiAgbGV0IHN0eWxlID0gbmV3IFRleHRTdHlsZShmb250RmlsZSwgZm9udFNpemUpOwogIGxldCBzdHIgPSB1dGlsLnJhbmdlKDB4MjAsIDB4ODApLnJlZHVjZSgocywgbikgPT4gcyArIFN0cmluZy5mcm9tQ29kZVBvaW50KG4pLCAnJyk7CgogIGxldCBzaXplID0gc3R5bGUuc2l6ZShzdHIpOwogIGxldCByZWN0ID0gbmV3IGN2LlJlY3QoMSwgMSwgc2l6ZS53aWR0aCwgc2l6ZS5oZWlnaHQgKyAyKTsKCiAgbGV0IHBvd2VyT2YyID0gbiA9PiBNYXRoLnBvdygyLCBNYXRoLmNlaWwoTWF0aC5sb2cyKG4pKSk7CgogIGxldCBkaW0gPSBuZXcgY3YuU2l6ZShwb3dlck9mMihyZWN0LndpZHRoKSwgcG93ZXJPZjIocmVjdC5oZWlnaHQpKTsKICBjb25zb2xlLmxvZygnZGltJywgZGltKTsKICBtYXQgPSBuZXcgY3YuTWF0KGRpbSwgY3YuQ1ZfOFVDMyk7CiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbbWF0LmNvbHMgLSAxLCBtYXQucm93cyAtIDFdLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBzdGVwID0gTWF0aC5yb3VuZChyZWN0LndpZHRoIC8gc3RyLmxlbmd0aCk7CiAgY29uc29sZS5sb2coJ3N0ZXAnLCBzdGVwKTsKICBjb25zb2xlLmxvZygncmVjdC5oZWlnaHQnLCByZWN0LmhlaWdodCk7CiAgbGV0IGJveGVzID0gcmVjdC5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0LndpZHRoLCBzdGVwKSk7CiAgLy8gY29uc29sZS5sb2coJ2JveGVzJywgYm94ZXMpOwoKICBzdHlsZS5kcmF3KG1hdCwgc3RyLCBuZXcgY3YuUG9pbnQoMSwgMCksIGNvbG9yc1swXSwgLTEsIGN2LkxJTkVfOCk7CgogIGxldCBncmF5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LmN2dENvbG9yKG1hdCwgZ3JheSwgY3YuQ09MT1JfQkdSMkdSQVkpOwoKICBsZXQgcm9pID0gZ3JheShyZWN0KTsKICBsZXQgcmVjdDIgPSBuZXcgY3YuUmVjdCgwLCAwLCByb2kuY29scywgcm9pLnJvd3MpOwoKICBjb25zb2xlLmxvZygnZ3JheScsIGdyYXkpOwogIGNvbnNvbGUubG9nKCdyb2knLCByb2kpOwogIGNvbnNvbGUubG9nKCdjdi50aHJlc2hvbGQnLCBjdi50aHJlc2hvbGQpOwogIGxldCBib3hlczIgPSByZWN0Mi5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0Mi53aWR0aCwgc3RlcCkpOwoKICBsZXQgYmluYXJ5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LnRocmVzaG9sZChyb2ksIGJpbmFyeSwgNTAsIDI1NSwgY3YuVEhSRVNIX0JJTkFSWV9JTlYpOwoKICBjb25zb2xlLmxvZygnYmluYXJ5JywgYmluYXJ5KTsKICAvLyAgY29uc29sZS5sb2coJ2JpbmFyeS5jb2xSYW5nZSgpJywgYmluYXJ5LmNvbFJhbmdlKCkpOwoKICB1dGlsLnJhbmdlKDB4MzAsIDB4MzkpLmZvckVhY2goY29kZSA9PiB7CiAgICBkdW1wQ2hhcihjb2RlKTsKICB9KTsKCiAgZnVuY3Rpb24gZHVtcENoYXIoY29kZSkgewogICAgY29uc3QgaW5kZXggPSBjb2RlIDwgMzIgPyAwIDogY29kZSAtIDMyOwogICAgbGV0IGJveCA9IG5ldyBjdi5SZWN0KGJveGVzMltpbmRleF0pOwoKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwogICAgYm94LnkxICs9IDE7CiAgICAvLyBib3gueDIgLT0gMTsKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwoKICAgIGxldCB7IGFyZWEgfSA9IGJveC5zaXplOwogICAgY29uc29sZS5sb2coJ2JveC5zaXplJywgYm94LnNpemUpOwogICAgY29uc29sZS5sb2coJ3NpemUuYXJlYScsIGFyZWEpOwogICAgY29uc3QgYnl0ZXMgPSAoYXJlYSArIDcpID4+IDM7CiAgICBjb25zb2xlLmxvZygnYnl0ZXMnLCBieXRlcyk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJ5dGVzIDw8IDMpOwoKICAgIGNvbnN0IFJlY3RSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5SZWN0KC4uLmxpc3Quc2hpZnQoKSk7CiAgICAgIGNvbnNvbGUubG9nKCdmaXJzdCcsIGZpcnN0KTsKICAgICAgcmV0dXJuIGxpc3QucmVkdWNlKChhLCBvKSA9PiB7CiAgICAgICAgaWYoJ3gnIGluIG8gJiYgJ3dpZHRoJyBpbiBvKSB7CiAgICAgICAgICBhLnggPSBNYXRoLm1pbihhLngsIG8ueCk7CiAgICAgICAgICBhLndpZHRoID0gTWF0aC5tYXgoYS54ICsgYS53aWR0aCwgby54ICsgby53aWR0aCkgLSBhLng7CiAgICAgICAgfQogICAgICAgIGlmKCd5JyBpbiBvICYmICdoZWlnaHQnIGluIG8pIHsKICAgICAgICAgIGEueSA9IE1hdGgubWluKGEueSwgby55KTsKICAgICAgICAgIGEuaGVpZ2h0ID0gTWF0aC5tYXgoYS55ICsgYS5oZWlnaHQsIG8ueSArIG8uaGVpZ2h0KSAtIGEueTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGE7CiAgICAgIH0sIGZpcnN0KTsKICAgIH07CgogICAgY29uc3QgUG9pbnRSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5Qb2ludCguLi5saXN0LnNoaWZ0KCkpOwogICAgICBsZXQgcmVjdCA9IG5ldyBjdi5SZWN0KGZpcnN0LngsIGZpcnN0LnksIDAsIDApOwogICAgICBjb25zb2xlLmxvZygncmVjdCcsIHJlY3QpOwogICAgICByZXR1cm4gbGlzdC5yZWR1Y2UoKGEsIG8pID0+IHsKICAgICAgICBpZihhLngxID4gby54KSBhLngxID0gby54OwogICAgICAgIGlmKGEueDIgPCBvLngpIGEueDIgPSBvLng7CiAgICAgICAgaWYoYS55MSA+IG8ueSkgYS55MSA9IG8ueTsKICAgICAgICBpZihhLnkyIDwgby55KSBhLnkyID0gby55OwogICAgICAgIHJldHVybiBhOwogICAgICB9LCByZWN0KTsKICAgIH07CgogICAgbGV0IGEgPSBbLi4uYmluYXJ5KGJveCldLm1hcChuID0+ICEhbik7CgogICAgbGV0IGNvbnRvdXIgPSBuZXcgY3YuQ29udG91cihbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAocCA9PiBuZXcgY3YuUG9pbnQoLi4ucCkpKTsKCiAgICBjb25zb2xlLmxvZygnY29udG91ci5ib3VuZGluZ1JlY3QnLCBjb250b3VyLmJvdW5kaW5nUmVjdCk7CiAgICAvL2NvbnNvbGUubG9nKCdjb250b3VyJyxbLi4uY29udG91cl0pOwoKICAgIGxldCBwb2ludExpc3QgPSBbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAoKFtjb29yZCwgZW50cnldKSA9PiBuZXcgY3YuUG9pbnQoLi4uY29vcmQpKTsKICAgIC8vY29uc29sZS5sb2coJ3BvaW50TGlzdCcsICAocG9pbnRMaXN0KSk7CiAgICBjb25zb2xlLmxvZygnUG9pbnRSZWR1Y2VyKHBvaW50TGlzdCknLCBQb2ludFJlZHVjZXIocG9pbnRMaXN0KSk7CgogICAgbGV0IGJmID0gdXRpbC5hcnJheVRvQml0ZmllbGQoYSk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJmKTsKICAgIGNvbnNvbGUubG9nKAogICAgICBgYml0cyBmb3IgJyR7U3RyaW5nLmZyb21Db2RlUG9pbnQoY29kZSl9J2AsCiAgICAgICdcbicgKwogICAgICAgIHV0aWwKICAgICAgICAgIC5jaHVua0FycmF5KAogICAgICAgICAgICB1dGlsLmJpdGZpZWxkVG9BcnJheShiZikubWFwKHYgPT4gKHYgPyAnXHUyNTg4XHUyNTg4JyA6ICcgICcpKSwKICAgICAgICAgICAgYm94LndpZHRoCiAgICAgICAgICApCiAgICAgICAgICAubWFwKHJvdyA9PiByb3cuam9pbignJykpCiAgICAgICAgICAuam9pbignXG4nKQogICAgKTsKICB9CgogIC8vICBjb25zb2xlLmxvZygnYml0cycsdXRpbC5iaXRmaWVsZFRvQXJyYXkoYmYpLnJlZHVjZSgocyx2KSA9PiBzKyh2fDApLnRvU3RyaW5nKCksICcnKSk7CgogIGZ1bmN0aW9uIHdyaXRlUk9JKGksIHJlY3QpIHsKICAgIGxldCByb2kgPSBtYXQocmVjdCk7CiAgICBsZXQgaWQgPSAnMHgnICsgKGkgKyAweDIwKS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKTsKICAgIGxldCBmaWxlbmFtZSA9IGZvbnROYW1lICsgJy0nICsgaWQgKyAnLnBuZyc7CiAgICBjdi5pbXdyaXRlKGZpbGVuYW1lLCByb2kpOwogICAgY29uc29sZS5sb2coJ3dyaXRlIHJvaSB0bycsIGZpbGVuYW1lKTsKICB9CgogIC8vICBib3hlcy5mb3JFYWNoKChib3gsIGkpID0+IHdyaXRlUk9JKGksIGJveCkpOwoKICBmb3IobGV0IGJveCBvZiBib3hlcykgY3YucmVjdGFuZ2xlKG1hdCwgYm94LnRsLCBib3guYnIuc3ViKDEsIDEpLCBbMjU1LCAwLCAwXSwgMSwgY3YuTElORV84KTsKCiAgLyogY3YucmVzaXplV2luZG93KCdvdXQnLCBtYXQuY29scyAqIDIsIG1hdC5yb3dzICogMik7CiAgY3YuaW1zaG93KCdvdXQnLCBtYXQpOwoKICBjdi53YWl0S2V5KC0xKTsqLwp9CgptYWluKC4uLnByb2Nlc3MuYXJndi5zbGljZSgxKSk7CgAAAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXCAAAAAAAAJ8IAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcEwAAaW1wb3J0ICogYXMgY3YgZnJvbSAnb3BlbmN2JzsKaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IHsgV2luZG93LCBNb3VzZUZsYWdzLCBNb3VzZUV2ZW50cywgTW91c2UsIFRleHRTdHlsZSwgRHJhd1RleHQgfSBmcm9tICcuLi9qcy9jdkhpZ2hHVUkuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3YpIHsKICBjb25zdCBhcmdzID0gYXJndi5zbGljZSgxKTsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAyLAogICAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICAgIGNvbXBhY3Q6IDEKICAgIH0KICB9KTsKCiAgLyogY3YubmFtZWRXaW5kb3coJ291dCcpOwogIGN2LnJlc2l6ZVdpbmRvdygnb3V0JywgNjQwLCA0ODApOyovCiAgbGV0IG1hdDsKICBsZXQgY29sb3JzID0gWwogICAgWzAsIDAsIDBdLAogICAgWzI1NSwgMjU1LCAyNTVdCiAgXTsKCiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbNjM5LCA0NzldLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBbZm9udEZpbGUgPSAnTWlzY0ZpeGVkU0M2MTMudHRmJywgZm9udFNpemUgPSAxMl0gPSBhcmdzOwoKICBjb25zb2xlLmxvZygnZm9udEZpbGUnLCBmb250RmlsZSk7CiAgbGV0IGV4dCA9IHBhdGguZXh0bmFtZShmb250RmlsZSk7CgogIGxldCBmb250TmFtZSA9IHBhdGguYmFzZW5hbWUoZm9udEZpbGUsIGV4dCk7CiAgbGV0IHN0eWxlID0gbmV3IFRleHRTdHlsZShmb250RmlsZSwgZm9udFNpemUpOwogIGxldCBzdHIgPSB1dGlsLnJhbmdlKDB4MjAsIDB4ODApLnJlZHVjZSgocywgbikgPT4gcyArIFN0cmluZy5mcm9tQ29kZVBvaW50KG4pLCAnJyk7CgogIGxldCBzaXplID0gc3R5bGUuc2l6ZShzdHIpOwogIGxldCByZWN0ID0gbmV3IGN2LlJlY3QoMSwgMSwgc2l6ZS53aWR0aCwgc2l6ZS5oZWlnaHQgKyAyKTsKCiAgbGV0IHBvd2VyT2YyID0gbiA9PiBNYXRoLnBvdygyLCBNYXRoLmNlaWwoTWF0aC5sb2cyKG4pKSk7CgogIGxldCBkaW0gPSBuZXcgY3YuU2l6ZShwb3dlck9mMihyZWN0LndpZHRoKSwgcG93ZXJPZjIocmVjdC5oZWlnaHQpKTsKICBjb25zb2xlLmxvZygnZGltJywgZGltKTsKICBtYXQgPSBuZXcgY3YuTWF0KGRpbSwgY3YuQ1ZfOFVDMyk7CiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbbWF0LmNvbHMgLSAxLCBtYXQucm93cyAtIDFdLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBzdGVwID0gTWF0aC5yb3VuZChyZWN0LndpZHRoIC8gc3RyLmxlbmd0aCk7CiAgY29uc29sZS5sb2coJ3N0ZXAnLCBzdGVwKTsKICBjb25zb2xlLmxvZygncmVjdC5oZWlnaHQnLCByZWN0LmhlaWdodCk7CiAgbGV0IGJveGVzID0gcmVjdC5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0LndpZHRoLCBzdGVwKSk7CiAgLy8gY29uc29sZS5sb2coJ2JveGVzJywgYm94ZXMpOwoKICBzdHlsZS5kcmF3KG1hdCwgc3RyLCBuZXcgY3YuUG9pbnQoMSwgMCksIGNvbG9yc1swXSwgLTEsIGN2LkxJTkVfOCk7CgogIGxldCBncmF5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LmN2dENvbG9yKG1hdCwgZ3JheSwgY3YuQ09MT1JfQkdSMkdSQVkpOwoKICBsZXQgcm9pID0gZ3JheShyZWN0KTsKICBsZXQgcmVjdDIgPSBuZXcgY3YuUmVjdCgwLCAwLCByb2kuY29scywgcm9pLnJvd3MpOwoKICBjb25zb2xlLmxvZygnZ3JheScsIGdyYXkpOwogIGNvbnNvbGUubG9nKCdyb2knLCByb2kpOwogIGNvbnNvbGUubG9nKCdjdi50aHJlc2hvbGQnLCBjdi50aHJlc2hvbGQpOwogIGxldCBib3hlczIgPSByZWN0Mi5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0Mi53aWR0aCwgc3RlcCkpOwoKICBsZXQgYmluYXJ5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LnRocmVzaG9sZChyb2ksIGJpbmFyeSwgNTAsIDI1NSwgY3YuVEhSRVNIX0JJTkFSWV9JTlYpOwoKICBjb25zb2xlLmxvZygnYmluYXJ5JywgYmluYXJ5KTsKICAvLyAgY29uc29sZS5sb2coJ2JpbmFyeS5jb2xSYW5nZSgpJywgYmluYXJ5LmNvbFJhbmdlKCkpOwoKICB1dGlsLnJhbmdlKDB4MzAsIDB4MzkpLmZvckVhY2goY29kZSA9PiB7CiAgICBkdW1wQ2hhcihjb2RlKTsKICB9KTsKCiAgZnVuY3Rpb24gZHVtcENoYXIoY29kZSkgewogICAgY29uc3QgaW5kZXggPSBjb2RlIDwgMzIgPyAwIDogY29kZSAtIDMyOwogICAgbGV0IGJveCA9IG5ldyBjdi5SZWN0KGJveGVzMltpbmRleF0pOwoKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwogICAgYm94LnkxICs9IDE7CiAgICAvLyBib3gueDIgLT0gMTsKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwoKICAgIGxldCB7IGFyZWEgfSA9IGJveC5zaXplOwogICAgY29uc29sZS5sb2coJ2JveC5zaXplJywgYm94LnNpemUpOwogICAgY29uc29sZS5sb2coJ3NpemUuYXJlYScsIGFyZWEpOwogICAgY29uc3QgYnl0ZXMgPSAoYXJlYSArIDcpID4+IDM7CiAgICBjb25zb2xlLmxvZygnYnl0ZXMnLCBieXRlcyk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJ5dGVzIDw8IDMpOwoKICAgIGNvbnN0IFJlY3RSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5SZWN0KC4uLmxpc3Quc2hpZnQoKSk7CiAgICAgIGNvbnNvbGUubG9nKCdmaXJzdCcsIGZpcnN0KTsKICAgICAgcmV0dXJuIGxpc3QucmVkdWNlKChhLCBvKSA9PiB7CiAgICAgICAgaWYoJ3gnIGluIG8gJiYgJ3dpZHRoJyBpbiBvKSB7CiAgICAgICAgICBhLnggPSBNYXRoLm1pbihhLngsIG8ueCk7CiAgICAgICAgICBhLndpZHRoID0gTWF0aC5tYXgoYS54ICsgYS53aWR0aCwgby54ICsgby53aWR0aCkgLSBhLng7CiAgICAgICAgfQogICAgICAgIGlmKCd5JyBpbiBvICYmICdoZWlnaHQnIGluIG8pIHsKICAgICAgICAgIGEueSA9IE1hdGgubWluKGEueSwgby55KTsKICAgICAgICAgIGEuaGVpZ2h0ID0gTWF0aC5tYXgoYS55ICsgYS5oZWlnaHQsIG8ueSArIG8uaGVpZ2h0KSAtIGEueTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGE7CiAgICAgIH0sIGZpcnN0KTsKICAgIH07CgogICAgY29uc3QgUG9pbnRSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5Qb2ludCguLi5saXN0LnNoaWZ0KCkpOwogICAgICBsZXQgcmVjdCA9IG5ldyBjdi5SZWN0KGZpcnN0LngsIGZpcnN0LnksIDAsIDApOwogICAgICBjb25zb2xlLmxvZygncmVjdCcsIHJlY3QpOwogICAgICByZXR1cm4gbGlzdC5yZWR1Y2UoKGEsIG8pID0+IHsKICAgICAgICBpZihhLngxID4gby54KSBhLngxID0gby54OwogICAgICAgIGlmKGEueDIgPCBvLngpIGEueDIgPSBvLng7CiAgICAgICAgaWYoYS55MSA+IG8ueSkgYS55MSA9IG8ueTsKICAgICAgICBpZihhLnkyIDwgby55KSBhLnkyID0gby55OwogICAgICAgIHJldHVybiBhOwogICAgICB9LCByZWN0KTsKICAgIH07CgogICAgbGV0IGEgPSBbLi4uYmluYXJ5KGJveCldLm1hcChuID0+ICEhbik7CgogICAgbGV0IGNvbnRvdXIgPSBuZXcgY3YuQ29udG91cihbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAocCA9PiBuZXcgY3YuUG9pbnQoLi4ucCkpKTsKCiAgICBjb25zb2xlLmxvZygnY29udG91ci5ib3VuZGluZ1JlY3QnLCBjb250b3VyLmJvdW5kaW5nUmVjdCk7CiAgICAvL2NvbnNvbGUubG9nKCdjb250b3VyJyxbLi4uY29udG91cl0pOwoKICAgIGxldCBwb2ludExpc3QgPSBbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAoKFtjb29yZCwgZW50cnldKSA9PiBuZXcgY3YuUG9pbnQoLi4uY29vcmQpKTsKICAgIC8vY29uc29sZS5sb2coJ3BvaW50TGlzdCcsICAocG9pbnRMaXN0KSk7CiAgICBjb25zb2xlLmxvZygnUG9pbnRSZWR1Y2VyKHBvaW50TGlzdCknLCBQb2ludFJlZHVjZXIocG9pbnRMaXN0KSk7CgogICAgbGV0IGJmID0gdXRpbC5hcnJheVRvQml0ZmllbGQoYSk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJmKTsKICAgIGNvbnNvbGUubG9nKAogICAgICBgYml0cyBmb3IgJyR7U3RyaW5nLmZyb21Db2RlUG9pbnQoY29kZSl9J2AsCiAgICAgICdcbicgKwogICAgICAgIHV0aWwKICAgICAgICAgIC5jaHVua0FycmF5KAogICAgICAgICAgICB1dGlsLmJpdGZpZWxkVG9BcnJheShiZikubWFwKHYgPT4gKHYgPyAnXHUyNTg4XHUyNTg4JyA6ICcgICcpKSwKICAgICAgICAgICAgYm94LndpZHRoCiAgICAgICAgICApCiAgICAgICAgICAubWFwKHJvdyA9PiByb3cuam9pbignJykpCiAgICAgICAgICAuam9pbignXG4nKQogICAgKTsKICB9CgogIC8vICBjb25zb2xlLmxvZygnYml0cycsdXRpbC5iaXRmaWVsZFRvQXJyYXkoYmYpLnJlZHVjZSgocyx2KSA9PiBzKyh2fDApLnRvU3RyaW5nKCksICcnKSk7CgogIGZ1bmN0aW9uIHdyaXRlUk9JKGksIHJlY3QpIHsKICAgIGxldCByb2kgPSBtYXQocmVjdCk7CiAgICBsZXQgaWQgPSAnMHgnICsgKGkgKyAweDIwKS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKTsKICAgIGxldCBmaWxlbmFtZSA9IGZvbnROYW1lICsgJy0nICsgaWQgKyAnLnBuZyc7CiAgICBjdi5pbXdyaXRlKGZpbGVuYW1lLCByb2kpOwogICAgY29uc29sZS5sb2coJ3dyaXRlIHJvaSB0bycsIGZpbGVuYW1lKTsKICB9CgogIC8vICBib3hlcy5mb3JFYWNoKChib3gsIGkpID0+IHdyaXRlUk9JKGksIGJveCkpOwoKICBmb3IobGV0IGJveCBvZiBib3hlcykgY3YucmVjdGFuZ2xlKG1hdCwgYm94LnRsLCBib3guYnIuc3ViKDEsIDEpLCBbMjU1LCAwLCAwXSwgMSwgY3YuTElORV84KTsKCiBjdi5yZXNpemVXaW5kb3coJ291dCcsIG1hdC5jb2xzICogMiwgbWF0LnJvd3MgKiAyKTsKICBjdi5pbXNob3coJ291dCcsIG1hdCk7CgogIGN2LndhaXRLZXkoLTEpOwp9CgptYWluKC4uLnByb2Nlc3MuYXJndi5zbGljZSgxKSk7CgAAAAAAAAAAnRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXCAAAAAAAAJ8IAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACdEwAAaW1wb3J0ICogYXMgY3YgZnJvbSAnb3BlbmN2JzsKaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IHsgV2luZG93LCBNb3VzZUZsYWdzLCBNb3VzZUV2ZW50cywgTW91c2UsIFRleHRTdHlsZSwgRHJhd1RleHQgfSBmcm9tICcuLi9qcy9jdkhpZ2hHVUkuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3YpIHsKICBjb25zdCBhcmdzID0gYXJndi5zbGljZSgxKTsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAyLAogICAgICBtYXhBcnJheUxlbmd0aDogSW5maW5pdHksCiAgICAgIGNvbXBhY3Q6IDEKICAgIH0KICB9KTsKCiAgLyogY3YubmFtZWRXaW5kb3coJ291dCcpOwogIGN2LnJlc2l6ZVdpbmRvdygnb3V0JywgNjQwLCA0ODApOyovCiAgbGV0IG1hdDsKICBsZXQgY29sb3JzID0gWwogICAgWzAsIDAsIDBdLAogICAgWzI1NSwgMjU1LCAyNTVdCiAgXTsKCiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbNjM5LCA0NzldLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBbZm9udEZpbGUgPSAnTWlzY0ZpeGVkU0M2MTMudHRmJywgZm9udFNpemUgPSAxMl0gPSBhcmdzOwoKICBjb25zb2xlLmxvZygnZm9udEZpbGUnLCBmb250RmlsZSk7CiAgbGV0IGV4dCA9IHBhdGguZXh0bmFtZShmb250RmlsZSk7CgogIGxldCBmb250TmFtZSA9IHBhdGguYmFzZW5hbWUoZm9udEZpbGUsIGV4dCk7CiAgbGV0IHN0eWxlID0gbmV3IFRleHRTdHlsZShmb250RmlsZSwgZm9udFNpemUpOwogIGxldCBzdHIgPSB1dGlsLnJhbmdlKDB4MjAsIDB4ODApLnJlZHVjZSgocywgbikgPT4gcyArIFN0cmluZy5mcm9tQ29kZVBvaW50KG4pLCAnJyk7CgogIGxldCBzaXplID0gc3R5bGUuc2l6ZShzdHIpOwogIGxldCByZWN0ID0gbmV3IGN2LlJlY3QoMSwgMSwgc2l6ZS53aWR0aCwgc2l6ZS5oZWlnaHQgKyAyKTsKCiAgbGV0IHBvd2VyT2YyID0gbiA9PiBNYXRoLnBvdygyLCBNYXRoLmNlaWwoTWF0aC5sb2cyKG4pKSk7CgogIGxldCBkaW0gPSBuZXcgY3YuU2l6ZShwb3dlck9mMihyZWN0LndpZHRoKSwgcG93ZXJPZjIocmVjdC5oZWlnaHQpKTsKICBjb25zb2xlLmxvZygnZGltJywgZGltKTsKICBtYXQgPSBuZXcgY3YuTWF0KGRpbSwgY3YuQ1ZfOFVDMyk7CiAgY3YucmVjdGFuZ2xlKG1hdCwgWzAsIDBdLCBbbWF0LmNvbHMgLSAxLCBtYXQucm93cyAtIDFdLCBjb2xvcnNbMV0sIGN2LkZJTExFRCk7CgogIGxldCBzdGVwID0gTWF0aC5yb3VuZChyZWN0LndpZHRoIC8gc3RyLmxlbmd0aCk7CiAgY29uc29sZS5sb2coJ3N0ZXAnLCBzdGVwKTsKICBjb25zb2xlLmxvZygncmVjdC5oZWlnaHQnLCByZWN0LmhlaWdodCk7CiAgbGV0IGJveGVzID0gcmVjdC5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0LndpZHRoLCBzdGVwKSk7CiAgLy8gY29uc29sZS5sb2coJ2JveGVzJywgYm94ZXMpOwoKICBzdHlsZS5kcmF3KG1hdCwgc3RyLCBuZXcgY3YuUG9pbnQoMSwgMCksIGNvbG9yc1swXSwgLTEsIGN2LkxJTkVfOCk7CgogIGxldCBncmF5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LmN2dENvbG9yKG1hdCwgZ3JheSwgY3YuQ09MT1JfQkdSMkdSQVkpOwoKICBsZXQgcm9pID0gZ3JheShyZWN0KTsKICBsZXQgcmVjdDIgPSBuZXcgY3YuUmVjdCgwLCAwLCByb2kuY29scywgcm9pLnJvd3MpOwoKICBjb25zb2xlLmxvZygnZ3JheScsIGdyYXkpOwogIGNvbnNvbGUubG9nKCdyb2knLCByb2kpOwogIGNvbnNvbGUubG9nKCdjdi50aHJlc2hvbGQnLCBjdi50aHJlc2hvbGQpOwogIGxldCBib3hlczIgPSByZWN0Mi5oc3BsaXQoLi4udXRpbC5yYW5nZSgwLCByZWN0Mi53aWR0aCwgc3RlcCkpOwoKICBsZXQgYmluYXJ5ID0gbmV3IGN2Lk1hdCgpOwogIGN2LnRocmVzaG9sZChyb2ksIGJpbmFyeSwgNTAsIDI1NSwgY3YuVEhSRVNIX0JJTkFSWV9JTlYpOwoKICBjb25zb2xlLmxvZygnYmluYXJ5JywgYmluYXJ5KTsKICAvLyAgY29uc29sZS5sb2coJ2JpbmFyeS5jb2xSYW5nZSgpJywgYmluYXJ5LmNvbFJhbmdlKCkpOwoKICB1dGlsLnJhbmdlKDB4MzAsIDB4MzkpLmZvckVhY2goY29kZSA9PiB7CiAgICBkdW1wQ2hhcihjb2RlKTsKICB9KTsKCiAgZnVuY3Rpb24gZHVtcENoYXIoY29kZSkgewogICAgY29uc3QgaW5kZXggPSBjb2RlIDwgMzIgPyAwIDogY29kZSAtIDMyOwogICAgbGV0IGJveCA9IG5ldyBjdi5SZWN0KGJveGVzMltpbmRleF0pOwoKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwogICAgYm94LnkxICs9IDE7CiAgICAvLyBib3gueDIgLT0gMTsKICAgIGNvbnNvbGUubG9nKCdib3gnLCBib3gpOwoKICAgIGxldCB7IGFyZWEgfSA9IGJveC5zaXplOwogICAgY29uc29sZS5sb2coJ2JveC5zaXplJywgYm94LnNpemUpOwogICAgY29uc29sZS5sb2coJ3NpemUuYXJlYScsIGFyZWEpOwogICAgY29uc3QgYnl0ZXMgPSAoYXJlYSArIDcpID4+IDM7CiAgICBjb25zb2xlLmxvZygnYnl0ZXMnLCBieXRlcyk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJ5dGVzIDw8IDMpOwoKICAgIGNvbnN0IFJlY3RSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5SZWN0KC4uLmxpc3Quc2hpZnQoKSk7CiAgICAgIGNvbnNvbGUubG9nKCdmaXJzdCcsIGZpcnN0KTsKICAgICAgcmV0dXJuIGxpc3QucmVkdWNlKChhLCBvKSA9PiB7CiAgICAgICAgaWYoJ3gnIGluIG8gJiYgJ3dpZHRoJyBpbiBvKSB7CiAgICAgICAgICBhLnggPSBNYXRoLm1pbihhLngsIG8ueCk7CiAgICAgICAgICBhLndpZHRoID0gTWF0aC5tYXgoYS54ICsgYS53aWR0aCwgby54ICsgby53aWR0aCkgLSBhLng7CiAgICAgICAgfQogICAgICAgIGlmKCd5JyBpbiBvICYmICdoZWlnaHQnIGluIG8pIHsKICAgICAgICAgIGEueSA9IE1hdGgubWluKGEueSwgby55KTsKICAgICAgICAgIGEuaGVpZ2h0ID0gTWF0aC5tYXgoYS55ICsgYS5oZWlnaHQsIG8ueSArIG8uaGVpZ2h0KSAtIGEueTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGE7CiAgICAgIH0sIGZpcnN0KTsKICAgIH07CgogICAgY29uc3QgUG9pbnRSZWR1Y2VyID0gbGlzdCA9PiB7CiAgICAgIGxldCBmaXJzdCA9IG5ldyBjdi5Qb2ludCguLi5saXN0LnNoaWZ0KCkpOwogICAgICBsZXQgcmVjdCA9IG5ldyBjdi5SZWN0KGZpcnN0LngsIGZpcnN0LnksIDAsIDApOwogICAgICBjb25zb2xlLmxvZygncmVjdCcsIHJlY3QpOwogICAgICByZXR1cm4gbGlzdC5yZWR1Y2UoKGEsIG8pID0+IHsKICAgICAgICBpZihhLngxID4gby54KSBhLngxID0gby54OwogICAgICAgIGlmKGEueDIgPCBvLngpIGEueDIgPSBvLng7CiAgICAgICAgaWYoYS55MSA+IG8ueSkgYS55MSA9IG8ueTsKICAgICAgICBpZihhLnkyIDwgby55KSBhLnkyID0gby55OwogICAgICAgIHJldHVybiBhOwogICAgICB9LCByZWN0KTsKICAgIH07CgogICAgbGV0IGEgPSBbLi4uYmluYXJ5KGJveCldLm1hcChuID0+ICEhbik7CgogICAgbGV0IGNvbnRvdXIgPSBuZXcgY3YuQ29udG91cihbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAocCA9PiBuZXcgY3YuUG9pbnQoLi4ucCkpKTsKCiAgICBjb25zb2xlLmxvZygnY29udG91ci5ib3VuZGluZ1JlY3QnLCBjb250b3VyLmJvdW5kaW5nUmVjdCk7CiAgICAvL2NvbnNvbGUubG9nKCdjb250b3VyJyxbLi4uY29udG91cl0pOwoKICAgIGxldCBwb2ludExpc3QgPSBbLi4uYmluYXJ5KGJveCkuZW50cmllcygpXS5maWx0ZXIoKFtjb29yZCwgZW50cnldKSA9PiBlbnRyeSAhPSAwKS5tYXAoKFtjb29yZCwgZW50cnldKSA9PiBuZXcgY3YuUG9pbnQoLi4uY29vcmQpKTsKICAgIC8vY29uc29sZS5sb2coJ3BvaW50TGlzdCcsICAocG9pbnRMaXN0KSk7CiAgICBjb25zb2xlLmxvZygnUG9pbnRSZWR1Y2VyKHBvaW50TGlzdCknLCBQb2ludFJlZHVjZXIocG9pbnRMaXN0KSk7CgogICAgbGV0IGJmID0gdXRpbC5hcnJheVRvQml0ZmllbGQoYSk7CiAgICBjb25zb2xlLmxvZygnYml0cycsIGJmKTsKICAgIGNvbnNvbGUubG9nKAogICAgICBgYml0cyBmb3IgJyR7U3RyaW5nLmZyb21Db2RlUG9pbnQoY29kZSl9J2AsCiAgICAgICdcbicgKwogICAgICAgIHV0aWwKICAgICAgICAgIC5jaHVua0FycmF5KAogICAgICAgICAgICB1dGlsLmJpdGZpZWxkVG9BcnJheShiZikubWFwKHYgPT4gKHYgPyAnXHUyNTg4XHUyNTg4JyA6ICcgICcpKSwKICAgICAgICAgICAgYm94LndpZHRoCiAgICAgICAgICApCiAgICAgICAgICAubWFwKHJvdyA9PiByb3cuam9pbignJykpCiAgICAgICAgICAuam9pbignXG4nKQogICAgKTsKICB9CgogIC8vICBjb25zb2xlLmxvZygnYml0cycsdXRpbC5iaXRmaWVsZFRvQXJyYXkoYmYpLnJlZHVjZSgocyx2KSA9PiBzKyh2fDApLnRvU3RyaW5nKCksICcnKSk7CgogIGZ1bmN0aW9uIHdyaXRlUk9JKGksIHJlY3QpIHsKICAgIGxldCByb2kgPSBtYXQocmVjdCk7CiAgICBsZXQgaWQgPSAnMHgnICsgKGkgKyAweDIwKS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKTsKICAgIGxldCBmaWxlbmFtZSA9IGZvbnROYW1lICsgJy0nICsgaWQgKyAnLnBuZyc7CiAgICBjdi5pbXdyaXRlKGZpbGVuYW1lLCByb2kpOwogICAgY29uc29sZS5sb2coJ3dyaXRlIHJvaSB0bycsIGZpbGVuYW1lKTsKICB9CgogIC8vICBib3hlcy5mb3JFYWNoKChib3gsIGkpID0+IHdyaXRlUk9JKGksIGJveCkpOwoKICBmb3IobGV0IGJveCBvZiBib3hlcykgY3YucmVjdGFuZ2xlKG1hdCwgYm94LnRsLCBib3guYnIuc3ViKDEsIDEpLCBbMjU1LCAwLCAwXSwgMSwgY3YuTElORV84KTsKCiAgY3YucmVzaXplV2luZG93KCdvdXQnLCBtYXQuY29scyAqIDIsIG1hdC5yb3dzICogMik7CiAgY3YuaW1zaG93KCdvdXQnLCBtYXQpOwoKICBjdi53YWl0S2V5KC0xKTsKfQoKbWFpbiguLi5wcm9jZXNzLmFyZ3Yuc2xpY2UoMSkpOwoAAAAAAAAAAIMUAAAAAAAAAAAAAAAAAAAAAAAAghQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXCAAAAAAAAJ8IAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "portmidi-testio.c",
			"settings":
			{
				"buffer_size": 15779,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsMAAAAAAAA2wwAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "quickjs/quickjs.c",
			"settings":
			{
				"buffer_size": 1522562,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 40236,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAx1kAAAAAAADUWQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/util.js",
			"settings":
			{
				"buffer_size": 184127,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-glfw/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 3417,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"cut",
					null,
					"AQAAAGYAAAAAAAAAZgAAAAAAAAAXAAAAaW5jbHVkZShGaW5kUGtnQ29uZmlnKQo",
					"AQAAAAAAAAABAAAAZgAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAGYAAAAAAAAAfQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArDAAAcHJvamVjdChxanMtZ2xmdyBDKQoKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCiMgaW5jbHVkZShGaW5kR0xFVykKaW5jbHVkZShGaW5kUGtnQ29uZmlnKQppbmNsdWRlKENoZWNrRnVuY3Rpb25FeGlzdHMpCgpwa2dfc2VhcmNoX21vZHVsZShHTEVXIGdsZXcpCnBrZ19zZWFyY2hfbW9kdWxlKEdMRlcgZ2xmdzMpCgpzZXQoR0xFV19MSUJSQVJZICIke3BrZ2NmZ19saWJfR0xFV19nbGV3MzJ9IikKc2V0KEdMRldfTElCUkFSWSAiJHtwa2djZmdfbGliX0dMRldfZ2xmdzN9IikKbWVzc2FnZShTVEFUVVMgIkdMRVdfTElCUkFSWTogJHtHTEVXX0xJQlJBUll9IikKbWVzc2FnZShTVEFUVVMgIkdMRldfTElCUkFSWTogJHtHTEZXX0xJQlJBUll9IikKCmZpbmRfcXVpY2tqcygpCgppZihXSU4zMikKICBhZGRfZGVmaW5pdGlvbnMoLURHTEZXX0RMTCkKZW5kaWYoV0lOMzIpCgpsaXN0KEFQUEVORCBDTUFLRV9SRVFVSVJFRF9JTkNMVURFUyAke0dMRldfSU5DTFVERV9ESVJTfSkKbGlzdChBUFBFTkQgQ01BS0VfUkVRVUlSRURfTElCUkFSSUVTICR7R0xGV19MSUJSQVJJRVN9KQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndHZXRFcnJvciBHTEZXX0dFVF9FUlJPUikKaWYoR0xGV19HRVRfRVJST1IpCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX0dFVF9FUlJPUj0xKQplbmRpZihHTEZXX0dFVF9FUlJPUikKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3R2V0TW9uaXRvckNvbnRlbnRTY2FsZSBHTEZXX0dFVF9NT05JVE9SX0NPTlRFTlRfU0NBTEUpCmlmKEdMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRSkKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRT0xKQplbmRpZihHTEZXX0dFVF9NT05JVE9SX0NPTlRFTlRfU0NBTEUpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd0dldE1vbml0b3JXb3JrYXJlYSBHTEZXX0dFVF9NT05JVE9SX1dPUktBUkVBKQppZihHTEZXX0dFVF9NT05JVE9SX1dPUktBUkVBKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19HRVRfTU9OSVRPUl9XT1JLQVJFQT0xKQplbmRpZihHTEZXX0dFVF9NT05JVE9SX1dPUktBUkVBKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndXaW5kb3dIaW50U3RyaW5nIEdMRldfV0lORE9XX0hJTlRfU1RSSU5HKQppZihHTEZXX1dJTkRPV19ISU5UX1NUUklORykKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfV0lORE9XX0hJTlRfU1RSSU5HPTEpCmVuZGlmKEdMRldfV0lORE9XX0hJTlRfU1RSSU5HKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndTZXRXaW5kb3dPcGFjaXR5IEdMRldfU0VUX1dJTkRPV19PUEFDSVRZKQppZihHTEZXX1NFVF9XSU5ET1dfT1BBQ0lUWSkKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfU0VUX1dJTkRPV19PUEFDSVRZPTEpCmVuZGlmKEdMRldfU0VUX1dJTkRPV19PUEFDSVRZKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndHZXRXaW5kb3dPcGFjaXR5IEdMRldfR0VUX1dJTkRPV19PUEFDSVRZKQppZihHTEZXX0dFVF9XSU5ET1dfT1BBQ0lUWSkKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfR0VUX1dJTkRPV19PUEFDSVRZPTEpCmVuZGlmKEdMRldfR0VUX1dJTkRPV19PUEFDSVRZKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndTZXRXaW5kb3dNYXhpbWl6ZUNhbGxiYWNrIEdMRldfU0VUX1dJTkRPV19NQVhJTUlaRV9DQUxMQkFDSykKaWYoR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLPTEpCmVuZGlmKEdMRldfU0VUX1dJTkRPV19NQVhJTUlaRV9DQUxMQkFDSykKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3U2V0V2luZG93Q29udGVudFNjYWxlQ2FsbGJhY2sgR0xGV19TRVRfV0lORE9XX0NPTlRFTlRfU0NBTEVfQ0FMTEJBQ0spCmlmKEdMRldfU0VUX1dJTkRPV19DT05URU5UX1NDQUxFX0NBTExCQUNLKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19TRVRfV0lORE9XX0NPTlRFTlRfU0NBTEVfQ0FMTEJBQ0s9MSkKZW5kaWYoR0xGV19TRVRfV0lORE9XX0NPTlRFTlRfU0NBTEVfQ0FMTEJBQ0spCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1JlcXVlc3RXaW5kb3dBdHRlbnRpb24gR0xGV19SRVFVRVNUX1dJTkRPV19BVFRFTlRJT04pCmlmKEdMRldfUkVRVUVTVF9XSU5ET1dfQVRURU5USU9OKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19SRVFVRVNUX1dJTkRPV19BVFRFTlRJT049MSkKZW5kaWYoR0xGV19SRVFVRVNUX1dJTkRPV19BVFRFTlRJT04pCgphZGRfbGlicmFyeShxanMtZ2xmdyBTSEFSRUQgZ2FtbWFfcmFtcC5jIGdhbW1hX3JhbXAuaCBnbGZ3LmMgZ2xmdy5oIG1vbml0b3IuYyBtb25pdG9yLmggcG9zaXRpb24uYyBwb3NpdGlvbi5oIHNjYWxlLmMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlLmggc2l6ZS5jIHNpemUuaCB2aWRlb19tb2RlLmMgdmlkZW9fbW9kZS5oIHdpbmRvdy5jIHdpbmRvdy5oIHdvcmthcmVhLmMgd29ya2FyZWEuaCkKCnNldF90YXJnZXRfcHJvcGVydGllcyhxanMtZ2xmdyBQUk9QRVJUSUVTIE9VVFBVVF9OQU1FIGdsZncgUFJFRklYICIiKQoKdGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZXMocWpzLWdsZncgUFJJVkFURSAke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vZ2xmdy9zcmMpCnRhcmdldF9saW5rX2xpYnJhcmllcyhxanMtZ2xmdyBQUklWQVRFICR7R0xFV19MSUJSQVJZfSAke0dMRldfTElCUkFSWX0gJHtRVUlDS0pTX0xJQlJBUll9KQp0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyhxanMtZ2xmdyBQUklWQVRFIEpTX1NIQVJFRF9MSUJSQVJZPTEpCmluc3RhbGwoVEFSR0VUUyBxanMtZ2xmdyBERVNUSU5BVElPTiBsaWIvcXVpY2tqcyBQRVJNSVNTSU9OUyBPV05FUl9SRUFEIE9XTkVSX1dSSVRFIE9XTkVSX0VYRUNVVEUgR1JPVVBfUkVBRAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR1JPVVBfRVhFQ1VURSBXT1JMRF9SRUFEIFdPUkxEX0VYRUNVVEUpCgAAAAAAAAAAaQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpDAAAcHJvamVjdChxanMtZ2xmdyBDKQoKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL1VzZU11bHRpQXJjaC5jbWFrZSkKIyBpbmNsdWRlKEZpbmRHTEVXKQppbmNsdWRlKEZpbmRQa2dDb25maWcpCmluY2x1ZGUoQ2hlY2tGdW5jdGlvbkV4aXN0cykKCnBrZ19zZWFyY2hfbW9kdWxlKEdMRVcgZ2xldykKcGtnX3NlYXJjaF9tb2R1bGUoR0xGVyBnbGZ3MykKCnNldChHTEVXX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9HTEVXX2dsZXczMn0iKQpzZXQoR0xGV19MSUJSQVJZICIke3BrZ2NmZ19saWJfR0xGV19nbGZ3M30iKQptZXNzYWdlKFNUQVRVUyAiR0xFV19MSUJSQVJZOiAke0dMRVdfTElCUkFSWX0iKQptZXNzYWdlKFNUQVRVUyAiR0xGV19MSUJSQVJZOiAke0dMRldfTElCUkFSWX0iKQoKZmluZF9xdWlja2pzKCkKCmlmKFdJTjMyKQogIGFkZF9kZWZpbml0aW9ucygtREdMRldfRExMKQplbmRpZihXSU4zMikKCmxpc3QoQVBQRU5EIENNQUtFX1JFUVVJUkVEX0lOQ0xVREVTICR7R0xGV19JTkNMVURFX0RJUlN9KQpsaXN0KEFQUEVORCBDTUFLRV9SRVFVSVJFRF9MSUJSQVJJRVMgJHtHTEZXX0xJQlJBUklFU30pCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd0dldEVycm9yIEdMRldfR0VUX0VSUk9SKQppZihHTEZXX0dFVF9FUlJPUikKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfR0VUX0VSUk9SPTEpCmVuZGlmKEdMRldfR0VUX0VSUk9SKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndHZXRNb25pdG9yQ29udGVudFNjYWxlIEdMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRSkKaWYoR0xGV19HRVRfTU9OSVRPUl9DT05URU5UX1NDQUxFKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19HRVRfTU9OSVRPUl9DT05URU5UX1NDQUxFPTEpCmVuZGlmKEdMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRSkKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3R2V0TW9uaXRvcldvcmthcmVhIEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCmlmKEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX0dFVF9NT05JVE9SX1dPUktBUkVBPTEpCmVuZGlmKEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1dpbmRvd0hpbnRTdHJpbmcgR0xGV19XSU5ET1dfSElOVF9TVFJJTkcpCmlmKEdMRldfV0lORE9XX0hJTlRfU1RSSU5HKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19XSU5ET1dfSElOVF9TVFJJTkc9MSkKZW5kaWYoR0xGV19XSU5ET1dfSElOVF9TVFJJTkcpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1NldFdpbmRvd09wYWNpdHkgR0xGV19TRVRfV0lORE9XX09QQUNJVFkpCmlmKEdMRldfU0VUX1dJTkRPV19PUEFDSVRZKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19TRVRfV0lORE9XX09QQUNJVFk9MSkKZW5kaWYoR0xGV19TRVRfV0lORE9XX09QQUNJVFkpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd0dldFdpbmRvd09wYWNpdHkgR0xGV19HRVRfV0lORE9XX09QQUNJVFkpCmlmKEdMRldfR0VUX1dJTkRPV19PUEFDSVRZKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19HRVRfV0lORE9XX09QQUNJVFk9MSkKZW5kaWYoR0xGV19HRVRfV0lORE9XX09QQUNJVFkpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1NldFdpbmRvd01heGltaXplQ2FsbGJhY2sgR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLKQppZihHTEZXX1NFVF9XSU5ET1dfTUFYSU1JWkVfQ0FMTEJBQ0spCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1NFVF9XSU5ET1dfTUFYSU1JWkVfQ0FMTEJBQ0s9MSkKZW5kaWYoR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndTZXRXaW5kb3dDb250ZW50U2NhbGVDYWxsYmFjayBHTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSykKaWYoR0xGV19TRVRfV0lORE9XX0NPTlRFTlRfU0NBTEVfQ0FMTEJBQ0spCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSz0xKQplbmRpZihHTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSykKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3UmVxdWVzdFdpbmRvd0F0dGVudGlvbiBHTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTikKaWYoR0xGV19SRVFVRVNUX1dJTkRPV19BVFRFTlRJT04pCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTj0xKQplbmRpZihHTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTikKCmFkZF9saWJyYXJ5KHFqcy1nbGZ3IFNIQVJFRCBnYW1tYV9yYW1wLmMgZ2FtbWFfcmFtcC5oIGdsZncuYyBnbGZ3LmggbW9uaXRvci5jIG1vbml0b3IuaCBwb3NpdGlvbi5jIHBvc2l0aW9uLmggc2NhbGUuYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGUuaCBzaXplLmMgc2l6ZS5oIHZpZGVvX21vZGUuYyB2aWRlb19tb2RlLmggd2luZG93LmMgd2luZG93Lmggd29ya2FyZWEuYyB3b3JrYXJlYS5oKQoKc2V0X3RhcmdldF9wcm9wZXJ0aWVzKHFqcy1nbGZ3IFBST1BFUlRJRVMgT1VUUFVUX05BTUUgZ2xmdyBQUkVGSVggIiIpCgp0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyhxanMtZ2xmdyBQUklWQVRFICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9nbGZ3L3NyYykKdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHFqcy1nbGZ3IFBSSVZBVEUgJHtHTEVXX0xJQlJBUll9ICR7R0xGV19MSUJSQVJZfSAke1FVSUNLSlNfTElCUkFSWX0pCnRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKHFqcy1nbGZ3IFBSSVZBVEUgSlNfU0hBUkVEX0xJQlJBUlk9MSkKaW5zdGFsbChUQVJHRVRTIHFqcy1nbGZ3IERFU1RJTkFUSU9OIGxpYi9xdWlja2pzIFBFUk1JU1NJT05TIE9XTkVSX1JFQUQgT1dORVJfV1JJVEUgT1dORVJfRVhFQ1VURSBHUk9VUF9SRUFECiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHUk9VUF9FWEVDVVRFIFdPUkxEX1JFQUQgV09STERfRVhFQ1VURSkKAAAAAAAAAACNDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNDQAAcHJvamVjdChxanMtZ2xmdyBDKQoKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL1VzZU11bHRpQXJjaC5jbWFrZSkKIyBpbmNsdWRlKEZpbmRHTEVXKQppbmNsdWRlKEZpbmRQa2dDb25maWcpCmluY2x1ZGUoQ2hlY2tGdW5jdGlvbkV4aXN0cykKCnBrZ19zZWFyY2hfbW9kdWxlKEdMRVcgZ2xldykKcGtnX3NlYXJjaF9tb2R1bGUoR0xGVyBnbGZ3MykKCnNldChHTEVXX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9HTEVXX2dsZXczMn0iKQpzZXQoR0xGV19MSUJSQVJZICIke3BrZ2NmZ19saWJfR0xGV19nbGZ3M30iKQptZXNzYWdlKFNUQVRVUyAiR0xFV19MSUJSQVJZOiAke0dMRVdfTElCUkFSWX0iKQptZXNzYWdlKFNUQVRVUyAiR0xGV19MSUJSQVJZOiAke0dMRldfTElCUkFSWX0iKQoKZmluZF9xdWlja2pzKCkKCmlmKFdJTjMyKQogIGFkZF9kZWZpbml0aW9ucygtREdMRldfRExMKQplbmRpZihXSU4zMikKCmxpc3QoQVBQRU5EIENNQUtFX1JFUVVJUkVEX0lOQ0xVREVTICR7R0xGV19JTkNMVURFX0RJUlN9KQpsaXN0KEFQUEVORCBDTUFLRV9SRVFVSVJFRF9MSUJSQVJJRVMgJHtHTEZXX0xJQlJBUklFU30pCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd0dldEVycm9yIEdMRldfR0VUX0VSUk9SKQppZihHTEZXX0dFVF9FUlJPUikKICBhZGRfZGVmaW5pdGlvbnMoLURIQVZFX0dMRldfR0VUX0VSUk9SPTEpCmVuZGlmKEdMRldfR0VUX0VSUk9SKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndHZXRNb25pdG9yQ29udGVudFNjYWxlIEdMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRSkKaWYoR0xGV19HRVRfTU9OSVRPUl9DT05URU5UX1NDQUxFKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19HRVRfTU9OSVRPUl9DT05URU5UX1NDQUxFPTEpCmVuZGlmKEdMRldfR0VUX01PTklUT1JfQ09OVEVOVF9TQ0FMRSkKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3R2V0TW9uaXRvcldvcmthcmVhIEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCmlmKEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX0dFVF9NT05JVE9SX1dPUktBUkVBPTEpCmVuZGlmKEdMRldfR0VUX01PTklUT1JfV09SS0FSRUEpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1dpbmRvd0hpbnRTdHJpbmcgR0xGV19XSU5ET1dfSElOVF9TVFJJTkcpCmlmKEdMRldfV0lORE9XX0hJTlRfU1RSSU5HKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19XSU5ET1dfSElOVF9TVFJJTkc9MSkKZW5kaWYoR0xGV19XSU5ET1dfSElOVF9TVFJJTkcpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1NldFdpbmRvd09wYWNpdHkgR0xGV19TRVRfV0lORE9XX09QQUNJVFkpCmlmKEdMRldfU0VUX1dJTkRPV19PUEFDSVRZKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19TRVRfV0lORE9XX09QQUNJVFk9MSkKZW5kaWYoR0xGV19TRVRfV0lORE9XX09QQUNJVFkpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd0dldFdpbmRvd09wYWNpdHkgR0xGV19HRVRfV0lORE9XX09QQUNJVFkpCmlmKEdMRldfR0VUX1dJTkRPV19PUEFDSVRZKQogIGFkZF9kZWZpbml0aW9ucygtREhBVkVfR0xGV19HRVRfV0lORE9XX09QQUNJVFk9MSkKZW5kaWYoR0xGV19HRVRfV0lORE9XX09QQUNJVFkpCgpjaGVja19mdW5jdGlvbl9leGlzdHMoZ2xmd1NldFdpbmRvd01heGltaXplQ2FsbGJhY2sgR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLKQppZihHTEZXX1NFVF9XSU5ET1dfTUFYSU1JWkVfQ0FMTEJBQ0spCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1NFVF9XSU5ET1dfTUFYSU1JWkVfQ0FMTEJBQ0s9MSkKZW5kaWYoR0xGV19TRVRfV0lORE9XX01BWElNSVpFX0NBTExCQUNLKQoKY2hlY2tfZnVuY3Rpb25fZXhpc3RzKGdsZndTZXRXaW5kb3dDb250ZW50U2NhbGVDYWxsYmFjayBHTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSykKaWYoR0xGV19TRVRfV0lORE9XX0NPTlRFTlRfU0NBTEVfQ0FMTEJBQ0spCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSz0xKQplbmRpZihHTEZXX1NFVF9XSU5ET1dfQ09OVEVOVF9TQ0FMRV9DQUxMQkFDSykKCmNoZWNrX2Z1bmN0aW9uX2V4aXN0cyhnbGZ3UmVxdWVzdFdpbmRvd0F0dGVudGlvbiBHTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTikKaWYoR0xGV19SRVFVRVNUX1dJTkRPV19BVFRFTlRJT04pCiAgYWRkX2RlZmluaXRpb25zKC1ESEFWRV9HTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTj0xKQplbmRpZihHTEZXX1JFUVVFU1RfV0lORE9XX0FUVEVOVElPTikKCmFkZF9saWJyYXJ5KHFqcy1nbGZ3IFNIQVJFRCBnYW1tYV9yYW1wLmMgZ2FtbWFfcmFtcC5oIGdsZncuYyBnbGZ3LmggbW9uaXRvci5jIG1vbml0b3IuaCBwb3NpdGlvbi5jIHBvc2l0aW9uLmggc2NhbGUuYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGUuaCBzaXplLmMgc2l6ZS5oIHZpZGVvX21vZGUuYyB2aWRlb19tb2RlLmggd2luZG93LmMgd2luZG93Lmggd29ya2FyZWEuYyB3b3JrYXJlYS5oKQoKc2V0X3RhcmdldF9wcm9wZXJ0aWVzKHFqcy1nbGZ3IFBST1BFUlRJRVMgT1VUUFVUX05BTUUgZ2xmdyBQUkVGSVggIiIpCgp0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyhxanMtZ2xmdyBQUklWQVRFICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9nbGZ3L3NyYykKdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHFqcy1nbGZ3IFBSSVZBVEUgJHtHTEVXX0xJQlJBUll9ICR7R0xGV19MSUJSQVJZfSAke1FVSUNLSlNfTElCUkFSWX0pCnRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKHFqcy1nbGZ3IFBSSVZBVEUgSlNfU0hBUkVEX0xJQlJBUlk9MSkKCgoKaWYoTk9UIENNQUtFX0lOU1RBTExfTElCRElSKQogIHNldChDTUFLRV9JTlNUQUxMX0xJQkRJUiBsaWIpCmVuZGlmKE5PVCBDTUFLRV9JTlNUQUxMX0xJQkRJUikKaWYoTk9UIFFVSUNLSlNfQ19NT0RVTEVfRElSKQogIHNldChRVUlDS0pTX0NfTU9EVUxFX0RJUiAiJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0vcXVpY2tqcyIpCmVuZGlmKE5PVCBRVUlDS0pTX0NfTU9EVUxFX0RJUikKCm1lc3NhZ2UoIlFVSUNLSlNfQ19NT0RVTEVfRElSOiAke1FVSUNLSlNfQ19NT0RVTEVfRElSfSIpCgppbnN0YWxsKFRBUkdFVFMgcWpzLWdsZncgREVTVElOQVRJT04gIiR7UVVJQ0tKU19DX01PRFVMRV9ESVJ9IiBQRVJNSVNTSU9OUyBPV05FUl9SRUFEIE9XTkVSX1dSSVRFIE9XTkVSX0VYRUNVVEUgR1JPVVBfUkVBRAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR1JPVVBfRVhFQ1VURSBXT1JMRF9SRUFEIFdPUkxEX0VYRUNVVEUpCgAAAAAAAAAAWQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-ffi/cmake/UseMultiArch.cmake",
			"settings":
			{
				"buffer_size": 1145,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB5BAAAaWYoVU5JWCBBTkQgTk9UIEFQUExFKQogIGluY2x1ZGUoR05VSW5zdGFsbERpcnMpCgplbHNlaWYoTk9UIERFRklORUQgQ01BS0VfSU5TVEFMTF9MSUJESVIpCiAgc2V0KENNQUtFX0lOU1RBTExfTElCRElSICIiIENBQ0hFIFBBVEggIlNwZWNpZnkgdGhlIG91dHB1dCBkaXJlY3RvcnkgZm9yIGxpYnJhcmllcyAoZGVmYXVsdCBpcyBsaWIpIikKZW5kaWYoKQoKaWYoTk9UIENNQUtFX0lOU1RBTExfTElCRElSIE9SICIke0NNQUtFX0lOU1RBTExfTElCRElSfSIgU1RSRVFVQUwgImxpYiIpCiAgZXhlY3V0ZV9wcm9jZXNzKENPTU1BTkQgY2MgLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBIT1NUX1NZU1RFTV9OQU1FIE9VVFBVVF9TVFJJUF9UUkFJTElOR19XSElURVNQQUNFKQogIGV4ZWN1dGVfcHJvY2VzcyhDT01NQU5EICR7Q01BS0VfQ19DT01QSUxFUn0gLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBTWVNURU1fTkFNRSBPVVRQVVRfU1RSSVBfVFJBSUxJTkdfV0hJVEVTUEFDRSkKCiAgaWYoTk9UICIke0hPU1RfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiJHtTWVNURU1fTkFNRX0iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgaTY4NiBpMzg2IENNQUtFX0NST1NTX0FSQ0ggIiR7U1lTVEVNX05BTUV9IikKICAgIG1lc3NhZ2UoIkNNQUtFX0NST1NTX0FSQ0ggPSAke0NNQUtFX0NST1NTX0FSQ0h9IikKICBlbmRpZigpCgogIHNldChDTUFLRV9DUk9TU19BUkNIICIke0NNQUtFX0NST1NTX0FSQ0h9IiBDQUNIRSBTVFJJTkcgIkNyb3NzIGNvbXBpbGluZyB0YXJnZXQiKQoKICBtZXNzYWdlKCJTWVNURU1fTkFNRSA9ICR7U1lTVEVNX05BTUV9IikKCiAgaWYoU1lTVEVNX05BTUUgQU5EIEVYSVNUUyAiJHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0vJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0vJHtTWVNURU1fTkFNRX0iKQogICAgc2V0KENNQUtFX0lOU1RBTExfTElCRElSIGxpYi8ke1NZU1RFTV9OQU1FfSkKICBlbmRpZihTWVNURU1fTkFNRSBBTkQgRVhJU1RTICIke0NNQUtFX0lOU1RBTExfUFJFRklYfS8ke0NNQUtFX0lOU1RBTExfTElCRElSfS8ke1NZU1RFTV9OQU1FfSIpCmVuZGlmKE5PVCBDTUFLRV9JTlNUQUxMX0xJQkRJUiBPUiAiJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0iIFNUUkVRVUFMICJsaWIiKQoAAAAAAAAAAHkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB5BAAAaWYoVU5JWCBBTkQgTk9UIEFQUExFKQogIGluY2x1ZGUoR05VSW5zdGFsbERpcnMpCgplbHNlaWYoTk9UIERFRklORUQgQ01BS0VfSU5TVEFMTF9MSUJESVIpCiAgc2V0KENNQUtFX0lOU1RBTExfTElCRElSICIiIENBQ0hFIFBBVEggIlNwZWNpZnkgdGhlIG91dHB1dCBkaXJlY3RvcnkgZm9yIGxpYnJhcmllcyAoZGVmYXVsdCBpcyBsaWIpIikKZW5kaWYoKQoKaWYoTk9UIENNQUtFX0lOU1RBTExfTElCRElSIE9SICIke0NNQUtFX0lOU1RBTExfTElCRElSfSIgU1RSRVFVQUwgImxpYiIpCiAgZXhlY3V0ZV9wcm9jZXNzKENPTU1BTkQgY2MgLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBIT1NUX1NZU1RFTV9OQU1FIE9VVFBVVF9TVFJJUF9UUkFJTElOR19XSElURVNQQUNFKQogIGV4ZWN1dGVfcHJvY2VzcyhDT01NQU5EICR7Q01BS0VfQ19DT01QSUxFUn0gLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBTWVNURU1fTkFNRSBPVVRQVVRfU1RSSVBfVFJBSUxJTkdfV0hJVEVTUEFDRSkKCiAgaWYoTk9UICIke0hPU1RfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiJHtTWVNURU1fTkFNRX0iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgaTY4NiBpMzg2IENNQUtFX0NST1NTX0FSQ0ggIiR7U1lTVEVNX05BTUV9IikKICAgIG1lc3NhZ2UoIkNNQUtFX0NST1NTX0FSQ0ggPSAke0NNQUtFX0NST1NTX0FSQ0h9IikKICBlbmRpZigpCgogIHNldChDTUFLRV9DUk9TU19BUkNIICIke0NNQUtFX0NST1NTX0FSQ0h9IiBDQUNIRSBTVFJJTkcgIkNyb3NzIGNvbXBpbGluZyB0YXJnZXQiKQoKICBtZXNzYWdlKCJTWVNURU1fTkFNRSA9ICR7U1lTVEVNX05BTUV9IikKCiAgaWYoU1lTVEVNX05BTUUgQU5EIEVYSVNUUyAiJHtDTUFLRV9JTlNUQUxMX1BSRUZJWH0vJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0vJHtTWVNURU1fTkFNRX0iKQogICAgc2V0KENNQUtFX0lOU1RBTExfTElCRElSIGxpYi8ke1NZU1RFTV9OQU1FfSkKICBlbmRpZihTWVNURU1fTkFNRSBBTkQgRVhJU1RTICIke0NNQUtFX0lOU1RBTExfUFJFRklYfS8ke0NNQUtFX0lOU1RBTExfTElCRElSfS8ke1NZU1RFTV9OQU1FfSIpCmVuZGlmKE5PVCBDTUFLRV9JTlNUQUxMX0xJQkRJUiBPUiAiJHtDTUFLRV9JTlNUQUxMX0xJQkRJUn0iIFNUUkVRVUFMICJsaWIiKQoAAAAAAAAAAHkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-ffi/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 3378,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					25,
					1,
					"cut",
					null,
					"AQAAAGgLAAAAAAAAaAsAAAAAAAB/AAAACmlmKE5PVCBRVUlDS0pTX0NfTU9EVUxFX0RJUikKICBzZXQoUVVJQ0tKU19DX01PRFVMRV9ESVIgIiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9L2xpYi9xdWlja2pzIikKZW5kaWYoTk9UIFFVSUNLSlNfQ19NT0RVTEVfRElSKQ",
					"AQAAAAAAAAABAAAAaAsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					2,
					"paste",
					null,
					"AgAAAGgLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAABmDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "CMAKE_INSTALL_L"
					},
					"EAAAAHALAAAAAAAAcQsAAAAAAAAAAAAAcQsAAAAAAABxCwAAAAAAABQAAABRVUlDS0pTX0NfTU9EVUxFX0RJUnELAAAAAAAAcgsAAAAAAAAAAAAAcgsAAAAAAABzCwAAAAAAAAAAAABzCwAAAAAAAHQLAAAAAAAAAAAAAHQLAAAAAAAAdQsAAAAAAAAAAAAAdQsAAAAAAAB2CwAAAAAAAAAAAAB2CwAAAAAAAHcLAAAAAAAAAAAAAHcLAAAAAAAAeAsAAAAAAAAAAAAAeAsAAAAAAAB5CwAAAAAAAAAAAAB5CwAAAAAAAHoLAAAAAAAAAAAAAHoLAAAAAAAAewsAAAAAAAAAAAAAewsAAAAAAAB8CwAAAAAAAAAAAAB8CwAAAAAAAH0LAAAAAAAAAAAAAH0LAAAAAAAAfgsAAAAAAAAAAAAAfgsAAAAAAAB/CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAsAAAAAAACECwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "IBDIR"
					},
					"BQAAAH8LAAAAAAAAgAsAAAAAAAAAAAAAgAsAAAAAAACBCwAAAAAAAAAAAACBCwAAAAAAAIILAAAAAAAAAAAAAIILAAAAAAAAgwsAAAAAAAAAAAAAgwsAAAAAAACECwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwsAAAAAAAB/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"paste",
					null,
					"AgAAANILAAAAAAAA5gsAAAAAAAAAAAAA5gsAAAAAAADmCwAAAAAAABQAAABRVUlDS0pTX0NfTU9EVUxFX0RJUg",
					"AQAAAAAAAAABAAAA0gsAAAAAAADmCwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"paste",
					null,
					"AgAAAIwLAAAAAAAAoAsAAAAAAAAAAAAAoAsAAAAAAACgCwAAAAAAABQAAABRVUlDS0pTX0NfTU9EVUxFX0RJUg",
					"AQAAAAAAAAABAAAAjAsAAAAAAACgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " lib"
					},
					"BQAAAKALAAAAAAAAoQsAAAAAAAAAAAAAoQsAAAAAAAChCwAAAAAAACYAAAAgIiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9L2xpYi9xdWlja2pzIqELAAAAAAAAogsAAAAAAAAAAAAAogsAAAAAAACjCwAAAAAAAAAAAACjCwAAAAAAAKQLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAsAAAAAAADGCwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "CMAKE_INSTALL_P"
					},
					"EAAAAAEMAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACDAAAAAAAABQAAABDTUFLRV9JTlNUQUxMX1BSRUZJWAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAA8MAAAAAAAADwwAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAEAwAAAAAAAAQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "LIBDIR"
					},
					"BgAAAA8MAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAARDAAAAAAAAAAAAAARDAAAAAAAABIMAAAAAAAAAAAAABIMAAAAAAAAEwwAAAAAAAAAAAAAEwwAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABUMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwwAAAAAAAAPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"run_macro_file",
					{
						"event":
						{
							"modifier_keys":
							{
							}
						},
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAACQMAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAnDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACcMAAAAAAAAKAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwwAAAAAAAAnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					3,
					"left_delete",
					null,
					"AwAAACcMAAAAAAAAJwwAAAAAAAABAAAAfSUMAAAAAAAAJQwAAAAAAAACAAAAICAkDAAAAAAAACQMAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					4,
					"left_delete",
					null,
					"BAAAABkMAAAAAAAAGQwAAAAAAAABAAAAYhgMAAAAAAAAGAwAAAAAAAABAAAAaRcMAAAAAAAAFwwAAAAAAAABAAAAbBYMAAAAAAAAFgwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAGgwAAAAAAAAaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"paste",
					null,
					"AQAAAIQCAAAAAAAAwgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAIAAAAAAACEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAIQCAAAAAAAAhAIAAAAAAAB8AAAAaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvVXNlTXVsdGlBcmNoLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9GaW5kUXVpY2tKUy5jbWFrZSkKCg",
					"AQAAAAAAAAABAAAAhAIAAAAAAAAAAwAAAAAAAAAAAAAAAAAA"
				],
				[
					116,
					1,
					"paste",
					null,
					"AQAAAGcAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAAAA"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"cut",
					null,
					"AQAAAGcAAAAAAAAAZwAAAAAAAAB7AAAAaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvVXNlTXVsdGlBcmNoLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9GaW5kUXVpY2tKUy5jbWFrZSkK",
					"AQAAAAAAAAABAAAAZwAAAAAAAADiAAAAAAAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"paste",
					null,
					"AQAAAFAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMsAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADtDQAAY21ha2VfbWluaW11bV9yZXF1aXJlZChWRVJTSU9OIDMuMCkKcHJvamVjdChxanMtZmZpIEMpCgpzZXQoRElTQUJMRV9XRVJST1IgT04pCgppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9Vc2VNdWx0aUFyY2guY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0ZpbmRRdWlja0pTLmNtYWtlKQoKaW5jbHVkZShGaW5kUGtnQ29uZmlnKQoKcGtnX3NlYXJjaF9tb2R1bGUoTElCRkZJIGxpYmZmaSkKCmlmKHBrZ2NmZ19saWJfTElCRkZJX2ZmaSkKICBzZXQoTElCRkZJX0xJQlJBUlkgJHtwa2djZmdfbGliX0xJQkZGSV9mZml9KQplbmRpZihwa2djZmdfbGliX0xJQkZGSV9mZmkpCgppZihOT1QgTElCRkZJX0ZPVU5EKQogIGZpbmRfbGlicmFyeShMSUJGRklfTElCUkFSWSBmZmkpCmVuZGlmKE5PVCBMSUJGRklfRk9VTkQpCgpmaW5kX2xpYnJhcnkoTElCREwgZGwpCgppZihMSUJETCkKICBsaW5rX2xpYnJhcmllcygke0xJQkRMfSkKZW5kaWYoTElCREwpCgppZihFWElTVFMgIiR7TElCRkZJX0lOQ0xVREVfRElSfSIpCiAgaW5jbHVkZV9kaXJlY3RvcmllcygiJHtMSUJGRklfSU5DTFVERV9ESVJ9IikKZW5kaWYoRVhJU1RTICIke0xJQkZGSV9JTkNMVURFX0RJUn0iKQoKaWYoTElCRkZJX0xJQlJBUlkpCiAgbWVzc2FnZShTVEFUVVMgIkZvdW5kIExJQkZGSV9MSUJSQVJZIGF0ICR7TElCRkZJX0xJQlJBUll9IikKICBzZXQoRkZJX0ZPVU5EIFRSVUUpCmVuZGlmKExJQkZGSV9MSUJSQVJZKQoKZmluZF9xdWlja2pzKCkKY29uZmlndXJlX3F1aWNranMoKQoKaW5jbHVkZV9kaXJlY3Rvcmllcygke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0gJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9Ly4uICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS8uLi8uLikKaWYoQ01BS0VfU1lTVEVNX0lOQ0xVREVfUEFUSCkKICBpbmNsdWRlX2RpcmVjdG9yaWVzKCR7Q01BS0VfU1lTVEVNX0lOQ0xVREVfUEFUSH0pCmVuZGlmKENNQUtFX1NZU1RFTV9JTkNMVURFX1BBVEgpCgpzZXQoRElTQUJMRV9XRVJST1IgVFJVRSkKCmZ1bmN0aW9uKG1ha2Vfc2hhcmVkX21vZHVsZSBGTkFNRSkKICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiXyIgIi0iIE5BTUUgIiR7Rk5BTUV9IikKICBzdHJpbmcoVE9VUFBFUiAiJHtGTkFNRX0iIFVOQU1FKQoKICBtZXNzYWdlKCJNb2R1bGU6ICR7TkFNRX0iKQogIHNldChUQVJHRVRfTkFNRSBxdWlja2pzLSR7TkFNRX0pCgogIGFkZF9saWJyYXJ5KCR7VEFSR0VUX05BTUV9IFNIQVJFRCAke0ZOQU1FfS5jKQoKICB0YXJnZXRfbGlua19saWJyYXJpZXMoJHtUQVJHRVRfTkFNRX0gJHtRVUlDS0pTX0xJQlJBUll9ICR7TElCRkZJX0xJQlJBUll9KQogIHNldF90YXJnZXRfcHJvcGVydGllcygKICAgICR7VEFSR0VUX05BTUV9CiAgICBQUk9QRVJUSUVTCiAgICAgIFBSRUZJWCAiIgogICAgICBCVUlMRF9SUEFUSCAiJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9IgogICAgICBJTlNUQUxMX1JQQVRIICIke0NNQUtFX0lOU1RBTExfUFJFRklYfS9saWIiCiAgICAgIE9VVFBVVF9OQU1FICIke05BTUV9IiAjIENPTVBJTEVfRkxBR1MgIi1mdmlzaWJpbGl0eT1oaWRkZW4iCiAgICAgIEJVSUxEX1JQQVRICiAgICAgICIke0NNQUtFX0JJTkFSWV9ESVJ9OyR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfTske0NNQUtFX0JJTkFSWV9ESVJ9L3F1aWNranM7JHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9L3F1aWNranMiKQogIHRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKCR7VEFSR0VUX05BTUV9IFBSSVZBVEUgLURKU18ke1VOQU1FfV9NT0RVTEU9MSkKICBpbnN0YWxsKFRBUkdFVFMgJHtUQVJHRVRfTkFNRX0gREVTVElOQVRJT04gJHtRVUlDS0pTX0xJQlJBUllfRElSfS9xdWlja2pzCiAgICAgICAgICBQRVJNSVNTSU9OUyBPV05FUl9SRUFEIE9XTkVSX1dSSVRFIE9XTkVSX0VYRUNVVEUgR1JPVVBfUkVBRCBHUk9VUF9FWEVDVVRFIFdPUkxEX1JFQUQgV09STERfRVhFQ1VURSkKCmVuZGZ1bmN0aW9uKCkKCmZpbGUoR0xPQiBKU19CSU5ESU5HU19TT1VSQ0VTIGZmaS5jKQoKc2V0KENNQUtFX1BPU0lUSU9OX0lOREVQRU5ERU5UX0NPREUgT04pCgppbmNsdWRlKENoZWNrTGlicmFyeUV4aXN0cykKCmluY2x1ZGUoRmluZFBrZ0NvbmZpZykKaWYoTk9UIEZGSV9GT1VORCkKICBwa2dfc2VhcmNoX21vZHVsZShGRkkgbGliZmZpKQoKICBpZihwa2djZmdfbGliX0ZGSV9mZmkpCiAgICBzZXQoTElCRkZJX0xJQlJBUlkgIiR7cGtnY2ZnX2xpYl9GRklfZmZpfSIpCiAgICBzZXQoRkZJX0ZPVU5EIFRSVUUpCiAgZW5kaWYocGtnY2ZnX2xpYl9GRklfZmZpKQplbmRpZihOT1QgRkZJX0ZPVU5EKQoKaWYoRkZJX0ZPVU5EKQogIHNldChIQVZFX0xJQkZGSSBUUlVFKQplbmRpZihGRklfRk9VTkQpCiMgY2hlY2tfbGlicmFyeV9leGlzdHMoZmZpIGZmaV9jYWxsICIiIEhBVkVfTElCRkZJKQoKaWYoSEFWRV9MSUJGRkkpCiAgbGlua19saWJyYXJpZXMoJHtMSUJGRklfTElCUkFSWX0pCmVuZGlmKEhBVkVfTElCRkZJKQoKaWYoQlVJTERfU0hBUkVEX0xJQlMpCiAgYWRkX2RlZmluaXRpb25zKC1ESlNfU0hBUkVEX0xJQlJBUlkpCmVuZGlmKEJVSUxEX1NIQVJFRF9MSUJTKQoKIyBNYWluCmFkZF9saWJyYXJ5KHF1aWNranMtZmZpIE1PRFVMRSAke0pTX0JJTkRJTkdTX1NPVVJDRVN9KQp0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyhxdWlja2pzLWZmaSBQUklWQVRFKQpzZXRfdGFyZ2V0X3Byb3BlcnRpZXMocXVpY2tqcy1mZmkgUFJPUEVSVElFUyBQUkVGSVggIiIgT1VUUFVUX05BTUUgImZmaSIpCnRhcmdldF9jb21waWxlX2RlZmluaXRpb25zKHF1aWNranMtZmZpIFBSSVZBVEUgLURKU19TSEFSRURfTElCUkFSWT0xIC1ESlNfQklORElOR1NfSU5JVF9NT0RVTEU9MSkKdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHF1aWNranMtZmZpIFBVQkxJQyAke1FVSUNLSlNfTElCUkFSWX0gJHtGRklfTElCUkFSSUVTfSkKCmlmKE5PVCBDTUFLRV9JTlNUQUxMX0xJQkRJUikKICBzZXQoQ01BS0VfSU5TVEFMTF9MSUJESVIgbGliKQplbmRpZihOT1QgQ01BS0VfSU5TVEFMTF9MSUJESVIpCmlmKE5PVCBRVUlDS0pTX0NfTU9EVUxFX0RJUikKICBzZXQoUVVJQ0tKU19DX01PRFVMRV9ESVIgIiR7Q01BS0VfSU5TVEFMTF9MSUJESVJ9L3F1aWNranMiKQplbmRpZihOT1QgUVVJQ0tKU19DX01PRFVMRV9ESVIpCgptZXNzYWdlKCJRVUlDS0pTX0NfTU9EVUxFX0RJUjogJHtRVUlDS0pTX0NfTU9EVUxFX0RJUn0iKQoKaW5zdGFsbChUQVJHRVRTIHF1aWNranMtZmZpIERFU1RJTkFUSU9OICIke1FVSUNLSlNfQ19NT0RVTEVfRElSfSIKICAgICAgICBQRVJNSVNTSU9OUyBPV05FUl9SRUFEIE9XTkVSX1dSSVRFIE9XTkVSX0VYRUNVVEUgR1JPVVBfUkVBRCBHUk9VUF9FWEVDVVRFIFdPUkxEX1JFQUQgV09STERfRVhFQ1VURSkKCiMgYWRkX2xpYnJhcnkodGVzdCBNT0RVTEUgdGVzdC5jKSBzZXRfdGFyZ2V0X3Byb3BlcnRpZXModGVzdCBQUk9QRVJUSUVTIFBSRUZJWCAiIiBPVVRQVVRfTkFNRQojICJ0ZXN0IikgdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHRlc3QpCgAAAAAAAAAAMg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawEAAAAAAABrAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "clang-list.js",
			"settings":
			{
				"buffer_size": 8698,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "clang-ast.js",
			"settings":
			{
				"buffer_size": 73842,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					218,
					1,
					"insert",
					{
						"characters": "(("
					},
					"AgAAAGMXAAAAAAAAZBcAAAAAAAAAAAAAZBcAAAAAAABlFwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMXAAAAAAAAYxcAAAAAAAAAAAAAAADwvw"
				],
				[
					219,
					3,
					"left_delete",
					null,
					"AwAAAGQXAAAAAAAAZBcAAAAAAAABAAAAKGMXAAAAAAAAYxcAAAAAAAABAAAAKGEXAAAAAAAAYRcAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUXAAAAAAAAZRcAAAAAAAAAAAAAAADwvw"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFZMAAAAAAAAV0wAAAAAAAAAAAAAV0wAAAAAAABYTAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFZMAAAAAAAAVkwAAAAAAAAAAAAAAADwvw"
				],
				[
					240,
					1,
					"",
					null,
					"AQAAAONOAAAAAAAA+k4AAAAAAAAVAAAAICAgICAgICAgICAgICBjb25zb2xl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAONOAAAAAAAA+E4AAAAAAAAAAAAAAADwvw"
				],
				[
					241,
					1,
					"",
					null,
					"AQAAAA5PAAAAAAAAJU8AAAAAAAAVAAAAICAgICAgICAgICAgICBjb25zb2xl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA5PAAAAAAAAI08AAAAAAAAAAAAAAADwvw"
				],
				[
					242,
					1,
					"",
					null,
					"AQAAAOVPAAAAAAAA/E8AAAAAAAAVAAAAICAgICAgICAgICAgICBjb25zb2xl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOVPAAAAAAAA+k8AAAAAAAAAAAAAAADwvw"
				],
				[
					243,
					1,
					"",
					null,
					"AQAAABteAAAAAAAAKF4AAAAAAAALAAAAICAgIGNvbnNvbGU",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABteAAAAAAAAJl4AAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"",
					null,
					"AQAAAPFkAAAAAAAA/mQAAAAAAAALAAAAICAgIGNvbnNvbGU",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPFkAAAAAAAA/GQAAAAAAAAAAAAAAADwvw"
				],
				[
					253,
					1,
					"",
					null,
					"AQAAALt+AAAAAAAAx34AAAAAAAAKAAAACiAgY29uc29sZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALt+AAAAAAAAxX4AAAAAAAAAAAAAAADwvw"
				],
				[
					254,
					1,
					"",
					null,
					"AQAAADKBAAAAAAAAPYEAAAAAAAAJAAAAICBjb25zb2xl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADKBAAAAAAAAO4EAAAAAAAAAAAAAAADwvw"
				],
				[
					256,
					5,
					"join_lines",
					null,
					"DgAAAKyCAAAAAAAArIIAAAAAAAABAAAACqyCAAAAAAAArIIAAAAAAAAEAAAAICAgILOCAAAAAAAAs4IAAAAAAAABAAAACrOCAAAAAAAAs4IAAAAAAAAEAAAAICAgILOCAAAAAAAAtIIAAAAAAAAAAAAAu4IAAAAAAAC7ggAAAAAAAAEAAAAKu4IAAAAAAAC7ggAAAAAAAAQAAAAgICAgu4IAAAAAAAC8ggAAAAAAAAAAAADEggAAAAAAAMSCAAAAAAAAAQAAAArEggAAAAAAAMSCAAAAAAAABAAAACAgICDEggAAAAAAAMWCAAAAAAAAAAAAANeCAAAAAAAA14IAAAAAAAABAAAACteCAAAAAAAA14IAAAAAAAAEAAAAICAgINeCAAAAAAAA2IIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJaCAAAAAAAAloIAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"join_lines",
					null,
					"AwAAAN2CAAAAAAAA3YIAAAAAAAABAAAACt2CAAAAAAAA3YIAAAAAAAACAAAAICDdggAAAAAAAN6CAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANiCAAAAAAAA2IIAAAAAAAAAAAAAAADwvw"
				],
				[
					262,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN6CAAAAAAAA3oIAAAAAAAAAAAAAAADwvw"
				],
				[
					275,
					1,
					"",
					null,
					"AQAAAJSCAAAAAAAAn4IAAAAAAAAJAAAAICBjb25zb2xl",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJSCAAAAAAAAnYIAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"cut",
					null,
					"AQAAAIs0AAAAAAAAizQAAAAAAAAJAAAAdGhpcyArICcn",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIs0AAAAAAAAlDQAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAIs0AAAAAAAAjDQAAAAAAAAAAAAAjDQAAAAAAACNNAAAAAAAAAAAAACNNAAAAAAAAI40AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIs0AAAAAAAAizQAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "str"
					},
					"BAAAALo0AAAAAAAAuzQAAAAAAAAAAAAAuzQAAAAAAAC7NAAAAAAAAAkAAAB0aGlzICsgJye7NAAAAAAAALw0AAAAAAAAAAAAALw0AAAAAAAAvTQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALo0AAAAAAAAwzQAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAGw0AAAAAAAAbTQAAAAAAAAAAAAAbTQAAAAAAABxNAAAAAAAAAAAAABxNAAAAAAAAHI0AAAAAAAAAAAAAHI0AAAAAAAAdjQAAAAAAAAAAAAAbTQAAAAAAABtNAAAAAAAAAQAAAAgICAgcjQAAAAAAABzNAAAAAAAAAAAAABzNAAAAAAAAHQ0AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGw0AAAAAAAAbDQAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHQ0AAAAAAAAdjQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQ0AAAAAAAAdDQAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAHU0AAAAAAAAdjQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHU0AAAAAAAAdTQAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAHU0AAAAAAAAdTQAAAAAAAABAAAAIQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHY0AAAAAAAAdjQAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHQ0AAAAAAAAdDQAAAAAAAABAAAAKHQ0AAAAAAAAdDQAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHU0AAAAAAAAdTQAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					2,
					"left_delete",
					null,
					"AgAAAHM0AAAAAAAAczQAAAAAAAABAAAAZnI0AAAAAAAAcjQAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQ0AAAAAAAAdDQAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "str??="
					},
					"BgAAAHI0AAAAAAAAczQAAAAAAAAAAAAAczQAAAAAAAB0NAAAAAAAAAAAAAB0NAAAAAAAAHU0AAAAAAAAAAAAAHU0AAAAAAAAdjQAAAAAAAAAAAAAdjQAAAAAAAB3NAAAAAAAAAAAAAB3NAAAAAAAAHg0AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHI0AAAAAAAAcjQAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " this''"
					},
					"BwAAAHg0AAAAAAAAeTQAAAAAAAAAAAAAeTQAAAAAAAB6NAAAAAAAAAAAAAB6NAAAAAAAAHs0AAAAAAAAAAAAAHs0AAAAAAAAfDQAAAAAAAAAAAAAfDQAAAAAAAB9NAAAAAAAAAAAAAB9NAAAAAAAAH40AAAAAAAAAAAAAH40AAAAAAAAfzQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHg0AAAAAAAAeDQAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH80AAAAAAAAgDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH80AAAAAAAAfzQAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					3,
					"left_delete",
					null,
					"AwAAAH80AAAAAAAAfzQAAAAAAAABAAAAO340AAAAAAAAfjQAAAAAAAABAAAAJ300AAAAAAAAfTQAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIA0AAAAAAAAgDQAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAH00AAAAAAAAfjQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH00AAAAAAAAfTQAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAH40AAAAAAAAgDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH40AAAAAAAAfjQAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIA0AAAAAAAAgTQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIA0AAAAAAAAgDQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "eagle-commands.js",
			"settings":
			{
				"buffer_size": 4117,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/misc.js",
			"settings":
			{
				"buffer_size": 19437,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAKM/AAAAAAAAoz8AAAAAAACtAAAAZXhwb3J0IGNvbnN0IHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4gYXJyLmZpbHRlcih0eXBlb2YgY21wID09ICdmdW5jdGlvbicgPyAoZWwsIGksIGFycikgPT4gYXJyLmZpbmRJbmRleChpdGVtID0+IGNtcChlbCwgaXRlbSkpID09IGkgOiAoZWwsIGksIGFycikgPT4gYXJyLmluZGV4T2YoZWwpID09IGkpOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKM/AAAAAAAAUEAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					2,
					"paste",
					null,
					"AgAAAKM/AAAAAAAAUEAAAAAAAAAAAAAAUEAAAAAAAAD9QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKM/AAAAAAAAoz8AAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "fuuncgio"
					},
					"CQAAAFdAAAAAAAAAWEAAAAAAAAAAAAAAWEAAAAAAAABYQAAAAAAAAA8AAABjb25zdCB1bmlxdWUgPSBYQAAAAAAAAFlAAAAAAAAAAAAAAFlAAAAAAAAAWkAAAAAAAAAAAAAAWkAAAAAAAABbQAAAAAAAAAAAAABbQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAXUAAAAAAAAAAAAAAXUAAAAAAAABeQAAAAAAAAAAAAABeQAAAAAAAAF9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFdAAAAAAAAAZkAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					6,
					"left_delete",
					null,
					"BgAAAF5AAAAAAAAAXkAAAAAAAAABAAAAb11AAAAAAAAAXUAAAAAAAAABAAAAaVxAAAAAAAAAXEAAAAAAAAABAAAAZ1tAAAAAAAAAW0AAAAAAAAABAAAAY1pAAAAAAAAAWkAAAAAAAAABAAAAbllAAAAAAAAAWUAAAAAAAAABAAAAdQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF9AAAAAAAAAX0AAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "nction"
					},
					"BgAAAFlAAAAAAAAAWkAAAAAAAAAAAAAAWkAAAAAAAABbQAAAAAAAAAAAAABbQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAXUAAAAAAAAAAAAAAXUAAAAAAAABeQAAAAAAAAAAAAABeQAAAAAAAAF9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFlAAAAAAAAAWUAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " atexit("
					},
					"CAAAAF9AAAAAAAAAYEAAAAAAAAAAAAAAYEAAAAAAAABhQAAAAAAAAAAAAABhQAAAAAAAAGJAAAAAAAAAAAAAAGJAAAAAAAAAY0AAAAAAAAAAAAAAY0AAAAAAAABkQAAAAAAAAAAAAABkQAAAAAAAAGVAAAAAAAAAAAAAAGVAAAAAAAAAZkAAAAAAAAAAAAAAZkAAAAAAAABnQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF9AAAAAAAAAX0AAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "fn)"
					},
					"AwAAAGdAAAAAAAAAaEAAAAAAAAAAAAAAaEAAAAAAAABpQAAAAAAAAAAAAABpQAAAAAAAAGpAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGdAAAAAAAAAZ0AAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAGpAAAAAAAAAa0AAAAAAAAAAAAAAa0AAAAAAAABsQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGpAAAAAAAAAakAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGxAAAAAAAAAbUAAAAAAAAAAAAAAbUAAAAAAAABvQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGxAAAAAAAAAbEAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAG9AAAAAAAAAb0AAAAAAAACXAAAAKGFyciwgY21wKSA9PiBhcnIuZmlsdGVyKHR5cGVvZiBjbXAgPT0gJ2Z1bmN0aW9uJyA/IChlbCwgaSwgYXJyKSA9PiBhcnIuZmluZEluZGV4KGl0ZW0gPT4gY21wKGVsLCBpdGVtKSkgPT0gaSA6IChlbCwgaSwgYXJyKSA9PiBhcnIuaW5kZXhPZihlbCkgPT0gaSk7Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9AAAAAAAAABkEAAAAAAAAAAAAAAAA0QA"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAG9AAAAAAAAAcEAAAAAAAAAAAAAAbUAAAAAAAABtQAAAAAAAAAIAAAAgIG1AAAAAAAAAbUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9AAAAAAAAAb0AAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAG5AAAAAAAAAb0AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG5AAAAAAAAAbkAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFBAAAAAAAAAUUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFBAAAAAAAAAUEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFBAAAAAAAAAUUAAAAAAAAAAAAAAUUAAAAAAAABSQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFBAAAAAAAAAUEAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "lert"
					},
					"BAAAAFFAAAAAAAAAUkAAAAAAAAAAAAAAUkAAAAAAAABTQAAAAAAAAAAAAABTQAAAAAAAAFRAAAAAAAAAAAAAAFRAAAAAAAAAVUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFFAAAAAAAAAUUAAAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFVAAAAAAAAAVkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFVAAAAAAAAAVUAAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					5,
					"left_delete",
					null,
					"BQAAAFVAAAAAAAAAVUAAAAAAAAABAAAAIFRAAAAAAAAAVEAAAAAAAAABAAAAdFNAAAAAAAAAU0AAAAAAAAABAAAAclJAAAAAAAAAUkAAAAAAAAABAAAAZVFAAAAAAAAAUUAAAAAAAAABAAAAbA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFZAAAAAAAAAVkAAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "constat"
					},
					"BwAAAFFAAAAAAAAAUkAAAAAAAAAAAAAAUkAAAAAAAABTQAAAAAAAAAAAAABTQAAAAAAAAFRAAAAAAAAAAAAAAFRAAAAAAAAAVUAAAAAAAAAAAAAAVUAAAAAAAABWQAAAAAAAAAAAAABWQAAAAAAAAFdAAAAAAAAAAAAAAFdAAAAAAAAAWEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFFAAAAAAAAAUUAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFhAAAAAAAAAWUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFhAAAAAAAAAWEAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					3,
					"left_delete",
					null,
					"AwAAAFhAAAAAAAAAWEAAAAAAAAABAAAAIFdAAAAAAAAAV0AAAAAAAAABAAAAdFZAAAAAAAAAVkAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFlAAAAAAAAAWUAAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " atexci"
					},
					"BwAAAFZAAAAAAAAAV0AAAAAAAAAAAAAAV0AAAAAAAABYQAAAAAAAAAAAAABYQAAAAAAAAFlAAAAAAAAAAAAAAFlAAAAAAAAAWkAAAAAAAAAAAAAAWkAAAAAAAABbQAAAAAAAAAAAAABbQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAXUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFZAAAAAAAAAVkAAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					2,
					"left_delete",
					null,
					"AgAAAFxAAAAAAAAAXEAAAAAAAAABAAAAaVtAAAAAAAAAW0AAAAAAAAABAAAAYw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF1AAAAAAAAAXUAAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "it_functions"
					},
					"DAAAAFtAAAAAAAAAXEAAAAAAAAAAAAAAXEAAAAAAAABdQAAAAAAAAAAAAABdQAAAAAAAAF5AAAAAAAAAAAAAAF5AAAAAAAAAX0AAAAAAAAAAAAAAX0AAAAAAAABgQAAAAAAAAAAAAABgQAAAAAAAAGFAAAAAAAAAAAAAAGFAAAAAAAAAYkAAAAAAAAAAAAAAYkAAAAAAAABjQAAAAAAAAAAAAABjQAAAAAAAAGRAAAAAAAAAAAAAAGRAAAAAAAAAZUAAAAAAAAAAAAAAZUAAAAAAAABmQAAAAAAAAAAAAABmQAAAAAAAAGdAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFtAAAAAAAAAW0AAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGdAAAAAAAAAaEAAAAAAAAAAAAAAaEAAAAAAAABpQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGdAAAAAAAAAZ0AAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGlAAAAAAAAAakAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGlAAAAAAAAAaUAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGpAAAAAAAAAbEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGpAAAAAAAAAakAAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGxAAAAAAAAAbUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGxAAAAAAAAAbEAAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\natexit_"
					},
					"CQAAAItAAAAAAAAAjEAAAAAAAAAAAAAAjEAAAAAAAACOQAAAAAAAAAAAAACOQAAAAAAAAI9AAAAAAAAAAAAAAI9AAAAAAAAAkEAAAAAAAAAAAAAAkEAAAAAAAACRQAAAAAAAAAAAAACRQAAAAAAAAJJAAAAAAAAAAAAAAJJAAAAAAAAAk0AAAAAAAAAAAAAAk0AAAAAAAACUQAAAAAAAAAAAAACUQAAAAAAAAJVAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAItAAAAAAAAAi0AAAAAAAAAAAAAAAIBxQA"
				],
				[
					49,
					1,
					"insert_completion",
					{
						"completion": "atexit_functions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "atexit_functions"
					},
					"AgAAAI5AAAAAAAAAjkAAAAAAAAAHAAAAYXRleGl0X45AAAAAAAAAnkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJVAAAAAAAAAlUAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ".push"
					},
					"BQAAAJ5AAAAAAAAAn0AAAAAAAAAAAAAAn0AAAAAAAACgQAAAAAAAAAAAAACgQAAAAAAAAKFAAAAAAAAAAAAAAKFAAAAAAAAAokAAAAAAAAAAAAAAokAAAAAAAACjQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ5AAAAAAAAAnkAAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKNAAAAAAAAApUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKNAAAAAAAAAo0AAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAKRAAAAAAAAApUAAAAAAAAAAAAAApUAAAAAAAACmQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKRAAAAAAAAApEAAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKdAAAAAAAAAqEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKdAAAAAAAAAp0AAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAKhAAAAAAAAAqUAAAAAAAAAAAAAAqUAAAAAAAACrQAAAAAAAAAAAAACrQAAAAAAAAKxAAAAAAAAAAAAAAKxAAAAAAAAArkAAAAAAAAAAAAAAqUAAAAAAAACpQAAAAAAAAAIAAAAgIKxAAAAAAAAArUAAAAAAAAAAAAAArUAAAAAAAACuQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKhAAAAAAAAAqEAAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK5AAAAAAAAAsEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK5AAAAAAAAArkAAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "glboalThi"
					},
					"CQAAAK9AAAAAAAAAsEAAAAAAAAAAAAAAsEAAAAAAAACxQAAAAAAAAAAAAACxQAAAAAAAALJAAAAAAAAAAAAAALJAAAAAAAAAs0AAAAAAAAAAAAAAs0AAAAAAAAC0QAAAAAAAAAAAAAC0QAAAAAAAALVAAAAAAAAAAAAAALVAAAAAAAAAtkAAAAAAAAAAAAAAtkAAAAAAAAC3QAAAAAAAAAAAAAC3QAAAAAAAALhAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK9AAAAAAAAAr0AAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					7,
					"left_delete",
					null,
					"BwAAALdAAAAAAAAAt0AAAAAAAAABAAAAabZAAAAAAAAAtkAAAAAAAAABAAAAaLVAAAAAAAAAtUAAAAAAAAABAAAAVLRAAAAAAAAAtEAAAAAAAAABAAAAbLNAAAAAAAAAs0AAAAAAAAABAAAAYbJAAAAAAAAAskAAAAAAAAABAAAAb7FAAAAAAAAAsUAAAAAAAAABAAAAYg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALhAAAAAAAAAuEAAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "obalThis.process"
					},
					"EAAAALFAAAAAAAAAskAAAAAAAAAAAAAAskAAAAAAAACzQAAAAAAAAAAAAACzQAAAAAAAALRAAAAAAAAAAAAAALRAAAAAAAAAtUAAAAAAAAAAAAAAtUAAAAAAAAC2QAAAAAAAAAAAAAC2QAAAAAAAALdAAAAAAAAAAAAAALdAAAAAAAAAuEAAAAAAAAAAAAAAuEAAAAAAAAC5QAAAAAAAAAAAAAC5QAAAAAAAALpAAAAAAAAAAAAAALpAAAAAAAAAu0AAAAAAAAAAAAAAu0AAAAAAAAC8QAAAAAAAAAAAAAC8QAAAAAAAAL1AAAAAAAAAAAAAAL1AAAAAAAAAvkAAAAAAAAAAAAAAvkAAAAAAAAC/QAAAAAAAAAAAAAC/QAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAAAwUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALFAAAAAAAAAsUAAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAMFAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAADDQAAAAAAAAAAAAADDQAAAAAAAAMRAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMFAAAAAAAAAwUAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMRAAAAAAAAAxUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMRAAAAAAAAAxEAAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMVAAAAAAAAAx0AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMVAAAAAAAAAxUAAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "on"
					},
					"AgAAAMZAAAAAAAAAx0AAAAAAAAAAAAAAx0AAAAAAAADIQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMZAAAAAAAAAxkAAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAMlAAAAAAAAAykAAAAAAAAAAAAAAykAAAAAAAADLQAAAAAAAAAAAAADLQAAAAAAAAMxAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMlAAAAAAAAAyUAAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " process"
					},
					"CAAAAMxAAAAAAAAAzUAAAAAAAAAAAAAAzUAAAAAAAADOQAAAAAAAAAAAAADOQAAAAAAAAM9AAAAAAAAAAAAAAM9AAAAAAAAA0EAAAAAAAAAAAAAA0EAAAAAAAADRQAAAAAAAAAAAAADRQAAAAAAAANJAAAAAAAAAAAAAANJAAAAAAAAA00AAAAAAAAAAAAAA00AAAAAAAADUQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMxAAAAAAAAAzEAAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANVAAAAAAAAA1kAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVAAAAAAAAA1UAAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert_completion",
					{
						"completion": "a",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "a"
					},
					"AQAAANZAAAAAAAAA10AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZAAAAAAAAA1kAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAANZAAAAAAAAA1kAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdAAAAAAAAA10AAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANZAAAAAAAAA2EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZAAAAAAAAA1kAAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANdAAAAAAAAA2EAAAAAAAAAAAAAA2EAAAAAAAADaQAAAAAAAAAAAAADaQAAAAAAAANtAAAAAAAAAAAAAANtAAAAAAAAA3UAAAAAAAAAAAAAA2EAAAAAAAADYQAAAAAAAAAIAAAAgINhAAAAAAAAA3EAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdAAAAAAAAA10AAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"paste",
					null,
					"AQAAANxAAAAAAAAAWEMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANxAAAAAAAAA3EAAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAAG1AAAAAAAAAbkAAAAAAAAAAAAAA2UAAAAAAAADZQAAAAAAAAAQAAAAgICAgbkAAAAAAAABvQAAAAAAAAAAAAABvQAAAAAAAAHBAAAAAAAAAAAAAAHBAAAAAAAAAcUAAAAAAAAAAAAAAcUAAAAAAAAByQAAAAAAAAAAAAAByQAAAAAAAAHNAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG1AAAAAAAAAbUAAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " ins"
					},
					"BAAAAHNAAAAAAAAAdEAAAAAAAAAAAAAAdEAAAAAAAAB1QAAAAAAAAAAAAAB1QAAAAAAAAHZAAAAAAAAAAAAAAHZAAAAAAAAAd0AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHNAAAAAAAAAc0AAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					3,
					"left_delete",
					null,
					"AwAAAHZAAAAAAAAAdkAAAAAAAAABAAAAc3VAAAAAAAAAdUAAAAAAAAABAAAAbnRAAAAAAAAAdEAAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHdAAAAAAAAAd0AAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "atexit_inst<ll"
					},
					"DgAAAHRAAAAAAAAAdUAAAAAAAAAAAAAAdUAAAAAAAAB2QAAAAAAAAAAAAAB2QAAAAAAAAHdAAAAAAAAAAAAAAHdAAAAAAAAAeEAAAAAAAAAAAAAAeEAAAAAAAAB5QAAAAAAAAAAAAAB5QAAAAAAAAHpAAAAAAAAAAAAAAHpAAAAAAAAAe0AAAAAAAAAAAAAAe0AAAAAAAAB8QAAAAAAAAAAAAAB8QAAAAAAAAH1AAAAAAAAAAAAAAH1AAAAAAAAAfkAAAAAAAAAAAAAAfkAAAAAAAAB/QAAAAAAAAAAAAAB/QAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAACCQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHRAAAAAAAAAdEAAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					3,
					"left_delete",
					null,
					"AwAAAIFAAAAAAAAAgUAAAAAAAAABAAAAbIBAAAAAAAAAgEAAAAAAAAABAAAAbH9AAAAAAAAAf0AAAAAAAAABAAAAPA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIJAAAAAAAAAgkAAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "all"
					},
					"AwAAAH9AAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAIJAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH9AAAAAAAAAf0AAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIJAAAAAAAAAg0AAAAAAAAAAAAAAg0AAAAAAAACEQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIJAAAAAAAAAgkAAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " once"
					},
					"BQAAAIRAAAAAAAAAhUAAAAAAAAAAAAAAhUAAAAAAAACGQAAAAAAAAAAAAACGQAAAAAAAAIdAAAAAAAAAAAAAAIdAAAAAAAAAiEAAAAAAAAAAAAAAiEAAAAAAAACJQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIRAAAAAAAAAhEAAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAIlAAAAAAAAAi0AAAAAAAAAAAAAAikAAAAAAAACMQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIlAAAAAAAAAiUAAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAIxAAAAAAAAAjUAAAAAAAAAAAAAAjUAAAAAAAACOQAAAAAAAAAAAAACOQAAAAAAAAI9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIxAAAAAAAAAjEAAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI9AAAAAAAAAkEAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI9AAAAAAAAAj0AAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJBAAAAAAAAAkkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					2,
					"right_delete",
					null,
					"AgAAAJFAAAAAAAAAkUAAAAAAAAABAAAAfZFAAAAAAAAAkUAAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJFAAAAAAAAAkUAAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJFAAAAAAAAAkkAAAAAAAAAAAAAAkkAAAAAAAACUQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJFAAAAAAAAAkUAAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					2,
					"left_delete",
					null,
					"AwAAAItAAAAAAAAAi0AAAAAAAAABAAAAKZFAAAAAAAAAkUAAAAAAAAACAAAAICCKQAAAAAAAAIpAAAAAAAAAAQAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIxAAAAAAAAAjEAAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "callback"
					},
					"CAAAAIpAAAAAAAAAi0AAAAAAAAAAAAAAi0AAAAAAAACMQAAAAAAAAAAAAACMQAAAAAAAAI1AAAAAAAAAAAAAAI1AAAAAAAAAjkAAAAAAAAAAAAAAjkAAAAAAAACPQAAAAAAAAAAAAACPQAAAAAAAAJBAAAAAAAAAAAAAAJBAAAAAAAAAkUAAAAAAAAAAAAAAkUAAAAAAAACSQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIpAAAAAAAAAikAAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJJAAAAAAAAAk0AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJJAAAAAAAAAkkAAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAJJAAAAAAAAAkkAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJNAAAAAAAAAk0AAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"cut",
					null,
					"AQAAAANBAAAAAAAAA0EAAAAAAAB8AgAACiAgLy8gYXR0YWNoIHVzZXIgY2FsbGJhY2sgdG8gdGhlIHByb2Nlc3MgZXZlbnQgZW1pdHRlcgogIC8vIGlmIG5vIGNhbGxiYWNrLCBpdCB3aWxsIHN0aWxsIGV4aXQgZ3JhY2VmdWxseSBvbiBDdHJsLUMKICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IG5vT3A7CiAgcHJvY2Vzcy5vbignY2xlYW51cCcsY2FsbGJhY2spOwoKICAvLyBkbyBhcHAgc3BlY2lmaWMgY2xlYW5pbmcgYmVmb3JlIGV4aXRpbmcKICBwcm9jZXNzLm9uKCdleGl0JywgZnVuY3Rpb24gKCkgewogICAgcHJvY2Vzcy5lbWl0KCdjbGVhbnVwJyk7CiAgfSk7CgogIC8vIGNhdGNoIGN0cmwrYyBldmVudCBhbmQgZXhpdCBub3JtYWxseQogIHByb2Nlc3Mub24oJ1NJR0lOVCcsIGZ1bmN0aW9uICgpIHsKICAgIGNvbnNvbGUubG9nKCdDdHJsLUMuLi4nKTsKICAgIHByb2Nlc3MuZXhpdCgyKTsKICB9KTsKCiAgLy9jYXRjaCB1bmNhdWdodCBleGNlcHRpb25zLCB0cmFjZSwgdGhlbiBleGl0IG5vcm1hbGx5CiAgcHJvY2Vzcy5vbigndW5jYXVnaHRFeGNlcHRpb24nLCBmdW5jdGlvbihlKSB7CiAgICBjb25zb2xlLmxvZygnVW5jYXVnaHQgRXhjZXB0aW9uLi4uJyk7CiAgICBjb25zb2xlLmxvZyhlLnN0YWNrKTsKICAgIHByb2Nlc3MuZXhpdCg5OSk7CiAgfSk7",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAANBAAAAAAAAf0MAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"paste",
					null,
					"AQAAAJhAAAAAAAAAFEMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJhAAAAAAAAAmEAAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "\n});"
					},
					"BwAAABRDAAAAAAAAFUMAAAAAAAAAAAAAFUMAAAAAAAAXQwAAAAAAAAAAAAAXQwAAAAAAABhDAAAAAAAAAAAAABVDAAAAAAAAFUMAAAAAAAACAAAAICAVQwAAAAAAABVDAAAAAAAAAAAAABZDAAAAAAAAF0MAAAAAAAAAAAAAF0MAAAAAAAAYQwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABRDAAAAAAAAFEMAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "atexit_insta"
					},
					"DAAAAINDAAAAAAAAhEMAAAAAAAAAAAAAhEMAAAAAAACFQwAAAAAAAAAAAACFQwAAAAAAAIZDAAAAAAAAAAAAAIZDAAAAAAAAh0MAAAAAAAAAAAAAh0MAAAAAAACIQwAAAAAAAAAAAACIQwAAAAAAAIlDAAAAAAAAAAAAAIlDAAAAAAAAikMAAAAAAAAAAAAAikMAAAAAAACLQwAAAAAAAAAAAACLQwAAAAAAAIxDAAAAAAAAAAAAAIxDAAAAAAAAjUMAAAAAAAAAAAAAjUMAAAAAAACOQwAAAAAAAAAAAACOQwAAAAAAAI9DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAINDAAAAAAAAg0MAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "ll"
					},
					"AgAAAI9DAAAAAAAAkEMAAAAAAAAAAAAAkEMAAAAAAACRQwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI9DAAAAAAAAj0MAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJFDAAAAAAAAk0MAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJFDAAAAAAAAkUMAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJJDAAAAAAAAlEMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJJDAAAAAAAAkkMAAAAAAAAAAAAAAADwvw"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAJRDAAAAAAAAlUMAAAAAAAAAAAAAlUMAAAAAAACWQwAAAAAAAAAAAACWQwAAAAAAAJdDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJRDAAAAAAAAlEMAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJdDAAAAAAAAmEMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJdDAAAAAAAAl0MAAAAAAAAAAAAAAADwvw"
				],
				[
					130,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJhDAAAAAAAAmkMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJhDAAAAAAAAmEMAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAJlDAAAAAAAAmkMAAAAAAAAAAAAAmkMAAAAAAACbQwAAAAAAAAAAAACaQwAAAAAAAJxDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJlDAAAAAAAAmUMAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAJxDAAAAAAAAnUMAAAAAAAAAAAAAnUMAAAAAAACeQwAAAAAAAAAAAACeQwAAAAAAAJ9DAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJxDAAAAAAAAnEMAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ9DAAAAAAAAoUMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ9DAAAAAAAAn0MAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKBDAAAAAAAAoUMAAAAAAAAAAAAAoUMAAAAAAACiQwAAAAAAAAAAAACiQwAAAAAAAKNDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKBDAAAAAAAAoEMAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAKNDAAAAAAAApEMAAAAAAAAAAAAApEMAAAAAAAClQwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKNDAAAAAAAAo0MAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					2,
					"left_delete",
					null,
					"AgAAAKRDAAAAAAAApEMAAAAAAAABAAAAZqNDAAAAAAAAo0MAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKVDAAAAAAAApUMAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " fn"
					},
					"AwAAAKNDAAAAAAAApEMAAAAAAAAAAAAApEMAAAAAAAClQwAAAAAAAAAAAAClQwAAAAAAAKZDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKNDAAAAAAAAo0MAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAKZDAAAAAAAAp0MAAAAAAAAAAAAAp0MAAAAAAACoQwAAAAAAAAAAAACoQwAAAAAAAKlDAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKZDAAAAAAAApkMAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " atexit_functions"
					},
					"EQAAAKlDAAAAAAAAqkMAAAAAAAAAAAAAqkMAAAAAAACrQwAAAAAAAAAAAACrQwAAAAAAAKxDAAAAAAAAAAAAAKxDAAAAAAAArUMAAAAAAAAAAAAArUMAAAAAAACuQwAAAAAAAAAAAACuQwAAAAAAAK9DAAAAAAAAAAAAAK9DAAAAAAAAsEMAAAAAAAAAAAAAsEMAAAAAAACxQwAAAAAAAAAAAACxQwAAAAAAALJDAAAAAAAAAAAAALJDAAAAAAAAs0MAAAAAAAAAAAAAs0MAAAAAAAC0QwAAAAAAAAAAAAC0QwAAAAAAALVDAAAAAAAAAAAAALVDAAAAAAAAtkMAAAAAAAAAAAAAtkMAAAAAAAC3QwAAAAAAAAAAAAC3QwAAAAAAALhDAAAAAAAAAAAAALhDAAAAAAAAuUMAAAAAAAAAAAAAuUMAAAAAAAC6QwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKlDAAAAAAAAqUMAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "\nfn"
					},
					"BgAAALtDAAAAAAAAvEMAAAAAAAAAAAAAvEMAAAAAAAC+QwAAAAAAAAAAAAC8QwAAAAAAALxDAAAAAAAAAgAAACAgvEMAAAAAAADAQwAAAAAAAAAAAADAQwAAAAAAAMFDAAAAAAAAAAAAAMFDAAAAAAAAwkMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALtDAAAAAAAAu0MAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMJDAAAAAAAAxEMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMJDAAAAAAAAwkMAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMRDAAAAAAAAxUMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMRDAAAAAAAAxEMAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMhDAAAAAAAAyUMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMhDAAAAAAAAyEMAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMlDAAAAAAAAyUMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "cv-shell.js",
			"settings":
			{
				"buffer_size": 4599,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/lib/repl.js",
			"settings":
			{
				"buffer_size": 50401,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					289,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJqDAAAAAAAAmoMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs/quickjs-libc.c",
			"settings":
			{
				"buffer_size": 97640,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAOTwAAAAAAABEPAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/modules",
		"/home/roman/Projects/plot-cv/quickjs",
		"/home/roman/Projects/plot-cv/quickjs/qjs-ffi",
		"/home/roman/Projects/plot-cv/quickjs/qjs-ffi/cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-portmidi.js",
		"/home/roman/Projects/portmidi-trunk/pm_common/portmidi.h",
		"/home/roman/Projects/portmidi-trunk/pm_test/sendvirtual.c",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs.h",
		"/home/roman/Projects/plot-cv/x.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/eagle-commands.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/iterator.js",
		"/home/roman/Projects/plot-cv/lib/async/helpers.js",
		"/home/roman/Projects/plot-cv/lib/eda/units.js",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/eagle-query.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/cross.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/dimension.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/sheet.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/svg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/rectangle.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/lib/xml.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/preact.js",
		"/home/roman/Projects/plot-cv/lib/hooks.js",
		"/home/roman/Projects/plot-cv/lib/preact.mjs",
		"/home/roman/Projects/plot-cv/lib/preact.standalone.js",
		"/home/roman/Projects/plot-cv/lib/preact.m.js",
		"/home/roman/Projects/plot-cv/lib/preact.esm.js",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useEvent.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/test-sockets.js",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/config.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/test-net.js",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/plot-cv.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/libraries.js",
		"/home/roman/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/test.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/test-glfw.js",
		"/home/roman/Projects/plot-cv/modules/tty.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/src/plot-cv.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/test-features2d.js",
		"/home/roman/Projects/plot-cv/static/css/list.css",
		"/home/roman/Projects/plot-cv/fontsample.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/videoSource.js",
		"/home/roman/Projects/plot-cv/lib/compat.mjs",
		"/home/roman/Projects/plot-cv/lib/hooks.mjs",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/preact.mjs",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/svg/sort-size-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-name-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-time-2.svg",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/tlite.css",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/lib/geom/align.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/inotify_event.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/palette.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/plot-cv/test-voronoi.js",
		"/home/roman/Projects/plot-cv/quickjs/README.md",
		"/home/roman/Projects/plot-cv/quickjs/readme.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/gif_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"dumpChar",
			"11",
			"a8",
			"PmEvent",
			"Pm_Read",
			"length",
			"PmEvent",
			"ptr",
			"CreateVirtua",
			"bufferSize",
			"latency",
			"PmTimeProcPtr",
			"time_proc",
			"inputDriverInfo",
			"PortMidiStream",
			"PmDeviceInfo",
			"GetDeviceInfo",
			"GetDevice",
			"PmDeviceInfo_S",
			"Pm_Ini",
			"^function",
			"RTLD_DEFAULT",
			"HasHost",
			"Poll",
			"SetChan",
			"Pm_SetFil",
			"OpenOut",
			"OpenInput",
			"GetDefaultIn",
			"Pm_Termin",
			"PmError",
			"Pm_Ini",
			"Pm_",
			"^([ \\t]*)(console)",
			"'params'",
			"^([ \\t]*)(console)",
			"^(\\s*)(console)",
			"^\\s*console.log",
			"RecordDecl.fields",
			"bindMethods =",
			"getType",
			"path.relative",
			"path",
			"LocationString",
			"Table",
			"List",
			"location",
			"Table",
			"OP_get_var[^_]",
			"OP_get_var",
			"get_var",
			"historyLoad",
			"historySave",
			"std.exit",
			"js_std_exit",
			"\"exit\"",
			"addClean",
			"addClea",
			"historyLoad",
			"cleanup",
			"historyLoad",
			"atexit",
			"Terminate",
			"js_deep_unset2",
			"deep_unset2",
			"num2colo",
			"GetColor",
			"num2col",
			"scien",
			"AlignAll",
			"GetColorBands",
			"UpdateMea",
			"math_funcs",
			"log2\"",
			"js_math_func",
			"createWS",
			"this.json",
			"repl.show",
			"repl.shoow",
			"ProcessFile",
			"Compile",
			"range =",
			"DrawText",
			"JS_GetPropert",
			"JS_GetProperty",
			"isConstructor",
			"color.text",
			"replace",
			"GetColorBa",
			"GetExponent, GetMantissa, ValueToNumber, NumberToValue, GetMultipliers, GetFactor, GetColorBands, BG, digit2color ",
			"App",
			"GetColorBands, updateMeasures, alignItem, alignAll, scientific, num2color",
			"{\n",
			"pushTransform",
			"lookup",
			"unique",
			"function isObject",
			"isObject",
			"Util\\.",
			"ansi",
			"assign",
			"digit2color",
			"nameValue",
			"components:",
			"Util\\.(define|isObject|memoize|range|unique)\\(",
			"Util\\.(define|isObject|memoize|range|unique)",
			"(Util\\.define|Util\\.isObject|Util\\.memoize|Util\\.range|Util\\.unique)",
			"unique",
			"(Util\\.define|Util\\.isObject|Util\\.memoize|Util\\.range|Util\\.unique)",
			"globalThi",
			"put_banner",
			"openSync",
			"filesystem",
			"import",
			"\n        //rational(value).toExponential()",
			"xmlize",
			"scientific",
			"EagleDoc",
			"^function",
			"^funct",
			"^\\s*console",
			"assign",
			"fromXML",
			"xml.js",
			"xml",
			"../an-tronics/eagle/Headphone-Amplifier-ClassAB-alt2.brd",
			"filesystem\\.",
			"u\\$1 ="
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"msg",
			"PmDeviceInfo",
			"export function",
			"libportmidi",
			"\\1//\\2",
			"text",
			"\\1",
			"export function",
			"export &",
			"fs.",
			"array",
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 15,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640259234.34,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23453,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640026239.25,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/iterator/helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1794,
						"regions":
						{
						},
						"selection":
						[
							[
								394,
								396
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 16,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640028383.16,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/quickjs-opcode.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15401,
						"regions":
						{
						},
						"selection":
						[
							[
								11541,
								11541
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 286,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1640326951.05,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3784.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "qjs-opencv/tests/test_freetype.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5250,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640820608.79,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 196.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "portmidi-testio.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15779,
						"regions":
						{
						},
						"selection":
						[
							[
								12090,
								12105
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 355,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1640314408.72,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4959.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs/quickjs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1522562,
						"regions":
						{
						},
						"selection":
						[
							[
								466397,
								466397
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 15872,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640243971.88,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 301399.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40236,
						"regions":
						{
							"col_7FF80001":
							{
								"flags": 16,
								"regions":
								[
									[
										4435,
										4445
									]
								],
								"scope": "col_7FF80001"
							},
							"col_7FF80001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7FF80001_circle.png",
								"regions":
								[
									[
										4404,
										4404
									]
								],
								"scope": "col_gutter"
							},
							"col_7FFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										18569,
										18579
									]
								],
								"scope": "col_7FFFFFFF"
							},
							"col_7FFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7FFFFFFF_circle.png",
								"regions":
								[
									[
										18557,
										18557
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								22983,
								22996
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 694,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640314404.51,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9804.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184127,
						"regions":
						{
						},
						"selection":
						[
							[
								77303,
								77852
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2603,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640842610.5,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51802.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs/qjs-glfw/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3417,
						"regions":
						{
						},
						"selection":
						[
							[
								125,
								125
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 3,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640842969.03,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs/qjs-ffi/cmake/UseMultiArch.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1145,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640842975.72,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs/qjs-ffi/CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3378,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 14,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640846033.07,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "clang-list.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8698,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640045799.75,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1425.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "clang-ast.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 73842,
						"regions":
						{
						},
						"selection":
						[
							[
								12862,
								12862
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 480,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640240229.19,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7051.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "eagle-commands.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4117,
						"regions":
						{
						},
						"selection":
						[
							[
								234,
								300
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 4,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640026236.61,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/misc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19437,
						"regions":
						{
						},
						"selection":
						[
							[
								17353,
								17353
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 551,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640022890.64,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9346.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "cv-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4599,
						"regions":
						{
						},
						"selection":
						[
							[
								2234,
								2307
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 55,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640022715.49,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 420.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "quickjs/qjs-modules/lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50401,
						"regions":
						{
						},
						"selection":
						[
							[
								33690,
								33690
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1220,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640022712.3,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22422.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "quickjs/quickjs-libc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97640,
						"regions":
						{
						},
						"selection":
						[
							[
								15417,
								15428
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 586,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1640022592.73,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10718.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"portmi",
				"portmidi-testio.c"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"portmidi-",
				"portmidi-testio.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"test_mmap",
				"quickjs/qjs-modules/tests/test_mmap.js"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-op",
				"quickjs/quickjs-opcode.h"
			],
			[
				"eagle-comm",
				"eagle-commands.js"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"eagle-",
				"eagle-commands.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"clang-li",
				"clang-list.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"eagle-com",
				"eagle-commands.js"
			],
			[
				"ser",
				"server.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"io-h",
				"io-helpers.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"colorCo",
				"lib/eda/colorCoding.js"
			],
			[
				"quickjs-mi",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"util.j",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"xml.js",
				"lib/xml.js"
			],
			[
				"eagle-q",
				"eagle-query.js"
			],
			[
				"eagle-qu",
				"eagle-query.js"
			],
			[
				"componen",
				"components.js"
			],
			[
				"preact.m.",
				"lib/preact.m.js"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"packag",
				"package.json"
			],
			[
				"plot-cv.cpp",
				"src/plot-cv.cpp"
			],
			[
				"test-im",
				"test-imread.js"
			],
			[
				"test-imre",
				"test-imread.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"cvPipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"debugger.",
				"debugger.html"
			],
			[
				"test_xml",
				"quickjs/qjs-modules/tests/test_xml.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"list.htm",
				"list.html"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"useEve",
				"lib/hooks/useEvent.js"
			],
			[
				"ompat.mjs",
				"lib/compat.mjs"
			],
			[
				".mjs",
				"lib/compat.mjs"
			],
			[
				"hooks.mj",
				"lib/hooks.mjs"
			],
			[
				"preact.mjs",
				"preact.mjs"
			],
			[
				"hooks.",
				"lib/hooks.mjs"
			],
			[
				"compat.mj",
				"lib/compat.mjs"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"components.",
				"components.js"
			],
			[
				"tlite.css",
				"tlite.css"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"schema",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"components",
				"components.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"align.js",
				"lib/geom/align.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"cvVid",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"cvpip",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"imagepip",
				"imagePipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"usetrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"fetch.j",
				"lib/fetch.js"
			],
			[
				"comm",
				"commands.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"js_Cv",
				"qjs-opencv/js_cv.cpp"
			],
			[
				"gif_wr",
				"qjs-opencv/gif_write.hpp"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"js_mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"image-he",
				"image-helpers.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-misc.c",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-mmap",
				"quickjs/qjs-modules/quickjs-mmap.c"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs-ins",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"webSOc",
				"webSocket.js"
			],
			[
				"timers.",
				"lib/repeater/timers.js"
			],
			[
				"cvGUI",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"js_Mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"-helper",
				"io-helpers.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"quickjs-lib",
				"quickjs/quickjs-libc.c"
			],
			[
				"test-repe",
				"test-repeater.js"
			],
			[
				"repea",
				"lib/repeater/repeater.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"jpeg.js",
				"lib/jpeg.js"
			],
			[
				"image-h",
				"image-helpers.js"
			],
			[
				"estree.js",
				"lib/ecmascript/estree.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"terminal",
				"qjs-modules/lib/terminal.js"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
