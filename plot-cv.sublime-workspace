{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
<<<<<<< HEAD
			"contents": "‚Äî‚íª‚Äì eval_buf ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì eval_file ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì JS_NewCustomContext ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì main ( ) { ‚Ä¶ } ‚Äî function",
			"settings":
			{
				"buffer_size": 143,
=======
			"contents": "Hierarchy(array)\n  .index = function(id)\n  .index = function(id)\nHierarchy\n  parent(id)\n  child(id)\n  next(id)\n  prev(id)\n  getConstants(names)\n  findType(value)\n  getBitDepth(mat)\n  minMax(mat)\n  modifierMap(keyCode)\n  drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)\n  function*getParents(hier, id)\n  getContourDepth(hier, id)\n  findRoot(hier)\n  function*getToplevel(hier)\n  function*walkContours(hier, id)\n  main(...args)\n(event, x, y, flags)\nAcquireFrame(src, dst)\nGrayscale(src, dst)\nNorm(src, dst)\nBlur(src, dst)\nEdgeDetect(src, dst)\nMorph(src, dst)\nContours(src, dst)\nHoughLines(src, dst)\n  function(value, count, name, window)\n  showOutput()\n  drawParam(param, y, color)\n  saveContours(contours, size)\n  saveLines(lines, size)",
			"settings":
			{
				"buffer_size": 756,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
<<<<<<< HEAD
					374,
=======
					498,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
<<<<<<< HEAD
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
=======
								9837,
								9843
							]
						],
						"symlist":
						[
							"function TCPSocket(host, port)",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							"function HTTPRequest(url, proxy_host, proxy_port)",
							"(resolve, reject) =>",
							" res =>",
							"function Proxy(obj)",
							"prop =>",
							".prototype.valueOf = function()",
							".prototype.toSource = function()",
							".prototype.toString = function()",
							".prototype.check = function(url)",
							".prototype.ping = function()",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							" function()",
							"async function main(...args)",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (err, proxies) =>",
							"async (push, stop) =>",
							"async proxies =>",
							"err =>",
							" error =>",
							" () =>",
							"async () =>",
							"async function writeResults(results, format = 'txt', outputName = 'proxies')",
							"txt: r =>",
							"p =>",
							"sh: r =>",
							"p =>",
							"json: r =>",
							"p =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAA5wIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					499,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnAgAAVENQU29ja2V0KGhvc3QsIHBvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICAoKSA9PgogIGVyciA9PgogICgpID0+CiAgZmluaXNoKG1zZywgc3RhcnQgPSAtMSwgZW5kID0gRGF0ZS4KKQpIVFRQUmVxdWVzdCh1cmwsIHByb3h5X2hvc3QsIHByb3h5X3BvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzID0+ClByb3h5KG9iaikKICBwcm9wID0+CiAgLnByb3RvdHlwZS52YWx1ZU9mID0gZnVuY3Rpb24oKQogIC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCiAgLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKICAucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24odXJsKQogIC5wcm90b3R5cGUucGluZyA9IGZ1bmN0aW9uKCkKKHJlc29sdmUsIHJlamVjdCkgPT4KICAoKSA9PgogICgpID0+CiAgZXJyID0+CiAgKCkgPT4KICBmaW5pc2gobXNnLCBzdGFydCA9IC0xLCBlbmQgPSBEYXRlLgopCiAgZnVuY3Rpb24oKQogIG1haW4oLi4uYXJncykKKHB1c2gsIHN0b3ApID0+CihwdXNoLCBzdG9wKSA9PgooZXJyLCBwcm94aWVzKSA9PgoocHVzaCwgc3RvcCkgPT4KICBwcm94aWVzID0+CiAgZXJyID0+CiAgZXJyb3IgPT4KICAoKSA9PgooKSA9PgogIHdyaXRlUmVzdWx0cyhyZXN1bHRzLCBmb3JtYXQgPSAndHh0Jywgb3V0cHV0TmFtZSA9ICdwcm94aWVzJykKICB0eHQ6IHIgPT4KICBwID0+CiAgc2g6IHIgPT4KICBwID0+CiAganNvbjogciA9PgogIHAgPT4KICBlcnIgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					500,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								275,
								294
							],
							[
								376,
								392
							],
							[
								418,
								435
							],
							[
								648,
								661
							],
							[
								797,
								814
							],
							[
								1112,
								1135
							],
							[
								2003,
								2029
							],
							[
								2192,
								2214
							],
							[
								2588,
								2606
							],
							[
								3381,
								3404
							],
							[
								3751,
								3759
							],
							[
								3813,
								3844
							],
							[
								4301,
								4324
							],
							[
								5037,
								5059
							],
							[
								5188,
								5200
							],
							[
								5530,
								5549
							],
							[
								6217,
								6248
							],
							[
								6392,
								6416
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6954,
								6972
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"getFile(filename)",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							" (s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAxAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					501,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADEAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBnZXRGaWxlKGZpbGVuYW1lKQogIGhhbmRsZVJlc3BvbnNlKG1lc3NhZ2UpCiAgaGFuZGxlQnJlYWtwb2ludHMobWVzc2FnZSkKICBoYW5kbGVNZXNzYWdlKG1lc3NhZ2UpCiAgaGFuZGxlRXZlbnQoZXZlbnQpCiAgc2VuZE1lc3NhZ2UodHlwZSwgYXJncykKICBnZXRTZXEoKQogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSkKICBzdGF0aWMgcmVhZChzb2NrKQogIHN0YXRpYyBzZW5kKHNvY2ssIG1zZykKICByZWFkKCkKICByZWFkSGFuZGxlcigpCiAgcmV0VmFsdWUocmV0LCAuLi5hcmdzKQogIHRvSGV4KG4sIGIgPSAyKQpNYWtlQXJyYXkoYnVmLCBudW1CeXRlcykKQXJyYXlCdWZUb0hleChidWYsIG51bUJ5dGVzID0gOCkKICAocywgY29kZSkgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					502,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/dump-structs.js",
						"symkeys":
						[
							[
								471,
								495
							],
							[
								659,
								665
							],
							[
								709,
								726
							],
							[
								836,
								864
							],
							[
								1037,
								1042
							],
							[
								1257,
								1267
							],
							[
								1317,
								1327
							],
							[
								2301,
								2305
							],
							[
								2352,
								2356
							],
							[
								2411,
								2448
							],
							[
								2650,
								2657
							],
							[
								2708,
								2715
							],
							[
								3182,
								3199
							],
							[
								3404,
								3414
							],
							[
								3714,
								3724
							],
							[
								4285,
								4290
							],
							[
								4500,
								4514
							],
							[
								4578,
								4611
							],
							[
								4791,
								4809
							],
							[
								4927,
								4938
							],
							[
								5009,
								5020
							],
							[
								5194,
								5210
							],
							[
								5226,
								5243
							],
							[
								5272,
								5295
							],
							[
								5311,
								5333
							],
							[
								5412,
								5429
							],
							[
								5708,
								5719
							],
							[
								5776,
								5787
							],
							[
								5915,
								5924
							],
							[
								5987,
								5998
							],
							[
								6060,
								6071
							],
							[
								6159,
								6170
							],
							[
								6251,
								6259
							],
							[
								6321,
								6329
							],
							[
								6363,
								6371
							],
							[
								6405,
								6409
							],
							[
								6591,
								6602
							],
							[
								6659,
								6670
							],
							[
								6704,
								6713
							],
							[
								6802,
								6813
							],
							[
								6866,
								6880
							],
							[
								7027,
								7031
							],
							[
								7323,
								7330
							],
							[
								7407,
								7418
							],
							[
								7444,
								7448
							],
							[
								7528,
								7532
							],
							[
								7569,
								7580
							],
							[
								7691,
								7730
							],
							[
								7773,
								7780
							],
							[
								7853,
								7866
							],
							[
								8172,
								8190
							],
							[
								8252,
								8277
							],
							[
								8506,
								8524
							],
							[
								8539,
								8549
							],
							[
								8622,
								8637
							],
							[
								8674,
								8678
							],
							[
								9221,
								9226
							],
							[
								9278,
								9301
							],
							[
								9516,
								9530
							],
							[
								9547,
								9562
							],
							[
								9620,
								9646
							],
							[
								9675,
								9690
							],
							[
								9769,
								9802
							],
							[
								9864,
								9889
							],
							[
								10224,
								10244
							],
							[
								10319,
								10323
							],
							[
								10415,
								10431
							],
							[
								10460,
								10473
							],
							[
								10495,
								10515
							],
							[
								10643,
								10647
							],
							[
								10703,
								10707
							],
							[
								10758,
								10810
							],
							[
								11020,
								11051
							],
							[
								11168,
								11187
							],
							[
								11204,
								11242
							],
							[
								12271,
								12310
							],
							[
								12383,
								12422
							],
							[
								12466,
								12483
							],
							[
								12567,
								12585
							],
							[
								12614,
								12633
							],
							[
								12895,
								12912
							],
							[
								12964,
								12981
							],
							[
								13077,
								13083
							],
							[
								13806,
								13867
							],
							[
								14276,
								14333
							],
							[
								14373,
								14392
							],
							[
								14406,
								14424
							],
							[
								14582,
								14596
							],
							[
								14853,
								14870
							],
							[
								15100,
								15128
							],
							[
								15258,
								15272
							],
							[
								15335,
								15342
							],
							[
								15551,
								15555
							],
							[
								16247,
								16256
							],
							[
								16324,
								16328
							],
							[
								16715,
								16722
							],
							[
								16767,
								16792
							],
							[
								16821,
								16836
							],
							[
								16883,
								16894
							],
							[
								16968,
								16979
							],
							[
								17068,
								17073
							],
							[
								17192,
								17197
							],
							[
								17370,
								17374
							],
							[
								17458,
								17485
							],
							[
								17806,
								17817
							],
							[
								17905,
								17916
							],
							[
								18138,
								18173
							],
							[
								18325,
								18342
							],
							[
								18466,
								18497
							],
							[
								18517,
								18547
							],
							[
								18741,
								18745
							],
							[
								18794,
								18829
							],
							[
								18871,
								18934
							],
							[
								19652,
								19678
							],
							[
								19919,
								19931
							],
							[
								19952,
								19976
							],
							[
								19993,
								20008
							],
							[
								20103,
								20118
							],
							[
								20199,
								20210
							],
							[
								20234,
								20245
							],
							[
								20466,
								20477
							],
							[
								20578,
								20589
							],
							[
								20677,
								20715
							],
							[
								20752,
								20756
							],
							[
								20809,
								20873
							],
							[
								21018,
								21053
							],
							[
								21177,
								21185
							],
							[
								21261,
								21269
							],
							[
								21341,
								21352
							],
							[
								21542,
								21584
							],
							[
								21869,
								21898
							],
							[
								21997,
								22005
							],
							[
								22123,
								22169
							],
							[
								22348,
								22380
							],
							[
								22544,
								22578
							],
							[
								22818,
								22874
							],
							[
								23235,
								23288
							],
							[
								23546,
								23594
							],
							[
								24051,
								24058
							],
							[
								24228,
								24236
							],
							[
								24326,
								24369
							],
							[
								24588,
								24630
							],
							[
								24865,
								24902
							]
						],
						"symlist":
						[
							"findLastIndex(predicate)",
							"tail()",
							"startsWith(start)",
							"async function main(...args)",
							"fn =>",
							" (a, p) =>",
							" (a, p) =>",
							"d =>",
							"v =>",
							"async function processFiles(...files)",
							"name =>",
							"stat =>",
							" (v, p) =>",
							"toString()",
							"toString()",
							" v =>",
							"([p, n], i) =>",
							"NoSystemIncludes = ([p, n, l]) =>",
							" ([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"names = decls =>",
							"([path, decl]) =>",
							"declarations = decls =>",
							"([path, decl, loc]) =>",
							"([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p]) =>",
							"([p]) =>",
							"([p]) =>",
							"p =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n, l]) =>",
							"k =>",
							"node =>",
							"([p, n]) =>",
							"p =>",
							"p =>",
							"([p, n]) =>",
							"([path, node, id, name, type, kind]) =>",
							"decl =>",
							"(field, i) =>",
							"findDecl = node =>",
							" (n, p) =>",
							"findType = name =>",
							" (n, p) =>",
							"nodeType = n =>",
							"t =>",
							" n =>",
							"nodeName = (n, name) =>",
							"findId = id =>",
							"(node, path) =>",
							"findIdKind = (id, kind) =>",
							"(node, path) =>",
							"findNode = (id, kind, exclude) =>",
							" (n, p) =>",
							"({ path, value }) =>",
							"n =>",
							"([p, len, n]) =>",
							"([p, , n]) =>",
							"fieldDecls = node =>",
							"n =>",
							"n =>",
							" ([offset, arr], [name, type]) =>",
							"([name, type, offset, size]) =>",
							"structSize = map =>",
							"(acc, [name, [type, offset, size]]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([decl, node]) =>",
							"([name, value]) =>",
							"([name, fields]) =>",
							"([path, node]) =>",
							"([path, node]) =>",
							"sub =>",
							" ([offset, entries], [key, type]) =>",
							" function DefinePrototype(name, retType, params)",
							" () =>",
							" t =>",
							"varname = n =>",
							"varname = name =>",
							"([name, [param, offset]]) =>",
							"([name], i) =>",
							"name =>",
							"n =>",
							"record =>",
							"r =>",
							"node =>",
							"getIds = (id, exclude) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" p =>",
							" p =>",
							"n =>",
							" (a, n) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" (a, field) =>",
							"([name, type]) =>",
							" () =>",
							" s =>",
							"a =>",
							"([p, n, x, y, a1, a2, t, inner]) =>",
							" ([offset, arr], [name, [type, byteLength]], i) =>",
							"(a, [type, byteLength]) =>",
							"([p, id]) =>",
							"getId = (id, exclude) =>",
							"(node, path) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" function BasePathIndex(path)",
							"k =>",
							" function FindBackwards(node, pred = ([p, n]) => false)",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function MakeFilename(className)",
							" function Path2Loc(path)",
							"([p]) =>",
							"function WriteFile(name, data, verbose = true)",
							"function writeOutput(name, data)",
							"function GetLibraryFor(symbolName)",
							"function* GenerateInspectStruct(type, members, includes)",
							"async function InspectStruct(type, members, includes)",
							"function* GenerateStructClass(name, [size, map])",
							"line =>",
							"field =>",
							"function GenerateGetSet(name, offset, size)",
							"function ByteLength2TypedArray(byteLength)",
							"function ByteLength2Value(byteLength)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAtQkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					503,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1CQAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQogIG1haW4oLi4uYXJncykKICBmbiA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQogIG5hbWUgPT4KICBzdGF0ID0+CiAgKHYsIHApID0+CiAgdG9TdHJpbmcoKQogIHRvU3RyaW5nKCkKICB2ID0+CihbcCwgbl0sIGkpID0+Ck5vU3lzdGVtSW5jbHVkZXMgPSAoW3AsIG4sIGxdKSA9PgogIChbcGF0aCwgZGVjbF0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CiAgbmFtZXMgPSBkZWNscyA9PgooW3BhdGgsIGRlY2xdKSA9PgogIGRlY2xhcmF0aW9ucyA9IGRlY2xzID0+CihbcGF0aCwgZGVjbCwgbG9jXSkgPT4KKFtwYXRoLCBkZWNsXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKGEsIGIpID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcF0pID0+CihbcF0pID0+CihbcF0pID0+CiAgcCA9PgooW3AsIG5dKSA9PgooW3AsIG5dKSA9PgooYSwgYikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuLCBsXSkgPT4KICBrID0+CiAgbm9kZSA9PgooW3AsIG5dKSA9PgogIHAgPT4KICBwID0+CihbcCwgbl0pID0+CihbcGF0aCwgbm9kZSwgaWQsIG5hbWUsIHR5cGUsIGtpbmRdKSA9PgogIGRlY2wgPT4KKGZpZWxkLCBpKSA9PgogIGZpbmREZWNsID0gbm9kZSA9PgogIChuLCBwKSA9PgogIGZpbmRUeXBlID0gbmFtZSA9PgogIChuLCBwKSA9PgogIG5vZGVUeXBlID0gbiA9PgogIHQgPT4KICBuID0+CiAgbm9kZU5hbWUgPSAobiwgbmFtZSkgPT4KICBmaW5kSWQgPSBpZCA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kSWRLaW5kID0gKGlkLCBraW5kKSA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kTm9kZSA9IChpZCwga2luZCwgZXhjbHVkZSkgPT4KICAobiwgcCkgPT4KKHsgcGF0aCwgdmFsdWUgfSkgPT4KICBuID0+CihbcCwgbGVuLCBuXSkgPT4KKFtwLCAsIG5dKSA9PgogIGZpZWxkRGVjbHMgPSBub2RlID0+CiAgbiA9PgogIG4gPT4KICAoW29mZnNldCwgYXJyXSwgW25hbWUsIHR5cGVdKSA9PgooW25hbWUsIHR5cGUsIG9mZnNldCwgc2l6ZV0pID0+CiAgc3RydWN0U2l6ZSA9IG1hcCA9PgooYWNjLCBbbmFtZSwgW3R5cGUsIG9mZnNldCwgc2l6ZV1dKSA9PgooW3BhdGgsIG5vZGUsIGlkLCBuYW1lLCB0eXBlLCBraW5kXSkgPT4KKFtwYXRoLCBub2RlLCBpZCwgbmFtZSwgdHlwZSwga2luZF0pID0+CihbZGVjbCwgbm9kZV0pID0+CihbbmFtZSwgdmFsdWVdKSA9PgooW25hbWUsIGZpZWxkc10pID0+CihbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgc3ViID0+CiAgKFtvZmZzZXQsIGVudHJpZXNdLCBba2V5LCB0eXBlXSkgPT4KRGVmaW5lUHJvdG90eXBlKG5hbWUsIHJldFR5cGUsIHBhcmFtcykKICAoKSA9PgogIHQgPT4KICB2YXJuYW1lID0gbiA9PgogIHZhcm5hbWUgPSBuYW1lID0+CihbbmFtZSwgW3BhcmFtLCBvZmZzZXRdXSkgPT4KKFtuYW1lXSwgaSkgPT4KICBuYW1lID0+CiAgbiA9PgogIHJlY29yZCA9PgogIHIgPT4KICBub2RlID0+CiAgZ2V0SWRzID0gKGlkLCBleGNsdWRlKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICBwID0+CiAgcCA9PgogIG4gPT4KICAoYSwgbikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICAoYSwgZmllbGQpID0+CihbbmFtZSwgdHlwZV0pID0+CiAgKCkgPT4KICBzID0+CiAgYSA9PgooW3AsIG4sIHgsIHksIGExLCBhMiwgdCwgaW5uZXJdKSA9PgogIChbb2Zmc2V0LCBhcnJdLCBbbmFtZSwgW3R5cGUsIGJ5dGVMZW5ndGhdXSwgaSkgPT4KKGEsIFt0eXBlLCBieXRlTGVuZ3RoXSkgPT4KKFtwLCBpZF0pID0+CiAgZ2V0SWQgPSAoaWQsIGV4Y2x1ZGUpID0+Cihub2RlLCBwYXRoKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KQmFzZVBhdGhJbmRleChwYXRoKQogIGsgPT4KRmluZEJhY2t3YXJkcyhub2RlLCBwcmVkID0gKFtwLCBuXSkgPT4gZmFsc2UpCkdldFR5cGVTdHIobm9kZSkKICBpbm5lciA9PgogIGlubmVyID0+CihbbiwgdF0pID0+Ck1ha2VGaWxlbmFtZShjbGFzc05hbWUpClBhdGgyTG9jKHBhdGgpCihbcF0pID0+CldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKICB3cml0ZU91dHB1dChuYW1lLCBkYXRhKQpHZXRMaWJyYXJ5Rm9yKHN5bWJvbE5hbWUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKR2VuZXJhdGVTdHJ1Y3RDbGFzcyhuYW1lLCBbc2l6ZSwgbWFwXSkKICBsaW5lID0+CiAgZmllbGQgPT4KR2VuZXJhdGVHZXRTZXQobmFtZSwgb2Zmc2V0LCBzaXplKQpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCkKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoKQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					504,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/noise.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					505,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					506,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/output-267.svg",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					507,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					508,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-call.js",
						"symkeys":
						[
							[
								145,
								153
							],
							[
								175,
								195
							],
							[
								356,
								364
							],
							[
								408,
								436
							],
							[
								551,
								563
							]
						],
						"symlist":
						[
							"Callable",
							"constructor(...args)",
							"Callable",
							"async function main(...args)",
							"(...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAARQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					509,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAAAAQ2FsbGFibGUKICBjb25zdHJ1Y3RvciguLi5hcmdzKQpDYWxsYWJsZQogIG1haW4oLi4uYXJncykKKC4uLmFyZ3MpID0+AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					510,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-bpg.html",
						"symkeys":
						[
							[
								346,
								351
							],
							[
								609,
								615
							]
						],
						"symlist":
						[
							" e =>",
							"output"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					511,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBlID0+CiAgb3V0cHV0AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					512,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-image.js",
						"symkeys":
						[
							[
								1232,
								1237
							],
							[
								1304,
								1319
							],
							[
								1345,
								1366
							],
							[
								1399,
								1427
							],
							[
								1467,
								1487
							],
							[
								1517,
								1529
							],
							[
								1552,
								1562
							],
							[
								1583,
								1604
							],
							[
								1636,
								1661
							],
							[
								1706,
								1727
							],
							[
								1803,
								1824
							],
							[
								1924,
								1933
							],
							[
								1951,
								1961
							],
							[
								2023,
								2032
							],
							[
								2093,
								2101
							],
							[
								2161,
								2169
							],
							[
								2232,
								2260
							],
							[
								2301,
								2308
							],
							[
								2352,
								2402
							],
							[
								2406,
								2410
							],
							[
								2433,
								2443
							],
							[
								2474,
								2498
							],
							[
								2529,
								2534
							],
							[
								2573,
								2598
							],
							[
								2846,
								2858
							],
							[
								2879,
								2899
							],
							[
								2973,
								3002
							],
							[
								3092,
								3113
							],
							[
								3154,
								3233
							],
							[
								3305,
								3335
							],
							[
								3405,
								3439
							],
							[
								3487,
								3510
							],
							[
								3537,
								3541
							],
							[
								3595,
								3622
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
<<<<<<< HEAD
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					375,
					2,
					"outline_refresh",
					{
						"path": null,
=======
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAUwUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					513,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTBQAAKCkgPT4KTlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					514,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-lexer.js",
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
						"symkeys":
						[
							[
								205,
								219
							],
							[
								431,
								449
							],
							[
								990,
								1014
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"function main(arg)",
							"function tokenColor(tok)"
						]
					},
<<<<<<< HEAD
					"AwAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					376,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AQAAAAAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					377,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAzwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					378,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAALgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					515,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAICB0ZXN0Zm4gPSAoKSA9PgogIG1haW4oYXJnKQogIHRva2VuQ29sb3IodG9rKQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					516,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-readdir.js",
						"symkeys":
						[
							[
								327,
								362
							],
							[
								424,
								476
							],
							[
								830,
								858
							]
						],
						"symlist":
						[
							"function* Filter(gen, regEx = /.*/)",
							"function* ReadDirRecursive(dir, maxDepth = Infinity)",
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAVAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					517,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABUAAAARmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					518,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1168,
								1188
							],
							[
								1351,
								1367
							],
							[
								1421,
								1440
							],
							[
								1475,
								1491
							],
							[
								1547,
								1563
							],
							[
								1626,
								1660
							],
							[
								1683,
								1715
							],
							[
								1738,
								1781
							],
							[
								2022,
								2034
							],
							[
								3857,
								3876
							],
							[
								3974,
								3990
							],
							[
								4052,
								4070
							],
							[
								4134,
								4153
							],
							[
								4218,
								4227
							],
							[
								4282,
								4299
							],
							[
								4362,
								4379
							],
							[
								4442,
								4456
							],
							[
								4516,
								4531
							],
							[
								4592,
								4607
							],
							[
								4668,
								4676
							],
							[
								4730,
								4742
							],
							[
								4800,
								4810
							],
							[
								4866,
								4877
							],
							[
								4934,
								4942
							],
							[
								4996,
								5018
							],
							[
								5086,
								5101
							],
							[
								5162,
								5184
							],
							[
								5252,
								5268
							],
							[
								5330,
								5346
							],
							[
								5408,
								5420
							],
							[
								5478,
								5490
							],
							[
								5548,
								5561
							],
							[
								5620,
								5638
							],
							[
								5696,
								5714
							],
							[
								5778,
								5800
							],
							[
								5868,
								5895
							],
							[
								5968,
								5985
							],
							[
								6042,
								6059
							],
							[
								6116,
								6133
							],
							[
								6180,
								6196
							],
							[
								6279,
								6295
							],
							[
								6367,
								6383
							],
							[
								6455,
								6472
							],
							[
								6529,
								6549
							],
							[
								6608,
								6628
							],
							[
								6787,
								6806
							],
							[
								6882,
								6889
							],
							[
								6918,
								6938
							],
							[
								7008,
								7023
							],
							[
								7084,
								7110
							],
							[
								7188,
								7209
							],
							[
								7287,
								7313
							],
							[
								7359,
								7384
							],
							[
								7469,
								7511
							],
							[
								7645,
								7685
							],
							[
								10886,
								10929
							],
							[
								11382,
								11417
							],
							[
								11573,
								11591
							],
							[
								11621,
								11626
							],
							[
								11716,
								11743
							],
							[
								11862,
								11883
							],
							[
								11912,
								11928
							],
							[
								12021,
								12056
							],
							[
								12096,
								12114
							],
							[
								12301,
								12322
							],
							[
								12346,
								12356
							],
							[
								12395,
								12425
							],
							[
								12751,
								12785
							],
							[
								13100,
								13134
							],
							[
								13354,
								13388
							],
							[
								13454,
								13490
							],
							[
								13565,
								13582
							],
							[
								13741,
								13778
							],
							[
								13779,
								13793
							],
							[
								13799,
								13803
							],
							[
								13878,
								13910
							],
							[
								13938,
								13964
							],
							[
								14289,
								14311
							],
							[
								14362,
								14378
							],
							[
								14393,
								14400
							],
							[
								14428,
								14444
							],
							[
								14527,
								14544
							],
							[
								14545,
								14554
							],
							[
								14606,
								14623
							],
							[
								14624,
								14633
							],
							[
								14693,
								14710
							],
							[
								14711,
								14734
							],
							[
								14790,
								14814
							],
							[
								17441,
								17469
							],
							[
								17900,
								17904
							],
							[
								18032,
								18045
							],
							[
								18361,
								18373
							],
							[
								18636,
								18649
							],
							[
								18754,
								18768
							],
							[
								19661,
								19689
							],
							[
								19805,
								19818
							],
							[
								19930,
								19956
							],
							[
								20669,
								20731
							],
							[
								20765,
								20834
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					519,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAQCAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIChuLCAuLi5yZXN0KSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgaGFzUHJvdG90eXBlKG9iaiwgcHJvdG8pCiAgZmlsdGVyKHNlcSwgcHJlZCwgdGhpc0FyZykKICBwcmVkID0gKGVsLCBpKSA9PgogIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgKC4uLmFyZ3MpID0+CiAgYSA9PgogIHNwbGl0KGJ1ZiwgLi4ucG9pbnRzKQogIHNwbGl0QXQgPSAoYiwgcG9zLCBsZW4pID0+CiAgdW5pcXVlID0gKGFyciwgY21wKSA9PgogIChlbCwgaSwgYXJyKSA9PgogIGl0ZW0gPT4KICAoZWwsIGksIGFycikgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgY29kZSA9PgogIChvZmZzZXQgPSAwKSA9PgogIChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGdldEFuc2lTdHlsZXMoKQogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBjID0+CiAgdmFsdWU6IGhleCA9PgogIGNoYXJhY3RlciA9PgogIHZhbHVlOiBoZXggPT4KICB2YWx1ZTogY29kZSA9PgogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICB2YWx1ZTogaGV4ID0+CiAgcmFuZEludCguLi5hcmdzKQogIC5leHRlbmRBcnJheSA9IChwcm90byA9IEFycmF5LnByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+CiAgLmV4dGVuZEdlbmVyYXRvciA9IChwcm90byA9IEdlbmVyYXRvclByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					520,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
						"symkeys":
						[
							[
								649,
								671
							],
							[
								2516,
								2520
							],
							[
								3070,
								3091
							],
							[
								3129,
								3133
							],
							[
								3869,
								3881
							],
							[
								4660,
								4681
							],
							[
								4749,
								4772
							],
							[
								4961,
								5000
							],
							[
								5279,
								5315
							],
							[
								5543,
								5574
							],
							[
								5813,
								5825
							]
						],
						"symlist":
						[
							"function main(...args)",
							"n =>",
							"Range = (from, to) =>",
							"n =>",
							"(id, idx) =>",
							" function toHex(num)",
							" function toHex32(num)",
							" function get_leb128(buf, offset, len)",
							" function get_bytes(buf, offset, n)",
							" function get_str(buf, offset)",
							"catch(error)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAvQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					521,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AAAAICBtYWluKC4uLmFyZ3MpCiAgbiA9PgpSYW5nZSA9IChmcm9tLCB0bykgPT4KICBuID0+CihpZCwgaWR4KSA9PgogIHRvSGV4KG51bSkKICB0b0hleDMyKG51bSkKICBnZXRfbGViMTI4KGJ1Ziwgb2Zmc2V0LCBsZW4pCiAgZ2V0X2J5dGVzKGJ1Ziwgb2Zmc2V0LCBuKQogIGdldF9zdHIoYnVmLCBvZmZzZXQpCiAgY2F0Y2goZXJyb3IpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					522,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
						"symkeys":
						[
							[
								200,
								205
							],
							[
								236,
								241
							],
							[
								262,
								287
							],
							[
								376,
								457
							],
							[
								462,
								494
							],
							[
								1470,
								1474
							],
							[
								1601,
								1610
							],
							[
								2105,
								2118
							],
							[
								2123,
								2159
							],
							[
								2279,
								2296
							],
							[
								2388,
								2404
							],
							[
								2449,
								2470
							],
							[
								2539,
								2553
							],
							[
								3230,
								3246
							],
							[
								3276,
								3286
							],
							[
								3312,
								3321
							],
							[
								3373,
								3389
							],
							[
								3625,
								3635
							],
							[
								3717,
								3723
							],
							[
								4087,
								4100
							],
							[
								4433,
								4455
							],
							[
								4744,
								4753
							],
							[
								4816,
								4836
							],
							[
								4934,
								4945
							],
							[
								5551,
								5558
							],
							[
								5594,
								5614
							],
							[
								5682,
								5695
							],
							[
								6568,
								6593
							],
							[
								6736,
								6753
							],
							[
								6964,
								6985
							],
							[
								7583,
								7608
							],
							[
								7761,
								7773
							],
							[
								7794,
								7813
							],
							[
								7887,
								7904
							],
							[
								8185,
								8198
							],
							[
								8261,
								8282
							],
							[
								8301,
								8314
							],
							[
								8389,
								8400
							],
							[
								8505,
								8515
							],
							[
								8615,
								8624
							],
							[
								8744,
								8760
							],
							[
								8887,
								8900
							],
							[
								9159,
								9168
							],
							[
								9425,
								9436
							],
							[
								9476,
								9487
							],
							[
								9519,
								9539
							],
							[
								9668,
								9687
							],
							[
								9822,
								9841
							],
							[
								9962,
								9987
							],
							[
								10279,
								10289
							],
							[
								10445,
								10459
							],
							[
								10611,
								10621
							],
							[
								10880,
								10901
							]
						],
						"symlist":
						[
							"() =>",
							"() =>",
							" function Crop(mat, rect)",
							"function ImageSize(src, dst, dsize, action = (name, arg1, arg2) => console.",
							"(`${name} ${arg1} -> ${arg2}`) )",
							"s =>",
							"(a, b) =>",
							"ImageSequence",
							"constructor(images = [], dimensions)",
							"get frame_count()",
							"get pos_frames()",
							"set pos_frames(value)",
							"get pos_msec()",
							"getBackendName()",
							"isOpened()",
							"get(prop)",
							"set(prop, value)",
							"get size()",
							"grab()",
							"retrieve(mat)",
							" (name, arg1, arg2) =>",
							"read(mat)",
							"isVideoPath = arg =>",
							"VideoSource",
							"name =>",
							"constructor(...args)",
							"(acc, arg) =>",
							"capture(device, driverId)",
							".propId = prop =>",
							".read = function(mat)",
							".retrieve = function(mat)",
							"VideoCapture",
							"fromImages(...args)",
							".propId = prop =>",
							"ImageSequence",
							".read = function(mat)",
							"ImageSequence",
							"set size(s)",
							"get size()",
							"get(prop)",
							"set(prop, value)",
							"get backend()",
							"get fps()",
							"propName =>",
							"([k, v]) =>",
							"seekFrames(relative)",
							"seekMsecs(relative)",
							"get durationMsecs()",
							"position(type = 'frames')",
							"get size()",
							"set size(size)",
							"get time()",
							"pad = (i, n, frac) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAA0QMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					523,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRAwAAKCkgPT4KKCkgPT4KQ3JvcChtYXQsIHJlY3QpCkltYWdlU2l6ZShzcmMsIGRzdCwgZHNpemUsIGFjdGlvbiA9IChuYW1lLCBhcmcxLCBhcmcyKSA9PiBjb25zb2xlLgooYCR7bmFtZX0gJHthcmcxfSAtPiAke2FyZzJ9YCkgKQogIHMgPT4KKGEsIGIpID0+CkltYWdlU2VxdWVuY2UKICBjb25zdHJ1Y3RvcihpbWFnZXMgPSBbXSwgZGltZW5zaW9ucykKICBnZXQgZnJhbWVfY291bnQoKQogIGdldCBwb3NfZnJhbWVzKCkKICBzZXQgcG9zX2ZyYW1lcyh2YWx1ZSkKICBnZXQgcG9zX21zZWMoKQogIGdldEJhY2tlbmROYW1lKCkKICBpc09wZW5lZCgpCiAgZ2V0KHByb3ApCiAgc2V0KHByb3AsIHZhbHVlKQogIGdldCBzaXplKCkKICBncmFiKCkKICByZXRyaWV2ZShtYXQpCiAgKG5hbWUsIGFyZzEsIGFyZzIpID0+CiAgcmVhZChtYXQpCiAgaXNWaWRlb1BhdGggPSBhcmcgPT4KVmlkZW9Tb3VyY2UKICBuYW1lID0+CiAgY29uc3RydWN0b3IoLi4uYXJncykKKGFjYywgYXJnKSA9PgogIGNhcHR1cmUoZGV2aWNlLCBkcml2ZXJJZCkKICAucHJvcElkID0gcHJvcCA9PgogIC5yZWFkID0gZnVuY3Rpb24obWF0KQogIC5yZXRyaWV2ZSA9IGZ1bmN0aW9uKG1hdCkKVmlkZW9DYXB0dXJlCiAgZnJvbUltYWdlcyguLi5hcmdzKQogIC5wcm9wSWQgPSBwcm9wID0+CkltYWdlU2VxdWVuY2UKICAucmVhZCA9IGZ1bmN0aW9uKG1hdCkKSW1hZ2VTZXF1ZW5jZQogIHNldCBzaXplKHMpCiAgZ2V0IHNpemUoKQogIGdldChwcm9wKQogIHNldChwcm9wLCB2YWx1ZSkKICBnZXQgYmFja2VuZCgpCiAgZ2V0IGZwcygpCiAgcHJvcE5hbWUgPT4KKFtrLCB2XSkgPT4KICBzZWVrRnJhbWVzKHJlbGF0aXZlKQogIHNlZWtNc2VjcyhyZWxhdGl2ZSkKICBnZXQgZHVyYXRpb25Nc2VjcygpCiAgcG9zaXRpb24odHlwZSA9ICdmcmFtZXMnKQogIGdldCBzaXplKCkKICBzZXQgc2l6ZShzaXplKQogIGdldCB0aW1lKCkKICBwYWQgPSAoaSwgbiwgZnJhYykgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					524,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-svgpath.js",
						"symkeys":
						[
							[
								995,
								999
							],
							[
								2140,
								2144
							],
							[
								2364,
								2368
							],
							[
								3411,
								3448
							]
						],
						"symlist":
						[
							"n =>",
							"p =>",
							"p =>",
							"function* dataToPoints(d, steps = 10)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					525,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBuID0+CiAgcCA9PgogIHAgPT4KICBkYXRhVG9Qb2ludHMoZCwgc3RlcHMgPSAxMCkAAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					526,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-tmtheme.js",
						"symkeys":
						[
							[
								340,
								370
							],
							[
								578,
								585
							],
							[
								605,
								619
							],
							[
								760,
								765
							],
							[
								784,
								804
							],
							[
								955,
								962
							],
							[
								1105,
								1109
							],
							[
								1114,
								1137
							],
							[
								1485,
								1489
							],
							[
								1508,
								1521
							],
							[
								1648,
								1665
							],
							[
								1797,
								1804
							],
							[
								2160,
								2175
							],
							[
								2269,
								2306
							],
							[
								3148,
								3190
							],
							[
								3473,
								3482
							],
							[
								3665,
								3674
							],
							[
								4665,
								4693
							],
							[
								5020,
								5024
							],
							[
								5518,
								5531
							],
							[
								5695,
								5702
							],
							[
								5752,
								5759
							],
							[
								5875,
								5882
							],
							[
								5933,
								5940
							],
							[
								6002,
								6006
							],
							[
								6058,
								6062
							],
							[
								6439,
								6443
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"Comment",
							"constructor(s)",
							"PList",
							"constructor(...args)",
							"item =>",
							"Pair",
							"constructor(key, value)",
							"Dict",
							"constructor()",
							"([key, value]) =>",
							"item =>",
							"set(key, value)",
							"function Element2Object(element, key)",
							"function Object2Element(object, path = [])",
							"(v, k) =>",
							"(v, k) =>",
							"async function main(...args)",
							"n =>",
							"([, node]) =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"s =>",
							"s =>",
							"s =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAbAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					527,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsAQAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkNvbW1lbnQKICBjb25zdHJ1Y3RvcihzKQpQTGlzdAogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgaXRlbSA9PgpQYWlyCiAgY29uc3RydWN0b3Ioa2V5LCB2YWx1ZSkKRGljdAogIGNvbnN0cnVjdG9yKCkKKFtrZXksIHZhbHVlXSkgPT4KICBpdGVtID0+CiAgc2V0KGtleSwgdmFsdWUpCkVsZW1lbnQyT2JqZWN0KGVsZW1lbnQsIGtleSkKT2JqZWN0MkVsZW1lbnQob2JqZWN0LCBwYXRoID0gW10pCih2LCBrKSA9PgoodiwgaykgPT4KICBtYWluKC4uLmFyZ3MpCiAgbiA9PgooWywgbm9kZV0pID0+CiAgcGFpciA9PgogIHBhaXIgPT4KICBwYWlyID0+CiAgcGFpciA9PgogIHMgPT4KICBzID0+CiAgcyA9PgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								2772,
								2781
							],
							[
								2850,
								2857
							],
							[
								2974,
								2979
							],
							[
								3166,
								3177
							],
							[
								3329,
								3334
							],
							[
								3778,
								3830
							],
							[
								4116,
								4152
							],
							[
								4397,
								4404
							],
							[
								4474,
								4493
							],
							[
								4535,
								4553
							],
							[
								4607,
								4630
							],
							[
								4965,
								4986
							],
							[
								5247,
								5255
							],
							[
								5798,
								5833
							],
							[
								7771,
								7800
							],
							[
								7856,
								7881
							],
							[
								7932,
								7990
							],
							[
								8698,
								8734
							],
							[
								8872,
								8895
							],
							[
								9358,
								9369
							],
							[
								9854,
								9891
							],
							[
								10006,
								10033
							],
							[
								11426,
								11454
							],
							[
								11632,
								11662
							],
							[
								11732,
								11763
							],
							[
								12067,
								12090
							],
							[
								12153,
								12177
							],
							[
								12241,
								12262
							],
							[
								12323,
								12348
							],
							[
								12388,
								12410
							],
							[
								12472,
								12507
							],
							[
								12563,
								12590
							],
							[
								12889,
								12929
							],
							[
								13062,
								13082
							],
							[
								13379,
								13398
							]
						],
						"symlist":
						[
							"source =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"line =>",
							"(acc, tokens, i) =>",
							"([type, token]) =>",
							"(acc, [type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							" (acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"async function ReadSocket()",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAjwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2087,
								2103
							],
							[
								2348,
								2360
							],
							[
								2457,
								2479
							],
							[
								2780,
								2790
							],
							[
								3034,
								3048
							],
							[
								3880,
								3919
							],
							[
								4107,
								4132
							],
							[
								5888,
								5906
							],
							[
								5977,
								6005
							],
							[
								6209,
								6220
							],
							[
								6365,
								6381
							],
							[
								6558,
								6577
							],
							[
								6663,
								6705
							],
							[
								7754,
								7760
							],
							[
								8517,
								8532
							],
							[
								8700,
								8711
							],
							[
								11939,
								11955
							],
							[
								12186,
								12203
							],
							[
								12255,
								12269
							],
							[
								12676,
								12696
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPAgAAICBzb3VyY2UgPT4KICBsaW5lID0+CiAgZSA9PgooKSA9PgogIGUgPT4KU291cmNlTGluZSA9ICh7IGxpbmVubywgdGV4dCwgYWN0aXZlLCBjaGlsZHJlbiB9KSA9PgpTb3VyY2VUZXh0ID0gKHsgdGV4dCwgZmlsZW5hbWUgfSkgPT4KICBsaW5lID0+CihhY2MsIHRva2VucywgaSkgPT4KKFt0eXBlLCB0b2tlbl0pID0+CihhY2MsIFt0eXBlLCB0b2tlbl0pID0+ClNvdXJjZUZpbGUgPSBwcm9wcyA9PgogIHJlc3AgPT4KTG9hZFNvdXJjZShmaWxlbmFtZSkKU3RhcnQoYXJncywgYWRkcmVzcykKQ29ubmVjdChhZGRyZXNzKQpJbml0aWF0ZShjb21tYW5kLCBhZGRyZXNzLCBjb25uZWN0ID0gZmFsc2UsIGFyZ3MpClRva2VuaXplSlMoZGF0YSwgZmlsZW5hbWUpCiAgKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpClJlYWRTb2NrZXQoKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKR2V0VmFyaWFibGVzKHJlZiA9IDApClVwZGF0ZVBvc2l0aW9uKCkKU3RlcEluKCkKU3RlcE91dCgpCk5leHQoKQpDb250aW51ZSgpClBhdXNlKCkKRXZhbHVhdGUoZXhwcmVzc2lvbikKU3RhY2tUcmFjZSgpClNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KUmVuZGVyVUkoKQAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2087,
								2103
							],
							[
								2348,
								2360
							],
							[
								2457,
								2479
							],
							[
								2780,
								2790
							],
							[
								3034,
								3048
							],
							[
								3880,
								3919
							],
							[
								4107,
								4132
							],
							[
								5888,
								5906
							],
							[
								5977,
								6005
							],
							[
								6209,
								6220
							],
							[
								6365,
								6381
							],
							[
								6558,
								6577
							],
							[
								6663,
								6705
							],
							[
								7754,
								7760
							],
							[
								8517,
								8532
							],
							[
								8700,
								8711
							],
							[
								11939,
								11955
							],
							[
								12186,
								12203
							],
							[
								12255,
								12269
							],
							[
								12676,
								12696
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3876,
								3915
							],
							[
								4095,
								4120
							],
							[
								5876,
								5894
							],
							[
								5965,
								5993
							],
							[
								6197,
								6208
							],
							[
								6353,
								6369
							],
							[
								6546,
								6565
							],
							[
								6651,
								6693
							],
							[
								7744,
								7750
							],
							[
								8492,
								8507
							],
							[
								8675,
								8686
							],
							[
								11914,
								11930
							],
							[
								12161,
								12178
							],
							[
								12230,
								12244
							],
							[
								12651,
								12671
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					379,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
=======
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAAFoBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-shparse.js",
						"symkeys":
						[
							[
								3444,
								3474
							],
							[
								3676,
								3704
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgpbMF0sICcuanMnKSwgc3VmZml4ID0gJycpCiAgbWFpbiguLi5hcmdzKQogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIHF1aXQod2h5KQAAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								555,
								583
							],
							[
								1224,
								1230
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-spawn.js",
						"symkeys":
						[
							[
								271,
								299
							],
							[
								986,
								1032
							],
							[
								1104,
								1116
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					380,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/iwyu.sh",
=======
							"async function main(...args)",
							"function ArrayBufToString(buf, offset, length)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sourcemap.js",
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
						"symkeys":
						[
							[
								188,
								216
							]
						],
						"symlist":
						[
							"async function main(...args)"
						]
					},
<<<<<<< HEAD
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					381,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
						"symkeys":
						[
							[
								478,
								493
							],
							[
								768,
								790
							],
							[
								873,
								890
							],
							[
								1268,
								1285
							],
							[
								1355,
								1372
							],
							[
								1477,
								1486
							],
							[
								1576,
								1586
							],
							[
								1653,
								1663
							],
							[
								1752,
								1762
							],
							[
								1858,
								1868
							],
							[
								2050,
								2058
							],
							[
								2170,
								2176
							],
							[
								2300,
								2308
							],
							[
								2338,
								2347
							],
							[
								2977,
								2981
							],
							[
								3134,
								3145
							],
							[
								3293,
								3306
							],
							[
								3628,
								3641
							],
							[
								3838,
								3846
							],
							[
								3922,
								3931
							],
							[
								4037,
								4058
							],
							[
								4294,
								4316
							],
							[
								4563,
								4571
							],
							[
								4611,
								4620
							],
							[
								5123,
								5136
							],
							[
								5452,
								5465
							],
							[
								5662,
								5670
							],
							[
								5767,
								5795
							],
							[
								6112,
								6120
							],
							[
								6159,
								6168
							],
							[
								6621,
								6634
							],
							[
								6909,
								6922
							],
							[
								7119,
								7127
							],
							[
								7223,
								7250
							],
							[
								7528,
								7536
							],
							[
								7582,
								7591
							],
							[
								8236,
								8249
							],
							[
								8542,
								8555
							],
							[
								8752,
								8760
							],
							[
								8881,
								8915
							],
							[
								9211,
								9219
							],
							[
								9265,
								9274
							],
							[
								9913,
								9926
							],
							[
								10219,
								10232
							],
							[
								10429,
								10437
							],
							[
								10530,
								10538
							],
							[
								10583,
								10592
							],
							[
								11234,
								11247
							],
							[
								11541,
								11554
							],
							[
								11751,
								11759
							],
							[
								11851,
								11859
							],
							[
								11897,
								11906
							],
							[
								12533,
								12546
							],
							[
								12868,
								12881
							],
							[
								13061,
								13070
							],
							[
								13337,
								13345
							],
							[
								13560,
								13568
							],
							[
								13607,
								13616
							],
							[
								14264,
								14272
							],
							[
								14365,
								14373
							],
							[
								14429,
								14441
							],
							[
								14468,
								14478
							],
							[
								14500,
								14509
							],
							[
								15275,
								15288
							],
							[
								15610,
								15623
							],
							[
								15831,
								15835
							],
							[
								15996,
								16004
							],
							[
								16050,
								16059
							],
							[
								16716,
								16729
							],
							[
								17051,
								17064
							],
							[
								17261,
								17269
							],
							[
								17385,
								17396
							],
							[
								17555,
								17566
							],
							[
								17648,
								17658
							],
							[
								17759,
								17773
							],
							[
								17855,
								17865
							],
							[
								17956,
								17967
							],
							[
								18188,
								18201
							],
							[
								18464,
								18477
							],
							[
								18673,
								18686
							],
							[
								18928,
								18941
							],
							[
								19228,
								19241
							],
							[
								19464,
								19477
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAICBtYWluKC4uLmFyZ3MpCkFycmF5QnVmVG9TdHJpbmcoYnVmLCBvZmZzZXQsIGxlbmd0aCkAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-stream.js",
						"symkeys":
						[
							[
								171,
								192
							]
						],
						"symlist":
						[
							"async function main()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAIAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-svgpath.js",
						"symkeys":
						[
							[
								995,
								999
							],
							[
								2140,
								2144
							],
							[
								2364,
								2368
							],
							[
								3411,
								3448
							]
						],
						"symlist":
						[
							"n =>",
							"p =>",
							"p =>",
							"function* dataToPoints(d, steps = 10)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAICBtYWluKCkAAAAAAAAAACYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-nanovg.js",
						"symkeys":
						[
							[
								845,
								867
							],
							[
								1516,
								1538
							],
							[
								1882,
								1901
							],
							[
								2017,
								2043
							],
							[
								2110,
								2149
							],
							[
								2231,
								2252
							],
							[
								5134,
								5138
							],
							[
								5334,
								5368
							],
							[
								5634,
								5670
							]
						],
						"symlist":
						[
							"function GLFW(...args)",
							"function main(...args)",
							"handleKey(charCode)",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"n =>",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAICBmdW5jdGlvbipkYXRhVG9Qb2ludHMoZCwgc3RlcHMgPSAxMCkAAAAAAAAAAMAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-moon.js",
						"symkeys":
						[
							[
								252,
								267
							]
						],
						"symlist":
						[
							"function moon()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAAAAR0xGVyguLi5hcmdzKQogIG1haW4oLi4uYXJncykKICBoYW5kbGVLZXkoY2hhckNvZGUpCiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAAAIAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								555,
								583
							],
							[
								1224,
								1230
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAICBtb29uKCkAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-shparse.js",
						"symkeys":
						[
							[
								3444,
								3474
							],
							[
								3676,
								3704
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3876,
								3915
							],
							[
								4095,
								4120
							],
							[
								5876,
								5894
							],
							[
								5965,
								5993
							],
							[
								6197,
								6208
							],
							[
								6353,
								6369
							],
							[
								6546,
								6565
							],
							[
								6651,
								6693
							],
							[
								7744,
								7750
							],
							[
								8492,
								8507
							],
							[
								8675,
								8686
							],
							[
								11914,
								11930
							],
							[
								12161,
								12178
							],
							[
								12230,
								12244
							],
							[
								12651,
								12671
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlAAAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAWgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgpbMF0sICcuanMnKSwgc3VmZml4ID0gJycpCiAgbWFpbiguLi5hcmdzKQogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIHF1aXQod2h5KQAAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3876,
								3915
							],
							[
								4095,
								4120
							],
							[
								5876,
								5894
							],
							[
								5965,
								5993
							],
							[
								6197,
								6208
							],
							[
								6353,
								6369
							],
							[
								6546,
								6565
							],
							[
								6651,
								6693
							],
							[
								7744,
								7750
							],
							[
								8492,
								8507
							],
							[
								8675,
								8686
							],
							[
								11914,
								11930
							],
							[
								12161,
								12178
							],
							[
								12230,
								12244
							],
							[
								12651,
								12671
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"js_array_length",
							"JS_DeletePropertyInt64",
							"js_array_truncate",
							"js_array_iterator",
							" js_array_iterator",
							" operator*",
							" operator++",
							" operator++",
							" operator==",
							" operator!=",
							"js_begin",
							"js_end",
							"js_array",
							" to_vector",
							" from",
							" from_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							" to_scalar",
							"js_array<T>::to_array",
							"js_array<T>::to_scalar",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<uint32_t>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSValue>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSColorData<T>>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_scalar",
							" to_array",
							"js_array",
							" to_vector",
							" to_array",
							"js_array",
							" contour_type",
							" point_type",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" from",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array_to",
							"js_array_to",
							"array_type",
							"js_array_input",
							"array_type",
							"js_array_to",
							"js_array_from",
							"js_array_from",
							"js_array_from",
							"js_array_copy",
							"js_array_copy",
							"js_array_copy"
						]
					},
					"AQAAAAAAAAAAAAAAuQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					382,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
=======
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB3AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQpXb3JrZXJNZXNzYWdlKGUpCiAgc2VuZChpZCwgYm9keSkAAAAAAAAAAFoBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sourcemap.js",
						"symkeys":
						[
							[
								188,
								216
							]
						],
						"symlist":
						[
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgpbMF0sICcuanMnKSwgc3VmZml4ID0gJycpCiAgbWFpbiguLi5hcmdzKQogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgc29ja2xpc3QoKQogIHF1aXQod2h5KQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sourcemap.js",
						"symkeys":
						[
							[
								188,
								216
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BAAAICBqc19hcnJheV9sZW5ndGgKSlNfRGVsZXRlUHJvcGVydHlJbnQ2NAogIGpzX2FycmF5X3RydW5jYXRlCiAganNfYXJyYXlfaXRlcmF0b3IKICBqc19hcnJheV9pdGVyYXRvcgogIG9wZXJhdG9yKgogIG9wZXJhdG9yKysKICBvcGVyYXRvcisrCiAgb3BlcmF0b3I9PQogIG9wZXJhdG9yIT0KICBqc19iZWdpbgogIGpzX2VuZAogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgZnJvbQogIGZyb21fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIHRvX3NjYWxhcgogIGpzX2FycmF5PFQ+Ojp0b19hcnJheQogIGpzX2FycmF5PFQ+Ojp0b19zY2FsYXIKICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheTx1aW50MzJfdD46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNWYWx1ZT46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNDb2xvckRhdGE8VD4+Ojp0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19zY2FsYXIKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgdG9fYXJyYXkKICBqc19hcnJheQogIGNvbnRvdXJfdHlwZQogIHBvaW50X3R5cGUKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIGZyb20KICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheV90bwogIGpzX2FycmF5X3RvCiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X2lucHV0CiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X3RvCiAganNfYXJyYXlfZnJvbQogIGpzX2FycmF5X2Zyb20KICBqc19hcnJheV9mcm9tCiAganNfYXJyYXlfY29weQogIGpzX2FycmF5X2NvcHkKICBqc19hcnJheV9jb3B5AAAAAAAAAAD/AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					383,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
						"symkeys":
						[
							[
								68,
								79
							],
							[
								92,
								109
							],
							[
								197,
								202
							],
							[
								214,
								227
							],
							[
								231,
								242
							],
							[
								337,
								350
							],
							[
								3372,
								3385
							],
							[
								3389,
								3399
							],
							[
								3562,
								3575
							],
							[
								3579,
								3592
							],
							[
								3687,
								3700
							],
							[
								3743,
								3756
							],
							[
								3913,
								3926
							],
							[
								3948,
								3961
							],
							[
								3975,
								3988
							],
							[
								4091,
								4105
							],
							[
								4109,
								4123
							],
							[
								4167,
								4180
							],
							[
								4184,
								4203
							],
							[
								4261,
								4278
							],
							[
								4293,
								4306
							],
							[
								4312,
								4325
							],
							[
								4374,
								4387
							],
							[
								4391,
								4410
							],
							[
								4464,
								4483
							],
							[
								4487,
								4506
							],
							[
								4562,
								4578
							],
							[
								4582,
								4593
							],
							[
								4868,
								4880
							],
							[
								4979,
								5011
							],
							[
								5269,
								5283
							],
							[
								5314,
								5333
							],
							[
								5377,
								5399
							],
							[
								5403,
								5425
							],
							[
								5429,
								5446
							],
							[
								5462,
								5487
							],
							[
								5491,
								5516
							],
							[
								5520,
								5537
							],
							[
								5583,
								5602
							],
							[
								5606,
								5620
							],
							[
								5624,
								5643
							],
							[
								5657,
								5674
							],
							[
								5678,
								5692
							],
							[
								5696,
								5713
							],
							[
								5727,
								5740
							],
							[
								5955,
								5968
							],
							[
								6085,
								6099
							]
						],
						"symlist":
						[
							"find_opencv",
							"OPENCV_CHANGE_DIR",
							"VALUE",
							"OPENCV_PREFIX",
							"OPENCV_ROOT",
							"OPENCV_CHANGE",
							"OPENCV_PREFIX",
							"OpenCV_DIR",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_VERSION",
							"OpenCV_VERSION",
							"OPENCV_LIBDIR",
							"OpenCV_INSTALL_PATH",
							"OPENCV_LINK_FLAGS",
							"OPENCV_LIBDIR",
							"OPENCV_LIBDIR",
							"OPENCV_PREFIX",
							"OpenCV_INSTALL_PATH",
							"OPENCV_INCLUDE_DIRS",
							"OpenCV_INCLUDE_DIRS",
							"OPENCV_LIBRARIES",
							"OpenCV_LIBS",
							"OPENCV_FOUND",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"OPENCV_LIB_DIR",
							"OPENCV_INCLUDE_DIRS",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"OPENCV_LINK_FLAGS",
							"CMAKE_SHARED_LINKER_FLAGS",
							"CMAKE_SHARED_LINKER_FLAGS",
							"OPENCV_LINK_FLAGS",
							"CMAKE_INSTALL_RPATH",
							"OPENCV_LIB_DIR",
							"CMAKE_INSTALL_RPATH",
							"CMAKE_BUILD_RPATH",
							"OPENCV_LIB_DIR",
							"CMAKE_BUILD_RPATH",
							"OPENCV_RESULT",
							"OPENCV_PREFIX",
							"OPENCV_CHECKED"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAAJAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.config.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAJAwAAICBmaW5kX29wZW5jdgpPUEVOQ1ZfQ0hBTkdFX0RJUgpWQUxVRQpPUEVOQ1ZfUFJFRklYCk9QRU5DVl9ST09UCk9QRU5DVl9DSEFOR0UKT1BFTkNWX1BSRUZJWApPcGVuQ1ZfRElSCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1BSRUZJWApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1BSRUZJWApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1ZFUlNJT04KT3BlbkNWX1ZFUlNJT04KT1BFTkNWX0xJQkRJUgpPcGVuQ1ZfSU5TVEFMTF9QQVRICk9QRU5DVl9MSU5LX0ZMQUdTCk9QRU5DVl9MSUJESVIKT1BFTkNWX0xJQkRJUgpPUEVOQ1ZfUFJFRklYCk9wZW5DVl9JTlNUQUxMX1BBVEgKT1BFTkNWX0lOQ0xVREVfRElSUwpPcGVuQ1ZfSU5DTFVERV9ESVJTCk9QRU5DVl9MSUJSQVJJRVMKT3BlbkNWX0xJQlMKT1BFTkNWX0ZPVU5EClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICk9QRU5DVl9MSUJfRElSCk9QRU5DVl9JTkNMVURFX0RJUlMKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCk9QRU5DVl9MSU5LX0ZMQUdTCkNNQUtFX1NIQVJFRF9MSU5LRVJfRkxBR1MKQ01BS0VfU0hBUkVEX0xJTktFUl9GTEFHUwpPUEVOQ1ZfTElOS19GTEFHUwpDTUFLRV9JTlNUQUxMX1JQQVRICk9QRU5DVl9MSUJfRElSCkNNQUtFX0lOU1RBTExfUlBBVEgKQ01BS0VfQlVJTERfUlBBVEgKT1BFTkNWX0xJQl9ESVIKQ01BS0VfQlVJTERfUlBBVEgKT1BFTkNWX1JFU1VMVApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9DSEVDS0VEAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAATQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
							]
						],
						"symlist":
						[
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AQAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
							]
						],
						"symlist":
						[
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAM8CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
=======
							"async function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9599,
								9627
							],
							[
								9798,
								9821
							],
							[
								9881,
								9904
							],
							[
								10027,
								10056
							],
							[
								10343,
								10367
							],
							[
								10568,
								10595
							],
							[
								10643,
								10648
							],
							[
								10926,
								10955
							],
							[
								11501,
								11514
							],
							[
								11747,
								11755
							],
							[
								12270,
								12312
							],
							[
								12453,
								12458
							],
							[
								12612,
								12633
							],
							[
								12674,
								12693
							],
							[
								12704,
								12722
							],
							[
								12857,
								12862
							],
							[
								13599,
								13637
							],
							[
								16813,
								16836
							],
							[
								17635,
								17647
							],
							[
								17899,
								17938
							],
							[
								20238,
								20277
							],
							[
								20313,
								20333
							],
							[
								20960,
								20964
							],
							[
								21339,
								21372
							],
							[
								21456,
								21465
							],
							[
								21498,
								21519
							],
							[
								22283,
								22297
							],
							[
								22414,
								22430
							],
							[
								22579,
								22587
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
=======
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				],
				[
					8,
					1,
					"outline_refresh",
					{
<<<<<<< HEAD
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAADPAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
							]
						],
						"symlist":
						[
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AQAAAAAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
=======
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9599,
								9627
							],
							[
								9798,
								9821
							],
							[
								9881,
								9904
							],
							[
								10027,
								10056
							],
							[
								10343,
								10367
							],
							[
								10568,
								10595
							],
							[
								10643,
								10648
							],
							[
								10926,
								10955
							],
							[
								11501,
								11514
							],
							[
								11747,
								11755
							],
							[
								12270,
								12312
							],
							[
								12453,
								12458
							],
							[
								12612,
								12633
							],
							[
								12674,
								12693
							],
							[
								12704,
								12722
							],
							[
								12857,
								12862
							],
							[
								13599,
								13637
							],
							[
								16813,
								16836
							],
							[
								17635,
								17647
							],
							[
								17899,
								17938
							],
							[
								20238,
								20277
							],
							[
								20313,
								20333
							],
							[
								20960,
								20964
							],
							[
								21339,
								21372
							],
							[
								21456,
								21465
							],
							[
								21498,
								21519
							],
							[
								22283,
								22297
							],
							[
								22414,
								22430
							],
							[
								22579,
								22587
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAgAAAAAAAJ0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9599,
								9627
							],
							[
								9798,
								9821
							],
							[
								9881,
								9904
							],
							[
								10027,
								10056
							],
							[
								10343,
								10367
							],
							[
								10568,
								10595
							],
							[
								10643,
								10648
							],
							[
								10926,
								10955
							],
							[
								11501,
								11514
							],
							[
								11747,
								11755
							],
							[
								12270,
								12312
							],
							[
								12453,
								12458
							],
							[
								12612,
								12633
							],
							[
								12674,
								12693
							],
							[
								12704,
								12722
							],
							[
								12857,
								12862
							],
							[
								13599,
								13637
							],
							[
								16836,
								16859
							],
							[
								17658,
								17670
							],
							[
								17922,
								17961
							],
							[
								20323,
								20362
							],
							[
								20398,
								20418
							],
							[
								21045,
								21049
							],
							[
								21424,
								21457
							],
							[
								21541,
								21550
							],
							[
								21583,
								21604
							],
							[
								22368,
								22382
							],
							[
								22499,
								22515
							],
							[
								22664,
								22672
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9599,
								9627
							],
							[
								9798,
								9821
							],
							[
								9881,
								9904
							],
							[
								10027,
								10056
							],
							[
								10343,
								10367
							],
							[
								10568,
								10595
							],
							[
								10643,
								10648
							],
							[
								10926,
								10955
							],
							[
								11501,
								11514
							],
							[
								11747,
								11755
							],
							[
								12270,
								12312
							],
							[
								12453,
								12458
							],
							[
								12612,
								12633
							],
							[
								12674,
								12693
							],
							[
								12704,
								12722
							],
							[
								12857,
								12862
							],
							[
								13599,
								13637
							],
							[
								16842,
								16866
							],
							[
								17665,
								17677
							],
							[
								17929,
								17968
							],
							[
								20333,
								20372
							],
							[
								20408,
								20428
							],
							[
								21055,
								21059
							],
							[
								21434,
								21467
							],
							[
								21551,
								21560
							],
							[
								21593,
								21614
							],
							[
								22378,
								22392
							],
							[
								22509,
								22525
							],
							[
								22674,
								22682
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9599,
								9627
							],
							[
								9798,
								9821
							],
							[
								9881,
								9904
							],
							[
								10027,
								10056
							],
							[
								10343,
								10367
							],
							[
								10568,
								10595
							],
							[
								10643,
								10648
							],
							[
								10926,
								10955
							],
							[
								11501,
								11514
							],
							[
								11747,
								11755
							],
							[
								12270,
								12312
							],
							[
								12453,
								12458
							],
							[
								12612,
								12633
							],
							[
								12674,
								12693
							],
							[
								12704,
								12722
							],
							[
								12857,
								12862
							],
							[
								13599,
								13637
							],
							[
								16842,
								16866
							],
							[
								17665,
								17677
							],
							[
								17929,
								17968
							],
							[
								20333,
								20372
							],
							[
								20408,
								20428
							],
							[
								21055,
								21059
							],
							[
								21434,
								21467
							],
							[
								21551,
								21560
							],
							[
								21593,
								21614
							],
							[
								22378,
								22392
							],
							[
								22509,
								22525
							],
							[
								22674,
								22682
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1259,
								1274
							],
							[
								1300,
								1321
							],
							[
								1354,
								1382
							],
							[
								1422,
								1442
							],
							[
								1472,
								1484
							],
							[
								1507,
								1517
							],
							[
								1538,
								1559
							],
							[
								1591,
								1616
							],
							[
								1661,
								1682
							],
							[
								1758,
								1779
							],
							[
								1879,
								1888
							],
							[
								1906,
								1916
							],
							[
								1978,
								1987
							],
							[
								2048,
								2056
							],
							[
								2116,
								2124
							],
							[
								2186,
								2214
							],
							[
								2255,
								2262
							],
							[
								2306,
								2356
							],
							[
								2360,
								2364
							],
							[
								2387,
								2397
							],
							[
								2428,
								2452
							],
							[
								2483,
								2488
							],
							[
								2527,
								2552
							],
							[
								2800,
								2812
							],
							[
								2833,
								2853
							],
							[
								2927,
								2956
							],
							[
								3046,
								3067
							],
							[
								3108,
								3187
							],
							[
								3259,
								3289
							],
							[
								3359,
								3393
							],
							[
								3441,
								3464
							],
							[
								3491,
								3495
							],
							[
								3549,
								3576
							],
							[
								3654,
								3686
							],
							[
								3882,
								3904
							],
							[
								4206,
								4219
							],
							[
								4376,
								4395
							],
							[
								4460,
								4503
							],
							[
								5246,
								5268
							],
							[
								5331,
								5337
							],
							[
								5373,
								5377
							],
							[
								5557,
								5578
							],
							[
								5632,
								5661
							],
							[
								8936,
								8967
							],
							[
								9576,
								9604
							],
							[
								9775,
								9798
							],
							[
								9858,
								9881
							],
							[
								10004,
								10033
							],
							[
								10250,
								10274
							],
							[
								10475,
								10502
							],
							[
								10550,
								10555
							],
							[
								10833,
								10862
							],
							[
								11408,
								11421
							],
							[
								11654,
								11662
							],
							[
								12151,
								12188
							],
							[
								12318,
								12323
							],
							[
								12477,
								12498
							],
							[
								12539,
								12558
							],
							[
								12568,
								12580
							],
							[
								12698,
								12703
							],
							[
								13440,
								13478
							],
							[
								16682,
								16705
							],
							[
								17504,
								17516
							],
							[
								17732,
								17771
							],
							[
								20119,
								20158
							],
							[
								20194,
								20214
							],
							[
								20841,
								20845
							],
							[
								21220,
								21253
							],
							[
								21337,
								21346
							],
							[
								21379,
								21400
							],
							[
								22122,
								22136
							],
							[
								22253,
								22269
							],
							[
								22408,
								22416
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1259,
								1274
							],
							[
								1300,
								1321
							],
							[
								1354,
								1382
							],
							[
								1422,
								1442
							],
							[
								1472,
								1484
							],
							[
								1507,
								1517
							],
							[
								1538,
								1559
							],
							[
								1591,
								1616
							],
							[
								1661,
								1682
							],
							[
								1758,
								1779
							],
							[
								1879,
								1888
							],
							[
								1906,
								1916
							],
							[
								1978,
								1987
							],
							[
								2048,
								2056
							],
							[
								2116,
								2124
							],
							[
								2186,
								2214
							],
							[
								2255,
								2262
							],
							[
								2306,
								2356
							],
							[
								2360,
								2364
							],
							[
								2387,
								2397
							],
							[
								2428,
								2452
							],
							[
								2483,
								2488
							],
							[
								2527,
								2552
							],
							[
								2800,
								2812
							],
							[
								2833,
								2853
							],
							[
								2927,
								2956
							],
							[
								3046,
								3067
							],
							[
								3108,
								3187
							],
							[
								3259,
								3289
							],
							[
								3359,
								3393
							],
							[
								3441,
								3464
							],
							[
								3491,
								3495
							],
							[
								3549,
								3576
							],
							[
								3654,
								3686
							],
							[
								3882,
								3904
							],
							[
								4206,
								4219
							],
							[
								4376,
								4395
							],
							[
								4460,
								4503
							],
							[
								5246,
								5268
							],
							[
								5331,
								5337
							],
							[
								5373,
								5377
							],
							[
								5557,
								5578
							],
							[
								5632,
								5661
							],
							[
								8936,
								8967
							],
							[
								9576,
								9604
							],
							[
								9775,
								9798
							],
							[
								9858,
								9881
							],
							[
								10004,
								10033
							],
							[
								10250,
								10274
							],
							[
								10475,
								10502
							],
							[
								10550,
								10555
							],
							[
								10833,
								10862
							],
							[
								11408,
								11421
							],
							[
								11654,
								11662
							],
							[
								12151,
								12188
							],
							[
								12318,
								12323
							],
							[
								12477,
								12498
							],
							[
								12539,
								12558
							],
							[
								12568,
								12580
							],
							[
								12698,
								12703
							],
							[
								13440,
								13478
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1259,
								1274
							],
							[
								1300,
								1321
							],
							[
								1354,
								1382
							],
							[
								1422,
								1442
							],
							[
								1472,
								1484
							],
							[
								1507,
								1517
							],
							[
								1538,
								1559
							],
							[
								1591,
								1616
							],
							[
								1661,
								1682
							],
							[
								1758,
								1779
							],
							[
								1879,
								1888
							],
							[
								1906,
								1916
							],
							[
								1978,
								1987
							],
							[
								2048,
								2056
							],
							[
								2116,
								2124
							],
							[
								2186,
								2214
							],
							[
								2255,
								2262
							],
							[
								2306,
								2356
							],
							[
								2360,
								2364
							],
							[
								2387,
								2397
							],
							[
								2428,
								2452
							],
							[
								2483,
								2488
							],
							[
								2527,
								2552
							],
							[
								2800,
								2812
							],
							[
								2833,
								2853
							],
							[
								2927,
								2956
							],
							[
								3046,
								3067
							],
							[
								3108,
								3187
							],
							[
								3259,
								3289
							],
							[
								3359,
								3393
							],
							[
								3441,
								3464
							],
							[
								3491,
								3495
							],
							[
								3549,
								3576
							],
							[
								3654,
								3686
							],
							[
								3882,
								3904
							],
							[
								4206,
								4219
							],
							[
								4376,
								4395
							],
							[
								4460,
								4503
							],
							[
								5246,
								5268
							],
							[
								5331,
								5337
							],
							[
								5373,
								5377
							],
							[
								5557,
								5578
							],
							[
								5632,
								5661
							],
							[
								8936,
								8967
							],
							[
								9576,
								9604
							],
							[
								9775,
								9798
							],
							[
								9858,
								9881
							],
							[
								10004,
								10033
							],
							[
								10250,
								10274
							],
							[
								10475,
								10502
							],
							[
								10550,
								10555
							],
							[
								10833,
								10862
							],
							[
								11408,
								11421
							],
							[
								11654,
								11662
							],
							[
								12151,
								12188
							],
							[
								12318,
								12323
							],
							[
								12477,
								12498
							],
							[
								12539,
								12558
							],
							[
								12568,
								12580
							],
							[
								12698,
								12703
							],
							[
								13440,
								13478
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAzwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAE0FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.config.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
							]
						],
						"symlist":
						[
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AQAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
						"symkeys":
						[
							[
								478,
								493
							],
							[
								768,
								790
							],
							[
								873,
								890
							],
							[
								1268,
								1285
							],
							[
								1355,
								1372
							],
							[
								1477,
								1486
							],
							[
								1576,
								1586
							],
							[
								1653,
								1663
							],
							[
								1752,
								1762
							],
							[
								1858,
								1868
							],
							[
								2050,
								2058
							],
							[
								2170,
								2176
							],
							[
								2300,
								2308
							],
							[
								2338,
								2347
							],
							[
								2977,
								2981
							],
							[
								3134,
								3145
							],
							[
								3293,
								3306
							],
							[
								3628,
								3641
							],
							[
								3838,
								3846
							],
							[
								3922,
								3931
							],
							[
								4037,
								4058
							],
							[
								4294,
								4316
							],
							[
								4563,
								4571
							],
							[
								4611,
								4620
							],
							[
								5123,
								5136
							],
							[
								5452,
								5465
							],
							[
								5662,
								5670
							],
							[
								5767,
								5795
							],
							[
								6112,
								6120
							],
							[
								6159,
								6168
							],
							[
								6621,
								6634
							],
							[
								6909,
								6922
							],
							[
								7119,
								7127
							],
							[
								7223,
								7250
							],
							[
								7528,
								7536
							],
							[
								7582,
								7591
							],
							[
								8236,
								8249
							],
							[
								8542,
								8555
							],
							[
								8752,
								8760
							],
							[
								8881,
								8915
							],
							[
								9211,
								9219
							],
							[
								9265,
								9274
							],
							[
								9913,
								9926
							],
							[
								10219,
								10232
							],
							[
								10429,
								10437
							],
							[
								10530,
								10538
							],
							[
								10583,
								10592
							],
							[
								11234,
								11247
							],
							[
								11541,
								11554
							],
							[
								11751,
								11759
							],
							[
								11851,
								11859
							],
							[
								11897,
								11906
							],
							[
								12533,
								12546
							],
							[
								12868,
								12881
							],
							[
								13061,
								13070
							],
							[
								13337,
								13345
							],
							[
								13560,
								13568
							],
							[
								13607,
								13616
							],
							[
								14264,
								14272
							],
							[
								14365,
								14373
							],
							[
								14429,
								14441
							],
							[
								14468,
								14478
							],
							[
								14500,
								14509
							],
							[
								15275,
								15288
							],
							[
								15610,
								15623
							],
							[
								15831,
								15835
							],
							[
								15996,
								16004
							],
							[
								16050,
								16059
							],
							[
								16716,
								16729
							],
							[
								17051,
								17064
							],
							[
								17261,
								17269
							],
							[
								17385,
								17396
							],
							[
								17555,
								17566
							],
							[
								17648,
								17658
							],
							[
								17759,
								17773
							],
							[
								17855,
								17865
							],
							[
								17956,
								17967
							],
							[
								18188,
								18201
							],
							[
								18464,
								18477
							],
							[
								18673,
								18686
							],
							[
								18928,
								18941
							],
							[
								19228,
								19241
							],
							[
								19464,
								19477
							]
						],
						"symlist":
						[
							"js_array_length",
							"JS_DeletePropertyInt64",
							"js_array_truncate",
							"js_array_iterator",
							" js_array_iterator",
							" operator*",
							" operator++",
							" operator++",
							" operator==",
							" operator!=",
							"js_begin",
							"js_end",
							"js_array",
							" to_vector",
							" from",
							" from_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							" to_scalar",
							"js_array<T>::to_array",
							"js_array<T>::to_scalar",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<uint32_t>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSValue>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSColorData<T>>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_scalar",
							" to_array",
							"js_array",
							" to_vector",
							" to_array",
							"js_array",
							" contour_type",
							" point_type",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" from",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array_to",
							"js_array_to",
							"array_type",
							"js_array_input",
							"array_type",
							"js_array_to",
							"js_array_from",
							"js_array_from",
							"js_array_from",
							"js_array_copy",
							"js_array_copy",
							"js_array_copy"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAC5BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
							]
						],
						"symlist":
						[
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BAAAICBqc19hcnJheV9sZW5ndGgKSlNfRGVsZXRlUHJvcGVydHlJbnQ2NAogIGpzX2FycmF5X3RydW5jYXRlCiAganNfYXJyYXlfaXRlcmF0b3IKICBqc19hcnJheV9pdGVyYXRvcgogIG9wZXJhdG9yKgogIG9wZXJhdG9yKysKICBvcGVyYXRvcisrCiAgb3BlcmF0b3I9PQogIG9wZXJhdG9yIT0KICBqc19iZWdpbgogIGpzX2VuZAogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgZnJvbQogIGZyb21fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIHRvX3NjYWxhcgogIGpzX2FycmF5PFQ+Ojp0b19hcnJheQogIGpzX2FycmF5PFQ+Ojp0b19zY2FsYXIKICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheTx1aW50MzJfdD46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNWYWx1ZT46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNDb2xvckRhdGE8VD4+Ojp0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19zY2FsYXIKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgdG9fYXJyYXkKICBqc19hcnJheQogIGNvbnRvdXJfdHlwZQogIHBvaW50X3R5cGUKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIGZyb20KICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheV90bwogIGpzX2FycmF5X3RvCiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X2lucHV0CiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X3RvCiAganNfYXJyYXlfZnJvbQogIGpzX2FycmF5X2Zyb20KICBqc19hcnJheV9mcm9tCiAganNfYXJyYXlfY29weQogIGpzX2FycmF5X2NvcHkKICBqc19hcnJheV9jb3B5AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-qjs.c",
						"symkeys":
						[
							[
								277,
								285
							],
							[
								993,
								1002
							],
							[
								1587,
								1606
							],
							[
								1989,
								1993
=======
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1259,
								1274
							],
							[
								1300,
								1321
							],
							[
								1354,
								1382
							],
							[
								1422,
								1442
							],
							[
								1472,
								1484
							],
							[
								1507,
								1517
							],
							[
								1538,
								1559
							],
							[
								1591,
								1616
							],
							[
								1661,
								1682
							],
							[
								1758,
								1779
							],
							[
								1879,
								1888
							],
							[
								1906,
								1916
							],
							[
								1978,
								1987
							],
							[
								2048,
								2056
							],
							[
								2116,
								2124
							],
							[
								2186,
								2214
							],
							[
								2255,
								2262
							],
							[
								2306,
								2356
							],
							[
								2360,
								2364
							],
							[
								2387,
								2397
							],
							[
								2428,
								2452
							],
							[
								2483,
								2488
							],
							[
								2527,
								2552
							],
							[
								2800,
								2812
							],
							[
								2833,
								2853
							],
							[
								2927,
								2956
							],
							[
								3046,
								3067
							],
							[
								3108,
								3187
							],
							[
								3259,
								3289
							],
							[
								3359,
								3393
							],
							[
								3441,
								3464
							],
							[
								3491,
								3495
							],
							[
								3549,
								3576
							],
							[
								3654,
								3686
							],
							[
								3882,
								3904
							],
							[
								4206,
								4219
							],
							[
								4376,
								4395
							],
							[
								4460,
								4503
							],
							[
								5246,
								5268
							],
							[
								5331,
								5337
							],
							[
								5373,
								5377
							],
							[
								5557,
								5578
							],
							[
								5632,
								5661
							],
							[
								8936,
								8967
							],
							[
								9576,
								9604
							],
							[
								9775,
								9798
							],
							[
								9858,
								9881
							],
							[
								10004,
								10033
							],
							[
								10250,
								10274
							],
							[
								10475,
								10502
							],
							[
								10550,
								10555
							],
							[
								10833,
								10862
							],
							[
								11408,
								11421
							],
							[
								11654,
								11662
							],
							[
								12151,
								12188
							],
							[
								12318,
								12323
							],
							[
								12477,
								12498
							],
							[
								12539,
								12558
							],
							[
								12568,
								12580
							],
							[
								12698,
								12703
							],
							[
								13440,
								13478
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1275,
								1290
							],
							[
								1316,
								1337
							],
							[
								1370,
								1398
							],
							[
								1438,
								1458
							],
							[
								1488,
								1500
							],
							[
								1523,
								1533
							],
							[
								1554,
								1575
							],
							[
								1607,
								1632
							],
							[
								1677,
								1698
							],
							[
								1774,
								1795
							],
							[
								1895,
								1904
							],
							[
								1922,
								1932
							],
							[
								1994,
								2003
							],
							[
								2064,
								2072
							],
							[
								2132,
								2140
							],
							[
								2202,
								2230
							],
							[
								2271,
								2278
							],
							[
								2322,
								2372
							],
							[
								2376,
								2380
							],
							[
								2403,
								2413
							],
							[
								2444,
								2468
							],
							[
								2499,
								2504
							],
							[
								2543,
								2568
							],
							[
								2816,
								2828
							],
							[
								2849,
								2869
							],
							[
								2943,
								2972
							],
							[
								3062,
								3083
							],
							[
								3124,
								3203
							],
							[
								3275,
								3305
							],
							[
								3375,
								3409
							],
							[
								3457,
								3480
							],
							[
								3507,
								3511
							],
							[
								3565,
								3592
							],
							[
								3670,
								3702
							],
							[
								3898,
								3920
							],
							[
								4222,
								4235
							],
							[
								4392,
								4411
							],
							[
								4476,
								4519
							],
							[
								5262,
								5284
							],
							[
								5347,
								5353
							],
							[
								5389,
								5393
							],
							[
								5573,
								5594
							],
							[
								5648,
								5677
							],
							[
								8952,
								8983
							],
							[
								9592,
								9620
							],
							[
								9791,
								9814
							],
							[
								9874,
								9897
							],
							[
								10020,
								10049
							],
							[
								10266,
								10290
							],
							[
								10491,
								10518
							],
							[
								10566,
								10571
							],
							[
								10849,
								10878
							],
							[
								11424,
								11437
							],
							[
								11670,
								11678
							],
							[
								12167,
								12204
							],
							[
								12334,
								12339
							],
							[
								12493,
								12514
							],
							[
								12555,
								12574
							],
							[
								12584,
								12596
							],
							[
								12714,
								12719
							],
							[
								13456,
								13494
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgZmluZFR5cGUodmFsdWUpCiAgZ2V0Qml0RGVwdGgobWF0KQogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZnVuY3Rpb24qZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBmdW5jdGlvbipnZXRUb3BsZXZlbChoaWVyKQogIGZ1bmN0aW9uKndhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCiAgc2hvd091dHB1dCgpCiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1275,
								1290
							],
							[
								1316,
								1337
							],
							[
								1370,
								1398
							],
							[
								1438,
								1458
							],
							[
								1488,
								1500
							],
							[
								1523,
								1533
							],
							[
								1554,
								1575
							],
							[
								1607,
								1632
							],
							[
								1677,
								1698
							],
							[
								1774,
								1795
							],
							[
								1895,
								1904
							],
							[
								1922,
								1932
							],
							[
								1994,
								2003
							],
							[
								2064,
								2072
							],
							[
								2132,
								2140
							],
							[
								2202,
								2230
							],
							[
								2271,
								2278
							],
							[
								2322,
								2372
							],
							[
								2376,
								2380
							],
							[
								2403,
								2413
							],
							[
								2444,
								2468
							],
							[
								2499,
								2504
							],
							[
								2543,
								2568
							],
							[
								2816,
								2828
							],
							[
								2849,
								2869
							],
							[
								2943,
								2972
							],
							[
								3062,
								3083
							],
							[
								3124,
								3203
							],
							[
								3275,
								3305
							],
							[
								3375,
								3409
							],
							[
								3457,
								3480
							],
							[
								3507,
								3511
							],
							[
								3565,
								3592
							],
							[
								3670,
								3702
							],
							[
								3898,
								3920
							],
							[
								4222,
								4235
							],
							[
								4392,
								4411
							],
							[
								4476,
								4519
							],
							[
								5262,
								5284
							],
							[
								5347,
								5353
							],
							[
								5389,
								5393
							],
							[
								5573,
								5594
							],
							[
								5648,
								5677
							],
							[
								8952,
								8983
							],
							[
								9592,
								9620
							],
							[
								9791,
								9814
							],
							[
								9874,
								9897
							],
							[
								10020,
								10049
							],
							[
								10266,
								10290
							],
							[
								10491,
								10518
							],
							[
								10566,
								10571
							],
							[
								10849,
								10878
							],
							[
								11424,
								11437
							],
							[
								11670,
								11678
							],
							[
								12167,
								12204
							],
							[
								12334,
								12339
							],
							[
								12493,
								12514
							],
							[
								12555,
								12574
							],
							[
								12584,
								12596
							],
							[
								12714,
								12719
							],
							[
								13456,
								13494
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"‚Äî‚íª‚Äì‚ÄÉeval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉeval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉJS_NewCustomContext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAI8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
=======
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAASGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBmaW5kVHlwZSh2YWx1ZSkKICBnZXRCaXREZXB0aChtYXQpCiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBmdW5jdGlvbipnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGZ1bmN0aW9uKmdldFRvcGxldmVsKGhpZXIpCiAgZnVuY3Rpb24qd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKSG91Z2hMaW5lcyhzcmMsIGRzdCkKICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKICBzaG93T3V0cHV0KCkKICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKICBzYXZlTGluZXMobGluZXMsIHNpemUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/image-helpers.js",
						"symkeys":
						[
							[
								53,
								86
							],
							[
								335,
								367
							]
						],
						"symlist":
						[
							" function MakeSVG(children, size)",
							" function SaveSVG(filename, doc)"
						]
					},
					"AQAAAAAAAAAAAAAALgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/image-helpers.js",
						"symkeys":
						[
							[
								81,
								114
							],
							[
								363,
								395
							]
						],
						"symlist":
						[
							" function MakeSVG(children, size)",
							" function SaveSVG(filename, doc)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAATWFrZVNWRyhjaGlsZHJlbiwgc2l6ZSkKU2F2ZVNWRyhmaWxlbmFtZSwgZG9jKQAAAAAAAAAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4AAABNYWtlU1ZHKGNoaWxkcmVuLCBzaXplKQpTYXZlU1ZHKGZpbGVuYW1lLCBkb2MpAAAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-sourcemap.js",
						"symkeys":
						[
							[
								188,
								216
							]
						],
						"symlist":
						[
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAuAAAATWFrZVNWRyhjaGlsZHJlbiwgc2l6ZSkKU2F2ZVNWRyhmaWxlbmFtZSwgZG9jKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Sources/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1275,
								1290
							],
							[
								1316,
								1337
							],
							[
								1370,
								1398
							],
							[
								1438,
								1458
							],
							[
								1488,
								1500
							],
							[
								1523,
								1533
							],
							[
								1554,
								1575
							],
							[
								1607,
								1632
							],
							[
								1677,
								1698
							],
							[
								1774,
								1795
							],
							[
								1895,
								1904
							],
							[
								1922,
								1932
							],
							[
								1994,
								2003
							],
							[
								2064,
								2072
							],
							[
								2132,
								2140
							],
							[
								2202,
								2230
							],
							[
								2271,
								2278
							],
							[
								2322,
								2372
							],
							[
								2376,
								2380
							],
							[
								2403,
								2413
							],
							[
								2444,
								2468
							],
							[
								2499,
								2504
							],
							[
								2543,
								2568
							],
							[
								2816,
								2828
							],
							[
								2849,
								2869
							],
							[
								2943,
								2972
							],
							[
								3062,
								3083
							],
							[
								3124,
								3203
							],
							[
								3275,
								3305
							],
							[
								3375,
								3409
							],
							[
								3457,
								3480
							],
							[
								3507,
								3511
							],
							[
								3565,
								3592
							],
							[
								3670,
								3702
							],
							[
								3898,
								3920
							],
							[
								4222,
								4235
							],
							[
								4392,
								4411
							],
							[
								4476,
								4519
							],
							[
								5262,
								5284
							],
							[
								5347,
								5353
							],
							[
								5389,
								5393
							],
							[
								5573,
								5594
							],
							[
								5648,
								5677
							],
							[
								8952,
								8983
							],
							[
								9592,
								9620
							],
							[
								9791,
								9814
							],
							[
								9874,
								9897
							],
							[
								10020,
								10049
							],
							[
								10266,
								10290
							],
							[
								10491,
								10518
							],
							[
								10566,
								10571
							],
							[
								10849,
								10878
							],
							[
								11424,
								11437
							],
							[
								11670,
								11678
							],
							[
								12167,
								12204
							],
							[
								12334,
								12339
							],
							[
								12493,
								12514
							],
							[
								12555,
								12574
							],
							[
								12584,
								12596
							],
							[
								12714,
								12719
							],
							[
								13456,
								13494
							],
							[
								16669,
								16692
							],
							[
								17491,
								17503
							],
							[
								17719,
								17758
							],
							[
								20113,
								20152
							],
							[
								20188,
								20208
							],
							[
								20835,
								20839
							],
							[
								21214,
								21247
							],
							[
								21331,
								21340
							],
							[
								21373,
								21394
							],
							[
								22116,
								22130
							],
							[
								22247,
								22263
							],
							[
								22402,
								22410
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				]
			]
		},
		{
<<<<<<< HEAD
			"file": "test-repeater.js",
			"settings":
			{
				"buffer_size": 2392,
=======
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 4053,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 13018,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
<<<<<<< HEAD
					6,
					1,
					"paste",
					null,
					"AgAAAGkAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACIAAAAAAAAADIAAABpbXBvcnQgQ29uc29sZVNldHVwIGZyb20gJy4vbGliL2NvbnNvbGVTZXR1cC5qcyc7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"paste",
					null,
					"AgAAAKMAAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAUAQAAAAAAACMAAABhd2FpdCBDb25zb2xlU2V0dXAoeyBjb21wYWN0OiAyIH0pOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIcAAAAAAAAAiAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAAAAAAAAAIcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGkAAAAAAAAAagAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAGkAAAAAAAAAaQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAIcAAAAAAAAAhwAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAAbkA"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAIgAAAAAAAAAiAAAAAAAAAABAAAAMQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\nmain"
					},
					"BgAAANsGAAAAAAAA3AYAAAAAAAAAAAAA3AYAAAAAAADcBgAAAAAAABwAAAAKVXRpbC5jYWxsTWFpbihtYWluLCB0cnVlKTsK3AYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBgAAAAAAAPcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAGAAAAAAAA4gYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgBgAAAAAAAOAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
=======
					5,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUCEAAAAAAABSIQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-sourcemap.js",
			"settings":
			{
				"buffer_size": 898,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 22762,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMMjAAAAAAAAxCMAAAAAAAAAAAAAxCMAAAAAAADFIwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDIwAAAAAAAMMjAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAhPAAAAAAAACU8AAAAAAAAAAAAACU8AAAAAAAANTwAAAAAAAAAAAAANTwAAAAAAAA5PAAAAAAAAAAAAAA5PAAAAAAAAEk8AAAAAAAAAAAAACU8AAAAAAAAJTwAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAITwAAAAAAAAhPAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"paste",
					null,
					"AQAAACVCAAAAAAAAUUIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlQgAAAAAAACVCAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"cut",
					null,
					"AQAAACVCAAAAAAAAJUIAAAAAAAAsAAAAICAgIGxldCBkZWFkbGluZSA9IERhdGUubm93KCkgKyBmcmFtZURlbGF5Owo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlQgAAAAAAAFFCAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"paste",
					null,
					"AQAAAKxBAAAAAAAA2EEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsQQAAAAAAAKxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "lastTime="
					},
					"CwAAALRBAAAAAAAAtUEAAAAAAAAAAAAAtUEAAAAAAAC1QQAAAAAAAAgAAABkZWFkbGluZS9PAAAAAAAAL08AAAAAAAAEAAAAICAgILVBAAAAAAAAtkEAAAAAAAAAAAAAtkEAAAAAAAC3QQAAAAAAAAAAAAC3QQAAAAAAALhBAAAAAAAAAAAAALhBAAAAAAAAuUEAAAAAAAAAAAAAuUEAAAAAAAC6QQAAAAAAAAAAAAC6QQAAAAAAALtBAAAAAAAAAAAAALtBAAAAAAAAvEEAAAAAAAAAAAAAvEEAAAAAAAC9QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0QQAAAAAAALxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAALxBAAAAAAAAvEEAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9QQAAAAAAAL1BAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"insert",
					{
						"characters": ";"
					},
<<<<<<< HEAD
					"AQAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiBgAAAAAAAOIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAOMGAAAAAAAA5AYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAgAAAAAAACkCAAAAAAAAAAAAAAAATEA"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "{inspectOption"
					},
					"DgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "s:"
					},
					"AgAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYAAAAAAAAA1wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACMBAAAAAAAAJAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG8AAAAAAAAAcQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"right_delete",
					null,
					"AQAAAHAAAAAAAAAAcAAAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AAAAAAAAAHkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4BgAAaW1wb3J0IHsgUmVwZWF0ZXIgfSBmcm9tICcuL2xpYi9yZXBlYXRlci9yZXBlYXRlci5qcyc7CmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvdGltZXJzLmpzJzsKaW1wb3J0eyBDb25zb2xlIH1mcm9tICdjb25zb2xlJzsKCmFzeW5jIGZ1bmN0aW9uIG1haW4oKSB7CiAgICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7aW5zcGVjdE9wdGlvbnM6IHsKICAgIGNvbG9yczogdHJ1ZSwKICAgIGRlcHRoOiAxLAogICAgbWF4QXJyYXlMZW5ndGg6IDMwLAogICAgY29tcGFjdDogMQogIH19KTsKICBsZXQgcHVzaEV2ZW50LCBzdG9wRXZlbnQ7CgogIGF3YWl0IFV0aWwud2FpdEZvcigwKTsKICBjb25zb2xlLmxvZygnc2V0VGltZW91dCcsIGdsb2JhbFRoaXMuc2V0VGltZW91dCk7CiAgY29uc29sZS5sb2coJ2NsZWFyVGltZW91dCcsIGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0KTsKCiAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIHB1c2hFdmVudCA9IHB1c2g7CiAgICBzdG9wRXZlbnQgPSBzdG9wOwogICAgYXdhaXQgc3RvcDsKICB9KTsKCiAgbGV0IGIgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgIGF3YWl0IFV0aWwud2FpdEZvcig1MCk7CiAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgfQogICAgc3RvcCgpOwogIH0pOwoKICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCA1KSkgcHVzaChgYyAjJHtudW19YCk7CiAgICBzdG9wKCk7CiAgfSk7CgogIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgcmV0dXJuIGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICBhd2FpdCBVdGlsLndhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQoKICAvL2EubmV4dCgpOwogIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMDApXSldKTsKCiAgbGV0IGxvb3AgPSAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKCiAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCAxMCkpIHsKICAgIGF3YWl0IFV0aWwud2FpdEZvcigxMDApOwogICAgcHVzaEV2ZW50KGBhICMke251bX1gKTsKICB9CiAgc3RvcEV2ZW50KCk7CgogIGF3YWl0IGxvb3A7CgogIGxldCB4ID0gWwogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwMCkpCiAgXTsKICBsZXQgbGF0ZXN0ID0gUmVwZWF0ZXIubGF0ZXN0KHgpOwoKICBhd2FpdCAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB0dXBsZSBvZiBsYXRlc3QpIHsKICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIHR1cGxlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKfQoKbWFpbigpOwoAAAAAAAAAAAoHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AAAAAAAAAHoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADoBAAAAAAAAPAEAAAAAAAAAAAAApgAAAAAAAACoAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAADoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAOBwAAaW1wb3J0IHsgUmVwZWF0ZXIgfSBmcm9tICcuL2xpYi9yZXBlYXRlci9yZXBlYXRlci5qcyc7CmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvdGltZXJzLmpzJzsKaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwoKYXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKIC8qIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDEsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAzMCwKICAgICAgY29tcGFjdDogMQogICAgfQogIH0pOyovCiAgbGV0IHB1c2hFdmVudCwgc3RvcEV2ZW50OwoKICBhd2FpdCBVdGlsLndhaXRGb3IoMCk7CiAgY29uc29sZS5sb2coJ3NldFRpbWVvdXQnLCBnbG9iYWxUaGlzLnNldFRpbWVvdXQpOwogIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogIGxldCBhID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICBwdXNoRXZlbnQgPSBwdXNoOwogICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgIGF3YWl0IHN0b3A7CiAgfSk7CgogIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDIwKSkgewogICAgICBhd2FpdCBVdGlsLndhaXRGb3IoNTApOwogICAgICBwdXNoKGBiICMke251bX1gKTsKICAgIH0KICAgIHN0b3AoKTsKICB9KTsKCiAgbGV0IGMgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgNSkpIHB1c2goYGMgIyR7bnVtfWApOwogICAgc3RvcCgpOwogIH0pOwoKICBmdW5jdGlvbiBnZW5SZXBGdW5jKG5hbWUsIG51bSwgbXMpIHsKICAgIHJldHVybiBhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICBmb3IobGV0IG4gb2YgVXRpbC5yYW5nZSgxLCBudW0pKSB7CiAgICAgICAgYXdhaXQgVXRpbC53YWl0Rm9yKFV0aWwucmFuZEludChtcykpOwogICAgICAgIHB1c2goYCR7bmFtZX0gIyR7bn1gKTsKICAgICAgfQogICAgICBzdG9wKCk7CiAgICB9OwogIH0KCiAgLy9hLm5leHQoKTsKICBsZXQgcmVwZWF0ID0gUmVwZWF0ZXIubWVyZ2UoW2EsIGIsIFJlcGVhdGVyLnppcChbYywgZGVsYXkoMjAwKV0pXSk7CgogIGxldCBsb29wID0gKGFzeW5jICgpID0+IHsKICAgIGZvciBhd2FpdChsZXQgdmFsdWUgb2YgcmVwZWF0KSB7CiAgICAgIGNvbnNvbGUubG9nKCd2YWx1ZTonLCB2YWx1ZSk7CiAgICB9CiAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogIH0pKCk7CgogIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMTApKSB7CiAgICBhd2FpdCBVdGlsLndhaXRGb3IoMTAwKTsKICAgIHB1c2hFdmVudChgYSAjJHtudW19YCk7CiAgfQogIHN0b3BFdmVudCgpOwoKICBhd2FpdCBsb29wOwoKICBsZXQgeCA9IFsKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd4JywgMjAsIDEwMDApKSwKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd5JywgMjAsIDEwMDApKSwKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd6JywgMjAsIDEwMDApKQogIF07CiAgbGV0IGxhdGVzdCA9IFJlcGVhdGVyLmxhdGVzdCh4KTsKCiAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgIGZvciBhd2FpdChsZXQgdHVwbGUgb2YgbGF0ZXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKCd0dXBsZTonLCB0dXBsZSk7CiAgICB9CiAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogIH0pKCk7Cn0KCm1haW4oKTsKAAAAAAAAAAAPBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAADwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"paste",
					null,
					"AQAAAKcAAAAAAAAA2wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "Re"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC3AAAAAAAAAAoAAABzZXRUaW1lb3V0twAAAAAAAAC4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_completion",
					{
						"completion": "Repeater",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Repeater"
					},
					"AgAAALYAAAAAAAAAtgAAAAAAAAACAAAAUmW2AAAAAAAAAL4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"paste",
					null,
					"AgAAAMEAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADJAAAAAAAAABUAAABnbG9iYWxUaGlzLnNldFRpbWVvdXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"cut",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAAnAAAAICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAD8BAAAAAAAAZgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA8AQAAAAAAAAIAAAAqLw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACmAAAAAAAAAAMAAAAvKiA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACOAAAAAAAAAAUAAABhc3luYw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAI0AAAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "\n\n\nf"
					},
					"CQAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAGUBAAAAAAAAagEAAAAAAAAAAAAAXwEAAAAAAABfAQAAAAAAAAUAAAAgICAgIGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABrAQAAAAAAAAAAAABgAQAAAAAAAGABAAAAAAAABQAAACAgICAgZgEAAAAAAABnAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAQAAAAAAAF4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAGYBAAAAAAAAZgEAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAQAAAAAAAGcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " function"
					},
					"CQAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
=======
					"AQAAALxBAAAAAAAAvUEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8QQAAAAAAALxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL1BAAAAAAAAvkEAAAAAAAAAAAAAvkEAAAAAAADCQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9QQAAAAAAAL1BAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AgAAAMJBAAAAAAAAw0EAAAAAAAAAAAAAw0EAAAAAAADDQQAAAAAAABwAAAAgPSBEYXRlLm5vdygpICsgZnJhbWVEZWxheTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCQQAAAAAAAN5BAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAACBPAAAAAAAAIU8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgTwAAAAAAACBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAACBPAAAAAAAAIE8AAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhTwAAAAAAACFPAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "LKAST"
					},
					"BQAAACBPAAAAAAAAIU8AAAAAAAAAAAAAIU8AAAAAAAAiTwAAAAAAAAAAAAAiTwAAAAAAACNPAAAAAAAAAAAAACNPAAAAAAAAJE8AAAAAAAAAAAAAJE8AAAAAAAAlTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgTwAAAAAAACBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					5,
					"left_delete",
					null,
					"BQAAACRPAAAAAAAAJE8AAAAAAAABAAAAVCNPAAAAAAAAI08AAAAAAAABAAAAUyJPAAAAAAAAIk8AAAAAAAABAAAAQSFPAAAAAAAAIU8AAAAAAAABAAAASyBPAAAAAAAAIE8AAAAAAAABAAAATA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlTwAAAAAAACVPAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "lastTime"
					},
					"CAAAACBPAAAAAAAAIU8AAAAAAAAAAAAAIU8AAAAAAAAiTwAAAAAAAAAAAAAiTwAAAAAAACNPAAAAAAAAAAAAACNPAAAAAAAAJE8AAAAAAAAAAAAAJE8AAAAAAAAlTwAAAAAAAAAAAAAlTwAAAAAAACZPAAAAAAAAAAAAACZPAAAAAAAAJ08AAAAAAAAAAAAAJ08AAAAAAAAoTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgTwAAAAAAACBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " =v"
					},
					"AwAAAChPAAAAAAAAKU8AAAAAAAAAAAAAKU8AAAAAAAAqTwAAAAAAAAAAAAAqTwAAAAAAACtPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoTwAAAAAAAChPAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAACpPAAAAAAAAKk8AAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArTwAAAAAAACtPAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "V"
					},
					"AQAAACpPAAAAAAAAK08AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqTwAAAAAAACpPAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAACpPAAAAAAAAKk8AAAAAAAABAAAAVg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArTwAAAAAAACtPAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"paste",
					null,
					"AQAAACpPAAAAAAAAVk8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqTwAAAAAAACpPAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAC1PAAAAAAAALk8AAAAAAAAAAAAALk8AAAAAAAAuTwAAAAAAABAAAAAgbGV0IGRlYWRsaW5lID0g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtTwAAAAAAAD1PAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"left_delete",
					null,
					"AQAAADhPAAAAAAAAOE8AAAAAAAANAAAAICsgZnJhbWVEZWxheQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4TwAAAAAAAEVPAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAZPAAAAAAAAB08AAAAAAAAAAAAAB08AAAAAAAAITwAAAAAAAAAAAAAITwAAAAAAAAlPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGTwAAAAAAAAZPAAAAAAAAAAAAAAAAbkA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAAlPAAAAAAAACk8AAAAAAAAAAAAACk8AAAAAAAALTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJTwAAAAAAAAlPAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAAtPAAAAAAAADE8AAAAAAAAAAAAADE8AAAAAAAANTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALTwAAAAAAAAtPAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA1PAAAAAAAADk8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANTwAAAAAAAA1PAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					2,
					"left_delete",
					null,
					"AgAAAA1PAAAAAAAADU8AAAAAAAABAAAAIAxPAAAAAAAADE8AAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOTwAAAAAAAA5PAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAAxPAAAAAAAADU8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMTwAAAAAAAAxPAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " Date-"
					},
					"BgAAAA1PAAAAAAAADk8AAAAAAAAAAAAADk8AAAAAAAAPTwAAAAAAAAAAAAAPTwAAAAAAABBPAAAAAAAAAAAAABBPAAAAAAAAEU8AAAAAAAAAAAAAEU8AAAAAAAASTwAAAAAAAAAAAAASTwAAAAAAABNPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANTwAAAAAAAA1PAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAABJPAAAAAAAAEk8AAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATTwAAAAAAABNPAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": ".now"
					},
					"BAAAABJPAAAAAAAAE08AAAAAAAAAAAAAE08AAAAAAAAUTwAAAAAAAAAAAAAUTwAAAAAAABVPAAAAAAAAAAAAABVPAAAAAAAAFk8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASTwAAAAAAABJPAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
<<<<<<< HEAD
					"AQAAAHQBAAAAAAAAdgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHYBAAAAAAAAdwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHcBAAAAAAAAeQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AQAAAAAAAHcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"right_delete",
					null,
					"AQAAAHgBAAAAAAAAeAEAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAHgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "\n})"
					},
					"BgAAADsHAAAAAAAAPAcAAAAAAAAAAAAAPAcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAADwHAAAAAAAAPAcAAAAAAAACAAAAICA8BwAAAAAAADwHAAAAAAAAAAAAAD0HAAAAAAAAPgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BwAAAAAAADsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAD0HAAAAAAAAPQcAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+BwAAAAAAAD4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
=======
					"AQAAABZPAAAAAAAAGE8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWTwAAAAAAABZPAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABhPAAAAAAAAGU8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYTwAAAAAAABhPAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "t;"
					},
					"AgAAAEBPAAAAAAAAQU8AAAAAAAAAAAAAQU8AAAAAAABCTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABATwAAAAAAAEBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAEJPAAAAAAAAQk8AAAAAAAAMAAAAIERhdGUubm93KCk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCTwAAAAAAAE5PAAAAAAAA////////738"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DAAAABlPAAAAAAAAGk8AAAAAAAAAAAAAGk8AAAAAAAAbTwAAAAAAAAAAAAAbTwAAAAAAABxPAAAAAAAAAAAAABxPAAAAAAAAHU8AAAAAAAAAAAAAHU8AAAAAAAAeTwAAAAAAAAAAAAAeTwAAAAAAAB9PAAAAAAAAAAAAAB9PAAAAAAAAIE8AAAAAAAAAAAAAIE8AAAAAAAAhTwAAAAAAAAAAAAAhTwAAAAAAACJPAAAAAAAAAAAAACJPAAAAAAAAI08AAAAAAAAAAAAAI08AAAAAAAAkTwAAAAAAAAAAAAAkTwAAAAAAACVPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZTwAAAAAAABlPAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
<<<<<<< HEAD
					"AQAAAD0HAAAAAAAAPwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9BwAAAAAAAD0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD8HAAAAAAAAQAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BwAAAAAAAD8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEAHAAAAAAAAQQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABABwAAAAAAAEAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAD4HAAAAAAAAPwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+BwAAAAAAAD4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"cut",
					null,
					"AQAAADcBAAAAAAAANwEAAAAAAAAoAAAAICAgICBjb25zb2xlLmxvZygnUmVwZWF0ZXInLCBSZXBlYXRlcik7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AQAAAAAAAF8BAAAAAAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"paste",
					null,
					"AQAAAG0BAAAAAAAAlQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAQAAAAAAAG0BAAAAAAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"paste",
					null,
					"AQAAAIwAAAAAAAAArQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AQAAAAAAALgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEA"
				],
				[
					185,
					1,
					"paste",
					null,
					"AQAAAAEAAAAAAAAAHQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOAAAAAAAAAAMAAAB4bWwOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAAMAAAB4bWwYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"cut",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAAcAAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAB0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AwAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApAAAAAAAAAAMAAABzdGQpAAAAAAAAACoAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "ois"
					},
					"BAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyAAAAAAAAAAMAAABzdGQyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					2,
					"left_delete",
					null,
					"AgAAADMAAAAAAAAAMwAAAAAAAAABAAAAczIAAAAAAAAAMgAAAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "\n\nconst"
					},
					"BwAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO0AAAAAAAAA7wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"BAAAAO0AAAAAAAAA7QAAAAAAAAABAAAAe+0AAAAAAAAA7QAAAAAAAAABAAAAfewAAAAAAAAA7AAAAAAAAAABAAAAW+wAAAAAAAAA7AAAAAAAAAABAAAAXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "setTimeout,clearT"
					},
					"EQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAPMAAAAAAAAAAAAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "imeout"
					},
					"BgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "=os;"
					},
					"BAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "\nObject.assign"
					},
					"DgAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABcBAAAAAAAAGQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "globalThis,"
					},
					"CwAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACEBAAAAAAAAAAAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAQAAAAAAABgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMBAAAAAAAAJAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACQBAAAAAAAAJgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "setTim"
					},
					"BgAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACsBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					1,
					"insert_completion",
					{
						"completion": "setTimeout",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "setTimeout"
					},
					"AgAAACUBAAAAAAAAJQEAAAAAAAAGAAAAc2V0VGltJQEAAAAAAAAvAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": ",clear"
					},
					"BgAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					253,
					1,
					"insert_completion",
					{
						"completion": "clearTimeout",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "clearTimeout"
					},
					"AgAAADABAAAAAAAAMAEAAAAAAAAFAAAAY2xlYXIwAQAAAAAAADwBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AQAAAAAAADwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"left_delete",
					null,
					"AQAAADwBAAAAAAAAPAEAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD4BAAAAAAAAPwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAECAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7Cgpjb25zdCB7c2V0VGltZW91dCxjbGVhclRpbWVvdXR9PW9zOwpPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHtzZXRUaW1lb3V0LGNsZWFyVGltZW91dH0pOwoKIGZ1bmN0aW9uIG1haW4oKSB7CiBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAxLAogICAgICBtYXhBcnJheUxlbmd0aDogMzAsCiAgICAgIGNvbXBhY3Q6IDEKICAgIH0KICB9KTsgCgoKICAgICAoYXN5bmMgZnVuY3Rpb24oKSB7CiBsZXQgcHVzaEV2ZW50LCBzdG9wRXZlbnQ7CiAgICAgY29uc29sZS5sb2coJ1JlcGVhdGVyJywgUmVwZWF0ZXIpOwoKIC8vIGF3YWl0IFV0aWwud2FpdEZvcigwKTsKICBjb25zb2xlLmxvZygnc2V0VGltZW91dCcsIGdsb2JhbFRoaXMuc2V0VGltZW91dCk7CiAgY29uc29sZS5sb2coJ2NsZWFyVGltZW91dCcsIGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0KTsKCiAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIHB1c2hFdmVudCA9IHB1c2g7CiAgICBzdG9wRXZlbnQgPSBzdG9wOwogICAgYXdhaXQgc3RvcDsKICB9KTsKCiAgbGV0IGIgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgIGF3YWl0IFV0aWwud2FpdEZvcig1MCk7CiAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgfQogICAgc3RvcCgpOwogIH0pOwoKICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCA1KSkgcHVzaChgYyAjJHtudW19YCk7CiAgICBzdG9wKCk7CiAgfSk7CgogIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgcmV0dXJuIGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICBhd2FpdCBVdGlsLndhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQoKICAvL2EubmV4dCgpOwogIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMDApXSldKTsKCiAgbGV0IGxvb3AgPSAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKCiAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCAxMCkpIHsKICAgIGF3YWl0IFV0aWwud2FpdEZvcigxMDApOwogICAgcHVzaEV2ZW50KGBhICMke251bX1gKTsKICB9CiAgc3RvcEV2ZW50KCk7CgogIGF3YWl0IGxvb3A7CgogIGxldCB4ID0gWwogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwMCkpCiAgXTsKICBsZXQgbGF0ZXN0ID0gUmVwZWF0ZXIubGF0ZXN0KHgpOwoKICBhd2FpdCAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB0dXBsZSBvZiBsYXRlc3QpIHsKICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIHR1cGxlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKfSkoKTsKCn0KCm1haW4oKTsKAAAAAAAAAAB3CAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"cut",
					null,
					"AQAAAI4EAAAAAAAAjgQAAAAAAAD0AAAACgogICAgZnVuY3Rpb24gZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKSB7CiAgICAgIHJldHVybiBhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICAgIGF3YWl0IFV0aWwud2FpdEZvcihVdGlsLnJhbmRJbnQobXMpKTsKICAgICAgICAgIHB1c2goYCR7bmFtZX0gIyR7bn1gKTsKICAgICAgICB9CiAgICAgICAgc3RvcCgpOwogICAgICB9OwogICAgfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBAAAAAAAAIIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHcHAAAAAAAAeAcAAAAAAAAAAAAAeAcAAAAAAAB6BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3BwAAAAAAAHcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"paste",
					null,
					"AQAAAHoHAAAAAAAAbggAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6BwAAAAAAAHoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AwAAAOMBAAAAAAAA5AEAAAAAAAAAAAAA5AEAAAAAAADkAQAAAAAAAAEAAAAxeAcAAAAAAAB4BwAAAAAAAAIAAAAgIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAQAAAAAAAOQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "std,"
					},
					"BAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+AQAAAAAAAH4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"left_delete",
					null,
					"AQAAAIEBAAAAAAAAgQEAAAAAAAABAAAALA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAQAAAAAAAIIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": ".err,"
					},
					"BQAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAACDAQAAAAAAAIQBAAAAAAAAAAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAQAAAAAAAIEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADsAQAAAAAAAAEAAAAy",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "console"
					},
					"BwAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAEUHAAAAAAAARgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BwAAAAAAAD8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"left_delete",
					null,
					"AQAAAEUHAAAAAAAARQcAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGBwAAAAAAAEYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "e.config"
					},
					"CAAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEsHAAAAAAAAAAAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABNBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFBwAAAAAAAEUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0HAAAAAAAATwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBwAAAAAAAE0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE4HAAAAAAAAUAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBwAAAAAAAE4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": " compact"
					},
					"CAAAAE8HAAAAAAAAUAcAAAAAAAAAAAAAUAcAAAAAAABRBwAAAAAAAAAAAABRBwAAAAAAAFIHAAAAAAAAAAAAAFIHAAAAAAAAUwcAAAAAAAAAAAAAUwcAAAAAAABUBwAAAAAAAAAAAABUBwAAAAAAAFUHAAAAAAAAAAAAAFUHAAAAAAAAVgcAAAAAAAAAAAAAVgcAAAAAAABXBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPBwAAAAAAAE8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFcHAAAAAAAAWAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBwAAAAAAAFcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABaBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYBwAAAAAAAFgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBwAAAAAAAFoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF0HAAAAAAAAXgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBwAAAAAAAF0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA4gYAAAAAAADjBgAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhBgAAAAAAAOEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkBgAAAAAAAOQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					396,
					4,
					"left_delete",
					null,
					"BAAAAOQGAAAAAAAA5AYAAAAAAAABAAAAIOMGAAAAAAAA4wYAAAAAAAABAAAAeeIGAAAAAAAA4gYAAAAAAAABAAAAcuEGAAAAAAAA4QYAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlBgAAAAAAAOUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BgAAAPoGAAAAAAAA+wYAAAAAAAAAAAAA+wYAAAAAAAD/BgAAAAAAAAAAAAD/BgAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAgcAAAAAAAAAAAAAAgcAAAAAAAADBwAAAAAAAAAAAAADBwAAAAAAAAQHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6BgAAAAAAAPoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAQHAAAAAAAABgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEBwAAAAAAAAQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"right_delete",
					null,
					"AQAAAAUHAAAAAAAABQcAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFBwAAAAAAAAUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "}cath"
					},
					"BQAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAB7BwAAAAAAAHwHAAAAAAAAAAAAAHwHAAAAAAAAfQcAAAAAAAAAAAAAfQcAAAAAAAB+BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5BwAAAAAAAHkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"left_delete",
					null,
					"AQAAAH0HAAAAAAAAfQcAAAAAAAABAAAAaA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+BwAAAAAAAH4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAAH0HAAAAAAAAfgcAAAAAAAAAAAAAfgcAAAAAAAB/BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9BwAAAAAAAH0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					411,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8HAAAAAAAAgQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/BwAAAAAAAH8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "Err"
					},
					"AwAAAIAHAAAAAAAAgQcAAAAAAAAAAAAAgQcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABwAAAAAAAIAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					4,
					"left_delete",
					null,
					"BAAAAIMHAAAAAAAAgwcAAAAAAAABAAAAKYIHAAAAAAAAggcAAAAAAAABAAAAcoEHAAAAAAAAgQcAAAAAAAABAAAAcoAHAAAAAAAAgAcAAAAAAAABAAAARQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEBwAAAAAAAIQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "error)"
					},
					"BgAAAIAHAAAAAAAAgQcAAAAAAAAAAAAAgQcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAACFBwAAAAAAAIYHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABwAAAAAAAIAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYHAAAAAAAAhwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGBwAAAAAAAIYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					417,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIcHAAAAAAAAiQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBwAAAAAAAIcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					418,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACPBwAAAAAAAAAAAACPBwAAAAAAAJAHAAAAAAAAAAAAAJAHAAAAAAAAlgcAAAAAAAAAAAAAiQcAAAAAAACJBwAAAAAAAAYAAAAgICAgICCJBwAAAAAAAJEHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBwAAAAAAAIgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAJcHAAAAAAAAmAcAAAAAAAAAAAAAmAcAAAAAAACZBwAAAAAAAAAAAACZBwAAAAAAAJoHAAAAAAAAAAAAAJoHAAAAAAAAmwcAAAAAAAAAAAAAmwcAAAAAAACcBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRBwAAAAAAAJEHAAAAAAAAAAAAAAAA8L8"
				],
				[
					420,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJwHAAAAAAAAngcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBwAAAAAAAJwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					421,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0HAAAAAAAAnwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBwAAAAAAAJ0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "error:"
					},
					"BgAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACgBwAAAAAAAAAAAACgBwAAAAAAAKEHAAAAAAAAAAAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAACjBwAAAAAAAKQHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeBwAAAAAAAJ4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": ",error"
					},
					"BgAAAKUHAAAAAAAApgcAAAAAAAAAAAAApgcAAAAAAACnBwAAAAAAAAAAAACnBwAAAAAAAKgHAAAAAAAAAAAAAKgHAAAAAAAAqQcAAAAAAAAAAAAAqQcAAAAAAACqBwAAAAAAAAAAAACqBwAAAAAAAKsHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClBwAAAAAAAKUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKwHAAAAAAAArQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBwAAAAAAAKwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					441,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAMoAAAAAAAAAygAAAAAAAAAEAAAAVXRpbMoAAAAAAAAA0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAM4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					442,
					1,
					"paste",
					null,
					"AgAAAMsAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADSAAAAAAAAAAQAAABVdGls",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					447,
					4,
					"left_delete",
					null,
					"BAAAAOMAAAAAAAAA4wAAAAAAAAABAAAAbOIAAAAAAAAA4gAAAAAAAAABAAAAaeEAAAAAAAAA4QAAAAAAAAABAAAAdOAAAAAAAAAA4AAAAAAAAAABAAAAdQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "misc"
					},
					"BAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					464,
					1,
					"",
					null,
					"AQAAAM8DAAAAAAAA1gMAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					465,
					1,
					"",
					null,
					"AQAAAMEFAAAAAAAAyAUAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBBQAAAAAAAM0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"",
					null,
					"AQAAAGwIAAAAAAAAcwgAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsCAAAAAAAAHgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					467,
					1,
					"",
					null,
					"AQAAAGgCAAAAAAAAbwIAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAgAAAAAAAHQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					477,
					1,
					"cut",
					null,
					"AQAAADMCAAAAAAAAMwIAAAAAAAAnAAAAICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAAFoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					478,
					2,
					"paste",
					null,
					"AgAAADMCAAAAAAAAWgIAAAAAAAAAAAAAWgIAAAAAAACBAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAADMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "wakt"
					},
					"BQAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABsAgAAAAAAAAgAAABSZXBlYXRlcmwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAgAAAAAAAHMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					2,
					"left_delete",
					null,
					"AgAAAG4CAAAAAAAAbgIAAAAAAAABAAAAdG0CAAAAAAAAbQIAAAAAAAABAAAAaw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "itFor"
					},
					"BQAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAgAAAAAAAG0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					1,
					"paste",
					null,
					"AQAAAHcCAAAAAAAAfgIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AgAAAAAAAHcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"paste",
					null,
					"AgAAAHUCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB8AgAAAAAAAA8AAABSZXdhaXRGb3JwZWF0ZXI",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					5,
					"left_delete",
					null,
					"BQAAAOAAAAAAAAAA4AAAAAAAAAAEAAAAbWlzY98AAAAAAAAA3wAAAAAAAAABAAAAL94AAAAAAAAA3gAAAAAAAAABAAAAYt0AAAAAAAAA3QAAAAAAAAABAAAAadwAAAAAAAAA3AAAAAAAAAABAAAAbA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "quickjs/qjs-modu"
					},
					"EAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "les/lib/util"
					},
					"DAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAQAAAAAAAGEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					534,
					1,
					"cut",
					null,
					"AQAAAMMAAAAAAAAAwwAAAAAAAAA7AAAAaW1wb3J0IHt3YWl0Rm9yfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3V0aWwuanMnOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					2,
					"paste",
					null,
					"AgAAAMMAAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAA5AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": "Util"
					},
					"BQAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGAQAAAAAAAAkAAAB7d2FpdEZvcn0GAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAA4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"left_delete",
					null,
					"AQAAABIBAAAAAAAAEgEAAAAAAAAVAAAAcXVpY2tqcy9xanMtbW9kdWxlcy9s",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAQAAAAAAACcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": " scale=+0;"
					},
					"CgAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAARAIAAAAAAABFAgAAAAAAAAAAAABFAgAAAAAAAEYCAAAAAAAAAAAAAEYCAAAAAAAARwIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AgAAAAAAAD0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					553,
					3,
					"left_delete",
					null,
					"AwAAAEYCAAAAAAAARgIAAAAAAAABAAAAO0UCAAAAAAAARQIAAAAAAAABAAAAMEQCAAAAAAAARAIAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAgAAAAAAAEcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "10;"
					},
					"AwAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABGAgAAAAAAAAAAAABGAgAAAAAAAEcCAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAgAAAAAAAEQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"left_delete",
					null,
					"AQAAAEIEAAAAAAAAQgQAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDBAAAAAAAAEMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAEIEAAAAAAAAQwQAAAAAAAAAAAAAQwQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEUEAAAAAAAAAAAAAEUEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABHBAAAAAAAAAAAAABHBAAAAAAAAEgEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCBAAAAAAAAEIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					1,
					"left_delete",
					null,
					"AQAAADoGAAAAAAAAOgYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAADoGAAAAAAAAOwYAAAAAAAAAAAAAOwYAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD0GAAAAAAAAAAAAAD0GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					570,
					1,
					"left_delete",
					null,
					"AQAAAFYFAAAAAAAAVgUAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "*sac"
					},
					"BAAAAFcFAAAAAAAAWAUAAAAAAAAAAAAAWAUAAAAAAABZBQAAAAAAAAAAAABZBQAAAAAAAFoFAAAAAAAAAAAAAFoFAAAAAAAAWwUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					573,
					2,
					"left_delete",
					null,
					"AgAAAFoFAAAAAAAAWgUAAAAAAAABAAAAY1kFAAAAAAAAWQUAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBQAAAAAAAFsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "cale"
					},
					"BAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAQkAAAAAAAAAAAAAAQkAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAMJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9CAAAAAAAAP0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "/+0"
					},
					"AwAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9CAAAAAAAAP0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					2,
					"left_delete",
					null,
					"AgAAAP8IAAAAAAAA/wgAAAAAAAABAAAAMP4IAAAAAAAA/ggAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA/wgAAAAAAAAACQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+CAAAAAAAAP4IAAAAAAAAAAAAAAAA8L8"
				],
				[
					606,
					3,
					"left_delete",
					null,
					"AwAAAP8IAAAAAAAA/wgAAAAAAAABAAAAMP4IAAAAAAAA/ggAAAAAAAABAAAAMf0IAAAAAAAA/QgAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+CAAAAAAAAP4IAAAAAAAAAAAAAAAA8L8"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "/+0"
					},
					"AwAAAAQJAAAAAAAABQkAAAAAAAAAAAAABQkAAAAAAAAGCQAAAAAAAAAAAAAGCQAAAAAAAAcJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAECQAAAAAAAAQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					3,
					"left_delete",
					null,
					"AwAAAAcJAAAAAAAABwkAAAAAAAABAAAAKQYJAAAAAAAABgkAAAAAAAABAAAAMAUJAAAAAAAABQkAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAICQAAAAAAAAgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "10))"
					},
					"BAAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAgJAAAAAAAAAAAAAAgJAAAAAAAACQkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFCQAAAAAAAAUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					623,
					1,
					"left_delete",
					null,
					"AQAAAMcGAAAAAAAAxwYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBgAAAAAAAMgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAADMBgAAAAAAAM0GAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					626,
					1,
					"cut",
					null,
					"AQAAAMcGAAAAAAAAxwYAAAAAAAAGAAAAKnNjYWxl",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					627,
					1,
					"paste",
					null,
					"AQAAAMcGAAAAAAAAzQYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAAPsGAAAAAAAA+wYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8BgAAAAAAAPwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					631,
					1,
					"paste",
					null,
					"AQAAAPsGAAAAAAAAAQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7BgAAAAAAAPsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					634,
					1,
					"left_delete",
					null,
					"AQAAAC8HAAAAAAAALwcAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					635,
					1,
					"paste",
					null,
					"AQAAAC8HAAAAAAAANQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBwAAAAAAAC8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					2,
					"left_delete",
					null,
					"AgAAAA0JAAAAAAAADQkAAAAAAAAKAAAAKHNjYWxlLzEwKQwJAAAAAAAADAkAAAAAAAABAAAAKg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANCQAAAAAAABcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABFAgAAAAAAAAIAAAAxMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAgAAAAAAAEYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					653,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjCQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IHt3YWl0Rm9yfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3V0aWwuanMnOwppbXBvcnQgVXRpbCBmcm9tICcuL2xpYi91dGlsLmpzJzsKCmNvbnN0IHsgc2V0VGltZW91dCwgY2xlYXJUaW1lb3V0IH0gPSBvczsKT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IHNldFRpbWVvdXQsIGNsZWFyVGltZW91dCB9KTsKCgoKZnVuY3Rpb24gbWFpbigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDEsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAzMCwKICAgICAgY29tcGFjdDogMwogICAgfQogIH0pOwogIGNvbnN0IHNjYWxlPTE7CgogIChhc3luYyBmdW5jdGlvbigpIHsKICAgIGxldCBwdXNoRXZlbnQsIHN0b3BFdmVudDsKICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsKICAgIGNvbnNvbGUubG9nKCd3YWl0Rm9yJywgd2FpdEZvcik7CgogICAgLy8gYXdhaXQgd2FpdEZvcigwKTsKICAgIGNvbnNvbGUubG9nKCdzZXRUaW1lb3V0JywgZ2xvYmFsVGhpcy5zZXRUaW1lb3V0KTsKICAgIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogICAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgcHVzaEV2ZW50ID0gcHVzaDsKICAgICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgICAgYXdhaXQgc3RvcDsKICAgIH0pOwoKICAgIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgICAgYXdhaXQgd2FpdEZvcig1KnNjYWxlKTsKICAgICAgICBwdXNoKGBiICMke251bX1gKTsKICAgICAgfQogICAgICBzdG9wKCk7CiAgICB9KTsKCiAgICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDUpKSBwdXNoKGBjICMke251bX1gKTsKICAgICAgc3RvcCgpOwogICAgfSk7CgogICAgLy9hLm5leHQoKTsKICAgIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMCpzY2FsZSldKV0pOwoKICAgIGxldCBsb29wID0gKGFzeW5jICgpID0+IHsKICAgICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgICBjb25zb2xlLmxvZygndmFsdWU6JywgdmFsdWUpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgICB9KSgpOwoKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMTApKSB7CiAgICAgIGF3YWl0IHdhaXRGb3IoMTAqc2NhbGUpOwogICAgICBwdXNoRXZlbnQoYGEgIyR7bnVtfWApOwogICAgfQogICAgc3RvcEV2ZW50KCk7CgogICAgYXdhaXQgbG9vcDsKCiAgICBsZXQgeCA9IFsKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwKnNjYWxlKSksCiAgICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd5JywgMjAsIDEwMCpzY2FsZSkpLAogICAgICBuZXcgUmVwZWF0ZXIoZ2VuUmVwRnVuYygneicsIDIwLCAxMDAqc2NhbGUpKQogICAgXTsKICAgIGxldCBsYXRlc3QgPSBSZXBlYXRlci5sYXRlc3QoeCk7CgogICAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgICAgdHJ5ewogICAgICBmb3IgYXdhaXQobGV0IHR1cGxlIG9mIGxhdGVzdCkgewogICAgICAgIGNvbnNvbGUubG9nKCd0dXBsZTonLGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMiB9KSwgdHVwbGUpOwogICAgICB9fWNhdGNoKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yOicsZXJyb3IpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgICB9KSgpOwogIH0pKCk7CgoKICAgIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgICByZXR1cm4gYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgICBmb3IobGV0IG4gb2YgVXRpbC5yYW5nZSgxLCBudW0pKSB7CiAgICAgICAgICBhd2FpdCB3YWl0Rm9yKFV0aWwucmFuZEludChtcykpOwogICAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICAgIH0KICAgICAgICBzdG9wKCk7CiAgICAgIH07CiAgICB9Cn0KCm1haW4oKTsKAAAAAAAAAABwCQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					654,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAABwCQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IHsgd2FpdEZvciB9IGZyb20gJy4vcXVpY2tqcy9xanMtbW9kdWxlcy9saWIvdXRpbC5qcyc7CmltcG9ydCBVdGlsIGZyb20gJy4vbGliL3V0aWwuanMnOwoKY29uc3QgeyBzZXRUaW1lb3V0LCBjbGVhclRpbWVvdXQgfSA9IG9zOwpPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgc2V0VGltZW91dCwgY2xlYXJUaW1lb3V0IH0pOwoKZnVuY3Rpb24gbWFpbigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAxLAogICAgICBtYXhBcnJheUxlbmd0aDogMzAsCiAgICAgIGNvbXBhY3Q6IDMKICAgIH0KICB9KTsKICBjb25zdCBzY2FsZSA9IDE7CgogIChhc3luYyBmdW5jdGlvbigpIHsKICAgIGxldCBwdXNoRXZlbnQsIHN0b3BFdmVudDsKICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsKICAgIGNvbnNvbGUubG9nKCd3YWl0Rm9yJywgd2FpdEZvcik7CgogICAgLy8gYXdhaXQgd2FpdEZvcigwKTsKICAgIGNvbnNvbGUubG9nKCdzZXRUaW1lb3V0JywgZ2xvYmFsVGhpcy5zZXRUaW1lb3V0KTsKICAgIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogICAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgcHVzaEV2ZW50ID0gcHVzaDsKICAgICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgICAgYXdhaXQgc3RvcDsKICAgIH0pOwoKICAgIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgICAgYXdhaXQgd2FpdEZvcig1ICogc2NhbGUpOwogICAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH0pOwoKICAgIGxldCBjID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgNSkpIHB1c2goYGMgIyR7bnVtfWApOwogICAgICBzdG9wKCk7CiAgICB9KTsKCiAgICAvL2EubmV4dCgpOwogICAgbGV0IHJlcGVhdCA9IFJlcGVhdGVyLm1lcmdlKFthLCBiLCBSZXBlYXRlci56aXAoW2MsIGRlbGF5KDIwICogc2NhbGUpXSldKTsKCiAgICBsZXQgbG9vcCA9IChhc3luYyAoKSA9PiB7CiAgICAgIGZvciBhd2FpdChsZXQgdmFsdWUgb2YgcmVwZWF0KSB7CiAgICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgICAgfQogICAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogICAgfSkoKTsKCiAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDEwKSkgewogICAgICBhd2FpdCB3YWl0Rm9yKDEwICogc2NhbGUpOwogICAgICBwdXNoRXZlbnQoYGEgIyR7bnVtfWApOwogICAgfQogICAgc3RvcEV2ZW50KCk7CgogICAgYXdhaXQgbG9vcDsKCiAgICBsZXQgeCA9IFsKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwICogc2NhbGUpKSwKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwICogc2NhbGUpKSwKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwICogc2NhbGUpKQogICAgXTsKICAgIGxldCBsYXRlc3QgPSBSZXBlYXRlci5sYXRlc3QoeCk7CgogICAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgYXdhaXQobGV0IHR1cGxlIG9mIGxhdGVzdCkgewogICAgICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMiB9KSwgdHVwbGUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcjonLCBlcnJvcik7CiAgICAgIH0KICAgICAgY29uc29sZS5sb2coJ3N0b3BwZWQnKTsKICAgIH0pKCk7CiAgfSkoKTsKCiAgZnVuY3Rpb24gZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKSB7CiAgICByZXR1cm4gYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgZm9yKGxldCBuIG9mIFV0aWwucmFuZ2UoMSwgbnVtKSkgewogICAgICAgIGF3YWl0IHdhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQp9CgptYWluKCk7CgAAAAAAAAAAWAkAAAAAAAAAAAAAAAAAAAAAAABYCQAAAAAAAAAAAAAAAAAAAAAAAFgJAAAAAAAAAAAAAAAAAAAAAAAAWAkAAAAAAAAAAAAAAAAAAAAAAABYCQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAACVPAAAAAAAAJ08AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlTwAAAAAAACVPAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "lastTime"
					},
					"CAAAACZPAAAAAAAAJ08AAAAAAAAAAAAAJ08AAAAAAAAoTwAAAAAAAAAAAAAoTwAAAAAAAClPAAAAAAAAAAAAAClPAAAAAAAAKk8AAAAAAAAAAAAAKk8AAAAAAAArTwAAAAAAAAAAAAArTwAAAAAAACxPAAAAAAAAAAAAACxPAAAAAAAALU8AAAAAAAAAAAAALU8AAAAAAAAuTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmTwAAAAAAACZPAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAC5PAAAAAAAAL08AAAAAAAAAAAAAL08AAAAAAAAwTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuTwAAAAAAAC5PAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADBPAAAAAAAAMU8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwTwAAAAAAADBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAALxBAAAAAAAAvUEAAAAAAAAAAAAAvUEAAAAAAAC+QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8QQAAAAAAALxBAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL5BAAAAAAAAv0EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+QQAAAAAAAL5BAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					2,
					"left_delete",
					null,
					"AgAAAL5BAAAAAAAAvkEAAAAAAAABAAAAIL1BAAAAAAAAvUEAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/QQAAAAAAAL9BAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAL1BAAAAAAAAvkEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9QQAAAAAAAL1BAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " Date.now"
					},
					"CQAAAL5BAAAAAAAAv0EAAAAAAAAAAAAAv0EAAAAAAADAQQAAAAAAAAAAAADAQQAAAAAAAMFBAAAAAAAAAAAAAMFBAAAAAAAAwkEAAAAAAAAAAAAAwkEAAAAAAADDQQAAAAAAAAAAAADDQQAAAAAAAMRBAAAAAAAAAAAAAMRBAAAAAAAAxUEAAAAAAAAAAAAAxUEAAAAAAADGQQAAAAAAAAAAAADGQQAAAAAAAMdBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+QQAAAAAAAL5BAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMdBAAAAAAAAyUEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHQQAAAAAAAMdBAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMlBAAAAAAAAykEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJQQAAAAAAAMlBAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"left_delete",
					null,
					"AQAAAMlBAAAAAAAAyUEAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKQQAAAAAAAMpBAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"left_delete",
					null,
					"AQAAAMlBAAAAAAAAyUEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKQQAAAAAAAMpBAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANBBAAAAAAAA0UEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQQQAAAAAAANBBAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAMtBAAAAAAAAy0EAAAAAAAAGAAAAICAgWAox",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLQQAAAAAAANFBAAAAAAAAAAAAAAAAJEA"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AgAAAC1PAAAAAAAALk8AAAAAAAAAAAAALk8AAAAAAAAuTwAAAAAAAAgAAABsYXN0VGltZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtTwAAAAAAADVPAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " √§"
					},
					"AgAAAC5PAAAAAAAAL08AAAAAAAAAAAAAL08AAAAAAAAwTwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuTwAAAAAAAC5PAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADBPAAAAAAAAMU8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwTwAAAAAAADBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					2,
					"left_delete",
					null,
					"AgAAADBPAAAAAAAAME8AAAAAAAABAAAAIC9PAAAAAAAAL08AAAAAAAACAAAAw6Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxTwAAAAAAADFPAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAC9PAAAAAAAAME8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvTwAAAAAAAC9PAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " lastTiome"
					},
					"CgAAADBPAAAAAAAAMU8AAAAAAAAAAAAAMU8AAAAAAAAyTwAAAAAAAAAAAAAyTwAAAAAAADNPAAAAAAAAAAAAADNPAAAAAAAANE8AAAAAAAAAAAAANE8AAAAAAAA1TwAAAAAAAAAAAAA1TwAAAAAAADZPAAAAAAAAAAAAADZPAAAAAAAAN08AAAAAAAAAAAAAN08AAAAAAAA4TwAAAAAAAAAAAAA4TwAAAAAAADlPAAAAAAAAAAAAADlPAAAAAAAAOk8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwTwAAAAAAADBPAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					3,
					"left_delete",
					null,
					"AwAAADlPAAAAAAAAOU8AAAAAAAABAAAAZThPAAAAAAAAOE8AAAAAAAABAAAAbTdPAAAAAAAAN08AAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6TwAAAAAAADpPAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "me"
					},
					"AgAAADdPAAAAAAAAOE8AAAAAAAAAAAAAOE8AAAAAAAA5TwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3TwAAAAAAADdPAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADlPAAAAAAAAOk8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5TwAAAAAAADlPAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"left_delete",
					null,
					"AQAAADpPAAAAAAAAOk8AAAAAAAAEAAAAIC0gKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6TwAAAAAAAD5PAAAAAAAA////////738"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAADpPAAAAAAAAO08AAAAAAAAAAAAAO08AAAAAAAA8TwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6TwAAAAAAADpPAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfTgAAAAAAAJ9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "X;"
					},
					"AwAAABtBAAAAAAAAHEEAAAAAAAAAAAAAHEEAAAAAAAAcQQAAAAAAAA4AAAAgPSBEYXRlLm5vdygpOxxBAAAAAAAAHUEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbQQAAAAAAAClBAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					2,
					"left_delete",
					null,
					"AgAAABxBAAAAAAAAHEEAAAAAAAABAAAAOxtBAAAAAAAAG0EAAAAAAAABAAAAWA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdQQAAAAAAAB1BAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABtBAAAAAAAAHEEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAE9OAAAAAAAAUE4AAAAAAAAAAAAAUE4AAAAAAABRTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPTgAAAAAAAE9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAAFBOAAAAAAAAUE4AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRTgAAAAAAAFFOAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": " ??="
					},
					"BAAAAFhOAAAAAAAAWU4AAAAAAAAAAAAAWU4AAAAAAABaTgAAAAAAAAAAAABaTgAAAAAAAFtOAAAAAAAAAAAAAFtOAAAAAAAAXE4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYTgAAAAAAAFhOAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"left_delete",
					null,
					"AQAAAFtOAAAAAAAAW04AAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTgAAAAAAAFxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": " T"
					},
					"AgAAAFtOAAAAAAAAXE4AAAAAAAAAAAAAXE4AAAAAAABdTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbTgAAAAAAAFtOAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					2,
					"left_delete",
					null,
					"AgAAAF1OAAAAAAAAXU4AAAAAAAABAAAAKVxOAAAAAAAAXE4AAAAAAAABAAAAVA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeTgAAAAAAAF5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "T)"
					},
					"AgAAAFxOAAAAAAAAXU4AAAAAAAAAAAAAXU4AAAAAAABeTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTgAAAAAAAFxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					2,
					"left_delete",
					null,
					"AgAAAF1OAAAAAAAAXU4AAAAAAAABAAAAKVxOAAAAAAAAXE4AAAAAAAABAAAAVA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeTgAAAAAAAF5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "T)"
					},
					"AgAAAFxOAAAAAAAAXU4AAAAAAAAAAAAAXU4AAAAAAABeTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTgAAAAAAAFxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					2,
					"left_delete",
					null,
					"AgAAAF1OAAAAAAAAXU4AAAAAAAABAAAAKVxOAAAAAAAAXE4AAAAAAAABAAAAVA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeTgAAAAAAAF5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAFxOAAAAAAAAXU4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTgAAAAAAAFxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAFxOAAAAAAAAXE4AAAAAAAABAAAAVA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdTgAAAAAAAF1OAAAAAAAAAAAAAAAA8L8"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "t)"
					},
					"AgAAAFxOAAAAAAAAXU4AAAAAAAAAAAAAXU4AAAAAAABeTgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcTgAAAAAAAFxOAAAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF5OAAAAAAAAX04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeTgAAAAAAAF5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					269,
					1,
					"left_delete",
					null,
					"AQAAAF5OAAAAAAAAXk4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfTgAAAAAAAF9OAAAAAAAAAAAAAAAA8L8"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAF5OAAAAAAAAX04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeTgAAAAAAAF5OAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"cut",
					null,
					"AQAAAA1BAAAAAAAADUEAAAAAAAAQAAAAICBsZXQgbGFzdFRpbWU7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANQQAAAAAAAB1BAAAAAAAAAAAAAAAA8L8"
				],
				[
					301,
					1,
					"paste",
					null,
					"AQAAANAEAAAAAAAA4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQBAAAAAAAANAEAAAAAAAAAAAAAAAA8L8"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				]
			]
		},
		{
<<<<<<< HEAD
			"file": "test-qjs.c",
			"settings":
			{
				"buffer_size": 2858,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjs-opencv/js_array.hpp",
			"settings":
			{
				"buffer_size": 19671,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjs-opencv/js_contour.hpp",
			"settings":
			{
				"buffer_size": 2363,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-video.config.json",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 22937,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-ecmascript2.js",
			"settings":
			{
				"buffer_size": 10181,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-eagle.js",
			"settings":
			{
				"buffer_size": 9064,
=======
			"file": "image-helpers.js",
			"settings":
			{
				"buffer_size": 506,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
<<<<<<< HEAD
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJoSAAAAAAAAmxIAAAAAAAAAAAAAmxIAAAAAAACbEgAAAAAAAEUAAAAgIGF3YWl0IFBvcnRhYmxlRmlsZVN5c3RlbShmcyA9PiAoZmlsZXN5c3RlbSA9IGdsb2JhbFRoaXMuZnMgPSBmcykpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhIAAAAAAADfEgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAALMBAAAAAAAAyAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAswEAAAAAAACzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "=FS"
					},
					"AwAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAANkBAAAAAAAA2QEAAAAAAAABAAAAU9gBAAAAAAAA2AEAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AgAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 94552,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
=======
					6,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAaW1wb3J0IHsgV3JpdGVGaWxlIH0gZnJvbSAnLi9pby1oZWxwZXJzLmpzJzsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAC0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAABaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"insert",
					{
						"characters": "*"
					},
<<<<<<< HEAD
					"AQAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
=======
					"AgAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1AAAAAAAAAA0AAAB7IFdyaXRlRmlsZSB9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					1,
					"insert",
					{
						"characters": " as"
					},
<<<<<<< HEAD
					"AwAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wQAAAAAAAD3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"cut",
					null,
					"AQAAAO8EAAAAAAAA7wQAAAAAAABGAAAAaW1wb3J0ICogYXMgVGltZXJzLCB7IFRpbWVvdXRFcnJvciB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wQAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"paste",
					null,
					"AgAAAO8EAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAB7BQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wQAAAAAAADvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD3BAAAAAAAAA0AAAAqIGFzIFRpbWVycywg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gQAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					16,
					"left_delete",
					null,
					"EAAAAEkFAAAAAAAASQUAAAAAAAAFAAAAb3IgfSBIBQAAAAAAAEgFAAAAAAAAAQAAAHJHBQAAAAAAAEcFAAAAAAAAAQAAAHJGBQAAAAAAAEYFAAAAAAAAAQAAAEVFBQAAAAAAAEUFAAAAAAAAAQAAAHREBQAAAAAAAEQFAAAAAAAAAQAAAHVDBQAAAAAAAEMFAAAAAAAAAQAAAG9CBQAAAAAAAEIFAAAAAAAAAQAAAGVBBQAAAAAAAEEFAAAAAAAAAQAAAG1ABQAAAAAAAEAFAAAAAAAAAQAAAGk/BQAAAAAAAD8FAAAAAAAAAQAAAFQ+BQAAAAAAAD4FAAAAAAAAAQAAACA9BQAAAAAAAD0FAAAAAAAAAQAAAHs8BQAAAAAAADwFAAAAAAAAAQAAACA7BQAAAAAAADsFAAAAAAAAAQAAACw6BQAAAAAAADoFAAAAAAAAAQAAAHM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAADoFAAAAAAAAOwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsFAAAAAAAAPAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOwUAAAAAAAA7BQAAAAAAAAAAAAAAAPC/"
				]
			]
=======
					"AwAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " xml"
					},
					"BAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "xml"
					},
					"BAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABEAAAAAAAAAA8AAAAuL2lvLWhlbHBlcnMuanNEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAFIAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-shparse.js",
			"settings":
			{
				"buffer_size": 4728,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-sockets.js",
			"settings":
			{
				"buffer_size": 1279,
				"line_ending": "Unix"
			}
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"prett",
				"Build With: prettier"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/janos/Sources/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
		"/home/roman/Projects/plot-cv/test-xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/convert-imports.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/test-readdir.js",
		"/home/roman/Projects/plot-cv/RecursiveIterator.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/image-helpers.js",
		"/home/roman/Projects/plot-cv/lib/png.js",
		"/home/roman/Projects/plot-cv/lib/jpegSize.js",
		"/home/roman/Projects/plot-cv/lib/jpeg.js",
		"/home/roman/Projects/plot-cv/lib/image-info.js",
		"/home/roman/Projects/plot-cv/lib/image-size.js",
		"/home/roman/Projects/plot-cv/lib/repeater/limiters.js",
		"/home/roman/Projects/plot-cv/lib/repeater/pubsub.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/userscript-build.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-svgpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/test-bpg.html",
		"/home/roman/Projects/plot-cv/test-call.js",
		"/home/roman/Projects/plot-cv/output-267.svg",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/dump-structs.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/jsobjstruct.c",
		"/home/roman/Projects/plot-cv/example_gl2.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/undefinedundefined63undefined",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/opencv/disabled/code10-3.cpp",
		"/home/roman/Projects/plot-cv/lib/dom/svg.js",
		"/home/roman/Projects/plot-cv/lib/svg/path-parser.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test.js",
		"/home/roman/Projects/plot-cv/test-clipper.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/src/simple_svg_writer.hpp",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/static/svg/player-symbols.svg",
		"/home/roman/Projects/plot-cv/restart.svg",
		"/home/roman/Projects/plot-cv/stop.svg",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger-transport-unix.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/.config/sublime-text/Packages/Out",
		"/home/roman/Projects/plot-cv/lib/lexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/test-net.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/repl.js",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/static/svg/arrow-right.svg",
		"/home/roman/Projects/plot-cv/lib/dom/css.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/css/button.css",
		"/home/roman/Projects/plot-cv/lib/hooks/useClick.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/lib/hooks.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js",
		"/home/roman/Projects/plot-cv/test-jslexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useGenerator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterator.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/token.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.ejs",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.js",
		"/home/roman/Projects/plot-cv/test-console.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebounce.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDrag.js"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
<<<<<<< HEAD
			"Timers",
			"js_import_load",
			"import.*repl",
			"rec->MOdule_Func",
			"resolved",
			"jsm_module_loader",
			"xml",
			"jsm_module_load\\(",
			"xml",
			"jsm_module_extern_native",
			"xml",
			"ctx =",
			"jsm_init_modules",
			"js_xml_Init",
			"jsm_module_load\\(",
			"jsm_module_load",
			"LOAD_MODULE:",
			"JS_SYNTAX_ERROR",
			"Syntax.?error",
			"Syntax.*error",
			"SyntaxError",
			"native_error_name",
			"\"SyntaxError",
			"js_mat_tostring_",
			"js_mat_tostring_tag",
			"js_mat_inspect",
			"ReadDirRecursive",
			"waitFor",
			"waitFOr",
			"Util\\.waitFor",
			"import.*util.js",
			"repeater",
			"enerator",
			"__generator",
			"step",
			" resolve\\(",
			"resolve\\(",
			"resolve",
			"resolve =",
			"finish",
			"createIteration",
			"consumeExecution",
			"createIteration",
			"\\.next =",
			"next\\(",
			"swallow",
			"createIteration",
			"resolve:",
			"\\.push\\(",
			"pushes.push",
			"pending = ",
			"pending =",
			"Initial",
			"\\.buffer",
			"new Repeater\\(",
			"new Repeater",
			"r\\.buffer",
			"r\\.buffer = ",
			"executor",
			"function Repeater",
			"'out:'",
			"getCompletions",
			"completion",
			"handleDirect",
			"Util.getFunc",
			"unctionArg",
			"padEnd",
			"Prompt",
			"StatFiles",
			"historySave",
			"wrote.*hist",
			"Wrote.*hist",
			"Wrote",
			"historyLoad",
			"RecursiveDir",
			"GetImports",
			"MemberNa",
			"ParseECM",
			"ProcessFile",
			"ParseECMAScript",
			"{[^}]*}: \\${",
			"Terminate",
=======
			"showOutput",
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
			"lines",
			"main",
			"compact",
			"str",
			"\\.str",
			"format\\(",
			"format ",
			"'s'",
			"outputMat",
			"outputMap",
			"size = ",
			"PERPE",
			"'s'",
			"testOff",
			"_cmd",
			"parse",
			"simplifi",
			"simplify",
			"psimpl",
			"simpl",
			"reduce",
			"\\.array",
			"JS.*PROP",
			"contours",
			"findCont",
			"'\\\\x3",
			"'\\x3",
			"\\\\x3",
			"\\x3",
			"0x([0-9a-f][0-9a-f])",
			"send to",
			"read size",
			"RenderUI",
			"currentSource",
			"currentSource =",
			"UpdatePosition",
			"currentSource",
			"\\(globalThis",
			"define",
			"trkl",
			"currentSource",
			"SourceFile",
			"path.relative",
			"doRender",
			"RenderUI",
<<<<<<< HEAD
			"doRender"
=======
			"doRender",
			"SourceFile",
			"ws.send",
			"sockets",
			"sockets =",
			"'child",
			"'read r",
			"'read",
			"cfunc",
			"child",
			"connections",
			"connections =",
			"globalThis.connections",
			"get connections",
			"dbg =",
			"sockets",
			"get connect",
			"DebuggerProto",
			"connections",
			"dbg =",
			"dbg",
			"dbg =",
			"js_process_debugger_messages",
			"js_transport_read_fully",
			"js_debugger_attach",
			"currentSource",
			"start'",
			"currentSou",
			"SourceFile",
			"RenderUI",
			"SourceFile",
			"props.file",
			"UpdatePosition",
			"ShowSource",
			"$",
			"ShowSource",
			"SourceFile",
			"ShowSource",
			"SourceFile",
			"currentSource",
			"for await",
			"for\\(",
			"currentSource",
			"ShowSource",
			"Button",
			"sendMess",
			"connections",
			"accept",
			"CreateSocket",
			"oaded",
			"generic",
			"JSCFunc",
			"ConnectDebugger",
			"printFunc",
			"printFunction",
			"show\\(",
			"inspect\\(",
			"printStatus",
			"inspect\\(",
			"printStat",
			"inspect\\(",
			"inspectOptions",
			"inspectOp",
			"StartREPL",
			"inspect",
			"printStat",
			"printFunc",
			"print",
			"printStat",
			"DebuggerProtocol",
			"start",
			"Start",
			"CLI",
			"console.log",
			"repl",
			"onsole.log('ret=ws.send(msg)', ret, toString(b));",
			"22",
			"main",
			"code.*offset",
			"font-size",
			"TokenizeJS",
			"lineno"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask",
			"a.push(\\1);",
			"fd",
			"log",
			"cv::KeyPoint",
			"cv::KeyPoints",
			"getMat",
			"Feature2DClass",
			", ",
			"}\\n\\nstatic",
			"s",
			"",
			"\\("
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 143,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/test-qjs.c",
							"function_name_status_row": 42,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									277,
									285
								],
								[
									993,
									1002
								],
								[
									1587,
									1606
								],
								[
									1989,
									1993
								]
							],
							"symlist":
							[
								"‚Äî‚íª‚Äì eval_buf ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì eval_file ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì JS_NewCustomContext ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì main ( ) { ‚Ä¶ } ‚Äî function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635285986.29,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-repeater.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2392,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								272
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728365.47,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-qjs.c",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2858,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635887184.84,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "qjs-opencv/js_array.hpp",
					"semi_transient": false,
					"settings":
					{
<<<<<<< HEAD
						"buffer_size": 19671,
=======
						"buffer_size": 756,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728364.35,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "qjs-opencv/js_contour.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2363,
						"regions":
						{
						},
						"selection":
						[
							[
								4,
								4
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728363.58,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test-video.config.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728362.69,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-video.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22937,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728361.97,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test-ecmascript2.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10181,
						"regions":
						{
						},
						"selection":
						[
							[
								1925,
								1946
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 92,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728355.64,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "test-eagle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9064,
						"regions":
						{
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1330,
										1335
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										1315,
										1315
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								474,
								474
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 12,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728356.8,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_moving":
=======
							"current_file": "/home/janos/Sources/plot-cv/test-video.js",
							"function_name_status_row": 30,
							"outline_rename_mode": false,
							"symkeys":
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94552,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										86484,
										86493
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										86388,
										86388
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										44604,
										44608
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										44587,
										44587
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21026,
										21033
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										23110,
										23119
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										23097,
										23097
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										23174,
										23178
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										23128,
										23128
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										44746,
										44766
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										44647,
										44647
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22585,
										22589
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										22511,
										22511
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11163,
										11167
									],
									[
										22184,
										22189
									],
									[
										22718,
										22722
									],
									[
										22889,
										22893
									],
									[
										24123,
										24127
									],
									[
										24693,
										24697
									],
									[
										28272,
										28277
									],
									[
										28348,
										28353
									],
									[
										44304,
										44308
									],
									[
										77017,
										77029
									],
									[
										84056,
										84060
									],
									[
										85921,
										85925
									],
									[
										86050,
										86054
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										11084,
										11084
									],
									[
										22169,
										22169
									],
									[
										22703,
										22703
									],
									[
										22876,
										22876
									],
									[
										24108,
										24108
									],
									[
										24678,
										24678
									],
									[
										28217,
										28217
									],
									[
										28297,
										28297
									],
									[
										44233,
										44233
									],
									[
										76974,
										76974
									],
									[
										83996,
										83996
									],
									[
										85868,
										85868
									],
									[
										85965,
										85965
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21263,
										21270
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21067,
										21074
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21274,
										21281
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21015,
										21022
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21089,
										21096
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21078,
										21085
									]
=======
									1607,
									1632
								],
								[
									1677,
									1698
								],
								[
									1774,
									1795
								],
								[
									1895,
									1904
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21048,
										21048
									]
=======
									1922,
									1932
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										78571,
										78588
									]
=======
									1994,
									2003
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										78550,
										78550
									]
=======
									2064,
									2072
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										11380,
										11401
									]
=======
									2132,
									2140
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										11333,
										11333
									]
=======
									2202,
									2230
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										66941,
										66945
									],
									[
										69320,
										69324
									]
=======
									2444,
									2468
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										66885,
										66885
									],
									[
										69252,
										69252
									]
=======
									2543,
									2568
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21037,
										21044
									]
=======
									2849,
									2869
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										20976,
										20976
									]
=======
									2943,
									2972
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21111,
										21118
									]
=======
									3124,
									3203
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21048,
										21048
									]
=======
									3275,
									3305
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21252,
										21259
									]
=======
									3375,
									3409
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21212,
										21212
									]
=======
									3457,
									3480
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21230,
										21237
									]
=======
									3565,
									3592
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21212,
										21212
									]
=======
									3670,
									3702
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21241,
										21248
									]
=======
									3898,
									3920
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21212,
										21212
									]
=======
									5648,
									5677
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21100,
										21107
									]
=======
									8952,
									8983
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										21048,
										21048
									]
=======
									9592,
									9620
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										20993,
										21000
									]
=======
									9791,
									9814
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										20976,
										20976
									]
=======
									9874,
									9897
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										21004,
										21011
									]
=======
									10020,
									10049
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										20976,
										20976
									]
=======
									10266,
									10290
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										7070,
										7073
									],
									[
										19237,
										19241
									],
									[
										28440,
										28443
									],
									[
										44408,
										44412
									]
=======
									10491,
									10518
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
<<<<<<< HEAD
									[
										7059,
										7059
									],
									[
										19224,
										19224
									],
									[
										28376,
										28376
									],
									[
										44337,
										44337
									]
=======
									10849,
									10878
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
<<<<<<< HEAD
									[
										45044,
										45048
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										45023,
										45023
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										78530,
										78547
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
=======
									12167,
									12204
								],
								[
									16669,
									16692
								],
								[
									17719,
									17758
								],
								[
									20113,
									20152
								],
								[
									21214,
									21247
								]
							],
							"symlist":
							[
								"Hierarchy(array)",
								"  .index = function(id)",
								"  .index = function(id)",
								"Hierarchy",
								"  parent(id)",
								"  child(id)",
								"  next(id)",
								"  prev(id)",
								"  getConstants(names)",
								"  findType(value)",
								"  getBitDepth(mat)",
								"  minMax(mat)",
								"  modifierMap(keyCode)",
								"  drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
								"  function*getParents(hier, id)",
								"  getContourDepth(hier, id)",
								"  findRoot(hier)",
								"  function*getToplevel(hier)",
								"  function*walkContours(hier, id)",
								"  main(...args)",
								"(event, x, y, flags)",
								"AcquireFrame(src, dst)",
								"Grayscale(src, dst)",
								"Norm(src, dst)",
								"Blur(src, dst)",
								"EdgeDetect(src, dst)",
								"Morph(src, dst)",
								"Contours(src, dst)",
								"HoughLines(src, dst)",
								"\tfunction(value, count, name, window)",
								"  showOutput()",
								"  drawParam(param, y, color)",
								"  saveContours(contours, size)",
								"  saveLines(lines, size)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635704407.44,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4053,
						"regions":
						{
							"col_FFD700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2501,
										2515
									]
								],
								"scope": "col_FFD700FF"
							},
							"col_FFD700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFD700FF_circle.png",
								"regions":
								[
									[
										2488,
										2488
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								1248,
								1248
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 42,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635634884.41,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2079.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13018,
						"regions":
						{
						},
						"selection":
						[
							[
								8528,
								8530
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 266,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635635278.3,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4644.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test-sourcemap.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 898,
						"regions":
						{
						},
						"selection":
						[
							[
								812,
								784
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 27,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635711671.17,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": true,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test-video.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22762,
						"regions":
						{
							"col_010101FF":
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
<<<<<<< HEAD
										78508,
										78508
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										84710,
										84717
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										84693,
										84693
=======
										21038,
										21043
									],
									[
										21567,
										21572
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										20982,
										20982
									],
									[
										21511,
										21511
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
									]
								],
								"scope": "col_gutter"
							},
<<<<<<< HEAD
							"col_FFFF00FF":
=======
							"col_808080FF":
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							{
								"flags": 16,
								"regions":
								[
									[
<<<<<<< HEAD
										22696,
										22700
									],
									[
										86261,
										86265
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										22683,
										22683
									],
									[
										86238,
										86238
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
=======
										5432,
										5436
									],
									[
										12131,
										12135
									],
									[
										13062,
										13066
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										5408,
										5408
									],
									[
										12099,
										12099
									],
									[
										13054,
										13054
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								1765,
								1765
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 64,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635714042.71,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6032.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "image-helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 506,
						"regions":
						{
							"col_010101FF":
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							{
								"flags": 16,
								"regions":
								[
									[
<<<<<<< HEAD
										24143,
										24147
									],
									[
										63410,
										63415
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										24130,
										24130
									],
									[
										63392,
										63392
=======
										245,
										250
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										191,
										191
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
<<<<<<< HEAD
								3051,
								3051
=======
								70,
								70
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"function_name_status_row": 51,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635363878.91,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
=======
							"function_name_status_row": 1,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635711572.82,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-shparse.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4728,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635634882.78,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test-sockets.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1279,
						"regions":
						{
						},
						"selection":
						[
							[
								1023,
								1023
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 33,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635634881.9,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.754262567352,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
<<<<<<< HEAD
				"main.j",
				"main.js"
=======
				"test-vi",
				"test-video.js"
			],
			[
				"image-he",
				"image-helpers.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-im",
				"test-image.js"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-misc.c",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-mmap",
				"quickjs/qjs-modules/quickjs-mmap.c"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-ins",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"webSOc",
				"webSocket.js"
			],
			[
				"timers.",
				"lib/repeater/timers.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvGUI",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"js_Mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"-helper",
				"io-helpers.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"quickjs-lib",
				"quickjs/quickjs-libc.c"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-repe",
				"test-repeater.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"repea",
				"lib/repeater/repeater.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"jpeg.js",
				"lib/jpeg.js"
			],
			[
				"image-h",
				"image-helpers.js"
			],
			[
				"estree.js",
				"lib/ecmascript/estree.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"terminal",
				"qjs-modules/lib/terminal.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			],
			[
				"js_cont",
				"qjs-opencv/js_contour.hpp"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"path",
				"lib/svg/path.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"svgpa",
				"lib/svg/path-parser.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"test-clip",
				"test-clipper.js"
			],
			[
				"13",
				"opencv/disabled/code10-3.cpp"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"test-svg",
				"test-svgpath.js"
			],
			[
				"test-svgp",
				"test-svgpath.js"
			],
			[
				"svg",
				"src/simple_svg_writer.hpp"
			],
			[
				"player-sy",
				"static/svg/player-symbols.svg"
			],
			[
				".svg",
				"restart.svg"
			],
			[
				"server",
				"debugger-server.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"sockets.c",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debuggerprot",
				"debuggerprotocol.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.cs",
				"static/debugger.css"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			],
			[
				"debugger-c",
				"debugger-client.js"
			],
			[
				"test-jsl",
				"test-jslexer.js"
			],
			[
				"hooks",
				"lib/hooks.js"
			],
			[
				"test-jsle",
				"test-jslexer.js"
			],
			[
				"misc.j",
				"lib/misc.js"
			],
			[
				"token",
				"lib/ecmascript/token.js"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"jslexer",
				"lib/jslexer.js"
			],
			[
				"",
				"debugger-server.js"
			],
			[
				"react-sim",
				"react-simple-code-editor.js"
			],
			[
				"prism-co",
				"prism-core.js"
			],
			[
				"prism-core",
				"prism-core.js"
			],
			[
				"debugger",
				"debugger-server.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"hooks.j",
				"lib/hooks.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"hook",
				"lib/hooks.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"parser.",
				"lib/ecmascript/parser.js"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"arser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"test-lexer",
				"test-lexer.js"
			],
			[
				"elemen",
				"lib/dom/element.js"
			],
			[
				"element",
				"lib/dom/element.js"
			],
			[
				"debugger.html",
				"debugger.html"
			],
			[
				"process.js",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"debu",
				"debugger-server.js"
			],
			[
				"errval",
				"errval.c"
			],
			[
				"events",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"events.",
				"lib/events.js"
			],
			[
				"path.c",
				"quickjs/qjs-modules/path.c"
			],
			[
				"syscall",
				"quickjs/qjs-modules/quickjs-syscallerror.c"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
<<<<<<< HEAD
=======
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"childProcess.js",
				"lib/childProcess.js"
			],
			[
				"socket.js",
				"quickjs/qjs-ffi/lib/socket.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"parser2",
				"lib/ecmascript/parser2.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/rpc.js"
			],
			[
				"httpd.",
				"httpd.js"
			],
			[
				"httpd.js",
				"httpd.js"
			],
			[
				"ws-worker",
				"ws-worker.js"
			],
			[
				"test-rpc.js",
				"test-rpc.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"quickjs-inspe",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/utils.h"
			],
			[
				"quickjs-inter",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"quickjs-internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/vector.h"
			],
			[
				"quickjs-mis",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"test-debug",
				"test-debuggerprotocol.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"console.",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"debuggerpro",
				"debuggerprotocol.js"
			],
			[
				"packages",
				"opt/fontforge/share/mime/packages"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"test-mm",
				"test-mmap.js"
			],
			[
				"websocket-asy",
				"lib/net/websocket-async.js"
			],
			[
				"util.j",
				"lib/util.js"
>>>>>>> cadeb8b44d0418c6742fa1406e3513edb12abc42
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
