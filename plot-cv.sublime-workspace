{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Trans",
				"TransformationList"
			],
			[
				"HAVE_",
				"HAVE_MALLOC_USABLE_SIZE_DEFINITION"
			],
			[
				"js_mat_itera",
				"js_mat_iterator_class_id"
			],
			[
				"JSMat",
				"JSMatIteratorData"
			],
			[
				"mat_iterator",
				"mat_iterator_proto"
			],
			[
				"Obj",
				"ObjectBindingPattern"
			],
			[
				"Mut",
				"MutablePath"
			],
			[
				"Conso",
				"ConsoleSetup"
			],
			[
				"ES6I",
				"ES6ImportExport.prototype"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			}
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 60666,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjsc.c",
			"settings":
			{
				"buffer_size": 20655,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "JsDebuggr\nSublimeLinter-jshint\nView In Browser\nCodeFormatter\nJavaScriptNext - ES6 Syntax\nEschaton Color Scheme\nEntheogen Color Scheme\nCodeFall Color Scheme\nAcme Color Scheme\nClosureMyJS\nES6-Toolkit\nESLintAutoFix\nFormat JSDoc @params\nGoto Usage\nJavaScript Enhancements\nJavaScriptExtractFunction\nJavaScriptFunctionDefinition\nJSCustom\nJSDebug\nJsModules\nCMakeEditor\nDoxyDoc\nEasy Import\nClang Format\nGoto Usage\nSublimeAnarchyDebug\nSublimeLLDB\nSublimeGDB\n",
			"file": "/home/roman/Dokumente/Sources/plot-cv/sub-pkgs.tmp",
			"file_size": 460,
			"file_write_time": 132437013818690615,
			"settings":
			{
				"buffer_size": 449,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nCodeFormatter\n-------------\n\n  Thanks for installing Sublime CodeFormatter! Below are some quick notes to get you\n  started with the plugin.\n  \n  CodeFormatter\n  =============\n  \n  \n  CodeFormatter is a Sublime Text 2/3 plugin that supports format (beautify) source code.\n  \n  \n  CodeFormatter has support for the following languages:\n  \n  * PHP - By phpfmt\n  * JavaScript/JSON - By JSBeautifier\n  * HTML - By JSBeautifier\n  * CSS - By JSBeautifier\n  * SCSS - By Nishutosh Sharma\n  * Python - By PythonTidy (only ST2)\n  * Visual Basic/VBScript\n  \n  \n  Sponsors\n  -----\n  No sponsors yet.. :(\n  \n  If you like the software, don't forget to donate to further development of it!\n  \n  [![PayPal donate button](https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_pp_142x27.png)](https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=akalongman@gmail.com&item_name=Donation to Sublime Text - CodeFormatter&item_number=1&no_shipping=1 \"Donate to this project using Paypal\")\n  \n  \n  Installing\n  ----------\n  **With the Package Control plugin:** The easiest way to install CodeFormatter is through Package Control, which can be found at this site: http://wbond.net/sublime_packages/package_control\n  \n  Once you install Package Control, restart Sublime Text and bring up the Command Palette (`Command+Shift+P` on OS X, `Control+Shift+P` on Linux/Windows). Select \"Package Control: Install Package\", wait while Package Control fetches the latest package list, then select CodeFormatter when the list appears. The advantage of using this method is that Package Control will automatically keep CodeFormatter up to date with the latest version.\n  \n  **Without Git:** Download the latest source from [GitHub](https://github.com/akalongman/sublimetext-codeformatter) and copy the CodeFormatter folder to your Sublime Text \"Packages\" directory.\n  \n  **With Git:** Clone the repository in your Sublime Text \"Packages\" directory:\n  \n      git clone https://github.com/akalongman/sublimetext-codeformatter.git CodeFormatter\n  \n  \n  The \"Packages\" directory is located at:\n  \n  * OS X:\n  \n          ST2: ~/Library/Application Support/Sublime Text 2/Packages/\n          ST3: ~/Library/Application Support/Sublime Text 3/Packages/\n  \n  * Linux:\n  \n          ST2: ~/.config/sublime-text-2/Packages/\n          ST3: ~/.config/sublime-text-3/Packages/\n  \n  * Windows:\n  \n          ST2: %APPDATA%/Sublime Text 2/Packages/\n          ST3: %APPDATA%/Sublime Text 3/Packages/\n  \n  \n  ## Formatter-specific notes\n  Following are notes specific to individual formatters that you should be aware of:\n  ### PHP\n  PHP - Used phpfmt (https://github.com/phpfmt/fmt) by Carlos Cirello and Shaked Klein Orbach.\n  \n  Getting and installing PHP - http://www.php.net/manual/en/install.general.php\n  \n  You must install 5.6 or above\n  \n  On Linux/OSx after installation of package, you must set chmod +x to file fmt.phar in folder %PACKAGESDIR%/CodeFormatter/codeformatter/lib/phpbeautifier\n  \n  You can list all available transformations from Command Palette: CodeFormatter: Show PHP Transformations\n  \n  Language specific options:\n  ```js\n     \"codeformatter_php_options\":\n      {\n          \"syntaxes\": \"php\", // Syntax names which must process PHP formatter\n          \"php_path\": \"\", // Path for PHP executable, e.g. \"/usr/lib/php\" or \"C:/Program Files/PHP/php.exe\". If empty, uses command \"php\" from system environments\n          \"format_on_save\": false, // Format on save\n          \"psr1\": false, // Activate PSR1 style\n          \"psr1_naming\": false, // Activate PSR1 style - Section 3 and 4.3 - Class and method names case\n          \"psr2\": true, // Activate PSR2 style\n          \"indent_with_space\": 4, // Use spaces instead of tabs for indentation\n          \"enable_auto_align\": true, // Enable auto align of = and =>\n          \"visibility_order\": true, // Fixes visibiliy order for method in classes - PSR-2 4.2\n          \"smart_linebreak_after_curly\": true, // Convert multistatement blocks into multiline blocks\n  \n          // Enable specific transformations. Example: [\"ConvertOpenTagWithEcho\", \"PrettyPrintDocBlocks\"]\n          // You can list all available transformations from command palette: CodeFormatter: Show PHP Transformations\n          \"passes\": [],\n  \n          // Disable specific transformations\n          \"exclude\": []\n      }\n  ```\n  \n  \n  \n  ### Javascript/JSON\n  Javascript/JSON - used [JSBeautifier] (http://jsbeautifier.org/) by Einar Lielmanis\n  \n  Language specific options:\n  ```js\n      \"codeformatter_js_options\":\n      {\n          \"syntaxes\": \"javascript,json\", // Syntax names which must process JS formatter\n          \"format_on_save\": false, // Format on save\n          \"indent_size\": 4, // indentation size\n          \"indent_char\": \" \", // Indent character\n          \"indent_with_tabs\": false, // Indent with one tab (overrides indent_size and indent_char options)\n          \"eol\": \"\\n\", // EOL symbol\n          \"preserve_newlines\": false, // whether existing line breaks should be preserved,\n          \"max_preserve_newlines\": 10, // maximum number of line breaks to be preserved in one chunk\n          \"space_in_paren\": false, // Add padding spaces within paren, ie. f( a, b )\n          \"space_in_empty_paren\": false, // Add padding spaces within paren if parent empty, ie. f(  )\n          \"e4x\": false, // Pass E4X xml literals through untouched\n          \"jslint_happy\": false, // if true, then jslint-stricter mode is enforced. Example function () vs function()\n          \"brace_style\": \"collapse\", // \"collapse\" | \"expand\" | \"end-expand\". put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line.\n          \"keep_array_indentation\": false, // keep array identation.\n          \"keep_function_indentation\": false, // keep function identation.\n          \"eval_code\": false, // eval code\n          \"unescape_strings\": false, // Decode printable characters encoded in xNN notation\n          \"wrap_line_length\": 0, // Wrap lines at next opportunity after N characters\n          \"break_chained_methods\": false, // Break chained method calls across subsequent lines\n          \"end_with_newline\": false, // Add new line at end of file\n          \"comma_first\": false // Add comma first\n      }\n  ```\n  \n  ### HTML\n  HTML - used custom python port, please use it with caution, feature in early beta\n  \n  Language specific options:\n  ```js\n      \"codeformatter_html_options\":\n      {\n          \"syntaxes\": \"html,asp,xml\", // Syntax names which must process HTML formatter\n          \"format_on_save\": false, // Format on save\n          \"indent_size\": 4, // indentation size\n          \"indent_char\": \" \", // Indentation character\n          \"indent_with_tabs\": false, // Indent with one tab (overrides indent_size and indent_char options)\n          \"preserve_newlines\": false, // Preserve existing line-breaks\n          \"max_preserve_newlines\": 10, // Maximum number of line-breaks to be preserved in one chunk\n          \"indent_tags\": \"html|head|body|div|nav|ul|ol|dl|li|table|thead|tbody|tr|th|td|blockquote|select|form|option|optgroup|fieldset|legend|label|header|section|aside|footer|figure|video|datalist|keygen|audio|embed|source|track|output|article|bdi|details|dialog|figcaption|main|mark|menuitem|meter|nav|progress|rp|rt|ruby|summary|time|wbr\" // List of tags (defaults to indent) that should be reformatted. Example \"div|p|li|table\"\n      }\n  ```\n  \n  ### CSS\n  CSS - used [JSBeautifier] (http://jsbeautifier.org/) by Einar Lielmanis and Style Css by Harutyun Amirjanyan\n  \n  Language specific options:\n  ```js\n      \"codeformatter_css_options\":\n      {\n          \"syntaxes\": \"css,less\", // Syntax names which must process CSS formatter\n          \"format_on_save\": false, // Format on save\n          \"indent_size\": 4, // Indentation size\n          \"indent_char\": \" \", // Indentation character\n          \"indent_with_tabs\": false, // Indent with one tab (overrides indent_size and indent_char options)\n          \"selector_separator_newline\": false, // Add new lines after selector separators\n          \"end_with_newline\": false, // Add new line of end in file\n          \"newline_between_rules\": false, // Add new line between rules\n          \"eol\": \"\\n\" // EOL symbol\n      }\n  ```\n  ### SCSS\n  SCSS - Simply modified the CSS formatter module as per the response from scss-lint (Gives way to modify further)\n  \n  Language specific options:\n  ```js\n      \"codeformatter_scss_options\":\n      {\n          \"syntaxes\": \"scss\", // Indentation size\n          \"indent_size\": 2, // Indentation size\n          \"format_on_save\": false, // Format on save\n          \"indent_char\": \" \", // Indentation character\n          \"indent_with_tabs\": false, // Indent with one tab (overrides indent_size and indent_char options)\n          \"selector_separator_newline\": true, // Add new lines after selector separators\n          \"newline_between_rules\": true, // Add new line between rules\n          \"end_with_newline\": true // Add new line of end in file\n      }\n  ```\n  \n  ### Python\n  Python - used [PythonTidy] (https://pypi.python.org/pypi/PythonTidy/) by Chuck Rhode\n  \n  Language specific options:\n  ```js\n      \"codeformatter_python_options\":\n      {\n          \"syntaxes\": \"python\", // Syntax names which must process Python formatter\n          \"format_on_save\": false, // Format on save\n          \"indent_size\": 1, // indentation size\n          \"indent_with_tabs\": true, // Indent with tabs or spaces\n          \"max_char\": 80, // Width of output lines in characters.\n          \"assignment\": \" = \", // This is how the assignment operator is to appear.\n          \"function_param_assignment\": \"=\", // This is how function-parameter assignment should appear.\n          \"function_param_sep\": \", \", // This is how function parameters are separated.\n          \"list_sep\": \", \", // This is how list items are separated.\n          \"subscript_sep\": \"=\", // This is how subscripts are separated.\n          \"dict_colon\": \": \", // This separates dictionary keys from values.\n          \"slice_colon\": \":\", // this separates the start:end indices of slices.\n          \"comment_prefix\": \"# \", // This is the sentinel that marks the beginning of a commentary string.\n          \"shebang\": \"#!/usr/bin/env python\", // Hashbang, a line-one comment naming the Python interpreter to Unix shells.\n          \"boilerplate\": \"\", // Standard code block (if any). This is inserted after the module doc string on output.\n          \"blank_line\": \"\", // This is how a blank line is to appear (up to the newline character).\n          \"keep_blank_lines\": true, // If true, preserve one blank where blank(s) are encountered.\n          \"add_blank_lines_around_comments\": true, // If true, set off comment blocks with blanks.\n          \"add_blank_line_after_doc_string\": true, // If true, add blank line after doc strings.\n          \"max_seps_func_def\": 3, // Split lines containing longer function definitions.\n          \"max_seps_func_ref\": 5, // Split lines containing longer function calls.\n          \"max_seps_series\": 5, // Split lines containing longer lists or tuples.\n          \"max_seps_dict\": 3, // Split lines containing longer dictionary definitions.\n          \"max_lines_before_split_lit\": 2, // Split string literals containing more newline characters.\n          \"left_margin\": \"\", // This is how the left margin is to appear.\n          \"normalize_doc_strings\": false, // If true, normalize white space in doc strings.\n          \"leftjust_doc_strings\": false, // If true, left justify doc strings.\n          \"wrap_doc_strings\": false, // If true, wrap doc strings to max_char.\n          \"leftjust_comments\": false, // If true, left justify comments.\n          \"wrap_comments\": false, // If true, wrap comments to max_char.\n          \"double_quoted_strings\": false, // If true, use quotes instead of apostrophes for string literals.\n          \"single_quoted_strings\": false, // If true, use apostrophes instead of quotes for string literals.\n          \"can_split_strings\": false, // If true, longer strings are split at the max_char.\n          \"doc_tab_replacement\": \"....\", // This literal replaces tab characters in doc strings and comments.\n  \n          // Optionally preserve unassigned constants so that code to be tidied\n          // may contain blocks of commented-out lines that have been no-op'ed\n          // with leading and trailing triple quotes.  Python scripts may declare\n          // constants without assigning them to a variables, but CodeFormatter\n          // considers this wasteful and normally elides them.\n          \"keep_unassigned_constants\": false,\n  \n          // Optionally omit parentheses around tuples, which are superfluous\n          // after all.  Normal CodeFormatter behavior will be still to include them\n          // as a sort of tuple display analogous to list displays, dict\n          // displays, and yet-to-come set displays.\n          \"parenthesize_tuple_display\": true,\n  \n          // When CodeFormatter splits longer lines because max_seps\n          // are exceeded, the statement normally is closed before the margin is\n          // restored.  The closing bracket, brace, or parenthesis is placed at the\n          // current indent level.  This looks ugly to \"C\" programmers.  When\n          // java_style_list_dedent is True, the closing bracket, brace, or\n          // parenthesis is brought back left to the indent level of the enclosing\n          // statement.\n          \"java_style_list_dedent\": false\n      }\n  ```\n  ### Visual Basic/VBScript\n  Visual Basic/VBScript - used custom approach using the HTML beautifier as a guide\n  \n  Language specific options:\n  ```js\n      \"codeformatter_vbscript_options\":\n      {\n          \"syntaxes\": \"vbscript\", // Syntax names which must process VBScript formatter\n          \"format_on_save\": false, // Format on save\n          \"indent_size\": 1, // indentation size\n          \"indent_char\": \"\\t\", // Indentation character\n          \"indent_with_tabs\": true, // Indent with one tab (overrides indent_size and indent_char options)\n          \"preserve_newlines\": true, // Preserve existing line-breaks\n          \"max_preserve_newlines\": 10, // Maximum number of line-breaks to be preserved in one chunk\n          \"opening_tags\": \"^(Function .*|Sub .*|If .* Then|For .*|Do While .*|Select Case.*)\", // List of keywords which open a new block\n          \"middle_tags\": \"^(Else|ElseIf .* Then|Case .*)$\", // List of keywords which divide a block, but neither open or close the block\n          \"closing_tags\": \"(End Function|End Sub|End If|Next|Loop|End Select)$\" // List of keywords which close an open block\n      }\n  ```\n  \n  Usage\n  -----\n  Tools -> Command Palette (`Cmd+Shift+P` or `Ctrl+Shift+P`) and type `Format Code`.\n  \n  You can set up your own key combo for this, by going to Preferences -> Key Bindings - User, and adding a command in that huge array: `{ \"keys\": [\"ctrl+alt+f\"], \"command\": \"code_formatter\" },`. Default keybinding is `ctrl+alt+f`. You can use any other key you want, thought most of them are already taken.\n  \n  TODO\n  -----\n  Add other languages support:\n  * Python (for ST3)\n  * Perl\n  * Ruby\n  \n  Pull requests are welcome.\n  \n  Troubleshooting\n  ---------------\n  If you like living on the edge, please report any bugs you find on the [CodeFormatter issues](https://github.com/akalongman/sublimetext-codeformatter/issues) page.\n\n\nCodeFall Color Scheme\n---------------------\n\n  # CodeFall Color Scheme  \n  Codefall is a dark Color-Scheme for Sublime Text.\n  \n  \n  ## Installation \n  ### Via Package Control\n  \n  1. Make sure you already have [Package Control](https://packagecontrol.io/installation) installed.\n  2. Choose Install Package from the Command Palette (via `Tools > Coomand Palette` from the main menu).\n  3. Select **`CodeFall Color Scheme`** and press <kbd>Enter</kbd>.\n  \n  ### or Manual Installation\n  \n  1. Download the desired **`CodeFall Color Scheme`** file.\n  2. Browse Packages from the Command Palette (via `Preferences > Browse packages` from the main menu).\n  3. Copy the **`CodeFall Color Scheme`** file to `Packages/User/`.\n\n\nES6-Toolkit\n-----------\n\n  Package Control Messages\n  ========================\n  \n  ES6-Toolkit:\n  ---\n  \n    Thanks for installing Sublime ES6-Toolkit! Below are some quick notes to get you\n    started with the plugin. Please see https://github.com/Stephn-R/ES6-Toolkit for\n    the full documentation.\n    \n    \n    ----------------------------------------------------------------------------------\n                                        IMPORTANT\n    ----------------------------------------------------------------------------------\n    \n    In order to be able to run the ES6 Compiler, you will need to install the NPM module\n    `babel` globally. Please run the following command to install babel:\n  \n    ```bash\n    npm install -g babel\n    ```\n  \n    ----------------------------------------------------------------------------------\n  \n    ## Features\n  \n    The ES6-Toolkit comes pre-packages with lots of cool tools. Below is a short list\n    with links to more information in the Wiki Pages:\n  \n    1. ES6 Completions => [Wiki Link](http://www.google.com)\n  \n    ## Coming Soon\n  \n    1. ES6 Inline Compiling\n    2. Compile entire JS files to ES5 using Babel\n    3. Compile entire projects to ES5 using Babel\n    \n    Support\n    ----\n    \n    To learn more about the features and settings, please visit\n    https://github.com/Stephn-R/ES6-Toolkit-for-Sublime\n    \n    If you are having trouble, please contact me at steprodriguez10@gmail.com\n\n\nJavaScript Enhancements\n-----------------------\n\n  =================================================================\n  ** THIS PLUGIN IS IN BETA! Thanks for your support in advance! **\n  =================================================================\n  \n  If you like it, remember to star it ⭐ on GitHub: https://github.com/pichillilorenzo/JavaScriptEnhancements\n  \n  ** USAGE **\n  ===========\n  \n  See how it works on the Wiki: 👉👉 https://github.com/pichillilorenzo/JavaScriptEnhancements/wiki 👈👈\n  \n  A little introduction to this plugin could be found in this css-tricks.com article: \"Turn Sublime Text 3 into a JavaScript IDE\"\n  👉👉 https://css-tricks.com/turn-sublime-text-3-into-a-javascript-ide 👈👈\n  \n  \n  *****************************************************************************\n  *                                                                           *\n  *             Do you want to help me develop this plugin?                   *\n  *                                                                           *\n  *                     Become a member of the team!                          *\n  * (see https://github.com/pichillilorenzo/JavaScriptEnhancements/issues/51) *\n  *                                                                           *\n  *****************************************************************************\n  \n  \n  ** WHAT IS THIS? **\n  ===================\n  \n  This plugin uses Flow (javascript static type checker from Facebook) under the hood.\n  \n  It offers better javascript autocomplete and a lot of features about creating, \n  developing and managing javascript projects, such as:\n  \n  - Cordova projects (run cordova emulate, build, compile, serve, etc. directly from Sublime Text!)\n  - Ionic v1 and v2 (it includes also v3) projects (same as Cordova projects!)\n  - Angular v1 and v2 (it includes also v4 and v5) projects\n  - Vue projects (only about the creation at this moment, see https://github.com/pichillilorenzo/JavaScriptEnhancements/wiki/Example-Vue.js-project)\n  - React projects (only about the creation at this moment)\n  - React Native projects (only about the creation at this moment. I will add also NativeScript support)\n  - Express projects (only about the creation at this moment)\n  - Yeoman generators\n  - Local bookmarks project\n  - JavaScript real-time errors\n  - Code Refactoring\n  - etc.\n  \n  You could use it also in existing projects (see the Wiki - https://github.com/pichillilorenzo/JavaScriptEnhancements/wiki/Using-it-with-an-existing-project)!\n  \n  It turns Sublime Text into a JavaScript IDE like!\n  \n  This project is based on my other Sublime Text plugin JavaScript Completions (https://github.com/pichillilorenzo/JavaScript-Completions)\n  \n  ** NOTE **\n  If you want use this plugin, you may want uninstall/disable the JavaScript Completions plugin, if installed.\n  \n  ** OS SUPPORTED **\n  ==================\n  \n  👉 Linux (64-bit)\n  👉 Mac OS X \n  👉 Windows (64-bit): released without the use of TerminalView plugin. For each feature (like also creating a project) will be used the cmd.exe shell (so during the creation of a project don't close it until it finishes!). Unfortunately the TerminalView plugin supports only Linux-based OS 😞. See https://github.com/Wramberg/TerminalView/issues/3#issuecomment-390434623, that is a workaround using WSL (Windows Subsystem for Linux).\n  \n  ❗❗ Dependencies ❗❗\n  =======================\n  \n  In order to work properly, this plugin has some dependencies:\n  \n  👉 Sublime Text 3 (build 3124 or newer)\n  👉 Node.js and npm (https://nodejs.org or nvm (https://github.com/creationix/nvm))\n  👉 TerminalView (only for Linux and Mac OS X) sublime text plugin (https://github.com/Wramberg/TerminalView)\n  \n  Not required, but useful for typescript files (Flow wont work on this type of files):\n  \n  👉 TypeScript sublime text plugin (https://github.com/Microsoft/TypeScript-Sublime-Plugin) \n  \n  ** Flow Requirements **\n  =======================\n  \n  It use [Flow](https://github.com/facebook/flow) for type checking and auto-completions.\n  \n  👉 Mac OS X\n  👉 Linux (64-bit)\n  👉 Windows (64-bit)\n  \n  Email me for any questions or doubts about this new project on: pichillilorenzo@gmail.com\n  \n  ** Donation **\n  ==============\n  \n  If this project help you reduce time to develop and also you like it, please support it with a donation 😄👍. Thanks!\n  \n  Open Collective: https://opencollective.com/javascriptenhancements/donate\n  PayPal: https://www.paypal.me/LorenzoPichilli\n  \n  Thanks anyway for your support! 😄😄\n  \n  MIT License\n\n\nJSCustom\n--------\n\n  JS Custom - Customizable JavaScript syntax highlighting for Sublime Text\n  ========================================================================\n  \n  Upon installation, JS Custom will compile a couple of example syntaxes, “JS Custom - Default” and “JS Custom - React”. You can try these out right away. To customize your syntaxes, choose Preferences → Package Settings → JS Custom → Settings from the menubar. When you save your user settings file, JS Custom will recompile your syntaxes on the fly.\n  \n  Visit the JS Custom GitHub at https://github.com/Thom1729/Sublime-JS-Custom for full documentation, including all syntax options.\n  \n  If you find a bug, need help, or have a suggestion for a new feature, please post an issue on the GitHub page.\n\n\nDoxyDoc\n-------\n\n  Hello.\n  \n  Thanks for installing this package. This package was made to help make\n  the hassle of making doxygen documentation a little bit easier. There\n  were many plug-ins that did this for other languages, but there weren't\n  many that did it for C++ properly. Many failed when handling templates.\n  As a result, this package was made with high inspiration from the other\n  popular documentation package, DocBlockr.\n  \n  If you find any bugs, which are sure to show up due to the imperfections\n  of parsing C++ with regex, please notify me on the GitHub page:\n  https://github.com/Rapptz/DoxyDoc\n",
			"settings":
			{
				"buffer_size": 23592,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "/home/roman/.config/sublime-text-3/Packages/User/NewScheme.tmTheme",
			"settings":
			{
				"buffer_size": 11917,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Run with Node.JS",
	"build_system_choices":
	[
		[
			[
				[
					"Build debug",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"Run with Node.JS",
					""
				],
				[
					"antlr4 - Build current .g4 file",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"prettier",
					""
				],
				[
					"prettier ${file_path}",
					""
				]
			],
			[
				"Run with Node.JS",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"add ",
				"Package Control: Add Repository"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"extract pack",
				"PackageResourceViewer: Extract Package"
			],
			[
				"symbol",
				"CTags: Show Symbols (all)"
			],
			[
				"ctags",
				"CTags: Show Symbols (file)"
			],
			[
				"svgo",
				"SVGO: Prettify SVG"
			],
			[
				"",
				"Browse Mode: FileBrowser Top Left, Outline Bottom Left"
			],
			[
				"prett",
				"SVGO: Prettify SVG"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"extract fn",
				"Extract Javascript Function to Regular Function"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"add rep",
				"Package Control: Add Repository"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"cmake",
				"CMake Format: Format Selection"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"list p",
				"Package Control: List Packages"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"instalk",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"extract",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"build",
				"Build: Cancel"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 362.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Sources/plot-cv",
		"/home/roman/Sources/plot-cv/lib",
		"/home/roman/Sources/plot-cv/lib/eagle"
	],
	"file_history":
	[
		"/home/roman/Sources/plot-cv/quickjs/qjsc.c",
		"/home/roman/Sources/plot-cv/quickjs/qjs.c",
		"/home/roman/Sources/plot-cv/src/imgui-viewer.cpp",
		"/home/roman/Sources/plot-cv/lib/geom/rect.js",
		"/home/roman/Dokumente/Sources/plot-cv/sdl2-config.cmake",
		"/home/roman/Sources/plot-cv/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/highgui-viewer.cmake",
		"/home/roman/Sources/plot-cv/imgui-viewer.cmake",
		"/usr/local/share/cmake-3.18/Modules/FindGLEW.cmake",
		"/home/roman/Dokumente/Sources/imgui/examples/example_glfw_vulkan/CMakeLists.txt",
		"/home/roman/Sources/plot-cv/lib/dom/cache.js",
		"/home/roman/Sources/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Sources/plot-cv/lib/util.js",
		"/home/roman/Sources/plot-cv/lib/geom/size.js",
		"/home/roman/Sources/plot-cv/plot-cv.sublime-project",
		"/home/roman/Sources/plot-cv/components.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Sources/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Sources/plot-cv/lib/eagle/document.js",
		"/home/roman/Sources/plot-cv/server.js",
		"/home/roman/Dokumente/Sources/inkscape-0.92.4/share/extensions/color_randomize.py",
		"/home/roman/Sources/plot-cv/lib/eagle/components/textElement.js",
		"/home/roman/Sources/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Sources/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Sources/plot-cv/lib/async/debounce.js",
		"/home/roman/Sources/plot-cv/lib/geom/transformation.js",
		"/home/roman/Sources/plot-cv/static/svg/cnc-frezovani.svg",
		"/home/roman/Sources/plot-cv/main.js",
		"/home/roman/Sources/plot-cv/static/svg/cnc-obrabeni.svg",
		"/home/roman/Sources/plot-cv/Voronoi_diagram.svg",
		"/home/roman/Sources/plot-cv/static/svg/voronoi.svg",
		"/home/roman/Sources/plot-cv/static/svg/voronoi-square.svg",
		"/home/roman/Sources/plot-cv/cnc-milling.svg",
		"/home/roman/Sources/plot-cv/cnc-turning.svg",
		"/home/roman/Sources/plot-cv/3d-printers.svg",
		"/home/roman/Sources/plot-cv/cutting-machines.svg",
		"/home/roman/Sources/plot-cv/cnc-machines.svg",
		"/home/roman/Sources/plot-cv/static/svg/hide-black.svg",
		"/home/roman/Sources/plot-cv/CNC_Fraesen.svg",
		"/home/roman/Sources/plot-cv/CNC_Fraesen (1).svg",
		"/home/roman/Sources/plot-cv/cnc-obrabeni.svg",
		"/home/roman/Sources/plot-cv/cnc-frezovani.svg",
		"/home/roman/Sources/plot-cv/cnc-milling-machine-spindle-vector-600w-1256901511.webp",
		"/home/roman/Sources/plot-cv/fresatrici-cnc-e-anubatrici_icon.svg",
		"/home/roman/Sources/plot-cv/style.css",
		"/home/roman/Sources/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Sources/plot-cv/tmp/7seg-2.54.brd",
		"/home/roman/Sources/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/text.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/rectangle.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/svg.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/circle.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Sources/plot-cv/classNames.js",
		"/home/roman/Sources/plot-cv/lib/xml/xpath.js",
		"/home/roman/Sources/plot-cv/lib/eagle/node.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components.js",
		"/home/roman/Sources/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Sources/plot-cv/lib/eagle/element.js",
		"/home/roman/Dokumente/Sources/plot-cv/static/svg/grid.svg",
		"/home/roman/Dokumente/Sources/plot-cv/tmp/7seg-2.54.brd",
		"/home/roman/Sources/plot-cv/lib/eagle/components/cross.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/origin.js",
		"/home/roman/Sources/plot-cv/lib/dom.js",
		"/home/roman/Sources/plot-cv/lib/dom/timer.js",
		"/home/roman/Sources/pictest/eagle/7seg-2.54.brd",
		"/home/roman/Sources/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Sources/plot-cv/lib/eagle/components/background.js",
		"/home/roman/Sources/plot-cv/lib/trkl.js",
		"/home/roman/Sources/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Sources/plot-cv/lib/dom/element.js",
		"/home/roman/Sources/plot-cv/useDimensions.js",
		"/home/roman/Sources/plot-cv/tlite.css",
		"/home/roman/Sources/plot-cv/lib/tlite.js",
		"/home/roman/Dokumente/Sources/plot-cv/static/svg/layers.svg",
		"/home/roman/Dokumente/Sources/plot-cv/static/svg/exception.svg",
		"/home/roman/.config/sublime-text-3/Packages/Babel/Next Roman 2.tmTheme",
		"/home/roman/Dokumente/Sources/plot-cv/test-alea.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-antlr.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-attributes.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-autoplacer.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-cli.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-clipper.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-color.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-coverage.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-date.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-description.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-eagle.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-ecmascript.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-eval.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-export.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-expr.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-filesystem.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-geom.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-ini.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-jpeg.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-jsjs.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-kolorwheel.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-lexer.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-lex.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-line.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-matrix.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-membrane.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-moon.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-parse.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-path.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-pointlist.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-preact.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-proxy.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-quickjs.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-renderer.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-repeater.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-sourcemap.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-stack.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-svgpath.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-template.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-trkl.js",
		"/home/roman/Dokumente/Sources/plot-cv/test-util.js",
		"/home/roman/Dokumente/Sources/plot-cv/lib/axios.js",
		"/home/roman/Dokumente/Sources/plot-cv/lib/devpane.js",
		"/home/roman/Sources/plot-cv/resolve-imports.js",
		"/home/roman/.config/sublime-text-3/Packages/Babel/Next Roman 3.tmTheme",
		"/home/roman/Sources/plot-cv/lib/color/distanceChecker.js",
		"/home/roman/Sources/plot-cv/static/svg/browse.svg",
		"/home/roman/Sources/plot-cv/test-xml.js",
		"/home/roman/Dokumente/Sources/plot-cv/static/svg/CAM.svg"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 157.0,
		"where_history":
		[
			"/home/roman/Sources/plot-cv,*.js,CMakeLists.txt,-*/node_modules/*,/home/roman/Sources/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Sources/plot-cv/lib,*.js,CMakeLists.txt,-*/node_modules/*,/home/roman/Sources/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Sources/plot-cv,*.js,CMakeLists.txt,-*/node_modules/*,/home/roman/Sources/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Sources/plot-cv,*.js,CMakeLists.txt,-*/node_modules/*",
			"/home/roman/Sources/plot-cv,*.js,CMakeLists.txt",
			"/home/roman/Sources/plot-cv/lib,*.js,CMakeLists.txt",
			"/home/roman/Sources/plot-cv,*.js,CMakeLists.txt",
			"/home/roman/Sources/plot-cv,*.js",
			"/home/roman/Sources/plot-cv/lib",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			">italic<",
			"italic",
			"VideoCap",
			"GLFW.*LIB",
			"GLFW_LIB",
			"^",
			"SDL2",
			"SDL",
			"sdl2",
			"^\\s*console",
			"^funct",
			"^async fun",
			"Normalize",
			"isposi",
			"GcodeToPolylines",
			"$",
			"finished.*loading",
			"finished loading",
			"Util.log",
			"code:",
			"filterOutKeys",
			"filterOutKeys =",
			"Response /gerbe",
			"Response .ger",
			"Request:",
			"Content-Dispo",
			" NormalizeResponse\\(",
			"^\\s*console",
			"^\\s*Util.log",
			"^\\s*console",
			"filterKeys =",
			"if",
			"filterOutKeys =",
			"GerberToGcode",
			"this.debug",
			"this.log",
			"this\\.log",
			"console\\.log",
			"console\\.",
			"tmp\\/",
			"console.log",
			"console.debu",
			"GerberToGcode",
			"BoardToGerber",
			"BoardTo",
			"BoardToGer",
			"gcodeTo",
			"coloreffect",
			"GcodeToPolylines",
			"^\\s*console",
			"Util.log",
			"^\\s*console",
			"GerberToGcode",
			"BoardToGerber",
			"\\.error",
			"ispo",
			"gerberEndpoint",
			"path\\.",
			"gerberToGcode",
			"convertToGerber",
			"GBL",
			"GerberToGcode",
			"306",
			"RGBA",
			"polylines",
			"stroke",
			"CAM\\.",
			"layerList",
			" \\& 1",
			"buttons",
			"layerList",
			"onMouseD",
			"mousedown",
			"Chooser",
			"DropDown",
			"overlay",
			"      ",
			"currentTarget",
			"gerberDa",
			"gerberToGcode",
			"gerberFile",
			"gcode",
			"gerberToGcode",
			"gcode",
			"convertToGerber",
			"inactive",
			"disabled",
			"\\.type",
			"Alignment\\(",
			"Alignment\\($",
			"Alignment\\(",
			"0.0875rem",
			"defs",
			"style",
			"pad",
			"<pad",
			"this.create",
			"decodeUR",
			"ElementToPath",
			"ElementToClass",
			"ElementToPath",
			"layerName",
			"classNames",
			"import.*classNames",
			"\\.number",
			"className",
			"class",
			"layerList",
			"ayerList",
			"Layer",
			"ayerList",
			"AdjustZo",
			"AdjustZoom",
			"Math.log",
			"initialized to",
			"args",
			"^\\s*slice\\(",
			"^\\s*map",
			"MakeFitAction",
			"fn:",
			"MakeFitAc",
			"class.*TransformationList",
			"class.*Translat",
			"Make",
			"setTransform",
			"transform",
			"\\.subsc",
			"MakeFit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"><",
			"#",
			"console.debug",
			"this.debug",
			"console.log",
			"_ref$liveMeasure",
			"liveRef",
			"refLiveMeasure",
			"GcodeParser",
			"DEPENDS ${QJSC_DEPS}",
			"#ffff4b",
			"new RGBA",
			"js_mat_vector<\\1>::get",
			"JS_PROP_ENUMERABLE",
			"JS_DefinePropertyValueStr",
			"JS_NewUint32",
			"cv::Mat* m = &js_mat_data(ctx, this_val)->mat",
			"cv::Mat* \\1 = js_mat_data",
			"Enable dump ",
			"",
			"\\1console.debug",
			"log(",
			"position",
			" ",
			"g",
			"\\1//\\2",
			"Util.log('Util.stack:'",
			"new ",
			"",
			"pathTransform",
			"",
			"(ES6Env.cwd,",
			"\\1//\\2",
			"console.log",
			"{Util.ansi.text(modulePath,1,36)}",
			"#",
			"hex",
			"obj",
			"target",
			"",
			".",
			"RAD2DEG",
			"DEG2RAD",
			"Functional._defprop",
			"return !!(this.mode & os.\\1);",
			"  console.log(`filesystem.",
			"view",
			"HAVE_LTO_FLAG",
			"${SO_NAME}",
			"${A_NAME}",
			"A_NAME",
			"//console.log",
			"console.log",
			"map().filter",
			"map()",
			"flat()",
			" \"true\"",
			"\"",
			"[-\\\\w]",
			"\\1"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"color_scheme": "Packages/Outline/outline.hidden-tmTheme",
							"current_file": null,
							"outline_rename_mode": false,
							"sublime_recent_sort_is_transient": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60666,
						"regions":
						{
						},
						"selection":
						[
							[
								33772,
								33772
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18606.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs/qjsc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20655,
						"regions":
						{
						},
						"selection":
						[
							[
								4146,
								4146
							]
						],
						"settings":
						{
							"color_scheme": "Packages/JavaScript Ultimate/themes/Indiana Jones.tmTheme",
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 441.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/roman/Dokumente/Sources/plot-cv/sub-pkgs.tmp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 449,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								405
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23592,
						"regions":
						{
						},
						"selection":
						[
							[
								2134,
								2134
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 8305.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/roman/.config/sublime-text-3/Packages/User/NewScheme.tmTheme",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11917,
						"regions":
						{
						},
						"selection":
						[
							[
								2019,
								2019
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 948.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 150.0
	},
	"output.exec":
	{
		"height": 286.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Run with NVM Node.JS 14.x",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 77.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"qjsc.c",
				"quickjs/qjsc.c"
			],
			[
				"qjsc.",
				"quickjs/qjsc.c"
			],
			[
				"qjs.c",
				"quickjs/qjs.c"
			],
			[
				"imgui-v",
				"src/imgui-viewer.cpp"
			],
			[
				"main",
				"main.js"
			],
			[
				"imgui",
				"imgui-viewer.cmake"
			],
			[
				"high",
				"highgui-viewer.cmake"
			],
			[
				"cmakel",
				"CMakeLists.txt"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"cache.js",
				"lib/dom/cache.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"renderUtil",
				"lib/eagle/renderUtils.js"
			],
			[
				"grid",
				"lib/eagle/components/grid.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"size",
				"lib/geom/size.js"
			],
			[
				"compo",
				"components.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"textEle",
				"lib/eagle/components/textElement.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"debounce",
				"lib/async/debounce.js"
			],
			[
				"transfor",
				"lib/geom/transformation.js"
			],
			[
				"-squa",
				"static/svg/voronoi-square.svg"
			],
			[
				"voronoi.sv",
				"static/svg/voronoi.svg"
			],
			[
				"voro",
				"Voronoi_diagram.svg"
			],
			[
				"obra",
				"static/svg/cnc-obrabeni.svg"
			],
			[
				"frezo",
				"static/svg/cnc-frezovani.svg"
			],
			[
				"transfo",
				"lib/geom/transformation.js"
			],
			[
				"board",
				"lib/eagle/boardRenderer.js"
			],
			[
				"comp",
				"components.js"
			],
			[
				"mai",
				"main.js"
			],
			[
				"cnc-fre",
				"static/svg/cnc-frezovani.svg"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"ser",
				"server.js"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"main.",
				"main.js"
			],
			[
				"trans",
				"lib/geom/transformation.js"
			],
			[
				"7seg-2",
				"tmp/7seg-2.54.brd"
			],
			[
				"xpath",
				"lib/xml/xpath.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"timer",
				"lib/dom/timer.js"
			],
			[
				"dom.",
				"lib/dom.js"
			],
			[
				"7seg-",
				"tmp/7seg-2.54.brd"
			],
			[
				"trkl",
				"lib/trkl.js"
			],
			[
				"eleme",
				"lib/dom/element.js"
			],
			[
				"tlite",
				"lib/tlite.js"
			],
			[
				"useDim",
				"useDimensions.js"
			],
			[
				"element",
				"lib/dom/element.js"
			],
			[
				"dom",
				"lib/dom.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"quickjs.",
				"quickjs/quickjs.c"
			],
			[
				"cfg.",
				"quickjs/cfg.sh"
			],
			[
				"cmakelist",
				"quickjs/CMakeLists.txt"
			],
			[
				"path.",
				"lib/json/path.js"
			],
			[
				"colorDis",
				"lib/color/distanceChecker.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"rgba",
				"lib/color/rgba.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"wire",
				"lib/eagle/components/wire.js"
			],
			[
				"point",
				"lib/geom/point.js"
			],
			[
				"geom",
				"lib/geom.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"js_rect",
				"src/js_rect.cpp"
			],
			[
				"jsbin",
				"src/jsbindings.h"
			],
			[
				"jsbind",
				"src/jsbindings.h"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"test-qui",
				"test-quickjs.js"
			],
			[
				"cutils.h",
				"quickjs/cutils.h"
			],
			[
				"js_mat",
				"src/js_mat.cpp"
			],
			[
				"js_cont",
				"src/js_contour.cpp"
			],
			[
				"js_point",
				"src/js_point.cpp"
			],
			[
				"js_ma",
				"src/js_mat.cpp"
			],
			[
				"js_size",
				"src/js_size.cpp"
			],
			[
				"atom.h",
				"quickjs/quickjs-atom.h"
			],
			[
				"quickjs",
				"quickjs.c"
			],
			[
				"js_con",
				"src/js_contour.cpp"
			],
			[
				"js_",
				"src/js_mat.cpp"
			],
			[
				"js_poin",
				"src/js_point.cpp"
			],
			[
				"inspect.",
				"inspect.js"
			],
			[
				"point.c",
				"quickjs/examples/point.c"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"cmakelists",
				"quickjs/CMakeLists.txt"
			],
			[
				"mat.cpp",
				"src/js_mat.cpp"
			],
			[
				"filesystem",
				"lib/filesystem.js"
			],
			[
				"CMakeLists",
				"CMakeLists.txt"
			],
			[
				"path",
				"lib/path.js"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"envi",
				"lib/ecmascript/environment.js"
			],
			[
				"test-lex",
				"test-lexer.js"
			],
			[
				"enviro",
				"lib/ecmascript/environment.js"
			],
			[
				"token",
				"lib/ecmascript/token.js"
			],
			[
				"lexer",
				"lib/ecmascript/lexer.js"
			],
			[
				"env",
				"lib/ecmascript/environment.js"
			],
			[
				"test-eval",
				"test-eval.js"
			],
			[
				"estree",
				"lib/ecmascript/estree.js"
			],
			[
				"envir",
				"lib/ecmascript/environment.js"
			],
			[
				"parser",
				"lib/ecmascript/parser.js"
			],
			[
				"test-eva",
				"test-eval.js"
			],
			[
				"environ",
				"lib/ecmascript/environment.js"
			],
			[
				"parser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"test-par",
				"test-parse.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"preactc",
				"lib/dom/preactComponent.js"
			],
			[
				"deep",
				"lib/deep.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"rect",
				"rect.es"
			],
			[
				"arser.",
				"lib/ecmascript/parser.js"
			],
			[
				"resolv",
				"resolve-imports.js"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"ath.j",
				"lib/path.js"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"deep.j",
				"lib/deep.js"
			],
			[
				"path.j",
				"lib/json/path.js"
			],
			[
				"hsla",
				"lib/color/hsla.js"
			],
			[
				"rgbas",
				"lib/color/rgba.js"
			],
			[
				"colorma",
				"lib/draw/colorMap.js"
			],
			[
				"test-x",
				"test-xml.js"
			],
			[
				"cmake",
				"quickjs/CMakeLists.txt"
			],
			[
				"highg",
				"highgui-viewer.cmake"
			],
			[
				"docu",
				"lib/eagle/document.js"
			],
			[
				"highgu",
				"highgui-viewer.cmake"
			],
			[
				"cmakeli",
				"quickjs/CMakeLists.txt"
			],
			[
				"colorMap",
				"lib/draw/colorMap.js"
			],
			[
				"colorMa",
				"lib/draw/colorMap.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 1050.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 262.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
