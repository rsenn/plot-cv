{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"skel",
				"skeletonization"
			],
			[
				"Debugger",
				"DebuggerDispatcher"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"B",
				"BOOL"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"Asyn",
				"AsyncIterator"
			],
			[
				"ret",
				"return_flag"
			],
			[
				"ImportID",
				"ImportIdMap"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"dbuf_",
				"dbuf_init2"
			],
			[
				"has_",
				"has_dot_or_slash"
			],
			[
				"My",
				"MySQLResult"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"CF",
				"CFunctionClosureRecord"
			],
			[
				"js_",
				"js_mysqlresult_class_id"
			],
			[
				"extendA",
				"extendAsyncGenerator"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"MYSQL_TYPE_NEW",
				"MYSQL_TYPE_NEWDECIMAL"
			],
			[
				"JS_CF",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"js_mysqlresult_fun",
				"js_mysqlresult_functions"
			],
			[
				"JS_ToCSt",
				"JS_ToCStringLen"
			],
			[
				"js_mysql_f",
				"js_mysql_functions"
			],
			[
				"MARIA",
				"MARIADBCLIENT_LIBRARY"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"depden",
				"dependencyTree"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "GetGlobalFunctions()\n([k, v]) =>\n([k]) =>\n  toXML(obj)\na =>\n  renderToXML(component)\nGetFiletime(file, field = 'mtime')\n  file =>\nFindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')\n  fn =>\n  minIndex = name =>\n  file =>\n  file =>\n  hasBoth = name =>\n  name =>\n([name, index]) =>\n(a, b) =>\n([name, index]) =>\nSortFiles(files, direction = 1, statField = 'mtime')\n(a, b) =>\n([file]) =>\n  pick(it, n = 1)\n  n = i =>\n  append(tag, attrs, children, parent, element)\n  render(doc, filename)\nCollectParts(doc = project.schematic)\n  e =>\n  attr =>\n({ name, deviceset, device, value }) =>\nCollectElements(doc = project.board)\n  e =>\n({ name, library, package: pkg, value }) =>\nCollectPartsElements(proj = project)\n  e =>\n  a =>\n  e =>\n([{ x, y, ...element }, part]) =>\nListParts(doc = project.schematic)\n  p =>\n({ name, deviceset, device, value }) =>\nShowParts(doc = project.schematic)\n({ name, deviceset, device, value }) =>\nEaglePrint(file, output)\n(dir, base, ext) =>\n  main(...args)\n  toNumber(n)\n  load(filename, project = globalThis.project)\n  newProject(filename)\n  sch: () =>\n  brd: () =>\n  nextProject()\n  projectNames()\n  quit(arg)\n  renderToString(arg)\n(...args) =>\n() =>\n  .exit = () =>\n  .debug = (...args) =>\n  .show = value =>\n() =>\n(item, i, a) =>\n  entry =>\n  entry =>\nTerminate(exitCode)\n  xml(strings, expressions)\ne =>\nUpdateMeasures(board)\n  lines =>\n  e =>\n  line =>\nAlignItem(item)\n  tr =>\nAlignAll(doc = globalThis.document)\n  fixValue(element)\n  fixValues(doc)\n  coordMap(doc)\n  p =>\n  t =>\nGetPolygons(d = doc)\n  e =>\nFindPolygons()\n  doc =>\n  e =>\nRemovePolygons(p = polygons)\n([doc, list]) =>\n  path =>\nGetNames(doc, pred)\n  pred = e =>\n  sheet =>\n  e =>\n  e =>\ne =>\n([v, p]) =>\n([v, p]) =>\n() =>\n  doc =>\n  sheet =>\nGetByName(doc, name)\nCorrelateSchematicAndBoard(schematic, board)\n  d =>\n  n =>\n  name =>\n  doc =>\nGetSheets(doc_or_proj)\nSaveLibraries()\n([n, e]) =>\n(acc, [n, e]) =>\ne =>\n  e =>\n(a, b) =>\n  id =>\n  id =>\n([n, e]) =>\n  name =>\n(acc, [n, e]) =>\n  testEagle(filename)\n([name, e]) =>\n  e =>\n([name, i]) =>\n  p =>\n(child, i, a) =>\n(child2, i2) =>\n([index, equal]) =>\n([index]) =>\n  i =>\n  i =>\n  doc =>\n([file, e]) =>\n([file, xpath]) =>\n([k, v]) =>\nModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])\n() =>\nAppendToFilename(p, str = '')\n(dir, base, ext) =>\nSetSVGBackground(xml, color = '#ffffff')\n(e, n) =>\n(e, n) =>\n(e, n) =>\n(e, n) =>\nFileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>\n(filename, ...args) =>\nn =>\ndata =>\nn =>\nPutRowsColumns(rows)\n(acc, row) =>\n  row =>\n(col, i) =>\nGetLibrary(e)\nElementName(e)\nGetRotation(element)\nPackage2Circuit(p)\n({ x, y }) =>\n  pt =>\n  pt =>\n({ x }) =>\n({ y }) =>\n  pt =>\n  pt =>\n  coord =>\n  x =>\n  y =>\n({ x, y }) =>\n({ x, y }) =>\nContactref2Circuit(cref)\n  e =>\nSignal2Circuit(s)\nElement2Circuit(element)\nGetUsedPackages(doc = project.board)\n  e =>\nGetPackagePitch(pkg)\n  pad =>\nEagle2Circuit(doc = project.board, width = 100, height = 100)\nEagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)\nn =>\n  e =>",
			"settings":
			{
				"buffer_size": 3055,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					93,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvCwAAR2V0R2xvYmFsRnVuY3Rpb25zKCkKKFtrLCB2XSkgPT4KKFtrXSkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICBsb2FkKGZpbGVuYW1lLCBwcm9qZWN0ID0gZ2xvYmFsVGhpcy5wcm9qZWN0KQogIG5ld1Byb2plY3QoZmlsZW5hbWUpCiAgc2NoOiAoKSA9PgogIGJyZDogKCkgPT4KICBuZXh0UHJvamVjdCgpCiAgcHJvamVjdE5hbWVzKCkKICBxdWl0KGFyZykKICByZW5kZXJUb1N0cmluZyhhcmcpCiguLi5hcmdzKSA9PgooKSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KVGVybWluYXRlKGV4aXRDb2RlKQogIHhtbChzdHJpbmdzLCBleHByZXNzaW9ucykKZSA9PgpVcGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CkFsaWduSXRlbShpdGVtKQogIHRyID0+CkFsaWduQWxsKGRvYyA9IGdsb2JhbFRoaXMuZG9jdW1lbnQpCiAgZml4VmFsdWUoZWxlbWVudCkKICBmaXhWYWx1ZXMoZG9jKQogIGNvb3JkTWFwKGRvYykKICBwID0+CiAgdCA9PgpHZXRQb2x5Z29ucyhkID0gZG9jKQogIGUgPT4KRmluZFBvbHlnb25zKCkKICBkb2MgPT4KICBlID0+ClJlbW92ZVBvbHlnb25zKHAgPSBwb2x5Z29ucykKKFtkb2MsIGxpc3RdKSA9PgogIHBhdGggPT4KR2V0TmFtZXMoZG9jLCBwcmVkKQogIHByZWQgPSBlID0+CiAgc2hlZXQgPT4KICBlID0+CiAgZSA9PgplID0+CihbdiwgcF0pID0+CihbdiwgcF0pID0+CigpID0+CiAgZG9jID0+CiAgc2hlZXQgPT4KR2V0QnlOYW1lKGRvYywgbmFtZSkKQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQoc2NoZW1hdGljLCBib2FyZCkKICBkID0+CiAgbiA9PgogIG5hbWUgPT4KICBkb2MgPT4KR2V0U2hlZXRzKGRvY19vcl9wcm9qKQpTYXZlTGlicmFyaWVzKCkKKFtuLCBlXSkgPT4KKGFjYywgW24sIGVdKSA9PgplID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					94,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					96,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/project.js",
						"symkeys":
						[
							[
								354,
								366
							],
							[
								371,
								392
							],
							[
								607,
								625
							],
							[
								1315,
								1341
							],
							[
								1489,
								1503
							],
							[
								1659,
								1665
							],
							[
								1912,
								1916
							],
							[
								1972,
								1983
							],
							[
								2188,
								2198
							],
							[
								2276,
								2294
							],
							[
								2619,
								2629
							],
							[
								3229,
								3258
							],
							[
								3716,
								3734
							],
							[
								3897,
								3911
							],
							[
								4070,
								4086
							],
							[
								4141,
								4156
							],
							[
								4188,
								4195
							],
							[
								4225,
								4236
							],
							[
								4268,
								4275
							],
							[
								4305,
								4320
							],
							[
								4351,
								4357
							],
							[
								4384,
								4394
							],
							[
								4458,
								4472
							],
							[
								4543,
								4561
							],
							[
								4777,
								4803
							],
							[
								4874,
								4895
							],
							[
								5100,
								5124
							],
							[
								5164,
								5171
							],
							[
								5201,
								5217
							],
							[
								5312,
								5318
							],
							[
								5418,
								5435
							],
							[
								5480,
								5491
							],
							[
								5525,
								5539
							],
							[
								5605,
								5616
							],
							[
								5646,
								5660
							],
							[
								5753,
								5795
							],
							[
								5981,
								6000
							],
							[
								6279,
								6296
							],
							[
								6896,
								6904
							],
							[
								7449,
								7485
							],
							[
								7511,
								7531
							],
							[
								7569,
								7575
							],
							[
								7697,
								7706
							],
							[
								7779,
								7791
							]
						],
						"symlist":
						[
							"EagleProject",
							"constructor(file, fs)",
							"loadFile = file =>",
							"load(name = this.basename)",
							"lazyOpen(file)",
							" () =>",
							"l =>",
							"close(file)",
							"closeAll()",
							"addLibraries(libs)",
							"open(file)",
							"static determineEaglePath(fs)",
							"findDocument(pred)",
							"pred = name =>",
							"getLibrary(name)",
							"get schematic()",
							"name =>",
							"get board()",
							"name =>",
							"get libraries()",
							"doc =>",
							"get root()",
							"get children()",
							"t = ([v, l, d]) =>",
							"static documentLocation(d)",
							"static documentKey(d)",
							"getDocumentDirectories()",
							"file =>",
							"getLibraryPath()",
							"dir =>",
							"getLibraryNames()",
							" () =>",
							" names =>",
							" () =>",
							" names =>",
							"findLibrary(name, dirs = this.libraryPath)",
							"updateLibrary(name)",
							"libProps = lib =>",
							"index(l)",
							"saveTo(dir = '.', overwrite = false)",
							"(resolve, reject) =>",
							"doc =>",
							"result =>",
							"EagleProject"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					97,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0AgAARWFnbGVQcm9qZWN0CiAgY29uc3RydWN0b3IoZmlsZSwgZnMpCiAgbG9hZEZpbGUgPSBmaWxlID0+CiAgbG9hZChuYW1lID0gdGhpcy5iYXNlbmFtZSkKICBsYXp5T3BlbihmaWxlKQooKSA9PgogIGwgPT4KICBjbG9zZShmaWxlKQogIGNsb3NlQWxsKCkKICBhZGRMaWJyYXJpZXMobGlicykKICBvcGVuKGZpbGUpCiAgc3RhdGljIGRldGVybWluZUVhZ2xlUGF0aChmcykKICBmaW5kRG9jdW1lbnQocHJlZCkKICBwcmVkID0gbmFtZSA9PgogIGdldExpYnJhcnkobmFtZSkKICBnZXQgc2NoZW1hdGljKCkKICBuYW1lID0+CiAgZ2V0IGJvYXJkKCkKICBuYW1lID0+CiAgZ2V0IGxpYnJhcmllcygpCiAgZG9jID0+CiAgZ2V0IHJvb3QoKQogIGdldCBjaGlsZHJlbigpCiAgdCA9IChbdiwgbCwgZF0pID0+CiAgc3RhdGljIGRvY3VtZW50TG9jYXRpb24oZCkKICBzdGF0aWMgZG9jdW1lbnRLZXkoZCkKICBnZXREb2N1bWVudERpcmVjdG9yaWVzKCkKICBmaWxlID0+CiAgZ2V0TGlicmFyeVBhdGgoKQogIGRpciA9PgogIGdldExpYnJhcnlOYW1lcygpCigpID0+Cm5hbWVzID0+CigpID0+Cm5hbWVzID0+CiAgZmluZExpYnJhcnkobmFtZSwgZGlycyA9IHRoaXMubGlicmFyeVBhdGgpCiAgdXBkYXRlTGlicmFyeShuYW1lKQogIGxpYlByb3BzID0gbGliID0+CiAgaW5kZXgobCkKICBzYXZlVG8oZGlyID0gJy4nLCBvdmVyd3JpdGUgPSBmYWxzZSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICBkb2MgPT4KICByZXN1bHQgPT4KRWFnbGVQcm9qZWN0AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					98,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/project.js",
						"symkeys":
						[
							[
								354,
								366
							],
							[
								371,
								392
							],
							[
								607,
								625
							],
							[
								1315,
								1341
							],
							[
								1489,
								1503
							],
							[
								1659,
								1665
							],
							[
								1912,
								1916
							],
							[
								1972,
								1983
							],
							[
								2188,
								2198
							],
							[
								2276,
								2294
							],
							[
								2619,
								2629
							],
							[
								3229,
								3258
							],
							[
								3716,
								3734
							],
							[
								3897,
								3911
							],
							[
								4070,
								4086
							],
							[
								4141,
								4156
							],
							[
								4188,
								4195
							],
							[
								4225,
								4236
							],
							[
								4268,
								4275
							],
							[
								4305,
								4320
							],
							[
								4351,
								4357
							],
							[
								4384,
								4394
							],
							[
								4458,
								4472
							],
							[
								4543,
								4561
							],
							[
								4777,
								4803
							],
							[
								4874,
								4895
							],
							[
								5100,
								5124
							],
							[
								5164,
								5171
							],
							[
								5201,
								5217
							],
							[
								5312,
								5318
							],
							[
								5418,
								5435
							],
							[
								5480,
								5491
							],
							[
								5525,
								5539
							],
							[
								5605,
								5616
							],
							[
								5646,
								5660
							],
							[
								5753,
								5795
							],
							[
								5981,
								6000
							],
							[
								6279,
								6296
							],
							[
								6896,
								6904
							],
							[
								7449,
								7485
							],
							[
								7511,
								7531
							],
							[
								7569,
								7575
							],
							[
								7697,
								7706
							],
							[
								7779,
								7791
							]
						],
						"symlist":
						[
							"EagleProject",
							"constructor(file, fs)",
							"loadFile = file =>",
							"load(name = this.basename)",
							"lazyOpen(file)",
							" () =>",
							"l =>",
							"close(file)",
							"closeAll()",
							"addLibraries(libs)",
							"open(file)",
							"static determineEaglePath(fs)",
							"findDocument(pred)",
							"pred = name =>",
							"getLibrary(name)",
							"get schematic()",
							"name =>",
							"get board()",
							"name =>",
							"get libraries()",
							"doc =>",
							"get root()",
							"get children()",
							"t = ([v, l, d]) =>",
							"static documentLocation(d)",
							"static documentKey(d)",
							"getDocumentDirectories()",
							"file =>",
							"getLibraryPath()",
							"dir =>",
							"getLibraryNames()",
							" () =>",
							" names =>",
							" () =>",
							" names =>",
							"findLibrary(name, dirs = this.libraryPath)",
							"updateLibrary(name)",
							"libProps = lib =>",
							"index(l)",
							"saveTo(dir = '.', overwrite = false)",
							"(resolve, reject) =>",
							"doc =>",
							"result =>",
							"EagleProject"
						]
					},
					"AQAAAAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					99,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/project.js",
						"symkeys":
						[
							[
								354,
								366
							],
							[
								371,
								392
							],
							[
								607,
								625
							],
							[
								1315,
								1341
							],
							[
								1489,
								1503
							],
							[
								1659,
								1665
							],
							[
								1912,
								1916
							],
							[
								1991,
								2002
							],
							[
								2207,
								2217
							],
							[
								2295,
								2313
							],
							[
								2638,
								2648
							],
							[
								3248,
								3277
							],
							[
								3735,
								3753
							],
							[
								3916,
								3930
							],
							[
								4089,
								4105
							],
							[
								4160,
								4175
							],
							[
								4207,
								4214
							],
							[
								4244,
								4255
							],
							[
								4287,
								4294
							],
							[
								4324,
								4339
							],
							[
								4370,
								4376
							],
							[
								4403,
								4413
							],
							[
								4477,
								4491
							],
							[
								4562,
								4580
							],
							[
								4796,
								4822
							],
							[
								4893,
								4914
							],
							[
								5119,
								5143
							],
							[
								5183,
								5190
							],
							[
								5220,
								5236
							],
							[
								5331,
								5337
							],
							[
								5437,
								5454
							],
							[
								5499,
								5510
							],
							[
								5544,
								5558
							],
							[
								5624,
								5635
							],
							[
								5665,
								5679
							],
							[
								5772,
								5814
							],
							[
								6000,
								6019
							],
							[
								6298,
								6315
							],
							[
								6915,
								6923
							],
							[
								7468,
								7504
							],
							[
								7530,
								7550
							],
							[
								7588,
								7594
							],
							[
								7716,
								7725
							],
							[
								7798,
								7810
							]
						],
						"symlist":
						[
							"EagleProject",
							"constructor(file, fs)",
							"loadFile = file =>",
							"load(name = this.basename)",
							"lazyOpen(file)",
							" () =>",
							"l =>",
							"close(file)",
							"closeAll()",
							"addLibraries(libs)",
							"open(file)",
							"static determineEaglePath(fs)",
							"findDocument(pred)",
							"pred = name =>",
							"getLibrary(name)",
							"get schematic()",
							"name =>",
							"get board()",
							"name =>",
							"get libraries()",
							"doc =>",
							"get root()",
							"get children()",
							"t = ([v, l, d]) =>",
							"static documentLocation(d)",
							"static documentKey(d)",
							"getDocumentDirectories()",
							"file =>",
							"getLibraryPath()",
							"dir =>",
							"getLibraryNames()",
							" () =>",
							" names =>",
							" () =>",
							" names =>",
							"findLibrary(name, dirs = this.libraryPath)",
							"updateLibrary(name)",
							"libProps = lib =>",
							"index(l)",
							"saveTo(dir = '.', overwrite = false)",
							"(resolve, reject) =>",
							"doc =>",
							"result =>",
							"EagleProject"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAD0AgAARWFnbGVQcm9qZWN0CiAgY29uc3RydWN0b3IoZmlsZSwgZnMpCiAgbG9hZEZpbGUgPSBmaWxlID0+CiAgbG9hZChuYW1lID0gdGhpcy5iYXNlbmFtZSkKICBsYXp5T3BlbihmaWxlKQooKSA9PgogIGwgPT4KICBjbG9zZShmaWxlKQogIGNsb3NlQWxsKCkKICBhZGRMaWJyYXJpZXMobGlicykKICBvcGVuKGZpbGUpCiAgc3RhdGljIGRldGVybWluZUVhZ2xlUGF0aChmcykKICBmaW5kRG9jdW1lbnQocHJlZCkKICBwcmVkID0gbmFtZSA9PgogIGdldExpYnJhcnkobmFtZSkKICBnZXQgc2NoZW1hdGljKCkKICBuYW1lID0+CiAgZ2V0IGJvYXJkKCkKICBuYW1lID0+CiAgZ2V0IGxpYnJhcmllcygpCiAgZG9jID0+CiAgZ2V0IHJvb3QoKQogIGdldCBjaGlsZHJlbigpCiAgdCA9IChbdiwgbCwgZF0pID0+CiAgc3RhdGljIGRvY3VtZW50TG9jYXRpb24oZCkKICBzdGF0aWMgZG9jdW1lbnRLZXkoZCkKICBnZXREb2N1bWVudERpcmVjdG9yaWVzKCkKICBmaWxlID0+CiAgZ2V0TGlicmFyeVBhdGgoKQogIGRpciA9PgogIGdldExpYnJhcnlOYW1lcygpCigpID0+Cm5hbWVzID0+CigpID0+Cm5hbWVzID0+CiAgZmluZExpYnJhcnkobmFtZSwgZGlycyA9IHRoaXMubGlicmFyeVBhdGgpCiAgdXBkYXRlTGlicmFyeShuYW1lKQogIGxpYlByb3BzID0gbGliID0+CiAgaW5kZXgobCkKICBzYXZlVG8oZGlyID0gJy4nLCBvdmVyd3JpdGUgPSBmYWxzZSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICBkb2MgPT4KICByZXN1bHQgPT4KRWFnbGVQcm9qZWN0AAAAAAAAAAD0AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AIAAEVhZ2xlUHJvamVjdAogIGNvbnN0cnVjdG9yKGZpbGUsIGZzKQogIGxvYWRGaWxlID0gZmlsZSA9PgogIGxvYWQobmFtZSA9IHRoaXMuYmFzZW5hbWUpCiAgbGF6eU9wZW4oZmlsZSkKKCkgPT4KICBsID0+CiAgY2xvc2UoZmlsZSkKICBjbG9zZUFsbCgpCiAgYWRkTGlicmFyaWVzKGxpYnMpCiAgb3BlbihmaWxlKQogIHN0YXRpYyBkZXRlcm1pbmVFYWdsZVBhdGgoZnMpCiAgZmluZERvY3VtZW50KHByZWQpCiAgcHJlZCA9IG5hbWUgPT4KICBnZXRMaWJyYXJ5KG5hbWUpCiAgZ2V0IHNjaGVtYXRpYygpCiAgbmFtZSA9PgogIGdldCBib2FyZCgpCiAgbmFtZSA9PgogIGdldCBsaWJyYXJpZXMoKQogIGRvYyA9PgogIGdldCByb290KCkKICBnZXQgY2hpbGRyZW4oKQogIHQgPSAoW3YsIGwsIGRdKSA9PgogIHN0YXRpYyBkb2N1bWVudExvY2F0aW9uKGQpCiAgc3RhdGljIGRvY3VtZW50S2V5KGQpCiAgZ2V0RG9jdW1lbnREaXJlY3RvcmllcygpCiAgZmlsZSA9PgogIGdldExpYnJhcnlQYXRoKCkKICBkaXIgPT4KICBnZXRMaWJyYXJ5TmFtZXMoKQooKSA9PgpuYW1lcyA9PgooKSA9PgpuYW1lcyA9PgogIGZpbmRMaWJyYXJ5KG5hbWUsIGRpcnMgPSB0aGlzLmxpYnJhcnlQYXRoKQogIHVwZGF0ZUxpYnJhcnkobmFtZSkKICBsaWJQcm9wcyA9IGxpYiA9PgogIGluZGV4KGwpCiAgc2F2ZVRvKGRpciA9ICcuJywgb3ZlcndyaXRlID0gZmFsc2UpCihyZXNvbHZlLCByZWplY3QpID0+CiAgZG9jID0+CiAgcmVzdWx0ID0+CkVhZ2xlUHJvamVjdAAAAAAAAAAA9AIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					100,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD0AgAARWFnbGVQcm9qZWN0CiAgY29uc3RydWN0b3IoZmlsZSwgZnMpCiAgbG9hZEZpbGUgPSBmaWxlID0+CiAgbG9hZChuYW1lID0gdGhpcy5iYXNlbmFtZSkKICBsYXp5T3BlbihmaWxlKQooKSA9PgogIGwgPT4KICBjbG9zZShmaWxlKQogIGNsb3NlQWxsKCkKICBhZGRMaWJyYXJpZXMobGlicykKICBvcGVuKGZpbGUpCiAgc3RhdGljIGRldGVybWluZUVhZ2xlUGF0aChmcykKICBmaW5kRG9jdW1lbnQocHJlZCkKICBwcmVkID0gbmFtZSA9PgogIGdldExpYnJhcnkobmFtZSkKICBnZXQgc2NoZW1hdGljKCkKICBuYW1lID0+CiAgZ2V0IGJvYXJkKCkKICBuYW1lID0+CiAgZ2V0IGxpYnJhcmllcygpCiAgZG9jID0+CiAgZ2V0IHJvb3QoKQogIGdldCBjaGlsZHJlbigpCiAgdCA9IChbdiwgbCwgZF0pID0+CiAgc3RhdGljIGRvY3VtZW50TG9jYXRpb24oZCkKICBzdGF0aWMgZG9jdW1lbnRLZXkoZCkKICBnZXREb2N1bWVudERpcmVjdG9yaWVzKCkKICBmaWxlID0+CiAgZ2V0TGlicmFyeVBhdGgoKQogIGRpciA9PgogIGdldExpYnJhcnlOYW1lcygpCigpID0+Cm5hbWVzID0+CigpID0+Cm5hbWVzID0+CiAgZmluZExpYnJhcnkobmFtZSwgZGlycyA9IHRoaXMubGlicmFyeVBhdGgpCiAgdXBkYXRlTGlicmFyeShuYW1lKQogIGxpYlByb3BzID0gbGliID0+CiAgaW5kZXgobCkKICBzYXZlVG8oZGlyID0gJy4nLCBvdmVyd3JpdGUgPSBmYWxzZSkKKHJlc29sdmUsIHJlamVjdCkgPT4KICBkb2MgPT4KICByZXN1bHQgPT4KRWFnbGVQcm9qZWN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6960,
								6993
							],
							[
								7025,
								7068
							],
							[
								7143,
								7147
							],
							[
								7186,
								7225
							],
							[
								7271,
								7314
							],
							[
								7359,
								7398
							],
							[
								7494,
								7527
							],
							[
								7559,
								7579
							],
							[
								7826,
								7848
							],
							[
								10197,
								10208
							],
							[
								11309,
								11353
							],
							[
								11472,
								11492
							],
							[
								11807,
								11817
							],
							[
								11845,
								11855
							],
							[
								11891,
								11904
							],
							[
								12154,
								12168
							],
							[
								13070,
								13079
							],
							[
								13345,
								13364
							],
							[
								14082,
								14095
							],
							[
								14113,
								14118
							],
							[
								14169,
								14182
							],
							[
								14233,
								14254
							],
							[
								14651,
								14667
							],
							[
								15028,
								15033
							],
							[
								15071,
								15086
							],
							[
								15233,
								15241
							],
							[
								15282,
								15290
							],
							[
								15461,
								15489
							],
							[
								15556,
								15590
							],
							[
								15624,
								15629
							],
							[
								15651,
								15681
							],
							[
								15923,
								15931
							],
							[
								15998,
								16002
							],
							[
								16092,
								16099
							],
							[
								16439,
								16463
							],
							[
								16708,
								16713
							],
							[
								18443,
								18487
							],
							[
								18934,
								18960
							],
							[
								19662,
								19685
							],
							[
								19805,
								19827
							],
							[
								20078,
								20082
							],
							[
								20570,
								20574
							],
							[
								21191,
								21220
							],
							[
								21245,
								21249
							],
							[
								21325,
								21348
							],
							[
								21392,
								21398
							],
							[
								21426,
								21430
							],
							[
								21446,
								21483
							],
							[
								21505,
								21521
							],
							[
								21541,
								21548
							],
							[
								21605,
								21633
							],
							[
								21687,
								21698
							],
							[
								21781,
								21789
							],
							[
								21885,
								21889
							],
							[
								22039,
								22043
							],
							[
								22141,
								22146
							],
							[
								22206,
								22217
							],
							[
								22289,
								22300
							],
							[
								22387,
								22392
							],
							[
								22442,
								22448
							],
							[
								22545,
								22553
							],
							[
								22728,
								22757
							],
							[
								22850,
								22903
							],
							[
								23056,
								23060
							],
							[
								23114,
								23118
							],
							[
								23394,
								23401
							],
							[
								23423,
								23429
							],
							[
								23458,
								23489
							],
							[
								23623,
								23647
							],
							[
								23773,
								23784
							],
							[
								23802,
								23818
							],
							[
								23977,
								23982
							],
							[
								24006,
								24010
							],
							[
								24058,
								24067
							],
							[
								24135,
								24140
							],
							[
								24278,
								24283
							],
							[
								24405,
								24416
							],
							[
								24505,
								24512
							],
							[
								25158,
								25174
							],
							[
								27228,
								27262
							],
							[
								27601,
								27615
							],
							[
								27710,
								27714
							],
							[
								27736,
								27750
							],
							[
								27781,
								27785
							],
							[
								29085,
								29101
							],
							[
								29151,
								29166
							],
							[
								29225,
								29244
							],
							[
								29267,
								29279
							],
							[
								29368,
								29372
							],
							[
								29471,
								29475
							],
							[
								29694,
								29700
							],
							[
								29790,
								29804
							],
							[
								29833,
								29851
							],
							[
								29988,
								30000
							],
							[
								30030,
								30095
							],
							[
								30124,
								30129
							],
							[
								30268,
								30306
							],
							[
								30331,
								30351
							],
							[
								30380,
								30429
							],
							[
								30476,
								30486
							],
							[
								30659,
								30669
							],
							[
								30742,
								30752
							],
							[
								30823,
								30833
							],
							[
								31360,
								31441
							],
							[
								31452,
								31475
							],
							[
								31693,
								31698
							],
							[
								31780,
								31789
							],
							[
								31819,
								31825
							],
							[
								31841,
								31870
							],
							[
								31906,
								31919
							],
							[
								32150,
								32156
							],
							[
								32165,
								32176
							],
							[
								32244,
								32266
							],
							[
								32483,
								32506
							],
							[
								32918,
								32947
							],
							[
								33269,
								33296
							],
							[
								33330,
								33343
							],
							[
								33370,
								33375
							],
							[
								33399,
								33404
							],
							[
								33449,
								33459
							],
							[
								33489,
								33499
							],
							[
								33585,
								33590
							],
							[
								33710,
								33715
							],
							[
								33729,
								33737
							],
							[
								33959,
								33963
							],
							[
								34016,
								34020
							],
							[
								34108,
								34121
							],
							[
								34222,
								34235
							],
							[
								34496,
								34529
							],
							[
								34583,
								34587
							],
							[
								34701,
								34727
							],
							[
								35070,
								35103
							],
							[
								35450,
								35495
							],
							[
								35536,
								35540
							],
							[
								35557,
								35586
							],
							[
								35622,
								35628
							],
							[
								36012,
								36082
							],
							[
								36682,
								36754
							],
							[
								36987,
								36992
							],
							[
								37714,
								37718
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AQAAAAAAAAAAAAAA7wsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvCwAAR2V0R2xvYmFsRnVuY3Rpb25zKCkKKFtrLCB2XSkgPT4KKFtrXSkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICBsb2FkKGZpbGVuYW1lLCBwcm9qZWN0ID0gZ2xvYmFsVGhpcy5wcm9qZWN0KQogIG5ld1Byb2plY3QoZmlsZW5hbWUpCiAgc2NoOiAoKSA9PgogIGJyZDogKCkgPT4KICBuZXh0UHJvamVjdCgpCiAgcHJvamVjdE5hbWVzKCkKICBxdWl0KGFyZykKICByZW5kZXJUb1N0cmluZyhhcmcpCiguLi5hcmdzKSA9PgooKSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KVGVybWluYXRlKGV4aXRDb2RlKQogIHhtbChzdHJpbmdzLCBleHByZXNzaW9ucykKZSA9PgpVcGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CkFsaWduSXRlbShpdGVtKQogIHRyID0+CkFsaWduQWxsKGRvYyA9IGdsb2JhbFRoaXMuZG9jdW1lbnQpCiAgZml4VmFsdWUoZWxlbWVudCkKICBmaXhWYWx1ZXMoZG9jKQogIGNvb3JkTWFwKGRvYykKICBwID0+CiAgdCA9PgpHZXRQb2x5Z29ucyhkID0gZG9jKQogIGUgPT4KRmluZFBvbHlnb25zKCkKICBkb2MgPT4KICBlID0+ClJlbW92ZVBvbHlnb25zKHAgPSBwb2x5Z29ucykKKFtkb2MsIGxpc3RdKSA9PgogIHBhdGggPT4KR2V0TmFtZXMoZG9jLCBwcmVkKQogIHByZWQgPSBlID0+CiAgc2hlZXQgPT4KICBlID0+CiAgZSA9PgplID0+CihbdiwgcF0pID0+CihbdiwgcF0pID0+CigpID0+CiAgZG9jID0+CiAgc2hlZXQgPT4KR2V0QnlOYW1lKGRvYywgbmFtZSkKQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQoc2NoZW1hdGljLCBib2FyZCkKICBkID0+CiAgbiA9PgogIG5hbWUgPT4KICBkb2MgPT4KR2V0U2hlZXRzKGRvY19vcl9wcm9qKQpTYXZlTGlicmFyaWVzKCkKKFtuLCBlXSkgPT4KKGFjYywgW24sIGVdKSA9PgplID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6960,
								6993
							],
							[
								7025,
								7068
							],
							[
								7143,
								7147
							],
							[
								7186,
								7225
							],
							[
								7271,
								7314
							],
							[
								7359,
								7398
							],
							[
								7494,
								7527
							],
							[
								7559,
								7579
							],
							[
								7826,
								7848
							],
							[
								10197,
								10208
							],
							[
								11309,
								11353
							],
							[
								11472,
								11492
							],
							[
								11807,
								11817
							],
							[
								11845,
								11855
							],
							[
								11891,
								11904
							],
							[
								12154,
								12168
							],
							[
								13070,
								13079
							],
							[
								13345,
								13364
							],
							[
								14082,
								14095
							],
							[
								14113,
								14118
							],
							[
								14169,
								14182
							],
							[
								14233,
								14254
							],
							[
								14651,
								14667
							],
							[
								15028,
								15033
							],
							[
								15071,
								15086
							],
							[
								15233,
								15241
							],
							[
								15282,
								15290
							],
							[
								15461,
								15489
							],
							[
								15556,
								15590
							],
							[
								15624,
								15629
							],
							[
								15651,
								15681
							],
							[
								15923,
								15931
							],
							[
								15998,
								16002
							],
							[
								16092,
								16099
							],
							[
								16439,
								16463
							],
							[
								16708,
								16713
							],
							[
								18443,
								18487
							],
							[
								18934,
								18960
							],
							[
								19662,
								19685
							],
							[
								19805,
								19827
							],
							[
								20078,
								20082
							],
							[
								20570,
								20574
							],
							[
								21191,
								21220
							],
							[
								21245,
								21249
							],
							[
								21325,
								21348
							],
							[
								21392,
								21398
							],
							[
								21426,
								21430
							],
							[
								21446,
								21483
							],
							[
								21505,
								21521
							],
							[
								21541,
								21548
							],
							[
								21605,
								21633
							],
							[
								21687,
								21698
							],
							[
								21781,
								21789
							],
							[
								21885,
								21889
							],
							[
								22039,
								22043
							],
							[
								22141,
								22146
							],
							[
								22206,
								22217
							],
							[
								22289,
								22300
							],
							[
								22387,
								22392
							],
							[
								22442,
								22448
							],
							[
								22545,
								22553
							],
							[
								22728,
								22757
							],
							[
								22850,
								22903
							],
							[
								23056,
								23060
							],
							[
								23114,
								23118
							],
							[
								23394,
								23401
							],
							[
								23423,
								23429
							],
							[
								23458,
								23489
							],
							[
								23623,
								23647
							],
							[
								23773,
								23784
							],
							[
								23802,
								23818
							],
							[
								23977,
								23982
							],
							[
								24006,
								24010
							],
							[
								24058,
								24067
							],
							[
								24135,
								24140
							],
							[
								24278,
								24283
							],
							[
								24405,
								24416
							],
							[
								24505,
								24512
							],
							[
								25158,
								25174
							],
							[
								27228,
								27262
							],
							[
								27601,
								27615
							],
							[
								27710,
								27714
							],
							[
								27736,
								27750
							],
							[
								27781,
								27785
							],
							[
								29085,
								29101
							],
							[
								29151,
								29166
							],
							[
								29225,
								29244
							],
							[
								29267,
								29279
							],
							[
								29368,
								29372
							],
							[
								29471,
								29475
							],
							[
								29694,
								29700
							],
							[
								29790,
								29804
							],
							[
								29833,
								29851
							],
							[
								29988,
								30000
							],
							[
								30030,
								30095
							],
							[
								30124,
								30129
							],
							[
								30268,
								30306
							],
							[
								30331,
								30351
							],
							[
								30380,
								30429
							],
							[
								30476,
								30486
							],
							[
								30659,
								30669
							],
							[
								30742,
								30752
							],
							[
								30823,
								30833
							],
							[
								31360,
								31441
							],
							[
								31452,
								31475
							],
							[
								31693,
								31698
							],
							[
								31780,
								31789
							],
							[
								31819,
								31825
							],
							[
								31841,
								31870
							],
							[
								31906,
								31919
							],
							[
								32150,
								32156
							],
							[
								32165,
								32176
							],
							[
								32244,
								32266
							],
							[
								32483,
								32506
							],
							[
								32918,
								32947
							],
							[
								33269,
								33296
							],
							[
								33330,
								33343
							],
							[
								33370,
								33375
							],
							[
								33399,
								33404
							],
							[
								33449,
								33459
							],
							[
								33489,
								33499
							],
							[
								33585,
								33590
							],
							[
								33710,
								33715
							],
							[
								33729,
								33737
							],
							[
								33959,
								33963
							],
							[
								34016,
								34020
							],
							[
								34108,
								34121
							],
							[
								34222,
								34235
							],
							[
								34496,
								34529
							],
							[
								34583,
								34587
							],
							[
								34701,
								34727
							],
							[
								35070,
								35103
							],
							[
								35450,
								35495
							],
							[
								35536,
								35540
							],
							[
								35557,
								35586
							],
							[
								35622,
								35628
							],
							[
								36012,
								36082
							],
							[
								36682,
								36754
							],
							[
								36987,
								36992
							],
							[
								37714,
								37718
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AQAAAAAAAAAAAAAA7wsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6960,
								6993
							],
							[
								7025,
								7068
							],
							[
								7143,
								7147
							],
							[
								7186,
								7225
							],
							[
								7271,
								7314
							],
							[
								7359,
								7398
							],
							[
								7494,
								7527
							],
							[
								7559,
								7579
							],
							[
								7826,
								7848
							],
							[
								10197,
								10208
							],
							[
								11309,
								11353
							],
							[
								11472,
								11492
							],
							[
								11807,
								11817
							],
							[
								11845,
								11855
							],
							[
								11891,
								11904
							],
							[
								12154,
								12168
							],
							[
								13070,
								13079
							],
							[
								13345,
								13364
							],
							[
								14082,
								14095
							],
							[
								14113,
								14118
							],
							[
								14169,
								14182
							],
							[
								14233,
								14254
							],
							[
								14651,
								14667
							],
							[
								15028,
								15033
							],
							[
								15071,
								15086
							],
							[
								15233,
								15241
							],
							[
								15282,
								15290
							],
							[
								15461,
								15489
							],
							[
								15556,
								15590
							],
							[
								15624,
								15629
							],
							[
								15651,
								15681
							],
							[
								15923,
								15931
							],
							[
								15998,
								16002
							],
							[
								16092,
								16099
							],
							[
								16439,
								16463
							],
							[
								16708,
								16713
							],
							[
								18443,
								18487
							],
							[
								18934,
								18960
							],
							[
								19662,
								19685
							],
							[
								19805,
								19827
							],
							[
								20078,
								20082
							],
							[
								20570,
								20574
							],
							[
								21191,
								21220
							],
							[
								21245,
								21249
							],
							[
								21325,
								21348
							],
							[
								21392,
								21398
							],
							[
								21426,
								21430
							],
							[
								21446,
								21483
							],
							[
								21505,
								21521
							],
							[
								21541,
								21548
							],
							[
								21605,
								21633
							],
							[
								21687,
								21698
							],
							[
								21781,
								21789
							],
							[
								21885,
								21889
							],
							[
								22039,
								22043
							],
							[
								22141,
								22146
							],
							[
								22206,
								22217
							],
							[
								22289,
								22300
							],
							[
								22387,
								22392
							],
							[
								22442,
								22448
							],
							[
								22545,
								22553
							],
							[
								22728,
								22757
							],
							[
								22850,
								22903
							],
							[
								23056,
								23060
							],
							[
								23114,
								23118
							],
							[
								23394,
								23401
							],
							[
								23423,
								23429
							],
							[
								23458,
								23489
							],
							[
								23623,
								23647
							],
							[
								23773,
								23784
							],
							[
								23802,
								23818
							],
							[
								23977,
								23982
							],
							[
								24006,
								24010
							],
							[
								24058,
								24067
							],
							[
								24135,
								24140
							],
							[
								24278,
								24283
							],
							[
								24405,
								24416
							],
							[
								24505,
								24512
							],
							[
								25158,
								25174
							],
							[
								27228,
								27262
							],
							[
								27601,
								27615
							],
							[
								27710,
								27714
							],
							[
								27736,
								27750
							],
							[
								27781,
								27785
							],
							[
								29085,
								29101
							],
							[
								29151,
								29166
							],
							[
								29225,
								29244
							],
							[
								29267,
								29279
							],
							[
								29368,
								29372
							],
							[
								29471,
								29475
							],
							[
								29694,
								29700
							],
							[
								29790,
								29804
							],
							[
								29833,
								29851
							],
							[
								29988,
								30000
							],
							[
								30030,
								30095
							],
							[
								30124,
								30129
							],
							[
								30268,
								30306
							],
							[
								30331,
								30351
							],
							[
								30380,
								30429
							],
							[
								30476,
								30486
							],
							[
								30659,
								30669
							],
							[
								30742,
								30752
							],
							[
								30823,
								30833
							],
							[
								31360,
								31441
							],
							[
								31452,
								31475
							],
							[
								31693,
								31698
							],
							[
								31780,
								31789
							],
							[
								31819,
								31825
							],
							[
								31841,
								31870
							],
							[
								31906,
								31919
							],
							[
								32150,
								32156
							],
							[
								32165,
								32176
							],
							[
								32244,
								32266
							],
							[
								32483,
								32506
							],
							[
								32918,
								32947
							],
							[
								33269,
								33296
							],
							[
								33330,
								33343
							],
							[
								33370,
								33375
							],
							[
								33399,
								33404
							],
							[
								33449,
								33459
							],
							[
								33489,
								33499
							],
							[
								33585,
								33590
							],
							[
								33710,
								33715
							],
							[
								33729,
								33737
							],
							[
								33959,
								33963
							],
							[
								34016,
								34020
							],
							[
								34108,
								34121
							],
							[
								34222,
								34235
							],
							[
								34496,
								34529
							],
							[
								34583,
								34587
							],
							[
								34701,
								34727
							],
							[
								35070,
								35103
							],
							[
								35450,
								35495
							],
							[
								35536,
								35540
							],
							[
								35557,
								35586
							],
							[
								35622,
								35628
							],
							[
								36012,
								36082
							],
							[
								36682,
								36754
							],
							[
								36987,
								36992
							],
							[
								37714,
								37718
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6961,
								6994
							],
							[
								7026,
								7069
							],
							[
								7144,
								7148
							],
							[
								7187,
								7226
							],
							[
								7272,
								7315
							],
							[
								7360,
								7399
							],
							[
								7495,
								7528
							],
							[
								7560,
								7580
							],
							[
								7827,
								7849
							],
							[
								10198,
								10209
							],
							[
								11310,
								11354
							],
							[
								11473,
								11493
							],
							[
								11808,
								11818
							],
							[
								11846,
								11856
							],
							[
								11892,
								11905
							],
							[
								12155,
								12169
							],
							[
								13071,
								13080
							],
							[
								13346,
								13365
							],
							[
								14083,
								14096
							],
							[
								14114,
								14119
							],
							[
								14170,
								14183
							],
							[
								14234,
								14255
							],
							[
								14652,
								14668
							],
							[
								15029,
								15034
							],
							[
								15072,
								15087
							],
							[
								15234,
								15242
							],
							[
								15283,
								15291
							],
							[
								15462,
								15490
							],
							[
								15557,
								15591
							],
							[
								15625,
								15630
							],
							[
								15652,
								15682
							],
							[
								15924,
								15932
							],
							[
								15999,
								16003
							],
							[
								16093,
								16100
							],
							[
								16440,
								16464
							],
							[
								16709,
								16714
							],
							[
								18444,
								18488
							],
							[
								18935,
								18961
							],
							[
								19663,
								19686
							],
							[
								19806,
								19828
							],
							[
								20079,
								20083
							],
							[
								20571,
								20575
							],
							[
								21192,
								21221
							],
							[
								21246,
								21250
							],
							[
								21326,
								21349
							],
							[
								21393,
								21399
							],
							[
								21427,
								21431
							],
							[
								21447,
								21484
							],
							[
								21506,
								21522
							],
							[
								21542,
								21549
							],
							[
								21606,
								21634
							],
							[
								21688,
								21699
							],
							[
								21782,
								21790
							],
							[
								21886,
								21890
							],
							[
								22040,
								22044
							],
							[
								22142,
								22147
							],
							[
								22207,
								22218
							],
							[
								22290,
								22301
							],
							[
								22388,
								22393
							],
							[
								22443,
								22449
							],
							[
								22546,
								22554
							],
							[
								22729,
								22758
							],
							[
								22851,
								22904
							],
							[
								23057,
								23061
							],
							[
								23115,
								23119
							],
							[
								23395,
								23402
							],
							[
								23424,
								23430
							],
							[
								23459,
								23490
							],
							[
								23624,
								23648
							],
							[
								23774,
								23785
							],
							[
								23803,
								23819
							],
							[
								23978,
								23983
							],
							[
								24007,
								24011
							],
							[
								24059,
								24068
							],
							[
								24136,
								24141
							],
							[
								24279,
								24284
							],
							[
								24406,
								24417
							],
							[
								24506,
								24513
							],
							[
								25159,
								25175
							],
							[
								27229,
								27263
							],
							[
								27602,
								27616
							],
							[
								27711,
								27715
							],
							[
								27737,
								27751
							],
							[
								27782,
								27786
							],
							[
								29086,
								29102
							],
							[
								29152,
								29167
							],
							[
								29226,
								29245
							],
							[
								29268,
								29280
							],
							[
								29369,
								29373
							],
							[
								29472,
								29476
							],
							[
								29695,
								29701
							],
							[
								29791,
								29805
							],
							[
								29834,
								29852
							],
							[
								29989,
								30001
							],
							[
								30031,
								30096
							],
							[
								30125,
								30130
							],
							[
								30269,
								30307
							],
							[
								30332,
								30352
							],
							[
								30381,
								30430
							],
							[
								30477,
								30487
							],
							[
								30660,
								30670
							],
							[
								30743,
								30753
							],
							[
								30824,
								30834
							],
							[
								31361,
								31442
							],
							[
								31453,
								31476
							],
							[
								31694,
								31699
							],
							[
								31781,
								31790
							],
							[
								31820,
								31826
							],
							[
								31842,
								31871
							],
							[
								31907,
								31920
							],
							[
								32151,
								32157
							],
							[
								32166,
								32177
							],
							[
								32245,
								32267
							],
							[
								32484,
								32507
							],
							[
								32919,
								32948
							],
							[
								33270,
								33297
							],
							[
								33331,
								33344
							],
							[
								33371,
								33376
							],
							[
								33400,
								33405
							],
							[
								33450,
								33460
							],
							[
								33490,
								33500
							],
							[
								33586,
								33591
							],
							[
								33711,
								33716
							],
							[
								33730,
								33738
							],
							[
								33960,
								33964
							],
							[
								34017,
								34021
							],
							[
								34109,
								34122
							],
							[
								34223,
								34236
							],
							[
								34497,
								34530
							],
							[
								34584,
								34588
							],
							[
								34702,
								34728
							],
							[
								35071,
								35104
							],
							[
								35451,
								35496
							],
							[
								35537,
								35541
							],
							[
								35558,
								35587
							],
							[
								35623,
								35629
							],
							[
								36013,
								36083
							],
							[
								36683,
								36755
							],
							[
								36988,
								36993
							],
							[
								37715,
								37719
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6961,
								6994
							],
							[
								7026,
								7069
							],
							[
								7144,
								7148
							],
							[
								7187,
								7226
							],
							[
								7272,
								7315
							],
							[
								7360,
								7399
							],
							[
								7495,
								7528
							],
							[
								7560,
								7580
							],
							[
								7827,
								7849
							],
							[
								10198,
								10209
							],
							[
								11310,
								11354
							],
							[
								11473,
								11493
							],
							[
								11808,
								11818
							],
							[
								11846,
								11856
							],
							[
								11892,
								11905
							],
							[
								12155,
								12169
							],
							[
								13071,
								13080
							],
							[
								13346,
								13365
							],
							[
								14083,
								14096
							],
							[
								14114,
								14119
							],
							[
								14170,
								14183
							],
							[
								14234,
								14255
							],
							[
								14652,
								14668
							],
							[
								15029,
								15034
							],
							[
								15072,
								15087
							],
							[
								15234,
								15242
							],
							[
								15283,
								15291
							],
							[
								15462,
								15490
							],
							[
								15557,
								15591
							],
							[
								15625,
								15630
							],
							[
								15652,
								15682
							],
							[
								15924,
								15932
							],
							[
								15999,
								16003
							],
							[
								16093,
								16100
							],
							[
								16440,
								16464
							],
							[
								16709,
								16714
							],
							[
								18444,
								18488
							],
							[
								18935,
								18961
							],
							[
								19663,
								19686
							],
							[
								19806,
								19828
							],
							[
								20079,
								20083
							],
							[
								20571,
								20575
							],
							[
								21192,
								21221
							],
							[
								21246,
								21250
							],
							[
								21326,
								21349
							],
							[
								21393,
								21399
							],
							[
								21427,
								21431
							],
							[
								21447,
								21484
							],
							[
								21506,
								21522
							],
							[
								21542,
								21549
							],
							[
								21606,
								21634
							],
							[
								21688,
								21699
							],
							[
								21782,
								21790
							],
							[
								21886,
								21890
							],
							[
								22040,
								22044
							],
							[
								22142,
								22147
							],
							[
								22207,
								22218
							],
							[
								22290,
								22301
							],
							[
								22388,
								22393
							],
							[
								22443,
								22449
							],
							[
								22546,
								22554
							],
							[
								22729,
								22758
							],
							[
								22851,
								22904
							],
							[
								23057,
								23061
							],
							[
								23115,
								23119
							],
							[
								23395,
								23402
							],
							[
								23424,
								23430
							],
							[
								23459,
								23490
							],
							[
								23624,
								23648
							],
							[
								23774,
								23785
							],
							[
								23803,
								23819
							],
							[
								23978,
								23983
							],
							[
								24007,
								24011
							],
							[
								24059,
								24068
							],
							[
								24136,
								24141
							],
							[
								24279,
								24284
							],
							[
								24406,
								24417
							],
							[
								24506,
								24513
							],
							[
								25159,
								25175
							],
							[
								27229,
								27263
							],
							[
								27602,
								27616
							],
							[
								27711,
								27715
							],
							[
								27737,
								27751
							],
							[
								27782,
								27786
							],
							[
								29086,
								29102
							],
							[
								29152,
								29167
							],
							[
								29226,
								29245
							],
							[
								29268,
								29280
							],
							[
								29369,
								29373
							],
							[
								29472,
								29476
							],
							[
								29695,
								29701
							],
							[
								29791,
								29805
							],
							[
								29834,
								29852
							],
							[
								29989,
								30001
							],
							[
								30031,
								30096
							],
							[
								30125,
								30130
							],
							[
								30269,
								30307
							],
							[
								30332,
								30352
							],
							[
								30381,
								30430
							],
							[
								30477,
								30487
							],
							[
								30660,
								30670
							],
							[
								30743,
								30753
							],
							[
								30824,
								30834
							],
							[
								31361,
								31442
							],
							[
								31453,
								31476
							],
							[
								31694,
								31699
							],
							[
								31781,
								31790
							],
							[
								31820,
								31826
							],
							[
								31842,
								31871
							],
							[
								31907,
								31920
							],
							[
								32151,
								32157
							],
							[
								32166,
								32177
							],
							[
								32245,
								32267
							],
							[
								32484,
								32507
							],
							[
								32919,
								32948
							],
							[
								33270,
								33297
							],
							[
								33331,
								33344
							],
							[
								33371,
								33376
							],
							[
								33400,
								33405
							],
							[
								33450,
								33460
							],
							[
								33490,
								33500
							],
							[
								33586,
								33591
							],
							[
								33711,
								33716
							],
							[
								33730,
								33738
							],
							[
								33960,
								33964
							],
							[
								34017,
								34021
							],
							[
								34109,
								34122
							],
							[
								34223,
								34236
							],
							[
								34497,
								34530
							],
							[
								34584,
								34588
							],
							[
								34702,
								34728
							],
							[
								35071,
								35104
							],
							[
								35451,
								35496
							],
							[
								35537,
								35541
							],
							[
								35558,
								35587
							],
							[
								35623,
								35629
							],
							[
								36013,
								36083
							],
							[
								36683,
								36755
							],
							[
								36988,
								36993
							],
							[
								37715,
								37719
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADvCwAAR2V0R2xvYmFsRnVuY3Rpb25zKCkKKFtrLCB2XSkgPT4KKFtrXSkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICBsb2FkKGZpbGVuYW1lLCBwcm9qZWN0ID0gZ2xvYmFsVGhpcy5wcm9qZWN0KQogIG5ld1Byb2plY3QoZmlsZW5hbWUpCiAgc2NoOiAoKSA9PgogIGJyZDogKCkgPT4KICBuZXh0UHJvamVjdCgpCiAgcHJvamVjdE5hbWVzKCkKICBxdWl0KGFyZykKICByZW5kZXJUb1N0cmluZyhhcmcpCiguLi5hcmdzKSA9PgooKSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KVGVybWluYXRlKGV4aXRDb2RlKQogIHhtbChzdHJpbmdzLCBleHByZXNzaW9ucykKZSA9PgpVcGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CkFsaWduSXRlbShpdGVtKQogIHRyID0+CkFsaWduQWxsKGRvYyA9IGdsb2JhbFRoaXMuZG9jdW1lbnQpCiAgZml4VmFsdWUoZWxlbWVudCkKICBmaXhWYWx1ZXMoZG9jKQogIGNvb3JkTWFwKGRvYykKICBwID0+CiAgdCA9PgpHZXRQb2x5Z29ucyhkID0gZG9jKQogIGUgPT4KRmluZFBvbHlnb25zKCkKICBkb2MgPT4KICBlID0+ClJlbW92ZVBvbHlnb25zKHAgPSBwb2x5Z29ucykKKFtkb2MsIGxpc3RdKSA9PgogIHBhdGggPT4KR2V0TmFtZXMoZG9jLCBwcmVkKQogIHByZWQgPSBlID0+CiAgc2hlZXQgPT4KICBlID0+CiAgZSA9PgplID0+CihbdiwgcF0pID0+CihbdiwgcF0pID0+CigpID0+CiAgZG9jID0+CiAgc2hlZXQgPT4KR2V0QnlOYW1lKGRvYywgbmFtZSkKQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQoc2NoZW1hdGljLCBib2FyZCkKICBkID0+CiAgbiA9PgogIG5hbWUgPT4KICBkb2MgPT4KR2V0U2hlZXRzKGRvY19vcl9wcm9qKQpTYXZlTGlicmFyaWVzKCkKKFtuLCBlXSkgPT4KKGFjYywgW24sIGVdKSA9PgplID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgAAAAAAAAAA7wsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6967,
								7000
							],
							[
								7032,
								7075
							],
							[
								7150,
								7154
							],
							[
								7193,
								7232
							],
							[
								7278,
								7321
							],
							[
								7366,
								7405
							],
							[
								7501,
								7534
							],
							[
								7566,
								7586
							],
							[
								7833,
								7855
							],
							[
								10204,
								10215
							],
							[
								11316,
								11360
							],
							[
								11479,
								11499
							],
							[
								11814,
								11824
							],
							[
								11852,
								11862
							],
							[
								11898,
								11911
							],
							[
								12161,
								12175
							],
							[
								13077,
								13086
							],
							[
								13352,
								13371
							],
							[
								14089,
								14102
							],
							[
								14120,
								14125
							],
							[
								14176,
								14189
							],
							[
								14240,
								14261
							],
							[
								14658,
								14674
							],
							[
								15035,
								15040
							],
							[
								15078,
								15093
							],
							[
								15240,
								15248
							],
							[
								15289,
								15297
							],
							[
								15468,
								15496
							],
							[
								15563,
								15597
							],
							[
								15631,
								15636
							],
							[
								15658,
								15688
							],
							[
								15930,
								15938
							],
							[
								16005,
								16009
							],
							[
								16099,
								16106
							],
							[
								16446,
								16470
							],
							[
								16715,
								16720
							],
							[
								18450,
								18494
							],
							[
								18941,
								18967
							],
							[
								19669,
								19692
							],
							[
								19812,
								19834
							],
							[
								20085,
								20089
							],
							[
								20577,
								20581
							],
							[
								21198,
								21227
							],
							[
								21252,
								21256
							],
							[
								21332,
								21355
							],
							[
								21399,
								21405
							],
							[
								21433,
								21437
							],
							[
								21453,
								21490
							],
							[
								21512,
								21528
							],
							[
								21548,
								21555
							],
							[
								21612,
								21640
							],
							[
								21694,
								21705
							],
							[
								21788,
								21796
							],
							[
								21892,
								21896
							],
							[
								22046,
								22050
							],
							[
								22148,
								22153
							],
							[
								22213,
								22224
							],
							[
								22296,
								22307
							],
							[
								22394,
								22399
							],
							[
								22449,
								22455
							],
							[
								22552,
								22560
							],
							[
								22735,
								22764
							],
							[
								22857,
								22910
							],
							[
								23063,
								23067
							],
							[
								23121,
								23125
							],
							[
								23401,
								23408
							],
							[
								23430,
								23436
							],
							[
								23465,
								23496
							],
							[
								23630,
								23654
							],
							[
								23780,
								23791
							],
							[
								23809,
								23825
							],
							[
								23984,
								23989
							],
							[
								24013,
								24017
							],
							[
								24065,
								24074
							],
							[
								24142,
								24147
							],
							[
								24285,
								24290
							],
							[
								24412,
								24423
							],
							[
								24512,
								24519
							],
							[
								25165,
								25181
							],
							[
								27235,
								27269
							],
							[
								27608,
								27622
							],
							[
								27717,
								27721
							],
							[
								27743,
								27757
							],
							[
								27788,
								27792
							],
							[
								29092,
								29108
							],
							[
								29158,
								29173
							],
							[
								29232,
								29251
							],
							[
								29274,
								29286
							],
							[
								29375,
								29379
							],
							[
								29478,
								29482
							],
							[
								29701,
								29707
							],
							[
								29797,
								29811
							],
							[
								29840,
								29858
							],
							[
								29995,
								30007
							],
							[
								30037,
								30102
							],
							[
								30131,
								30136
							],
							[
								30275,
								30313
							],
							[
								30338,
								30358
							],
							[
								30387,
								30436
							],
							[
								30483,
								30493
							],
							[
								30666,
								30676
							],
							[
								30749,
								30759
							],
							[
								30830,
								30840
							],
							[
								31367,
								31448
							],
							[
								31459,
								31482
							],
							[
								31700,
								31705
							],
							[
								31787,
								31796
							],
							[
								31826,
								31832
							],
							[
								31848,
								31877
							],
							[
								31913,
								31926
							],
							[
								32157,
								32163
							],
							[
								32172,
								32183
							],
							[
								32251,
								32273
							],
							[
								32490,
								32513
							],
							[
								32925,
								32954
							],
							[
								33276,
								33303
							],
							[
								33337,
								33350
							],
							[
								33377,
								33382
							],
							[
								33406,
								33411
							],
							[
								33456,
								33466
							],
							[
								33496,
								33506
							],
							[
								33592,
								33597
							],
							[
								33717,
								33722
							],
							[
								33736,
								33744
							],
							[
								33966,
								33970
							],
							[
								34023,
								34027
							],
							[
								34115,
								34128
							],
							[
								34229,
								34242
							],
							[
								34503,
								34536
							],
							[
								34590,
								34594
							],
							[
								34708,
								34734
							],
							[
								35077,
								35110
							],
							[
								35457,
								35502
							],
							[
								35543,
								35547
							],
							[
								35564,
								35593
							],
							[
								35629,
								35635
							],
							[
								36019,
								36089
							],
							[
								36689,
								36761
							],
							[
								36994,
								36999
							],
							[
								37721,
								37725
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6967,
								7000
							],
							[
								7032,
								7075
							],
							[
								7150,
								7154
							],
							[
								7193,
								7232
							],
							[
								7278,
								7321
							],
							[
								7366,
								7405
							],
							[
								7501,
								7534
							],
							[
								7566,
								7586
							],
							[
								7833,
								7855
							],
							[
								10204,
								10215
							],
							[
								11316,
								11360
							],
							[
								11479,
								11499
							],
							[
								11814,
								11824
							],
							[
								11852,
								11862
							],
							[
								11898,
								11911
							],
							[
								12161,
								12175
							],
							[
								13077,
								13086
							],
							[
								13352,
								13371
							],
							[
								14089,
								14102
							],
							[
								14120,
								14125
							],
							[
								14176,
								14189
							],
							[
								14240,
								14261
							],
							[
								14658,
								14674
							],
							[
								15035,
								15040
							],
							[
								15078,
								15093
							],
							[
								15240,
								15248
							],
							[
								15289,
								15297
							],
							[
								15468,
								15496
							],
							[
								15563,
								15597
							],
							[
								15631,
								15636
							],
							[
								15658,
								15688
							],
							[
								15930,
								15938
							],
							[
								16005,
								16009
							],
							[
								16099,
								16106
							],
							[
								16446,
								16470
							],
							[
								16715,
								16720
							],
							[
								18450,
								18494
							],
							[
								18941,
								18967
							],
							[
								19669,
								19692
							],
							[
								19812,
								19834
							],
							[
								20085,
								20089
							],
							[
								20577,
								20581
							],
							[
								21198,
								21227
							],
							[
								21252,
								21256
							],
							[
								21332,
								21355
							],
							[
								21399,
								21405
							],
							[
								21433,
								21437
							],
							[
								21453,
								21490
							],
							[
								21512,
								21528
							],
							[
								21548,
								21555
							],
							[
								21612,
								21640
							],
							[
								21694,
								21705
							],
							[
								21788,
								21796
							],
							[
								21892,
								21896
							],
							[
								22046,
								22050
							],
							[
								22148,
								22153
							],
							[
								22213,
								22224
							],
							[
								22296,
								22307
							],
							[
								22394,
								22399
							],
							[
								22449,
								22455
							],
							[
								22552,
								22560
							],
							[
								22735,
								22764
							],
							[
								22857,
								22910
							],
							[
								23063,
								23067
							],
							[
								23121,
								23125
							],
							[
								23401,
								23408
							],
							[
								23430,
								23436
							],
							[
								23465,
								23496
							],
							[
								23630,
								23654
							],
							[
								23780,
								23791
							],
							[
								23809,
								23825
							],
							[
								23984,
								23989
							],
							[
								24013,
								24017
							],
							[
								24065,
								24074
							],
							[
								24142,
								24147
							],
							[
								24285,
								24290
							],
							[
								24412,
								24423
							],
							[
								24512,
								24519
							],
							[
								25165,
								25181
							],
							[
								27235,
								27269
							],
							[
								27608,
								27622
							],
							[
								27717,
								27721
							],
							[
								27743,
								27757
							],
							[
								27788,
								27792
							],
							[
								29092,
								29108
							],
							[
								29158,
								29173
							],
							[
								29232,
								29251
							],
							[
								29274,
								29286
							],
							[
								29375,
								29379
							],
							[
								29478,
								29482
							],
							[
								29701,
								29707
							],
							[
								29797,
								29811
							],
							[
								29840,
								29858
							],
							[
								29995,
								30007
							],
							[
								30037,
								30102
							],
							[
								30131,
								30136
							],
							[
								30275,
								30313
							],
							[
								30338,
								30358
							],
							[
								30387,
								30436
							],
							[
								30483,
								30493
							],
							[
								30666,
								30676
							],
							[
								30749,
								30759
							],
							[
								30830,
								30840
							],
							[
								31367,
								31448
							],
							[
								31459,
								31482
							],
							[
								31700,
								31705
							],
							[
								31787,
								31796
							],
							[
								31826,
								31832
							],
							[
								31848,
								31877
							],
							[
								31913,
								31926
							],
							[
								32157,
								32163
							],
							[
								32172,
								32183
							],
							[
								32251,
								32273
							],
							[
								32490,
								32513
							],
							[
								32925,
								32954
							],
							[
								33276,
								33303
							],
							[
								33337,
								33350
							],
							[
								33377,
								33382
							],
							[
								33406,
								33411
							],
							[
								33456,
								33466
							],
							[
								33496,
								33506
							],
							[
								33592,
								33597
							],
							[
								33717,
								33722
							],
							[
								33736,
								33744
							],
							[
								33966,
								33970
							],
							[
								34023,
								34027
							],
							[
								34115,
								34128
							],
							[
								34229,
								34242
							],
							[
								34503,
								34536
							],
							[
								34590,
								34594
							],
							[
								34708,
								34734
							],
							[
								35077,
								35110
							],
							[
								35457,
								35502
							],
							[
								35543,
								35547
							],
							[
								35564,
								35593
							],
							[
								35629,
								35635
							],
							[
								36019,
								36089
							],
							[
								36689,
								36761
							],
							[
								36994,
								36999
							],
							[
								37721,
								37725
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3499,
								3528
							],
							[
								3572,
								3583
							],
							[
								3610,
								3618
							],
							[
								3626,
								3645
							],
							[
								3667,
								3672
							],
							[
								3775,
								3806
							],
							[
								3857,
								3900
							],
							[
								3945,
								3952
							],
							[
								4053,
								4138
							],
							[
								4290,
								4295
							],
							[
								4340,
								4358
							],
							[
								4397,
								4404
							],
							[
								4453,
								4460
							],
							[
								4499,
								4516
							],
							[
								4563,
								4570
							],
							[
								4607,
								4625
							],
							[
								4648,
								4657
							],
							[
								4680,
								4698
							],
							[
								4709,
								4770
							],
							[
								4890,
								4899
							],
							[
								4936,
								4947
							],
							[
								4958,
								4982
							],
							[
								5063,
								5071
							],
							[
								5254,
								5308
							],
							[
								5527,
								5557
							],
							[
								6209,
								6255
							],
							[
								6295,
								6299
							],
							[
								6326,
								6333
							],
							[
								6419,
								6458
							],
							[
								6543,
								6588
							],
							[
								6626,
								6630
							],
							[
								6654,
								6697
							],
							[
								6776,
								6821
							],
							[
								6866,
								6870
							],
							[
								6920,
								6924
							],
							[
								6931,
								6935
							],
							[
								6967,
								7000
							],
							[
								7032,
								7075
							],
							[
								7150,
								7154
							],
							[
								7193,
								7232
							],
							[
								7278,
								7321
							],
							[
								7366,
								7405
							],
							[
								7501,
								7534
							],
							[
								7566,
								7586
							],
							[
								7833,
								7855
							],
							[
								10204,
								10215
							],
							[
								11316,
								11360
							],
							[
								11479,
								11499
							],
							[
								11814,
								11824
							],
							[
								11852,
								11862
							],
							[
								11898,
								11911
							],
							[
								12161,
								12175
							],
							[
								13077,
								13086
							],
							[
								13352,
								13371
							],
							[
								14089,
								14102
							],
							[
								14120,
								14125
							],
							[
								14176,
								14189
							],
							[
								14240,
								14261
							],
							[
								14658,
								14674
							],
							[
								15035,
								15040
							],
							[
								15078,
								15093
							],
							[
								15240,
								15248
							],
							[
								15289,
								15297
							],
							[
								15468,
								15496
							],
							[
								15563,
								15597
							],
							[
								15631,
								15636
							],
							[
								15658,
								15688
							],
							[
								15930,
								15938
							],
							[
								16005,
								16009
							],
							[
								16099,
								16106
							],
							[
								16446,
								16470
							],
							[
								16715,
								16720
							],
							[
								18450,
								18494
							],
							[
								18941,
								18967
							],
							[
								19669,
								19692
							],
							[
								19812,
								19834
							],
							[
								20085,
								20089
							],
							[
								20577,
								20581
							],
							[
								21198,
								21227
							],
							[
								21252,
								21256
							],
							[
								21332,
								21355
							],
							[
								21399,
								21405
							],
							[
								21433,
								21437
							],
							[
								21453,
								21490
							],
							[
								21512,
								21528
							],
							[
								21548,
								21555
							],
							[
								21612,
								21640
							],
							[
								21694,
								21705
							],
							[
								21788,
								21796
							],
							[
								21892,
								21896
							],
							[
								22046,
								22050
							],
							[
								22148,
								22153
							],
							[
								22213,
								22224
							],
							[
								22296,
								22307
							],
							[
								22394,
								22399
							],
							[
								22449,
								22455
							],
							[
								22552,
								22560
							],
							[
								22735,
								22764
							],
							[
								22857,
								22910
							],
							[
								23063,
								23067
							],
							[
								23121,
								23125
							],
							[
								23401,
								23408
							],
							[
								23430,
								23436
							],
							[
								23465,
								23496
							],
							[
								23630,
								23654
							],
							[
								23780,
								23791
							],
							[
								23809,
								23825
							],
							[
								23984,
								23989
							],
							[
								24013,
								24017
							],
							[
								24065,
								24074
							],
							[
								24142,
								24147
							],
							[
								24285,
								24290
							],
							[
								24412,
								24423
							],
							[
								24512,
								24519
							],
							[
								25165,
								25181
							],
							[
								27235,
								27269
							],
							[
								27608,
								27622
							],
							[
								27717,
								27721
							],
							[
								27743,
								27757
							],
							[
								27788,
								27792
							],
							[
								29092,
								29108
							],
							[
								29158,
								29173
							],
							[
								29232,
								29251
							],
							[
								29274,
								29286
							],
							[
								29375,
								29379
							],
							[
								29478,
								29482
							],
							[
								29701,
								29707
							],
							[
								29797,
								29811
							],
							[
								29840,
								29858
							],
							[
								29995,
								30007
							],
							[
								30037,
								30102
							],
							[
								30131,
								30136
							],
							[
								30275,
								30313
							],
							[
								30338,
								30358
							],
							[
								30387,
								30436
							],
							[
								30483,
								30493
							],
							[
								30666,
								30676
							],
							[
								30749,
								30759
							],
							[
								30830,
								30840
							],
							[
								31367,
								31448
							],
							[
								31459,
								31482
							],
							[
								31700,
								31705
							],
							[
								31787,
								31796
							],
							[
								31826,
								31832
							],
							[
								31848,
								31877
							],
							[
								31913,
								31926
							],
							[
								32157,
								32163
							],
							[
								32172,
								32183
							],
							[
								32251,
								32273
							],
							[
								32490,
								32513
							],
							[
								32925,
								32954
							],
							[
								33276,
								33303
							],
							[
								33337,
								33350
							],
							[
								33377,
								33382
							],
							[
								33406,
								33411
							],
							[
								33456,
								33466
							],
							[
								33496,
								33506
							],
							[
								33592,
								33597
							],
							[
								33717,
								33722
							],
							[
								33736,
								33744
							],
							[
								33966,
								33970
							],
							[
								34023,
								34027
							],
							[
								34115,
								34128
							],
							[
								34229,
								34242
							],
							[
								34503,
								34536
							],
							[
								34590,
								34594
							],
							[
								34708,
								34734
							],
							[
								35077,
								35110
							],
							[
								35457,
								35502
							],
							[
								35543,
								35547
							],
							[
								35564,
								35593
							],
							[
								35629,
								35635
							],
							[
								36019,
								36089
							],
							[
								36689,
								36761
							],
							[
								36994,
								36999
							],
							[
								37721,
								37725
							]
						],
						"symlist":
						[
							"function GetGlobalFunctions()",
							"([k, v]) =>",
							"([k]) =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/eagle/element.js",
			"settings":
			{
				"buffer_size": 33799,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					18,
					1,
					"",
					null,
					"AQAAAJYIAAAAAAAApQgAAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYIAAAAAAAApQgAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"",
					null,
					"AQAAAA0OAAAAAAAAHA4AAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0OAAAAAAAAHA4AAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"",
					null,
					"AQAAAKkOAAAAAAAAuA4AAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkOAAAAAAAAuA4AAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"",
					null,
					"AQAAAJYIAAAAAAAApwgAAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYIAAAAAAAApQgAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAA8OAAAAAAAAIA4AAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8OAAAAAAAAHg4AAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"",
					null,
					"AQAAAK0OAAAAAAAAvg4AAAAAAAAPAAAAICAgIGNvbnNvbGUubG9n",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0OAAAAAAAAvA4AAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"",
					null,
					"AQAAABZNAAAAAAAAKU0AAAAAAAARAAAAICAgICAgY29uc29sZS5sb2c",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABZNAAAAAAAAJ00AAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"",
					null,
					"AQAAAExRAAAAAAAAYVEAAAAAAAATAAAAICAgICAgICBjb25zb2xlLmxvZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAExRAAAAAAAAX1EAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 30671,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALdoAAAAAAAAuGgAAAAAAAAAAAAAuGgAAAAAAAC5aAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAt2gAAAAAAAC3aAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuWgAAAAAAAC5aAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "debugger.html",
			"settings":
			{
				"buffer_size": 441,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 13493,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 11429,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					2,
					"left_delete",
					null,
					"AgAAAPAAAAAAAAAA8AAAAAAAAAAeAAAAaW1wb3J0IHByb2Nlc3MgZnJvbSAncHJvY2Vzcyc77wAAAAAAAADvAAAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AAAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "globalThi."
					},
					"CgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAPoAAAAAAAAA+gAAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "s.process"
					},
					"CQAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ??="
					},
					"BAAAAAMBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAYBAAAAAAAAAAAAAAYBAAAAAAAABwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcBAAAAAAAACAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAgBAAAAAAAACgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAEAAAAAAAAIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " env:"
					},
					"BQAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4BAAAAAAAADwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAA8BAAAAAAAAEQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEBAAAAAAAAEgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "M;"
					},
					"AgAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					2,
					"left_delete",
					null,
					"AgAAABQBAAAAAAAAFAEAAAAAAAABAAAAOxMBAAAAAAAAEwEAAAAAAAABAAAATQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABMBAAAAAAAAFAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "map.html",
			"settings":
			{
				"buffer_size": 1764,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ol-map.js",
			"settings":
			{
				"buffer_size": 8565,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/document.js",
			"settings":
			{
				"buffer_size": 12017,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					61,
					1,
					"paste",
					null,
					"AQAAAC4QAAAAAAAAVhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhAAAAAAAAAuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AgAAAFMQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABUEAAAAAAAABsAAAAnKTtzY2hlbWF0aWMuZ2V0KCdsaWJyYXJpZXM",
					"AQAAAAAAAAABAAAAUxAAAAAAAABuEAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAFMQAAAAAAAAUxAAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "/libraries"
					},
					"CgAAAFMQAAAAAAAAVBAAAAAAAAAAAAAAVBAAAAAAAABVEAAAAAAAAAAAAABVEAAAAAAAAFYQAAAAAAAAAAAAAFYQAAAAAAAAVxAAAAAAAAAAAAAAVxAAAAAAAABYEAAAAAAAAAAAAABYEAAAAAAAAFkQAAAAAAAAAAAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABbEAAAAAAAAAAAAABbEAAAAAAAAFwQAAAAAAAAAAAAAFwQAAAAAAAAXRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxAAAAAAAABTEAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"cut",
					null,
					"AQAAAC4QAAAAAAAALhAAAAAAAAAxAAAAdGhpcy5sb29rdXAoJy9lYWdsZS9kcmF3aW5nL3NjaGVtYXRpYy9saWJyYXJpZXMnKQ",
					"AQAAAAAAAAABAAAALhAAAAAAAABfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"paste",
					null,
					"AgAAAK4RAAAAAAAA3xEAAAAAAAAAAAAA3xEAAAAAAADfEQAAAAAAAAkAAABsaWJyYXJpZXM",
					"AQAAAAAAAAABAAAArhEAAAAAAAC3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABgQAAAAAAAAGRAAAAAAAAAAAAAAGRAAAAAAAAAZEAAAAAAAABgAAAAgICAgICBsZXQgbGlicmFyaWVzID0gOwo",
					"AQAAAAAAAAABAAAAGBAAAAAAAAAwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AgAAABARAAAAAAAAQREAAAAAAAAAAAAAQREAAAAAAABBEQAAAAAAAAUAAABwYXJ0cw",
					"AQAAAAAAAAABAAAAEBEAAAAAAAAVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "ppar"
					},
					"BQAAADYRAAAAAAAANxEAAAAAAAAAAAAANxEAAAAAAAA3EQAAAAAAAAkAAABsaWJyYXJpZXM3EQAAAAAAADgRAAAAAAAAAAAAADgRAAAAAAAAOREAAAAAAAAAAAAAOREAAAAAAAA6EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhEAAAAAAAA/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					3,
					"left_delete",
					null,
					"AwAAADkRAAAAAAAAOREAAAAAAAABAAAAcjgRAAAAAAAAOBEAAAAAAAABAAAAYTcRAAAAAAAANxEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAOhEAAAAAAAA6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "arts"
					},
					"BAAAADcRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA5EQAAAAAAAAAAAAA5EQAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxEAAAAAAAA3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"paste",
					null,
					"AgAAALwQAAAAAAAA8hAAAAAAAAAAAAAA8hAAAAAAAADyEAAAAAAAAAYAAABzaGVldHM",
					"AQAAAAAAAAABAAAAvBAAAAAAAADCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAOkQAAAAAAAA6RAAAAAAAAAJAAAALmNoaWxkcmVu",
					"AQAAAAAAAAABAAAA8hAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"cut",
					null,
					"AQAAALwQAAAAAAAAvBAAAAAAAAAtAAAAdGhpcy5sb29rdXAoJy9lYWdsZS9kcmF3aW5nL3NjaGVtYXRpYy9wYXJ0cycp",
					"AQAAAAAAAAABAAAAvBAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BgAAALwQAAAAAAAAvRAAAAAAAAAAAAAAvRAAAAAAAAC+EAAAAAAAAAAAAAC+EAAAAAAAAL8QAAAAAAAAAAAAAL8QAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADBEAAAAAAAAAAAAADBEAAAAAAAAMIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"paste",
					null,
					"AgAAAGUQAAAAAAAAkhAAAAAAAAAAAAAAkhAAAAAAAACSEAAAAAAAAA4AAAB9ID0gc2NoZW1hdGljOw",
					"AQAAAAAAAAABAAAAZRAAAAAAAABzEAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFUQAAAAAAAAVhAAAAAAAAAAAAAAVhAAAAAAAABWEAAAAAAAAAgAAAB7IHBhcnRzLA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABVEAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAF4QAAAAAAAAXxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhAAAAAAAABeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAAF4QAAAAAAAAXhAAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAXxAAAAAAAABfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAF4QAAAAAAAAXxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhAAAAAAAABeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					5,
					"left_delete",
					null,
					"BQAAAIkQAAAAAAAAiRAAAAAAAAABAAAAc4gQAAAAAAAAiBAAAAAAAAABAAAAdIcQAAAAAAAAhxAAAAAAAAABAAAAcoYQAAAAAAAAhhAAAAAAAAABAAAAYYUQAAAAAAAAhRAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAihAAAAAAAACKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BgAAAIUQAAAAAAAAhhAAAAAAAAAAAAAAhhAAAAAAAACHEAAAAAAAAAAAAACHEAAAAAAAAIgQAAAAAAAAAAAAAIgQAAAAAAAAiRAAAAAAAAAAAAAAiRAAAAAAAACKEAAAAAAAAAAAAACKEAAAAAAAAIsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRAAAAAAAACFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"cut",
					null,
					"AQAAABgQAAAAAAAAGBAAAAAAAAAyAAAAICAgICAgIC8vY29uc29sZS5sb2coJ2xpYnJhcmllcycsIHsgbGlicmFyaWVzIH0pOwo",
					"AQAAAAAAAAABAAAAGBAAAAAAAABKEAAAAAAAAAAAAAAAAAAA"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANwPAAAAAAAA3Q8AAAAAAAAAAAAA3Q8AAAAAAADeDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3A8AAAAAAADcDwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"cut",
					null,
					"AQAAAPoQAAAAAAAA+hAAAAAAAAAtAAAAdGhpcy5sb29rdXAoJy9lYWdsZS9kcmF3aW5nL3NjaGVtYXRpYy9wYXJ0cycp",
					"AQAAAAAAAAABAAAA+hAAAAAAAAAnEQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "öpa"
					},
					"AwAAAPoQAAAAAAAA+xAAAAAAAAAAAAAA+xAAAAAAAAD8EAAAAAAAAAAAAAD8EAAAAAAAAP0QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					3,
					"left_delete",
					null,
					"AwAAAPwQAAAAAAAA/BAAAAAAAAABAAAAYfsQAAAAAAAA+xAAAAAAAAABAAAAcPoQAAAAAAAA+hAAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAA/RAAAAAAAAD9EAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "parts"
					},
					"BQAAAPoQAAAAAAAA+xAAAAAAAAAAAAAA+xAAAAAAAAD8EAAAAAAAAAAAAAD8EAAAAAAAAP0QAAAAAAAAAAAAAP0QAAAAAAAA/hAAAAAAAAAAAAAA/hAAAAAAAAD/EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRAAAAAAAABdEAAAAAAAAP///////+9/"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAAF4QAAAAAAAAXhAAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAXxAAAAAAAABfEAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAF4QAAAAAAAAXxAAAAAAAAAAAAAAXxAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAGYQAAAAAAAAAAAAAGYQAAAAAAAAZxAAAAAAAAAAAAAAZxAAAAAAAABoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhAAAAAAAABeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": " parts="
					},
					"BwAAAGgQAAAAAAAAaRAAAAAAAAAAAAAAaRAAAAAAAABqEAAAAAAAAAAAAABqEAAAAAAAAGsQAAAAAAAAAAAAAGsQAAAAAAAAbBAAAAAAAAAAAAAAbBAAAAAAAABtEAAAAAAAAAAAAABtEAAAAAAAAG4QAAAAAAAAAAAAAG4QAAAAAAAAbxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBAAAAAAAABoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"paste",
					null,
					"AQAAAG8QAAAAAAAAnBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxAAAAAAAABvEAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJwQAAAAAAAAnRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBAAAAAAAACcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ0QAAAAAAAAnhAAAAAAAAAAAAAAnhAAAAAAAACkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRAAAAAAAACdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"cut",
					null,
					"AQAAAMgRAAAAAAAAyBEAAAAAAAAxAAAAdGhpcy5sb29rdXAoJy9lYWdsZS9kcmF3aW5nL3NjaGVtYXRpYy9saWJyYXJpZXMnKQ",
					"AQAAAAAAAAABAAAAyBEAAAAAAAD5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "libraries"
					},
					"CgAAAMgRAAAAAAAAyREAAAAAAAAAAAAAnhAAAAAAAACeEAAAAAAAAAYAAAAgICAgICDDEQAAAAAAAMQRAAAAAAAAAAAAAMQRAAAAAAAAxREAAAAAAAAAAAAAxREAAAAAAADGEQAAAAAAAAAAAADGEQAAAAAAAMcRAAAAAAAAAAAAAMcRAAAAAAAAyBEAAAAAAAAAAAAAyBEAAAAAAADJEQAAAAAAAAAAAADJEQAAAAAAAMoRAAAAAAAAAAAAAMoRAAAAAAAAyxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBEAAAAAAADIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "klet"
					},
					"BAAAAJ4QAAAAAAAAnxAAAAAAAAAAAAAAnxAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKEQAAAAAAAAAAAAAKEQAAAAAAAAohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhAAAAAAAACeEAAAAAAAAAAAAAAAYH5A"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKIQAAAAAAAAoxAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohAAAAAAAACiEAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					5,
					"left_delete",
					null,
					"BQAAAKIQAAAAAAAAohAAAAAAAAABAAAAIKEQAAAAAAAAoRAAAAAAAAABAAAAdKAQAAAAAAAAoBAAAAAAAAABAAAAZZ8QAAAAAAAAnxAAAAAAAAABAAAAbJ4QAAAAAAAAnhAAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAoxAAAAAAAACjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJ4QAAAAAAAAnxAAAAAAAAAAAAAAnxAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhAAAAAAAACeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " libraries="
					},
					"CwAAAKEQAAAAAAAAohAAAAAAAAAAAAAAohAAAAAAAACjEAAAAAAAAAAAAACjEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAApRAAAAAAAAAAAAAApRAAAAAAAACmEAAAAAAAAAAAAACmEAAAAAAAAKcQAAAAAAAAAAAAAKcQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACpEAAAAAAAAAAAAACpEAAAAAAAAKoQAAAAAAAAAAAAAKoQAAAAAAAAqxAAAAAAAAAAAAAAqxAAAAAAAACsEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRAAAAAAAAChEAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"paste",
					null,
					"AQAAAKwQAAAAAAAA3RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArBAAAAAAAACsEAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN0QAAAAAAAA3hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAN4QAAAAAAAA3xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hAAAAAAAADeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"",
					null,
					"AgAAALkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADaEAAAAAAAACIAAAAvZWFnbGUvZHJhd2luZy9zY2hlbWF0aWMvbGlicmFyaWVz",
					"AQAAAAAAAAABAAAAuRAAAAAAAADbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "define"
					},
					"BwAAAOUQAAAAAAAA5hAAAAAAAAAAAAAA5hAAAAAAAADmEAAAAAAAAA4AAABsYXp5UHJvcGVydGllc+YQAAAAAAAA5xAAAAAAAAAAAAAA5xAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOkQAAAAAAAAAAAAAOkQAAAAAAAA6hAAAAAAAAAAAAAA6hAAAAAAAADrEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RAAAAAAAADzEAAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": " properts"
					},
					"CQAAAPEQAAAAAAAA8hAAAAAAAAAAAAAA8hAAAAAAAADzEAAAAAAAAAAAAADzEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA9RAAAAAAAAAAAAAA9RAAAAAAAAD2EAAAAAAAAAAAAAD2EAAAAAAAAPcQAAAAAAAAAAAAAPcQAAAAAAAA+BAAAAAAAAAAAAAA+BAAAAAAAAD5EAAAAAAAAAAAAAD5EAAAAAAAAPoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RAAAAAAAADxEAAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"left_delete",
					null,
					"AQAAAPkQAAAAAAAA+RAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA+hAAAAAAAAD6EAAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "ies"
					},
					"AwAAAPkQAAAAAAAA+hAAAAAAAAAAAAAA+hAAAAAAAAD7EAAAAAAAAAAAAAD7EAAAAAAAAPwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RAAAAAAAAD5EAAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPwQAAAAAAAA/hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BAAAAAAAAD8EAAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					3,
					"right_delete",
					null,
					"AwAAAP0QAAAAAAAA/RAAAAAAAAABAAAAKf0QAAAAAAAA/RAAAAAAAAABAAAAIP0QAAAAAAAA/RAAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA/RAAAAAAAAD9EAAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": " ö"
					},
					"AgAAAP0QAAAAAAAA/hAAAAAAAAAAAAAA/hAAAAAAAAD/EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RAAAAAAAAD9EAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					2,
					"left_delete",
					null,
					"AgAAAP4QAAAAAAAA/hAAAAAAAAACAAAAw7b9EAAAAAAAAP0QAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAA/xAAAAAAAAD/EAAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP0QAAAAAAAA/xAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RAAAAAAAAD9EAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					2,
					"right_delete",
					null,
					"AgAAAP4QAAAAAAAA/hAAAAAAAAABAAAAff4QAAAAAAAA/hAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/hAAAAAAAAD+EAAAAAAAAAAAAAAAcHFA"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP4QAAAAAAAA/xAAAAAAAAAAAAAA/xAAAAAAAAAFEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hAAAAAAAAD+EAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC4SAAAAAAAALxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhIAAAAAAAAuEgAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC8SAAAAAAAAMBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxIAAAAAAAAvEgAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADASAAAAAAAAMhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBIAAAAAAAAwEgAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": " memoize:"
					},
					"CQAAADESAAAAAAAAMhIAAAAAAAAAAAAAMhIAAAAAAAAzEgAAAAAAAAAAAAAzEgAAAAAAADQSAAAAAAAAAAAAADQSAAAAAAAANRIAAAAAAAAAAAAANRIAAAAAAAA2EgAAAAAAAAAAAAA2EgAAAAAAADcSAAAAAAAAAAAAADcSAAAAAAAAOBIAAAAAAAAAAAAAOBIAAAAAAAA5EgAAAAAAAAAAAAA5EgAAAAAAADoSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRIAAAAAAAAxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAADoSAAAAAAAAOxIAAAAAAAAAAAAAOxIAAAAAAAA8EgAAAAAAAAAAAAA8EgAAAAAAAD0SAAAAAAAAAAAAAD0SAAAAAAAAPhIAAAAAAAAAAAAAPhIAAAAAAAA/EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhIAAAAAAAA6EgAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8SAAAAAAAAQBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxIAAAAAAAA/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAEISAAAAAAAAQxIAAAAAAAAAAAAAQxIAAAAAAABEEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhIAAAAAAABCEgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"right_delete",
					null,
					"AQAAAEQSAAAAAAAARBIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAARBIAAAAAAABEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "properties,"
					},
					"CwAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGEAAAAAAAAAAAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/nodeMap.js",
			"settings":
			{
				"buffer_size": 3505,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					58,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANEIAAAAAAAA0wgAAAAAAAAAAAAA3wcAAAAAAADhBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wcAAAAAAADRCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/project.js",
			"settings":
			{
				"buffer_size": 7859,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					65,
					1,
					"insert",
					{
						"characters": "propeti"
					},
					"BwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					2,
					"left_delete",
					null,
					"AgAAABYAAAAAAAAAFgAAAAAAAAABAAAAaRUAAAAAAAAAFQAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "rties,"
					},
					"BgAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "df"
					},
					"AwAAACEGAAAAAAAAIgYAAAAAAAAAAAAAIgYAAAAAAAAiBgAAAAAAAAwAAABsYXp5UHJvcGVydHkiBgAAAAAAACMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAACIGAAAAAAAAIgYAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAACIGAAAAAAAAIwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgYAAAAAAAAiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAACIGAAAAAAAAIgYAAAAAAAABAAAAZiEGAAAAAAAAIQYAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "frg"
					},
					"AwAAACEGAAAAAAAAIgYAAAAAAAAAAAAAIgYAAAAAAAAjBgAAAAAAAAAAAAAjBgAAAAAAACQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					3,
					"left_delete",
					null,
					"AwAAACMGAAAAAAAAIwYAAAAAAAABAAAAZyIGAAAAAAAAIgYAAAAAAAABAAAAciEGAAAAAAAAIQYAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAJAYAAAAAAAAkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "define"
					},
					"BgAAACEGAAAAAAAAIgYAAAAAAAAAAAAAIgYAAAAAAAAjBgAAAAAAAAAAAAAjBgAAAAAAACQGAAAAAAAAAAAAACQGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAmBgAAAAAAAAAAAAAmBgAAAAAAACcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " properties"
					},
					"CwAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABABgAAAAAAAAAAAABABgAAAAAAAEEGAAAAAAAAAAAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQgYAAAAAAABDBgAAAAAAAAAAAABDBgAAAAAAAEQGAAAAAAAAAAAAAEQGAAAAAAAARQYAAAAAAAAAAAAARQYAAAAAAABGBgAAAAAAAAAAAABGBgAAAAAAAEcGAAAAAAAAAAAAAEcGAAAAAAAASAYAAAAAAAAAAAAASAYAAAAAAABJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAP///////+9/"
				],
				[
					85,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkGAAAAAAAASwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQYAAAAAAABJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEoGAAAAAAAASwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgYAAAAAAABKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAEoGAAAAAAAASgYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEoGAAAAAAAATAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgYAAAAAAABKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsGAAAAAAAATAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"right_delete",
					null,
					"AgAAAEwGAAAAAAAATAYAAAAAAAABAAAAfUwGAAAAAAAATAYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAATAYAAAAAAABMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwGAAAAAAAATQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAYAAAAAAABMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAE0GAAAAAAAATwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					6,
					"right_delete",
					null,
					"BgAAAE4GAAAAAAAATgYAAAAAAAABAAAAXU4GAAAAAAAATgYAAAAAAAABAAAACk4GAAAAAAAATgYAAAAAAAABAAAAIE4GAAAAAAAATgYAAAAAAAABAAAAIE4GAAAAAAAATgYAAAAAAAABAAAAIE4GAAAAAAAATgYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATgYAAAAAAABOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAGMGAAAAAAAAZAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAGQGAAAAAAAAZQYAAAAAAAAAAAAAZQYAAAAAAABmBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAYAAAAAAABkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAGYGAAAAAAAAZwYAAAAAAAAAAAAAZwYAAAAAAABoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgYAAAAAAABmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"right_delete",
					null,
					"AQAAAGgGAAAAAAAAaAYAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAaAYAAAAAAABoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"cut",
					null,
					"AQAAAGkGAAAAAAAAaQYAAAAAAAAOAAAAICAgICAgKCkgPT4gewo",
					"AQAAAAAAAAABAAAAaQYAAAAAAAB3BgAAAAAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAIgHAAAAAAAAiQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAcAAAAAAACIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACPBwAAAAAAAAAAAACJBwAAAAAAAIkHAAAAAAAABgAAACAgICAgIIkHAAAAAAAAjQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAcAAAAAAACIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "));"
					},
					"AwAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAACQBwAAAAAAAJEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgcAAAAAAACOBwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"right_delete",
					null,
					"AQAAAJEHAAAAAAAAkQcAAAAAAAA3AAAALAogICAgICB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9CiAgICApOw",
					"AQAAAAAAAAABAAAAkQcAAAAAAADIBwAAAAAAAAAAAAAAAFJA"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8GAAAAAAAAQAYAAAAAAAAAAAAAQAYAAAAAAABGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwYAAAAAAAA/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "weak"
					},
					"BAAAACEGAAAAAAAAIgYAAAAAAAAAAAAAIgYAAAAAAAAjBgAAAAAAAAAAAAAjBgAAAAAAACQGAAAAAAAAAAAAACQGAAAAAAAAJQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"right_delete",
					null,
					"AQAAACUGAAAAAAAAJQYAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAACUGAAAAAAAAJgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"paste",
					null,
					"AgAAACEGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAArBgAAAAAAAAoAAAB3ZWFrRGVmaW5l",
					"AQAAAAAAAAABAAAAIQYAAAAAAAArBgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"paste",
					null,
					"AQAAABAAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"left_delete",
					null,
					"AQAAABsAAAAAAAAAGwAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAHoGAAAAAAAAewYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegYAAAAAAAB6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsGAAAAAAAAfAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewYAAAAAAAB7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAAH8GAAAAAAAAgAYAAAAAAAAAAAAAgAYAAAAAAACBBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIEGAAAAAAAAggYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQYAAAAAAACBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKkHAAAAAAAAqgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQcAAAAAAACpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoHAAAAAAAAqwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgcAAAAAAACqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKsHAAAAAAAArQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwcAAAAAAACrBwAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": " memoize:"
					},
					"CQAAAKwHAAAAAAAArQcAAAAAAAAAAAAArQcAAAAAAACuBwAAAAAAAAAAAACuBwAAAAAAAK8HAAAAAAAAAAAAAK8HAAAAAAAAsAcAAAAAAAAAAAAAsAcAAAAAAACxBwAAAAAAAAAAAACxBwAAAAAAALIHAAAAAAAAAAAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAC0BwAAAAAAALUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAcAAAAAAACsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " true"
					},
					"BQAAALUHAAAAAAAAtgcAAAAAAAAAAAAAtgcAAAAAAAC3BwAAAAAAAAAAAAC3BwAAAAAAALgHAAAAAAAAAAAAALgHAAAAAAAAuQcAAAAAAAAAAAAAuQcAAAAAAAC6BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQcAAAAAAAC1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoHAAAAAAAAuwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "assemblyscript/util/node.js",
			"settings":
			{
				"buffer_size": 724,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/node.js",
			"settings":
			{
				"buffer_size": 16547,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 38104,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					24,
					1,
					"cut",
					null,
					"AQAAACc6AAAAAAAAJzoAAAAAAAAPAAAALCBnZXR0ZXJzOiB0cnVl",
					"AQAAAAAAAAABAAAAJzoAAAAAAAA2OgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"paste",
					null,
					"AQAAACc6AAAAAAAANjoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJzoAAAAAAAAnOgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACg6AAAAAAAAKjoAAAAAAAAAAAAAFzoAAAAAAAAZOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFzoAAAAAAAAoOgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "...con"
					},
					"BgAAAAE6AAAAAAAAAjoAAAAAAAAAAAAAAjoAAAAAAAADOgAAAAAAAAAAAAADOgAAAAAAAAQ6AAAAAAAAAAAAAAQ6AAAAAAAABToAAAAAAAAAAAAABToAAAAAAAAGOgAAAAAAAAAAAAAGOgAAAAAAAAc6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAToAAAAAAAABOgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					2,
					"left_delete",
					null,
					"AgAAAAY6AAAAAAAABjoAAAAAAAABAAAAbgU6AAAAAAAABToAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAABzoAAAAAAAAHOgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "onsole."
					},
					"BwAAAAU6AAAAAAAABjoAAAAAAAAAAAAABjoAAAAAAAAHOgAAAAAAAAAAAAAHOgAAAAAAAAg6AAAAAAAAAAAAAAg6AAAAAAAACToAAAAAAAAAAAAACToAAAAAAAAKOgAAAAAAAAAAAAAKOgAAAAAAAAs6AAAAAAAAAAAAAAs6AAAAAAAADDoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABToAAAAAAAAFOgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAw6AAAAAAAADToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADDoAAAAAAAAMOgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "options,"
					},
					"CAAAAAw6AAAAAAAADToAAAAAAAAAAAAADToAAAAAAAAOOgAAAAAAAAAAAAAOOgAAAAAAAA86AAAAAAAAAAAAAA86AAAAAAAAEDoAAAAAAAAAAAAAEDoAAAAAAAAROgAAAAAAAAAAAAAROgAAAAAAABI6AAAAAAAAAAAAABI6AAAAAAAAEzoAAAAAAAAAAAAAEzoAAAAAAAAUOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADDoAAAAAAAAMOgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQ6AAAAAAAAFToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFDoAAAAAAAAUOgAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"cut",
					null,
					"AQAAAAA6AAAAAAAAADoAAAAAAAATAAAAIC4uLmNvbnNvbGUub3B0aW9ucw",
					"AQAAAAAAAAABAAAAADoAAAAAAAATOgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					2,
					"right_delete",
					null,
					"AgAAAAA6AAAAAAAAADoAAAAAAAABAAAALAA6AAAAAAAAADoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAADoAAAAAAAAAOgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAADo6AAAAAAAAOzoAAAAAAAAAAAAAOzoAAAAAAAA8OgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjoAAAAAAAA6OgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADw6AAAAAAAAPToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDoAAAAAAAA8OgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					2,
					"left_delete",
					null,
					"AgAAADw6AAAAAAAAPDoAAAAAAAABAAAAIDs6AAAAAAAAOzoAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAPToAAAAAAAA9OgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADs6AAAAAAAAPDoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOzoAAAAAAAA7OgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"paste",
					null,
					"AQAAADw6AAAAAAAATzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDoAAAAAAAA8OgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "g1"
					},
					"AgAAAKoYAAAAAAAAqxgAAAAAAAAAAAAAqxgAAAAAAACsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhgAAAAAAACqGAAAAAAAAAAAAAAAAAAA"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAAKsYAAAAAAAAqxgAAAAAAAABAAAAMaoYAAAAAAAAqhgAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAArBgAAAAAAACsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": ".raw"
					},
					"BAAAAIgYAAAAAAAAiRgAAAAAAAAAAAAAiRgAAAAAAACKGAAAAAAAAAAAAACKGAAAAAAAAIsYAAAAAAAAAAAAAIsYAAAAAAAAjBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBgAAAAAAACIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					5,
					"right_delete",
					null,
					"BQAAAJ4YAAAAAAAAnhgAAAAAAAABAAAAcp4YAAAAAAAAnhgAAAAAAAABAAAAYZ4YAAAAAAAAnhgAAAAAAAABAAAAd54YAAAAAAAAnhgAAAAAAAABAAAALp4YAAAAAAAAnhgAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAnhgAAAAAAACeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAJ4YAAAAAAAAnxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhgAAAAAAACeGAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "[..."
					},
					"BAAAAMgZAAAAAAAAyRkAAAAAAAAAAAAAyRkAAAAAAADKGQAAAAAAAAAAAADKGQAAAAAAAMsZAAAAAAAAAAAAAMsZAAAAAAAAzBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBkAAAAAAADIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": ".reaw"
					},
					"BQAAANgZAAAAAAAA2RkAAAAAAAAAAAAA2RkAAAAAAADaGQAAAAAAAAAAAADaGQAAAAAAANsZAAAAAAAAAAAAANsZAAAAAAAA3BkAAAAAAAAAAAAA3BkAAAAAAADdGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BkAAAAAAADYGQAAAAAAAP///////+9/"
				],
				[
					160,
					5,
					"left_delete",
					null,
					"BQAAANwZAAAAAAAA3BkAAAAAAAABAAAAd9sZAAAAAAAA2xkAAAAAAAABAAAAYdoZAAAAAAAA2hkAAAAAAAABAAAAZdkZAAAAAAAA2RkAAAAAAAABAAAActgZAAAAAAAA2BkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA3RkAAAAAAADdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": ".raw."
					},
					"BQAAANgZAAAAAAAA2RkAAAAAAAAAAAAA2RkAAAAAAADaGQAAAAAAAAAAAADaGQAAAAAAANsZAAAAAAAAAAAAANsZAAAAAAAA3BkAAAAAAAAAAAAA3BkAAAAAAADdGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BkAAAAAAADYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"left_delete",
					null,
					"AQAAANwZAAAAAAAA3BkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA3RkAAAAAAADdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					4,
					"right_delete",
					null,
					"BAAAAMgZAAAAAAAAyBkAAAAAAAABAAAAW8gZAAAAAAAAyBkAAAAAAAABAAAALsgZAAAAAAAAyBkAAAAAAAABAAAALsgZAAAAAAAAyBkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAyBkAAAAAAADIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					3,
					"right_delete",
					null,
					"AwAAAOoZAAAAAAAA6hkAAAAAAAABAAAAYeoZAAAAAAAA6hkAAAAAAAABAAAAd+oZAAAAAAAA6hkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA6hkAAAAAAADqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"left_delete",
					null,
					"AQAAAOkZAAAAAAAA6RkAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA6hkAAAAAAADqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					3,
					"right_delete",
					null,
					"AwAAALUaAAAAAAAAtRoAAAAAAAABAAAAZbUaAAAAAAAAtRoAAAAAAAABAAAAY7UaAAAAAAAAtRoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAtRoAAAAAAAC1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					4,
					"right_delete",
					null,
					"BAAAANoaAAAAAAAA2hoAAAAAAAABAAAAatoaAAAAAAAA2hoAAAAAAAABAAAAZdoaAAAAAAAA2hoAAAAAAAABAAAAY9oaAAAAAAAA2hoAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA2hoAAAAAAADaGgAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAANoaAAAAAAAA2xoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hoAAAAAAADaGgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": ".raw"
					},
					"BAAAAMQaAAAAAAAAxRoAAAAAAAAAAAAAxRoAAAAAAADGGgAAAAAAAAAAAADGGgAAAAAAAMcaAAAAAAAAAAAAAMcaAAAAAAAAyBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBoAAAAAAADEGgAAAAAAAP///////+9/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": ".raw"
					},
					"BAAAAPcaAAAAAAAA+BoAAAAAAAAAAAAA+BoAAAAAAAD5GgAAAAAAAAAAAAD5GgAAAAAAAPoaAAAAAAAAAAAAAPoaAAAAAAAA+xoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xoAAAAAAAD3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					4,
					"right_delete",
					null,
					"BAAAABkbAAAAAAAAGRsAAAAAAAABAAAAchkbAAAAAAAAGRsAAAAAAAABAAAAYRkbAAAAAAAAGRsAAAAAAAABAAAAdxkbAAAAAAAAGRsAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAGRsAAAAAAAAZGwAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAPcaAAAAAAAA+BoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xoAAAAAAAD3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAABkbAAAAAAAAGhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRsAAAAAAAAZGwAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAACUbAAAAAAAAJhsAAAAAAAAAAAAAJhsAAAAAAAAnGwAAAAAAAAAAAAAnGwAAAAAAACgbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRsAAAAAAAAlGwAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgbAAAAAAAAKRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBsAAAAAAAAoGwAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACkbAAAAAAAAKxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRsAAAAAAAApGwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 9830 files for \"console.log.*doc.libraries\" (regex, case sensitive)\n\n~/Projects/plot-cv/lib/eagle/project.js:\n   63          this.list[index] = doc;\n   64  \n   65:         console.log('doc.libraries', console.config({ customInspect: false }), doc.libraries);\n   66          if(doc.libraries) this.addLibraries([...doc.libraries.list].map(l => l.name));\n   67  \n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 390,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Arithmetic"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/eagle",
		"/home/roman/Projects/plot-cv/src"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/adsb-server.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/readfile.js",
		"/home/roman/Projects/plot-cv/test-debug.js",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/test-css3.js",
		"/home/roman/Projects/plot-cv/grammar-css3.js",
		"/home/roman/Projects/plot-cv/test-cparse.js",
		"/home/roman/Projects/plot-cv/test-coverage.js",
		"/home/roman/Projects/plot-cv/test-color.js",
		"/home/roman/Projects/plot-cv/test-clipper.js",
		"/home/roman/Projects/plot-cv/test-cli.js",
		"/home/roman/Projects/plot-cv/lib/meriyah.js",
		"/home/roman/Projects/plot-cv/lib/async/helpers.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test-spawn.js",
		"/home/roman/Projects/plot-cv/test-readfile.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/usr/include/mariadb/mysql.h",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/newlib/libc/include/sys/signal.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvUtils.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/libregexp.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/compile_commands.js",
		"/home/roman/Projects/plot-cv/count-neighbours.js",
		"/home/roman/Projects/plot-cv/test-sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/winsup/cygwin/include/cygwin/signal.h",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/winsup/cygwin/local_includes/sigproc.h",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/winsup/cygserver/cygserver.cc",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/winsup/cygwin/exceptions.cc",
		"/home/roman/Projects/plot-cv/msys2-runtime/msys2/winsup/cygwin/signal.cc",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/test-matshared.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/json-iterator.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cli-helpers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/qjsval.c",
		"/home/roman/Dokumente/bookmarks_26.05.23.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/iterator/event.js",
		"/home/roman/Projects/plot-cv/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/test-asynciterator.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/lib/parse-diff.js",
		"/home/roman/Projects/plot-cv/dir-helpers.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/compileCommand.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/assemblyscript/util/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs-misc.c.ast.bjson",
		"/home/roman/Projects/plot-cv/quickjs/qjscalc.js",
		"/home/roman/Projects/plot-cv/quickjs/core",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/core.qjsm.33358.VivoBook-X512FA.1684377984",
		"/home/roman/Projects/plot-cv/core.qjsm.33302.VivoBook-X512FA.1684377956",
		"/home/roman/Projects/plot-cv/core.qjsm.33122.VivoBook-X512FA.1684377931",
		"/home/roman/Projects/plot-cv/core.qjsm.115379.VivoBook-X512FA.1684385395",
		"/home/roman/Projects/plot-cv/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjsc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/.config/sublime-text/Packages/Outline/common.py",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_object.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/opencv/modules/core/include/opencv2/core/mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/trace_skeleton.hpp",
		"/opt/opencv-4.5.5-x86_64/include/opencv4/opencv2/imgproc.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_segment_detector.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/src/lsd_opencv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/line_segment_detector.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/getdents.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.jsx,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lazyOpen",
			"console.log.*doc.libraries",
			"'board'",
			"get root",
			"root",
			"get root",
			"\\bwatch\\b",
			"watch",
			"\\.js",
			"process\\.",
			"'onFd'",
			"lazyOpen",
			"lazyProperty",
			"^(\\s*)console.log",
			"onFd",
			"daemon\\(",
			"daemon",
			"URLWorker",
			"Worker",
			"URLWorker",
			"os-helper",
			"glob\\(",
			"Matcher",
			"fnmatch",
			"{\n",
			"\\blink\\b",
			"Execute\\(",
			"MagickResize",
			"Execute\\(",
			"os-helpers",
			"spawn",
			"spawn\\(",
			"HeifConvert",
			"\\bExecute\\b",
			"\\bspawn\\b",
			"\\bexec\\b",
			"\\bsocket\\b",
			"proc",
			"PortableChildProcess",
			"await",
			"readFileSync",
			"filesystem\\.",
			"filesystem",
			"\\bMat\\b",
			"Mat",
			"new Mat",
			"Execute\\(",
			"os-helpers",
			"ExecTool",
			"WNOHANG",
			"Spawn",
			"Execute",
			"WNOHANG",
			"Parser",
			"Lexer",
			"enum mysql_status",
			"status",
			"enum mysql_status",
			"mysql_status",
			"(pending|busy|idle|ready)",
			"(pending|busy)",
			"_OPT_",
			"mysql_set_",
			"mysql.*set",
			"mysql.*set.*user",
			"user",
			"opaque",
			"consume",
			"\\bdecorate\\(",
			"SpawnCompiler\\(",
			"fdopen",
			"Spawn\\(",
			"SpawnCompiler\\(",
			"SpawnCompiler",
			"SpawnCompiler\\(",
			"SpawnCompiler",
			"Spawn",
			"SIGHANDLE",
			"IGTERM",
			"sigaction",
			"\\bexec\\b",
			"path\\.",
			"child_process\\.spawn",
			"child_process",
			"\\bspawn\\b",
			"spawn",
			"WNOHANG",
			"'os'",
			"setReadHandler",
			"setReadHandler$",
			"setReadHandler",
			"poll\\(",
			"^js_os_pol",
			"js_os_pol",
			"\\balloca\\b",
			"\\balloca\\.h\\b",
			"\\balloca\\b",
			"alloca\\(",
			"alloca",
			"USE_WORKER",
			"handle_posted_message",
			"js_os_poll",
			"propId",
			"Proxy",
			"}\\n(  |)([^ ])",
			"}\\n  ([^ ])",
			"^export",
			"std\\.",
			"__filename",
			"Window.up",
			"LineSegment",
			"opts",
			"xml_read",
			"pr0n",
			"<p>",
			"new REPL",
			"m.buffer",
			"\\bdepth\\b",
			"depth",
			"delta",
			"null'",
			"nl\\(",
			"' '",
			"source",
			"LoadAST",
			"FindFunc",
			"SharedArrayBuffer",
			"process\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//console.log",
			"\\1console.log",
			"",
			"spawn",
			"}\\n\\n\\1\\2",
			"}\\n\\n  \\1",
			"buf",
			"\\1",
			"debug(`\\1 ${\\2}`)",
			"fs.readFileSync",
			", ",
			"strOrRegex",
			"argumentsOfType",
			"valuePointer",
			"file",
			"arrayOrString",
			"",
			"\\1//console.",
			"obj[name]"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3055,
						"regions":
						{
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2350,
										2357
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										2319,
										2319
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/eagle-shell.js",
							"function_name_status_row": 13,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									3499,
									3528
								],
								[
									3572,
									3583
								],
								[
									3610,
									3618
								],
								[
									3626,
									3645
								],
								[
									3667,
									3672
								],
								[
									3775,
									3806
								],
								[
									3857,
									3900
								],
								[
									3945,
									3952
								],
								[
									4053,
									4138
								],
								[
									4290,
									4295
								],
								[
									4340,
									4358
								],
								[
									4397,
									4404
								],
								[
									4453,
									4460
								],
								[
									4499,
									4516
								],
								[
									4563,
									4570
								],
								[
									4607,
									4625
								],
								[
									4648,
									4657
								],
								[
									4680,
									4698
								],
								[
									4709,
									4770
								],
								[
									4890,
									4899
								],
								[
									4936,
									4947
								],
								[
									4958,
									4982
								],
								[
									5063,
									5071
								],
								[
									5254,
									5308
								],
								[
									5527,
									5557
								],
								[
									6209,
									6255
								],
								[
									6295,
									6299
								],
								[
									6326,
									6333
								],
								[
									6419,
									6458
								],
								[
									6543,
									6588
								],
								[
									6626,
									6630
								],
								[
									6654,
									6697
								],
								[
									6776,
									6821
								],
								[
									6866,
									6870
								],
								[
									6920,
									6924
								],
								[
									6931,
									6935
								],
								[
									6967,
									7000
								],
								[
									7032,
									7075
								],
								[
									7150,
									7154
								],
								[
									7193,
									7232
								],
								[
									7278,
									7321
								],
								[
									7366,
									7405
								],
								[
									7501,
									7534
								],
								[
									7566,
									7586
								],
								[
									7833,
									7855
								],
								[
									10204,
									10215
								],
								[
									11316,
									11360
								],
								[
									11479,
									11499
								],
								[
									11814,
									11824
								],
								[
									11852,
									11862
								],
								[
									11898,
									11911
								],
								[
									12161,
									12175
								],
								[
									13077,
									13086
								],
								[
									13352,
									13371
								],
								[
									14089,
									14102
								],
								[
									14120,
									14125
								],
								[
									14176,
									14189
								],
								[
									14240,
									14261
								],
								[
									14658,
									14674
								],
								[
									15035,
									15040
								],
								[
									15078,
									15093
								],
								[
									15240,
									15248
								],
								[
									15289,
									15297
								],
								[
									15468,
									15496
								],
								[
									15563,
									15597
								],
								[
									15631,
									15636
								],
								[
									15658,
									15688
								],
								[
									15930,
									15938
								],
								[
									16005,
									16009
								],
								[
									16099,
									16106
								],
								[
									16446,
									16470
								],
								[
									16715,
									16720
								],
								[
									18450,
									18494
								],
								[
									18941,
									18967
								],
								[
									19669,
									19692
								],
								[
									19812,
									19834
								],
								[
									20085,
									20089
								],
								[
									20577,
									20581
								],
								[
									21198,
									21227
								],
								[
									21252,
									21256
								],
								[
									21332,
									21355
								],
								[
									21399,
									21405
								],
								[
									21433,
									21437
								],
								[
									21453,
									21490
								],
								[
									21512,
									21528
								],
								[
									21548,
									21555
								],
								[
									21612,
									21640
								],
								[
									21694,
									21705
								],
								[
									21788,
									21796
								],
								[
									21892,
									21896
								],
								[
									22046,
									22050
								],
								[
									22148,
									22153
								],
								[
									22213,
									22224
								],
								[
									22296,
									22307
								],
								[
									22394,
									22399
								],
								[
									22449,
									22455
								],
								[
									22552,
									22560
								],
								[
									22735,
									22764
								],
								[
									22857,
									22910
								],
								[
									23063,
									23067
								],
								[
									23121,
									23125
								],
								[
									23401,
									23408
								],
								[
									23430,
									23436
								],
								[
									23465,
									23496
								],
								[
									23630,
									23654
								],
								[
									23780,
									23791
								],
								[
									23809,
									23825
								],
								[
									23984,
									23989
								],
								[
									24013,
									24017
								],
								[
									24065,
									24074
								],
								[
									24142,
									24147
								],
								[
									24285,
									24290
								],
								[
									24412,
									24423
								],
								[
									24512,
									24519
								],
								[
									25165,
									25181
								],
								[
									27235,
									27269
								],
								[
									27608,
									27622
								],
								[
									27717,
									27721
								],
								[
									27743,
									27757
								],
								[
									27788,
									27792
								],
								[
									29092,
									29108
								],
								[
									29158,
									29173
								],
								[
									29232,
									29251
								],
								[
									29274,
									29286
								],
								[
									29375,
									29379
								],
								[
									29478,
									29482
								],
								[
									29701,
									29707
								],
								[
									29797,
									29811
								],
								[
									29840,
									29858
								],
								[
									29995,
									30007
								],
								[
									30037,
									30102
								],
								[
									30131,
									30136
								],
								[
									30275,
									30313
								],
								[
									30338,
									30358
								],
								[
									30387,
									30436
								],
								[
									30483,
									30493
								],
								[
									30666,
									30676
								],
								[
									30749,
									30759
								],
								[
									30830,
									30840
								],
								[
									31367,
									31448
								],
								[
									31459,
									31482
								],
								[
									31700,
									31705
								],
								[
									31787,
									31796
								],
								[
									31826,
									31832
								],
								[
									31848,
									31877
								],
								[
									31913,
									31926
								],
								[
									32157,
									32163
								],
								[
									32172,
									32183
								],
								[
									32251,
									32273
								],
								[
									32490,
									32513
								],
								[
									32925,
									32954
								],
								[
									33276,
									33303
								],
								[
									33337,
									33350
								],
								[
									33377,
									33382
								],
								[
									33406,
									33411
								],
								[
									33456,
									33466
								],
								[
									33496,
									33506
								],
								[
									33592,
									33597
								],
								[
									33717,
									33722
								],
								[
									33736,
									33744
								],
								[
									33966,
									33970
								],
								[
									34023,
									34027
								],
								[
									34115,
									34128
								],
								[
									34229,
									34242
								],
								[
									34503,
									34536
								],
								[
									34590,
									34594
								],
								[
									34708,
									34734
								],
								[
									35077,
									35110
								],
								[
									35457,
									35502
								],
								[
									35543,
									35547
								],
								[
									35564,
									35593
								],
								[
									35629,
									35635
								],
								[
									36019,
									36089
								],
								[
									36689,
									36761
								],
								[
									36994,
									36999
								],
								[
									37721,
									37725
								]
							],
							"symlist":
							[
								"GetGlobalFunctions()",
								"([k, v]) =>",
								"([k]) =>",
								"  toXML(obj)",
								"a =>",
								"  renderToXML(component)",
								"GetFiletime(file, field = 'mtime')",
								"  file =>",
								"FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
								"  fn =>",
								"  minIndex = name =>",
								"  file =>",
								"  file =>",
								"  hasBoth = name =>",
								"  name =>",
								"([name, index]) =>",
								"(a, b) =>",
								"([name, index]) =>",
								"SortFiles(files, direction = 1, statField = 'mtime')",
								"(a, b) =>",
								"([file]) =>",
								"  pick(it, n = 1)",
								"  n = i =>",
								"  append(tag, attrs, children, parent, element)",
								"  render(doc, filename)",
								"CollectParts(doc = project.schematic)",
								"  e =>",
								"  attr =>",
								"({ name, deviceset, device, value }) =>",
								"CollectElements(doc = project.board)",
								"  e =>",
								"({ name, library, package: pkg, value }) =>",
								"CollectPartsElements(proj = project)",
								"  e =>",
								"  a =>",
								"  e =>",
								"([{ x, y, ...element }, part]) =>",
								"ListParts(doc = project.schematic)",
								"  p =>",
								"({ name, deviceset, device, value }) =>",
								"ShowParts(doc = project.schematic)",
								"({ name, deviceset, device, value }) =>",
								"EaglePrint(file, output)",
								"(dir, base, ext) =>",
								"  main(...args)",
								"  toNumber(n)",
								"  load(filename, project = globalThis.project)",
								"  newProject(filename)",
								"  sch: () =>",
								"  brd: () =>",
								"  nextProject()",
								"  projectNames()",
								"  quit(arg)",
								"  renderToString(arg)",
								"(...args) =>",
								"() =>",
								"  .exit = () =>",
								"  .debug = (...args) =>",
								"  .show = value =>",
								"() =>",
								"(item, i, a) =>",
								"  entry =>",
								"  entry =>",
								"Terminate(exitCode)",
								"  xml(strings, expressions)",
								"e =>",
								"UpdateMeasures(board)",
								"  lines =>",
								"  e =>",
								"  line =>",
								"AlignItem(item)",
								"  tr =>",
								"AlignAll(doc = globalThis.document)",
								"  fixValue(element)",
								"  fixValues(doc)",
								"  coordMap(doc)",
								"  p =>",
								"  t =>",
								"GetPolygons(d = doc)",
								"  e =>",
								"FindPolygons()",
								"  doc =>",
								"  e =>",
								"RemovePolygons(p = polygons)",
								"([doc, list]) =>",
								"  path =>",
								"GetNames(doc, pred)",
								"  pred = e =>",
								"  sheet =>",
								"  e =>",
								"  e =>",
								"e =>",
								"([v, p]) =>",
								"([v, p]) =>",
								"() =>",
								"  doc =>",
								"  sheet =>",
								"GetByName(doc, name)",
								"CorrelateSchematicAndBoard(schematic, board)",
								"  d =>",
								"  n =>",
								"  name =>",
								"  doc =>",
								"GetSheets(doc_or_proj)",
								"SaveLibraries()",
								"([n, e]) =>",
								"(acc, [n, e]) =>",
								"e =>",
								"  e =>",
								"(a, b) =>",
								"  id =>",
								"  id =>",
								"([n, e]) =>",
								"  name =>",
								"(acc, [n, e]) =>",
								"  testEagle(filename)",
								"([name, e]) =>",
								"  e =>",
								"([name, i]) =>",
								"  p =>",
								"(child, i, a) =>",
								"(child2, i2) =>",
								"([index, equal]) =>",
								"([index]) =>",
								"  i =>",
								"  i =>",
								"  doc =>",
								"([file, e]) =>",
								"([file, xpath]) =>",
								"([k, v]) =>",
								"ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
								"() =>",
								"AppendToFilename(p, str = '')",
								"(dir, base, ext) =>",
								"SetSVGBackground(xml, color = '#ffffff')",
								"(e, n) =>",
								"(e, n) =>",
								"(e, n) =>",
								"(e, n) =>",
								"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
								"(filename, ...args) =>",
								"n =>",
								"data =>",
								"n =>",
								"PutRowsColumns(rows)",
								"(acc, row) =>",
								"  row =>",
								"(col, i) =>",
								"GetLibrary(e)",
								"ElementName(e)",
								"GetRotation(element)",
								"Package2Circuit(p)",
								"({ x, y }) =>",
								"  pt =>",
								"  pt =>",
								"({ x }) =>",
								"({ y }) =>",
								"  pt =>",
								"  pt =>",
								"  coord =>",
								"  x =>",
								"  y =>",
								"({ x, y }) =>",
								"({ x, y }) =>",
								"Contactref2Circuit(cref)",
								"  e =>",
								"Signal2Circuit(s)",
								"Element2Circuit(element)",
								"GetUsedPackages(doc = project.board)",
								"  e =>",
								"GetPackagePitch(pkg)",
								"  pad =>",
								"Eagle2Circuit(doc = project.board, width = 100, height = 100)",
								"Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
								"n =>",
								"  e =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687183928.94,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/eagle/element.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33799,
						"regions":
						{
						},
						"selection":
						[
							[
								29897,
								29897
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 850,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687558378.76,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13294.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30671,
						"regions":
						{
						},
						"selection":
						[
							[
								26809,
								26809
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 870,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687182245.35,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14550.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "debugger.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 441,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687182249.14,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13493,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687182275.89,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11429,
						"regions":
						{
						},
						"selection":
						[
							[
								352,
								398
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 9,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687182727.71,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "map.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1764,
						"regions":
						{
						},
						"selection":
						[
							[
								599,
								602
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 11,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687182738.59,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ol-map.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8565,
						"regions":
						{
						},
						"selection":
						[
							[
								7827,
								7827
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 280,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687256546.89,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4010.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/eagle/document.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12017,
						"regions":
						{
						},
						"selection":
						[
							[
								88,
								88
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687559104.59,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/eagle/nodeMap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3505,
						"regions":
						{
						},
						"selection":
						[
							[
								2017,
								2259
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 84,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687559178.93,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1037.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/eagle/project.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7859,
						"regions":
						{
						},
						"selection":
						[
							[
								1980,
								1980
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 69,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687559659.77,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "assemblyscript/util/node.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 724,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687256561.05,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/eagle/node.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16547,
						"regions":
						{
						},
						"selection":
						[
							[
								1948,
								1956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687256605.03,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 695.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "eagle-shell.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38104,
						"regions":
						{
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										13764,
										13777
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										13698,
										13698
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										13740,
										13754
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										13698,
										13698
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										30427,
										30434
									],
									[
										31287,
										31291
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										30387,
										30387
									],
									[
										31272,
										31272
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								7493,
								7493
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 193,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1687566357.1,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2601.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 390,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										182,
										266
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								200,
								200
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 5,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1687559662.1,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.coffeecompile_output":
	{
		"height": 162.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"nodeMap",
				"lib/eagle/nodeMap.js"
			],
			[
				"docu",
				"lib/eagle/document.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"docume",
				"lib/eagle/document.js"
			],
			[
				"adsb-ser",
				"adsb-server.js"
			],
			[
				"ol-map",
				"ol-map.js"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger.html",
				"debugger.html"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"element",
				"lib/eagle/element.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"ref.js",
				"lib/eagle/ref.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"os-help",
				"os-helpers.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"test-debug.js",
				"test-debug.js"
			],
			[
				"test-debuggerpr",
				"test-debuggerprotocol.js"
			],
			[
				"test-css",
				"test-css3.js"
			],
			[
				"grammar-css",
				"grammar-css3.js"
			],
			[
				"test-cpa",
				"test-cparse.js"
			],
			[
				"test-cove",
				"test-coverage.js"
			],
			[
				"test-color",
				"test-color.js"
			],
			[
				"test-clipp",
				"test-clipper.js"
			],
			[
				"test-cli.js",
				"test-cli.js"
			],
			[
				"readfile.js",
				"readfile.js"
			],
			[
				"test-spa",
				"test-spawn.js"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"test-spawn",
				"test-spawn.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"lib/meri",
				"lib/meriyah.js"
			],
			[
				"async/help",
				"lib/async/helpers.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"clang-",
				"clang-ast.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"signal.cc",
				"msys2-runtime/msys2/winsup/cygwin/signal.cc"
			],
			[
				"modules/lib/util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"compile_c",
				"compile_commands.js"
			],
			[
				"count",
				"count-neighbours.js"
			],
			[
				"test-sock",
				"test-sockets.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"test-minn",
				"test-minnet.js"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"cvutil",
				"qjs-opencv/js/cvUtils.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-opencv.",
				"test-opencv.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"qjsval.c",
				"qjsval.c"
			],
			[
				"test-mat",
				"test-matshared.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"matsha",
				"test-matshared.js"
			],
			[
				"json-i",
				"json-iterator.js"
			],
			[
				"iterator/help",
				"lib/iterator/helpers.js"
			],
			[
				"repeater.ts",
				"lib/repeater/repeater.ts"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"test-uma",
				"test-umat.js"
			],
			[
				"param.",
				"param.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"cli-helper",
				"cli-helpers.js"
			],
			[
				"test-vide",
				"test-video.js"
			],
			[
				"test-repeat",
				"test-repeater.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"require.js",
				"quickjs/qjs-modules/lib/require.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"events.js",
				"events.js"
			],
			[
				"lib/events",
				"lib/events.js"
			],
			[
				"dir-help",
				"dir-helpers.js"
			],
			[
				"io-helpe",
				"io-helpers.js"
			],
			[
				"lib/util",
				"lib/util.js"
			],
			[
				"path.js",
				"lib/path.js"
			],
			[
				"lib/misc",
				"lib/misc.js"
			],
			[
				"lib/filesys",
				"lib/filesystem.js"
			],
			[
				"lib/path",
				"lib/path.js"
			],
			[
				"compileComm",
				"lib/compileCommand.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"debugger-cie",
				"debugger-client.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"preactC",
				"lib/dom/preactComponent.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"termin",
				"assemblyscript/util/terminal.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"lib/compi",
				"lib/compileCommand.js"
			],
			[
				"compile_comm",
				"compile_commands.js"
			],
			[
				"commands",
				"lib/compileCommand.js"
			],
			[
				"dir-he",
				"dir-helpers.js"
			],
			[
				"compileCom",
				"lib/compileCommand.js"
			],
			[
				"compile_",
				"compile_commands.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"compile_com",
				"compile_commands.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"debugger",
				"debugger.js"
			],
			[
				"find-",
				"quickjs-find-module.c"
			],
			[
				"qjsc.c",
				"qjsc.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-lib",
				"quickjs-libc.h"
			],
			[
				"quickjs-libc",
				"quickjs-libc.c"
			],
			[
				"quickjs-loc",
				"qjs-modules/quickjs-location.c"
			],
			[
				"quickjs-deep",
				"qjs-modules/quickjs-deep.c"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"js_img",
				"js_imgproc.cpp"
			],
			[
				"js_imgpr",
				"js_imgproc.cpp"
			],
			[
				"trace",
				"trace_skeleton.hpp"
			],
			[
				"js_imgp",
				"js_imgproc.cpp"
			],
			[
				"umat.hpp",
				"js_umat.hpp"
			],
			[
				"js_line_seg",
				"js_line_segment_detector.cpp"
			],
			[
				"js_cv",
				"js_cv.cpp"
			],
			[
				"util.hpp",
				"util.hpp"
			],
			[
				"mat.hpp",
				"opencv/modules/core/include/opencv2/core/mat.hpp"
			],
			[
				"line.hpp",
				"line.hpp"
			],
			[
				"js_Draw",
				"js_draw.cpp"
			],
			[
				"js_Dr",
				"js_draw.cpp"
			],
			[
				"",
				"js_line_segment_detector.cpp"
			],
			[
				"line_seg",
				"js_line_segment_detector.cpp"
			],
			[
				"geom",
				"geometry.hpp"
			],
			[
				"geomtry",
				"geometry.hpp"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1017.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
