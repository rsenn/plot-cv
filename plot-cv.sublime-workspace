{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					287,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11870,
								11914
							],
							[
								12033,
								12053
							],
							[
								12368,
								12378
							],
							[
								12406,
								12416
							],
							[
								12452,
								12465
							],
							[
								12715,
								12729
							],
							[
								13621,
								13630
							],
							[
								13871,
								13890
							],
							[
								14432,
								14445
							],
							[
								14463,
								14468
							],
							[
								14519,
								14532
							],
							[
								14583,
								14604
							],
							[
								15001,
								15017
							],
							[
								15405,
								15410
							],
							[
								15448,
								15463
							],
							[
								15610,
								15618
							],
							[
								15659,
								15667
							],
							[
								15944,
								15972
							],
							[
								16039,
								16073
							],
							[
								16107,
								16112
							],
							[
								16134,
								16164
							],
							[
								16406,
								16414
							],
							[
								16481,
								16485
							],
							[
								16575,
								16582
							],
							[
								16922,
								16946
							],
							[
								17191,
								17196
							],
							[
								18926,
								18970
							],
							[
								19417,
								19443
							],
							[
								20145,
								20168
							],
							[
								20288,
								20310
							],
							[
								20561,
								20565
							],
							[
								21053,
								21057
							],
							[
								21674,
								21703
							],
							[
								21728,
								21732
							],
							[
								21808,
								21831
							],
							[
								21875,
								21881
							],
							[
								21909,
								21913
							],
							[
								21929,
								21966
							],
							[
								21988,
								22004
							],
							[
								22024,
								22031
							],
							[
								22088,
								22116
							],
							[
								22170,
								22181
							],
							[
								22264,
								22272
							],
							[
								22368,
								22372
							],
							[
								22522,
								22526
							],
							[
								22624,
								22629
							],
							[
								22689,
								22700
							],
							[
								22772,
								22783
							],
							[
								22870,
								22875
							],
							[
								22925,
								22931
							],
							[
								23028,
								23036
							],
							[
								23211,
								23240
							],
							[
								23333,
								23386
							],
							[
								23539,
								23543
							],
							[
								23597,
								23601
							],
							[
								23877,
								23884
							],
							[
								23906,
								23912
							],
							[
								23941,
								23972
							],
							[
								24106,
								24130
							],
							[
								24256,
								24267
							],
							[
								24285,
								24301
							],
							[
								24460,
								24465
							],
							[
								24489,
								24493
							],
							[
								24541,
								24550
							],
							[
								24618,
								24623
							],
							[
								24761,
								24766
							],
							[
								24888,
								24899
							],
							[
								24988,
								24995
							],
							[
								25641,
								25657
							],
							[
								27711,
								27745
							],
							[
								28084,
								28098
							],
							[
								28193,
								28197
							],
							[
								28219,
								28233
							],
							[
								28264,
								28268
							],
							[
								29568,
								29584
							],
							[
								29634,
								29649
							],
							[
								29708,
								29727
							],
							[
								29750,
								29762
							],
							[
								29851,
								29855
							],
							[
								29954,
								29958
							],
							[
								30177,
								30183
							],
							[
								30273,
								30287
							],
							[
								30316,
								30334
							],
							[
								30471,
								30483
							],
							[
								30513,
								30578
							],
							[
								30607,
								30612
							],
							[
								30751,
								30789
							],
							[
								30814,
								30834
							],
							[
								30863,
								30912
							],
							[
								30959,
								30969
							],
							[
								31142,
								31152
							],
							[
								31225,
								31235
							],
							[
								31306,
								31316
							],
							[
								31843,
								31924
							],
							[
								31935,
								31958
							],
							[
								32176,
								32181
							],
							[
								32264,
								32273
							],
							[
								32303,
								32309
							],
							[
								32325,
								32354
							],
							[
								32390,
								32403
							],
							[
								32634,
								32640
							],
							[
								32649,
								32660
							],
							[
								32728,
								32750
							],
							[
								32967,
								32990
							],
							[
								33402,
								33431
							],
							[
								33753,
								33780
							],
							[
								33814,
								33827
							],
							[
								33854,
								33859
							],
							[
								33883,
								33888
							],
							[
								33933,
								33943
							],
							[
								33973,
								33983
							],
							[
								34069,
								34074
							],
							[
								34194,
								34199
							],
							[
								34213,
								34221
							],
							[
								34443,
								34447
							],
							[
								34500,
								34504
							],
							[
								34592,
								34605
							],
							[
								34706,
								34719
							],
							[
								34980,
								35013
							],
							[
								35067,
								35071
							],
							[
								35185,
								35211
							],
							[
								35554,
								35587
							],
							[
								35934,
								35979
							],
							[
								36020,
								36024
							],
							[
								36041,
								36070
							],
							[
								36106,
								36112
							],
							[
								36496,
								36566
							],
							[
								37166,
								37238
							],
							[
								37471,
								37476
							],
							[
								38198,
								38202
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					288,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					289,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					290,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					291,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AwAAAAAAAAAAAAAABgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYMAAAoKSA9PgooKSA9PgogIHRvWE1MKG9iaikKYSA9PgogIHJlbmRlclRvWE1MKGNvbXBvbmVudCkKR2V0RmlsZXRpbWUoZmlsZSwgZmllbGQgPSAnbXRpbWUnKQogIGZpbGUgPT4KRmluZFByb2plY3RzKGRpclB0biA9ICcuLi8qL2VhZ2xlJywgc29ydERpcmVjdGlvbiA9IC0xLCBzb3J0RmllbGQgPSAnbXRpbWUnKQogIGZuID0+CiAgbWluSW5kZXggPSBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KICBoYXNCb3RoID0gbmFtZSA9PgogIG5hbWUgPT4KKFtuYW1lLCBpbmRleF0pID0+CihhLCBiKSA9PgooW25hbWUsIGluZGV4XSkgPT4KU29ydEZpbGVzKGZpbGVzLCBkaXJlY3Rpb24gPSAxLCBzdGF0RmllbGQgPSAnbXRpbWUnKQooYSwgYikgPT4KKFtmaWxlXSkgPT4KICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MsIGZpbGVuYW1lKQpDb2xsZWN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgZSA9PgogIGF0dHIgPT4KKHsgbmFtZSwgZGV2aWNlc2V0LCBkZXZpY2UsIHZhbHVlIH0pID0+CkNvbGxlY3RFbGVtZW50cyhkb2MgPSBwcm9qZWN0LmJvYXJkKQogIGUgPT4KKHsgbmFtZSwgbGlicmFyeSwgcGFja2FnZTogcGtnLCB2YWx1ZSB9KSA9PgpDb2xsZWN0UGFydHNFbGVtZW50cyhwcm9qID0gcHJvamVjdCkKICBlID0+CiAgYSA9PgogIGUgPT4KKFt7IHgsIHksIC4uLmVsZW1lbnQgfSwgcGFydF0pID0+Ckxpc3RQYXJ0cyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYykKICBwID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpTaG93UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpFYWdsZVByaW50KGZpbGUsIG91dHB1dCkKKGRpciwgYmFzZSwgZXh0KSA9PgogIG1haW4oLi4uYXJncykKICB0b051bWJlcihuKQogIHdpcmUoLi4uYXJncykKICBjb2lsKHsgcmVjdCwgbiwgZGlhbWV0ZXIsIHdpZHRoIH0pCiAgbG9hZChmaWxlbmFtZSwgcHJvamVjdCA9IGdsb2JhbFRoaXMucHJvamVjdCkKICBuZXdQcm9qZWN0KGZpbGVuYW1lKQogIHNjaDogKCkgPT4KICBicmQ6ICgpID0+CiAgbmV4dFByb2plY3QoKQogIHByb2plY3ROYW1lcygpCiAgcXVpdChhcmcpCiAgcmVuZGVyVG9TdHJpbmcoYXJnKQooLi4uYXJncykgPT4KKCkgPT4KICAuZXhpdCA9ICgpID0+CiAgLmRlYnVnID0gKC4uLmFyZ3MpID0+CiAgLnNob3cgPSB2YWx1ZSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+ClRlcm1pbmF0ZShleGl0Q29kZSkKICB4bWwoc3RyaW5ncywgZXhwcmVzc2lvbnMpCmUgPT4KVXBkYXRlTWVhc3VyZXMoYm9hcmQpCiAgbGluZXMgPT4KICBlID0+CiAgbGluZSA9PgpBbGlnbkl0ZW0oaXRlbSkKICB0ciA9PgpBbGlnbkFsbChkb2MgPSBnbG9iYWxUaGlzLmRvY3VtZW50KQogIGZpeFZhbHVlKGVsZW1lbnQpCiAgZml4VmFsdWVzKGRvYykKICBjb29yZE1hcChkb2MpCiAgcCA9PgogIHQgPT4KR2V0UG9seWdvbnMoZCA9IGRvYykKICBlID0+CkZpbmRQb2x5Z29ucygpCiAgZG9jID0+CiAgZSA9PgpSZW1vdmVQb2x5Z29ucyhwID0gcG9seWdvbnMpCihbZG9jLCBsaXN0XSkgPT4KICBwYXRoID0+CkdldE5hbWVzKGRvYywgcHJlZCkKICBwcmVkID0gZSA9PgogIHNoZWV0ID0+CiAgZSA9PgogIGUgPT4KZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KZSA9PgogIGUgPT4KKGEsIGIpID0+CiAgaWQgPT4KICBpZCA9PgooW24sIGVdKSA9PgogIG5hbWUgPT4KKGFjYywgW24sIGVdKSA9PgogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgooY2hpbGQsIGksIGEpID0+CihjaGlsZDIsIGkyKSA9PgooW2luZGV4LCBlcXVhbF0pID0+CihbaW5kZXhdKSA9PgogIGkgPT4KICBpID0+CiAgZG9jID0+CihbZmlsZSwgZV0pID0+CihbZmlsZSwgeHBhdGhdKSA9PgooW2ssIHZdKSA9PgpNb2RpZnlQYXRoKHAsIGZuID0gKGRpciwgYmFzZSwgZXh0KSA9PiBbZGlyLCBiYXNlLCBleHRdKQooKSA9PgpBcHBlbmRUb0ZpbGVuYW1lKHAsIHN0ciA9ICcnKQooZGlyLCBiYXNlLCBleHQpID0+ClNldFNWR0JhY2tncm91bmQoeG1sLCBjb2xvciA9ICcjZmZmZmZmJykKKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CkZpbGVGdW5jdGlvbiA9IChmbiwgcmZuID0gUmVhZEZpbGUsIHdmbiA9IFdyaXRlRmlsZSwgbmFtZWZuID0gbiA9PiBuLCAuLi5hcmdzKSA9PgooZmlsZW5hbWUsIC4uLmFyZ3MpID0+Cm4gPT4KZGF0YSA9PgpuID0+ClB1dFJvd3NDb2x1bW5zKHJvd3MpCihhY2MsIHJvdykgPT4KICByb3cgPT4KKGNvbCwgaSkgPT4KR2V0TGlicmFyeShlKQpFbGVtZW50TmFtZShlKQpHZXRSb3RhdGlvbihlbGVtZW50KQpQYWNrYWdlMkNpcmN1aXQocCkKKHsgeCwgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KKHsgeCB9KSA9PgooeyB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgogIGNvb3JkID0+CiAgeCA9PgogIHkgPT4KKHsgeCwgeSB9KSA9PgooeyB4LCB5IH0pID0+CkNvbnRhY3RyZWYyQ2lyY3VpdChjcmVmKQogIGUgPT4KU2lnbmFsMkNpcmN1aXQocykKRWxlbWVudDJDaXJjdWl0KGVsZW1lbnQpCkdldFVzZWRQYWNrYWdlcyhkb2MgPSBwcm9qZWN0LmJvYXJkKQogIGUgPT4KR2V0UGFja2FnZVBpdGNoKHBrZykKICBwYWQgPT4KRWFnbGUyQ2lyY3VpdChkb2MgPSBwcm9qZWN0LmJvYXJkLCB3aWR0aCA9IDEwMCwgaGVpZ2h0ID0gMTAwKQpFYWdsZTJDaXJjdWl0SlMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMsIHNjYWxlID0gNTAsIHNoZWV0ID0gMCkKbiA9PgogIGUgPT4AAAAAAAAAAAYMAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					292,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/common.js",
						"symkeys":
						[
							[
								101,
								118
							],
							[
								235,
								255
							],
							[
								277,
								287
							],
							[
								308,
								328
							],
							[
								350,
								371
							],
							[
								536,
								558
							],
							[
								694,
								710
							],
							[
								1180,
								1184
							],
							[
								1209,
								1225
							],
							[
								1625,
								1629
							],
							[
								1656,
								1699
							],
							[
								1710,
								1726
							],
							[
								2253,
								2272
							],
							[
								2484,
								2502
							],
							[
								3280,
								3297
							],
							[
								3369,
								3386
							],
							[
								3448,
								3490
							]
						],
						"symlist":
						[
							"isBrowser = () =>",
							"concat: (...args) =>",
							"text: t =>",
							"concat: (...args) =>",
							"text: (t, ...ansi) =>",
							"dingbatCode = digit =>",
							"m = (r, g, b) =>",
							"c =>",
							"m = (r, g, b) =>",
							"c =>",
							"dump = (o, depth = 2, breakLength = 400) =>",
							"isElement = o =>",
							"parseArgs = args =>",
							".predicate = it =>",
							".predicate = v =>",
							".predicate = v =>",
							"traverse = function* (obj, path = [], doc)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAABzAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABzAQAAICBpc0Jyb3dzZXIgPSAoKSA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogdCA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogKHQsIC4uLmFuc2kpID0+CiAgZGluZ2JhdENvZGUgPSBkaWdpdCA9PgogIG0gPSAociwgZywgYikgPT4KICBjID0+CiAgbSA9IChyLCBnLCBiKSA9PgogIGMgPT4KICBkdW1wID0gKG8sIGRlcHRoID0gMiwgYnJlYWtMZW5ndGggPSA0MDApID0+CiAgaXNFbGVtZW50ID0gbyA9PgogIHBhcnNlQXJncyA9IGFyZ3MgPT4KICAucHJlZGljYXRlID0gaXQgPT4KICAucHJlZGljYXRlID0gdiA9PgogIC5wcmVkaWNhdGUgPSB2ID0+CiAgdHJhdmVyc2UgPSBmdW5jdGlvbioob2JqLCBwYXRoID0gW10sIGRvYykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/common.js",
						"symkeys":
						[
							[
								101,
								118
							],
							[
								235,
								255
							],
							[
								277,
								287
							],
							[
								308,
								328
							],
							[
								350,
								371
							],
							[
								536,
								558
							],
							[
								694,
								710
							],
							[
								1180,
								1184
							],
							[
								1209,
								1225
							],
							[
								1625,
								1629
							],
							[
								1656,
								1699
							],
							[
								1710,
								1726
							],
							[
								2253,
								2272
							],
							[
								2484,
								2502
							],
							[
								3280,
								3297
							],
							[
								3369,
								3386
							],
							[
								3448,
								3490
							]
						],
						"symlist":
						[
							"isBrowser = () =>",
							"concat: (...args) =>",
							"text: t =>",
							"concat: (...args) =>",
							"text: (t, ...ansi) =>",
							"dingbatCode = digit =>",
							"m = (r, g, b) =>",
							"c =>",
							"m = (r, g, b) =>",
							"c =>",
							"dump = (o, depth = 2, breakLength = 400) =>",
							"isElement = o =>",
							"parseArgs = args =>",
							".predicate = it =>",
							".predicate = v =>",
							".predicate = v =>",
							"traverse = function* (obj, path = [], doc)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAcwEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAICBpc0Jyb3dzZXIgPSAoKSA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogdCA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogKHQsIC4uLmFuc2kpID0+CiAgZGluZ2JhdENvZGUgPSBkaWdpdCA9PgogIG0gPSAociwgZywgYikgPT4KICBjID0+CiAgbSA9IChyLCBnLCBiKSA9PgogIGMgPT4KICBkdW1wID0gKG8sIGRlcHRoID0gMiwgYnJlYWtMZW5ndGggPSA0MDApID0+CiAgaXNFbGVtZW50ID0gbyA9PgogIHBhcnNlQXJncyA9IGFyZ3MgPT4KICAucHJlZGljYXRlID0gaXQgPT4KICAucHJlZGljYXRlID0gdiA9PgogIC5wcmVkaWNhdGUgPSB2ID0+CiAgdHJhdmVyc2UgPSBmdW5jdGlvbioob2JqLCBwYXRoID0gW10sIGRvYykAAAAAAAAAAAYMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
						"symkeys":
						[
							[
								250,
								267
							],
							[
								311,
								359
							],
							[
								388,
								406
							],
							[
								630,
								635
							]
						],
						"symlist":
						[
							"RoundToMil = n =>",
							"Wire = ({ data, opts = {}, color, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AQAAAAAAAAAAAAAASgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
						"symkeys":
						[
							[
								331,
								348
							],
							[
								400,
								427
							],
							[
								940,
								1032
							],
							[
								1545,
								1550
							],
							[
								1582,
								1603
							],
							[
								1714,
								1727
							],
							[
								1775,
								1793
							],
							[
								2452,
								2530
							]
						],
						"symlist":
						[
							"useGrid = data =>",
							"calcDist = (value, unit) =>",
							"Pattern = ({ data, id = 'pattern', attrs = { color: '#0000aa', width: 0.01 }, ...props }) =>",
							"() =>",
							"ret = function(value)",
							"get current()",
							"set current(value)",
							"Grid = ({ data, rect, id, attrs = { visible: true }, opts = {}, ...props }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUm91bmRUb01pbCA9IG4gPT4KV2lyZSA9ICh7IGRhdGEsIG9wdHMgPSB7fSwgY29sb3IsIC4uLnByb3BzIH0pID0+CigpCmkgPT4AAAAAAAAAACABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgAQAAICB1c2VHcmlkID0gZGF0YSA9PgogIGNhbGNEaXN0ID0gKHZhbHVlLCB1bml0KSA9PgpQYXR0ZXJuID0gKHsgZGF0YSwgaWQgPSAncGF0dGVybicsIGF0dHJzID0geyBjb2xvcjogJyMwMDAwYWEnLCB3aWR0aDogMC4wMSB9LCAuLi5wcm9wcyB9KSA9PgooKSA9PgogIHJldCA9IGZ1bmN0aW9uKHZhbHVlKQogIGdldCBjdXJyZW50KCkKICBzZXQgY3VycmVudCh2YWx1ZSkKR3JpZCA9ICh7IGRhdGEsIHJlY3QsIGlkLCBhdHRycyA9IHsgdmlzaWJsZTogdHJ1ZSB9LCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
						"symkeys":
						[
							[
								400,
								417
							],
							[
								565,
								577
							],
							[
								601,
								626
							],
							[
								776,
								818
							],
							[
								950,
								957
							],
							[
								1116,
								1123
							],
							[
								1386,
								1424
							],
							[
								1629,
								1634
							],
							[
								1850,
								1879
							],
							[
								4231,
								4253
							],
							[
								4565,
								4591
							],
							[
								5112,
								5119
							],
							[
								5258,
								5313
							],
							[
								5507,
								5511
							]
						],
						"symlist":
						[
							"SchematicRenderer",
							"(r, g, b) =>",
							"constructor(doc, factory)",
							"renderCollection(collection, parent, opts)",
							"item =>",
							"item =>",
							"renderItem(item, parent, options = {})",
							" i =>",
							"svg = (elem, attr, parent) =>",
							"renderNet(net, parent)",
							"renderSheet(sheet, parent)",
							"data =>",
							"render(doc = this.doc, parent, props = {}, sheetNo = 0)",
							"Rect"
						]
					},
					"AQAAAAAAAAAAAAAASAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABIAQAAU2NoZW1hdGljUmVuZGVyZXIKKHIsIGcsIGIpID0+CiAgY29uc3RydWN0b3IoZG9jLCBmYWN0b3J5KQogIHJlbmRlckNvbGxlY3Rpb24oY29sbGVjdGlvbiwgcGFyZW50LCBvcHRzKQogIGl0ZW0gPT4KICBpdGVtID0+CiAgcmVuZGVySXRlbShpdGVtLCBwYXJlbnQsIG9wdGlvbnMgPSB7fSkKaSA9PgogIHN2ZyA9IChlbGVtLCBhdHRyLCBwYXJlbnQpID0+CiAgcmVuZGVyTmV0KG5ldCwgcGFyZW50KQogIHJlbmRlclNoZWV0KHNoZWV0LCBwYXJlbnQpCiAgZGF0YSA9PgogIHJlbmRlcihkb2MgPSB0aGlzLmRvYywgcGFyZW50LCBwcm9wcyA9IHt9LCBzaGVldE5vID0gMCkKUmVjdAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
						"symkeys":
						[
							[
								250,
								267
							],
							[
								311,
								359
							],
							[
								388,
								406
							],
							[
								630,
								635
							]
						],
						"symlist":
						[
							"RoundToMil = n =>",
							"Wire = ({ data, opts = {}, color, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AQAAAAAAAAAAAAAASgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/line.js",
						"symkeys":
						[
							[
								155,
								178
							],
							[
								345,
								351
							],
							[
								586,
								590
							],
							[
								640,
								644
							],
							[
								683,
								687
							],
							[
								1117,
								1121
							],
							[
								1303,
								1309
							],
							[
								1364,
								1368
							],
							[
								1902,
								1909
							],
							[
								1998,
								2013
							],
							[
								2063,
								2070
							],
							[
								2117,
								2124
							],
							[
								2326,
								2368
							],
							[
								2776,
								2780
							],
							[
								2801,
								2806
							],
							[
								2856,
								2866
							],
							[
								3022,
								3026
							],
							[
								3047,
								3052
							],
							[
								3102,
								3112
							],
							[
								3269,
								3273
							],
							[
								3292,
								3297
							],
							[
								3326,
								3332
							],
							[
								3402,
								3406
							],
							[
								3425,
								3430
							],
							[
								3459,
								3465
							],
							[
								4383,
								4420
							],
							[
								4436,
								4441
							],
							[
								4492,
								4497
							],
							[
								4518,
								4522
							],
							[
								4564,
								4601
							],
							[
								4686,
								4690
							],
							[
								4721,
								4725
							],
							[
								4750,
								4786
							],
							[
								4866,
								4870
							],
							[
								4895,
								4900
							],
							[
								4971,
								5009
							],
							[
								5022,
								5026
							],
							[
								5165,
								5203
							],
							[
								5216,
								5220
							],
							[
								5359,
								5399
							],
							[
								5411,
								5415
							],
							[
								5459,
								5497
							],
							[
								5509,
								5513
							],
							[
								5558,
								5592
							],
							[
								5669,
								5706
							],
							[
								5736,
								5740
							],
							[
								5781,
								5785
							],
							[
								6104,
								6141
							],
							[
								6179,
								6183
							],
							[
								6250,
								6259
							],
							[
								6369,
								6373
							],
							[
								6440,
								6449
							],
							[
								6576,
								6609
							],
							[
								6621,
								6626
							],
							[
								6648,
								6652
							],
							[
								6689,
								6726
							],
							[
								6900,
								6905
							],
							[
								6940,
								6985
							],
							[
								7058,
								7103
							],
							[
								7167,
								7190
							],
							[
								7198,
								7202
							],
							[
								7252,
								7257
							],
							[
								7299,
								7304
							],
							[
								7346,
								7351
							],
							[
								7393,
								7398
							],
							[
								7447,
								7498
							],
							[
								7537,
								7542
							],
							[
								7603,
								7608
							],
							[
								7763,
								7768
							],
							[
								7864,
								7908
							],
							[
								7930,
								7934
							],
							[
								8010,
								8014
							],
							[
								8042,
								8046
							],
							[
								8093,
								8097
							],
							[
								8122,
								8127
							],
							[
								8227,
								8231
							],
							[
								8254,
								8259
							],
							[
								8338,
								8376
							],
							[
								8532,
								8570
							],
							[
								8650,
								8654
							],
							[
								8713,
								8769
							],
							[
								8870,
								8904
							],
							[
								8953,
								8998
							],
							[
								9125,
								9130
							],
							[
								9143,
								9148
							],
							[
								9479,
								9515
							],
							[
								9608,
								9643
							],
							[
								9830,
								9880
							],
							[
								10045,
								10078
							],
							[
								10278,
								10342
							],
							[
								10597,
								10639
							],
							[
								10770,
								10808
							],
							[
								10849,
								10853
							],
							[
								10889,
								10927
							],
							[
								11233,
								11272
							],
							[
								11313,
								11317
							],
							[
								11353,
								11391
							],
							[
								11697,
								11736
							],
							[
								11777,
								11781
							],
							[
								11817,
								11855
							],
							[
								12058,
								12097
							],
							[
								12138,
								12142
							],
							[
								12178,
								12216
							],
							[
								12419,
								12455
							],
							[
								12500,
								12537
							],
							[
								12582,
								12623
							],
							[
								12635,
								12640
							],
							[
								12681,
								12686
							],
							[
								12728,
								12769
							],
							[
								12975,
								13015
							],
							[
								13073,
								13078
							],
							[
								13151,
								13195
							],
							[
								13253,
								13258
							],
							[
								13331,
								13364
							],
							[
								13498,
								13532
							],
							[
								13705,
								13756
							],
							[
								13848,
								13852
							],
							[
								13881,
								13892
							],
							[
								14153,
								14172
							],
							[
								14173,
								14177
							],
							[
								14253,
								14260
							],
							[
								14326,
								14333
							],
							[
								14383,
								14401
							],
							[
								14642,
								14668
							],
							[
								14740,
								14755
							],
							[
								14959,
								14963
							],
							[
								15014,
								15025
							],
							[
								15142,
								15148
							]
						],
						"symlist":
						[
							" function Line(...args)",
							"arg =>",
							"Line",
							"Line",
							"Line",
							"a =>",
							"arg =>",
							"a =>",
							"prop =>",
							"isLine = obj =>",
							"prop =>",
							"prop =>",
							"Line.prototype.intersect = function(other)",
							"Line",
							"get()",
							"set(value)",
							"Line",
							"get()",
							"set(value)",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line.prototype.direction = function()",
							"Point",
							"Point",
							"Line",
							"Line.prototype.getVector = function()",
							"Line",
							"Line",
							"Line.prototype.getSlope = function()",
							"Line",
							"get()",
							"Line.prototype.yIntercept = function()",
							"Line",
							"Line.prototype.xIntercept = function()",
							"Line",
							"Line.prototype.isHorizontal = function()",
							"Line",
							"Line.prototype.isVertical = function()",
							"Line",
							"Line.prototype.isNull = function()",
							"Line.prototype.equations = function()",
							"Line",
							"Line",
							"Line.prototype.functions = function()",
							"Line",
							".y = x =>",
							"Line",
							".x = y =>",
							"Line.prototype.angle = function()",
							"Point",
							"Line",
							"Line.prototype.getLength = function()",
							"Point",
							"Line.prototype.endpointDist = function(point)",
							"Line.prototype.matchEndpoints = function(arr)",
							" ([i, otherLine]) =>",
							"Line",
							"Point",
							"Point",
							"Point",
							"Point",
							"Line.prototype.distanceToPointSquared = function(p)",
							"Point",
							"Point",
							"Point",
							"Line.prototype.distanceToPoint = function(p)",
							"Line",
							"Line",
							"Line",
							"Line",
							"get()",
							"Line",
							"get()",
							"Line.prototype.pointAt = function(pos)",
							"Line.prototype.transform = function(m)",
							"Line",
							"Line.prototype.bbox = function(proto = Object.prototype)",
							"Line.prototype.points = function()",
							"Line.prototype.toString = function(opts = {})",
							" s =>",
							" s =>",
							"Line.prototype.toSource = function()",
							"Line.prototype.reverse = function()",
							"Line.prototype.toObject = function(t = num => num)",
							"Line.prototype.clone = function()",
							"Line.prototype.round = function(precision = 0.001, digits, type)",
							"Line.prototype.roundTo = function(...args)",
							"Line.prototype.sum = function(...args)",
							"Line",
							"Line.prototype.add = function(...args)",
							"Line.prototype.diff = function(...args)",
							"Line",
							"Line.prototype.sub = function(...args)",
							"Line.prototype.prod = function(...args)",
							"Line",
							"Line.prototype.mul = function(...args)",
							"Line.prototype.quot = function(...args)",
							"Line",
							"Line.prototype.div = function(...args)",
							"Line.prototype.some = function(pred)",
							"Line.prototype.every = function(pred)",
							"Line.prototype.includes = function(point)",
							"Point",
							"Point",
							"Line.prototype.equals = function(...args)",
							"Line.prototype.indexOf = function(point)",
							"Point",
							"Line.prototype.lastIndexOf = function(point)",
							"Point",
							"Line.prototype.map = function(fn)",
							"Line.prototype.swap = function(fn)",
							"Line.prototype.toPoints = function(ctor = Array.of)",
							"Line",
							" function()",
							" (line, ...args) =>",
							"Line",
							"line =>",
							"line =>",
							"Line.from = obj =>",
							"Line.bind = (o, p, gen) =>",
							"gen = k => v =>",
							"Line",
							" function()",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUm91bmRUb01pbCA9IG4gPT4KV2lyZSA9ICh7IGRhdGEsIG9wdHMgPSB7fSwgY29sb3IsIC4uLnByb3BzIH0pID0+CigpCmkgPT4AAAAAAAAAALcJAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								2878,
								2883
							],
							[
								2905,
								2910
							],
							[
								3642,
								3647
							],
							[
								3685,
								3690
							],
							[
								3769,
								3773
							],
							[
								4287,
								4323
							],
							[
								7667,
								7673
							],
							[
								8221,
								8242
							],
							[
								8288,
								8293
							],
							[
								8341,
								8357
							],
							[
								8489,
								8507
							],
							[
								8620,
								8627
							],
							[
								8695,
								8707
							],
							[
								8748,
								8755
							],
							[
								8762,
								8776
							],
							[
								8929,
								8949
							],
							[
								8987,
								9005
							],
							[
								9059,
								9077
							],
							[
								9167,
								9181
							],
							[
								9251,
								9268
							],
							[
								9302,
								9328
							],
							[
								10256,
								10280
							],
							[
								10568,
								10586
							],
							[
								10677,
								10704
							],
							[
								11055,
								11070
							],
							[
								11232,
								11257
							],
							[
								11284,
								11309
							],
							[
								11366,
								11390
							],
							[
								11495,
								11527
							],
							[
								11744,
								11775
							],
							[
								11903,
								11934
							],
							[
								12272,
								12297
							],
							[
								13012,
								13038
							],
							[
								13763,
								13793
							],
							[
								14348,
								14379
							],
							[
								16167,
								16179
							],
							[
								17288,
								17308
							],
							[
								17919,
								17929
							],
							[
								18222,
								18232
							],
							[
								18393,
								18403
							],
							[
								18602,
								18614
							],
							[
								18651,
								18669
							],
							[
								19199,
								19210
							],
							[
								19332,
								19346
							],
							[
								19544,
								19562
							],
							[
								19641,
								19652
							],
							[
								19700,
								19722
							],
							[
								19863,
								19882
							],
							[
								20203,
								20336
							],
							[
								20454,
								20462
							],
							[
								20613,
								20621
							],
							[
								20752,
								20757
							],
							[
								20811,
								20829
							],
							[
								21919,
								21938
							],
							[
								22115,
								22128
							],
							[
								22295,
								22308
							],
							[
								22377,
								22402
							],
							[
								23637,
								23666
							],
							[
								24208,
								24235
							],
							[
								25249,
								25274
							],
							[
								25404,
								25417
							],
							[
								25880,
								25894
							],
							[
								27273,
								27290
							],
							[
								27413,
								27417
							],
							[
								27428,
								27432
							],
							[
								27549,
								27564
							],
							[
								28453,
								28470
							],
							[
								28548,
								28565
							],
							[
								28641,
								28667
							],
							[
								32026,
								32041
							],
							[
								34072,
								34078
							],
							[
								34107,
								34117
							],
							[
								34145,
								34159
							],
							[
								35626,
								35656
							],
							[
								35836,
								35849
							],
							[
								35900,
								35917
							],
							[
								36019,
								36024
							],
							[
								36287,
								36323
							],
							[
								36405,
								36411
							],
							[
								36659,
								36682
							],
							[
								36838,
								36845
							],
							[
								36921,
								36926
							],
							[
								37098,
								37103
							],
							[
								37184,
								37201
							],
							[
								37352,
								37366
							],
							[
								37485,
								37500
							],
							[
								37684,
								37702
							],
							[
								38077,
								38100
							],
							[
								38145,
								38167
							],
							[
								38211,
								38228
							],
							[
								38506,
								38519
							],
							[
								38726,
								38737
							],
							[
								38902,
								38912
							],
							[
								38979,
								39006
							],
							[
								39428,
								39438
							],
							[
								39526,
								39543
							],
							[
								40348,
								40372
							],
							[
								40887,
								40895
							],
							[
								40919,
								40943
							],
							[
								43093,
								43105
							],
							[
								43815,
								43848
							],
							[
								44184,
								44227
							],
							[
								44240,
								44254
							],
							[
								44388,
								44398
							],
							[
								44506,
								44516
							],
							[
								44561,
								44573
							],
							[
								44646,
								44660
							],
							[
								45065,
								45085
							],
							[
								45098,
								45111
							],
							[
								45129,
								45134
							],
							[
								45159,
								45173
							],
							[
								45210,
								45225
							],
							[
								45476,
								45491
							],
							[
								45702,
								45719
							],
							[
								46063,
								46086
							],
							[
								46202,
								46223
							],
							[
								46451,
								46476
							],
							[
								47193,
								47200
							],
							[
								47253,
								47276
							],
							[
								47863,
								47878
							],
							[
								47946,
								47967
							],
							[
								48118,
								48138
							],
							[
								48309,
								48319
							],
							[
								48740,
								48747
							],
							[
								48843,
								48849
							],
							[
								48882,
								48910
							],
							[
								48999,
								49019
							],
							[
								49080,
								49085
							],
							[
								49182,
								49199
							],
							[
								49364,
								49380
							],
							[
								49688,
								49704
							],
							[
								50138,
								50150
							],
							[
								50348,
								50356
							],
							[
								50976,
								50987
							],
							[
								53697,
								53703
							],
							[
								53741,
								53749
							],
							[
								53770,
								53774
							],
							[
								53835,
								53839
							],
							[
								53910,
								53933
							],
							[
								54281,
								54300
							],
							[
								54392,
								54411
							],
							[
								54473,
								54491
							],
							[
								54583,
								54606
							],
							[
								55005,
								55034
							],
							[
								55093,
								55124
							],
							[
								55281,
								55306
							],
							[
								55415,
								55462
							],
							[
								56034,
								56079
							],
							[
								56903,
								56923
							],
							[
								57037,
								57057
							],
							[
								57575,
								57608
							],
							[
								57730,
								57811
							],
							[
								57971,
								57981
							],
							[
								57999,
								58012
							],
							[
								58192,
								58238
							],
							[
								58419,
								58463
							],
							[
								58594,
								58615
							],
							[
								58639,
								58649
							],
							[
								58668,
								58674
							],
							[
								58721,
								58750
							],
							[
								59033,
								59067
							],
							[
								59107,
								59125
							],
							[
								59313,
								59350
							],
							[
								59436,
								59440
							],
							[
								59920,
								59930
							],
							[
								59968,
								59993
							],
							[
								60185,
								60225
							],
							[
								60288,
								60317
							],
							[
								60365,
								60387
							],
							[
								60429,
								60464
							]
						],
						"symlist":
						[
							" n =>",
							" n =>",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, showBanner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(showBanner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"showCompletions(tab)",
							"controlC()",
							"controlD()",
							"controlL()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"deleteAll()",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"printResult(result)",
							"printPromise(result, fmt = id => `${colors.gray}<${colors.red}result${colors.gray}#${colors.cyan}${id}${colors.gray}>${colors.none}`)",
							"value =>",
							"value =>",
							"() =>",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"makeFilename(type = 'history')",
							"historyFile()",
							"historyLoad(file)",
							"() =>",
							"historySave(file, maxEntries = 1000)",
							"cmd =>",
							"async modulesLoad(file)",
							"line =>",
							"() =>",
							"() =>",
							"modulesSave(file)",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"historyPrevious()",
							"historyNext()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"numberToString(a, radix)",
							"print(a)",
							" function printRec(a)",
							"show(result)",
							" function LinesAndColumns(str)",
							"printStatus(fn, prompt = !this.evalRunning)",
							"print = str =>",
							"fn = () =>",
							"fn = () =>",
							"(item, i) =>",
							"(acc, item) =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(inputHandler)",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking()",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"escape()",
							"REPL",
							"REPL",
							" function i(m)",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, styleNames)",
							"function printPaged(str, numLines = Infinity)",
							" function getbyte()",
							" function waitkey()",
							"function saveFile(filename, data)",
							"function observeProperties(target = {}, obj, fn = (prop, value) => {}, opts = {})",
							"get: () =>",
							"set: value =>",
							"function loadSaveObject(parent, key, filename)",
							" (prop, value, obj) => (prop, value, obj) =>",
							"function waitRead(fd)",
							"resolve =>",
							" () =>",
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"async function loadModule(moduleName)",
							"m =>",
							"REPLServer",
							"constructor(options = {})",
							"defineCommand(keyword, { help, action })",
							"displayPrompt(preserveCursor)",
							"clearBufferedCommand()",
							"setupHistory(historyPath, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3CQAATGluZSguLi5hcmdzKQogIGFyZyA9PgpMaW5lCkxpbmUKTGluZQogIGEgPT4KICBhcmcgPT4KICBhID0+CiAgcHJvcCA9PgogIGlzTGluZSA9IG9iaiA9PgogIHByb3AgPT4KICBwcm9wID0+CkxpbmUucHJvdG90eXBlLmludGVyc2VjdCA9IGZ1bmN0aW9uKG90aGVyKQpMaW5lCiAgZ2V0KCkKICBzZXQodmFsdWUpCkxpbmUKICBnZXQoKQogIHNldCh2YWx1ZSkKTGluZQogIGdldCgpCiAgc2V0KHYpCkxpbmUKICBnZXQoKQogIHNldCh2KQpMaW5lLnByb3RvdHlwZS5kaXJlY3Rpb24gPSBmdW5jdGlvbigpClBvaW50ClBvaW50CkxpbmUKTGluZS5wcm90b3R5cGUuZ2V0VmVjdG9yID0gZnVuY3Rpb24oKQpMaW5lCkxpbmUKTGluZS5wcm90b3R5cGUuZ2V0U2xvcGUgPSBmdW5jdGlvbigpCkxpbmUKICBnZXQoKQpMaW5lLnByb3RvdHlwZS55SW50ZXJjZXB0ID0gZnVuY3Rpb24oKQpMaW5lCkxpbmUucHJvdG90eXBlLnhJbnRlcmNlcHQgPSBmdW5jdGlvbigpCkxpbmUKTGluZS5wcm90b3R5cGUuaXNIb3Jpem9udGFsID0gZnVuY3Rpb24oKQpMaW5lCkxpbmUucHJvdG90eXBlLmlzVmVydGljYWwgPSBmdW5jdGlvbigpCkxpbmUKTGluZS5wcm90b3R5cGUuaXNOdWxsID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS5lcXVhdGlvbnMgPSBmdW5jdGlvbigpCkxpbmUKTGluZQpMaW5lLnByb3RvdHlwZS5mdW5jdGlvbnMgPSBmdW5jdGlvbigpCkxpbmUKICAueSA9IHggPT4KTGluZQogIC54ID0geSA9PgpMaW5lLnByb3RvdHlwZS5hbmdsZSA9IGZ1bmN0aW9uKCkKUG9pbnQKTGluZQpMaW5lLnByb3RvdHlwZS5nZXRMZW5ndGggPSBmdW5jdGlvbigpClBvaW50CkxpbmUucHJvdG90eXBlLmVuZHBvaW50RGlzdCA9IGZ1bmN0aW9uKHBvaW50KQpMaW5lLnByb3RvdHlwZS5tYXRjaEVuZHBvaW50cyA9IGZ1bmN0aW9uKGFycikKKFtpLCBvdGhlckxpbmVdKSA9PgpMaW5lClBvaW50ClBvaW50ClBvaW50ClBvaW50CkxpbmUucHJvdG90eXBlLmRpc3RhbmNlVG9Qb2ludFNxdWFyZWQgPSBmdW5jdGlvbihwKQpQb2ludApQb2ludApQb2ludApMaW5lLnByb3RvdHlwZS5kaXN0YW5jZVRvUG9pbnQgPSBmdW5jdGlvbihwKQpMaW5lCkxpbmUKTGluZQpMaW5lCiAgZ2V0KCkKTGluZQogIGdldCgpCkxpbmUucHJvdG90eXBlLnBvaW50QXQgPSBmdW5jdGlvbihwb3MpCkxpbmUucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG0pCkxpbmUKTGluZS5wcm90b3R5cGUuYmJveCA9IGZ1bmN0aW9uKHByb3RvID0gT2JqZWN0LnByb3RvdHlwZSkKTGluZS5wcm90b3R5cGUucG9pbnRzID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdHMgPSB7fSkKcyA9PgpzID0+CkxpbmUucHJvdG90eXBlLnRvU291cmNlID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS5yZXZlcnNlID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS50b09iamVjdCA9IGZ1bmN0aW9uKHQgPSBudW0gPT4gbnVtKQpMaW5lLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkKTGluZS5wcm90b3R5cGUucm91bmQgPSBmdW5jdGlvbihwcmVjaXNpb24gPSAwLjAwMSwgZGlnaXRzLCB0eXBlKQpMaW5lLnByb3RvdHlwZS5yb3VuZFRvID0gZnVuY3Rpb24oLi4uYXJncykKTGluZS5wcm90b3R5cGUuc3VtID0gZnVuY3Rpb24oLi4uYXJncykKTGluZQpMaW5lLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiguLi5hcmdzKQpMaW5lLnByb3RvdHlwZS5kaWZmID0gZnVuY3Rpb24oLi4uYXJncykKTGluZQpMaW5lLnByb3RvdHlwZS5zdWIgPSBmdW5jdGlvbiguLi5hcmdzKQpMaW5lLnByb3RvdHlwZS5wcm9kID0gZnVuY3Rpb24oLi4uYXJncykKTGluZQpMaW5lLnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiguLi5hcmdzKQpMaW5lLnByb3RvdHlwZS5xdW90ID0gZnVuY3Rpb24oLi4uYXJncykKTGluZQpMaW5lLnByb3RvdHlwZS5kaXYgPSBmdW5jdGlvbiguLi5hcmdzKQpMaW5lLnByb3RvdHlwZS5zb21lID0gZnVuY3Rpb24ocHJlZCkKTGluZS5wcm90b3R5cGUuZXZlcnkgPSBmdW5jdGlvbihwcmVkKQpMaW5lLnByb3RvdHlwZS5pbmNsdWRlcyA9IGZ1bmN0aW9uKHBvaW50KQpQb2ludApQb2ludApMaW5lLnByb3RvdHlwZS5lcXVhbHMgPSBmdW5jdGlvbiguLi5hcmdzKQpMaW5lLnByb3RvdHlwZS5pbmRleE9mID0gZnVuY3Rpb24ocG9pbnQpClBvaW50CkxpbmUucHJvdG90eXBlLmxhc3RJbmRleE9mID0gZnVuY3Rpb24ocG9pbnQpClBvaW50CkxpbmUucHJvdG90eXBlLm1hcCA9IGZ1bmN0aW9uKGZuKQpMaW5lLnByb3RvdHlwZS5zd2FwID0gZnVuY3Rpb24oZm4pCkxpbmUucHJvdG90eXBlLnRvUG9pbnRzID0gZnVuY3Rpb24oY3RvciA9IEFycmF5Lm9mKQpMaW5lCmZ1bmN0aW9uKCkKKGxpbmUsIC4uLmFyZ3MpID0+CkxpbmUKICBsaW5lID0+CiAgbGluZSA9PgpMaW5lLmZyb20gPSBvYmogPT4KTGluZS5iaW5kID0gKG8sIHAsIGdlbikgPT4KICBnZW4gPSBrID0+IHYgPT4KTGluZQpmdW5jdGlvbigpCigpID0+AAAAAAAAAAC+DAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
						"symkeys":
						[
							[
								352,
								392
							],
							[
								534,
								552
							],
							[
								760,
								765
							]
						],
						"symlist":
						[
							"Via = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+DAAAbiA9PgpuID0+CiAgZmQgPT4KKCkgPT4KUkVQTAogIGNvbnN0cnVjdG9yKG5hbWUsIHNob3dCYW5uZXIgPSB0cnVlKQooKSA9PgogIGFkZENsZWFudXBIYW5kbGVyKGZuKQooKSA9PgogIC5jbGVhbnVwID0gKCkgPT4KICBleGl0KGV4aXRDb2RlID0gMCkKICBhYm9ydCgpCiAgYWNjZXB0TGluZSgpCiAgYWxlcnQoKQogIGJhY2t3YXJkQ2hhcigpCiAgYmFja3dhcmREZWxldGVDaGFyKCkKICBiYWNrd2FyZEtpbGxMaW5lKCkKICBiYWNrd2FyZEtpbGxXb3JkKCkKICBiYWNrd2FyZFdvcmQoKQogIGJlZ2lubmluZ09mTGluZSgpCiAgYmlnZmxvYXRUb1N0cmluZyhhLCByYWRpeCkKICBiaWdpbnRUb1N0cmluZyhhLCByYWRpeCkKICBjbWRSZWFkbGluZVN0YXJ0KCkKICBjbWRTdGFydChzaG93QmFubmVyID0gdHJ1ZSkKICBjb2xvcml6ZUpzKHN0cikKICBwdXNoU3RhdGUoYykKICBsYXN0U3RhdGUoYykKICBwb3BTdGF0ZShjKQogIHBhcnNlQmxvY2tDb21tZW50KCkKICBwYXJzZUxpbmVDb21tZW50KCkKICBwYXJzZVN0cmluZyhkZWxpbSkKICBwYXJzZVJlZ2V4KCkKICBwYXJzZU51bWJlcigpCiAgcGFyc2VJZGVudGlmaWVyKCkKICBzZXRTdHlsZShmcm9tLCB0bykKICBjb21wbGV0aW9uKCkKICBzaG93Q29tcGxldGlvbnModGFiKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgY29udHJvbEwoKQogIGRlbGV0ZUNoYXIoKQogIGRlbGV0ZUNoYXJEaXIoZGlyKQogIGRlbGV0ZUFsbCgpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBwcmludFJlc3VsdChyZXN1bHQpCiAgcHJpbnRQcm9taXNlKHJlc3VsdCwgZm10ID0gaWQgPT4gYCR7Y29sb3JzLmdyYXl9PCR7Y29sb3JzLnJlZH1yZXN1bHQke2NvbG9ycy5ncmF5fSMke2NvbG9ycy5jeWFufSR7aWR9JHtjb2xvcnMuZ3JheX0+JHtjb2xvcnMubm9uZX1gKQogIHZhbHVlID0+CiAgdmFsdWUgPT4KKCkgPT4KICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBtYWtlRmlsZW5hbWUodHlwZSA9ICdoaXN0b3J5JykKICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZSkKKCkgPT4KICBoaXN0b3J5U2F2ZShmaWxlLCBtYXhFbnRyaWVzID0gMTAwMCkKICBjbWQgPT4KICBtb2R1bGVzTG9hZChmaWxlKQogIGxpbmUgPT4KKCkgPT4KKCkgPT4KICBtb2R1bGVzU2F2ZShmaWxlKQogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgaGlzdG9yeVByZXZpb3VzKCkKICBoaXN0b3J5TmV4dCgpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbnVtYmVyVG9TdHJpbmcoYSwgcmFkaXgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHNob3cocmVzdWx0KQpMaW5lc0FuZENvbHVtbnMoc3RyKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSAhdGhpcy5ldmFsUnVubmluZykKICBwcmludCA9IHN0ciA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CihpdGVtLCBpKSA9PgooYWNjLCBpdGVtKSA9PgogIHByaW50RnVuY3Rpb24obG9nRm4pCiguLi5hcmdzKSA9PgooKSA9PgogIHF1b3RlZEluc2VydCgpCiAgcmV2ZXJzZVNlYXJjaCgpCiAgZm9yd2FyZFNlYXJjaCgpCiAgc2VhcmNoQ2IocGF0dGVybikKICByZWFkbGluZUhhbmRsZUNtZChleHByKQogIHJlYWRsaW5lUHJpbnRQcm9tcHQoKQogIHJlYWRsaW5lU3RhcnQoZGVmc3RyLCBjYikKICByZXNldCgpCiAgcnVuKGlucHV0SGFuZGxlcikKICBzaWdpbnRIYW5kbGVyKCkKICBza2lwV29yZEJhY2t3YXJkKHBvcykKICBza2lwV29yZEZvcndhcmQocG9zKQogIHRlcm1Jbml0KCkKYXJnID0+CigpID0+CiAgbW91c2VUcmFja2luZyhlbmFibGUgPSB0cnVlKQogIHNldHVwTW91c2VUcmFja2luZygpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpCiAgZXNjYXBlKCkKUkVQTApSRVBMCiAgaShtKQogIGlzQWxwaGEoYykKICBpc0RpZ2l0KGMpCiAgaXNXb3JkKGMpCiAgdWNzTGVuZ3RoKHN0cikKICByb3RhdGVMZWZ0KGFycmF5LCBuKQogIGlzVHJhaWxpbmdTdXJyb2dhdGUoYykKICBpc0JhbGFuY2VkKGEsIGIpCiAgcHJpbnRDb2xvclRleHQoc3RyLCBzdGFydCwgc3R5bGVOYW1lcykKICBwcmludFBhZ2VkKHN0ciwgbnVtTGluZXMgPSBJbmZpbml0eSkKICBnZXRieXRlKCkKICB3YWl0a2V5KCkKICBzYXZlRmlsZShmaWxlbmFtZSwgZGF0YSkKICBvYnNlcnZlUHJvcGVydGllcyh0YXJnZXQgPSB7fSwgb2JqLCBmbiA9IChwcm9wLCB2YWx1ZSkgPT4ge30sIG9wdHMgPSB7fSkKICBnZXQ6ICgpID0+CiAgc2V0OiB2YWx1ZSA9PgogIGxvYWRTYXZlT2JqZWN0KHBhcmVudCwga2V5LCBmaWxlbmFtZSkKKHByb3AsIHZhbHVlLCBvYmopID0+IChwcm9wLCB2YWx1ZSwgb2JqKSA9PgogIHdhaXRSZWFkKGZkKQogIHJlc29sdmUgPT4KKCkgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKZnVuY3Rpb24oLi4uYXJncykKICBsb2FkTW9kdWxlKG1vZHVsZU5hbWUpCiAgbSA9PgpSRVBMU2VydmVyCiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KQogIGRlZmluZUNvbW1hbmQoa2V5d29yZCwgeyBoZWxwLCBhY3Rpb24gfSkKICBkaXNwbGF5UHJvbXB0KHByZXNlcnZlQ3Vyc29yKQogIGNsZWFyQnVmZmVyZWRDb21tYW5kKCkKICBzZXR1cEhpc3RvcnkoaGlzdG9yeVBhdGgsIGNhbGxiYWNrKQAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle2svg.js",
						"symkeys":
						[
							[
								526,
								556
							],
							[
								1508,
								1530
							],
							[
								1731,
								1740
							],
							[
								1910,
								1915
							]
						],
						"symlist":
						[
							"function render(doc, filename)",
							"function main(...args)",
							" value =>",
							" f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAVmlhID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQppID0+AAAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKICBtYWluKC4uLmFyZ3MpCnZhbHVlID0+CmYgPT4AAAAAAAAAAAYMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/common.js",
						"symkeys":
						[
							[
								101,
								118
							],
							[
								235,
								255
							],
							[
								277,
								287
							],
							[
								308,
								328
							],
							[
								350,
								371
							],
							[
								536,
								558
							],
							[
								694,
								710
							],
							[
								1180,
								1184
							],
							[
								1209,
								1225
							],
							[
								1625,
								1629
							],
							[
								1656,
								1699
							],
							[
								1710,
								1726
							],
							[
								2253,
								2272
							],
							[
								2484,
								2502
							],
							[
								3280,
								3297
							],
							[
								3369,
								3386
							],
							[
								3448,
								3490
							]
						],
						"symlist":
						[
							"isBrowser = () =>",
							"concat: (...args) =>",
							"text: t =>",
							"concat: (...args) =>",
							"text: (t, ...ansi) =>",
							"dingbatCode = digit =>",
							"m = (r, g, b) =>",
							"c =>",
							"m = (r, g, b) =>",
							"c =>",
							"dump = (o, depth = 2, breakLength = 400) =>",
							"isElement = o =>",
							"parseArgs = args =>",
							".predicate = it =>",
							".predicate = v =>",
							".predicate = v =>",
							"traverse = function* (obj, path = [], doc)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAABzAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAQAAICBpc0Jyb3dzZXIgPSAoKSA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogdCA9PgogIGNvbmNhdDogKC4uLmFyZ3MpID0+CiAgdGV4dDogKHQsIC4uLmFuc2kpID0+CiAgZGluZ2JhdENvZGUgPSBkaWdpdCA9PgogIG0gPSAociwgZywgYikgPT4KICBjID0+CiAgbSA9IChyLCBnLCBiKSA9PgogIGMgPT4KICBkdW1wID0gKG8sIGRlcHRoID0gMiwgYnJlYWtMZW5ndGggPSA0MDApID0+CiAgaXNFbGVtZW50ID0gbyA9PgogIHBhcnNlQXJncyA9IGFyZ3MgPT4KICAucHJlZGljYXRlID0gaXQgPT4KICAucHJlZGljYXRlID0gdiA9PgogIC5wcmVkaWNhdGUgPSB2ID0+CiAgdHJhdmVyc2UgPSBmdW5jdGlvbioob2JqLCBwYXRoID0gW10sIGRvYykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/rect.js",
						"symkeys":
						[
							[
								318,
								337
							],
							[
								623,
								631
							],
							[
								1495,
								1501
							],
							[
								1932,
								1938
							],
							[
								3039,
								3063
							],
							[
								3149,
								3153
							],
							[
								3166,
								3170
							],
							[
								3212,
								3247
							],
							[
								3418,
								3453
							],
							[
								3673,
								3677
							],
							[
								3716,
								3752
							],
							[
								3814,
								3818
							],
							[
								3849,
								3884
							],
							[
								3925,
								3970
							],
							[
								4014,
								4022
							],
							[
								4209,
								4213
							],
							[
								4235,
								4240
							],
							[
								4269,
								4279
							],
							[
								4415,
								4419
							],
							[
								4441,
								4446
							],
							[
								4488,
								4498
							],
							[
								4584,
								4588
							],
							[
								4610,
								4615
							],
							[
								4644,
								4654
							],
							[
								4771,
								4775
							],
							[
								4797,
								4802
							],
							[
								4845,
								4855
							],
							[
								4922,
								4926
							],
							[
								4950,
								4955
							],
							[
								4969,
								4973
							],
							[
								5034,
								5038
							],
							[
								5067,
								5072
							],
							[
								5143,
								5147
							],
							[
								5177,
								5182
							],
							[
								5258,
								5265
							],
							[
								5325,
								5330
							],
							[
								5377,
								5382
							],
							[
								5482,
								5489
							],
							[
								5539,
								5549
							],
							[
								5618,
								5622
							],
							[
								5648,
								5653
							],
							[
								5694,
								5698
							],
							[
								5750,
								5754
							],
							[
								5778,
								5783
							],
							[
								5901,
								5905
							],
							[
								5930,
								5935
							],
							[
								6595,
								6650
							],
							[
								6654,
								6662
							],
							[
								6714,
								6718
							],
							[
								6749,
								6790
							],
							[
								6802,
								6807
							],
							[
								6848,
								6852
							],
							[
								6894,
								6933
							],
							[
								7151,
								7189
							],
							[
								7194,
								7199
							],
							[
								7237,
								7241
							],
							[
								7296,
								7334
							],
							[
								7339,
								7344
							],
							[
								7382,
								7386
							],
							[
								7440,
								7479
							],
							[
								7508,
								7513
							],
							[
								7548,
								7552
							],
							[
								7600,
								7639
							],
							[
								7668,
								7673
							],
							[
								7708,
								7712
							],
							[
								7760,
								7798
							],
							[
								8039,
								8076
							],
							[
								8393,
								8432
							],
							[
								8510,
								8598
							],
							[
								8690,
								8694
							],
							[
								8738,
								8747
							],
							[
								8872,
								8888
							],
							[
								9141,
								9189
							],
							[
								9194,
								9199
							],
							[
								9310,
								9343
							],
							[
								9364,
								9369
							],
							[
								9405,
								9409
							],
							[
								9446,
								9622
							],
							[
								9740,
								9774
							],
							[
								9896,
								9931
							],
							[
								10009,
								10052
							],
							[
								10098,
								10103
							],
							[
								10152,
								10162
							],
							[
								10196,
								10206
							],
							[
								10526,
								10582
							],
							[
								10586,
								10604
							],
							[
								10612,
								10625
							],
							[
								10649,
								10653
							],
							[
								10757,
								10805
							],
							[
								11539,
								11581
							],
							[
								11717,
								11781
							],
							[
								12276,
								12322
							],
							[
								12485,
								12517
							],
							[
								12554,
								12592
							],
							[
								12769,
								12773
							],
							[
								12802,
								12815
							],
							[
								12912,
								12916
							],
							[
								12943,
								12968
							],
							[
								13078,
								13099
							],
							[
								13158,
								13165
							],
							[
								13181,
								13208
							],
							[
								13270,
								13309
							],
							[
								13310,
								13314
							],
							[
								13356,
								13376
							],
							[
								13377,
								13381
							],
							[
								13411,
								13442
							],
							[
								13493,
								13521
							],
							[
								13569,
								13598
							],
							[
								13648,
								13669
							],
							[
								13732,
								13751
							],
							[
								13782,
								13812
							],
							[
								13922,
								13947
							],
							[
								13991,
								14007
							],
							[
								14244,
								14279
							],
							[
								14598,
								14617
							],
							[
								14618,
								14622
							],
							[
								14681,
								14717
							],
							[
								15005,
								15031
							],
							[
								15338,
								15355
							],
							[
								15419,
								15443
							],
							[
								15534,
								15549
							],
							[
								15647,
								15651
							],
							[
								15666,
								15684
							],
							[
								15751,
								15755
							],
							[
								15767,
								15771
							],
							[
								15783,
								15788
							],
							[
								15831,
								15860
							],
							[
								15931,
								15935
							],
							[
								15998,
								16009
							],
							[
								16166,
								16172
							],
							[
								16190,
								16235
							],
							[
								16486,
								16490
							]
						],
						"symlist":
						[
							" function Rect(arg)",
							"field =>",
							"arg =>",
							"arg =>",
							"Rect.fromString = str =>",
							"m =>",
							"Rect",
							"Rect.prototype.clone = function(fn)",
							"Rect.prototype.corners = function()",
							"Rect",
							"Rect.prototype.isSquare = function()",
							"Rect",
							"Rect.prototype.getArea = function()",
							"Rect.prototype.toSource = function(opts = {})",
							"c = t =>",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"Rect",
							"Rect",
							"get()",
							"Rect",
							"get()",
							"rect =>",
							" k =>",
							" v =>",
							"rect =>",
							" k => v =>",
							"Rect",
							"get()",
							"Rect",
							"Rect",
							"get()",
							"Rect",
							"get()",
							"Rect.prototype.points = function(ctor = items => Array.",
							"(items))",
							"Rect",
							"Rect.prototype.equals = function(...args)",
							"Point",
							"Size",
							"Rect.prototype.scale = function(factor)",
							"Rect.prototype.mul = function(...args)",
							"Point",
							"Size",
							"Rect.prototype.div = function(...args)",
							"Point",
							"Size",
							"Rect.prototype.quot = function(...args)",
							"Point",
							"Size",
							"Rect.prototype.prod = function(...args)",
							"Point",
							"Size",
							"Rect.prototype.outset = function(...a)",
							"Rect.prototype.inset = function(...a)",
							"Rect.prototype.inside = function(point)",
							"Rect.prototype.fit = function(other, align = Align.CENTER | Align.MIDDLE | Rect.CONTAIN)",
							"Size",
							"(a, b) =>",
							"(acc, factor) =>",
							"Rect.prototype.pointFromCenter = function(point)",
							"Point",
							"Rect.prototype.toCSS = function()",
							"Point",
							"Size",
							"Rect.prototype.toSVG = function(factory = (tagName, attributes, children) => ({ tagName, attributes, children }), attrs = { stroke: '#000', fill: 'none' }, parent = null, prec)",
							"Rect.prototype.toTRBL = function()",
							"Rect.prototype.toArray = function()",
							"Rect.prototype.toPoints = function(...args)",
							"() =>",
							" points =>",
							" points =>",
							"Rect.prototype.toLines = function(ctor = lines => Array.",
							"(lines, points => ",
							"(...points)))",
							"Rect",
							"Rect.prototype.align = function(align_to, a = 0)",
							"Rect.prototype.roundTo = function(...args)",
							"Rect.prototype.round = function(precision = 0.001, digits, type)",
							"Rect.prototype.toObject = function(bb = false)",
							"Rect.prototype.bbox = function()",
							"Rect.prototype.transform = function(m)",
							"Rect",
							" function* ()",
							"Rect",
							" function(depth, options)",
							"Rect.isBBox = rect =>",
							"prop =>",
							"Rect.assign = (to, rect) =>",
							"Rect.align = (rect, align_to, a = 0) =>",
							"Rect",
							"Rect.toCSS = rect =>",
							"Rect",
							"Rect.round = (rect, ...args) =>",
							"Rect.inset = (rect, trbl) =>",
							"Rect.outset = (rect, trbl) =>",
							"Rect.center = rect =>",
							"Rect.bind = rect =>",
							"Rect.inside = (rect, point) =>",
							"Rect.from = function(obj)",
							"fn = (v1, v2) =>",
							"Rect.fromCircle = function(...args)",
							" (rect, ...args) =>",
							"Rect",
							"Rect.toSource = (rect, opts = {}) =>",
							"Rect.bind = (o, p, gen) =>",
							"(rect, sx, sy) =>",
							"(rect, width, height) =>",
							"(rect, x, y) =>",
							"Rect",
							" function(...args)",
							"Rect",
							"Size",
							"Point",
							"testFn = (prop, name, obj) =>",
							"n =>",
							" function()",
							" () =>",
							"Rect.prototype.toString = function(opts = {})",
							"p =>"
						]
					},
					"AQAAAAAAAAAAAAAAPAoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8CgAAUmVjdChhcmcpCiAgZmllbGQgPT4KICBhcmcgPT4KICBhcmcgPT4KUmVjdC5mcm9tU3RyaW5nID0gc3RyID0+CiAgbSA9PgpSZWN0ClJlY3QucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oZm4pClJlY3QucHJvdG90eXBlLmNvcm5lcnMgPSBmdW5jdGlvbigpClJlY3QKUmVjdC5wcm90b3R5cGUuaXNTcXVhcmUgPSBmdW5jdGlvbigpClJlY3QKUmVjdC5wcm90b3R5cGUuZ2V0QXJlYSA9IGZ1bmN0aW9uKCkKUmVjdC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbihvcHRzID0ge30pCiAgYyA9IHQgPT4KUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKICBzZXQodmFsdWUpClJlY3QKICBnZXQoKQogIHNldCh2YWx1ZSkKUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKUmVjdApSZWN0CiAgZ2V0KCkKUmVjdAogIGdldCgpCiAgcmVjdCA9PgprID0+CnYgPT4KICByZWN0ID0+CmsgPT4gdiA9PgpSZWN0CiAgZ2V0KCkKUmVjdApSZWN0CiAgZ2V0KCkKUmVjdAogIGdldCgpClJlY3QucHJvdG90eXBlLnBvaW50cyA9IGZ1bmN0aW9uKGN0b3IgPSBpdGVtcyA9PiBBcnJheS4KKGl0ZW1zKSkKUmVjdApSZWN0LnByb3RvdHlwZS5lcXVhbHMgPSBmdW5jdGlvbiguLi5hcmdzKQpQb2ludApTaXplClJlY3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oZmFjdG9yKQpSZWN0LnByb3RvdHlwZS5tdWwgPSBmdW5jdGlvbiguLi5hcmdzKQpQb2ludApTaXplClJlY3QucHJvdG90eXBlLmRpdiA9IGZ1bmN0aW9uKC4uLmFyZ3MpClBvaW50ClNpemUKUmVjdC5wcm90b3R5cGUucXVvdCA9IGZ1bmN0aW9uKC4uLmFyZ3MpClBvaW50ClNpemUKUmVjdC5wcm90b3R5cGUucHJvZCA9IGZ1bmN0aW9uKC4uLmFyZ3MpClBvaW50ClNpemUKUmVjdC5wcm90b3R5cGUub3V0c2V0ID0gZnVuY3Rpb24oLi4uYSkKUmVjdC5wcm90b3R5cGUuaW5zZXQgPSBmdW5jdGlvbiguLi5hKQpSZWN0LnByb3RvdHlwZS5pbnNpZGUgPSBmdW5jdGlvbihwb2ludCkKUmVjdC5wcm90b3R5cGUuZml0ID0gZnVuY3Rpb24ob3RoZXIsIGFsaWduID0gQWxpZ24uQ0VOVEVSIHwgQWxpZ24uTUlERExFIHwgUmVjdC5DT05UQUlOKQpTaXplCihhLCBiKSA9PgooYWNjLCBmYWN0b3IpID0+ClJlY3QucHJvdG90eXBlLnBvaW50RnJvbUNlbnRlciA9IGZ1bmN0aW9uKHBvaW50KQpQb2ludApSZWN0LnByb3RvdHlwZS50b0NTUyA9IGZ1bmN0aW9uKCkKUG9pbnQKU2l6ZQpSZWN0LnByb3RvdHlwZS50b1NWRyA9IGZ1bmN0aW9uKGZhY3RvcnkgPSAodGFnTmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pID0+ICh7IHRhZ05hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH0pLCBhdHRycyA9IHsgc3Ryb2tlOiAnIzAwMCcsIGZpbGw6ICdub25lJyB9LCBwYXJlbnQgPSBudWxsLCBwcmVjKQpSZWN0LnByb3RvdHlwZS50b1RSQkwgPSBmdW5jdGlvbigpClJlY3QucHJvdG90eXBlLnRvQXJyYXkgPSBmdW5jdGlvbigpClJlY3QucHJvdG90eXBlLnRvUG9pbnRzID0gZnVuY3Rpb24oLi4uYXJncykKKCkgPT4KcG9pbnRzID0+CnBvaW50cyA9PgpSZWN0LnByb3RvdHlwZS50b0xpbmVzID0gZnVuY3Rpb24oY3RvciA9IGxpbmVzID0+IEFycmF5LgoobGluZXMsIHBvaW50cyA9PiAKKC4uLnBvaW50cykpKQpSZWN0ClJlY3QucHJvdG90eXBlLmFsaWduID0gZnVuY3Rpb24oYWxpZ25fdG8sIGEgPSAwKQpSZWN0LnByb3RvdHlwZS5yb3VuZFRvID0gZnVuY3Rpb24oLi4uYXJncykKUmVjdC5wcm90b3R5cGUucm91bmQgPSBmdW5jdGlvbihwcmVjaXNpb24gPSAwLjAwMSwgZGlnaXRzLCB0eXBlKQpSZWN0LnByb3RvdHlwZS50b09iamVjdCA9IGZ1bmN0aW9uKGJiID0gZmFsc2UpClJlY3QucHJvdG90eXBlLmJib3ggPSBmdW5jdGlvbigpClJlY3QucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG0pClJlY3QKKCkKUmVjdApmdW5jdGlvbihkZXB0aCwgb3B0aW9ucykKUmVjdC5pc0JCb3ggPSByZWN0ID0+CiAgcHJvcCA9PgpSZWN0LmFzc2lnbiA9ICh0bywgcmVjdCkgPT4KUmVjdC5hbGlnbiA9IChyZWN0LCBhbGlnbl90bywgYSA9IDApID0+ClJlY3QKUmVjdC50b0NTUyA9IHJlY3QgPT4KUmVjdApSZWN0LnJvdW5kID0gKHJlY3QsIC4uLmFyZ3MpID0+ClJlY3QuaW5zZXQgPSAocmVjdCwgdHJibCkgPT4KUmVjdC5vdXRzZXQgPSAocmVjdCwgdHJibCkgPT4KUmVjdC5jZW50ZXIgPSByZWN0ID0+ClJlY3QuYmluZCA9IHJlY3QgPT4KUmVjdC5pbnNpZGUgPSAocmVjdCwgcG9pbnQpID0+ClJlY3QuZnJvbSA9IGZ1bmN0aW9uKG9iaikKICBmbiA9ICh2MSwgdjIpID0+ClJlY3QuZnJvbUNpcmNsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCihyZWN0LCAuLi5hcmdzKSA9PgpSZWN0ClJlY3QudG9Tb3VyY2UgPSAocmVjdCwgb3B0cyA9IHt9KSA9PgpSZWN0LmJpbmQgPSAobywgcCwgZ2VuKSA9PgoocmVjdCwgc3gsIHN5KSA9PgoocmVjdCwgd2lkdGgsIGhlaWdodCkgPT4KKHJlY3QsIHgsIHkpID0+ClJlY3QKZnVuY3Rpb24oLi4uYXJncykKUmVjdApTaXplClBvaW50CiAgdGVzdEZuID0gKHByb3AsIG5hbWUsIG9iaikgPT4KICBuID0+CmZ1bmN0aW9uKCkKKCkgPT4KUmVjdC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRzID0ge30pCiAgcCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/github-userscript.js",
						"symkeys":
						[
							[
								322,
								332
							],
							[
								365,
								380
							],
							[
								490,
								494
							]
						],
						"symlist":
						[
							"function()",
							".getRepos=() =>",
							"e =>"
						]
					},
					"AQAAAAAAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlAAAAICBmdW5jdGlvbigpCiAgLmdldFJlcG9zPSgpID0+CiAgZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "eagle2svg.js",
			"settings":
			{
				"buffer_size": 2302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 38946,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					719,
					1,
					"insert",
					{
						"characters": "0.0254"
					},
					"BgAAAAQrAAAAAAAABSsAAAAAAAAAAAAABSsAAAAAAAAGKwAAAAAAAAAAAAAGKwAAAAAAAAcrAAAAAAAAAAAAAAcrAAAAAAAACCsAAAAAAAAAAAAACCsAAAAAAAAJKwAAAAAAAAAAAAAJKwAAAAAAAAorAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQrAAAAAAAABCsAAAAAAAAAAAAAAADwvw"
				],
				[
					736,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAsrAAAAAAAADSsAAAAAAAAAAAAA/SoAAAAAAAD/KgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0qAAAAAAAACysAAAAAAAAAAAAAAADwvw"
				],
				[
					754,
					1,
					"right_delete",
					null,
					"AQAAAP0qAAAAAAAA/SoAAAAAAAACAAAALyo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0qAAAAAAAA/yoAAAAAAAAAAAAAAADwvw"
				],
				[
					762,
					2,
					"left_delete",
					null,
					"AgAAAAwrAAAAAAAADCsAAAAAAAABAAAALwsrAAAAAAAACysAAAAAAAABAAAAKg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0rAAAAAAAADSsAAAAAAAAAAAAAAADwvw"
				],
				[
					768,
					6,
					"left_delete",
					null,
					"BgAAAAkrAAAAAAAACSsAAAAAAAABAAAANAgrAAAAAAAACCsAAAAAAAABAAAANQcrAAAAAAAABysAAAAAAAABAAAAMgYrAAAAAAAABisAAAAAAAABAAAAMAUrAAAAAAAABSsAAAAAAAABAAAALgQrAAAAAAAABCsAAAAAAAABAAAAMA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAorAAAAAAAACisAAAAAAAAAAAAAAADwvw"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAQrAAAAAAAABSsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQrAAAAAAAABCsAAAAAAAAAAAAAAADwvw"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": "To"
					},
					"AgAAAAMrAAAAAAAABCsAAAAAAAAAAAAABCsAAAAAAAAFKwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMrAAAAAAAAAysAAAAAAAAAAAAAAADwvw"
				],
				[
					776,
					1,
					"left_delete",
					null,
					"AQAAAAYrAAAAAAAABisAAAAAAAABAAAAMw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcrAAAAAAAABysAAAAAAAAAAAAAAADwvw"
				],
				[
					777,
					1,
					"insert",
					{
						"characters": "0.902"
					},
					"BQAAAAYrAAAAAAAABysAAAAAAAAAAAAABysAAAAAAAAIKwAAAAAAAAAAAAAIKwAAAAAAAAkrAAAAAAAAAAAAAAkrAAAAAAAACisAAAAAAAAAAAAACisAAAAAAAALKwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYrAAAAAAAABisAAAAAAAAAAAAAAADwvw"
				],
				[
					778,
					3,
					"left_delete",
					null,
					"AwAAAAorAAAAAAAACisAAAAAAAABAAAAMgkrAAAAAAAACSsAAAAAAAABAAAAMAgrAAAAAAAACCsAAAAAAAABAAAAOQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsrAAAAAAAACysAAAAAAAAAAAAAAADwvw"
				],
				[
					779,
					1,
					"insert",
					{
						"characters": "02546"
					},
					"BQAAAAgrAAAAAAAACSsAAAAAAAAAAAAACSsAAAAAAAAKKwAAAAAAAAAAAAAKKwAAAAAAAAsrAAAAAAAAAAAAAAsrAAAAAAAADCsAAAAAAAAAAAAADCsAAAAAAAANKwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgrAAAAAAAACCsAAAAAAAAAAAAAAADwvw"
				],
				[
					780,
					1,
					"left_delete",
					null,
					"AQAAAAwrAAAAAAAADCsAAAAAAAABAAAANg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0rAAAAAAAADSsAAAAAAAAAAAAAAADwvw"
				],
				[
					791,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAgrAAAAAAAACSsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgrAAAAAAAACCsAAAAAAAAAAAAAAADwvw"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAOcsAAAAAAAA6CwAAAAAAAAAAAAA6CwAAAAAAADpLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcsAAAAAAAA5ywAAAAAAAAAAAAAAADwvw"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAOksAAAAAAAA6iwAAAAAAAAAAAAA6iwAAAAAAADrLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOksAAAAAAAA6SwAAAAAAAAAAAAAAADwvw"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": ".y1"
					},
					"AwAAAOssAAAAAAAA7CwAAAAAAAAAAAAA7CwAAAAAAADtLAAAAAAAAAAAAADtLAAAAAAAAO4sAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOssAAAAAAAA6ywAAAAAAAAAAAAAAADwvw"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAN4sAAAAAAAA3ywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4sAAAAAAAA3iwAAAAAAAAAAAAAAADwvw"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAOgsAAAAAAAA6SwAAAAAAAAAAAAA6SwAAAAAAADqLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgsAAAAAAAA6CwAAAAAAAAAAAAAAADwvw"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": " 1)"
					},
					"AwAAAOosAAAAAAAA6ywAAAAAAAAAAAAA6ywAAAAAAADsLAAAAAAAAAAAAADsLAAAAAAAAO0sAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOosAAAAAAAA6iwAAAAAAAAAAAAAAADwvw"
				],
				[
					853,
					1,
					"paste",
					null,
					"AQAAAJgsAAAAAAAA0SwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgsAAAAAAAAmCwAAAAAAAAAAAAAAADwvw"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": "step"
					},
					"BQAAAKQsAAAAAAAApSwAAAAAAAAAAAAApSwAAAAAAAClLAAAAAAAAAEAAAB5pSwAAAAAAACmLAAAAAAAAAAAAACmLAAAAAAAAKcsAAAAAAAAAAAAAKcsAAAAAAAAqCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQsAAAAAAAApSwAAAAAAAAAAAAAAADwvw"
				],
				[
					860,
					5,
					"right_delete",
					null,
					"BQAAAKssAAAAAAAAqywAAAAAAAABAAAAKKssAAAAAAAAqywAAAAAAAABAAAAaassAAAAAAAAqywAAAAAAAABAAAAIKssAAAAAAAAqywAAAAAAAABAAAAKqssAAAAAAAAqywAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKssAAAAAAAAqywAAAAAAAAAAAAAAADwvw"
				],
				[
					862,
					1,
					"left_delete",
					null,
					"AQAAALMsAAAAAAAAsywAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQsAAAAAAAAtCwAAAAAAAAAAAAAAADwvw"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAAPEsAAAAAAAA8SwAAAAAAAABAAAAew",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAACCCQA"
				],
				[
					867,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPEsAAAAAAAA8ywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEsAAAAAAAA8SwAAAAAAAAAAAAAAADwvw"
				],
				[
					868,
					1,
					"right_delete",
					null,
					"AQAAAPIsAAAAAAAA8iwAAAAAAAABAAAAfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAAADwvw"
				],
				[
					872,
					7,
					"left_delete",
					null,
					"BwAAAMssAAAAAAAAyywAAAAAAAABAAAAMcosAAAAAAAAyiwAAAAAAAABAAAAecksAAAAAAAAySwAAAAAAAABAAAALsgsAAAAAAAAyCwAAAAAAAABAAAAcscsAAAAAAAAxywAAAAAAAABAAAAIMYsAAAAAAAAxiwAAAAAAAABAAAAK8UsAAAAAAAAxSwAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwsAAAAAAAAzCwAAAAAAAAAAAAAAADwvw"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYsAAAAAAAAxywAAAAAAAAAAAAAxywAAAAAAADVLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYsAAAAAAAAxiwAAAAAAAAAAAAAAADwvw"
				],
				[
					880,
					1,
					"right_delete",
					null,
					"AgAAAAstAAAAAAAACy0AAAAAAAABAAAAKMcsAAAAAAAAxywAAAAAAAAOAAAAICAgICAgICAgICAgICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAstAAAAAAAACy0AAAAAAAAAAAAAAADwvw"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": " step"
					},
					"BQAAAAEtAAAAAAAAAi0AAAAAAAAAAAAAAi0AAAAAAAADLQAAAAAAAAAAAAADLQAAAAAAAAQtAAAAAAAAAAAAAAQtAAAAAAAABS0AAAAAAAAAAAAABS0AAAAAAAAGLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEtAAAAAAAAAS0AAAAAAAAAAAAAAADwvw"
				],
				[
					886,
					1,
					"cut",
					null,
					"AQAAAAYtAAAAAAAABi0AAAAAAAAbAAAAci5oZWlnaHQpIC8gKG53aW5kaW5ncyAtIDEp",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYtAAAAAAAAIS0AAAAAAAAAAAAAAADwvw"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAADQtAAAAAAAANS0AAAAAAAAAAAAANS0AAAAAAAA2LQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQtAAAAAAAANC0AAAAAAAAAAAAAAADwvw"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": " step"
					},
					"BQAAADYtAAAAAAAANy0AAAAAAAAAAAAANy0AAAAAAAA4LQAAAAAAAAAAAAA4LQAAAAAAADktAAAAAAAAAAAAADktAAAAAAAAOi0AAAAAAAAAAAAAOi0AAAAAAAA7LQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYtAAAAAAAANi0AAAAAAAAAAAAAAADwvw"
				],
				[
					915,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADstAAAAAAAAPC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADstAAAAAAAAOy0AAAAAAAAAAAAAAADwvw"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": " 16"
					},
					"AwAAADwtAAAAAAAAPS0AAAAAAAAAAAAAPS0AAAAAAAA+LQAAAAAAAAAAAAA+LQAAAAAAAD8tAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwtAAAAAAAAPC0AAAAAAAAAAAAAAADwvw"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD8tAAAAAAAAQC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8tAAAAAAAAPy0AAAAAAAAAAAAAAADwvw"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAtAAAAAAAAQS0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAtAAAAAAAAQC0AAAAAAAAAAAAAAADwvw"
				],
				[
					925,
					2,
					"left_delete",
					null,
					"AgAAAEAtAAAAAAAAQC0AAAAAAAABAAAAID8tAAAAAAAAPy0AAAAAAAABAAAALA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEtAAAAAAAAQS0AAAAAAAAAAAAAAADwvw"
				],
				[
					930,
					2,
					"left_delete",
					null,
					"AgAAAD4tAAAAAAAAPi0AAAAAAAABAAAANj0tAAAAAAAAPS0AAAAAAAABAAAAMQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8tAAAAAAAAPy0AAAAAAAAAAAAAAADwvw"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": "21"
					},
					"AgAAAD0tAAAAAAAAPi0AAAAAAAAAAAAAPi0AAAAAAAA/LQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0tAAAAAAAAPS0AAAAAAAAAAAAAAADwvw"
				],
				[
					953,
					1,
					"insert",
					{
						"characters": "(ä"
					},
					"AgAAAE8sAAAAAAAAUCwAAAAAAAAAAAAAUCwAAAAAAABRLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8sAAAAAAAATywAAAAAAAAAAAAAAADwvw"
				],
				[
					954,
					2,
					"left_delete",
					null,
					"AgAAAFAsAAAAAAAAUCwAAAAAAAACAAAAw6RPLAAAAAAAAE8sAAAAAAAAAQAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEsAAAAAAAAUSwAAAAAAAAAAAAAAADwvw"
				],
				[
					955,
					1,
					"insert",
					{
						"characters": "ä"
					},
					"AQAAAE8sAAAAAAAAUCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8sAAAAAAAATywAAAAAAAAAAAAAAADwvw"
				],
				[
					956,
					1,
					"left_delete",
					null,
					"AQAAAE8sAAAAAAAATywAAAAAAAACAAAAw6Q",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAsAAAAAAAAUCwAAAAAAAAAAAAAAADwvw"
				],
				[
					957,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAE8sAAAAAAAAUCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8sAAAAAAAATywAAAAAAAAAAAAAAADwvw"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAsAAAAAAAAUSwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAsAAAAAAAAUCwAAAAAAAAAAAAAAADwvw"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAGAsAAAAAAAAYSwAAAAAAAAAAAAAYSwAAAAAAABiLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAsAAAAAAAAYCwAAAAAAAAAAAAAAADwvw"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AgAAAFcsAAAAAAAAWCwAAAAAAAAAAAAAWCwAAAAAAABYLAAAAAAAAAkAAABud2luZGluZ3M",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcsAAAAAAAAYCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1011,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABlLAAAAAAAAAUAAABsZXQgcmUsAAAAAAAAZiwAAAAAAAAAAAAAZiwAAAAAAABnLAAAAAAAAAAAAABnLAAAAAAAAGgsAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGksAAAAAAAAZCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABrLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQsAAAAAAAAZCwAAAAAAAAAAAAAAABOQA"
				],
				[
					1015,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABmLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQsAAAAAAAAZCwAAAAAAAAAAAAAAABOQA"
				],
				[
					1016,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGYsAAAAAAAAaCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYsAAAAAAAAZiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAGcsAAAAAAAAaCwAAAAAAAAAAAAAaCwAAAAAAABpLAAAAAAAAAAAAABpLAAAAAAAAGosAAAAAAAAAAAAAGosAAAAAAAAaywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcsAAAAAAAAZywAAAAAAAAAAAAAAADwvw"
				],
				[
					1018,
					1,
					"insert",
					{
						"characters": " !=="
					},
					"BAAAAGssAAAAAAAAbCwAAAAAAAAAAAAAbCwAAAAAAABtLAAAAAAAAAAAAABtLAAAAAAAAG4sAAAAAAAAAAAAAG4sAAAAAAAAbywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGssAAAAAAAAaywAAAAAAAAAAAAAAADwvw"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": " uind"
					},
					"BQAAAG8sAAAAAAAAcCwAAAAAAAAAAAAAcCwAAAAAAABxLAAAAAAAAAAAAABxLAAAAAAAAHIsAAAAAAAAAAAAAHIsAAAAAAAAcywAAAAAAAAAAAAAcywAAAAAAAB0LAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8sAAAAAAAAbywAAAAAAAAAAAAAAADwvw"
				],
				[
					1020,
					3,
					"left_delete",
					null,
					"AwAAAHMsAAAAAAAAcywAAAAAAAABAAAAZHIsAAAAAAAAciwAAAAAAAABAAAAbnEsAAAAAAAAcSwAAAAAAAABAAAAaQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQsAAAAAAAAdCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1021,
					1,
					"insert",
					{
						"characters": "ndefined"
					},
					"CAAAAHEsAAAAAAAAciwAAAAAAAAAAAAAciwAAAAAAABzLAAAAAAAAAAAAABzLAAAAAAAAHQsAAAAAAAAAAAAAHQsAAAAAAAAdSwAAAAAAAAAAAAAdSwAAAAAAAB2LAAAAAAAAAAAAAB2LAAAAAAAAHcsAAAAAAAAAAAAAHcsAAAAAAAAeCwAAAAAAAAAAAAAeCwAAAAAAAB5LAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEsAAAAAAAAcSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAJcsAAAAAAAAmCwAAAAAAAAAAAAAmCwAAAAAAACeLAAAAAAAAAAAAACYLAAAAAAAAJgsAAAAAAAABgAAACAgICAgIJgsAAAAAAAAnCwAAAAAAAAAAAAAnCwAAAAAAACdLAAAAAAAAAAAAACdLAAAAAAAAKEsAAAAAAAAAAAAAJgsAAAAAAAAmCwAAAAAAAAEAAAAICAgIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcsAAAAAAAAlywAAAAAAAAAAAAAAIBxQA"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AwAAANUsAAAAAAAA1iwAAAAAAAAAAAAA1iwAAAAAAADWLAAAAAAAAAkAAABud2luZGluZ3OZLAAAAAAAAJksAAAAAAAABAAAACAgICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUsAAAAAAAA3iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1042,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AgAAAO0sAAAAAAAA7iwAAAAAAAAAAAAA7iwAAAAAAADuLAAAAAAAAAkAAABud2luZGluZ3M",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0sAAAAAAAA9iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1098,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANYsAAAAAAAA2CwAAAAAAAAAAAAA0ywAAAAAAADVLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMsAAAAAAAA1iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0tAAAAAAAATi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0tAAAAAAAATS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1113,
					1,
					"left_delete",
					null,
					"AQAAAE0tAAAAAAAATS0AAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4tAAAAAAAATi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0tAAAAAAAATi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0tAAAAAAAATS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4tAAAAAAAATy0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4tAAAAAAAATi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1116,
					1,
					"paste",
					null,
					"AQAAAE8tAAAAAAAAUy0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8tAAAAAAAATy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1135,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgsAAAAAAAAWSwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgsAAAAAAAAWCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1136,
					1,
					"insert",
					{
						"characters": " diameter"
					},
					"CQAAAFksAAAAAAAAWiwAAAAAAAAAAAAAWiwAAAAAAABbLAAAAAAAAAAAAABbLAAAAAAAAFwsAAAAAAAAAAAAAFwsAAAAAAAAXSwAAAAAAAAAAAAAXSwAAAAAAABeLAAAAAAAAAAAAABeLAAAAAAAAF8sAAAAAAAAAAAAAF8sAAAAAAAAYCwAAAAAAAAAAAAAYCwAAAAAAABhLAAAAAAAAAAAAABhLAAAAAAAAGIsAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFksAAAAAAAAWSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"CAAAAKEsAAAAAAAAoiwAAAAAAAAAAAAAoiwAAAAAAACoLAAAAAAAAAAAAACiLAAAAAAAAKIsAAAAAAAABgAAACAgICAgIKIsAAAAAAAApiwAAAAAAAAAAAAApiwAAAAAAACnLAAAAAAAAAAAAACnLAAAAAAAAKgsAAAAAAAAAAAAAKgsAAAAAAAAqSwAAAAAAAAAAAAAqSwAAAAAAACqLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEsAAAAAAAAoSwAAAAAAAAAAAAAAIBxQA"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKosAAAAAAAAqywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKosAAAAAAAAqiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1149,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKssAAAAAAAArSwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKssAAAAAAAAqywAAAAAAAAAAAAAAADwvw"
				],
				[
					1150,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKwsAAAAAAAArSwAAAAAAAAAAAAArSwAAAAAAACxLAAAAAAAAAAAAACxLAAAAAAAALIsAAAAAAAAAAAAALIsAAAAAAAAtiwAAAAAAAAAAAAArSwAAAAAAACtLAAAAAAAAAQAAAAgICAgrSwAAAAAAACzLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwsAAAAAAAArCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1155,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAALMsAAAAAAAAtCwAAAAAAAAAAAAAtCwAAAAAAAC1LAAAAAAAAAAAAAC1LAAAAAAAALYsAAAAAAAAAAAAALYsAAAAAAAAtywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMsAAAAAAAAsywAAAAAAAAAAAAAAADwvw"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALcsAAAAAAAAuCwAAAAAAAAAAAAAuCwAAAAAAAC5LAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcsAAAAAAAAtywAAAAAAAAAAAAAAADwvw"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALksAAAAAAAAuiwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALksAAAAAAAAuSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1158,
					1,
					"left_delete",
					null,
					"AQAAALksAAAAAAAAuSwAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALosAAAAAAAAuiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAALksAAAAAAAAuiwAAAAAAAAAAAAAuiwAAAAAAAC7LAAAAAAAAAAAAAC7LAAAAAAAALwsAAAAAAAAAAAAALwsAAAAAAAAvSwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALksAAAAAAAAuSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1160,
					1,
					"insert",
					{
						"characters": " Rect"
					},
					"BQAAAL0sAAAAAAAAviwAAAAAAAAAAAAAviwAAAAAAAC/LAAAAAAAAAAAAAC/LAAAAAAAAMAsAAAAAAAAAAAAAMAsAAAAAAAAwSwAAAAAAAAAAAAAwSwAAAAAAADCLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0sAAAAAAAAvSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1161,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMIsAAAAAAAAxCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIsAAAAAAAAwiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1162,
					1,
					"insert",
					{
						"characters": "0,m0"
					},
					"BAAAAMMsAAAAAAAAxCwAAAAAAAAAAAAAxCwAAAAAAADFLAAAAAAAAAAAAADFLAAAAAAAAMYsAAAAAAAAAAAAAMYsAAAAAAAAxywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMsAAAAAAAAwywAAAAAAAAAAAAAAADwvw"
				],
				[
					1163,
					2,
					"left_delete",
					null,
					"AgAAAMYsAAAAAAAAxiwAAAAAAAABAAAAMMUsAAAAAAAAxSwAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcsAAAAAAAAxywAAAAAAAAAAAAAAADwvw"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAMUsAAAAAAAAxiwAAAAAAAAAAAAAxiwAAAAAAADHLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUsAAAAAAAAxSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcsAAAAAAAAyCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcsAAAAAAAAxywAAAAAAAAAAAAAAADwvw"
				],
				[
					1166,
					1,
					"insert",
					{
						"characters": "diameter"
					},
					"CAAAAMgsAAAAAAAAySwAAAAAAAAAAAAAySwAAAAAAADKLAAAAAAAAAAAAADKLAAAAAAAAMssAAAAAAAAAAAAAMssAAAAAAAAzCwAAAAAAAAAAAAAzCwAAAAAAADNLAAAAAAAAAAAAADNLAAAAAAAAM4sAAAAAAAAAAAAAM4sAAAAAAAAzywAAAAAAAAAAAAAzywAAAAAAADQLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgsAAAAAAAAyCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGIsAAAAAAAAYywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIsAAAAAAAAYiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1170,
					1,
					"insert",
					{
						"characters": " width"
					},
					"BgAAAGMsAAAAAAAAZCwAAAAAAAAAAAAAZCwAAAAAAABlLAAAAAAAAAAAAABlLAAAAAAAAGYsAAAAAAAAAAAAAGYsAAAAAAAAZywAAAAAAAAAAAAAZywAAAAAAABoLAAAAAAAAAAAAABoLAAAAAAAAGksAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMsAAAAAAAAYywAAAAAAAAAAAAAAADwvw"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAANcsAAAAAAAA2CwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcsAAAAAAAA1ywAAAAAAAAAAAAAAADwvw"
				],
				[
					1175,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANgsAAAAAAAA2iwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgsAAAAAAAA2CwAAAAAAAAAAAAAAADwvw"
				],
				[
					1176,
					1,
					"insert",
					{
						"characters": "2*width"
					},
					"BwAAANksAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAADbLAAAAAAAANwsAAAAAAAAAAAAANwsAAAAAAAA3SwAAAAAAAAAAAAA3SwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAN8sAAAAAAAAAAAAAN8sAAAAAAAA4CwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANksAAAAAAAA2SwAAAAAAAAAAAAAAADwvw"
				],
				[
					1182,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEsAAAAAAAA4iwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEsAAAAAAAA4SwAAAAAAAAAAAAAAADwvw"
				],
				[
					1185,
					1,
					"left_delete",
					null,
					"AQAAAOEsAAAAAAAA4SwAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIsAAAAAAAA4iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1186,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOEsAAAAAAAA4iwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEsAAAAAAAA4SwAAAAAAAAAAAAAAADwvw"
				],
				[
					1187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOIsAAAAAAAA4ywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIsAAAAAAAA4iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1188,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOMsAAAAAAAA5SwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMsAAAAAAAA4ywAAAAAAAAAAAAAAADwvw"
				],
				[
					1189,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOMsAAAAAAAA4ywAAAAAAAABAAAAJ+MsAAAAAAAA4ywAAAAAAAABAAAAJw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAADwvw"
				],
				[
					1190,
					1,
					"insert",
					{
						"characters": "width*n"
					},
					"BwAAAOMsAAAAAAAA5CwAAAAAAAAAAAAA5CwAAAAAAADlLAAAAAAAAAAAAADlLAAAAAAAAOYsAAAAAAAAAAAAAOYsAAAAAAAA5ywAAAAAAAAAAAAA5ywAAAAAAADoLAAAAAAAAAAAAADoLAAAAAAAAOksAAAAAAAAAAAAAOksAAAAAAAA6iwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMsAAAAAAAA4ywAAAAAAAAAAAAAAADwvw"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOssAAAAAAAA7CwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOssAAAAAAAA6ywAAAAAAAAAAAAAAADwvw"
				],
				[
					1221,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAACAtAAAAAAAAIS0AAAAAAAAAAAAAIS0AAAAAAAAhLQAAAAAAAAEAAAByIS0AAAAAAAAiLQAAAAAAAAAAAAAiLQAAAAAAACMtAAAAAAAAAAAAACMtAAAAAAAAJC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAtAAAAAAAAIS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1228,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAJktAAAAAAAAmi0AAAAAAAAAAAAAmi0AAAAAAACaLQAAAAAAAAEAAABymi0AAAAAAACbLQAAAAAAAAAAAACbLQAAAAAAAJwtAAAAAAAAAAAAAJwtAAAAAAAAnS0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJktAAAAAAAAmi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1233,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAJAtAAAAAAAAkS0AAAAAAAAAAAAAkS0AAAAAAACRLQAAAAAAAAEAAABykS0AAAAAAACSLQAAAAAAAAAAAACSLQAAAAAAAJMtAAAAAAAAAAAAAJMtAAAAAAAAlC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAtAAAAAAAAkS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1239,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAHUtAAAAAAAAdi0AAAAAAAAAAAAAdi0AAAAAAAB2LQAAAAAAAAEAAABydi0AAAAAAAB3LQAAAAAAAAAAAAB3LQAAAAAAAHgtAAAAAAAAAAAAAHgtAAAAAAAAeS0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUtAAAAAAAAdi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1252,
					1,
					"insert",
					{
						"characters": "\n\nrect.align"
					},
					"DwAAAPIsAAAAAAAA8ywAAAAAAAAAAAAA8ywAAAAAAAD3LAAAAAAAAAAAAAD3LAAAAAAAAPgsAAAAAAAAAAAAAPgsAAAAAAAA/CwAAAAAAAAAAAAA8ywAAAAAAADzLAAAAAAAAAQAAAAgICAg+CwAAAAAAAD5LAAAAAAAAAAAAAD5LAAAAAAAAPosAAAAAAAAAAAAAPosAAAAAAAA+ywAAAAAAAAAAAAA+ywAAAAAAAD8LAAAAAAAAAAAAAD8LAAAAAAAAP0sAAAAAAAAAAAAAP0sAAAAAAAA/iwAAAAAAAAAAAAA/iwAAAAAAAD/LAAAAAAAAAAAAAD/LAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAS0AAAAAAAAAAAAAAS0AAAAAAAACLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAAADwvw"
				],
				[
					1253,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAItAAAAAAAABC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAItAAAAAAAAAi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1254,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAAFLQAAAAAAAAYtAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMtAAAAAAAAAy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1255,
					1,
					"insert",
					{
						"characters": " Point"
					},
					"BgAAAAYtAAAAAAAABy0AAAAAAAAAAAAABy0AAAAAAAAILQAAAAAAAAAAAAAILQAAAAAAAAktAAAAAAAAAAAAAAktAAAAAAAACi0AAAAAAAAAAAAACi0AAAAAAAALLQAAAAAAAAAAAAALLQAAAAAAAAwtAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYtAAAAAAAABi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1256,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAwtAAAAAAAADi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwtAAAAAAAADC0AAAAAAAAAAAAAAADwvw"
				],
				[
					1257,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAAA0tAAAAAAAADi0AAAAAAAAAAAAADi0AAAAAAAAPLQAAAAAAAAAAAAAPLQAAAAAAABAtAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0tAAAAAAAADS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1259,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABItAAAAAAAAEy0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABItAAAAAAAAEi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1270,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAM0tAAAAAAAAzi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0tAAAAAAAAzS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1272,
					1,
					"insert",
					{
						"characters": "/2)"
					},
					"AwAAANItAAAAAAAA0y0AAAAAAAAAAAAA0y0AAAAAAADULQAAAAAAAAAAAADULQAAAAAAANUtAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANItAAAAAAAA0i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1333,
					1,
					"insert",
					{
						"characters": "\nelt"
					},
					"BgAAAG4sAAAAAAAAbywAAAAAAAAAAAAAbywAAAAAAABzLAAAAAAAAAAAAABzLAAAAAAAAHUsAAAAAAAAAAAAAHUsAAAAAAAAdiwAAAAAAAAAAAAAdiwAAAAAAAB3LAAAAAAAAAAAAAB3LAAAAAAAAHgsAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4sAAAAAAAAbiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1334,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgsAAAAAAAAeSwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgsAAAAAAAAeCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1335,
					4,
					"left_delete",
					null,
					"BAAAAHgsAAAAAAAAeCwAAAAAAAABAAAAIHcsAAAAAAAAdywAAAAAAAABAAAAdHYsAAAAAAAAdiwAAAAAAAABAAAAbHUsAAAAAAAAdSwAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHksAAAAAAAAeSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1336,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAHUsAAAAAAAAdiwAAAAAAAAAAAAAdiwAAAAAAAB3LAAAAAAAAAAAAAB3LAAAAAAAAHgsAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUsAAAAAAAAdSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1337,
					1,
					"insert",
					{
						"characters": " width;"
					},
					"BwAAAHgsAAAAAAAAeSwAAAAAAAAAAAAAeSwAAAAAAAB6LAAAAAAAAAAAAAB6LAAAAAAAAHssAAAAAAAAAAAAAHssAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAAB9LAAAAAAAAAAAAAB9LAAAAAAAAH4sAAAAAAAAAAAAAH4sAAAAAAAAfywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgsAAAAAAAAeCwAAAAAAAAAAAAAAADwvw"
				],
				[
					1338,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH8sAAAAAAAAgCwAAAAAAAAAAAAAgCwAAAAAAACGLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8sAAAAAAAAfywAAAAAAAAAAAAAAADwvw"
				],
				[
					1345,
					1,
					"cut",
					null,
					"AQAAAG8sAAAAAAAAbywAAAAAAAARAAAAICAgICAgbGV0IHdpZHRoOwo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8sAAAAAAAAgCwAAAAAAAAAAAAAAAAAAA"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJIsAAAAAAAAkywAAAAAAAAAAAAAbywAAAAAAABvLAAAAAAAAAYAAAAgICAgICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIsAAAAAAAAkiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1350,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0sAAAAAAAAjywAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0sAAAAAAAAjSwAAAAAAAAAAAAAAADwvw"
				],
				[
					1351,
					1,
					"right_delete",
					null,
					"AQAAAI4sAAAAAAAAjiwAAAAAAAABAAAAfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4sAAAAAAAAjiwAAAAAAAAAAAAAAADwvw"
				],
				[
					1356,
					1,
					"left_delete",
					null,
					"AQAAAI0sAAAAAAAAjSwAAAAAAAABAAAAew",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4sAAAAAAAAjiwAAAAAAAD////////vfw"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "width"
					},
					"BgAAAN0tAAAAAAAA3i0AAAAAAAAAAAAA3i0AAAAAAADeLQAAAAAAAAQAAABzdGVw3i0AAAAAAADfLQAAAAAAAAAAAADfLQAAAAAAAOAtAAAAAAAAAAAAAOAtAAAAAAAA4S0AAAAAAAAAAAAA4S0AAAAAAADiLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0tAAAAAAAA4S0AAAAAAAAAAAAAAADwvw"
				],
				[
					1404,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0tAAAAAAAA4i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAOItAAAAAAAA4y0AAAAAAAAAAAAA4y0AAAAAAADkLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOItAAAAAAAA4i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1408,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOQtAAAAAAAA5S0AAAAAAAAAAAAA5S0AAAAAAADmLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQtAAAAAAAA5C0AAAAAAAAAAAAAAADwvw"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAP8sAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAABLQAAAAAAAAAAAAABLQAAAAAAAAItAAAAAAAAAAAAAAItAAAAAAAAAy0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8sAAAAAAAA/ywAAAAAAAAAAAAAAADwvw"
				],
				[
					1461,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMtAAAAAAAAAy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUtAAAAAAAABi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUtAAAAAAAABS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1487,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAN0tAAAAAAAA3i0AAAAAAAAAAAAA3i0AAAAAAADeLQAAAAAAAAEAAAAy",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0tAAAAAAAA3i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1490,
					1,
					"cut",
					null,
					"AQAAANMtAAAAAAAA0y0AAAAAAAALAAAAICsgc3RlcCAvIDQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4tAAAAAAAA0y0AAAAAAAAAAAAAAADwvw"
				],
				[
					1491,
					1,
					"paste",
					null,
					"AQAAANMtAAAAAAAA3i0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMtAAAAAAAA0y0AAAAAAAAAAAAAAADwvw"
				],
				[
					1496,
					1,
					"paste",
					null,
					"AQAAAMctAAAAAAAA0i0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMctAAAAAAAAxy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1499,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AgAAAMgtAAAAAAAAyS0AAAAAAAAAAAAAyS0AAAAAAADJLQAAAAAAAAEAAAAr",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMktAAAAAAAAyC0AAAAAAAAAAAAAAADwvw"
				],
				[
					1523,
					2,
					"left_delete",
					null,
					"AgAAAFgtAAAAAAAAWC0AAAAAAAABAAAAKlctAAAAAAAAVy0AAAAAAAABAAAALw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFktAAAAAAAAWS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1525,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAFUtAAAAAAAAVi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUtAAAAAAAAVS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1528,
					2,
					"left_delete",
					null,
					"AgAAAFwtAAAAAAAAXC0AAAAAAAABAAAAL1stAAAAAAAAWy0AAAAAAAABAAAAKg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0tAAAAAAAAXS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1529,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFstAAAAAAAAXS0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFstAAAAAAAAWy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1531,
					2,
					"left_delete",
					null,
					"AgAAAFwtAAAAAAAAXC0AAAAAAAABAAAAKVstAAAAAAAAWy0AAAAAAAABAAAAKA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0tAAAAAAAAXS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFstAAAAAAAAXC0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFstAAAAAAAAWy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1548,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF0tAAAAAAAAXi0AAAAAAAAAAAAAXi0AAAAAAABkLQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0tAAAAAAAAXS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1551,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAGQtAAAAAAAAZS0AAAAAAAAAAAAAZS0AAAAAAABmLQAAAAAAAAAAAABmLQAAAAAAAGctAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQtAAAAAAAAZC0AAAAAAAAAAAAAAADwvw"
				],
				[
					1552,
					1,
					"insert",
					{
						"characters": " slope="
					},
					"BwAAAGctAAAAAAAAaC0AAAAAAAAAAAAAaC0AAAAAAABpLQAAAAAAAAAAAABpLQAAAAAAAGotAAAAAAAAAAAAAGotAAAAAAAAay0AAAAAAAAAAAAAay0AAAAAAABsLQAAAAAAAAAAAABsLQAAAAAAAG0tAAAAAAAAAAAAAG0tAAAAAAAAbi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGctAAAAAAAAZy0AAAAAAAAAAAAAAADwvw"
				],
				[
					1553,
					1,
					"paste",
					null,
					"AQAAAG4tAAAAAAAAdi0AAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4tAAAAAAAAbi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1554,
					1,
					"left_delete",
					null,
					"AQAAAHUtAAAAAAAAdS0AAAAAAAABAAAANA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYtAAAAAAAAdi0AAAAAAAAAAAAAAADwvw"
				],
				[
					1555,
					1,
					"insert",
					{
						"characters": "2;"
					},
					"AgAAAHUtAAAAAAAAdi0AAAAAAAAAAAAAdi0AAAAAAAB3LQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUtAAAAAAAAdS0AAAAAAAAAAAAAAADwvw"
				],
				[
					1565,
					1,
					"paste",
					null,
					"AgAAAOItAAAAAAAA5y0AAAAAAAAAAAAA5y0AAAAAAADnLQAAAAAAAAQAAABzdGVw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOItAAAAAAAA5i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAOotAAAAAAAA6y0AAAAAAAAAAAAA6y0AAAAAAADrLQAAAAAAAAEAAAA0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOotAAAAAAAA6y0AAAAAAAAAAAAAAADwvw"
				],
				[
					1575,
					1,
					"paste",
					null,
					"AgAAAPotAAAAAAAA/y0AAAAAAAAAAAAA/y0AAAAAAAD/LQAAAAAAAAQAAABzdGVw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPotAAAAAAAA/i0AAAAAAAAAAAAAAADwvw"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAAIuAAAAAAAAAy4AAAAAAAAAAAAAAy4AAAAAAAADLgAAAAAAAAEAAAA0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIuAAAAAAAAAy4AAAAAAAAAAAAAAADwvw"
				],
				[
					1592,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHYtAAAAAAAAeC0AAAAAAAAAAAAAcy0AAAAAAAB1LQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMtAAAAAAAAdi0AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/eagle/common.js",
			"settings":
			{
				"buffer_size": 3938,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
			"settings":
			{
				"buffer_size": 112388,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/geom/rect.js",
			"settings":
			{
				"buffer_size": 16523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/geom/line.js",
			"settings":
			{
				"buffer_size": 15165,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGMpAAAAAAAAZCkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMpAAAAAAAAYykAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAGQpAAAAAAAAFSoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQpAAAAAAAAZCkAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"paste",
					null,
					"AgAAAGUpAAAAAAAAaSkAAAAAAAAAAAAAaSkAAAAAAABpKQAAAAAAAAQAAABSZWN0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUpAAAAAAAAaSkAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"paste",
					null,
					"AgAAAKIpAAAAAAAApikAAAAAAAAAAAAApikAAAAAAACmKQAAAAAAAAQAAABSZWN0",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIpAAAAAAAApikAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL8pAAAAAAAAwCkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8pAAAAAAAAvykAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMUpAAAAAAAAxikAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUpAAAAAAAAxSkAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "x2"
					},
					"AwAAAMopAAAAAAAAyykAAAAAAAAAAAAAyykAAAAAAADLKQAAAAAAAAUAAAB3aWR0aMspAAAAAAAAzCkAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMopAAAAAAAAzykAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "y2"
					},
					"AwAAANApAAAAAAAA0SkAAAAAAAAAAAAA0SkAAAAAAADRKQAAAAAAAAYAAABoZWlnaHTRKQAAAAAAANIpAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANApAAAAAAAA1ikAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABAqAAAAAAAAESoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAqAAAAAAAAECoAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/lib/repl.js",
			"settings":
			{
				"buffer_size": 60514,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/via.js",
			"settings":
			{
				"buffer_size": 2696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/wire.js",
			"settings":
			{
				"buffer_size": 1800,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC3BgAAAAAAAAsAAAAgZWxzZSB7CiAgfQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYGAAAAAAAAwQYAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0FAAAAAAAA/QUAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAACBgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4FAAAAAAAA/gUAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8EAAAAAAAAPwQAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA5gMAAAAAAADnAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUDAAAAAAAA5QMAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACjAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEDAAAAAAAAoQMAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIMDAAAAAAAAhAMAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMDAAAAAAAAgwMAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoDAAAAAAAAWgMAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACfBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwFAAAAAAAAnAUAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAAATBwAAaW1wb3J0IHsgQXJjVG8sIFRyYW5zZm9ybWF0aW9uTGlzdCB9IGZyb20gJy4uLy4uL2dlb20uanMnOwppbXBvcnQgeyBoIH0gZnJvbSAnLi4vLi4vcHJlYWN0Lm1qcyc7CmltcG9ydCB7IHVzZVZhbHVlIH0gZnJvbSAnLi4vLi4vcmVwZWF0ZXIvcmVhY3QtaG9va3MuanMnOwppbXBvcnQgeyBFbGVtZW50VG9DbGFzcywgbG9nLCBNYWtlQ29vcmRUcmFuc2Zvcm1lciwgdXNlVHJrbCB9IGZyb20gJy4uL3JlbmRlclV0aWxzLmpzJzsKCmNvbnN0IFJvdW5kVG9NaWwgPSBuID0+IE1hdGgucm91bmQobiAqIDEwMDApIC8gMTAwMDsKCmV4cG9ydCBjb25zdCBXaXJlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCBjb2xvciwgLi4ucHJvcHMgfSkgPT4gewogIGxldCB3aXJlID0KICAgIHVzZVZhbHVlKGFzeW5jIGZ1bmN0aW9uKiAoKSB7CiAgICAgIGZvciBhd2FpdChsZXQgY2hhbmdlIG9mIGRhdGEucmVwZWF0ZXIpIHsKICAgICAgICB5aWVsZCBjaGFuZ2U7CiAgICAgIH0KICAgIH0pIHx8IGRhdGE7CiAgbGV0IHsgbGFiZWxUZXh0LCB0cmFuc2Zvcm0gPSBuZXcgVHJhbnNmb3JtYXRpb25MaXN0KCkgfSA9IG9wdHM7CgogIGxldCBjb29yZEZuID0gdHJhbnNmb3JtID8gTWFrZUNvb3JkVHJhbnNmb3JtZXIodHJhbnNmb3JtKSA6IGkgPT4gaTsKICBsZXQgeyB3aWR0aCwgY3VydmUgPSAnJywgeDEsIHkxLCB4MiwgeTIgfSA9IGNvb3JkRm4od2lyZSk7CiAgbGV0IGxheWVySWQgPSBpc05hTigrd2lyZS5hdHRyaWJ1dGVzLmxheWVyKSA/IHdpcmUuYXR0cmlidXRlcy5sYXllciA6ICt3aXJlLmF0dHJpYnV0ZXMubGF5ZXI7CiAgbGV0IGxheWVyID0gd2lyZS5kb2N1bWVudC5nZXRMYXllcihsYXllcklkKSA/PyB3aXJlLmxheWVyOwogCiAgbG9nKCdXaXJlLnJlbmRlciAnLCB7IGxheWVySWQsIHdpcmUgfSk7CgogIGNvbG9yID8/PSB3aXJlLmdldENvbG9yKCk7CiAKICBsZXQgdmlzaWJsZSA9ICFsYXllciB8fCAneWVzJyA9PSB1c2VUcmtsKGxheWVyLmhhbmRsZXJzLnZpc2libGUpOwogCiAgY29uc3QgZXh0cmFTdHlsZSA9IHsKICAgICdzdHJva2UtbGluZWNhcCc6ICdyb3VuZCcsCiAgICAnc3Ryb2tlLWxpbmVqb2luJzogJ3JvdW5kJwogIH07CiAKICBsZXQgZXh0cmFQcm9wcyA9IHsKICAgIGNsYXNzOiBFbGVtZW50VG9DbGFzcyh3aXJlLCBsYXllci5uYW1lKSwKICAgIHN0cm9rZTogY29sb3IsCiAgICAnc3Ryb2tlLXdpZHRoJzogKyh3aWR0aCA9PSAwID8gMC4xIDogd2lkdGggKiAxKS50b0ZpeGVkKDMpLAogICAgLi4uKGN1cnZlID8geyAnZGF0YS1jdXJ2ZSc6IGN1cnZlIH0gOiB7fSksCiAgICAnZGF0YS1sYXllcic6IGAke2xheWVyLm51bWJlcn0gJHtsYXllci5uYW1lfWAsCiAgICBzdHlsZTogdmlzaWJsZSA/IHsgLi4uZXh0cmFTdHlsZSB9IDogeyAuLi5leHRyYVN0eWxlLCBkaXNwbGF5OiAnbm9uZScgfSwKICAgIC4uLnByb3BzCiAgfTsKICAKICBpZih0cmFuc2Zvcm0ubGVuZ3RoID4gMCkgZXh0cmFQcm9wcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07CgogIGxldCBkID0gYE0gJHt4MX0gJHt5MX0gTCAke3gyfSAke3kyfWA7CiAgIAogICBpZighaXNOYU4oK2N1cnZlKSAmJiBNYXRoLmFicygrY3VydmUpID4gMCkgewogICAgbGV0IHhkaWZmID0geDIgLSB4MSwKICAgICAgeWRpZmYgPSB5MiAtIHkxOwogICAgZCA9IGBNICR7eDF9ICR7eTF9IGA7CgogICAgZCArPSBBcmNUbyhSb3VuZFRvTWlsKHhkaWZmKSwgUm91bmRUb01pbCh5ZGlmZiksIC1jdXJ2ZSk7CiAgfSAKCiAgcmV0dXJuIGgoJ3BhdGgnLCB7CiAgICBkLAogICAgZmlsbDogJ25vbmUnLAogICAgLi4uZXh0cmFQcm9wcwogIH0pOwp9OwoAAAAAAAAAAAgHAAAAAAAAAAAAAAAAAAAAAAAACAcAAAAAAAAAAAAAAAAAAAAAAAAIBwAAAAAAAAAAAAAAAAAAAAAAAAgHAAAAAAAAAAAAAAAAAAAAAAAACAcAAAAAAAAAAAAAAAAAAAAAAAAIBwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8CAAAAAAAAvAIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
			"settings":
			{
				"buffer_size": 56743,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/grid.js",
			"settings":
			{
				"buffer_size": 3017,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAOoEAAAAAAAA7AQAAAAAAAAAAAAAQgQAAAAAAABEBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIEAAAAAAAA6gQAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAADICwAAaW1wb3J0IHsgVHJhbnNmb3JtYXRpb25MaXN0IH0gZnJvbSAnLi4vLi4vZ2VvbS90cmFuc2Zvcm1hdGlvbi5qcyc7CmltcG9ydCB7IHVzZVRya2wgfSBmcm9tICcuLi8uLi9ob29rcy91c2VUcmtsLmpzJzsKaW1wb3J0IHsgZGVmaW5lIH0gZnJvbSAnLi4vLi4vbWlzYy5qcyc7CmltcG9ydCB7IGgsIHVzZVJlZiB9IGZyb20gJy4uLy4uL3ByZWFjdC5tanMnOwppbXBvcnQgeyB1c2VWYWx1ZSB9IGZyb20gJy4uLy4uL3JlcGVhdGVyL3JlYWN0LWhvb2tzLmpzJzsKaW1wb3J0IHsgbG9nLCB1c2VBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vcmVuZGVyVXRpbHMuanMnOwoKZXhwb3J0IGNvbnN0IHVzZUdyaWQgPSBkYXRhID0+IHsKICBjb25zdCBmYWN0b3JzID0geyBpbmNoOiAyNS40LCBtbTogMSB9OwogIGNvbnN0IGNhbGNEaXN0ID0gKHZhbHVlLCB1bml0KSA9PiB7CiAgICAvLyBsb2coJ2NhbGNEaXN0OicsIHsgdmFsdWUsIHVuaXQgfSk7CiAgICBjb25zdCBmID0gZmFjdG9yc1t1bml0XTsKICAgIHJldHVybiB2YWx1ZSAqIGY7CiAgfTsKICBjb25zdCB7IGRpc3RhbmNlLCB1bml0ZGlzdCwgdW5pdCwgc3R5bGUsIG11bHRpcGxlLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSwgYWx0dW5pdGRpc3QsIGFsdHVuaXQgfSA9IHVzZUF0dHJpYnV0ZXMoZGF0YSk7CiAgLy9sb2coJ3VzZUdyaWQ6JywgeyBkaXN0YW5jZSwgdW5pdGRpc3QsIHVuaXQgfSk7CiAgbGV0IHJlc3VsdCA9IHsKICAgIGRpc3RhbmNlOiBjYWxjRGlzdCgrZGlzdGFuY2UsIHVuaXRkaXN0IHx8IHVuaXQpLAogICAgYWx0ZGlzdGFuY2U6IGNhbGNEaXN0KCthbHRkaXN0YW5jZSwgYWx0dW5pdGRpc3QgfHwgYWx0dW5pdCksCiAgICBkaXNwbGF5OiBkaXNwbGF5ID09ICd5ZXMnLAogICAgc3R5bGUsCiAgICBtdWx0aXBsZTogK211bHRpcGxlCiAgfTsKICByZXR1cm4gcmVzdWx0Owp9OwoKZXhwb3J0IGNvbnN0IFBhdHRlcm4gPSAoeyBkYXRhLCBpZCA9ICdwYXR0ZXJuJywgYXR0cnMgPSB7IGNvbG9yOiAnIzAwMDBhYScsIHdpZHRoOiAwLjAxIH0sIC4uLnByb3BzIH0pID0+IHsKICBsb2coJ1BhdHRlcm4ucmVuZGVyICcsIHsgZGF0YSwgaWQsIGF0dHJzLCBwcm9wcyB9KTsKIC8qIGRhdGEgPQogICAgdXNlVmFsdWUoYXN5bmMgZnVuY3Rpb24qICgpIHsKICAgICAgZm9yIGF3YWl0KGxldCBjaGFuZ2Ugb2YgZGF0YS5yZXBlYXRlcikgewogICAgICAgIC8vbG9nKCdjaGFuZ2U6JywgY2hhbmdlKTsKICAgICAgICB5aWVsZCBjaGFuZ2U7CiAgICAgIH0KICAgIH0pIHx8IGRhdGE7Ki8KICBjb25zdCB7IGRpc3RhbmNlID0gMC4xLCBzdHlsZSwgbXVsdGlwbGUgPSAxLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSB9ID0gdXNlR3JpZChkYXRhKTsKCiAgLy9sb2coJ1BhdHRlcm4ucmVuZGVyOicsIHsgZGlzdGFuY2UsIHN0eWxlLCBtdWx0aXBsZSwgZGlzcGxheSwgYWx0ZGlzdGFuY2UgfSk7CiAgbGV0IHBhdHRlcm4gPSB1c2VUcmtsKGF0dHJzKTsKCiAgbGV0IHsgd2lkdGgsIGNvbG9yID0gJyMwMDAwYWEnIH0gPSBwYXR0ZXJuOwogIGxldCByZWYgPQogICAgdXNlUmVmKCkgfHwKICAgICgoKSA9PiB7CiAgICAgIGxldCBjdXJyZW50OwogICAgICBsZXQgcmV0ID0gZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICBsb2coJ1BhdHRlcm4ucmVuZGVyIHZhbHVlID0nLCB2YWx1ZSk7CiAgICAgICAgY3VycmVudCA9IHZhbHVlOwogICAgICB9OwogICAgICBkZWZpbmUocmV0LCB7CiAgICAgICAgZ2V0IGN1cnJlbnQoKSB7CiAgICAgICAgICByZXR1cm4gY3VycmVudDsKICAgICAgICB9LAogICAgICAgIHNldCBjdXJyZW50KHZhbHVlKSB7CiAgICAgICAgICByZXQodmFsdWUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXQ7CiAgICB9KSgpOwoKICBpZihyZWYuY3VycmVudCkgbG9nKCdQYXR0ZXJuLnJlbmRlciByZWYuY3VycmVudCA9JywgcmVmLmN1cnJlbnQpOwoKICBjb25zdCBzaXplID0gZGlzdGFuY2UgKiBtdWx0aXBsZTsKICBsb2coJ1BhdHRlcm4ucmVuZGVyICcsIHsgd2lkdGgsIGNvbG9yLCBzaXplIH0pOwoKICByZXR1cm4gaCgKICAgICdwYXR0ZXJuJywKICAgIHsgaWQsIHdpZHRoOiBzaXplLCBoZWlnaHQ6IHNpemUsIHBhdHRlcm5Vbml0czogJ3VzZXJTcGFjZU9uVXNlJyB9LAogICAgaCgncGF0aCcsIHsKICAgICAgcmVmLAogICAgICBkOiBgTSAke3NpemV9LDAgTCAwLDAgTCAwLCR7c2l6ZX1gLAogICAgICBmaWxsOiAnbm9uZScsCiAgICAgIHN0cm9rZTogY29sb3IsCiAgICAgIC8vICAndmVjdG9yLWVmZmVjdCc6ICdub24tc2NhbGluZy1zdHJva2UnLAogICAgICAnc3Ryb2tlLXdpZHRoJzogc3R5bGUgPT0gJ2RvdHMnID8gd2lkdGggKiAyIDogd2lkdGgsCiAgICAgICdzdHJva2UtZGFzaGFycmF5Jzogc3R5bGUgPT0gJ2RvdHMnID8gYCR7d2lkdGh9ICAke3NpemUgKiA0fWAgOiBgJHtzaXplICogMn1gCiAgICB9KQogICk7Cn07CgpleHBvcnQgY29uc3QgR3JpZCA9ICh7IGRhdGEsIHJlY3QsIGlkLCBhdHRycyA9IHsgdmlzaWJsZTogdHJ1ZSB9LCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+IHsKICBsZXQgeyB0cmFuc2Zvcm0gPSBuZXcgVHJhbnNmb3JtYXRpb25MaXN0KCkgfSA9IG9wdHM7CiAgY29uc3QgeyBkaXN0YW5jZSwgc3R5bGUsIG11bHRpcGxlLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSB9ID0gdXNlR3JpZChkYXRhKTsKICBsb2coJ0dyaWQucmVuZGVyOicsIHsgZGF0YSwgcmVjdCwgYXR0cnMsIG9wdHMsIHByb3BzIH0pOwoKICBsZXQgZ3JpZCA9IHR5cGVvZiBhdHRycyA9PSAnZnVuY3Rpb24nID8gYXR0cnMoKSA6IGF0dHJzOwogIC8vbGV0IHJlZiA9IHVzZVJlZigpOwogIGxvZygnR3JpZC5yZW5kZXIgJywgeyBncmlkIH0pOwogIHJldHVybiBoKCdyZWN0JywgewogICAgLy9yZWYsCiAgICBzdHJva2U6ICdub25lJywKICAgIGZpbGw6IGB1cmwoIyR7aWR9KWAsCiAgICBzdHlsZTogZ3JpZC52aXNpYmxlID8ge30gOiB7IGRpc3BsYXk6ICdub25lJyB9LAogICAgLi4ucmVjdC50b09iamVjdCgpLAogICAgdHJhbnNmb3JtCiAgfSk7Cn07CgAAAAAAAAAAyQsAAAAAAAAAAAAAAAAAAAAAAADJCwAAAAAAAAAAAAAAAAAAAAAAAMkLAAAAAAAAAAAAAAAAAAAAAAAAyQsAAAAAAAAAAAAAAAAAAAAAAADJCwAAAAAAAAAAAAAAAAAAAAAAAMkLAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQEAAAAAAAA7AQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/eagle/schematicRenderer.js",
			"settings":
			{
				"buffer_size": 6156,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAD0UAAAAAAAAPRQAAAAAAAACAAAAICA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0UAAAAAAAAPRQAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAD0UAAAAAAAAPhQAAAAAAAAAAAAAPhQAAAAAAAA/FAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0UAAAAAAAAPRQAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8UAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABCFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8UAAAAAAAAPxQAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAAwYAAAAAAAADRgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIUAAAAAAAAQhQAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAF4UAAAAAAAAXhQAAAAAAAAEAAAAbGlzdF0UAAAAAAAAXRQAAAAAAAABAAAALg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4UAAAAAAAAYhQAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAFMUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABVFAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMUAAAAAAAAUxQAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAFQUAAAAAAAAVBQAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUUAAAAAAAAVRQAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4UAAAAAAAAXhQAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGEUAAAAAAAAYhQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEUAAAAAAAAYRQAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGIUAAAAAAAAZBQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIUAAAAAAAAYhQAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGUUAAAAAAAAZhQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUUAAAAAAAAZRQAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0UAAAAAAAAPRQAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"Pretty Shell: Minify"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/an-tronics/eagle/github-userscript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js",
		"/home/janos/Projects/plot-cv/doc-scanner.js",
		"/home/janos/Projects/plot-cv/config.js",
		"/home/janos/Projects/plot-cv/deconflict.js",
		"/home/janos/Projects/plot-cv/debuggerprotocol.js",
		"/home/janos/Projects/plot-cv/debugger.js",
		"/home/janos/Projects/plot-cv/convert-imports.js",
		"/home/janos/Projects/plot-cv/esparse.js",
		"/home/janos/Projects/plot-cv/extract-structs.js",
		"/home/janos/Projects/plot-cv/fetch-post-prices.js",
		"/home/janos/Projects/plot-cv/ffi.js",
		"/home/janos/Projects/plot-cv/fontsample.js",
		"/home/janos/Projects/plot-cv/grammar-arith.js",
		"/home/janos/Projects/plot-cv/grammar-C.js",
		"/home/janos/Projects/plot-cv/grammar-c.js",
		"/home/janos/Projects/plot-cv/grammar-css3.js",
		"/home/janos/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Projects/plot-cv/grammar-INI.js",
		"/home/janos/Projects/plot-cv/httpd.js",
		"/home/janos/Projects/plot-cv/ini-grammar.js",
		"/home/janos/Projects/plot-cv/io-helpers.js",
		"/home/janos/Projects/plot-cv/list-directory.js",
		"/home/janos/Projects/plot-cv/list-exports.js",
		"/home/janos/Projects/plot-cv/list-exports2.js",
		"/home/janos/Projects/plot-cv/load-ast.js",
		"/home/janos/Projects/plot-cv/meriyah.js",
		"/home/janos/Projects/plot-cv/workertest.js",
		"/home/janos/Projects/plot-cv/worker.js",
		"/home/janos/Projects/plot-cv/userscript-test.js",
		"/home/janos/Projects/plot-cv/upload.html",
		"/home/janos/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/untar.c",
		"/home/janos/Projects/plot-cv/tmpx.js",
		"/home/janos/Projects/plot-cv/test-xml.js",
		"/home/janos/Projects/plot-cv/test-wru.js",
		"/home/janos/Projects/plot-cv/test-websocket.js",
		"/home/janos/Projects/plot-cv/test-voronoi.js",
		"/home/janos/Projects/plot-cv/test-video.js",
		"/home/janos/Projects/plot-cv/test-util.js",
		"/home/janos/Projects/plot-cv/test-utf8.js",
		"/home/janos/Projects/plot-cv/test-umat.js",
		"/home/janos/Projects/plot-cv/test-trkl.js",
		"/home/janos/Projects/plot-cv/test-sqlite3.js",
		"/home/janos/Projects/plot-cv/test-spawn.js",
		"/home/janos/Projects/plot-cv/test-sockets.js",
		"/home/janos/Projects/plot-cv/test-shparse.js",
		"/home/janos/Projects/plot-cv/test-rpc.js",
		"/home/janos/Projects/plot-cv/test-repl.js",
		"/home/janos/Projects/plot-cv/test-renderer.js",
		"/home/janos/Projects/plot-cv/test-readline.js",
		"/home/janos/Projects/plot-cv/test-readdir.js",
		"/home/janos/Projects/plot-cv/test-quickjs.js",
		"/home/janos/Projects/plot-cv/test-proxy.js",
		"/home/janos/Projects/plot-cv/test-pointlist.js",
		"/home/janos/Projects/plot-cv/test-pointer.js",
		"/home/janos/Projects/plot-cv/test-path.js",
		"/home/janos/Projects/plot-cv/test-parsexml.js",
		"/home/janos/Projects/plot-cv/test-parse.js",
		"/home/janos/Projects/plot-cv/test-opencv.js",
		"/home/janos/Projects/plot-cv/test-octagon.js",
		"/home/janos/Projects/plot-cv/test-ngql.js",
		"/home/janos/Projects/plot-cv/test-net.js",
		"/home/janos/Projects/plot-cv/test-mmap.js",
		"/home/janos/Projects/plot-cv/test-minnet.js",
		"/home/janos/Projects/plot-cv/test-meriyah.js",
		"/home/janos/Projects/plot-cv/ol-marker.js",
		"/home/janos/Projects/plot-cv/ol-map.js",
		"/home/janos/Projects/plot-cv/make-bitmap.js",
		"/home/janos/Projects/plot-cv/list-proxies.js",
		"/home/janos/Projects/plot-cv/eagle2gerber.js",
		"/home/janos/Projects/plot-cv/test-exception.js",
		"/home/janos/Projects/plot-cv/test-childprocess.js",
		"/home/janos/Projects/plot-cv/test-bjson.js",
		"/home/janos/Projects/plot-cv/test-ansitrunc.c",
		"/home/janos/Projects/plot-cv/svg-scale.js",
		"/home/janos/Projects/plot-cv/server.js",
		"/home/janos/Projects/plot-cv/search-engine.js",
		"/home/janos/Projects/plot-cv/resolve-imports2.js",
		"/home/janos/Projects/plot-cv/readfile.js",
		"/home/janos/Projects/plot-cv/read-deps.js",
		"/home/janos/Projects/plot-cv/react-simple-code-editor.js",
		"/home/janos/Projects/plot-cv/pcb-conversion.js",
		"/home/janos/Projects/plot-cv/knopf-schwarz-o12mm-cliff-cl178862.html",
		"/home/janos/Projects/plot-cv/dom-helpers.js",
		"/home/janos/Projects/pictest/traced_back.svg",
		"/home/janos/Projects/plot-cv/param.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/output.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/janos/Projects/plot-cv/lib/stream/utils.js",
		"/home/janos/Projects/plot-cv/svg-crop-pad.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_png.js"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"align = ",
			"align",
			"round",
			"roun",
			"round",
			"<wire",
			"Line",
			"\\bLine\\b",
			"loadSaveOptions",
			"new REPL",
			"config",
			"width?=\"0\\.0",
			"width?=\"",
			"useValue",
			"await ",
			"client_finalize",
			"onClose",
			"exception",
			"current_exce",
			"}\\n\n",
			"}\\n\n([^\\n])",
			"}\\n([^\\n])",
			"}\\n\n([^\\n])",
			"remove",
			"ZipFolder",
			"<<<<",
			"ExecTool",
			"outdir",
			"'str'",
			"optionsArray",
			"Bottom",
			"compact",
			"boxes",
			"join",
			"\nfunction outputBytes(mat) {\n  return '['+[...rowIterator(mat)].map(a => '[ '+[...a].map(n => '0x'+n.toString(16).padStart(2, \n'0')).join(',')+' ],').join('\\n')+']';\n}",
			"cv\\.",
			"writeROI",
			"cvtColor",
			"g",
			"=> ",
			"));",
			"mod\\(",
			"toMap",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
							"function_name_status_row": 9,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698828353.71,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "eagle2svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2302,
						"regions":
						{
						},
						"selection":
						[
							[
								1040,
								1040
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 36,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699633131.49,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38946,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 410,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699633134.11,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12037.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/eagle/common.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3938,
						"regions":
						{
						},
						"selection":
						[
							[
								1142,
								1142
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 44,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699633136.76,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1600.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112388,
						"regions":
						{
						},
						"selection":
						[
							[
								84799,
								84799
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1118,
							"show_line_column": "disabled",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tabs_extra_last_activated": 1699633137.91,
							"tabs_extra_last_activated_sheet_index": 3
						},
						"translation.x": 0.0,
						"translation.y": 22017.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/geom/rect.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16523,
						"regions":
						{
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										9579,
										9583
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										9446,
										9446
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								10772,
								10777
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 375,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699633139.54,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6992.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/geom/line.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15165,
						"regions":
						{
						},
						"selection":
						[
							[
								10452,
								10461
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 337,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698866506.22,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6252.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/qjs-modules/lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60514,
						"regions":
						{
						},
						"selection":
						[
							[
								7767,
								7782
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 241,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698866506.68,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4398.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/eagle/components/via.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2696,
						"regions":
						{
						},
						"selection":
						[
							[
								857,
								857
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 20,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698971429.65,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/eagle/components/wire.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1800,
						"regions":
						{
						},
						"selection":
						[
							[
								639,
								700
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 17,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698866505.57,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 120.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56743,
						"regions":
						{
						},
						"selection":
						[
							[
								20699,
								20798
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 220,
							"show_line_column": "disabled",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tabs_extra_last_activated": 1699975176.74,
							"tabs_extra_last_activated_sheet_index": 9
						},
						"translation.x": 0.0,
						"translation.y": 2440.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/eagle/components/grid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3017,
						"regions":
						{
						},
						"selection":
						[
							[
								1092,
								1260
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 28,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698866502.92,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/eagle/schematicRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6156,
						"regions":
						{
						},
						"selection":
						[
							[
								5181,
								5181
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698866503.92,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2195.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
