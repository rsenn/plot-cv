{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					105,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAV2luZG93KHdpZHRoID0gMTI4MCwgaGVpZ2h0ID0gOTAwKQogIGJlZ2luKCkKICBlbmQoKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICAuaGFuZGxlQ2hhck1vZHMgPSAoY2hhciwgbW9kcykgPT4KKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KQm9hcmRGcm9tU2NoZW1hdGljKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBmID0gMSwgciA9IDAuNSkKSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkLCBpZ25vcmUgPSAvXihHTkR8Wy0rXVswLTldK1YpJC8pCkRyYXdHcmFwaChnLCB3KQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/src/m_math.h",
						"symkeys":
						[
							[
								1618,
								1626
							],
							[
								1636,
								1650
							],
							[
								1716,
								1721
							],
							[
								1775,
								1779
							],
							[
								1818,
								1830
							],
							[
								1862,
								1874
							],
							[
								1922,
								1927
							],
							[
								1989,
								1994
							],
							[
								2056,
								2061
							],
							[
								2121,
								2128
							],
							[
								2217,
								2231
							],
							[
								2319,
								2325
							],
							[
								2419,
								2425
							],
							[
								2463,
								2469
							],
							[
								2562,
								2568
							],
							[
								2596,
								2605
							],
							[
								2634,
								2643
							],
							[
								2710,
								2719
							],
							[
								2748,
								2754
							],
							[
								2807,
								2813
							],
							[
								2933,
								2939
							],
							[
								2983,
								2989
							],
							[
								3042,
								3048
							],
							[
								3168,
								3174
							],
							[
								3218,
								3230
							],
							[
								3286,
								3298
							],
							[
								3373,
								3379
							],
							[
								3438,
								3444
							],
							[
								3470,
								3476
							],
							[
								3526,
								3532
							],
							[
								3598,
								3604
							],
							[
								3686,
								3695
							],
							[
								3757,
								3766
							],
							[
								3848,
								3857
							],
							[
								3959,
								3965
							],
							[
								4053,
								4059
							],
							[
								4135,
								4141
							],
							[
								4217,
								4223
							],
							[
								4311,
								4317
							],
							[
								4393,
								4399
							],
							[
								4475,
								4487
							],
							[
								4510,
								4519
							],
							[
								4666,
								4678
							],
							[
								4701,
								4710
							],
							[
								4932,
								4944
							],
							[
								4967,
								4976
							],
							[
								5150,
								5158
							],
							[
								5205,
								5213
							],
							[
								5361,
								5367
							],
							[
								5440,
								5446
							],
							[
								5512,
								5518
							],
							[
								5585,
								5591
							],
							[
								5664,
								5670
							],
							[
								5736,
								5742
							],
							[
								5809,
								5815
							],
							[
								5888,
								5894
							],
							[
								5960,
								5966
							],
							[
								6033,
								6039
							],
							[
								6112,
								6118
							],
							[
								6184,
								6190
							],
							[
								6285,
								6304
							],
							[
								6396,
								6407
							],
							[
								6417,
								6436
							],
							[
								6482,
								6493
							],
							[
								6526,
								6538
							],
							[
								6571,
								6578
							],
							[
								6631,
								6637
							],
							[
								6657,
								6664
							],
							[
								6705,
								6726
							],
							[
								6790,
								6816
							],
							[
								6912,
								6927
							],
							[
								6974,
								6989
							],
							[
								7016,
								7032
							],
							[
								7078,
								7098
							],
							[
								7158,
								7179
							],
							[
								7227,
								7237
							],
							[
								7298,
								7310
							],
							[
								7381,
								7406
							],
							[
								7511,
								7526
							],
							[
								7638,
								7653
							],
							[
								7679,
								7697
							],
							[
								7772,
								7784
							],
							[
								7885,
								7898
							],
							[
								7980,
								7998
							],
							[
								8051,
								8071
							],
							[
								8130,
								8151
							],
							[
								8198,
								8210
							],
							[
								8257,
								8267
							],
							[
								8325,
								8341
							],
							[
								8385,
								8409
							],
							[
								8453,
								8467
							],
							[
								8511,
								8531
							],
							[
								8579,
								8593
							],
							[
								8660,
								8682
							],
							[
								8749,
								8766
							],
							[
								8833,
								8850
							],
							[
								8928,
								8958
							],
							[
								9038,
								9063
							],
							[
								9133,
								9150
							],
							[
								9191,
								9211
							],
							[
								9262,
								9287
							],
							[
								9357,
								9389
							],
							[
								9503,
								9538
							],
							[
								9663,
								9683
							],
							[
								9785,
								9805
							],
							[
								9846,
								9873
							],
							[
								9974,
								10002
							],
							[
								10104,
								10129
							],
							[
								10220,
								10250
							],
							[
								10655,
								10674
							],
							[
								10856,
								10867
							],
							[
								11057,
								11069
							],
							[
								11189,
								11196
							],
							[
								11313,
								11319
							],
							[
								11388,
								11395
							],
							[
								11465,
								11486
							],
							[
								11733,
								11759
							],
							[
								12075,
								12090
							],
							[
								12253,
								12269
							],
							[
								12562,
								12582
							],
							[
								12865,
								12886
							],
							[
								13371,
								13381
							],
							[
								13750,
								13762
							],
							[
								14725,
								14750
							],
							[
								15147,
								15162
							],
							[
								15300,
								15318
							],
							[
								16120,
								16132
							],
							[
								16762,
								16775
							],
							[
								17409,
								17427
							],
							[
								17574,
								17594
							],
							[
								18295,
								18316
							],
							[
								18842,
								18854
							],
							[
								18975,
								18985
							],
							[
								20189,
								20205
							],
							[
								20577,
								20601
							],
							[
								23908,
								23922
							],
							[
								24059,
								24079
							],
							[
								25055,
								25069
							],
							[
								25366,
								25388
							],
							[
								25685,
								25702
							],
							[
								26038,
								26055
							],
							[
								26517,
								26534
							],
							[
								26898,
								26918
							],
							[
								27113,
								27143
							],
							[
								27742,
								27767
							],
							[
								27951,
								27971
							],
							[
								28166,
								28191
							],
							[
								28422,
								28454
							],
							[
								29420,
								29455
							],
							[
								29853,
								29880
							],
							[
								30210,
								30238
							],
							[
								30889,
								30914
							],
							[
								32104,
								32134
							],
							[
								33739,
								33755
							],
							[
								33921,
								33941
							],
							[
								34739,
								34753
							],
							[
								34975,
								34988
							],
							[
								35272,
								35286
							],
							[
								35510,
								35523
							],
							[
								35809,
								35823
							],
							[
								36045,
								36058
							],
							[
								36282,
								36302
							]
						],
						"symlist":
						[
							"M_MATH_H",
							"M_MATH_VERSION",
							"MMAPI",
							"M_PI",
							"M_DEG_TO_RAD",
							"M_RAD_TO_DEG",
							"M_MIN",
							"M_MAX",
							"M_ABS",
							"M_CLAMP",
							"M_ISPOWEROFTWO",
							"float3",
							"M_DOT2",
							"M_DOT3",
							"M_DOT4",
							"M_LENGHT2",
							"M_LENGHT3",
							"M_LENGHT4",
							"M_MIN2",
							"M_MIN3",
							"M_MIN4",
							"M_MAX2",
							"M_MAX3",
							"M_MAX4",
							"M_NORMALIZE2",
							"M_NORMALIZE4",
							"float2",
							"float4",
							"M_DOT2",
							"M_DOT3",
							"M_DOT4",
							"M_LENGHT2",
							"M_LENGHT3",
							"M_LENGHT4",
							"M_MIN2",
							"M_MIN3",
							"M_MIN4",
							"M_MAX2",
							"M_MAX3",
							"M_MAX4",
							"M_NORMALIZE2",
							"M_LENGHT2",
							"M_NORMALIZE4",
							"M_LENGHT4",
							"M_NORMALIZE3",
							"M_LENGHT3",
							"M_CROSS2",
							"M_CROSS3",
							"M_ADD2",
							"M_ADD3",
							"M_ADD4",
							"M_SUB2",
							"M_SUB3",
							"M_SUB4",
							"M_MUL2",
							"M_MUL3",
							"M_MUL4",
							"M_DIV2",
							"M_DIV3",
							"M_DIV4",
							"m_next_power_of_two",
							"m_rand_desc",
							"M_RAND_DESC_DEFAULT",
							"m_rand_user",
							"m_randf_user",
							"m_srand",
							"m_rand",
							"m_randf",
							"m_interpolation_cubic",
							"m_interpolation_catmullrom",
							"M_QUAT_IDENTITY",
							"m_quat_identity",
							"m_quat_normalize",
							"m_quat_rotation_axis",
							"m_quat_rotation_euler",
							"m_quat_mul",
							"m_quat_slerp",
							"m_quat_extract_axis_angle",
							"M_MAT4_IDENTITY",
							"m_mat4_identity",
							"m_mat4_perspective",
							"m_mat4_ortho",
							"m_mat4_lookat",
							"m_mat4_translation",
							"m_mat4_rotation_axis",
							"m_mat4_rotation_euler",
							"m_mat4_scale",
							"m_mat4_mul",
							"m_mat4_transpose",
							"m_mat4_inverse_transpose",
							"m_mat4_inverse",
							"m_mat4_extract_euler",
							"m_mat4_rotate3",
							"m_mat4_inverse_rotate3",
							"m_mat4_transform3",
							"m_mat4_transform4",
							"m_2d_line_to_line_intersection",
							"m_2d_box_to_box_collision",
							"m_2d_polygon_area",
							"m_2d_polyline_length",
							"m_3d_box_to_box_collision",
							"m_3d_ray_box_intersection_in_out",
							"m_3d_ray_sphere_intersection_in_out",
							"m_3d_tri_box_overlap",
							"m_3d_polyline_length",
							"m_3d_ray_plane_intersection",
							"m_3d_ray_sphere_intersection",
							"m_3d_ray_box_intersection",
							"m_3d_ray_triangle_intersection",
							"m_next_power_of_two",
							"m_rand_user",
							"m_randf_user",
							"m_srand",
							"m_rand",
							"m_randf",
							"m_interpolation_cubic",
							"m_interpolation_catmullrom",
							"m_quat_identity",
							"m_quat_normalize",
							"m_quat_rotation_axis",
							"m_quat_rotation_euler",
							"m_quat_mul",
							"m_quat_slerp",
							"m_quat_extract_axis_angle",
							"m_mat4_identity",
							"m_mat4_perspective",
							"m_mat4_ortho",
							"m_mat4_lookat",
							"m_mat4_translation",
							"m_mat4_rotation_axis",
							"m_mat4_rotation_euler",
							"m_mat4_scale",
							"m_mat4_mul",
							"m_mat4_transpose",
							"m_mat4_inverse_transpose",
							"m_mat4_inverse",
							"m_mat4_extract_euler",
							"m_mat4_rotate3",
							"m_mat4_inverse_rotate3",
							"m_mat4_transform3",
							"m_mat4_transform4",
							"m_2d_polygon_area",
							"m_2d_polyline_length",
							"m_2d_line_to_line_intersection",
							"m_2d_box_to_box_collision",
							"m_3d_polyline_length",
							"m_3d_box_to_box_collision",
							"m_3d_ray_box_intersection_in_out",
							"m_3d_ray_sphere_intersection_in_out",
							"m_3d_ray_plane_intersection",
							"m_3d_ray_sphere_intersection",
							"m_3d_ray_box_intersection",
							"m_3d_ray_triangle_intersection",
							"M_FIND_MIN_MAX_3",
							"m__plane_box_overlap",
							"M_AXISTEST_X01",
							"M_AXISTEST_X2",
							"M_AXISTEST_Y02",
							"M_AXISTEST_Y1",
							"M_AXISTEST_Z12",
							"M_AXISTEST_Z0",
							"m_3d_tri_box_overlap"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAAaAoAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABoCgAATV9NQVRIX0gKTV9NQVRIX1ZFUlNJT04KTU1BUEkKTV9QSQpNX0RFR19UT19SQUQKTV9SQURfVE9fREVHCk1fTUlOCk1fTUFYCk1fQUJTCk1fQ0xBTVAKTV9JU1BPV0VST0ZUV08KICBmbG9hdDMKTV9ET1QyCk1fRE9UMwpNX0RPVDQKTV9MRU5HSFQyCk1fTEVOR0hUMwpNX0xFTkdIVDQKTV9NSU4yCk1fTUlOMwpNX01JTjQKTV9NQVgyCk1fTUFYMwpNX01BWDQKTV9OT1JNQUxJWkUyCk1fTk9STUFMSVpFNAogIGZsb2F0MgogIGZsb2F0NApNX0RPVDIKTV9ET1QzCk1fRE9UNApNX0xFTkdIVDIKTV9MRU5HSFQzCk1fTEVOR0hUNApNX01JTjIKTV9NSU4zCk1fTUlONApNX01BWDIKTV9NQVgzCk1fTUFYNApNX05PUk1BTElaRTIKTV9MRU5HSFQyCk1fTk9STUFMSVpFNApNX0xFTkdIVDQKTV9OT1JNQUxJWkUzCk1fTEVOR0hUMwpNX0NST1NTMgpNX0NST1NTMwpNX0FERDIKTV9BREQzCk1fQURENApNX1NVQjIKTV9TVUIzCk1fU1VCNApNX01VTDIKTV9NVUwzCk1fTVVMNApNX0RJVjIKTV9ESVYzCk1fRElWNAogIG1fbmV4dF9wb3dlcl9vZl90d28KICBtX3JhbmRfZGVzYwpNX1JBTkRfREVTQ19ERUZBVUxUCiAgbV9yYW5kX3VzZXIKICBtX3JhbmRmX3VzZXIKICBtX3NyYW5kCiAgbV9yYW5kCiAgbV9yYW5kZgogIG1faW50ZXJwb2xhdGlvbl9jdWJpYwogIG1faW50ZXJwb2xhdGlvbl9jYXRtdWxscm9tCk1fUVVBVF9JREVOVElUWQogIG1fcXVhdF9pZGVudGl0eQogIG1fcXVhdF9ub3JtYWxpemUKICBtX3F1YXRfcm90YXRpb25fYXhpcwogIG1fcXVhdF9yb3RhdGlvbl9ldWxlcgogIG1fcXVhdF9tdWwKICBtX3F1YXRfc2xlcnAKICBtX3F1YXRfZXh0cmFjdF9heGlzX2FuZ2xlCk1fTUFUNF9JREVOVElUWQogIG1fbWF0NF9pZGVudGl0eQogIG1fbWF0NF9wZXJzcGVjdGl2ZQogIG1fbWF0NF9vcnRobwogIG1fbWF0NF9sb29rYXQKICBtX21hdDRfdHJhbnNsYXRpb24KICBtX21hdDRfcm90YXRpb25fYXhpcwogIG1fbWF0NF9yb3RhdGlvbl9ldWxlcgogIG1fbWF0NF9zY2FsZQogIG1fbWF0NF9tdWwKICBtX21hdDRfdHJhbnNwb3NlCiAgbV9tYXQ0X2ludmVyc2VfdHJhbnNwb3NlCiAgbV9tYXQ0X2ludmVyc2UKICBtX21hdDRfZXh0cmFjdF9ldWxlcgogIG1fbWF0NF9yb3RhdGUzCiAgbV9tYXQ0X2ludmVyc2Vfcm90YXRlMwogIG1fbWF0NF90cmFuc2Zvcm0zCiAgbV9tYXQ0X3RyYW5zZm9ybTQKICBtXzJkX2xpbmVfdG9fbGluZV9pbnRlcnNlY3Rpb24KICBtXzJkX2JveF90b19ib3hfY29sbGlzaW9uCiAgbV8yZF9wb2x5Z29uX2FyZWEKICBtXzJkX3BvbHlsaW5lX2xlbmd0aAogIG1fM2RfYm94X3RvX2JveF9jb2xsaXNpb24KICBtXzNkX3JheV9ib3hfaW50ZXJzZWN0aW9uX2luX291dAogIG1fM2RfcmF5X3NwaGVyZV9pbnRlcnNlY3Rpb25faW5fb3V0CiAgbV8zZF90cmlfYm94X292ZXJsYXAKICBtXzNkX3BvbHlsaW5lX2xlbmd0aAogIG1fM2RfcmF5X3BsYW5lX2ludGVyc2VjdGlvbgogIG1fM2RfcmF5X3NwaGVyZV9pbnRlcnNlY3Rpb24KICBtXzNkX3JheV9ib3hfaW50ZXJzZWN0aW9uCiAgbV8zZF9yYXlfdHJpYW5nbGVfaW50ZXJzZWN0aW9uCiAgbV9uZXh0X3Bvd2VyX29mX3R3bwogIG1fcmFuZF91c2VyCiAgbV9yYW5kZl91c2VyCiAgbV9zcmFuZAogIG1fcmFuZAogIG1fcmFuZGYKICBtX2ludGVycG9sYXRpb25fY3ViaWMKICBtX2ludGVycG9sYXRpb25fY2F0bXVsbHJvbQogIG1fcXVhdF9pZGVudGl0eQogIG1fcXVhdF9ub3JtYWxpemUKICBtX3F1YXRfcm90YXRpb25fYXhpcwogIG1fcXVhdF9yb3RhdGlvbl9ldWxlcgogIG1fcXVhdF9tdWwKICBtX3F1YXRfc2xlcnAKICBtX3F1YXRfZXh0cmFjdF9heGlzX2FuZ2xlCiAgbV9tYXQ0X2lkZW50aXR5CiAgbV9tYXQ0X3BlcnNwZWN0aXZlCiAgbV9tYXQ0X29ydGhvCiAgbV9tYXQ0X2xvb2thdAogIG1fbWF0NF90cmFuc2xhdGlvbgogIG1fbWF0NF9yb3RhdGlvbl9heGlzCiAgbV9tYXQ0X3JvdGF0aW9uX2V1bGVyCiAgbV9tYXQ0X3NjYWxlCiAgbV9tYXQ0X211bAogIG1fbWF0NF90cmFuc3Bvc2UKICBtX21hdDRfaW52ZXJzZV90cmFuc3Bvc2UKICBtX21hdDRfaW52ZXJzZQogIG1fbWF0NF9leHRyYWN0X2V1bGVyCiAgbV9tYXQ0X3JvdGF0ZTMKICBtX21hdDRfaW52ZXJzZV9yb3RhdGUzCiAgbV9tYXQ0X3RyYW5zZm9ybTMKICBtX21hdDRfdHJhbnNmb3JtNAogIG1fMmRfcG9seWdvbl9hcmVhCiAgbV8yZF9wb2x5bGluZV9sZW5ndGgKICBtXzJkX2xpbmVfdG9fbGluZV9pbnRlcnNlY3Rpb24KICBtXzJkX2JveF90b19ib3hfY29sbGlzaW9uCiAgbV8zZF9wb2x5bGluZV9sZW5ndGgKICBtXzNkX2JveF90b19ib3hfY29sbGlzaW9uCiAgbV8zZF9yYXlfYm94X2ludGVyc2VjdGlvbl9pbl9vdXQKICBtXzNkX3JheV9zcGhlcmVfaW50ZXJzZWN0aW9uX2luX291dAogIG1fM2RfcmF5X3BsYW5lX2ludGVyc2VjdGlvbgogIG1fM2RfcmF5X3NwaGVyZV9pbnRlcnNlY3Rpb24KICBtXzNkX3JheV9ib3hfaW50ZXJzZWN0aW9uCiAgbV8zZF9yYXlfdHJpYW5nbGVfaW50ZXJzZWN0aW9uCk1fRklORF9NSU5fTUFYXzMKICBtX19wbGFuZV9ib3hfb3ZlcmxhcApNX0FYSVNURVNUX1gwMQpNX0FYSVNURVNUX1gyCk1fQVhJU1RFU1RfWTAyCk1fQVhJU1RFU1RfWTEKTV9BWElTVEVTVF9aMTIKTV9BWElTVEVTVF9aMAogIG1fM2RfdHJpX2JveF9vdmVybGFwAAAAAAAAAADQBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3224,
								3267
							],
							[
								4053,
								4060
							],
							[
								4160,
								4165
							],
							[
								4251,
								4290
							],
							[
								4375,
								4396
							],
							[
								4463,
								4485
							],
							[
								4563,
								4596
							],
							[
								4703,
								4708
							],
							[
								4771,
								4777
							],
							[
								4879,
								4898
							],
							[
								4920,
								4925
							],
							[
								5028,
								5059
							],
							[
								5110,
								5153
							],
							[
								5198,
								5205
							],
							[
								5306,
								5391
							],
							[
								5543,
								5548
							],
							[
								5593,
								5611
							],
							[
								5650,
								5657
							],
							[
								5706,
								5713
							],
							[
								5752,
								5769
							],
							[
								5816,
								5823
							],
							[
								5860,
								5878
							],
							[
								5901,
								5910
							],
							[
								5933,
								5951
							],
							[
								5962,
								6023
							],
							[
								6143,
								6152
							],
							[
								6189,
								6200
							],
							[
								6211,
								6235
							],
							[
								6316,
								6324
							],
							[
								6507,
								6561
							],
							[
								6780,
								6810
							],
							[
								7462,
								7508
							],
							[
								7548,
								7552
							],
							[
								7579,
								7586
							],
							[
								7672,
								7711
							],
							[
								7796,
								7841
							],
							[
								7879,
								7883
							],
							[
								7907,
								7950
							],
							[
								8029,
								8074
							],
							[
								8119,
								8123
							],
							[
								8173,
								8177
							],
							[
								8184,
								8188
							],
							[
								8220,
								8253
							],
							[
								8285,
								8328
							],
							[
								8403,
								8407
							],
							[
								8446,
								8485
							],
							[
								8531,
								8574
							],
							[
								8619,
								8658
							],
							[
								8754,
								8787
							],
							[
								8819,
								8839
							],
							[
								9086,
								9108
							],
							[
								11400,
								11411
							],
							[
								12625,
								12638
							],
							[
								13018,
								13052
							],
							[
								13556,
								13600
							],
							[
								13719,
								13739
							],
							[
								14054,
								14064
							],
							[
								14092,
								14102
							],
							[
								14138,
								14151
							],
							[
								14401,
								14415
							],
							[
								15307,
								15316
							],
							[
								15557,
								15576
							],
							[
								16118,
								16131
							],
							[
								16149,
								16154
							],
							[
								16205,
								16218
							],
							[
								16269,
								16290
							],
							[
								16687,
								16703
							],
							[
								17091,
								17096
							],
							[
								17134,
								17149
							],
							[
								17296,
								17304
							],
							[
								17345,
								17353
							],
							[
								17630,
								17658
							],
							[
								17725,
								17759
							],
							[
								17793,
								17798
							],
							[
								17820,
								17850
							],
							[
								18092,
								18100
							],
							[
								18167,
								18171
							],
							[
								18261,
								18268
							],
							[
								18608,
								18632
							],
							[
								18877,
								18882
							],
							[
								20612,
								20656
							],
							[
								21103,
								21129
							],
							[
								21831,
								21854
							],
							[
								21974,
								21996
							],
							[
								22247,
								22251
							],
							[
								22739,
								22743
							],
							[
								23360,
								23389
							],
							[
								23414,
								23418
							],
							[
								23494,
								23517
							],
							[
								23561,
								23567
							],
							[
								23595,
								23599
							],
							[
								23615,
								23652
							],
							[
								23674,
								23690
							],
							[
								23710,
								23717
							],
							[
								23774,
								23802
							],
							[
								23856,
								23867
							],
							[
								23950,
								23958
							],
							[
								24054,
								24058
							],
							[
								24208,
								24212
							],
							[
								24310,
								24315
							],
							[
								24375,
								24386
							],
							[
								24458,
								24469
							],
							[
								24556,
								24561
							],
							[
								24611,
								24617
							],
							[
								24714,
								24722
							],
							[
								24897,
								24926
							],
							[
								25019,
								25072
							],
							[
								25225,
								25229
							],
							[
								25283,
								25287
							],
							[
								25563,
								25570
							],
							[
								25592,
								25598
							],
							[
								25627,
								25658
							],
							[
								25792,
								25816
							],
							[
								25942,
								25953
							],
							[
								25971,
								25987
							],
							[
								26146,
								26151
							],
							[
								26175,
								26179
							],
							[
								26227,
								26236
							],
							[
								26304,
								26309
							],
							[
								26447,
								26452
							],
							[
								26574,
								26585
							],
							[
								26674,
								26681
							],
							[
								27327,
								27343
							],
							[
								29397,
								29465
							],
							[
								29710,
								29749
							],
							[
								29791,
								29805
							],
							[
								30054,
								30088
							],
							[
								30427,
								30441
							],
							[
								30536,
								30540
							],
							[
								30562,
								30576
							],
							[
								30607,
								30611
							],
							[
								31911,
								31927
							],
							[
								31977,
								31992
							],
							[
								32051,
								32070
							],
							[
								32093,
								32105
							],
							[
								32194,
								32198
							],
							[
								32297,
								32301
							],
							[
								32520,
								32526
							],
							[
								32616,
								32630
							],
							[
								32659,
								32677
							],
							[
								32814,
								32826
							],
							[
								32856,
								32921
							],
							[
								32950,
								32955
							],
							[
								33094,
								33132
							],
							[
								33157,
								33177
							],
							[
								33206,
								33255
							],
							[
								33302,
								33312
							],
							[
								33485,
								33495
							],
							[
								33568,
								33578
							],
							[
								33649,
								33659
							],
							[
								34186,
								34267
							],
							[
								34278,
								34301
							],
							[
								34519,
								34524
							],
							[
								34607,
								34616
							],
							[
								34646,
								34652
							],
							[
								34668,
								34697
							],
							[
								34733,
								34746
							],
							[
								34977,
								34983
							],
							[
								34992,
								35003
							],
							[
								35071,
								35093
							],
							[
								35310,
								35333
							],
							[
								35745,
								35774
							],
							[
								36096,
								36123
							],
							[
								36167,
								36180
							],
							[
								36207,
								36212
							],
							[
								36236,
								36241
							],
							[
								36313,
								36323
							],
							[
								36353,
								36363
							],
							[
								36449,
								36454
							],
							[
								36574,
								36579
							],
							[
								36593,
								36601
							],
							[
								36823,
								36827
							],
							[
								36880,
								36884
							],
							[
								36972,
								36985
							],
							[
								37086,
								37099
							],
							[
								37360,
								37393
							],
							[
								37447,
								37451
							],
							[
								37565,
								37591
							],
							[
								37934,
								37967
							],
							[
								38314,
								38359
							],
							[
								38405,
								38409
							],
							[
								38426,
								38455
							],
							[
								38491,
								38497
							],
							[
								38881,
								38951
							],
							[
								39551,
								39623
							],
							[
								39856,
								39861
							],
							[
								40583,
								40587
							],
							[
								40808,
								40881
							],
							[
								41881,
								41905
							]
						],
						"symlist":
						[
							"function Window(width = 1280, height = 900)",
							"begin()",
							"end()",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							".handleCharMods = (char, mods) =>",
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function BoardFromSchematic(doc = project.schematic, f = 1, r = 0.5)",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board, ignore = /^(GND|[-+][0-9]+V)$/)",
							"function DrawGraph(g, w)"
						]
					},
					"AQAAAAAAAAAAAAAAdQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAV2luZG93KHdpZHRoID0gMTI4MCwgaGVpZ2h0ID0gOTAwKQogIGJlZ2luKCkKICBlbmQoKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICAuaGFuZGxlQ2hhck1vZHMgPSAoY2hhciwgbW9kcykgPT4KKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KQm9hcmRGcm9tU2NoZW1hdGljKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBmID0gMSwgciA9IDAuNSkKSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkLCBpZ25vcmUgPSAvXihHTkR8Wy0rXVswLTldK1YpJC8pCkRyYXdHcmFwaChnLCB3KQAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					115,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AQAAAAAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					117,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					119,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3224,
								3267
							],
							[
								4053,
								4060
							],
							[
								4160,
								4165
							],
							[
								4251,
								4290
							],
							[
								4375,
								4396
							],
							[
								4463,
								4485
							],
							[
								4563,
								4596
							],
							[
								4703,
								4708
							],
							[
								4771,
								4777
							],
							[
								4879,
								4898
							],
							[
								4920,
								4925
							],
							[
								5028,
								5059
							],
							[
								5110,
								5153
							],
							[
								5198,
								5205
							],
							[
								5306,
								5391
							],
							[
								5543,
								5548
							],
							[
								5593,
								5611
							],
							[
								5650,
								5657
							],
							[
								5706,
								5713
							],
							[
								5752,
								5769
							],
							[
								5816,
								5823
							],
							[
								5860,
								5878
							],
							[
								5901,
								5910
							],
							[
								5933,
								5951
							],
							[
								5962,
								6023
							],
							[
								6143,
								6152
							],
							[
								6189,
								6200
							],
							[
								6211,
								6235
							],
							[
								6316,
								6324
							],
							[
								6507,
								6561
							],
							[
								6780,
								6810
							],
							[
								7462,
								7508
							],
							[
								7548,
								7552
							],
							[
								7579,
								7586
							],
							[
								7672,
								7711
							],
							[
								7796,
								7841
							],
							[
								7879,
								7883
							],
							[
								7907,
								7950
							],
							[
								8029,
								8074
							],
							[
								8119,
								8123
							],
							[
								8173,
								8177
							],
							[
								8184,
								8188
							],
							[
								8220,
								8253
							],
							[
								8285,
								8328
							],
							[
								8403,
								8407
							],
							[
								8446,
								8485
							],
							[
								8531,
								8574
							],
							[
								8619,
								8658
							],
							[
								8754,
								8787
							],
							[
								8819,
								8839
							],
							[
								9086,
								9108
							],
							[
								11400,
								11411
							],
							[
								12625,
								12638
							],
							[
								13018,
								13052
							],
							[
								13556,
								13600
							],
							[
								13719,
								13739
							],
							[
								14054,
								14064
							],
							[
								14092,
								14102
							],
							[
								14138,
								14151
							],
							[
								14401,
								14415
							],
							[
								15307,
								15316
							],
							[
								15557,
								15576
							],
							[
								16118,
								16131
							],
							[
								16149,
								16154
							],
							[
								16205,
								16218
							],
							[
								16269,
								16290
							],
							[
								16687,
								16703
							],
							[
								17091,
								17096
							],
							[
								17134,
								17149
							],
							[
								17296,
								17304
							],
							[
								17345,
								17353
							],
							[
								17630,
								17658
							],
							[
								17725,
								17759
							],
							[
								17793,
								17798
							],
							[
								17820,
								17850
							],
							[
								18092,
								18100
							],
							[
								18167,
								18171
							],
							[
								18261,
								18268
							],
							[
								18608,
								18632
							],
							[
								18877,
								18882
							],
							[
								20612,
								20656
							],
							[
								21103,
								21129
							],
							[
								21831,
								21854
							],
							[
								21974,
								21996
							],
							[
								22247,
								22251
							],
							[
								22739,
								22743
							],
							[
								23360,
								23389
							],
							[
								23414,
								23418
							],
							[
								23494,
								23517
							],
							[
								23561,
								23567
							],
							[
								23595,
								23599
							],
							[
								23615,
								23652
							],
							[
								23674,
								23690
							],
							[
								23710,
								23717
							],
							[
								23774,
								23802
							],
							[
								23856,
								23867
							],
							[
								23950,
								23958
							],
							[
								24054,
								24058
							],
							[
								24208,
								24212
							],
							[
								24310,
								24315
							],
							[
								24375,
								24386
							],
							[
								24458,
								24469
							],
							[
								24556,
								24561
							],
							[
								24611,
								24617
							],
							[
								24714,
								24722
							],
							[
								24897,
								24926
							],
							[
								25019,
								25072
							],
							[
								25225,
								25229
							],
							[
								25283,
								25287
							],
							[
								25563,
								25570
							],
							[
								25592,
								25598
							],
							[
								25627,
								25658
							],
							[
								25792,
								25816
							],
							[
								25942,
								25953
							],
							[
								25971,
								25987
							],
							[
								26146,
								26151
							],
							[
								26175,
								26179
							],
							[
								26227,
								26236
							],
							[
								26304,
								26309
							],
							[
								26447,
								26452
							],
							[
								26574,
								26585
							],
							[
								26674,
								26681
							],
							[
								27327,
								27343
							],
							[
								29397,
								29465
							],
							[
								29710,
								29749
							],
							[
								29791,
								29805
							],
							[
								30054,
								30088
							],
							[
								30427,
								30441
							],
							[
								30536,
								30540
							],
							[
								30562,
								30576
							],
							[
								30607,
								30611
							],
							[
								31911,
								31927
							],
							[
								31977,
								31992
							],
							[
								32051,
								32070
							],
							[
								32093,
								32105
							],
							[
								32194,
								32198
							],
							[
								32297,
								32301
							],
							[
								32520,
								32526
							],
							[
								32616,
								32630
							],
							[
								32659,
								32677
							],
							[
								32814,
								32826
							],
							[
								32856,
								32921
							],
							[
								32950,
								32955
							],
							[
								33094,
								33132
							],
							[
								33157,
								33177
							],
							[
								33206,
								33255
							],
							[
								33302,
								33312
							],
							[
								33485,
								33495
							],
							[
								33568,
								33578
							],
							[
								33649,
								33659
							],
							[
								34186,
								34267
							],
							[
								34278,
								34301
							],
							[
								34519,
								34524
							],
							[
								34607,
								34616
							],
							[
								34646,
								34652
							],
							[
								34668,
								34697
							],
							[
								34733,
								34746
							],
							[
								34977,
								34983
							],
							[
								34992,
								35003
							],
							[
								35071,
								35093
							],
							[
								35310,
								35333
							],
							[
								35745,
								35774
							],
							[
								36096,
								36123
							],
							[
								36167,
								36180
							],
							[
								36207,
								36212
							],
							[
								36236,
								36241
							],
							[
								36313,
								36323
							],
							[
								36353,
								36363
							],
							[
								36449,
								36454
							],
							[
								36574,
								36579
							],
							[
								36593,
								36601
							],
							[
								36823,
								36827
							],
							[
								36880,
								36884
							],
							[
								36972,
								36985
							],
							[
								37086,
								37099
							],
							[
								37360,
								37393
							],
							[
								37447,
								37451
							],
							[
								37565,
								37591
							],
							[
								37934,
								37967
							],
							[
								38314,
								38359
							],
							[
								38405,
								38409
							],
							[
								38426,
								38455
							],
							[
								38491,
								38497
							],
							[
								38881,
								38951
							],
							[
								39551,
								39623
							],
							[
								39856,
								39861
							],
							[
								40583,
								40587
							],
							[
								40808,
								40881
							],
							[
								41881,
								41905
							]
						],
						"symlist":
						[
							"function Window(width = 1280, height = 900)",
							"begin()",
							"end()",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							".handleCharMods = (char, mods) =>",
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function BoardFromSchematic(doc = project.schematic, f = 1, r = 0.5)",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board, ignore = /^(GND|[-+][0-9]+V)$/)",
							"function DrawGraph(g, w)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAAdQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					120,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAV2luZG93KHdpZHRoID0gMTI4MCwgaGVpZ2h0ID0gOTAwKQogIGJlZ2luKCkKICBlbmQoKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICAuaGFuZGxlQ2hhck1vZHMgPSAoY2hhciwgbW9kcykgPT4KKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KQm9hcmRGcm9tU2NoZW1hdGljKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBmID0gMSwgciA9IDAuNSkKSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkLCBpZ25vcmUgPSAvXihHTkR8Wy0rXVswLTldK1YpJC8pCkRyYXdHcmFwaChnLCB3KQAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					121,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					122,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					123,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3224,
								3267
							],
							[
								4053,
								4060
							],
							[
								4160,
								4165
							],
							[
								4251,
								4290
							],
							[
								4375,
								4396
							],
							[
								4463,
								4485
							],
							[
								4563,
								4596
							],
							[
								4703,
								4708
							],
							[
								4771,
								4777
							],
							[
								4879,
								4898
							],
							[
								4920,
								4925
							],
							[
								5028,
								5059
							],
							[
								5110,
								5153
							],
							[
								5198,
								5205
							],
							[
								5306,
								5391
							],
							[
								5543,
								5548
							],
							[
								5593,
								5611
							],
							[
								5650,
								5657
							],
							[
								5706,
								5713
							],
							[
								5752,
								5769
							],
							[
								5816,
								5823
							],
							[
								5860,
								5878
							],
							[
								5901,
								5910
							],
							[
								5933,
								5951
							],
							[
								5962,
								6023
							],
							[
								6143,
								6152
							],
							[
								6189,
								6200
							],
							[
								6211,
								6235
							],
							[
								6316,
								6324
							],
							[
								6507,
								6561
							],
							[
								6780,
								6810
							],
							[
								7462,
								7508
							],
							[
								7548,
								7552
							],
							[
								7579,
								7586
							],
							[
								7672,
								7711
							],
							[
								7796,
								7841
							],
							[
								7879,
								7883
							],
							[
								7907,
								7950
							],
							[
								8029,
								8074
							],
							[
								8119,
								8123
							],
							[
								8173,
								8177
							],
							[
								8184,
								8188
							],
							[
								8220,
								8253
							],
							[
								8285,
								8328
							],
							[
								8403,
								8407
							],
							[
								8446,
								8485
							],
							[
								8531,
								8574
							],
							[
								8619,
								8658
							],
							[
								8754,
								8787
							],
							[
								8819,
								8839
							],
							[
								9086,
								9108
							],
							[
								11400,
								11411
							],
							[
								12625,
								12638
							],
							[
								13018,
								13052
							],
							[
								13556,
								13600
							],
							[
								13719,
								13739
							],
							[
								14054,
								14064
							],
							[
								14092,
								14102
							],
							[
								14138,
								14151
							],
							[
								14401,
								14415
							],
							[
								15307,
								15316
							],
							[
								15557,
								15576
							],
							[
								16118,
								16131
							],
							[
								16149,
								16154
							],
							[
								16205,
								16218
							],
							[
								16269,
								16290
							],
							[
								16687,
								16703
							],
							[
								17091,
								17096
							],
							[
								17134,
								17149
							],
							[
								17296,
								17304
							],
							[
								17345,
								17353
							],
							[
								17630,
								17658
							],
							[
								17725,
								17759
							],
							[
								17793,
								17798
							],
							[
								17820,
								17850
							],
							[
								18092,
								18100
							],
							[
								18167,
								18171
							],
							[
								18261,
								18268
							],
							[
								18608,
								18632
							],
							[
								18877,
								18882
							],
							[
								20612,
								20656
							],
							[
								21103,
								21129
							],
							[
								21831,
								21854
							],
							[
								21974,
								21996
							],
							[
								22247,
								22251
							],
							[
								22739,
								22743
							],
							[
								23360,
								23389
							],
							[
								23414,
								23418
							],
							[
								23494,
								23517
							],
							[
								23561,
								23567
							],
							[
								23595,
								23599
							],
							[
								23615,
								23652
							],
							[
								23674,
								23690
							],
							[
								23710,
								23717
							],
							[
								23774,
								23802
							],
							[
								23856,
								23867
							],
							[
								23950,
								23958
							],
							[
								24054,
								24058
							],
							[
								24208,
								24212
							],
							[
								24310,
								24315
							],
							[
								24375,
								24386
							],
							[
								24458,
								24469
							],
							[
								24556,
								24561
							],
							[
								24611,
								24617
							],
							[
								24714,
								24722
							],
							[
								24897,
								24926
							],
							[
								25019,
								25072
							],
							[
								25225,
								25229
							],
							[
								25283,
								25287
							],
							[
								25563,
								25570
							],
							[
								25592,
								25598
							],
							[
								25627,
								25658
							],
							[
								25792,
								25816
							],
							[
								25942,
								25953
							],
							[
								25971,
								25987
							],
							[
								26146,
								26151
							],
							[
								26175,
								26179
							],
							[
								26227,
								26236
							],
							[
								26304,
								26309
							],
							[
								26447,
								26452
							],
							[
								26574,
								26585
							],
							[
								26674,
								26681
							],
							[
								27327,
								27343
							],
							[
								29397,
								29465
							],
							[
								29710,
								29749
							],
							[
								29791,
								29805
							],
							[
								30054,
								30088
							],
							[
								30427,
								30441
							],
							[
								30536,
								30540
							],
							[
								30562,
								30576
							],
							[
								30607,
								30611
							],
							[
								31911,
								31927
							],
							[
								31977,
								31992
							],
							[
								32051,
								32070
							],
							[
								32093,
								32105
							],
							[
								32194,
								32198
							],
							[
								32297,
								32301
							],
							[
								32520,
								32526
							],
							[
								32616,
								32630
							],
							[
								32659,
								32677
							],
							[
								32814,
								32826
							],
							[
								32856,
								32921
							],
							[
								32950,
								32955
							],
							[
								33094,
								33132
							],
							[
								33157,
								33177
							],
							[
								33206,
								33255
							],
							[
								33302,
								33312
							],
							[
								33485,
								33495
							],
							[
								33568,
								33578
							],
							[
								33649,
								33659
							],
							[
								34186,
								34267
							],
							[
								34278,
								34301
							],
							[
								34519,
								34524
							],
							[
								34607,
								34616
							],
							[
								34646,
								34652
							],
							[
								34668,
								34697
							],
							[
								34733,
								34746
							],
							[
								34977,
								34983
							],
							[
								34992,
								35003
							],
							[
								35071,
								35093
							],
							[
								35310,
								35333
							],
							[
								35745,
								35774
							],
							[
								36096,
								36123
							],
							[
								36167,
								36180
							],
							[
								36207,
								36212
							],
							[
								36236,
								36241
							],
							[
								36313,
								36323
							],
							[
								36353,
								36363
							],
							[
								36449,
								36454
							],
							[
								36574,
								36579
							],
							[
								36593,
								36601
							],
							[
								36823,
								36827
							],
							[
								36880,
								36884
							],
							[
								36972,
								36985
							],
							[
								37086,
								37099
							],
							[
								37360,
								37393
							],
							[
								37447,
								37451
							],
							[
								37565,
								37591
							],
							[
								37934,
								37967
							],
							[
								38314,
								38359
							],
							[
								38405,
								38409
							],
							[
								38426,
								38455
							],
							[
								38491,
								38497
							],
							[
								38881,
								38951
							],
							[
								39551,
								39623
							],
							[
								39856,
								39861
							],
							[
								40583,
								40587
							],
							[
								40808,
								40881
							],
							[
								41881,
								41905
							]
						],
						"symlist":
						[
							"function Window(width = 1280, height = 900)",
							"begin()",
							"end()",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							".handleCharMods = (char, mods) =>",
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function BoardFromSchematic(doc = project.schematic, f = 1, r = 0.5)",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board, ignore = /^(GND|[-+][0-9]+V)$/)",
							"function DrawGraph(g, w)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAAdQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					124,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAV2luZG93KHdpZHRoID0gMTI4MCwgaGVpZ2h0ID0gOTAwKQogIGJlZ2luKCkKICBlbmQoKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICAuaGFuZGxlQ2hhck1vZHMgPSAoY2hhciwgbW9kcykgPT4KKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KQm9hcmRGcm9tU2NoZW1hdGljKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBmID0gMSwgciA9IDAuNSkKSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkLCBpZ25vcmUgPSAvXihHTkR8Wy0rXVswLTldK1YpJC8pCkRyYXdHcmFwaChnLCB3KQAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					125,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					126,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/Basic dXNlcjE6cGFzc3dvcmQ=/4427108270_05682fe93c.jpg~",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					127,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					128,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/555-Oscillator.GBL",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/555-Oscillator.TXT",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					130,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/555-Oscillator.out.svg",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					131,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3224,
								3267
							],
							[
								4053,
								4060
							],
							[
								4160,
								4165
							],
							[
								4251,
								4290
							],
							[
								4375,
								4396
							],
							[
								4463,
								4485
							],
							[
								4563,
								4596
							],
							[
								4703,
								4708
							],
							[
								4771,
								4777
							],
							[
								4879,
								4898
							],
							[
								4920,
								4925
							],
							[
								5028,
								5059
							],
							[
								5110,
								5153
							],
							[
								5198,
								5205
							],
							[
								5306,
								5391
							],
							[
								5543,
								5548
							],
							[
								5593,
								5611
							],
							[
								5650,
								5657
							],
							[
								5706,
								5713
							],
							[
								5752,
								5769
							],
							[
								5816,
								5823
							],
							[
								5860,
								5878
							],
							[
								5901,
								5910
							],
							[
								5933,
								5951
							],
							[
								5962,
								6023
							],
							[
								6143,
								6152
							],
							[
								6189,
								6200
							],
							[
								6211,
								6235
							],
							[
								6316,
								6324
							],
							[
								6507,
								6561
							],
							[
								6780,
								6810
							],
							[
								7462,
								7508
							],
							[
								7548,
								7552
							],
							[
								7579,
								7586
							],
							[
								7672,
								7711
							],
							[
								7796,
								7841
							],
							[
								7879,
								7883
							],
							[
								7907,
								7950
							],
							[
								8029,
								8074
							],
							[
								8119,
								8123
							],
							[
								8173,
								8177
							],
							[
								8184,
								8188
							],
							[
								8220,
								8253
							],
							[
								8285,
								8328
							],
							[
								8403,
								8407
							],
							[
								8446,
								8485
							],
							[
								8531,
								8574
							],
							[
								8619,
								8658
							],
							[
								8754,
								8787
							],
							[
								8819,
								8839
							],
							[
								9086,
								9108
							],
							[
								11400,
								11411
							],
							[
								12625,
								12638
							],
							[
								13018,
								13052
							],
							[
								13556,
								13600
							],
							[
								13719,
								13739
							],
							[
								14054,
								14064
							],
							[
								14092,
								14102
							],
							[
								14138,
								14151
							],
							[
								14401,
								14415
							],
							[
								15307,
								15316
							],
							[
								15557,
								15576
							],
							[
								16118,
								16131
							],
							[
								16149,
								16154
							],
							[
								16205,
								16218
							],
							[
								16269,
								16290
							],
							[
								16687,
								16703
							],
							[
								17091,
								17096
							],
							[
								17134,
								17149
							],
							[
								17296,
								17304
							],
							[
								17345,
								17353
							],
							[
								17630,
								17658
							],
							[
								17725,
								17759
							],
							[
								17793,
								17798
							],
							[
								17820,
								17850
							],
							[
								18092,
								18100
							],
							[
								18167,
								18171
							],
							[
								18261,
								18268
							],
							[
								18608,
								18632
							],
							[
								18877,
								18882
							],
							[
								20612,
								20656
							],
							[
								21103,
								21129
							],
							[
								21831,
								21854
							],
							[
								21974,
								21996
							],
							[
								22247,
								22251
							],
							[
								22739,
								22743
							],
							[
								23360,
								23389
							],
							[
								23414,
								23418
							],
							[
								23494,
								23517
							],
							[
								23561,
								23567
							],
							[
								23595,
								23599
							],
							[
								23615,
								23652
							],
							[
								23674,
								23690
							],
							[
								23710,
								23717
							],
							[
								23774,
								23802
							],
							[
								23856,
								23867
							],
							[
								23950,
								23958
							],
							[
								24054,
								24058
							],
							[
								24208,
								24212
							],
							[
								24310,
								24315
							],
							[
								24375,
								24386
							],
							[
								24458,
								24469
							],
							[
								24556,
								24561
							],
							[
								24611,
								24617
							],
							[
								24714,
								24722
							],
							[
								24897,
								24926
							],
							[
								25019,
								25072
							],
							[
								25225,
								25229
							],
							[
								25283,
								25287
							],
							[
								25563,
								25570
							],
							[
								25592,
								25598
							],
							[
								25627,
								25658
							],
							[
								25792,
								25816
							],
							[
								25942,
								25953
							],
							[
								25971,
								25987
							],
							[
								26146,
								26151
							],
							[
								26175,
								26179
							],
							[
								26227,
								26236
							],
							[
								26304,
								26309
							],
							[
								26447,
								26452
							],
							[
								26574,
								26585
							],
							[
								26674,
								26681
							],
							[
								27327,
								27343
							],
							[
								29397,
								29465
							],
							[
								29710,
								29749
							],
							[
								29791,
								29805
							],
							[
								30054,
								30088
							],
							[
								30427,
								30441
							],
							[
								30536,
								30540
							],
							[
								30562,
								30576
							],
							[
								30607,
								30611
							],
							[
								31911,
								31927
							],
							[
								31977,
								31992
							],
							[
								32051,
								32070
							],
							[
								32093,
								32105
							],
							[
								32194,
								32198
							],
							[
								32297,
								32301
							],
							[
								32520,
								32526
							],
							[
								32616,
								32630
							],
							[
								32659,
								32677
							],
							[
								32814,
								32826
							],
							[
								32856,
								32921
							],
							[
								32950,
								32955
							],
							[
								33094,
								33132
							],
							[
								33157,
								33177
							],
							[
								33206,
								33255
							],
							[
								33302,
								33312
							],
							[
								33485,
								33495
							],
							[
								33568,
								33578
							],
							[
								33649,
								33659
							],
							[
								34186,
								34267
							],
							[
								34278,
								34301
							],
							[
								34519,
								34524
							],
							[
								34607,
								34616
							],
							[
								34646,
								34652
							],
							[
								34668,
								34697
							],
							[
								34733,
								34746
							],
							[
								34977,
								34983
							],
							[
								34992,
								35003
							],
							[
								35071,
								35093
							],
							[
								35310,
								35333
							],
							[
								35745,
								35774
							],
							[
								36096,
								36123
							],
							[
								36167,
								36180
							],
							[
								36207,
								36212
							],
							[
								36236,
								36241
							],
							[
								36313,
								36323
							],
							[
								36353,
								36363
							],
							[
								36449,
								36454
							],
							[
								36574,
								36579
							],
							[
								36593,
								36601
							],
							[
								36823,
								36827
							],
							[
								36880,
								36884
							],
							[
								36972,
								36985
							],
							[
								37086,
								37099
							],
							[
								37360,
								37393
							],
							[
								37447,
								37451
							],
							[
								37565,
								37591
							],
							[
								37934,
								37967
							],
							[
								38314,
								38359
							],
							[
								38405,
								38409
							],
							[
								38426,
								38455
							],
							[
								38491,
								38497
							],
							[
								38881,
								38951
							],
							[
								39551,
								39623
							],
							[
								39856,
								39861
							],
							[
								40583,
								40587
							],
							[
								40808,
								40881
							],
							[
								41881,
								41905
							]
						],
						"symlist":
						[
							"function Window(width = 1280, height = 900)",
							"begin()",
							"end()",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							".handleCharMods = (char, mods) =>",
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function BoardFromSchematic(doc = project.schematic, f = 1, r = 0.5)",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board, ignore = /^(GND|[-+][0-9]+V)$/)",
							"function DrawGraph(g, w)"
						]
					},
					"AQAAAAAAAAAAAAAAdQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/5V-to-12V-Converter-alt-board.out.svg",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1DQAAV2luZG93KHdpZHRoID0gMTI4MCwgaGVpZ2h0ID0gOTAwKQogIGJlZ2luKCkKICBlbmQoKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICAuaGFuZGxlQ2hhck1vZHMgPSAoY2hhciwgbW9kcykgPT4KKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KQm9hcmRGcm9tU2NoZW1hdGljKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBmID0gMSwgciA9IDAuNSkKSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkLCBpZ25vcmUgPSAvXihHTkR8Wy0rXVswLTldK1YpJC8pCkRyYXdHcmFwaChnLCB3KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					133,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/5V-to-12V-Converter-alt-schematic.out.svg",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					135,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/1.5-Volt-Headphone-Amplifier.GTL",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					138,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					139,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					140,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					141,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					142,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					143,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/data/1.5-Volt-Headphone-Amplifier.GTL",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "server.js",
			"redo_stack":
			[
				[
					3,
					1,
					"unindent",
					null,
					"AQAAAL0PAAAAAAAAvw8AAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvw8AAAAAAAC/DwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 29538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAfDQAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcDQAAAAAAABwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD9DAAAAAAAAAAAAAAgDQAAAAAAACANAAAAAAAAAgAAACAg",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6DAAAAAAAAPoMAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABSDAAAAAAAAAAAAAAADQAAAAAAAAANAAAAAAAAAgAAACAg",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNDAAAAAAAAE0MAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "draw-utils.js",
			"settings":
			{
				"buffer_size": 5161,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 42551,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": "[..."
					},
					"BAAAAMWVAAAAAAAAxpUAAAAAAAAAAAAAxpUAAAAAAADHlQAAAAAAAAAAAADHlQAAAAAAAMiVAAAAAAAAAAAAAMiVAAAAAAAAyZUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFlQAAAAAAAMWVAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAANqVAAAAAAAA25UAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADalQAAAAAAANqVAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ".list]"
					},
					"BgAAADONAAAAAAAANI0AAAAAAAAAAAAANI0AAAAAAAA1jQAAAAAAAAAAAAA1jQAAAAAAADaNAAAAAAAAAAAAADaNAAAAAAAAN40AAAAAAAAAAAAAN40AAAAAAAA4jQAAAAAAAAAAAAA4jQAAAAAAADmNAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzjQAAAAAAADONAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "[..."
					},
					"BAAAAC2NAAAAAAAALo0AAAAAAAAAAAAALo0AAAAAAAAvjQAAAAAAAAAAAAAvjQAAAAAAADCNAAAAAAAAAAAAADCNAAAAAAAAMY0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtjQAAAAAAAC2NAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"cut",
					null,
					"AQAAAGaNAAAAAAAAZo0AAAAAAAAdAAAAICAgIC5tYXAocHQgPT4gcHQuZGl2KDIuNTQpKQo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmjQAAAAAAAIONAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					2,
					"paste",
					null,
					"AgAAAGaNAAAAAAAAg40AAAAAAAAAAAAAg40AAAAAAACgjQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmjQAAAAAAAGaNAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "round"
					},
					"BgAAAJWNAAAAAAAAlo0AAAAAAAAAAAAAlo0AAAAAAACWjQAAAAAAAAMAAABkaXaWjQAAAAAAAJeNAAAAAAAAAAAAAJeNAAAAAAAAmI0AAAAAAAAAAAAAmI0AAAAAAACZjQAAAAAAAAAAAACZjQAAAAAAAJqNAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVjQAAAAAAAJiNAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					4,
					"right_delete",
					null,
					"BAAAAJuNAAAAAAAAm40AAAAAAAABAAAAMpuNAAAAAAAAm40AAAAAAAABAAAALpuNAAAAAAAAm40AAAAAAAABAAAANZuNAAAAAAAAm40AAAAAAAABAAAANA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbjQAAAAAAAJuNAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJuNAAAAAAAAnI0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbjQAAAAAAAJuNAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALyNAAAAAAAAvY0AAAAAAAAAAAAAvY0AAAAAAADBjQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8jQAAAAAAALyNAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKONAAAAAAAApI0AAAAAAAAAAAAApI0AAAAAAACljQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjjQAAAAAAAKONAAAAAAAAAAAAAAAARkA"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAApY0AAAAAAACljQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "data/5V-to-12V-Converter-alt-schematic.out.svg",
			"settings":
			{
				"buffer_size": 145136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "data/5V-to-12V-Converter-alt-board.out.svg",
			"settings":
			{
				"buffer_size": 161625,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "data/1.5-Volt-Headphone-Amplifier.GTL",
			"settings":
			{
				"buffer_size": 1566,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/src",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/src/sample",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/src",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/x86-64",
		"/home/roman/Projects/plot-cv/data",
		"/home/roman/Projects/plot-cv/data/Basic dXNlcjE6cGFzc3dvcmQ=",
		"/home/roman/Projects/plot-cv/node-debugprotocol-client"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/src/ctoy.h",
		"/home/roman/Projects/webakeit/static/img/globi-bg-vector.svg",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/svg.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/noise-source.circuit",
		"/home/roman/Projects/plot-cv/lib/vfs/fs-adapter-memory.js",
		"/home/roman/Projects/plot-cv/lib/htmlentities.js",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/hole.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/github-userscript.js",
		"/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
		"/home/roman/Projects/an-tronics/eagle/github-userscript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"x1'",
			"kaefer1",
			"g12361",
			"kaefer1",
			"kaefer1\"",
			"kaefer1",
			"^class",
			"^const",
			"Animator",
			"Package2Circuit",
			"Eagle2C",
			"e2_5_4v",
			"Eagle2C",
			"streamify",
			"LoadSVG",
			"mountDirs",
			"defaultDirs",
			"glob\\b",
			"glob",
			"import { MessageReceiver, MessageTransmitter, MessageTransceiver, codecs, RPCApi, RPCProxy, RPCObject, RPCFactory, Connection, RPC_PARSE_ERROR, RPC_INVALID_REQUEST, RPC_METHOD_NOT_FOUND, RPC_INVALID_PARAMS, RPC_INTERNAL_ERROR, RPC_SERVER_ERROR_BASE, FactoryEndpoint, RPCServer, RPCClient, FactoryClient, RPCSocket, GetProperties, GetKeys, SerializeValue, DeserializeSymbols, DeserializeValue, RPCConnect, RPCListen } from './quickjs/qjs-net/js/rpc.js';\n",
			">\n",
			"^  (.)\\:",
			"Heute",
			"Hippiainen",
			"Hippiainen<",
			"media",
			"media_wrap",
			"ä",
			"ü",
			"ö",
			"BoardFromSchematic",
			"InitBoar",
			"MOVE",
			"instances",
			"PointList\\.prototype\\.([^ ]*) \\= function",
			"addPoint",
			"PointList\\.prototype\\.([^ ]*) \\= function",
			"\\.add\\b",
			"\\bvar\\b",
			"this\\._points",
			"add =",
			"safe",
			"this\\._points",
			"ySeries",
			"onMessage",
			"\\berror\\b",
			"send",
			"send.*error",
			"AddPoint",
			"error",
			"CreateSocket",
			"'L'",
			"lineCommand",
			"'L'",
			"zoomFactor",
			"ZoomHandler",
			"zoomFactor",
			"zoomPos",
			"ZoomHandler",
			"LoadSVG",
			"RenderPalette",
			"GetSignalNames",
			"TouchEvents",
			"MouseEvents",
			"FindPoint",
			"GetPosition",
			"CreateElement",
			"GetElementsBySignal",
			"SortElementsByPosition",
			"EllipticArc",
			"Tracked",
			"Observable",
			"onMouseWhee",
			"AddPoint",
			"AnchorPoints",
			"anchorPoints",
			"AddPoint",
			"Move",
			"Path",
			"'path'",
			"AnchorPoints",
			"'circle'",
			"TouchEvents",
			"$",
			"data-",
			"MovePoint",
			"AddPoint",
			"TouchEvent",
			"elementsFromPoint",
			"touchstart",
			"Touch \\? 'o",
			"touchstart",
			"FindPoint",
			"points",
			"FindPoint",
			"MovePoint",
			"anchorPoints",
			"useTrkl",
			"anchorPoints",
			"AddPoint",
			"assign",
			"anchorPoints",
			"point-",
			"'Touch'",
			"mousedown",
			"'touchstart",
			"waitOne",
			"streamify",
			"TouchEvents",
			"streamify",
			"TouchEvents",
			"touchstart",
			"streamify",
			"TouchEvents",
			"MoveHandler",
			"TouchEvents",
			"MouseEvents",
			"isObject",
			"BBox",
			"geom.js",
			"Up",
			"querySelector",
			"AnchorPoints",
			"'circle'",
			"nearest",
			"minIndex",
			"minDist",
			"find"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"  '\\1':",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/data/1.5-Volt-Headphone-Amplifier.GTL",
							"function_name_status_row": -1,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715977833.47,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29538,
						"regions":
						{
							"col_7FFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1708,
										1718
									]
								],
								"scope": "col_7FFFFFFF"
							},
							"col_7FFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7FFFFFFF_circle.png",
								"regions":
								[
									[
										1693,
										1693
									]
								],
								"scope": "col_gutter"
							},
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										16625,
										16635
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										16597,
										16597
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1460,
										1470
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										1414,
										1414
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								3720,
								3720
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 128,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715957655.64,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2176.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "draw-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5161,
						"regions":
						{
						},
						"selection":
						[
							[
								1512,
								1512
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 33,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715957655.01,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 561.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42551,
						"regions":
						{
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										15969,
										15982
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										15903,
										15903
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										15945,
										15959
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										15903,
										15903
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										33246,
										33253
									],
									[
										34106,
										34110
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										33206,
										33206
									],
									[
										34091,
										34091
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								42551,
								42551
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1513,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715960729.46,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24803.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "data/5V-to-12V-Converter-alt-schematic.out.svg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 145136,
						"regions":
						{
							"col_0000AAFF":
							{
								"flags": 16,
								"regions":
								[
									[
										99799,
										99806
									]
								],
								"scope": "col_0000AAFF"
							},
							"col_0000AAFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000AAFF_circle.png",
								"regions":
								[
									[
										99739,
										99739
									]
								],
								"scope": "col_gutter"
							},
							"col_4BA54BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										100365,
										100372
									],
									[
										100555,
										100562
									],
									[
										100745,
										100752
									],
									[
										101011,
										101018
									],
									[
										101146,
										101153
									],
									[
										101335,
										101342
									],
									[
										101558,
										101565
									],
									[
										101747,
										101754
									],
									[
										101936,
										101943
									],
									[
										102125,
										102132
									],
									[
										102316,
										102323
									],
									[
										102582,
										102589
									],
									[
										102716,
										102723
									],
									[
										102983,
										102990
									],
									[
										103117,
										103124
									],
									[
										103306,
										103313
									],
									[
										103572,
										103579
									],
									[
										103706,
										103713
									],
									[
										103895,
										103902
									],
									[
										104082,
										104089
									],
									[
										104349,
										104356
									],
									[
										104515,
										104522
									],
									[
										104703,
										104710
									],
									[
										104891,
										104898
									],
									[
										105080,
										105087
									],
									[
										105346,
										105353
									],
									[
										105481,
										105488
									],
									[
										105747,
										105754
									],
									[
										105917,
										105924
									],
									[
										106108,
										106115
									],
									[
										106299,
										106306
									],
									[
										106565,
										106572
									],
									[
										106702,
										106709
									],
									[
										106892,
										106899
									],
									[
										107158,
										107165
									],
									[
										107294,
										107301
									],
									[
										107483,
										107490
									],
									[
										107673,
										107680
									],
									[
										107863,
										107870
									],
									[
										108053,
										108060
									],
									[
										108243,
										108250
									],
									[
										108510,
										108517
									],
									[
										108647,
										108654
									],
									[
										108914,
										108921
									],
									[
										109051,
										109058
									],
									[
										109318,
										109325
									],
									[
										109453,
										109460
									],
									[
										109720,
										109727
									],
									[
										109888,
										109895
									],
									[
										110076,
										110083
									],
									[
										110265,
										110272
									],
									[
										110531,
										110538
									],
									[
										110698,
										110705
									],
									[
										110887,
										110894
									],
									[
										111074,
										111081
									],
									[
										111340,
										111347
									],
									[
										111474,
										111481
									],
									[
										111740,
										111747
									]
								],
								"scope": "col_4BA54BFF"
							},
							"col_4BA54BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_4BA54BFF_circle.png",
								"regions":
								[
									[
										100285,
										100285
									],
									[
										100474,
										100474
									],
									[
										100664,
										100664
									],
									[
										100854,
										100854
									],
									[
										101067,
										101067
									],
									[
										101255,
										101255
									],
									[
										101478,
										101478
									],
									[
										101667,
										101667
									],
									[
										101856,
										101856
									],
									[
										102045,
										102045
									],
									[
										102234,
										102234
									],
									[
										102425,
										102425
									],
									[
										102638,
										102638
									],
									[
										102825,
										102825
									],
									[
										103038,
										103038
									],
									[
										103226,
										103226
									],
									[
										103415,
										103415
									],
									[
										103627,
										103627
									],
									[
										103815,
										103815
									],
									[
										104004,
										104004
									],
									[
										104191,
										104191
									],
									[
										104437,
										104437
									],
									[
										104624,
										104624
									],
									[
										104812,
										104812
									],
									[
										105000,
										105000
									],
									[
										105189,
										105189
									],
									[
										105401,
										105401
									],
									[
										105590,
										105590
									],
									[
										105835,
										105835
									],
									[
										106026,
										106026
									],
									[
										106217,
										106217
									],
									[
										106408,
										106408
									],
									[
										106622,
										106622
									],
									[
										106811,
										106811
									],
									[
										107001,
										107001
									],
									[
										107214,
										107214
									],
									[
										107403,
										107403
									],
									[
										107592,
										107592
									],
									[
										107782,
										107782
									],
									[
										107972,
										107972
									],
									[
										108162,
										108162
									],
									[
										108352,
										108352
									],
									[
										108566,
										108566
									],
									[
										108756,
										108756
									],
									[
										108970,
										108970
									],
									[
										109160,
										109160
									],
									[
										109374,
										109374
									],
									[
										109562,
										109562
									],
									[
										109808,
										109808
									],
									[
										109997,
										109997
									],
									[
										110185,
										110185
									],
									[
										110374,
										110374
									],
									[
										110619,
										110619
									],
									[
										110807,
										110807
									],
									[
										110996,
										110996
									],
									[
										111183,
										111183
									],
									[
										111395,
										111395
									],
									[
										111583,
										111583
									]
								],
								"scope": "col_gutter"
							},
							"col_A54B4BFF":
							{
								"flags": 16,
								"regions": "cQAAAPG1AQAAAAAA+LUBAAAAAAAAAAAAAADwv5u2AQAAAAAAorYBAAAAAAAAAAAAAADwv0m3AQAAAAAAULcBAAAAAAAAAAAAAADwvwi4AQAAAAAAD7gBAAAAAAAAAAAAAADwv8a4AQAAAAAAzbgBAAAAAAAAAAAAAADwv4m5AQAAAAAAkLkBAAAAAAAAAAAAAADwv0a6AQAAAAAATboBAAAAAAAAAAAAAADwvyC+AQAAAAAAJ74BAAAAAAAAAAAAAADwv8u+AQAAAAAA0r4BAAAAAAAAAAAAAADwv2+/AQAAAAAAdr8BAAAAAAAAAAAAAADwvzLAAQAAAAAAOcABAAAAAAAAAAAAAADwv/XAAQAAAAAA/MABAAAAAAAAAAAAAADwv7rBAQAAAAAAwcEBAAAAAAAAAAAAAADwv5PFAQAAAAAAmsUBAAAAAAAAAAAAAADwv0DGAQAAAAAAR8YBAAAAAAAAAAAAAADwv/fGAQAAAAAA/sYBAAAAAAAAAAAAAADwv7zHAQAAAAAAw8cBAAAAAAAAAAAAAADwv3/IAQAAAAAAhsgBAAAAAAAAAAAAAADwv0TJAQAAAAAAS8kBAAAAAAAAAAAAAADwvwPNAQAAAAAACs0BAAAAAAAAAAAAAADwv67NAQAAAAAAtc0BAAAAAAAAAAAAAADwv1LOAQAAAAAAWc4BAAAAAAAAAAAAAADwvxXPAQAAAAAAHM8BAAAAAAAAAAAAAADwv9jPAQAAAAAA388BAAAAAAAAAAAAAADwv53QAQAAAAAApNABAAAAAAAAAAAAAADwv3XUAQAAAAAAfNQBAAAAAAAAAAAAAADwvyLVAQAAAAAAKdUBAAAAAAAAAAAAAADwv9nVAQAAAAAA4NUBAAAAAAAAAAAAAADwv57WAQAAAAAApdYBAAAAAAAAAAAAAADwv2HXAQAAAAAAaNcBAAAAAAAAAAAAAADwvybYAQAAAAAALdgBAAAAAAAAAAAAAADwvz7cAQAAAAAARdwBAAAAAAAAAAAAAADwv/ncAQAAAAAAAN0BAAAAAAAAAAAAAADwv6LdAQAAAAAAqd0BAAAAAAAAAAAAAADwv4XeAQAAAAAAjN4BAAAAAAAAAAAAAADwv0zfAQAAAAAAU98BAAAAAAAAAAAAAADwvxLgAQAAAAAAGeABAAAAAAAAAAAAAADwv9PgAQAAAAAA2uABAAAAAAAAAAAAAADwv5XhAQAAAAAAnOEBAAAAAAAAAAAAAADwv2TjAQAAAAAAa+MBAAAAAAAAAAAAAADwv/3mAQAAAAAABOcBAAAAAAAAAAAAAADwv7jnAQAAAAAAv+cBAAAAAAAAAAAAAADwv2HoAQAAAAAAaOgBAAAAAAAAAAAAAADwvyXpAQAAAAAALOkBAAAAAAAAAAAAAADwvwHtAQAAAAAACO0BAAAAAAAAAAAAAADwv83tAQAAAAAA1O0BAAAAAAAAAAAAAADwv5nuAQAAAAAAoO4BAAAAAAAAAAAAAADwv2XvAQAAAAAAbO8BAAAAAAAAAAAAAADwvyzwAQAAAAAAM/ABAAAAAAAAAAAAAADwv/XwAQAAAAAA/PABAAAAAAAAAAAAAADwv8DxAQAAAAAAx/EBAAAAAAAAAAAAAADwv4vyAQAAAAAAkvIBAAAAAAAAAAAAAADwv1fzAQAAAAAAXvMBAAAAAAAAAAAAAADwvyP0AQAAAAAAKvQBAAAAAAAAAAAAAADwv+/0AQAAAAAA9vQBAAAAAAAAAAAAAADwv5j1AQAAAAAAn/UBAAAAAAAAAAAAAADwv2v2AQAAAAAAcvYBAAAAAAAAAAAAAADwvwD3AQAAAAAAB/cBAAAAAAAAAAAAAADwv5/3AQAAAAAApvcBAAAAAAAAAAAAAADwvyz4AQAAAAAAM/gBAAAAAAAAAAAAAADwv+r7AQAAAAAA8fsBAAAAAAAAAAAAAADwv7b8AQAAAAAAvfwBAAAAAAAAAAAAAADwv4L9AQAAAAAAif0BAAAAAAAAAAAAAADwv07+AQAAAAAAVf4BAAAAAAAAAAAAAADwvxX/AQAAAAAAHP8BAAAAAAAAAAAAAADwv97/AQAAAAAA5f8BAAAAAAAAAAAAAADwv6kAAgAAAAAAsAACAAAAAAAAAAAAAADwv3QBAgAAAAAAewECAAAAAAAAAAAAAADwv0ACAgAAAAAARwICAAAAAAAAAAAAAADwvwwDAgAAAAAAEwMCAAAAAAAAAAAAAADwv9gDAgAAAAAA3wMCAAAAAAAAAAAAAADwv4EEAgAAAAAAiAQCAAAAAAAAAAAAAADwv1QFAgAAAAAAWwUCAAAAAAAAAAAAAADwv+kFAgAAAAAA8AUCAAAAAAAAAAAAAADwv4gGAgAAAAAAjwYCAAAAAAAAAAAAAADwvxUHAgAAAAAAHAcCAAAAAAAAAAAAAADwv9UKAgAAAAAA3AoCAAAAAAAAAAAAAADwv38LAgAAAAAAhgsCAAAAAAAAAAAAAADwvy0MAgAAAAAANAwCAAAAAAAAAAAAAADwv+wMAgAAAAAA8wwCAAAAAAAAAAAAAADwv6oNAgAAAAAAsQ0CAAAAAAAAAAAAAADwv20OAgAAAAAAdA4CAAAAAAAAAAAAAADwvyoPAgAAAAAAMQ8CAAAAAAAAAAAAAADwv+sPAgAAAAAA8g8CAAAAAAAAAAAAAADwvyQUAgAAAAAAKxQCAAAAAAAAAAAAAADwv98UAgAAAAAA5hQCAAAAAAAAAAAAAADwv4gVAgAAAAAAjxUCAAAAAAAAAAAAAADwv2sWAgAAAAAAchYCAAAAAAAAAAAAAADwvzIXAgAAAAAAORcCAAAAAAAAAAAAAADwv/gXAgAAAAAA/xcCAAAAAAAAAAAAAADwv7kYAgAAAAAAwBgCAAAAAAAAAAAAAADwv3sZAgAAAAAAghkCAAAAAAAAAAAAAADwv0obAgAAAAAAURsCAAAAAAAAAAAAAADwv6oeAgAAAAAAsR4CAAAAAAAAAAAAAADwv4kfAgAAAAAAkB8CAAAAAAAAAAAAAADwv2ggAgAAAAAAbyACAAAAAAAAAAAAAADwv0YhAgAAAAAATSECAAAAAAAAAAAAAADwvyQiAgAAAAAAKyICAAAAAAAAAAAAAADwvwIjAgAAAAAACSMCAAAAAAAAAAAAAADwvyEkAgAAAAAAKCQCAAAAAAAAAAAAAADwv90kAgAAAAAA5CQCAAAAAAAAAAAAAADwv8EoAgAAAAAAyCgCAAAAAAAAAAAAAADwv1MpAgAAAAAAWikCAAAAAAAAAAAAAADwv+8pAgAAAAAA9ikCAAAAAAAAAAAAAADwv28sAgAAAAAAdiwCAAAAAAAAAAAAAADwvwEtAgAAAAAACC0CAAAAAAAAAAAAAADwv50tAgAAAAAApC0CAAAAAAAAAAAAAADwvyswAgAAAAAAMjACAAAAAAAAAAAAAADwv70wAgAAAAAAxDACAAAAAAAAAAAAAADwv1kxAgAAAAAAYDECAAAAAAAAAAAAAADwv/UzAgAAAAAA/DMCAAAAAAAAAAAAAADwv4c0AgAAAAAAjjQCAAAAAAAAAAAAAADwvyM1AgAAAAAAKjUCAAAAAAAAAAAAAADwvw",
								"scope": "col_A54B4BFF"
							},
							"col_A54B4BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A54B4BFF_circle.png",
								"regions": "cQAAAM+1AQAAAAAAz7UBAAAAAAAAAAAAAADwv3m2AQAAAAAAebYBAAAAAAAAAAAAAADwv/u2AQAAAAAA+7YBAAAAAAAAAAAAAADwv7m3AQAAAAAAubcBAAAAAAAAAAAAAADwv3i4AQAAAAAAeLgBAAAAAAAAAAAAAADwvza5AQAAAAAANrkBAAAAAAAAAAAAAADwv/m5AQAAAAAA+bkBAAAAAAAAAAAAAADwv/69AQAAAAAA/r0BAAAAAAAAAAAAAADwv6m+AQAAAAAAqb4BAAAAAAAAAAAAAADwvxq/AQAAAAAAGr8BAAAAAAAAAAAAAADwv9+/AQAAAAAA378BAAAAAAAAAAAAAADwv6LAAQAAAAAAosABAAAAAAAAAAAAAADwv2XBAQAAAAAAZcEBAAAAAAAAAAAAAADwv3HFAQAAAAAAccUBAAAAAAAAAAAAAADwvx7GAQAAAAAAHsYBAAAAAAAAAAAAAADwv6TGAQAAAAAApMYBAAAAAAAAAAAAAADwv2fHAQAAAAAAZ8cBAAAAAAAAAAAAAADwvyzIAQAAAAAALMgBAAAAAAAAAAAAAADwv+/IAQAAAAAA78gBAAAAAAAAAAAAAADwv+HMAQAAAAAA4cwBAAAAAAAAAAAAAADwv4zNAQAAAAAAjM0BAAAAAAAAAAAAAADwv/3NAQAAAAAA/c0BAAAAAAAAAAAAAADwv8LOAQAAAAAAws4BAAAAAAAAAAAAAADwv4XPAQAAAAAAhc8BAAAAAAAAAAAAAADwv0jQAQAAAAAASNABAAAAAAAAAAAAAADwv1PUAQAAAAAAU9QBAAAAAAAAAAAAAADwvwDVAQAAAAAAANUBAAAAAAAAAAAAAADwv4bVAQAAAAAAhtUBAAAAAAAAAAAAAADwv0nWAQAAAAAASdYBAAAAAAAAAAAAAADwvw7XAQAAAAAADtcBAAAAAAAAAAAAAADwv9HXAQAAAAAA0dcBAAAAAAAAAAAAAADwv/HbAQAAAAAA8dsBAAAAAAAAAAAAAADwv67cAQAAAAAArtwBAAAAAAAAAAAAAADwv2ndAQAAAAAAad0BAAAAAAAAAAAAAADwvy3eAQAAAAAALd4BAAAAAAAAAAAAAADwv/XeAQAAAAAA9d4BAAAAAAAAAAAAAADwv7zfAQAAAAAAvN8BAAAAAAAAAAAAAADwv4LgAQAAAAAAguABAAAAAAAAAAAAAADwv0PhAQAAAAAAQ+EBAAAAAAAAAAAAAADwvz7jAQAAAAAAPuMBAAAAAAAAAAAAAADwv7DmAQAAAAAAsOYBAAAAAAAAAAAAAADwv23nAQAAAAAAbecBAAAAAAAAAAAAAADwvyjoAQAAAAAAKOgBAAAAAAAAAAAAAADwv+zoAQAAAAAA7OgBAAAAAAAAAAAAAADwv6zsAQAAAAAArOwBAAAAAAAAAAAAAADwv3HtAQAAAAAAce0BAAAAAAAAAAAAAADwvz3uAQAAAAAAPe4BAAAAAAAAAAAAAADwvwnvAQAAAAAACe8BAAAAAAAAAAAAAADwv9XvAQAAAAAA1e8BAAAAAAAAAAAAAADwv5zwAQAAAAAAnPABAAAAAAAAAAAAAADwv2XxAQAAAAAAZfEBAAAAAAAAAAAAAADwvzDyAQAAAAAAMPIBAAAAAAAAAAAAAADwv/vyAQAAAAAA+/IBAAAAAAAAAAAAAADwv8fzAQAAAAAAx/MBAAAAAAAAAAAAAADwv5P0AQAAAAAAk/QBAAAAAAAAAAAAAADwv1/1AQAAAAAAX/UBAAAAAAAAAAAAAADwv0n2AQAAAAAASfYBAAAAAAAAAAAAAADwv972AQAAAAAA3vYBAAAAAAAAAAAAAADwv333AQAAAAAAffcBAAAAAAAAAAAAAADwvwD4AQAAAAAAAPgBAAAAAAAAAAAAAADwv5X7AQAAAAAAlfsBAAAAAAAAAAAAAADwv1r8AQAAAAAAWvwBAAAAAAAAAAAAAADwvyb9AQAAAAAAJv0BAAAAAAAAAAAAAADwv/L9AQAAAAAA8v0BAAAAAAAAAAAAAADwv77+AQAAAAAAvv4BAAAAAAAAAAAAAADwv4X/AQAAAAAAhf8BAAAAAAAAAAAAAADwv04AAgAAAAAATgACAAAAAAAAAAAAAADwvxkBAgAAAAAAGQECAAAAAAAAAAAAAADwv+QBAgAAAAAA5AECAAAAAAAAAAAAAADwv7ACAgAAAAAAsAICAAAAAAAAAAAAAADwv3wDAgAAAAAAfAMCAAAAAAAAAAAAAADwv0gEAgAAAAAASAQCAAAAAAAAAAAAAADwvzIFAgAAAAAAMgUCAAAAAAAAAAAAAADwv8cFAgAAAAAAxwUCAAAAAAAAAAAAAADwv2YGAgAAAAAAZgYCAAAAAAAAAAAAAADwv+kGAgAAAAAA6QYCAAAAAAAAAAAAAADwv7MKAgAAAAAAswoCAAAAAAAAAAAAAADwv10LAgAAAAAAXQsCAAAAAAAAAAAAAADwv98LAgAAAAAA3wsCAAAAAAAAAAAAAADwv50MAgAAAAAAnQwCAAAAAAAAAAAAAADwv1wNAgAAAAAAXA0CAAAAAAAAAAAAAADwvxoOAgAAAAAAGg4CAAAAAAAAAAAAAADwv90OAgAAAAAA3Q4CAAAAAAAAAAAAAADwv5oPAgAAAAAAmg8CAAAAAAAAAAAAAADwv9cTAgAAAAAA1xMCAAAAAAAAAAAAAADwv5QUAgAAAAAAlBQCAAAAAAAAAAAAAADwv08VAgAAAAAATxUCAAAAAAAAAAAAAADwvxMWAgAAAAAAExYCAAAAAAAAAAAAAADwv9sWAgAAAAAA2xYCAAAAAAAAAAAAAADwv6IXAgAAAAAAohcCAAAAAAAAAAAAAADwv2gYAgAAAAAAaBgCAAAAAAAAAAAAAADwvykZAgAAAAAAKRkCAAAAAAAAAAAAAADwvyQbAgAAAAAAJBsCAAAAAAAAAAAAAADwv0weAgAAAAAATB4CAAAAAAAAAAAAAADwvyofAgAAAAAAKh8CAAAAAAAAAAAAAADwvwogAgAAAAAACiACAAAAAAAAAAAAAADwv+ggAgAAAAAA6CACAAAAAAAAAAAAAADwv8chAgAAAAAAxyECAAAAAAAAAAAAAADwv6QiAgAAAAAApCICAAAAAAAAAAAAAADwv9cjAgAAAAAA1yMCAAAAAAAAAAAAAADwv5EkAgAAAAAAkSQCAAAAAAAAAAAAAADwv58oAgAAAAAAnygCAAAAAAAAAAAAAADwvwspAgAAAAAACykCAAAAAAAAAAAAAADwv8MpAgAAAAAAwykCAAAAAAAAAAAAAADwv00sAgAAAAAATSwCAAAAAAAAAAAAAADwv7ksAgAAAAAAuSwCAAAAAAAAAAAAAADwv3EtAgAAAAAAcS0CAAAAAAAAAAAAAADwvwkwAgAAAAAACTACAAAAAAAAAAAAAADwv3UwAgAAAAAAdTACAAAAAAAAAAAAAADwvy0xAgAAAAAALTECAAAAAAAAAAAAAADwv9MzAgAAAAAA0zMCAAAAAAAAAAAAAADwvz80AgAAAAAAPzQCAAAAAAAAAAAAAADwv/c0AgAAAAAA9zQCAAAAAAAAAAAAAADwvw",
								"scope": "col_gutter"
							},
							"col_AFAFAFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										113370,
										113377
									],
									[
										113696,
										113703
									],
									[
										115278,
										115285
									],
									[
										115594,
										115601
									],
									[
										117208,
										117215
									],
									[
										117522,
										117529
									],
									[
										119089,
										119096
									],
									[
										119405,
										119412
									],
									[
										121018,
										121025
									],
									[
										121332,
										121339
									],
									[
										123433,
										123440
									],
									[
										124082,
										124089
									],
									[
										125395,
										125402
									],
									[
										125709,
										125716
									],
									[
										129202,
										129209
									],
									[
										129517,
										129524
									],
									[
										133019,
										133026
									],
									[
										133334,
										133341
									],
									[
										135295,
										135302
									],
									[
										135620,
										135627
									],
									[
										137743,
										137750
									],
									[
										138392,
										138399
									],
									[
										140657,
										140664
									],
									[
										140983,
										140990
									],
									[
										141940,
										141947
									],
									[
										142882,
										142889
									],
									[
										143838,
										143845
									],
									[
										144808,
										144815
									]
								],
								"scope": "col_AFAFAFFF"
							},
							"col_AFAFAFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_AFAFAFFF_circle.png",
								"regions":
								[
									[
										113334,
										113334
									],
									[
										113659,
										113659
									],
									[
										115242,
										115242
									],
									[
										115557,
										115557
									],
									[
										117172,
										117172
									],
									[
										117485,
										117485
									],
									[
										119053,
										119053
									],
									[
										119368,
										119368
									],
									[
										120982,
										120982
									],
									[
										121295,
										121295
									],
									[
										123397,
										123397
									],
									[
										124045,
										124045
									],
									[
										125359,
										125359
									],
									[
										125672,
										125672
									],
									[
										129166,
										129166
									],
									[
										129480,
										129480
									],
									[
										132983,
										132983
									],
									[
										133297,
										133297
									],
									[
										135259,
										135259
									],
									[
										135583,
										135583
									],
									[
										137707,
										137707
									],
									[
										138355,
										138355
									],
									[
										140621,
										140621
									],
									[
										140946,
										140946
									],
									[
										141904,
										141904
									],
									[
										142846,
										142846
									],
									[
										143802,
										143802
									],
									[
										144772,
										144772
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										100040,
										100047
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										99960,
										99960
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "data/5V-to-12V-Converter-alt-board.out.svg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 161625,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "data/1.5-Volt-Headphone-Amplifier.GTL",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1566,
						"regions":
						{
						},
						"selection":
						[
							[
								22,
								22
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tabs_extra_last_activated": 1716224009.58,
							"tabs_extra_last_activated_sheet_index": 5
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"svg.js",
				"lib/svg.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"draw.ht",
				"draw.html"
			],
			[
				"draw",
				"draw-utils.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"htmle",
				"lib/htmlentities.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 458.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
