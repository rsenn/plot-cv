{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Extra",
				"ExtractRotation"
			],
			[
				"tra",
				"transformation"
			],
			[
				"define",
				"defineProperties"
			],
			[
				"getters",
				"gettersSetters"
			],
			[
				"circui",
				"circuitFilePath"
			],
			[
				"Conn",
				"ConnectionPoint"
			],
			[
				"parseCom",
				"parseCommentOrEmpty"
			],
			[
				"circ",
				"circuitFilePath"
			],
			[
				"built",
				"builtin_attr"
			],
			[
				"dep",
				"depthOrPred"
			],
			[
				"exte",
				"extendAsyncGenerator"
			],
			[
				"extend",
				"extendArray"
			],
			[
				"allo",
				"allowedDirs"
			],
			[
				"getOwnPr",
				"getOwnPropertyNames(...)"
			],
			[
				"Prom",
				"PromiseWorker"
			],
			[
				"trans",
				"transformation"
			],
			[
				"allow",
				"allowedDirs"
			],
			[
				"Get",
				"GetElementsBySignal"
			],
			[
				"GetEle",
				"GetElementsBySignal"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"ColorSi",
				"ColorSignals"
			],
			[
				"HTML",
				"HTMLTableRow"
			],
			[
				"HTMLTable",
				"HTMLTableColumn"
			],
			[
				"rend",
				"renderToString"
			],
			[
				"Pack",
				"Package2Circuit"
			],
			[
				"lazyP",
				"lazyProperties"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  m =>\n() =>\n  m =>\n() =>\n  m =>\n() =>\nIfDebug(token)\nLogIfDebug(token, loggerFn)\n  () =>\n  (...args) =>\nReadFd(fd, binary)\nReadFile(name, binary)\nLoadHistory(filename)\n  parse = () =>\n  entry =>\nReadJSON(filename)\nReadXML(filename, ...args)\nMapFile(filename)\nWriteFile(name, data, verbose = true)\nWriteJSON(name, data, ...args)\nWriteXML(name, data, ...args)\nReadBJSON(filename)\nWriteBJSON(name, data)\nDirIterator(...args)\n  () =>\nRecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)\n  pred = (entry, file, dir, depth) =>\nReadDirRecursive(dir, maxDepth = Infinity)\nFilter(gen, regEx = /.*/)\nFilterImages(gen)\nSortFiles(arr, field = 'ctime')\n(a, b) =>\nStatFiles(gen)\n  toString()\n() =>\n  toString()\n  get landscape()\n  get portrait()\nFdReader(fd, bufferSize = 1024)\nCopyToClipboard(text)\nReadCallback(fd, fn = data => {})\n  () =>\nLogCall(fn, thisObj)\n  function(...args)\n  arg =>\nSpawn(file, args, options = {})\n  wait()\nFetchURL(url, options = {})\n(acc, [k, v]) =>\n  data =>\n  data =>",
			"settings":
			{
				"buffer_size": 1010,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
						"symkeys":
						[
							[
								39,
								61
							],
							[
								3958,
								3968
							],
							[
								3995,
								4003
							],
							[
								4029,
								4041
							],
							[
								4066,
								4073
							],
							[
								4331,
								4338
							],
							[
								4389,
								4396
							],
							[
								4490,
								4493
							],
							[
								4571,
								4574
							],
							[
								4666,
								4669
							],
							[
								4768,
								4775
							],
							[
								4852,
								4855
							],
							[
								4945,
								4954
							],
							[
								5243,
								5252
							],
							[
								5276,
								5285
							],
							[
								5308,
								5317
							],
							[
								5351,
								5360
							],
							[
								5462,
								5471
							],
							[
								5631,
								5643
							],
							[
								5854,
								5863
							],
							[
								6380,
								6387
							],
							[
								6655,
								6669
							],
							[
								6687,
								6700
							],
							[
								6718,
								6730
							],
							[
								6756,
								6768
							],
							[
								6780,
								6792
							],
							[
								6933,
								6942
							],
							[
								7513,
								7529
							],
							[
								7653,
								7662
							],
							[
								7688,
								7696
							],
							[
								8361,
								8371
							],
							[
								8593,
								8603
							],
							[
								8705,
								8717
							],
							[
								9058,
								9083
							],
							[
								9098,
								9107
							],
							[
								9185,
								9194
							],
							[
								10217,
								10226
							],
							[
								10330,
								10337
							],
							[
								10456,
								10463
							],
							[
								10638,
								10646
							],
							[
								10821,
								10830
							],
							[
								10924,
								10936
							],
							[
								11351,
								11361
							],
							[
								12225,
								12233
							],
							[
								13469,
								13487
							],
							[
								14988,
								15010
							],
							[
								15066,
								15076
							],
							[
								15671,
								15691
							],
							[
								15702,
								15727
							],
							[
								15767,
								15788
							],
							[
								15807,
								15822
							],
							[
								16016,
								16023
							],
							[
								16836,
								16844
							],
							[
								16948,
								16959
							],
							[
								17071,
								17084
							],
							[
								17267,
								17276
							],
							[
								17378,
								17390
							],
							[
								17402,
								17411
							],
							[
								17720,
								17740
							],
							[
								18078,
								18097
							],
							[
								18311,
								18319
							],
							[
								19512,
								19523
							],
							[
								19657,
								19672
							],
							[
								19745,
								19766
							],
							[
								19834,
								19849
							],
							[
								19923,
								19936
							],
							[
								20039,
								20051
							],
							[
								20165,
								20175
							],
							[
								20234,
								20251
							],
							[
								20313,
								20323
							],
							[
								20421,
								20438
							],
							[
								20543,
								20562
							],
							[
								20744,
								20770
							],
							[
								20853,
								20868
							],
							[
								20949,
								20960
							],
							[
								21041,
								21054
							],
							[
								21135,
								21156
							],
							[
								21354,
								21373
							],
							[
								21569,
								21596
							],
							[
								21680,
								21700
							],
							[
								22026,
								22044
							],
							[
								22629,
								22641
							],
							[
								23809,
								23822
							],
							[
								23869,
								23872
							],
							[
								23896,
								23899
							],
							[
								24021,
								24024
							],
							[
								24036,
								24039
							],
							[
								24085,
								24088
							],
							[
								24355,
								24358
							],
							[
								24370,
								24373
							],
							[
								24410,
								24413
							],
							[
								24560,
								24575
							],
							[
								24595,
								24610
							],
							[
								24641,
								24652
							],
							[
								24686,
								24698
							],
							[
								24831,
								24852
							],
							[
								25162,
								25182
							],
							[
								25678,
								25693
							],
							[
								26124,
								26147
							],
							[
								26159,
								26168
							],
							[
								26372,
								26392
							],
							[
								26538,
								26547
							],
							[
								26638,
								26651
							],
							[
								26771,
								26780
							],
							[
								26914,
								26943
							],
							[
								27037,
								27058
							],
							[
								27165,
								27186
							],
							[
								27198,
								27207
							],
							[
								27343,
								27358
							],
							[
								27608,
								27623
							],
							[
								28681,
								28697
							],
							[
								28913,
								28926
							],
							[
								29424,
								29441
							],
							[
								29531,
								29544
							],
							[
								29688,
								29699
							],
							[
								29790,
								29799
							],
							[
								30706,
								30716
							],
							[
								30728,
								30737
							],
							[
								30877,
								30888
							],
							[
								31028,
								31038
							],
							[
								31054,
								31065
							],
							[
								31091,
								31100
							],
							[
								31116,
								31125
							],
							[
								31200,
								31210
							],
							[
								31280,
								31289
							],
							[
								31364,
								31373
							],
							[
								31560,
								31569
							],
							[
								31587,
								31597
							],
							[
								31623,
								31640
							],
							[
								31749,
								31757
							],
							[
								32228,
								32245
							],
							[
								32345,
								32362
							],
							[
								32483,
								32493
							],
							[
								32600,
								32614
							],
							[
								32689,
								32703
							],
							[
								32902,
								32919
							],
							[
								33199,
								33218
							],
							[
								33419,
								33430
							],
							[
								33766,
								33780
							],
							[
								34731,
								34746
							],
							[
								34763,
								34778
							],
							[
								34796,
								34809
							],
							[
								34846,
								34856
							],
							[
								34905,
								34915
							],
							[
								34955,
								34968
							],
							[
								35436,
								35449
							],
							[
								35915,
								35924
							],
							[
								36023,
								36032
							],
							[
								36118,
								36127
							],
							[
								36228,
								36237
							],
							[
								36502,
								36511
							],
							[
								36655,
								36664
							],
							[
								36774,
								36787
							],
							[
								36799,
								36808
							],
							[
								36871,
								36880
							],
							[
								36944,
								36953
							],
							[
								37012,
								37021
							],
							[
								37418,
								37439
							]
						],
						"symlist":
						[
							"QJS_MODULES_INTERNAL_H",
							"OPCodeEnum",
							"JSString",
							"JSAtomStruct",
							"JSShape",
							"JSValue",
							"JSValue",
							"int",
							"int",
							"int",
							"JSValue",
							"int",
							"JSRuntime",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JSStackFrame",
							"list_head",
							"JSClass",
							"JS_MODE_STRICT",
							"JS_MODE_STRIP",
							"JS_MODE_MATH",
							"JSStackFrame",
							"JSStackFrame",
							"list_head",
							"JSGCObjectHeader",
							"list_head",
							"JSVarRef",
							"JSFloatEnv",
							"JSBigFloat",
							"JSBigDecimal",
							"JS_INTERRUPT_COUNTER_INIT",
							"JSContext",
							"list_head",
							"list_head",
							" JSValue",
							" JSValue",
							"JSString",
							"list_head",
							"JSClosureVar",
							"JSVarScope",
							"JSVarDef",
							"JSFunctionBytecode",
							"JSDebuggerFunctionInfo",
							"JSProperty",
							"JS_PROP_INITIAL_SIZE",
							"JS_PROP_INITIAL_HASH_SIZE",
							"JS_ARRAY_INITIAL_SIZE",
							"JSShapeProperty",
							"JSShape",
							"JSRegExp",
							"JSProxyData",
							"JSArrayBuffer",
							"list_head",
							"JSTypedArray",
							"list_head",
							"JSAsyncFunctionState",
							"JSAsyncFunctionData",
							"JSObject",
							"JSMapRecord",
							"JSBoundFunction",
							"JSCFunctionDataRecord",
							"JSForInIterator",
							"JSArrayBuffer",
							"JSTypedArray",
							"JSFloatEnv",
							"JSOperatorSetData",
							"JSMapState",
							"JSMapIteratorData",
							"JSArrayIteratorData",
							"JSRegExpStringIteratorData",
							"JSGeneratorData",
							"JSProxyData",
							"JSPromiseData",
							"JSPromiseFunctionData",
							"JSAsyncFunctionData",
							"JSAsyncFromSyncIteratorData",
							"JSAsyncGeneratorData",
							"JSFunctionBytecode",
							"JSTypedArray",
							"SHORT_OPCODES",
							"FMT",
							"DEF",
							"FMT",
							"DEF",
							"def",
							"FMT",
							"DEF",
							"def",
							"JS_ATOM_TAG_INT",
							"JS_ATOM_MAX_INT",
							"JS_ATOM_MAX",
							"StringBuffer",
							"JSCFunctionDataRecord",
							"JSMemoryUsage_helper",
							"JSGeneratorData",
							"JSAsyncGeneratorRequest",
							"list_head",
							"JSAsyncGeneratorData",
							"list_head",
							"JSPromiseData",
							"list_head",
							"JSPromiseFunctionDataResolved",
							"JSPromiseFunctionData",
							"JSPromiseReactionData",
							"list_head",
							"JSBoundFunction",
							"JSForInIterator",
							"JSReqModuleEntry",
							"JSExportEntry",
							"JSStarExportEntry",
							"JSImportEntry",
							"JSModuleDef",
							"list_head",
							"JSJobEntry",
							"list_head",
							"JSMapRecord",
							"JSMapState",
							"JSMapRecord",
							"list_head",
							"list_head",
							"JSMapState",
							"list_head",
							"list_head",
							"MAGIC_SET",
							"MAGIC_WEAK",
							"JSMapIteratorData",
							"JSOpCode",
							"short_opcode_info",
							"short_opcode_info",
							"JSParsePos",
							"JSResolveEntry",
							"JSResolveState",
							"ExportedNameEntry",
							"GetExportNamesState",
							"CodeContext",
							"StackSizeState",
							"BC_BASE_VERSION",
							"BC_BASE_VERSION",
							"BC_BE_VERSION",
							"BC_VERSION",
							"BC_VERSION",
							"BCWriterState",
							"BCReaderState",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JSThreadState",
							"list_head",
							"list_head",
							"list_head",
							"list_head",
							"JS_IsUncatchableError"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAwAAICBtID0+CigpID0+CiAgbSA9PgooKSA9PgogIG0gPT4KKCkgPT4KSWZEZWJ1Zyh0b2tlbikKTG9nSWZEZWJ1Zyh0b2tlbiwgbG9nZ2VyRm4pCiAgKCkgPT4KICAoLi4uYXJncykgPT4KUmVhZEZkKGZkLCBiaW5hcnkpClJlYWRGaWxlKG5hbWUsIGJpbmFyeSkKTG9hZEhpc3RvcnkoZmlsZW5hbWUpCiAgcGFyc2UgPSAoKSA9PgogIGVudHJ5ID0+ClJlYWRKU09OKGZpbGVuYW1lKQpSZWFkWE1MKGZpbGVuYW1lLCAuLi5hcmdzKQpNYXBGaWxlKGZpbGVuYW1lKQpXcml0ZUZpbGUobmFtZSwgZGF0YSwgdmVyYm9zZSA9IHRydWUpCldyaXRlSlNPTihuYW1lLCBkYXRhLCAuLi5hcmdzKQpXcml0ZVhNTChuYW1lLCBkYXRhLCAuLi5hcmdzKQpSZWFkQkpTT04oZmlsZW5hbWUpCldyaXRlQkpTT04obmFtZSwgZGF0YSkKRGlySXRlcmF0b3IoLi4uYXJncykKICAoKSA9PgpSZWN1cnNpdmVEaXJJdGVyYXRvcihkaXIsIHByZWQgPSAoZW50cnksIGZpbGUsIGRpciwgZGVwdGgpID0+IHRydWUsIGRlcHRoID0gMCkKICBwcmVkID0gKGVudHJ5LCBmaWxlLCBkaXIsIGRlcHRoKSA9PgpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKRmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpGaWx0ZXJJbWFnZXMoZ2VuKQpTb3J0RmlsZXMoYXJyLCBmaWVsZCA9ICdjdGltZScpCihhLCBiKSA9PgpTdGF0RmlsZXMoZ2VuKQogIHRvU3RyaW5nKCkKKCkgPT4KICB0b1N0cmluZygpCiAgZ2V0IGxhbmRzY2FwZSgpCiAgZ2V0IHBvcnRyYWl0KCkKRmRSZWFkZXIoZmQsIGJ1ZmZlclNpemUgPSAxMDI0KQpDb3B5VG9DbGlwYm9hcmQodGV4dCkKUmVhZENhbGxiYWNrKGZkLCBmbiA9IGRhdGEgPT4ge30pCiAgKCkgPT4KTG9nQ2FsbChmbiwgdGhpc09iaikKICBmdW5jdGlvbiguLi5hcmdzKQogIGFyZyA9PgpTcGF3bihmaWxlLCBhcmdzLCBvcHRpb25zID0ge30pCiAgd2FpdCgpCkZldGNoVVJMKHVybCwgb3B0aW9ucyA9IHt9KQooYWNjLCBbaywgdl0pID0+CiAgZGF0YSA9PgogIGRhdGEgPT4AAAAAAAAAAG0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/io-helpers.js",
						"symkeys":
						[
							[
								241,
								245
							],
							[
								266,
								271
							],
							[
								310,
								314
							],
							[
								334,
								339
							],
							[
								376,
								380
							],
							[
								399,
								404
							],
							[
								417,
								441
							],
							[
								639,
								676
							],
							[
								707,
								713
							],
							[
								779,
								792
							],
							[
								823,
								851
							],
							[
								1093,
								1125
							],
							[
								1263,
								1294
							],
							[
								1371,
								1384
							],
							[
								1604,
								1612
							],
							[
								1697,
								1725
							],
							[
								1904,
								1940
							],
							[
								2132,
								2159
							],
							[
								2407,
								2454
							],
							[
								3084,
								3124
							],
							[
								3288,
								3327
							],
							[
								3391,
								3420
							],
							[
								3762,
								3794
							],
							[
								4051,
								4082
							],
							[
								4157,
								4163
							],
							[
								4681,
								4770
							],
							[
								4926,
								4961
							],
							[
								5493,
								5546
							],
							[
								5975,
								6011
							],
							[
								6079,
								6106
							],
							[
								6159,
								6200
							],
							[
								6226,
								6235
							],
							[
								6277,
								6302
							],
							[
								6424,
								6434
							],
							[
								6550,
								6555
							],
							[
								6655,
								6665
							],
							[
								6742,
								6757
							],
							[
								6828,
								6842
							],
							[
								7804,
								7851
							],
							[
								8256,
								8287
							],
							[
								8638,
								8681
							],
							[
								8742,
								8748
							],
							[
								8978,
								9008
							],
							[
								9040,
								9058
							],
							[
								9190,
								9196
							],
							[
								9318,
								9359
							],
							[
								10024,
								10030
							],
							[
								10184,
								10221
							],
							[
								10436,
								10452
							],
							[
								11339,
								11347
							],
							[
								11435,
								11443
							]
						],
						"symlist":
						[
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							" function IfDebug(token)",
							" function LogIfDebug(token, loggerFn)",
							" () =>",
							" (...args) =>",
							" function ReadFd(fd, binary)",
							" function ReadFile(name, binary)",
							" function LoadHistory(filename)",
							"parse = () =>",
							"entry =>",
							" function ReadJSON(filename)",
							" function ReadXML(filename, ...args)",
							" function MapFile(filename)",
							" function WriteFile(name, data, verbose = true)",
							" function WriteJSON(name, data, ...args)",
							" function WriteXML(name, data, ...args)",
							" function ReadBJSON(filename)",
							" function WriteBJSON(name, data)",
							" function* DirIterator(...args)",
							" () =>",
							" function* RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
							"pred = (entry, file, dir, depth) =>",
							" function* ReadDirRecursive(dir, maxDepth = Infinity)",
							" function* Filter(gen, regEx = /.*/)",
							" function FilterImages(gen)",
							" function SortFiles(arr, field = 'ctime')",
							"(a, b) =>",
							" function* StatFiles(gen)",
							"toString()",
							"() =>",
							"toString()",
							"get landscape()",
							"get portrait()",
							"async function* FdReader(fd, bufferSize = 1024)",
							" function CopyToClipboard(text)",
							" function ReadCallback(fd, fn = data => {})",
							" () =>",
							" function LogCall(fn, thisObj)",
							" function(...args)",
							"arg =>",
							" function Spawn(file, args, options = {})",
							"wait()",
							" function FetchURL(url, options = {})",
							"(acc, [k, v]) =>",
							" data =>",
							" data =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtCAAAUUpTX01PRFVMRVNfSU5URVJOQUxfSApPUENvZGVFbnVtCkpTU3RyaW5nCkpTQXRvbVN0cnVjdApKU1NoYXBlCkpTVmFsdWUKSlNWYWx1ZQogIGludAogIGludAogIGludApKU1ZhbHVlCiAgaW50CkpTUnVudGltZQogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApKU1N0YWNrRnJhbWUKICBsaXN0X2hlYWQKSlNDbGFzcwpKU19NT0RFX1NUUklDVApKU19NT0RFX1NUUklQCkpTX01PREVfTUFUSApKU1N0YWNrRnJhbWUKSlNTdGFja0ZyYW1lCiAgbGlzdF9oZWFkCkpTR0NPYmplY3RIZWFkZXIKICBsaXN0X2hlYWQKSlNWYXJSZWYKSlNGbG9hdEVudgpKU0JpZ0Zsb2F0CkpTQmlnRGVjaW1hbApKU19JTlRFUlJVUFRfQ09VTlRFUl9JTklUCkpTQ29udGV4dAogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApKU1ZhbHVlCkpTVmFsdWUKSlNTdHJpbmcKICBsaXN0X2hlYWQKSlNDbG9zdXJlVmFyCkpTVmFyU2NvcGUKSlNWYXJEZWYKSlNGdW5jdGlvbkJ5dGVjb2RlCkpTRGVidWdnZXJGdW5jdGlvbkluZm8KSlNQcm9wZXJ0eQpKU19QUk9QX0lOSVRJQUxfU0laRQpKU19QUk9QX0lOSVRJQUxfSEFTSF9TSVpFCkpTX0FSUkFZX0lOSVRJQUxfU0laRQpKU1NoYXBlUHJvcGVydHkKSlNTaGFwZQpKU1JlZ0V4cApKU1Byb3h5RGF0YQpKU0FycmF5QnVmZmVyCiAgbGlzdF9oZWFkCkpTVHlwZWRBcnJheQogIGxpc3RfaGVhZApKU0FzeW5jRnVuY3Rpb25TdGF0ZQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTT2JqZWN0CkpTTWFwUmVjb3JkCkpTQm91bmRGdW5jdGlvbgpKU0NGdW5jdGlvbkRhdGFSZWNvcmQKSlNGb3JJbkl0ZXJhdG9yCkpTQXJyYXlCdWZmZXIKSlNUeXBlZEFycmF5CkpTRmxvYXRFbnYKSlNPcGVyYXRvclNldERhdGEKSlNNYXBTdGF0ZQpKU01hcEl0ZXJhdG9yRGF0YQpKU0FycmF5SXRlcmF0b3JEYXRhCkpTUmVnRXhwU3RyaW5nSXRlcmF0b3JEYXRhCkpTR2VuZXJhdG9yRGF0YQpKU1Byb3h5RGF0YQpKU1Byb21pc2VEYXRhCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YQpKU0FzeW5jRnVuY3Rpb25EYXRhCkpTQXN5bmNGcm9tU3luY0l0ZXJhdG9yRGF0YQpKU0FzeW5jR2VuZXJhdG9yRGF0YQpKU0Z1bmN0aW9uQnl0ZWNvZGUKSlNUeXBlZEFycmF5ClNIT1JUX09QQ09ERVMKRk1UCkRFRgpGTVQKREVGCiAgZGVmCkZNVApERUYKICBkZWYKSlNfQVRPTV9UQUdfSU5UCkpTX0FUT01fTUFYX0lOVApKU19BVE9NX01BWApTdHJpbmdCdWZmZXIKSlNDRnVuY3Rpb25EYXRhUmVjb3JkCkpTTWVtb3J5VXNhZ2VfaGVscGVyCkpTR2VuZXJhdG9yRGF0YQpKU0FzeW5jR2VuZXJhdG9yUmVxdWVzdAogIGxpc3RfaGVhZApKU0FzeW5jR2VuZXJhdG9yRGF0YQogIGxpc3RfaGVhZApKU1Byb21pc2VEYXRhCiAgbGlzdF9oZWFkCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YVJlc29sdmVkCkpTUHJvbWlzZUZ1bmN0aW9uRGF0YQpKU1Byb21pc2VSZWFjdGlvbkRhdGEKICBsaXN0X2hlYWQKSlNCb3VuZEZ1bmN0aW9uCkpTRm9ySW5JdGVyYXRvcgpKU1JlcU1vZHVsZUVudHJ5CkpTRXhwb3J0RW50cnkKSlNTdGFyRXhwb3J0RW50cnkKSlNJbXBvcnRFbnRyeQpKU01vZHVsZURlZgogIGxpc3RfaGVhZApKU0pvYkVudHJ5CiAgbGlzdF9oZWFkCkpTTWFwUmVjb3JkCkpTTWFwU3RhdGUKSlNNYXBSZWNvcmQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKSlNNYXBTdGF0ZQogIGxpc3RfaGVhZAogIGxpc3RfaGVhZApNQUdJQ19TRVQKTUFHSUNfV0VBSwpKU01hcEl0ZXJhdG9yRGF0YQpKU09wQ29kZQogIHNob3J0X29wY29kZV9pbmZvCiAgc2hvcnRfb3Bjb2RlX2luZm8KSlNQYXJzZVBvcwpKU1Jlc29sdmVFbnRyeQpKU1Jlc29sdmVTdGF0ZQpFeHBvcnRlZE5hbWVFbnRyeQpHZXRFeHBvcnROYW1lc1N0YXRlCkNvZGVDb250ZXh0ClN0YWNrU2l6ZVN0YXRlCkJDX0JBU0VfVkVSU0lPTgpCQ19CQVNFX1ZFUlNJT04KQkNfQkVfVkVSU0lPTgpCQ19WRVJTSU9OCkJDX1ZFUlNJT04KQkNXcml0ZXJTdGF0ZQpCQ1JlYWRlclN0YXRlCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCiAgbGlzdF9oZWFkCkpTVGhyZWFkU3RhdGUKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKICBsaXN0X2hlYWQKSlNfSXNVbmNhdGNoYWJsZUVycm9yAAAAAAAAAADyAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
						"symkeys":
						[
							[
								42,
								67
							],
							[
								175,
								203
							],
							[
								313,
								338
							],
							[
								509,
								537
							],
							[
								716,
								741
							],
							[
								1081,
								1092
							],
							[
								1363,
								1377
							],
							[
								1511,
								1523
							],
							[
								1669,
								1684
							],
							[
								1832,
								1844
							],
							[
								1982,
								1997
							],
							[
								2127,
								2141
							],
							[
								2271,
								2283
							],
							[
								2376,
								2391
							],
							[
								2501,
								2513
							],
							[
								2625,
								2637
							],
							[
								2867,
								2880
							],
							[
								3111,
								3126
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉjs_resolve_functions_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_resolve_functions_is_null‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_resolve_functions_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_resolve_functions_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_resolve_functions_call‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_init‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_resolve‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_reject‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_zero‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_pending‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_done‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_then‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_catch‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉpromise_forward‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAwAAICBtID0+CigpID0+CiAgbSA9PgooKSA9PgogIG0gPT4KKCkgPT4KSWZEZWJ1Zyh0b2tlbikKTG9nSWZEZWJ1Zyh0b2tlbiwgbG9nZ2VyRm4pCiAgKCkgPT4KICAoLi4uYXJncykgPT4KUmVhZEZkKGZkLCBiaW5hcnkpClJlYWRGaWxlKG5hbWUsIGJpbmFyeSkKTG9hZEhpc3RvcnkoZmlsZW5hbWUpCiAgcGFyc2UgPSAoKSA9PgogIGVudHJ5ID0+ClJlYWRKU09OKGZpbGVuYW1lKQpSZWFkWE1MKGZpbGVuYW1lLCAuLi5hcmdzKQpNYXBGaWxlKGZpbGVuYW1lKQpXcml0ZUZpbGUobmFtZSwgZGF0YSwgdmVyYm9zZSA9IHRydWUpCldyaXRlSlNPTihuYW1lLCBkYXRhLCAuLi5hcmdzKQpXcml0ZVhNTChuYW1lLCBkYXRhLCAuLi5hcmdzKQpSZWFkQkpTT04oZmlsZW5hbWUpCldyaXRlQkpTT04obmFtZSwgZGF0YSkKRGlySXRlcmF0b3IoLi4uYXJncykKICAoKSA9PgpSZWN1cnNpdmVEaXJJdGVyYXRvcihkaXIsIHByZWQgPSAoZW50cnksIGZpbGUsIGRpciwgZGVwdGgpID0+IHRydWUsIGRlcHRoID0gMCkKICBwcmVkID0gKGVudHJ5LCBmaWxlLCBkaXIsIGRlcHRoKSA9PgpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKRmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpGaWx0ZXJJbWFnZXMoZ2VuKQpTb3J0RmlsZXMoYXJyLCBmaWVsZCA9ICdjdGltZScpCihhLCBiKSA9PgpTdGF0RmlsZXMoZ2VuKQogIHRvU3RyaW5nKCkKKCkgPT4KICB0b1N0cmluZygpCiAgZ2V0IGxhbmRzY2FwZSgpCiAgZ2V0IHBvcnRyYWl0KCkKRmRSZWFkZXIoZmQsIGJ1ZmZlclNpemUgPSAxMDI0KQpDb3B5VG9DbGlwYm9hcmQodGV4dCkKUmVhZENhbGxiYWNrKGZkLCBmbiA9IGRhdGEgPT4ge30pCiAgKCkgPT4KTG9nQ2FsbChmbiwgdGhpc09iaikKICBmdW5jdGlvbiguLi5hcmdzKQogIGFyZyA9PgpTcGF3bihmaWxlLCBhcmdzLCBvcHRpb25zID0ge30pCiAgd2FpdCgpCkZldGNoVVJMKHVybCwgb3B0aW9ucyA9IHt9KQooYWNjLCBbaywgdl0pID0+CiAgZGF0YSA9PgogIGRhdGEgPT4AAAAAAAAAAAIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/io-helpers.js",
						"symkeys":
						[
							[
								241,
								245
							],
							[
								266,
								271
							],
							[
								310,
								314
							],
							[
								334,
								339
							],
							[
								376,
								380
							],
							[
								399,
								404
							],
							[
								417,
								441
							],
							[
								639,
								676
							],
							[
								707,
								713
							],
							[
								779,
								792
							],
							[
								823,
								851
							],
							[
								1093,
								1125
							],
							[
								1263,
								1294
							],
							[
								1371,
								1384
							],
							[
								1604,
								1612
							],
							[
								1697,
								1725
							],
							[
								1904,
								1940
							],
							[
								2132,
								2159
							],
							[
								2407,
								2454
							],
							[
								3084,
								3124
							],
							[
								3288,
								3327
							],
							[
								3391,
								3420
							],
							[
								3762,
								3794
							],
							[
								4051,
								4082
							],
							[
								4157,
								4163
							],
							[
								4681,
								4770
							],
							[
								4926,
								4961
							],
							[
								5493,
								5546
							],
							[
								5975,
								6011
							],
							[
								6079,
								6106
							],
							[
								6159,
								6200
							],
							[
								6226,
								6235
							],
							[
								6277,
								6302
							],
							[
								6424,
								6434
							],
							[
								6550,
								6555
							],
							[
								6655,
								6665
							],
							[
								6742,
								6757
							],
							[
								6828,
								6842
							],
							[
								7804,
								7851
							],
							[
								8256,
								8287
							],
							[
								8638,
								8681
							],
							[
								8742,
								8748
							],
							[
								8978,
								9008
							],
							[
								9040,
								9058
							],
							[
								9190,
								9196
							],
							[
								9318,
								9359
							],
							[
								10024,
								10030
							],
							[
								10184,
								10221
							],
							[
								10436,
								10452
							],
							[
								11339,
								11347
							],
							[
								11435,
								11443
							]
						],
						"symlist":
						[
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							" function IfDebug(token)",
							" function LogIfDebug(token, loggerFn)",
							" () =>",
							" (...args) =>",
							" function ReadFd(fd, binary)",
							" function ReadFile(name, binary)",
							" function LoadHistory(filename)",
							"parse = () =>",
							"entry =>",
							" function ReadJSON(filename)",
							" function ReadXML(filename, ...args)",
							" function MapFile(filename)",
							" function WriteFile(name, data, verbose = true)",
							" function WriteJSON(name, data, ...args)",
							" function WriteXML(name, data, ...args)",
							" function ReadBJSON(filename)",
							" function WriteBJSON(name, data)",
							" function* DirIterator(...args)",
							" () =>",
							" function* RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
							"pred = (entry, file, dir, depth) =>",
							" function* ReadDirRecursive(dir, maxDepth = Infinity)",
							" function* Filter(gen, regEx = /.*/)",
							" function FilterImages(gen)",
							" function SortFiles(arr, field = 'ctime')",
							"(a, b) =>",
							" function* StatFiles(gen)",
							"toString()",
							"() =>",
							"toString()",
							"get landscape()",
							"get portrait()",
							"async function* FdReader(fd, bufferSize = 1024)",
							" function CopyToClipboard(text)",
							" function ReadCallback(fd, fn = data => {})",
							" () =>",
							" function LogCall(fn, thisObj)",
							" function(...args)",
							"arg =>",
							" function Spawn(file, args, options = {})",
							"wait()",
							" function FetchURL(url, options = {})",
							"(acc, [k, v]) =>",
							" data =>",
							" data =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC2AwAA4oCU4pK74oCTIGpzX3Jlc29sdmVfZnVuY3Rpb25zX3plcm8gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19yZXNvbHZlX2Z1bmN0aW9uc19pc19udWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcmVzb2x2ZV9mdW5jdGlvbnNfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3Jlc29sdmVfZnVuY3Rpb25zX2ZyZWVfcnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19yZXNvbHZlX2Z1bmN0aW9uc19jYWxsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV9uZXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBwcm9taXNlX2NyZWF0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfZnJlZV9ydCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfcmVzb2x2ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfcmVqZWN0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV96ZXJvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV9wZW5kaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV9kb25lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV90aGVuICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcHJvbWlzZV9jYXRjaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHByb21pc2VfZm9yd2FyZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24AAAAAAAAAAPIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
						"symkeys":
						[
							[
								30,
								44
							],
							[
								446,
								460
							],
							[
								530,
								541
							],
							[
								619,
								629
							],
							[
								683,
								691
							],
							[
								790,
								804
							],
							[
								947,
								954
							],
							[
								1165,
								1172
							],
							[
								1373,
								1396
							],
							[
								1804,
								1825
							],
							[
								2210,
								2226
							],
							[
								2857,
								2875
							],
							[
								2964,
								2980
							],
							[
								3149,
								3163
							],
							[
								3485,
								3497
							],
							[
								3808,
								3823
							],
							[
								4240,
								4254
							],
							[
								4323,
								4338
							],
							[
								4675,
								4689
							],
							[
								5063,
								5079
							],
							[
								5301,
								5317
							],
							[
								5685,
								5703
							],
							[
								6075,
								6094
							],
							[
								6468,
								6486
							],
							[
								6855,
								6869
							],
							[
								7204,
								7217
							],
							[
								7536,
								7548
							],
							[
								8088,
								8100
							],
							[
								8548,
								8564
							],
							[
								8730,
								8751
							],
							[
								8942,
								8957
							],
							[
								9122,
								9137
							],
							[
								9350,
								9366
							],
							[
								9942,
								9959
							],
							[
								10143,
								10160
							],
							[
								10256,
								10272
							],
							[
								11183,
								11199
							],
							[
								11311,
								11328
							],
							[
								11548,
								11565
							],
							[
								11949,
								11965
							],
							[
								12271,
								12293
							],
							[
								12472,
								12493
							],
							[
								12767,
								12787
							],
							[
								13033,
								13050
							],
							[
								13236,
								13263
							],
							[
								13397,
								13425
							],
							[
								13579,
								13603
							],
							[
								13788,
								13805
							],
							[
								14017,
								14036
							],
							[
								14237,
								14255
							],
							[
								14459,
								14478
							],
							[
								14690,
								14711
							],
							[
								14947,
								14971
							],
							[
								15213,
								15231
							],
							[
								15698,
								15713
							],
							[
								15893,
								15909
							],
							[
								16321,
								16339
							],
							[
								16585,
								16604
							],
							[
								16922,
								16938
							],
							[
								17116,
								17137
							],
							[
								17315,
								17332
							],
							[
								17641,
								17660
							],
							[
								18399,
								18415
							],
							[
								19275,
								19290
							],
							[
								19379,
								19391
							],
							[
								19626,
								19645
							],
							[
								19783,
								19798
							],
							[
								20001,
								20014
							],
							[
								20252,
								20270
							],
							[
								20485,
								20503
							],
							[
								20714,
								20739
							],
							[
								20862,
								20885
							],
							[
								21136,
								21160
							],
							[
								21383,
								21409
							],
							[
								21704,
								21733
							],
							[
								22051,
								22077
							],
							[
								22367,
								22391
							],
							[
								22597,
								22622
							],
							[
								22904,
								22932
							],
							[
								23239,
								23263
							],
							[
								23548,
								23573
							],
							[
								23857,
								23880
							],
							[
								24164,
								24189
							],
							[
								24358,
								24380
							],
							[
								24514,
								24539
							],
							[
								24714,
								24742
							],
							[
								24936,
								24961
							],
							[
								25390,
								25401
							],
							[
								25485,
								25499
							],
							[
								25571,
								25583
							],
							[
								25713,
								25726
							],
							[
								25970,
								25983
							],
							[
								26166,
								26179
							],
							[
								26318,
								26336
							],
							[
								26582,
								26601
							],
							[
								26807,
								26827
							],
							[
								27013,
								27033
							],
							[
								27226,
								27237
							],
							[
								27367,
								27382
							],
							[
								27734,
								27755
							],
							[
								27917,
								27931
							],
							[
								28091,
								28103
							],
							[
								28260,
								28275
							],
							[
								28438,
								28454
							],
							[
								28667,
								28681
							],
							[
								28761,
								28772
							],
							[
								29012,
								29033
							],
							[
								29213,
								29235
							],
							[
								29447,
								29461
							],
							[
								29534,
								29557
							],
							[
								29798,
								29811
							],
							[
								30022,
								30040
							],
							[
								30219,
								30238
							],
							[
								30541,
								30561
							],
							[
								30754,
								30767
							],
							[
								31169,
								31183
							],
							[
								31344,
								31361
							],
							[
								31579,
								31598
							],
							[
								31905,
								31922
							],
							[
								32703,
								32721
							],
							[
								33178,
								33194
							],
							[
								33320,
								33342
							],
							[
								33428,
								33438
							],
							[
								33722,
								33739
							],
							[
								34040,
								34058
							],
							[
								34912,
								34925
							],
							[
								35181,
								35195
							],
							[
								36834,
								36849
							],
							[
								37152,
								37165
							],
							[
								38292,
								38307
							],
							[
								39646,
								39664
							],
							[
								39811,
								39825
							],
							[
								40059,
								40074
							],
							[
								40223,
								40239
							],
							[
								40456,
								40471
							],
							[
								40685,
								40697
							],
							[
								40924,
								40938
							],
							[
								41080,
								41094
							],
							[
								41225,
								41239
							],
							[
								41492,
								41508
							],
							[
								41680,
								41695
							],
							[
								41909,
								41919
							],
							[
								42020,
								42031
							],
							[
								42196,
								42211
							],
							[
								42303,
								42317
							],
							[
								42495,
								42511
							],
							[
								42944,
								42955
							],
							[
								43436,
								43445
							],
							[
								43532,
								43551
							],
							[
								43959,
								43977
							],
							[
								44572,
								44593
							],
							[
								45090,
								45104
							],
							[
								45299,
								45314
							],
							[
								45375,
								45391
							],
							[
								45904,
								45922
							],
							[
								46582,
								46596
							],
							[
								46805,
								46822
							],
							[
								47328,
								47340
							],
							[
								47441,
								47453
							],
							[
								47732,
								47745
							],
							[
								48570,
								48583
							],
							[
								48907,
								48925
							],
							[
								49394,
								49412
							],
							[
								49877,
								49894
							],
							[
								50388,
								50400
							],
							[
								50872,
								50889
							],
							[
								51466,
								51489
							],
							[
								51629,
								51639
							],
							[
								51764,
								51773
							],
							[
								51897,
								51906
							],
							[
								52030,
								52045
							],
							[
								52175,
								52187
							],
							[
								52314,
								52327
							],
							[
								52503,
								52517
							],
							[
								52646,
								52660
							],
							[
								53042,
								53056
							],
							[
								53258,
								53281
							],
							[
								53496,
								53521
							],
							[
								53750,
								53767
							],
							[
								54218,
								54227
							],
							[
								54487,
								54514
							],
							[
								54596,
								54622
							],
							[
								54812,
								54831
							],
							[
								55111,
								55124
							],
							[
								55258,
								55269
							],
							[
								55463,
								55478
							],
							[
								55637,
								55657
							],
							[
								55768,
								55789
							],
							[
								55904,
								55919
							],
							[
								56209,
								56221
							],
							[
								56417,
								56425
							],
							[
								56627,
								56651
							],
							[
								56790,
								56814
							],
							[
								57102,
								57127
							],
							[
								57385,
								57399
							],
							[
								57914,
								57928
							],
							[
								58519,
								58530
							],
							[
								59270,
								59282
							],
							[
								59590,
								59601
							],
							[
								59909,
								59920
							],
							[
								60309,
								60319
							],
							[
								60458,
								60478
							],
							[
								60563,
								60578
							],
							[
								60709,
								60722
							],
							[
								60817,
								60832
							],
							[
								61091,
								61103
							],
							[
								61270,
								61281
							],
							[
								61534,
								61544
							],
							[
								61699,
								61712
							],
							[
								62485,
								62502
							],
							[
								62678,
								62692
							],
							[
								63577,
								63591
							],
							[
								63767,
								63782
							],
							[
								64375,
								64391
							],
							[
								64925,
								64943
							],
							[
								65248,
								65266
							],
							[
								65470,
								65485
							],
							[
								65608,
								65624
							],
							[
								65748,
								65763
							],
							[
								66110,
								66126
							],
							[
								66282,
								66294
							],
							[
								66623,
								66635
							],
							[
								66962,
								66976
							],
							[
								67300,
								67315
							],
							[
								67947,
								67961
							],
							[
								68232,
								68250
							],
							[
								68724,
								68741
							],
							[
								69096,
								69110
							],
							[
								69394,
								69405
							],
							[
								69493,
								69504
							],
							[
								69744,
								69759
							],
							[
								70200,
								70217
							],
							[
								70443,
								70463
							],
							[
								88342,
								88363
							],
							[
								88586,
								88610
							],
							[
								88826,
								88850
							],
							[
								89109,
								89131
							],
							[
								89262,
								89285
							]
						],
						"symlist":
						[
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉ_ISOC99_SOURCE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉatomic_add_int‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉquicksort_r‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉstrverscmp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚ÄÉ‚ìÇ‚ÄÇ‚ÄÉINFINITY‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
							"‚Äî‚íª‚Äì‚ÄÉatomic_add_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉtime_us‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉtime_us‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_flags_fromstring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_flags_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_from_argv‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_from_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_from_dbuf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_compile‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_match‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_to_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉregexp_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_clear‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_intv_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_argv‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_int32v‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_uint32v‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_to_int64v‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_array_copys‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_copys‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_from‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_tobinary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_to_cstringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_toint32‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_toint64‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_index‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_atom_is_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_argc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_cfunc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bound‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bound_this‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_bind_this‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_throw_fn‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_throw‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_return_value_fn‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_return_undefined‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_return_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_get_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_get_str_n‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_get_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_prototype‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_static_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_global_prototype_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_method‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_next‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_result‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_then_fn‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iterator_then‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_species‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_classname‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_equals‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_same2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_is‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_construct‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_error‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_function‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_has_propertystr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertyatom_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_bool‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_int64‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_cstring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_cstringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertyint_cstring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertyint_int32‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_stringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_int32‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_uint64‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertystr_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_propertyint_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_propertyint_int‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_propertystr_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_propertystr_stringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_propertydescriptor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_id‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_newid‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_class_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_object_tostring2‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_function_isnative‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_input‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_propenum_cmp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_propertyenums_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_free_n‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_to_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_length‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_strv_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_static_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_ctor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_invoke_static‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_for‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_for_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_to_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_to_cstring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_values_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_values_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_values_toarray‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_values_fromarray‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_tag_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_type_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_typestr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_has_ref_count‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"value_mask",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_type_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_type_flag‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_clone‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_fwrite‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_equals‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_from_char‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_tosize‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_free_rt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_coerce‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_value_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_cstring_ptr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_cstring_len‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_cstring_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_cstring_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_cstring_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_map_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_name‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_namecstr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_namestr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉcall_module_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_func‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_ns‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_exports_find‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_exports_get‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_default_export‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_exports‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_modules_list‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_modules_array‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_modules_entries‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_modules_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_modules_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_entry‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmodule_object‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_def‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find_fwd‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_find_rev‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_indexof‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_module_at‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_arraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_sharedarraybuffer‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_date‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_map‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_generator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_regexp‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_promise‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_dataview‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterable‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_iterator‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_typedarray_prototype‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_typedarray_constructor‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_typedarray_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_invoke‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_operatorset_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_symbol_operatorset_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_operators_create‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_number_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_new‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_from_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_from_time_ns‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_from_timespec‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_gettime‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_date_time‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"timespec",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_freevalue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_fromvalue‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arraybuffer_bytelength‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_module‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_binary‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_eval_fmt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_time_ms‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_interrupt_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_unlink‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_timer_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_call_handler‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_sab_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_sab_free‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_sab_dup‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_print‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_error_stack‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iohandler_fn‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iohandler_set‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_iohandler_cfunc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_resolve‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_then‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_catch‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_wrap‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_promise_adopt‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_to_string‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_to_source‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉarguments_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉarguments_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉarguments_push‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arguments_alloc‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_arguments_dump‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tostring‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_tosource‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_towstringlen‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_json_stringify‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_identifier_len‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_is_identifier_atom‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_tostringtag_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_tostringtag_value‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_set_tostringtag_str‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉjs_get_tostringtag_cstr‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAwAAICBtID0+CigpID0+CiAgbSA9PgooKSA9PgogIG0gPT4KKCkgPT4KSWZEZWJ1Zyh0b2tlbikKTG9nSWZEZWJ1Zyh0b2tlbiwgbG9nZ2VyRm4pCiAgKCkgPT4KICAoLi4uYXJncykgPT4KUmVhZEZkKGZkLCBiaW5hcnkpClJlYWRGaWxlKG5hbWUsIGJpbmFyeSkKTG9hZEhpc3RvcnkoZmlsZW5hbWUpCiAgcGFyc2UgPSAoKSA9PgogIGVudHJ5ID0+ClJlYWRKU09OKGZpbGVuYW1lKQpSZWFkWE1MKGZpbGVuYW1lLCAuLi5hcmdzKQpNYXBGaWxlKGZpbGVuYW1lKQpXcml0ZUZpbGUobmFtZSwgZGF0YSwgdmVyYm9zZSA9IHRydWUpCldyaXRlSlNPTihuYW1lLCBkYXRhLCAuLi5hcmdzKQpXcml0ZVhNTChuYW1lLCBkYXRhLCAuLi5hcmdzKQpSZWFkQkpTT04oZmlsZW5hbWUpCldyaXRlQkpTT04obmFtZSwgZGF0YSkKRGlySXRlcmF0b3IoLi4uYXJncykKICAoKSA9PgpSZWN1cnNpdmVEaXJJdGVyYXRvcihkaXIsIHByZWQgPSAoZW50cnksIGZpbGUsIGRpciwgZGVwdGgpID0+IHRydWUsIGRlcHRoID0gMCkKICBwcmVkID0gKGVudHJ5LCBmaWxlLCBkaXIsIGRlcHRoKSA9PgpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKRmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpGaWx0ZXJJbWFnZXMoZ2VuKQpTb3J0RmlsZXMoYXJyLCBmaWVsZCA9ICdjdGltZScpCihhLCBiKSA9PgpTdGF0RmlsZXMoZ2VuKQogIHRvU3RyaW5nKCkKKCkgPT4KICB0b1N0cmluZygpCiAgZ2V0IGxhbmRzY2FwZSgpCiAgZ2V0IHBvcnRyYWl0KCkKRmRSZWFkZXIoZmQsIGJ1ZmZlclNpemUgPSAxMDI0KQpDb3B5VG9DbGlwYm9hcmQodGV4dCkKUmVhZENhbGxiYWNrKGZkLCBmbiA9IGRhdGEgPT4ge30pCiAgKCkgPT4KTG9nQ2FsbChmbiwgdGhpc09iaikKICBmdW5jdGlvbiguLi5hcmdzKQogIGFyZyA9PgpTcGF3bihmaWxlLCBhcmdzLCBvcHRpb25zID0ge30pCiAgd2FpdCgpCkZldGNoVVJMKHVybCwgb3B0aW9ucyA9IHt9KQooYWNjLCBbaywgdl0pID0+CiAgZGF0YSA9PgogIGRhdGEgPT4AAAAAAAAAAFonAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/io-helpers.js",
						"symkeys":
						[
							[
								241,
								245
							],
							[
								266,
								271
							],
							[
								310,
								314
							],
							[
								334,
								339
							],
							[
								376,
								380
							],
							[
								399,
								404
							],
							[
								417,
								441
							],
							[
								639,
								676
							],
							[
								707,
								713
							],
							[
								779,
								792
							],
							[
								823,
								851
							],
							[
								1093,
								1125
							],
							[
								1263,
								1294
							],
							[
								1371,
								1384
							],
							[
								1604,
								1612
							],
							[
								1697,
								1725
							],
							[
								1904,
								1940
							],
							[
								2132,
								2159
							],
							[
								2407,
								2454
							],
							[
								3084,
								3124
							],
							[
								3288,
								3327
							],
							[
								3391,
								3420
							],
							[
								3762,
								3794
							],
							[
								4051,
								4082
							],
							[
								4157,
								4163
							],
							[
								4681,
								4770
							],
							[
								4926,
								4961
							],
							[
								5493,
								5546
							],
							[
								5975,
								6011
							],
							[
								6079,
								6106
							],
							[
								6159,
								6200
							],
							[
								6226,
								6235
							],
							[
								6277,
								6302
							],
							[
								6424,
								6434
							],
							[
								6550,
								6555
							],
							[
								6655,
								6665
							],
							[
								6742,
								6757
							],
							[
								6828,
								6842
							],
							[
								7804,
								7851
							],
							[
								8256,
								8287
							],
							[
								8638,
								8681
							],
							[
								8742,
								8748
							],
							[
								8978,
								9008
							],
							[
								9040,
								9058
							],
							[
								9190,
								9196
							],
							[
								9318,
								9359
							],
							[
								10024,
								10030
							],
							[
								10184,
								10221
							],
							[
								10436,
								10452
							],
							[
								11339,
								11347
							],
							[
								11435,
								11443
							]
						],
						"symlist":
						[
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							" function IfDebug(token)",
							" function LogIfDebug(token, loggerFn)",
							" () =>",
							" (...args) =>",
							" function ReadFd(fd, binary)",
							" function ReadFile(name, binary)",
							" function LoadHistory(filename)",
							"parse = () =>",
							"entry =>",
							" function ReadJSON(filename)",
							" function ReadXML(filename, ...args)",
							" function MapFile(filename)",
							" function WriteFile(name, data, verbose = true)",
							" function WriteJSON(name, data, ...args)",
							" function WriteXML(name, data, ...args)",
							" function ReadBJSON(filename)",
							" function WriteBJSON(name, data)",
							" function* DirIterator(...args)",
							" () =>",
							" function* RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
							"pred = (entry, file, dir, depth) =>",
							" function* ReadDirRecursive(dir, maxDepth = Infinity)",
							" function* Filter(gen, regEx = /.*/)",
							" function FilterImages(gen)",
							" function SortFiles(arr, field = 'ctime')",
							"(a, b) =>",
							" function* StatFiles(gen)",
							"toString()",
							"() =>",
							"toString()",
							"get landscape()",
							"get portrait()",
							"async function* FdReader(fd, bufferSize = 1024)",
							" function CopyToClipboard(text)",
							" function ReadCallback(fd, fn = data => {})",
							" () =>",
							" function LogCall(fn, thisObj)",
							" function(...args)",
							"arg =>",
							" function Spawn(file, args, options = {})",
							"wait()",
							" function FetchURL(url, options = {})",
							"(acc, [k, v]) =>",
							" data =>",
							" data =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/usr/include/sqlite3.h",
						"symkeys":
						[
							[
								1511,
								1520
							],
							[
								1789,
								1802
							],
							[
								1845,
								1855
							],
							[
								1893,
								1905
							],
							[
								1945,
								1959
							],
							[
								1999,
								2013
							],
							[
								2069,
								2084
							],
							[
								2123,
								2136
							],
							[
								2792,
								2809
							],
							[
								2818,
								2837
							],
							[
								4590,
								4604
							],
							[
								4629,
								4650
							],
							[
								4667,
								4683
							],
							[
								6509,
								6527
							],
							[
								6558,
								6574
							],
							[
								6597,
								6622
							],
							[
								7688,
								7714
							],
							[
								7761,
								7786
							],
							[
								7810,
								7836
							],
							[
								7851,
								7876
							],
							[
								9701,
								9719
							],
							[
								10404,
								10411
							],
							[
								11132,
								11144
							],
							[
								11204,
								11217
							],
							[
								11267,
								11280
							],
							[
								11357,
								11369
							],
							[
								11398,
								11411
							],
							[
								11443,
								11455
							],
							[
								11490,
								11503
							],
							[
								11533,
								11546
							],
							[
								11570,
								11584
							],
							[
								11745,
								11751
							],
							[
								13933,
								13946
							],
							[
								13973,
								13989
							],
							[
								14158,
								14161
							],
							[
								17409,
								17421
							],
							[
								17564,
								17567
							],
							[
								18106,
								18115
							],
							[
								18193,
								18205
							],
							[
								18245,
								18260
							],
							[
								18314,
								18325
							],
							[
								18377,
								18389
							],
							[
								18451,
								18462
							],
							[
								18517,
								18530
							],
							[
								18589,
								18601
							],
							[
								18645,
								18660
							],
							[
								18720,
								18736
							],
							[
								18801,
								18813
							],
							[
								18876,
								18890
							],
							[
								18951,
								18966
							],
							[
								19030,
								19041
							],
							[
								19110,
								19125
							],
							[
								19181,
								19196
							],
							[
								19248,
								19260
							],
							[
								19304,
								19317
							],
							[
								19370,
								19383
							],
							[
								19442,
								19459
							],
							[
								19514,
								19529
							],
							[
								19571,
								19584
							],
							[
								19634,
								19646
							],
							[
								19711,
								19722
							],
							[
								19770,
								19783
							],
							[
								19817,
								19829
							],
							[
								19898,
								19911
							],
							[
								19976,
								19989
							],
							[
								20047,
								20061
							],
							[
								20113,
								20123
							],
							[
								20188,
								20199
							],
							[
								21112,
								21140
							],
							[
								21175,
								21193
							],
							[
								21238,
								21259
							],
							[
								21301,
								21318
							],
							[
								21364,
								21387
							],
							[
								21427,
								21445
							],
							[
								21490,
								21508
							],
							[
								21553,
								21575
							],
							[
								21616,
								21637
							],
							[
								21679,
								21697
							],
							[
								21742,
								21761
							],
							[
								21805,
								21824
							],
							[
								21868,
								21887
							],
							[
								21932,
								21952
							],
							[
								21996,
								22014
							],
							[
								22060,
								22079
							],
							[
								22124,
								22154
							],
							[
								22188,
								22205
							],
							[
								22252,
								22270
							],
							[
								22316,
								22338
							],
							[
								22380,
								22400
							],
							[
								22444,
								22464
							],
							[
								22508,
								22528
							],
							[
								22572,
								22591
							],
							[
								22636,
								22653
							],
							[
								22700,
								22725
							],
							[
								22764,
								22781
							],
							[
								22828,
								22852
							],
							[
								22892,
								22913
							],
							[
								22956,
								22974
							],
							[
								23020,
								23037
							],
							[
								23084,
								23109
							],
							[
								23148,
								23174
							],
							[
								23212,
								23240
							],
							[
								23276,
								23301
							],
							[
								23341,
								23359
							],
							[
								23406,
								23426
							],
							[
								23471,
								23491
							],
							[
								23536,
								23561
							],
							[
								23602,
								23623
							],
							[
								23668,
								23692
							],
							[
								23734,
								23758
							],
							[
								23800,
								23824
							],
							[
								23881,
								23904
							],
							[
								23947,
								23966
							],
							[
								24012,
								24035
							],
							[
								24077,
								24101
							],
							[
								24143,
								24167
							],
							[
								24209,
								24233
							],
							[
								24275,
								24298
							],
							[
								24341,
								24365
							],
							[
								24407,
								24432
							],
							[
								24473,
								24494
							],
							[
								24536,
								24559
							],
							[
								24604,
								24632
							],
							[
								24672,
								24700
							],
							[
								24740,
								24766
							],
							[
								24808,
								24833
							],
							[
								24876,
								24904
							],
							[
								24944,
								24969
							],
							[
								25012,
								25036
							],
							[
								25080,
								25102
							],
							[
								25148,
								25171
							],
							[
								25216,
								25240
							],
							[
								25284,
								25309
							],
							[
								25348,
								25378
							],
							[
								25412,
								25436
							],
							[
								25477,
								25493
							],
							[
								25539,
								25565
							],
							[
								25599,
								25616
							],
							[
								25878,
								25898
							],
							[
								25958,
								25979
							],
							[
								26038,
								26056
							],
							[
								26118,
								26143
							],
							[
								26182,
								26203
							],
							[
								26246,
								26267
							],
							[
								26310,
								26325
							],
							[
								26390,
								26408
							],
							[
								26470,
								26489
							],
							[
								26534,
								26553
							],
							[
								26598,
								26622
							],
							[
								26662,
								26686
							],
							[
								26726,
								26750
							],
							[
								26790,
								26812
							],
							[
								26854,
								26880
							],
							[
								26918,
								26937
							],
							[
								26998,
								27019
							],
							[
								27078,
								27101
							],
							[
								27158,
								27182
							],
							[
								27238,
								27253
							],
							[
								27302,
								27322
							],
							[
								29122,
								29141
							],
							[
								29177,
								29199
							],
							[
								29232,
								29253
							],
							[
								29287,
								29308
							],
							[
								29342,
								29363
							],
							[
								29397,
								29418
							],
							[
								29452,
								29474
							],
							[
								29507,
								29529
							],
							[
								29562,
								29584
							],
							[
								29617,
								29641
							],
							[
								29672,
								29695
							],
							[
								29727,
								29761
							],
							[
								29782,
								29814
							],
							[
								29837,
								29859
							],
							[
								29892,
								29917
							],
							[
								30152,
								30168
							],
							[
								30188,
								30206
							],
							[
								30224,
								30244
							],
							[
								30260,
								30279
							],
							[
								30296,
								30317
							],
							[
								31635,
								31653
							],
							[
								31677,
								31693
							],
							[
								31719,
								31739
							],
							[
								32209,
								32221
							],
							[
								32230,
								32242
							],
							[
								32260,
								32278
							],
							[
								36725,
								36743
							],
							[
								36752,
								36770
							],
							[
								36791,
								36794
							],
							[
								36823,
								36826
							],
							[
								36892,
								36895
							],
							[
								36968,
								36971
							],
							[
								37023,
								37026
							],
							[
								37065,
								37068
							],
							[
								37122,
								37125
							],
							[
								37158,
								37161
							],
							[
								37196,
								37199
							],
							[
								37254,
								37257
							],
							[
								37312,
								37315
							],
							[
								37349,
								37352
							],
							[
								37443,
								37446
							],
							[
								37517,
								37520
							],
							[
								37581,
								37585
							],
							[
								37619,
								37622
							],
							[
								37716,
								37719
							],
							[
								37790,
								37793
							],
							[
								55676,
								55698
							],
							[
								55723,
								55753
							],
							[
								55770,
								55800
							],
							[
								55817,
								55840
							],
							[
								55864,
								55886
							],
							[
								55911,
								55934
							],
							[
								55958,
								55983
							],
							[
								56005,
								56030
							],
							[
								56052,
								56079
							],
							[
								56099,
								56123
							],
							[
								56146,
								56168
							],
							[
								56193,
								56213
							],
							[
								56240,
								56272
							],
							[
								56287,
								56306
							],
							[
								56334,
								56358
							],
							[
								56381,
								56406
							],
							[
								56428,
								56450
							],
							[
								56475,
								56493
							],
							[
								56522,
								56544
							],
							[
								56569,
								56586
							],
							[
								56616,
								56644
							],
							[
								56663,
								56692
							],
							[
								56710,
								56732
							],
							[
								56757,
								56776
							],
							[
								56804,
								56820
							],
							[
								56851,
								56875
							],
							[
								56898,
								56926
							],
							[
								56945,
								56974
							],
							[
								56992,
								57008
							],
							[
								57039,
								57070
							],
							[
								57086,
								57118
							],
							[
								57133,
								57167
							],
							[
								57180,
								57205
							],
							[
								57227,
								57252
							],
							[
								57274,
								57297
							],
							[
								57321,
								57343
							],
							[
								57392,
								57416
							],
							[
								57461,
								57485
							],
							[
								57530,
								57547
							],
							[
								57960,
								57973
							],
							[
								58296,
								58316
							],
							[
								67032,
								67043
							],
							[
								67053,
								67057
							],
							[
								67095,
								67106
							],
							[
								67499,
								67502
							],
							[
								67605,
								67608
							],
							[
								67669,
								67672
							],
							[
								67745,
								67748
							],
							[
								67881,
								67885
							],
							[
								67941,
								67945
							],
							[
								68009,
								68013
							],
							[
								68050,
								68053
							],
							[
								68109,
								68112
							],
							[
								68158,
								68161
							],
							[
								68204,
								68207
							],
							[
								68398,
								68401
							],
							[
								68587,
								68590
							],
							[
								68666,
								68685
							],
							[
								69935,
								69955
							],
							[
								69969,
								69992
							],
							[
								70047,
								70065
							],
							[
								70853,
								70870
							],
							[
								70887,
								70902
							],
							[
								70921,
								70938
							],
							[
								70955,
								70975
							],
							[
								71249,
								71265
							],
							[
								75426,
								75444
							],
							[
								75467,
								75483
							],
							[
								75506,
								75521
							],
							[
								75544,
								75558
							],
							[
								77052,
								77066
							],
							[
								77812,
								77829
							],
							[
								81130,
								81149
							],
							[
								81158,
								81177
							],
							[
								81248,
								81252
							],
							[
								81371,
								81374
							],
							[
								81443,
								81446
							],
							[
								81523,
								81526
							],
							[
								81594,
								81598
							],
							[
								101903,
								101929
							],
							[
								101952,
								101977
							],
							[
								102001,
								102025
							],
							[
								102050,
								102070
							],
							[
								102116,
								102139
							],
							[
								102182,
								102203
							],
							[
								102242,
								102265
							],
							[
								102308,
								102326
							],
							[
								102379,
								102402
							],
							[
								102432,
								102451
							],
							[
								102500,
								102522
							],
							[
								102635,
								102658
							],
							[
								102688,
								102708
							],
							[
								102739,
								102762
							],
							[
								102790,
								102807
							],
							[
								102848,
								102865
							],
							[
								102897,
								102918
							],
							[
								102967,
								102991
							],
							[
								103037,
								103070
							],
							[
								103093,
								103113
							],
							[
								103153,
								103176
							],
							[
								103227,
								103255
							],
							[
								103289,
								103315
							],
							[
								103350,
								103369
							],
							[
								103421,
								103449
							],
							[
								103483,
								103509
							],
							[
								103543,
								103571
							],
							[
								103605,
								103632
							],
							[
								118430,
								118456
							],
							[
								118499,
								118524
							],
							[
								118570,
								118597
							],
							[
								118636,
								118666
							],
							[
								118702,
								118739
							],
							[
								118768,
								118805
							],
							[
								118834,
								118866
							],
							[
								118900,
								118927
							],
							[
								118966,
								118993
							],
							[
								119032,
								119062
							],
							[
								119098,
								119123
							],
							[
								119164,
								119195
							],
							[
								119230,
								119264
							],
							[
								119296,
								119319
							],
							[
								119362,
								119385
							],
							[
								119428,
								119455
							],
							[
								119494,
								119528
							],
							[
								119560,
								119590
							],
							[
								119626,
								119645
							],
							[
								119991,
								120020
							],
							[
								123102,
								123127
							],
							[
								123424,
								123453
							],
							[
								126083,
								126098
							],
							[
								127589,
								127610
							],
							[
								129407,
								129424
							],
							[
								131063,
								131079
							],
							[
								131113,
								131131
							],
							[
								134115,
								134135
							],
							[
								135019,
								135039
							],
							[
								138281,
								138298
							],
							[
								138653,
								138671
							],
							[
								140667,
								140682
							],
							[
								140718,
								140734
							],
							[
								140775,
								140791
							],
							[
								140838,
								140855
							],
							[
								144692,
								144706
							],
							[
								144730,
								144746
							],
							[
								144781,
								144796
							],
							[
								144827,
								144844
							],
							[
								144885,
								144897
							],
							[
								144932,
								144945
							],
							[
								146063,
								146082
							],
							[
								146115,
								146139
							],
							[
								147164,
								147182
							],
							[
								152206,
								152228
							],
							[
								152244,
								152247
							],
							[
								152820,
								152831
							],
							[
								152890,
								152903
							],
							[
								154015,
								154034
							],
							[
								154094,
								154113
							],
							[
								154173,
								154197
							],
							[
								154252,
								154276
							],
							[
								154331,
								154357
							],
							[
								154410,
								154433
							],
							[
								154489,
								154510
							],
							[
								154568,
								154586
							],
							[
								154647,
								154660
							],
							[
								154726,
								154743
							],
							[
								154805,
								154822
							],
							[
								154884,
								154906
							],
							[
								154963,
								154985
							],
							[
								155042,
								155066
							],
							[
								155121,
								155142
							],
							[
								155200,
								155219
							],
							[
								155279,
								155295
							],
							[
								155358,
								155371
							],
							[
								155437,
								155450
							],
							[
								155516,
								155527
							],
							[
								155595,
								155608
							],
							[
								155674,
								155692
							],
							[
								155753,
								155766
							],
							[
								155832,
								155845
							],
							[
								155911,
								155924
							],
							[
								155990,
								156008
							],
							[
								156069,
								156083
							],
							[
								156148,
								156162
							],
							[
								156227,
								156247
							],
							[
								156306,
								156324
							],
							[
								156385,
								156400
							],
							[
								156464,
								156480
							],
							[
								156543,
								156554
							],
							[
								156605,
								156621
							],
							[
								158299,
								158312
							],
							[
								158326,
								158330
							],
							[
								158403,
								158418
							],
							[
								158432,
								158436
							],
							[
								160995,
								161012
							],
							[
								161032,
								161052
							],
							[
								161069,
								161085
							],
							[
								161106,
								161124
							],
							[
								162452,
								162468
							],
							[
								162502,
								162505
							],
							[
								164033,
								164057
							],
							[
								177267,
								177279
							],
							[
								177411,
								177425
							],
							[
								177558,
								177573
							],
							[
								180727,
								180748
							],
							[
								180808,
								180827
							],
							[
								180907,
								180924
							],
							[
								180990,
								181005
							],
							[
								182324,
								182349
							],
							[
								182387,
								182411
							],
							[
								182449,
								182469
							],
							[
								184808,
								184823
							],
							[
								184853,
								184877
							],
							[
								184915,
								184929
							],
							[
								184964,
								184980
							],
							[
								185015,
								185029
							],
							[
								186052,
								186064
							],
							[
								188082,
								188095
							],
							[
								190599,
								190618
							],
							[
								190648,
								190671
							],
							[
								190697,
								190716
							],
							[
								190746,
								190769
							],
							[
								190795,
								190823
							],
							[
								190844,
								190864
							],
							[
								190893,
								190918
							],
							[
								190942,
								190963
							],
							[
								190991,
								191023
							],
							[
								191040,
								191068
							],
							[
								191089,
								191115
							],
							[
								191138,
								191165
							],
							[
								192773,
								192798
							],
							[
								192825,
								192849
							],
							[
								192877,
								192899
							],
							[
								197962,
								197977
							],
							[
								198296,
								198314
							],
							[
								198633,
								198651
							],
							[
								199037,
								199054
							],
							[
								199374,
								199394
							],
							[
								199714,
								199734
							],
							[
								202038,
								202049
							],
							[
								202089,
								202109
							],
							[
								202155,
								202177
							],
							[
								203874,
								203895
							],
							[
								204300,
								204322
							],
							[
								205286,
								205303
							],
							[
								207499,
								207512
							],
							[
								208093,
								208108
							],
							[
								214073,
								214090
							],
							[
								214163,
								214182
							],
							[
								214256,
								214260
							],
							[
								214288,
								214307
							],
							[
								214352,
								214368
							],
							[
								214410,
								214428
							],
							[
								214480,
								214497
							],
							[
								214534,
								214551
							],
							[
								214618,
								214637
							],
							[
								214708,
								214727
							],
							[
								214802,
								214806
							],
							[
								214858,
								214876
							],
							[
								214935,
								214955
							],
							[
								215027,
								215048
							],
							[
								215092,
								215115
							],
							[
								215918,
								215946
							],
							[
								217069,
								217096
							],
							[
								217754,
								217782
							],
							[
								218119,
								218141
							],
							[
								218798,
								218818
							],
							[
								220155,
								220174
							],
							[
								220221,
								220242
							],
							[
								222302,
								222330
							],
							[
								222374,
								222404
							],
							[
								222448,
								222473
							],
							[
								222517,
								222544
							],
							[
								222588,
								222614
							],
							[
								222658,
								222686
							],
							[
								223922,
								223945
							],
							[
								223989,
								224014
							],
							[
								228655,
								228667
							],
							[
								229616,
								229634
							],
							[
								230227,
								230241
							],
							[
								230253,
								230265
							],
							[
								230279,
								230290
							],
							[
								230305,
								230316
							],
							[
								230377,
								230388
							],
							[
								230410,
								230422
							],
							[
								241133,
								241152
							],
							[
								241197,
								241218
							],
							[
								241260,
								241278
							],
							[
								241330,
								241350
							],
							[
								241409,
								241428
							],
							[
								241478,
								241499
							],
							[
								241552,
								241572
							],
							[
								241614,
								241634
							],
							[
								241676,
								241698
							],
							[
								241740,
								241759
							],
							[
								243044,
								243060
							],
							[
								244169,
								244182
							],
							[
								251294,
								251317
							],
							[
								251407,
								251411
							],
							[
								251568,
								251593
							],
							[
								251683,
								251687
							],
							[
								251844,
								251870
							],
							[
								251960,
								251964
							],
							[
								252147,
								252177
							],
							[
								252267,
								252271
							],
							[
								252629,
								252640
							],
							[
								252689,
								252703
							],
							[
								252749,
								252763
							],
							[
								252809,
								252821
							],
							[
								252872,
								252882
							],
							[
								252924,
								252944
							],
							[
								256269,
								256289
							],
							[
								256313,
								256330
							],
							[
								256357,
								256371
							],
							[
								256401,
								256417
							],
							[
								256868,
								256891
							],
							[
								256944,
								256959
							],
							[
								257009,
								257034
							],
							[
								257099,
								257121
							],
							[
								257163,
								257185
							],
							[
								257226,
								257246
							],
							[
								263887,
								263905
							],
							[
								263941,
								263961
							],
							[
								263994,
								264011
							],
							[
								264054,
								264073
							],
							[
								264108,
								264129
							],
							[
								264192,
								264210
							],
							[
								264251,
								264271
							],
							[
								264312,
								264334
							],
							[
								264375,
								264397
							],
							[
								264430,
								264449
							],
							[
								264482,
								264503
							],
							[
								264536,
								264554
							],
							[
								264587,
								264613
							],
							[
								264646,
								264668
							],
							[
								264701,
								264723
							],
							[
								265185,
								265206
							],
							[
								265847,
								265864
							],
							[
								265904,
								265922
							],
							[
								268017,
								268042
							],
							[
								268549,
								268566
							],
							[
								268966,
								268991
							],
							[
								271990,
								272009
							],
							[
								272052,
								272071
							],
							[
								272755,
								272759
							],
							[
								272803,
								272816
							],
							[
								272859,
								272875
							],
							[
								280035,
								280054
							],
							[
								280124,
								280145
							],
							[
								280251,
								280272
							],
							[
								280316,
								280336
							],
							[
								280390,
								280412
							],
							[
								280466,
								280493
							],
							[
								280529,
								280555
							],
							[
								280591,
								280616
							],
							[
								280657,
								280675
							],
							[
								280716,
								280736
							],
							[
								280787,
								280806
							],
							[
								280842,
								280861
							],
							[
								280931,
								280952
							],
							[
								281026,
								281030
							],
							[
								281083,
								281104
							],
							[
								281174,
								281197
							],
							[
								281266,
								281289
							],
							[
								281358,
								281378
							],
							[
								281430,
								281452
							],
							[
								281522,
								281545
							],
							[
								281587,
								281612
							],
							[
								282152,
								282174
							],
							[
								286043,
								286067
							],
							[
								286137,
								286140
							],
							[
								286209,
								286236
							],
							[
								286306,
								286309
							],
							[
								286404,
								286430
							],
							[
								286499,
								286502
							],
							[
								287879,
								287903
							],
							[
								287930,
								287934
							],
							[
								287997,
								288023
							],
							[
								288049,
								288053
							],
							[
								288345,
								288356
							],
							[
								288485,
								288499
							],
							[
								288954,
								288967
							],
							[
								289100,
								289116
							],
							[
								289426,
								289446
							],
							[
								289678,
								289700
							],
							[
								290563,
								290576
							],
							[
								296479,
								296506
							],
							[
								296669,
								296697
							],
							[
								296754,
								296783
							],
							[
								297030,
								297062
							],
							[
								297074,
								297106
							],
							[
								298077,
								298099
							],
							[
								298591,
								298608
							],
							[
								299895,
								299914
							],
							[
								300232,
								300251
							],
							[
								300922,
								300939
							],
							[
								303414,
								303433
							],
							[
								303484,
								303505
							],
							[
								305918,
								305937
							],
							[
								305954,
								305958
							],
							[
								307880,
								307907
							],
							[
								308564,
								308586
							],
							[
								309028,
								309053
							],
							[
								312198,
								312223
							],
							[
								312267,
								312292
							],
							[
								312668,
								312691
							],
							[
								315873,
								315902
							],
							[
								318537,
								318559
							],
							[
								320019,
								320048
							],
							[
								321758,
								321780
							],
							[
								322249,
								322278
							],
							[
								322491,
								322519
							],
							[
								322977,
								322989
							],
							[
								323025,
								323043
							],
							[
								323080,
								323099
							],
							[
								323131,
								323145
							],
							[
								323859,
								323873
							],
							[
								323894,
								323897
							],
							[
								324029,
								324032
							],
							[
								324165,
								324168
							],
							[
								324228,
								324231
							],
							[
								324271,
								324274
							],
							[
								324311,
								324314
							],
							[
								324380,
								324383
							],
							[
								324419,
								324422
							],
							[
								324539,
								324542
							],
							[
								324577,
								324580
							],
							[
								324614,
								324617
							],
							[
								324677,
								324680
							],
							[
								324739,
								324742
							],
							[
								324813,
								324816
							],
							[
								324851,
								324854
							],
							[
								324888,
								324891
							],
							[
								324927,
								324930
							],
							[
								324968,
								324971
							],
							[
								325062,
								325066
							],
							[
								325157,
								325160
							],
							[
								325335,
								325338
							],
							[
								325382,
								325385
							],
							[
								325427,
								325430
							],
							[
								325602,
								325605
							],
							[
								331181,
								331199
							],
							[
								331294,
								331318
							],
							[
								331752,
								331773
							],
							[
								331975,
								332005
							],
							[
								333166,
								333190
							],
							[
								333538,
								333564
							],
							[
								333583,
								333609
							],
							[
								333628,
								333654
							],
							[
								333673,
								333699
							],
							[
								333718,
								333744
							],
							[
								333763,
								333792
							],
							[
								333808,
								333836
							],
							[
								333853,
								333881
							],
							[
								333898,
								333928
							],
							[
								333943,
								333969
							],
							[
								333988,
								334017
							],
							[
								334033,
								334066
							],
							[
								334078,
								334108
							],
							[
								334123,
								334149
							],
							[
								334168,
								334200
							],
							[
								335692,
								335713
							],
							[
								335990,
								336014
							],
							[
								336275,
								336279
							],
							[
								336846,
								336866
							],
							[
								337884,
								337896
							],
							[
								338981,
								339000
							],
							[
								339419,
								339439
							],
							[
								340244,
								340269
							],
							[
								341312,
								341324
							],
							[
								345326,
								345343
							],
							[
								346717,
								346736
							],
							[
								347834,
								347852
							],
							[
								348510,
								348528
							],
							[
								349750,
								349767
							],
							[
								351817,
								351835
							],
							[
								353260,
								353276
							],
							[
								353315,
								353335
							],
							[
								353380,
								353402
							],
							[
								358547,
								358566
							],
							[
								358589,
								358607
							],
							[
								358641,
								358660
							],
							[
								358693,
								358710
							],
							[
								358744,
								358763
							],
							[
								362028,
								362049
							],
							[
								362058,
								362079
							],
							[
								362084,
								362087
							],
							[
								362111,
								362114
							],
							[
								362175,
								362179
							],
							[
								362214,
								362218
							],
							[
								362254,
								362257
							],
							[
								362291,
								362295
							],
							[
								362331,
								362334
							],
							[
								362369,
								362372
							],
							[
								363951,
								363969
							],
							[
								364002,
								364023
							],
							[
								364398,
								364415
							],
							[
								364438,
								364460
							],
							[
								364478,
								364504
							],
							[
								364518,
								364541
							],
							[
								364582,
								364606
							],
							[
								364638,
								364662
							],
							[
								364704,
								364728
							],
							[
								364772,
								364795
							],
							[
								364833,
								364857
							],
							[
								364889,
								364913
							],
							[
								364956,
								364980
							],
							[
								365026,
								365050
							],
							[
								365096,
								365120
							],
							[
								365166,
								365190
							],
							[
								365237,
								365261
							],
							[
								365309,
								365333
							],
							[
								365780,
								365796
							],
							[
								367872,
								367892
							],
							[
								368757,
								368777
							],
							[
								369204,
								369225
							],
							[
								369255,
								369280
							],
							[
								369306,
								369334
							],
							[
								369357,
								369383
							],
							[
								369424,
								369451
							],
							[
								369475,
								369504
							],
							[
								369526,
								369561
							],
							[
								369577,
								369605
							],
							[
								369628,
								369650
							],
							[
								369679,
								369701
							],
							[
								369730,
								369753
							],
							[
								369781,
								369810
							],
							[
								369832,
								369857
							],
							[
								369899,
								369928
							],
							[
								369966,
								370000
							],
							[
								370017,
								370048
							],
							[
								370068,
								370096
							],
							[
								370135,
								370171
							],
							[
								370186,
								370215
							],
							[
								370237,
								370266
							],
							[
								370288,
								370313
							],
							[
								370339,
								370361
							],
							[
								370390,
								370417
							],
							[
								370441,
								370465
							],
							[
								370492,
								370523
							],
							[
								370543,
								370573
							],
							[
								370594,
								370619
							],
							[
								370645,
								370680
							],
							[
								370696,
								370716
							],
							[
								373121,
								373142
							],
							[
								373165,
								373185
							],
							[
								373225,
								373246
							],
							[
								373855,
								373866
							],
							[
								375066,
								375081
							],
							[
								375760,
								375778
							],
							[
								377231,
								377250
							],
							[
								377308,
								377328
							],
							[
								377390,
								377408
							],
							[
								377464,
								377485
							],
							[
								377534,
								377556
							],
							[
								377603,
								377620
							],
							[
								379178,
								379197
							],
							[
								379228,
								379246
							],
							[
								379279,
								379296
							],
							[
								380570,
								380584
							],
							[
								380656,
								380672
							],
							[
								383975,
								384000
							],
							[
								384020,
								384048
							],
							[
								384065,
								384097
							],
							[
								384110,
								384136
							],
							[
								384171,
								384201
							],
							[
								384232,
								384257
							],
							[
								384277,
								384303
							],
							[
								384322,
								384350
							],
							[
								384367,
								384393
							],
							[
								384428,
								384454
							],
							[
								385402,
								385419
							],
							[
								391147,
								391177
							],
							[
								391194,
								391220
							],
							[
								391241,
								391268
							],
							[
								391288,
								391313
							],
							[
								391335,
								391364
							],
							[
								391382,
								391417
							],
							[
								391429,
								391464
							],
							[
								391476,
								391501
							],
							[
								391523,
								391549
							],
							[
								391570,
								391597
							],
							[
								391617,
								391645
							],
							[
								391664,
								391697
							],
							[
								391711,
								391738
							],
							[
								391758,
								391777
							],
							[
								392909,
								392928
							],
							[
								395764,
								395795
							],
							[
								395810,
								395832
							],
							[
								395856,
								395883
							],
							[
								395902,
								395927
							],
							[
								395948,
								395975
							],
							[
								395994,
								396015
							],
							[
								396040,
								396065
							],
							[
								396484,
								396498
							],
							[
								396906,
								396925
							],
							[
								396934,
								396953
							],
							[
								405271,
								405294
							],
							[
								405303,
								405326
							],
							[
								405361,
								405364
							],
							[
								405384,
								405388
							],
							[
								405483,
								405487
							],
							[
								405538,
								405541
							],
							[
								405657,
								405661
							],
							[
								405727,
								405731
							],
							[
								405825,
								405829
							],
							[
								405880,
								405884
							],
							[
								405917,
								405921
							],
							[
								406211,
								406233
							],
							[
								406242,
								406264
							],
							[
								406283,
								406286
							],
							[
								406306,
								406310
							],
							[
								406392,
								406396
							],
							[
								406447,
								406450
							],
							[
								406551,
								406555
							],
							[
								406606,
								406610
							],
							[
								406682,
								406686
							],
							[
								406737,
								406741
							],
							[
								407142,
								407156
							],
							[
								417181,
								417200
							],
							[
								417506,
								417525
							],
							[
								417572,
								417593
							],
							[
								417629,
								417653
							],
							[
								417689,
								417713
							],
							[
								424192,
								424213
							],
							[
								424288,
								424292
							],
							[
								424807,
								424822
							],
							[
								424867,
								424883
							],
							[
								425502,
								425517
							],
							[
								426510,
								426525
							],
							[
								427544,
								427555
							],
							[
								429387,
								429403
							],
							[
								429420,
								429423
							],
							[
								430669,
								430695
							],
							[
								431629,
								431651
							],
							[
								436742,
								436767
							],
							[
								437477,
								437502
							],
							[
								437557,
								437579
							],
							[
								437635,
								437660
							],
							[
								437714,
								437740
							],
							[
								438633,
								438652
							],
							[
								441708,
								441738
							],
							[
								441749,
								441770
							],
							[
								441790,
								441812
							],
							[
								442317,
								442341
							],
							[
								443279,
								443300
							],
							[
								443942,
								443964
							],
							[
								444457,
								444472
							],
							[
								444559,
								444570
							],
							[
								444637,
								444651
							],
							[
								446958,
								446979
							],
							[
								446993,
								447015
							],
							[
								447028,
								447047
							],
							[
								447063,
								447083
							],
							[
								447098,
								447121
							],
							[
								447133,
								447157
							],
							[
								448649,
								448672
							],
							[
								449228,
								449257
							],
							[
								450884,
								450905
							],
							[
								455455,
								455477
							],
							[
								455496,
								455500
							],
							[
								456015,
								456036
							],
							[
								456087,
								456110
							],
							[
								456138,
								456161
							],
							[
								456189,
								456210
							],
							[
								456736,
								456756
							],
							[
								457747,
								457763
							],
							[
								459762,
								459782
							],
							[
								462242,
								462263
							],
							[
								462770,
								462791
							],
							[
								463967,
								463987
							],
							[
								465153,
								465177
							],
							[
								467036,
								467053
							],
							[
								467981,
								468004
							],
							[
								469479,
								469498
							],
							[
								470930,
								470960
							],
							[
								471006,
								471035
							],
							[
								471086,
								471113
							],
							[
								471879,
								471895
							],
							[
								471976,
								471998
							],
							[
								472040,
								472064
							],
							[
								472231,
								472248
							],
							[
								472273,
								472290
							],
							[
								472512,
								472543
							],
							[
								472583,
								472586
							],
							[
								472829,
								472851
							],
							[
								473149,
								473153
							],
							[
								473460,
								473488
							],
							[
								473533,
								473536
							],
							[
								473961,
								473985
							],
							[
								474290,
								474294
							],
							[
								475285,
								475295
							],
							[
								475362,
								475375
							],
							[
								475436,
								475448
							],
							[
								475781,
								475799
							],
							[
								476069,
								476084
							],
							[
								476287,
								476309
							],
							[
								477866,
								477887
							],
							[
								478578,
								478599
							],
							[
								479461,
								479482
							],
							[
								480759,
								480782
							],
							[
								483796,
								483817
							],
							[
								484396,
								484423
							],
							[
								484482,
								484485
							],
							[
								490677,
								490701
							],
							[
								493508,
								493527
							],
							[
								494917,
								494940
							],
							[
								495895,
								495917
							],
							[
								497765,
								497787
							],
							[
								498031,
								498056
							],
							[
								498808,
								498836
							],
							[
								500007,
								500028
							],
							[
								501589,
								501608
							],
							[
								503018,
								503037
							],
							[
								504606,
								504626
							],
							[
								506305,
								506325
							],
							[
								507528,
								507553
							],
							[
								508210,
								508239
							],
							[
								509503,
								509528
							],
							[
								510750,
								510773
							],
							[
								511764,
								511787
							],
							[
								512421,
								512440
							],
							[
								514026,
								514048
							],
							[
								518064,
								518086
							],
							[
								519454,
								519479
							],
							[
								519753,
								519778
							],
							[
								528371,
								528393
							],
							[
								528600,
								528603
							],
							[
								529082,
								529107
							],
							[
								529314,
								529317
							],
							[
								530923,
								530956
							],
							[
								530974,
								531002
							],
							[
								533492,
								533513
							],
							[
								533531,
								533556
							],
							[
								533570,
								533595
							],
							[
								533609,
								533636
							],
							[
								533648,
								533676
							],
							[
								535085,
								535106
							],
							[
								535123,
								535147
							],
							[
								535161,
								535183
							],
							[
								539769,
								539784
							],
							[
								540112,
								540133
							],
							[
								540495,
								540519
							],
							[
								541275,
								541296
							],
							[
								541644,
								541665
							],
							[
								546039,
								546066
							],
							[
								546151,
								546154
							],
							[
								546789,
								546819
							]
						],
						"symlist":
						[
							"SQLITE3_H",
							"SQLITE_EXTERN",
							"SQLITE_API",
							"SQLITE_CDECL",
							"SQLITE_APICALL",
							"SQLITE_STDCALL",
							"SQLITE_CALLBACK",
							"SQLITE_SYSAPI",
							"SQLITE_DEPRECATED",
							"SQLITE_EXPERIMENTAL",
							"SQLITE_VERSION",
							"SQLITE_VERSION_NUMBER",
							"SQLITE_SOURCE_ID",
							"sqlite3_libversion",
							"sqlite3_sourceid",
							"sqlite3_libversion_number",
							"sqlite3_compileoption_used",
							"sqlite3_compileoption_get",
							"sqlite3_compileoption_used",
							"sqlite3_compileoption_get",
							"sqlite3_threadsafe",
							"sqlite3",
							"sqlite_int64",
							"sqlite_uint64",
							"sqlite_uint64",
							"sqlite_int64",
							"sqlite_uint64",
							"sqlite_int64",
							"sqlite_uint64",
							"sqlite3_int64",
							"sqlite3_uint64",
							"double",
							"sqlite3_close",
							"sqlite3_close_v2",
							"int",
							"sqlite3_exec",
							"int",
							"SQLITE_OK",
							"SQLITE_ERROR",
							"SQLITE_INTERNAL",
							"SQLITE_PERM",
							"SQLITE_ABORT",
							"SQLITE_BUSY",
							"SQLITE_LOCKED",
							"SQLITE_NOMEM",
							"SQLITE_READONLY",
							"SQLITE_INTERRUPT",
							"SQLITE_IOERR",
							"SQLITE_CORRUPT",
							"SQLITE_NOTFOUND",
							"SQLITE_FULL",
							"SQLITE_CANTOPEN",
							"SQLITE_PROTOCOL",
							"SQLITE_EMPTY",
							"SQLITE_SCHEMA",
							"SQLITE_TOOBIG",
							"SQLITE_CONSTRAINT",
							"SQLITE_MISMATCH",
							"SQLITE_MISUSE",
							"SQLITE_NOLFS",
							"SQLITE_AUTH",
							"SQLITE_FORMAT",
							"SQLITE_RANGE",
							"SQLITE_NOTADB",
							"SQLITE_NOTICE",
							"SQLITE_WARNING",
							"SQLITE_ROW",
							"SQLITE_DONE",
							"SQLITE_ERROR_MISSING_COLLSEQ",
							"SQLITE_ERROR_RETRY",
							"SQLITE_ERROR_SNAPSHOT",
							"SQLITE_IOERR_READ",
							"SQLITE_IOERR_SHORT_READ",
							"SQLITE_IOERR_WRITE",
							"SQLITE_IOERR_FSYNC",
							"SQLITE_IOERR_DIR_FSYNC",
							"SQLITE_IOERR_TRUNCATE",
							"SQLITE_IOERR_FSTAT",
							"SQLITE_IOERR_UNLOCK",
							"SQLITE_IOERR_RDLOCK",
							"SQLITE_IOERR_DELETE",
							"SQLITE_IOERR_BLOCKED",
							"SQLITE_IOERR_NOMEM",
							"SQLITE_IOERR_ACCESS",
							"SQLITE_IOERR_CHECKRESERVEDLOCK",
							"SQLITE_IOERR_LOCK",
							"SQLITE_IOERR_CLOSE",
							"SQLITE_IOERR_DIR_CLOSE",
							"SQLITE_IOERR_SHMOPEN",
							"SQLITE_IOERR_SHMSIZE",
							"SQLITE_IOERR_SHMLOCK",
							"SQLITE_IOERR_SHMMAP",
							"SQLITE_IOERR_SEEK",
							"SQLITE_IOERR_DELETE_NOENT",
							"SQLITE_IOERR_MMAP",
							"SQLITE_IOERR_GETTEMPPATH",
							"SQLITE_IOERR_CONVPATH",
							"SQLITE_IOERR_VNODE",
							"SQLITE_IOERR_AUTH",
							"SQLITE_IOERR_BEGIN_ATOMIC",
							"SQLITE_IOERR_COMMIT_ATOMIC",
							"SQLITE_IOERR_ROLLBACK_ATOMIC",
							"SQLITE_LOCKED_SHAREDCACHE",
							"SQLITE_LOCKED_VTAB",
							"SQLITE_BUSY_RECOVERY",
							"SQLITE_BUSY_SNAPSHOT",
							"SQLITE_CANTOPEN_NOTEMPDIR",
							"SQLITE_CANTOPEN_ISDIR",
							"SQLITE_CANTOPEN_FULLPATH",
							"SQLITE_CANTOPEN_CONVPATH",
							"SQLITE_CANTOPEN_DIRTYWAL",
							"SQLITE_CANTOPEN_SYMLINK",
							"SQLITE_CORRUPT_VTAB",
							"SQLITE_CORRUPT_SEQUENCE",
							"SQLITE_READONLY_RECOVERY",
							"SQLITE_READONLY_CANTLOCK",
							"SQLITE_READONLY_ROLLBACK",
							"SQLITE_READONLY_DBMOVED",
							"SQLITE_READONLY_CANTINIT",
							"SQLITE_READONLY_DIRECTORY",
							"SQLITE_ABORT_ROLLBACK",
							"SQLITE_CONSTRAINT_CHECK",
							"SQLITE_CONSTRAINT_COMMITHOOK",
							"SQLITE_CONSTRAINT_FOREIGNKEY",
							"SQLITE_CONSTRAINT_FUNCTION",
							"SQLITE_CONSTRAINT_NOTNULL",
							"SQLITE_CONSTRAINT_PRIMARYKEY",
							"SQLITE_CONSTRAINT_TRIGGER",
							"SQLITE_CONSTRAINT_UNIQUE",
							"SQLITE_CONSTRAINT_VTAB",
							"SQLITE_CONSTRAINT_ROWID",
							"SQLITE_CONSTRAINT_PINNED",
							"SQLITE_NOTICE_RECOVER_WAL",
							"SQLITE_NOTICE_RECOVER_ROLLBACK",
							"SQLITE_WARNING_AUTOINDEX",
							"SQLITE_AUTH_USER",
							"SQLITE_OK_LOAD_PERMANENTLY",
							"SQLITE_OK_SYMLINK",
							"SQLITE_OPEN_READONLY",
							"SQLITE_OPEN_READWRITE",
							"SQLITE_OPEN_CREATE",
							"SQLITE_OPEN_DELETEONCLOSE",
							"SQLITE_OPEN_EXCLUSIVE",
							"SQLITE_OPEN_AUTOPROXY",
							"SQLITE_OPEN_URI",
							"SQLITE_OPEN_MEMORY",
							"SQLITE_OPEN_MAIN_DB",
							"SQLITE_OPEN_TEMP_DB",
							"SQLITE_OPEN_TRANSIENT_DB",
							"SQLITE_OPEN_MAIN_JOURNAL",
							"SQLITE_OPEN_TEMP_JOURNAL",
							"SQLITE_OPEN_SUBJOURNAL",
							"SQLITE_OPEN_MASTER_JOURNAL",
							"SQLITE_OPEN_NOMUTEX",
							"SQLITE_OPEN_FULLMUTEX",
							"SQLITE_OPEN_SHAREDCACHE",
							"SQLITE_OPEN_PRIVATECACHE",
							"SQLITE_OPEN_WAL",
							"SQLITE_OPEN_NOFOLLOW",
							"SQLITE_IOCAP_ATOMIC",
							"SQLITE_IOCAP_ATOMIC512",
							"SQLITE_IOCAP_ATOMIC1K",
							"SQLITE_IOCAP_ATOMIC2K",
							"SQLITE_IOCAP_ATOMIC4K",
							"SQLITE_IOCAP_ATOMIC8K",
							"SQLITE_IOCAP_ATOMIC16K",
							"SQLITE_IOCAP_ATOMIC32K",
							"SQLITE_IOCAP_ATOMIC64K",
							"SQLITE_IOCAP_SAFE_APPEND",
							"SQLITE_IOCAP_SEQUENTIAL",
							"SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN",
							"SQLITE_IOCAP_POWERSAFE_OVERWRITE",
							"SQLITE_IOCAP_IMMUTABLE",
							"SQLITE_IOCAP_BATCH_ATOMIC",
							"SQLITE_LOCK_NONE",
							"SQLITE_LOCK_SHARED",
							"SQLITE_LOCK_RESERVED",
							"SQLITE_LOCK_PENDING",
							"SQLITE_LOCK_EXCLUSIVE",
							"SQLITE_SYNC_NORMAL",
							"SQLITE_SYNC_FULL",
							"SQLITE_SYNC_DATAONLY",
							"sqlite3_file",
							"sqlite3_file",
							"sqlite3_io_methods",
							"sqlite3_io_methods",
							"sqlite3_io_methods",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" void",
							" int",
							" int",
							" int",
							"SQLITE_FCNTL_LOCKSTATE",
							"SQLITE_FCNTL_GET_LOCKPROXYFILE",
							"SQLITE_FCNTL_SET_LOCKPROXYFILE",
							"SQLITE_FCNTL_LAST_ERRNO",
							"SQLITE_FCNTL_SIZE_HINT",
							"SQLITE_FCNTL_CHUNK_SIZE",
							"SQLITE_FCNTL_FILE_POINTER",
							"SQLITE_FCNTL_SYNC_OMITTED",
							"SQLITE_FCNTL_WIN32_AV_RETRY",
							"SQLITE_FCNTL_PERSIST_WAL",
							"SQLITE_FCNTL_OVERWRITE",
							"SQLITE_FCNTL_VFSNAME",
							"SQLITE_FCNTL_POWERSAFE_OVERWRITE",
							"SQLITE_FCNTL_PRAGMA",
							"SQLITE_FCNTL_BUSYHANDLER",
							"SQLITE_FCNTL_TEMPFILENAME",
							"SQLITE_FCNTL_MMAP_SIZE",
							"SQLITE_FCNTL_TRACE",
							"SQLITE_FCNTL_HAS_MOVED",
							"SQLITE_FCNTL_SYNC",
							"SQLITE_FCNTL_COMMIT_PHASETWO",
							"SQLITE_FCNTL_WIN32_SET_HANDLE",
							"SQLITE_FCNTL_WAL_BLOCK",
							"SQLITE_FCNTL_ZIPVFS",
							"SQLITE_FCNTL_RBU",
							"SQLITE_FCNTL_VFS_POINTER",
							"SQLITE_FCNTL_JOURNAL_POINTER",
							"SQLITE_FCNTL_WIN32_GET_HANDLE",
							"SQLITE_FCNTL_PDB",
							"SQLITE_FCNTL_BEGIN_ATOMIC_WRITE",
							"SQLITE_FCNTL_COMMIT_ATOMIC_WRITE",
							"SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE",
							"SQLITE_FCNTL_LOCK_TIMEOUT",
							"SQLITE_FCNTL_DATA_VERSION",
							"SQLITE_FCNTL_SIZE_LIMIT",
							"SQLITE_FCNTL_CKPT_DONE",
							"SQLITE_GET_LOCKPROXYFILE",
							"SQLITE_SET_LOCKPROXYFILE",
							"SQLITE_LAST_ERRNO",
							"sqlite3_mutex",
							"sqlite3_api_routines",
							"sqlite3_vfs",
							"void",
							"sqlite3_vfs",
							" int",
							" int",
							" int",
							" int",
							" void",
							" void",
							" void",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" sqlite3_syscall_ptr",
							"SQLITE_ACCESS_EXISTS",
							"SQLITE_ACCESS_READWRITE",
							"SQLITE_ACCESS_READ",
							"SQLITE_SHM_UNLOCK",
							"SQLITE_SHM_LOCK",
							"SQLITE_SHM_SHARED",
							"SQLITE_SHM_EXCLUSIVE",
							"SQLITE_SHM_NLOCK",
							"sqlite3_initialize",
							"sqlite3_shutdown",
							"sqlite3_os_init",
							"sqlite3_os_end",
							"sqlite3_config",
							"sqlite3_db_config",
							"sqlite3_mem_methods",
							"sqlite3_mem_methods",
							" void",
							" int",
							" int",
							" int",
							" void",
							"SQLITE_CONFIG_SINGLETHREAD",
							"SQLITE_CONFIG_MULTITHREAD",
							"SQLITE_CONFIG_SERIALIZED",
							"SQLITE_CONFIG_MALLOC",
							"SQLITE_CONFIG_GETMALLOC",
							"SQLITE_CONFIG_SCRATCH",
							"SQLITE_CONFIG_PAGECACHE",
							"SQLITE_CONFIG_HEAP",
							"SQLITE_CONFIG_MEMSTATUS",
							"SQLITE_CONFIG_MUTEX",
							"SQLITE_CONFIG_GETMUTEX",
							"SQLITE_CONFIG_LOOKASIDE",
							"SQLITE_CONFIG_PCACHE",
							"SQLITE_CONFIG_GETPCACHE",
							"SQLITE_CONFIG_LOG",
							"SQLITE_CONFIG_URI",
							"SQLITE_CONFIG_PCACHE2",
							"SQLITE_CONFIG_GETPCACHE2",
							"SQLITE_CONFIG_COVERING_INDEX_SCAN",
							"SQLITE_CONFIG_SQLLOG",
							"SQLITE_CONFIG_MMAP_SIZE",
							"SQLITE_CONFIG_WIN32_HEAPSIZE",
							"SQLITE_CONFIG_PCACHE_HDRSZ",
							"SQLITE_CONFIG_PMASZ",
							"SQLITE_CONFIG_STMTJRNL_SPILL",
							"SQLITE_CONFIG_SMALL_MALLOC",
							"SQLITE_CONFIG_SORTERREF_SIZE",
							"SQLITE_CONFIG_MEMDB_MAXSIZE",
							"SQLITE_DBCONFIG_MAINDBNAME",
							"SQLITE_DBCONFIG_LOOKASIDE",
							"SQLITE_DBCONFIG_ENABLE_FKEY",
							"SQLITE_DBCONFIG_ENABLE_TRIGGER",
							"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER",
							"SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION",
							"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE",
							"SQLITE_DBCONFIG_ENABLE_QPSG",
							"SQLITE_DBCONFIG_TRIGGER_EQP",
							"SQLITE_DBCONFIG_RESET_DATABASE",
							"SQLITE_DBCONFIG_DEFENSIVE",
							"SQLITE_DBCONFIG_WRITABLE_SCHEMA",
							"SQLITE_DBCONFIG_LEGACY_ALTER_TABLE",
							"SQLITE_DBCONFIG_DQS_DML",
							"SQLITE_DBCONFIG_DQS_DDL",
							"SQLITE_DBCONFIG_ENABLE_VIEW",
							"SQLITE_DBCONFIG_LEGACY_FILE_FORMAT",
							"SQLITE_DBCONFIG_TRUSTED_SCHEMA",
							"SQLITE_DBCONFIG_MAX",
							"sqlite3_extended_result_codes",
							"sqlite3_last_insert_rowid",
							"sqlite3_set_last_insert_rowid",
							"sqlite3_changes",
							"sqlite3_total_changes",
							"sqlite3_interrupt",
							"sqlite3_complete",
							"sqlite3_complete16",
							"sqlite3_busy_handler",
							"sqlite3_busy_timeout",
							"sqlite3_get_table",
							"sqlite3_free_table",
							"sqlite3_mprintf",
							"sqlite3_vmprintf",
							"sqlite3_snprintf",
							"sqlite3_vsnprintf",
							"sqlite3_malloc",
							"sqlite3_malloc64",
							"sqlite3_realloc",
							"sqlite3_realloc64",
							"sqlite3_free",
							"sqlite3_msize",
							"sqlite3_memory_used",
							"sqlite3_memory_highwater",
							"sqlite3_randomness",
							"sqlite3_set_authorizer",
							"int",
							"SQLITE_DENY",
							"SQLITE_IGNORE",
							"SQLITE_CREATE_INDEX",
							"SQLITE_CREATE_TABLE",
							"SQLITE_CREATE_TEMP_INDEX",
							"SQLITE_CREATE_TEMP_TABLE",
							"SQLITE_CREATE_TEMP_TRIGGER",
							"SQLITE_CREATE_TEMP_VIEW",
							"SQLITE_CREATE_TRIGGER",
							"SQLITE_CREATE_VIEW",
							"SQLITE_DELETE",
							"SQLITE_DROP_INDEX",
							"SQLITE_DROP_TABLE",
							"SQLITE_DROP_TEMP_INDEX",
							"SQLITE_DROP_TEMP_TABLE",
							"SQLITE_DROP_TEMP_TRIGGER",
							"SQLITE_DROP_TEMP_VIEW",
							"SQLITE_DROP_TRIGGER",
							"SQLITE_DROP_VIEW",
							"SQLITE_INSERT",
							"SQLITE_PRAGMA",
							"SQLITE_READ",
							"SQLITE_SELECT",
							"SQLITE_TRANSACTION",
							"SQLITE_UPDATE",
							"SQLITE_ATTACH",
							"SQLITE_DETACH",
							"SQLITE_ALTER_TABLE",
							"SQLITE_REINDEX",
							"SQLITE_ANALYZE",
							"SQLITE_CREATE_VTABLE",
							"SQLITE_DROP_VTABLE",
							"SQLITE_FUNCTION",
							"SQLITE_SAVEPOINT",
							"SQLITE_COPY",
							"SQLITE_RECURSIVE",
							"sqlite3_trace",
							"void",
							"sqlite3_profile",
							"void",
							"SQLITE_TRACE_STMT",
							"SQLITE_TRACE_PROFILE",
							"SQLITE_TRACE_ROW",
							"SQLITE_TRACE_CLOSE",
							"sqlite3_trace_v2",
							"int",
							"sqlite3_progress_handler",
							"sqlite3_open",
							"sqlite3_open16",
							"sqlite3_open_v2",
							"sqlite3_uri_parameter",
							"sqlite3_uri_boolean",
							"sqlite3_uri_int64",
							"sqlite3_uri_key",
							"sqlite3_filename_database",
							"sqlite3_filename_journal",
							"sqlite3_filename_wal",
							"sqlite3_errcode",
							"sqlite3_extended_errcode",
							"sqlite3_errmsg",
							"sqlite3_errmsg16",
							"sqlite3_errstr",
							"sqlite3_stmt",
							"sqlite3_limit",
							"SQLITE_LIMIT_LENGTH",
							"SQLITE_LIMIT_SQL_LENGTH",
							"SQLITE_LIMIT_COLUMN",
							"SQLITE_LIMIT_EXPR_DEPTH",
							"SQLITE_LIMIT_COMPOUND_SELECT",
							"SQLITE_LIMIT_VDBE_OP",
							"SQLITE_LIMIT_FUNCTION_ARG",
							"SQLITE_LIMIT_ATTACHED",
							"SQLITE_LIMIT_LIKE_PATTERN_LENGTH",
							"SQLITE_LIMIT_VARIABLE_NUMBER",
							"SQLITE_LIMIT_TRIGGER_DEPTH",
							"SQLITE_LIMIT_WORKER_THREADS",
							"SQLITE_PREPARE_PERSISTENT",
							"SQLITE_PREPARE_NORMALIZE",
							"SQLITE_PREPARE_NO_VTAB",
							"sqlite3_prepare",
							"sqlite3_prepare_v2",
							"sqlite3_prepare_v3",
							"sqlite3_prepare16",
							"sqlite3_prepare16_v2",
							"sqlite3_prepare16_v3",
							"sqlite3_sql",
							"sqlite3_expanded_sql",
							"sqlite3_normalized_sql",
							"sqlite3_stmt_readonly",
							"sqlite3_stmt_isexplain",
							"sqlite3_stmt_busy",
							"sqlite3_value",
							"sqlite3_context",
							"sqlite3_bind_blob",
							"sqlite3_bind_blob64",
							"void",
							"sqlite3_bind_double",
							"sqlite3_bind_int",
							"sqlite3_bind_int64",
							"sqlite3_bind_null",
							"sqlite3_bind_text",
							"sqlite3_bind_text16",
							"sqlite3_bind_text64",
							"void",
							"sqlite3_bind_value",
							"sqlite3_bind_pointer",
							"sqlite3_bind_zeroblob",
							"sqlite3_bind_zeroblob64",
							"sqlite3_bind_parameter_count",
							"sqlite3_bind_parameter_name",
							"sqlite3_bind_parameter_index",
							"sqlite3_clear_bindings",
							"sqlite3_column_count",
							"sqlite3_column_name",
							"sqlite3_column_name16",
							"sqlite3_column_database_name",
							"sqlite3_column_database_name16",
							"sqlite3_column_table_name",
							"sqlite3_column_table_name16",
							"sqlite3_column_origin_name",
							"sqlite3_column_origin_name16",
							"sqlite3_column_decltype",
							"sqlite3_column_decltype16",
							"sqlite3_step",
							"sqlite3_data_count",
							"SQLITE_INTEGER",
							"SQLITE_FLOAT",
							"SQLITE_BLOB",
							"SQLITE_NULL",
							"SQLITE_TEXT",
							"SQLITE3_TEXT",
							"sqlite3_column_blob",
							"sqlite3_column_double",
							"sqlite3_column_int",
							"sqlite3_column_int64",
							"sqlite3_column_text",
							"sqlite3_column_text16",
							"sqlite3_column_value",
							"sqlite3_column_bytes",
							"sqlite3_column_bytes16",
							"sqlite3_column_type",
							"sqlite3_finalize",
							"sqlite3_reset",
							"sqlite3_create_function",
							"void",
							"sqlite3_create_function16",
							"void",
							"sqlite3_create_function_v2",
							"void",
							"sqlite3_create_window_function",
							"void",
							"SQLITE_UTF8",
							"SQLITE_UTF16LE",
							"SQLITE_UTF16BE",
							"SQLITE_UTF16",
							"SQLITE_ANY",
							"SQLITE_UTF16_ALIGNED",
							"SQLITE_DETERMINISTIC",
							"SQLITE_DIRECTONLY",
							"SQLITE_SUBTYPE",
							"SQLITE_INNOCUOUS",
							"sqlite3_aggregate_count",
							"sqlite3_expired",
							"sqlite3_transfer_bindings",
							"sqlite3_global_recover",
							"sqlite3_thread_cleanup",
							"sqlite3_memory_alarm",
							"sqlite3_value_blob",
							"sqlite3_value_double",
							"sqlite3_value_int",
							"sqlite3_value_int64",
							"sqlite3_value_pointer",
							"sqlite3_value_text",
							"sqlite3_value_text16",
							"sqlite3_value_text16le",
							"sqlite3_value_text16be",
							"sqlite3_value_bytes",
							"sqlite3_value_bytes16",
							"sqlite3_value_type",
							"sqlite3_value_numeric_type",
							"sqlite3_value_nochange",
							"sqlite3_value_frombind",
							"sqlite3_value_subtype",
							"sqlite3_value_dup",
							"sqlite3_value_free",
							"sqlite3_aggregate_context",
							"sqlite3_user_data",
							"sqlite3_context_db_handle",
							"sqlite3_get_auxdata",
							"sqlite3_set_auxdata",
							"void",
							"SQLITE_STATIC",
							"SQLITE_TRANSIENT",
							"sqlite3_result_blob",
							"sqlite3_result_blob64",
							"sqlite3_result_double",
							"sqlite3_result_error",
							"sqlite3_result_error16",
							"sqlite3_result_error_toobig",
							"sqlite3_result_error_nomem",
							"sqlite3_result_error_code",
							"sqlite3_result_int",
							"sqlite3_result_int64",
							"sqlite3_result_null",
							"sqlite3_result_text",
							"sqlite3_result_text64",
							"void",
							"sqlite3_result_text16",
							"sqlite3_result_text16le",
							"sqlite3_result_text16be",
							"sqlite3_result_value",
							"sqlite3_result_pointer",
							"sqlite3_result_zeroblob",
							"sqlite3_result_zeroblob64",
							"sqlite3_result_subtype",
							"sqlite3_create_collation",
							"int",
							"sqlite3_create_collation_v2",
							"int",
							"sqlite3_create_collation16",
							"int",
							"sqlite3_collation_needed",
							"void",
							"sqlite3_collation_needed16",
							"void",
							"sqlite3_key",
							"sqlite3_key_v2",
							"sqlite3_rekey",
							"sqlite3_rekey_v2",
							"sqlite3_activate_see",
							"sqlite3_activate_cerod",
							"sqlite3_sleep",
							"sqlite3_win32_set_directory",
							"sqlite3_win32_set_directory8",
							"sqlite3_win32_set_directory16",
							"SQLITE_WIN32_DATA_DIRECTORY_TYPE",
							"SQLITE_WIN32_TEMP_DIRECTORY_TYPE",
							"sqlite3_get_autocommit",
							"sqlite3_db_handle",
							"sqlite3_db_filename",
							"sqlite3_db_readonly",
							"sqlite3_next_stmt",
							"sqlite3_commit_hook",
							"sqlite3_rollback_hook",
							"sqlite3_update_hook",
							"void",
							"sqlite3_enable_shared_cache",
							"sqlite3_release_memory",
							"sqlite3_db_release_memory",
							"sqlite3_soft_heap_limit64",
							"sqlite3_hard_heap_limit64",
							"sqlite3_soft_heap_limit",
							"sqlite3_table_column_metadata",
							"sqlite3_load_extension",
							"sqlite3_enable_load_extension",
							"sqlite3_auto_extension",
							"sqlite3_cancel_auto_extension",
							"sqlite3_reset_auto_extension",
							"sqlite3_vtab",
							"sqlite3_index_info",
							"sqlite3_vtab_cursor",
							"sqlite3_module",
							"sqlite3_module",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" int",
							" void",
							" int",
							" int",
							" int",
							" int",
							" int",
							"sqlite3_index_info",
							"sqlite3_index_constraint",
							"sqlite3_index_orderby",
							"sqlite3_index_constraint_usage",
							"SQLITE_INDEX_SCAN_UNIQUE",
							"SQLITE_INDEX_CONSTRAINT_EQ",
							"SQLITE_INDEX_CONSTRAINT_GT",
							"SQLITE_INDEX_CONSTRAINT_LE",
							"SQLITE_INDEX_CONSTRAINT_LT",
							"SQLITE_INDEX_CONSTRAINT_GE",
							"SQLITE_INDEX_CONSTRAINT_MATCH",
							"SQLITE_INDEX_CONSTRAINT_LIKE",
							"SQLITE_INDEX_CONSTRAINT_GLOB",
							"SQLITE_INDEX_CONSTRAINT_REGEXP",
							"SQLITE_INDEX_CONSTRAINT_NE",
							"SQLITE_INDEX_CONSTRAINT_ISNOT",
							"SQLITE_INDEX_CONSTRAINT_ISNOTNULL",
							"SQLITE_INDEX_CONSTRAINT_ISNULL",
							"SQLITE_INDEX_CONSTRAINT_IS",
							"SQLITE_INDEX_CONSTRAINT_FUNCTION",
							"sqlite3_create_module",
							"sqlite3_create_module_v2",
							"void",
							"sqlite3_drop_modules",
							"sqlite3_vtab",
							"sqlite3_vtab_cursor",
							"sqlite3_declare_vtab",
							"sqlite3_overload_function",
							"sqlite3_blob",
							"sqlite3_blob_open",
							"sqlite3_blob_reopen",
							"sqlite3_blob_close",
							"sqlite3_blob_bytes",
							"sqlite3_blob_read",
							"sqlite3_blob_write",
							"sqlite3_vfs_find",
							"sqlite3_vfs_register",
							"sqlite3_vfs_unregister",
							"sqlite3_mutex_alloc",
							"sqlite3_mutex_free",
							"sqlite3_mutex_enter",
							"sqlite3_mutex_try",
							"sqlite3_mutex_leave",
							"sqlite3_mutex_methods",
							"sqlite3_mutex_methods",
							" int",
							" int",
							" void",
							" void",
							" int",
							" void",
							" int",
							" int",
							"sqlite3_mutex_held",
							"sqlite3_mutex_notheld",
							"SQLITE_MUTEX_FAST",
							"SQLITE_MUTEX_RECURSIVE",
							"SQLITE_MUTEX_STATIC_MASTER",
							"SQLITE_MUTEX_STATIC_MEM",
							"SQLITE_MUTEX_STATIC_MEM2",
							"SQLITE_MUTEX_STATIC_OPEN",
							"SQLITE_MUTEX_STATIC_PRNG",
							"SQLITE_MUTEX_STATIC_LRU",
							"SQLITE_MUTEX_STATIC_LRU2",
							"SQLITE_MUTEX_STATIC_PMEM",
							"SQLITE_MUTEX_STATIC_APP1",
							"SQLITE_MUTEX_STATIC_APP2",
							"SQLITE_MUTEX_STATIC_APP3",
							"SQLITE_MUTEX_STATIC_VFS1",
							"SQLITE_MUTEX_STATIC_VFS2",
							"SQLITE_MUTEX_STATIC_VFS3",
							"sqlite3_db_mutex",
							"sqlite3_file_control",
							"sqlite3_test_control",
							"SQLITE_TESTCTRL_FIRST",
							"SQLITE_TESTCTRL_PRNG_SAVE",
							"SQLITE_TESTCTRL_PRNG_RESTORE",
							"SQLITE_TESTCTRL_PRNG_RESET",
							"SQLITE_TESTCTRL_BITVEC_TEST",
							"SQLITE_TESTCTRL_FAULT_INSTALL",
							"SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS",
							"SQLITE_TESTCTRL_PENDING_BYTE",
							"SQLITE_TESTCTRL_ASSERT",
							"SQLITE_TESTCTRL_ALWAYS",
							"SQLITE_TESTCTRL_RESERVE",
							"SQLITE_TESTCTRL_OPTIMIZATIONS",
							"SQLITE_TESTCTRL_ISKEYWORD",
							"SQLITE_TESTCTRL_SCRATCHMALLOC",
							"SQLITE_TESTCTRL_INTERNAL_FUNCTIONS",
							"SQLITE_TESTCTRL_LOCALTIME_FAULT",
							"SQLITE_TESTCTRL_EXPLAIN_STMT",
							"SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD",
							"SQLITE_TESTCTRL_NEVER_CORRUPT",
							"SQLITE_TESTCTRL_VDBE_COVERAGE",
							"SQLITE_TESTCTRL_BYTEORDER",
							"SQLITE_TESTCTRL_ISINIT",
							"SQLITE_TESTCTRL_SORTER_MMAP",
							"SQLITE_TESTCTRL_IMPOSTER",
							"SQLITE_TESTCTRL_PARSER_COVERAGE",
							"SQLITE_TESTCTRL_RESULT_INTREAL",
							"SQLITE_TESTCTRL_PRNG_SEED",
							"SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS",
							"SQLITE_TESTCTRL_LAST",
							"sqlite3_keyword_count",
							"sqlite3_keyword_name",
							"sqlite3_keyword_check",
							"sqlite3_str",
							"sqlite3_str_new",
							"sqlite3_str_finish",
							"sqlite3_str_appendf",
							"sqlite3_str_vappendf",
							"sqlite3_str_append",
							"sqlite3_str_appendall",
							"sqlite3_str_appendchar",
							"sqlite3_str_reset",
							"sqlite3_str_errcode",
							"sqlite3_str_length",
							"sqlite3_str_value",
							"sqlite3_status",
							"sqlite3_status64",
							"SQLITE_STATUS_MEMORY_USED",
							"SQLITE_STATUS_PAGECACHE_USED",
							"SQLITE_STATUS_PAGECACHE_OVERFLOW",
							"SQLITE_STATUS_SCRATCH_USED",
							"SQLITE_STATUS_SCRATCH_OVERFLOW",
							"SQLITE_STATUS_MALLOC_SIZE",
							"SQLITE_STATUS_PARSER_STACK",
							"SQLITE_STATUS_PAGECACHE_SIZE",
							"SQLITE_STATUS_SCRATCH_SIZE",
							"SQLITE_STATUS_MALLOC_COUNT",
							"sqlite3_db_status",
							"SQLITE_DBSTATUS_LOOKASIDE_USED",
							"SQLITE_DBSTATUS_CACHE_USED",
							"SQLITE_DBSTATUS_SCHEMA_USED",
							"SQLITE_DBSTATUS_STMT_USED",
							"SQLITE_DBSTATUS_LOOKASIDE_HIT",
							"SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE",
							"SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL",
							"SQLITE_DBSTATUS_CACHE_HIT",
							"SQLITE_DBSTATUS_CACHE_MISS",
							"SQLITE_DBSTATUS_CACHE_WRITE",
							"SQLITE_DBSTATUS_DEFERRED_FKS",
							"SQLITE_DBSTATUS_CACHE_USED_SHARED",
							"SQLITE_DBSTATUS_CACHE_SPILL",
							"SQLITE_DBSTATUS_MAX",
							"sqlite3_stmt_status",
							"SQLITE_STMTSTATUS_FULLSCAN_STEP",
							"SQLITE_STMTSTATUS_SORT",
							"SQLITE_STMTSTATUS_AUTOINDEX",
							"SQLITE_STMTSTATUS_VM_STEP",
							"SQLITE_STMTSTATUS_REPREPARE",
							"SQLITE_STMTSTATUS_RUN",
							"SQLITE_STMTSTATUS_MEMUSED",
							"sqlite3_pcache",
							"sqlite3_pcache_page",
							"sqlite3_pcache_page",
							"sqlite3_pcache_methods2",
							"sqlite3_pcache_methods2",
							" int",
							" void",
							" void",
							" int",
							" void",
							" void",
							" void",
							" void",
							" void",
							"sqlite3_pcache_methods",
							"sqlite3_pcache_methods",
							" int",
							" void",
							" void",
							" int",
							" void",
							" void",
							" void",
							" void",
							"sqlite3_backup",
							"sqlite3_backup_init",
							"sqlite3_backup_step",
							"sqlite3_backup_finish",
							"sqlite3_backup_remaining",
							"sqlite3_backup_pagecount",
							"sqlite3_unlock_notify",
							"void",
							"sqlite3_stricmp",
							"sqlite3_strnicmp",
							"sqlite3_strglob",
							"sqlite3_strlike",
							"sqlite3_log",
							"sqlite3_wal_hook",
							"int",
							"sqlite3_wal_autocheckpoint",
							"sqlite3_wal_checkpoint",
							"sqlite3_wal_checkpoint_v2",
							"SQLITE_CHECKPOINT_PASSIVE",
							"SQLITE_CHECKPOINT_FULL",
							"SQLITE_CHECKPOINT_RESTART",
							"SQLITE_CHECKPOINT_TRUNCATE",
							"sqlite3_vtab_config",
							"SQLITE_VTAB_CONSTRAINT_SUPPORT",
							"SQLITE_VTAB_INNOCUOUS",
							"SQLITE_VTAB_DIRECTONLY",
							"sqlite3_vtab_on_conflict",
							"sqlite3_vtab_nochange",
							"sqlite3_vtab_collation",
							"SQLITE_ROLLBACK",
							"SQLITE_FAIL",
							"SQLITE_REPLACE",
							"SQLITE_SCANSTAT_NLOOP",
							"SQLITE_SCANSTAT_NVISIT",
							"SQLITE_SCANSTAT_EST",
							"SQLITE_SCANSTAT_NAME",
							"SQLITE_SCANSTAT_EXPLAIN",
							"SQLITE_SCANSTAT_SELECTID",
							"sqlite3_stmt_scanstatus",
							"sqlite3_stmt_scanstatus_reset",
							"sqlite3_db_cacheflush",
							"sqlite3_preupdate_hook",
							"void",
							"sqlite3_preupdate_old",
							"sqlite3_preupdate_count",
							"sqlite3_preupdate_depth",
							"sqlite3_preupdate_new",
							"sqlite3_system_errno",
							"sqlite3_snapshot",
							"sqlite3_snapshot_get",
							"sqlite3_snapshot_open",
							"sqlite3_snapshot_free",
							"sqlite3_snapshot_cmp",
							"sqlite3_snapshot_recover",
							"sqlite3_serialize",
							"SQLITE_SERIALIZE_NOCOPY",
							"sqlite3_deserialize",
							"SQLITE_DESERIALIZE_FREEONCLOSE",
							"SQLITE_DESERIALIZE_RESIZEABLE",
							"SQLITE_DESERIALIZE_READONLY",
							"_SQLITE3RTREE_H_",
							"sqlite3_rtree_geometry",
							"sqlite3_rtree_query_info",
							"sqlite3_rtree_dbl",
							"sqlite3_rtree_dbl",
							"sqlite3_rtree_geometry_callback",
							"int",
							"sqlite3_rtree_geometry",
							" void",
							"sqlite3_rtree_query_callback",
							"int",
							"sqlite3_rtree_query_info",
							" void",
							"NOT_WITHIN",
							"PARTLY_WITHIN",
							"FULLY_WITHIN",
							"__SQLITESESSION_H_",
							"sqlite3_session",
							"sqlite3_changeset_iter",
							"sqlite3session_create",
							"sqlite3session_delete",
							"sqlite3session_enable",
							"sqlite3session_indirect",
							"sqlite3session_attach",
							"sqlite3session_table_filter",
							"int",
							"sqlite3session_changeset",
							"sqlite3session_diff",
							"sqlite3session_patchset",
							"sqlite3session_isempty",
							"sqlite3changeset_start",
							"sqlite3changeset_start_v2",
							"SQLITE_CHANGESETSTART_INVERT",
							"sqlite3changeset_next",
							"sqlite3changeset_op",
							"sqlite3changeset_pk",
							"sqlite3changeset_old",
							"sqlite3changeset_new",
							"sqlite3changeset_conflict",
							"sqlite3changeset_fk_conflicts",
							"sqlite3changeset_finalize",
							"sqlite3changeset_invert",
							"sqlite3changeset_concat",
							"sqlite3_changegroup",
							"sqlite3changegroup_new",
							"sqlite3changegroup_add",
							"sqlite3changegroup_output",
							"sqlite3changegroup_delete",
							"sqlite3changeset_apply",
							"int",
							"sqlite3changeset_apply_v2",
							"int",
							"SQLITE_CHANGESETAPPLY_NOSAVEPOINT",
							"SQLITE_CHANGESETAPPLY_INVERT",
							"SQLITE_CHANGESET_DATA",
							"SQLITE_CHANGESET_NOTFOUND",
							"SQLITE_CHANGESET_CONFLICT",
							"SQLITE_CHANGESET_CONSTRAINT",
							"SQLITE_CHANGESET_FOREIGN_KEY",
							"SQLITE_CHANGESET_OMIT",
							"SQLITE_CHANGESET_REPLACE",
							"SQLITE_CHANGESET_ABORT",
							"sqlite3_rebaser",
							"sqlite3rebaser_create",
							"sqlite3rebaser_configure",
							"sqlite3rebaser_rebase",
							"sqlite3rebaser_delete",
							"sqlite3changeset_apply_strm",
							"int",
							"sqlite3changeset_apply_v2_strm"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAwAAICBtID0+CigpID0+CiAgbSA9PgooKSA9PgogIG0gPT4KKCkgPT4KSWZEZWJ1Zyh0b2tlbikKTG9nSWZEZWJ1Zyh0b2tlbiwgbG9nZ2VyRm4pCiAgKCkgPT4KICAoLi4uYXJncykgPT4KUmVhZEZkKGZkLCBiaW5hcnkpClJlYWRGaWxlKG5hbWUsIGJpbmFyeSkKTG9hZEhpc3RvcnkoZmlsZW5hbWUpCiAgcGFyc2UgPSAoKSA9PgogIGVudHJ5ID0+ClJlYWRKU09OKGZpbGVuYW1lKQpSZWFkWE1MKGZpbGVuYW1lLCAuLi5hcmdzKQpNYXBGaWxlKGZpbGVuYW1lKQpXcml0ZUZpbGUobmFtZSwgZGF0YSwgdmVyYm9zZSA9IHRydWUpCldyaXRlSlNPTihuYW1lLCBkYXRhLCAuLi5hcmdzKQpXcml0ZVhNTChuYW1lLCBkYXRhLCAuLi5hcmdzKQpSZWFkQkpTT04oZmlsZW5hbWUpCldyaXRlQkpTT04obmFtZSwgZGF0YSkKRGlySXRlcmF0b3IoLi4uYXJncykKICAoKSA9PgpSZWN1cnNpdmVEaXJJdGVyYXRvcihkaXIsIHByZWQgPSAoZW50cnksIGZpbGUsIGRpciwgZGVwdGgpID0+IHRydWUsIGRlcHRoID0gMCkKICBwcmVkID0gKGVudHJ5LCBmaWxlLCBkaXIsIGRlcHRoKSA9PgpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKRmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpGaWx0ZXJJbWFnZXMoZ2VuKQpTb3J0RmlsZXMoYXJyLCBmaWVsZCA9ICdjdGltZScpCihhLCBiKSA9PgpTdGF0RmlsZXMoZ2VuKQogIHRvU3RyaW5nKCkKKCkgPT4KICB0b1N0cmluZygpCiAgZ2V0IGxhbmRzY2FwZSgpCiAgZ2V0IHBvcnRyYWl0KCkKRmRSZWFkZXIoZmQsIGJ1ZmZlclNpemUgPSAxMDI0KQpDb3B5VG9DbGlwYm9hcmQodGV4dCkKUmVhZENhbGxiYWNrKGZkLCBmbiA9IGRhdGEgPT4ge30pCiAgKCkgPT4KTG9nQ2FsbChmbiwgdGhpc09iaikKICBmdW5jdGlvbiguLi5hcmdzKQogIGFyZyA9PgpTcGF3bihmaWxlLCBhcmdzLCBvcHRpb25zID0ge30pCiAgd2FpdCgpCkZldGNoVVJMKHVybCwgb3B0aW9ucyA9IHt9KQooYWNjLCBbaywgdl0pID0+CiAgZGF0YSA9PgogIGRhdGEgPT4AAAAAAAAAAHVNAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/io-helpers.js",
						"symkeys":
						[
							[
								241,
								245
							],
							[
								266,
								271
							],
							[
								310,
								314
							],
							[
								334,
								339
							],
							[
								376,
								380
							],
							[
								399,
								404
							],
							[
								417,
								441
							],
							[
								639,
								676
							],
							[
								707,
								713
							],
							[
								779,
								792
							],
							[
								823,
								851
							],
							[
								1093,
								1125
							],
							[
								1263,
								1294
							],
							[
								1371,
								1384
							],
							[
								1604,
								1612
							],
							[
								1697,
								1725
							],
							[
								1904,
								1940
							],
							[
								2132,
								2159
							],
							[
								2407,
								2454
							],
							[
								3084,
								3124
							],
							[
								3288,
								3327
							],
							[
								3391,
								3420
							],
							[
								3762,
								3794
							],
							[
								4051,
								4082
							],
							[
								4157,
								4163
							],
							[
								4681,
								4770
							],
							[
								4926,
								4961
							],
							[
								5493,
								5546
							],
							[
								5975,
								6011
							],
							[
								6079,
								6106
							],
							[
								6159,
								6200
							],
							[
								6226,
								6235
							],
							[
								6277,
								6302
							],
							[
								6424,
								6434
							],
							[
								6550,
								6555
							],
							[
								6655,
								6665
							],
							[
								6742,
								6757
							],
							[
								6828,
								6842
							],
							[
								7804,
								7851
							],
							[
								8256,
								8287
							],
							[
								8638,
								8681
							],
							[
								8742,
								8748
							],
							[
								8978,
								9008
							],
							[
								9040,
								9058
							],
							[
								9190,
								9196
							],
							[
								9318,
								9359
							],
							[
								10024,
								10030
							],
							[
								10184,
								10221
							],
							[
								10436,
								10452
							],
							[
								11339,
								11347
							],
							[
								11435,
								11443
							]
						],
						"symlist":
						[
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							"m =>",
							"() =>",
							" function IfDebug(token)",
							" function LogIfDebug(token, loggerFn)",
							" () =>",
							" (...args) =>",
							" function ReadFd(fd, binary)",
							" function ReadFile(name, binary)",
							" function LoadHistory(filename)",
							"parse = () =>",
							"entry =>",
							" function ReadJSON(filename)",
							" function ReadXML(filename, ...args)",
							" function MapFile(filename)",
							" function WriteFile(name, data, verbose = true)",
							" function WriteJSON(name, data, ...args)",
							" function WriteXML(name, data, ...args)",
							" function ReadBJSON(filename)",
							" function WriteBJSON(name, data)",
							" function* DirIterator(...args)",
							" () =>",
							" function* RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
							"pred = (entry, file, dir, depth) =>",
							" function* ReadDirRecursive(dir, maxDepth = Infinity)",
							" function* Filter(gen, regEx = /.*/)",
							" function FilterImages(gen)",
							" function SortFiles(arr, field = 'ctime')",
							"(a, b) =>",
							" function* StatFiles(gen)",
							"toString()",
							"() =>",
							"toString()",
							"get landscape()",
							"get portrait()",
							"async function* FdReader(fd, bufferSize = 1024)",
							" function CopyToClipboard(text)",
							" function ReadCallback(fd, fn = data => {})",
							" () =>",
							" function LogCall(fn, thisObj)",
							" function(...args)",
							"arg =>",
							" function Spawn(file, args, options = {})",
							"wait()",
							" function FetchURL(url, options = {})",
							"(acc, [k, v]) =>",
							" data =>",
							" data =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "io-helpers.js",
			"settings":
			{
				"buffer_size": 11744,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"cut",
					null,
					"AQAAACwMAAAAAAAALAwAAAAAAAAOAAAAY29tcGFjdCA9IHRydWU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAwAAAAAAAA6DAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "...args"
					},
					"BwAAACwMAAAAAAAALQwAAAAAAAAAAAAALQwAAAAAAAAuDAAAAAAAAAAAAAAuDAAAAAAAAC8MAAAAAAAAAAAAAC8MAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAAxDAAAAAAAAAAAAAAxDAAAAAAAADIMAAAAAAAAAAAAADIMAAAAAAAAMwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAwAAAAAAAAsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADYMAAAAAAAANwwAAAAAAAAAAAAANwwAAAAAAAA5DAAAAAAAAAAAAAA5DAAAAAAAADoMAAAAAAAAAAAAADoMAAAAAAAAOwwAAAAAAAAAAAAAOwwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAD0MAAAAAAAAAAAAAD0MAAAAAAAAPgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANgwAAAAAAAA2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4MAAAAAAAAPwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD8MAAAAAAAAQQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwwAAAAAAAA/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "compat"
					},
					"BgAAAEAMAAAAAAAAQQwAAAAAAAAAAAAAQQwAAAAAAABCDAAAAAAAAAAAAABCDAAAAAAAAEMMAAAAAAAAAAAAAEMMAAAAAAAARAwAAAAAAAAAAAAARAwAAAAAAABFDAAAAAAAAAAAAABFDAAAAAAAAEYMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAwAAAAAAABADAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAEUMAAAAAAAARQwAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgwAAAAAAABGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "ct=true"
					},
					"BwAAAEUMAAAAAAAARgwAAAAAAAAAAAAARgwAAAAAAABHDAAAAAAAAAAAAABHDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAASQwAAAAAAAAAAAAASQwAAAAAAABKDAAAAAAAAAAAAABKDAAAAAAAAEsMAAAAAAAAAAAAAEsMAAAAAAAATAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQwAAAAAAABFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAE0MAAAAAAAATgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQwAAAAAAABNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " args;"
					},
					"BgAAAE4MAAAAAAAATwwAAAAAAAAAAAAATwwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFEMAAAAAAAAAAAAAFEMAAAAAAAAUgwAAAAAAAAAAAAAUgwAAAAAAABTDAAAAAAAAAAAAABTDAAAAAAAAFQMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgwAAAAAAABODAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFQMAAAAAAAAVQwAAAAAAAAAAAAAVQwAAAAAAABXDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAwAAAAAAABUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"cut",
					null,
					"AQAAAEcMAAAAAAAARwwAAAAAAAAFAAAAPXRydWU",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwwAAAAAAABMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAE8MAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABSDAAAAAAAAAAAAABTDAAAAAAAAFMMAAAAAAAAAgAAACAgUgwAAAAAAABTDAAAAAAAAAAAAABTDAAAAAAAAFQMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFQMAAAAAAAAVgwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAwAAAAAAABUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAFUMAAAAAAAAVgwAAAAAAAAAAAAAVgwAAAAAAABXDAAAAAAAAAAAAABXDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAWQwAAAAAAAAAAAAAWQwAAAAAAABaDAAAAAAAAAAAAABaDAAAAAAAAFsMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQwAAAAAAABVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " compact"
					},
					"CAAAAFsMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABdDAAAAAAAAAAAAABdDAAAAAAAAF4MAAAAAAAAAAAAAF4MAAAAAAAAXwwAAAAAAAAAAAAAXwwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGEMAAAAAAAAAAAAAGEMAAAAAAAAYgwAAAAAAAAAAAAAYgwAAAAAAABjDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwwAAAAAAABbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAGMMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwwAAAAAAABjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYMAAAAAAAAZwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgwAAAAAAABmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGcMAAAAAAAAaQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZwwAAAAAAABnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "boolean"
					},
					"BwAAAGgMAAAAAAAAaQwAAAAAAAAAAAAAaQwAAAAAAABqDAAAAAAAAAAAAABqDAAAAAAAAGsMAAAAAAAAAAAAAGsMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABtDAAAAAAAAAAAAABtDAAAAAAAAG4MAAAAAAAAAAAAAG4MAAAAAAAAbwwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAwAAAAAAABoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "‚Åæ"
					},
					"AQAAAHAMAAAAAAAAcQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAwAAAAAAABwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAHAMAAAAAAAAcAwAAAAAAAADAAAA4oG+",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQwAAAAAAABxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\nargs"
					},
					"CAAAAHEMAAAAAAAAcgwAAAAAAAAAAAAAcgwAAAAAAAB0DAAAAAAAAAAAAAByDAAAAAAAAHIMAAAAAAAAAgAAACAgcgwAAAAAAAB2DAAAAAAAAAAAAAB2DAAAAAAAAHcMAAAAAAAAAAAAAHcMAAAAAAAAeAwAAAAAAAAAAAAAeAwAAAAAAAB5DAAAAAAAAAAAAAB5DAAAAAAAAHoMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQwAAAAAAABxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					4,
					"left_delete",
					null,
					"BAAAAHkMAAAAAAAAeQwAAAAAAAABAAAAc3gMAAAAAAAAeAwAAAAAAAABAAAAZ3cMAAAAAAAAdwwAAAAAAAABAAAAcnYMAAAAAAAAdgwAAAAAAAABAAAAYQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegwAAAAAAAB6DAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "args="
					},
					"BQAAAHYMAAAAAAAAdwwAAAAAAAAAAAAAdwwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHkMAAAAAAAAAAAAAHkMAAAAAAAAegwAAAAAAAAAAAAAegwAAAAAAAB7DAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgwAAAAAAAB2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsMAAAAAAAAfAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewwAAAAAAAB7DAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_completion",
					{
						"completion": "LogCall(fn, thisObj);",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "function LogCall"
					},
					"AQAAAHwMAAAAAAAAkQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAwAAAAAAAB8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"cut",
					null,
					"AQAAAMUMAAAAAAAAxQwAAAAAAAAYAAAAY29tcGFjdCA/IFtdIDogW251bGwsIDJd",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQwAAAAAAADdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAMUMAAAAAAAA3QwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQwAAAAAAADFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AgAAAHsMAAAAAAAAkwwAAAAAAAAAAAAAkwwAAAAAAACTDAAAAAAAABYAAAAgTG9nQ2FsbChmbiwgdGhpc09iaik7",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewwAAAAAAACRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJMMAAAAAAAAlAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwwAAAAAAACTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"left_delete",
					null,
					"AQAAAMgMAAAAAAAAyAwAAAAAAAAaAAAAY29tcGFjdCA/IFtdIDogW251bGwsIDJdKSk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAwAAAAAAADiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMcMAAAAAAAAxwwAAAAAAAABAAAAKMcMAAAAAAAAxwwAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAwAAAAAAADIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "arfgs"
					},
					"BQAAAMcMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADJDAAAAAAAAAAAAADJDAAAAAAAAMoMAAAAAAAAAAAAAMoMAAAAAAAAywwAAAAAAAAAAAAAywwAAAAAAADMDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwwAAAAAAADHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					3,
					"left_delete",
					null,
					"AwAAAMsMAAAAAAAAywwAAAAAAAABAAAAc8oMAAAAAAAAygwAAAAAAAABAAAAZ8kMAAAAAAAAyQwAAAAAAAABAAAAZg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzAwAAAAAAADMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "gs))"
					},
					"BAAAAMkMAAAAAAAAygwAAAAAAAAAAAAAygwAAAAAAADLDAAAAAAAAAAAAADLDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAAzQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQwAAAAAAADJDAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"pre",
				"Project: Edit Project"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"",
				"Auto indent"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/usr/include/sqlite3.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/test-sqlite3.js",
		"/home/roman/Projects/plot-cv/sqlite3.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/scripts/mysql_system_tables.sql",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/scripts/fill_help_tables.sql",
		"/home/roman/Projects/plot-cv/quickjs/run-test262.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/build.ninja",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/textElement.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/555-PWM-Motor-Speed-Controller-alt-schematic.svg",
		"/home/roman/Projects/plot-cv/555-PWM-Motor-Speed-Controller-alt-board.svg",
		"/home/roman/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.brd",
		"/home/roman/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.sch",
		"/home/roman/Projects/plot-cv/lib/geom/matrix.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/dsp/util.js",
		"/home/roman/Projects/plot-cv/Zeichnung.svg",
		"/home/roman/Projects/plot-cv/lib/eagle/svg/ZoomRedraw.svg",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/text.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/geom/size.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/common.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/elementProxy.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wirePath.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/circle.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/lib/eagle/libraryRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components.js",
		"/home/roman/Projects/plot-cv/quickjs/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/lib/container/spatial-hash.js",
		"/home/roman/Projects/plot-cv/lib/container/Hash-Multimap.js",
		"/home/roman/Projects/plot-cv/lib/container/componentMap.js",
		"/home/roman/Projects/plot-cv/lib/container/multikeymap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/util-w-2.diff",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/new.diff",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/plot-cv/eagle-commands.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/lib/color/rgba.js",
		"/home/roman/Projects/plot-cv/lib/delegate.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/package.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/origin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/board.js",
		"/home/roman/Projects/plot-cv/lib/json/pathMapper.js",
		"/home/roman/Projects/plot-cv/eagle-query.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Dokumente/Electronics/example.circuit",
		"/home/roman/Projects/plot-cv/circuit.js",
		"/home/roman/Projects/pictest/eagle/OpenProg-18F2550.brd",
		"/home/roman/Projects/plot-cv/OpenProg-18F2550.circuit",
		"/home/roman/Projects/plot-cv/read.hex",
		"/home/roman/Projects/plot-cv/test-bitset.js",
		"/home/roman/Projects/plot-cv/example.circuit",
		"/home/roman/Projects/plot-cv/test-circuit.js",
		"/home/roman/Projects/plot-cv/OProg-18F2550.hex",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/lib/async/websocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/eagle2gerber.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/lib/geom/bbox.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/svg-crop-pad.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/plugins/mirror.c",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/lib/stream/utils.js",
		"/home/roman/Projects/plot-cv/string-helpers.js",
		"/home/roman/Projects/plot-cv/bjson.js",
		"/home/roman/Projects/plot-cv/openlayers/examples/wms-tiled-wrap-180.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/lib/stream.js",
		"/home/roman/Projects/plot-cv/filelist.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/lib/eagle,*.js,-*/build/*,-*/inst/*",
			"<open files>,/home/roman/Projects/plot-cv,*.js,-*/build/*,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/build/*,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/build/*",
			"/home/roman/Projects/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"create table",
			"path",
			"pathj",
			"path",
			"pr\\[",
			"'pr",
			"isNative",
			"is[A-Za-z]*Function",
			"is.*Function",
			"returnType",
			"FunctionDecl",
			", js_value_typestr(ctx, stack)",
			"stack",
			"error_prin",
			"str",
			"error_prin",
			"jsm_dump",
			"print_err",
			"js_load_file",
			"js_eval_file",
			"generateDoc",
			"exp",
			"MakeFFI",
			"function.*FFI",
			"PROMISE_REJE",
			"JS_GetBigInt",
			"cur_func = fd",
			"goto except",
			"JS_FreeValue.*m->module",
			"js_dynamic_import_reject\\(",
			"JS_MarkValue.*module_ns",
			"_call2\\(",
			"call2",
			"js_evaluate_module",
			"js_evaluate_moduel",
			"NewClass1",
			"emit_op\\(s, OP_ret",
			"has_ex",
			"clean:",
			"eval_has",
			"eval_has_ex",
			"\\(JS_IsEx",
			"JS_IsEx",
			"JSPromiseFunctionDataResolved",
			"emit_op.*OP_return_undef",
			"OP_return_undef",
			"eval_has_ex",
			"module_ns",
			"module_nas",
			"struct JSModuleDef",
			"JSModuleDef",
			"3\\.1\\.0",
			"\\.\\.\\/",
			"range",
			"range =",
			"Tracked",
			"'kind'",
			"kind",
			"'kind'",
			"map\\(",
			"roundTo",
			"R",
			"R2",
			"parentRot",
			"log",
			"const",
			"TransformationList",
			"rot=\"M",
			"transformation",
			"vec",
			"transform",
			"R2<",
			"R2",
			"children.push(\n      h('circle', {\n        class: 'pin-x',\n        stroke: '#ff00ff',\n        fill: 'none',\n        cx: tp.x,\n        cy: tp.y,\n        r: 0.5,\n        'stroke-width': 0.1\n      })\n    );\n    children.push(\n      h('circle', {\n        class: 'pin-y',\n        stroke: '#4219ff',\n        opacity: 0.8,\n        fill: 'none',\n        cx: x,\n        cy: y,\n        r: 0.75,\n        'stroke-width': 0.1\n      })\n    );",
			"IC1<",
			"font-size:",
			"console\\.",
			");\n",
			"<pin",
			"transform",
			"tp =",
			"IC1\"",
			"IC1",
			"name",
			"555_ALT",
			"IC1\"",
			"IC1",
			"Fragment",
			")]));",
			"'SVGRenderer",
			"Renderer\\.render",
			"\\.render",
			"svg\\(",
			"elem",
			"555_ALT3",
			"IC1\"",
			"isNumeric.*parseFloat",
			"indexOf",
			"'value'",
			"'element'",
			"'element'w",
			"'element'",
			"'value'",
			"get value",
			"D1\"",
			"renderItem",
			"renderItem'",
			"round =",
			"roundTo =",
			"round =",
			"inspect",
			"toStringTag",
			"getBounds",
			"getOther",
			"getOther =",
			"getOther",
			"getOther =",
			"getOther",
			"quot =",
			"console\\.log",
			"console.log",
			"renderItem",
			"^(\\s*)console\\.",
			"lazyOpen",
			"replaceProperty",
			"addLib",
			"Util",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"3.0.2",
			"$srcdir/",
			"",
			"'EagleSVGRenderer",
			"this.debug",
			"\\1//console.",
			"isFunction(\\1)",
			"",
			"\\1",
			"is",
			"define",
			"!isString(\\1)",
			"!isFunction(\\1)",
			"isObject(\\1)",
			"isFunction(\\1)",
			"diff --git a/lib/util.js b/lib/util.js\nindex ab76720..001e53e 100644\n--- a/lib/util.js\n+++ b/lib/util.js\n@@",
			"function \\1(\\2) {",
			"function \\1(\\2)",
			"!isString(\\1)",
			"types.isBigInt(\\1)",
			"!isObject(\\1)",
			"isSymbol(\\1)",
			"isString(\\1)",
			"isObject(\\1)",
			"isNumber(\\1)",
			"!isFunction(\\1)",
			"!isString(\\1)",
			"isNumber(\\1)",
			"isString(\\1)",
			"isObject(\\1)",
			"isFunction(\\1)",
			"",
			"^\\1//this.debug",
			"'./components",
			"}\\n\\n\\1",
			"this.circuit",
			"",
			"\\1//console",
			"packageToPosMap",
			"(this.parse",
			"line",
			"maxDepthOrPred",
			"define",
			"isObject",
			"\\1//\\2",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1010,
						"regions":
						{
						},
						"selection":
						[
							[
								124,
								132
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/io-helpers.js",
							"function_name_status_row": 11,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									241,
									245
								],
								[
									266,
									271
								],
								[
									310,
									314
								],
								[
									334,
									339
								],
								[
									376,
									380
								],
								[
									399,
									404
								],
								[
									417,
									441
								],
								[
									639,
									676
								],
								[
									707,
									713
								],
								[
									779,
									792
								],
								[
									823,
									851
								],
								[
									1093,
									1125
								],
								[
									1263,
									1294
								],
								[
									1371,
									1384
								],
								[
									1604,
									1612
								],
								[
									1697,
									1725
								],
								[
									1904,
									1940
								],
								[
									2132,
									2159
								],
								[
									2407,
									2454
								],
								[
									3084,
									3124
								],
								[
									3288,
									3327
								],
								[
									3391,
									3420
								],
								[
									3762,
									3794
								],
								[
									4051,
									4082
								],
								[
									4157,
									4163
								],
								[
									4681,
									4770
								],
								[
									4926,
									4961
								],
								[
									5493,
									5546
								],
								[
									5975,
									6011
								],
								[
									6079,
									6106
								],
								[
									6159,
									6200
								],
								[
									6226,
									6235
								],
								[
									6277,
									6302
								],
								[
									6424,
									6434
								],
								[
									6550,
									6555
								],
								[
									6655,
									6665
								],
								[
									6742,
									6757
								],
								[
									6828,
									6842
								],
								[
									7804,
									7851
								],
								[
									8256,
									8287
								],
								[
									8638,
									8681
								],
								[
									8742,
									8748
								],
								[
									8978,
									9008
								],
								[
									9040,
									9058
								],
								[
									9190,
									9196
								],
								[
									9318,
									9359
								],
								[
									10024,
									10030
								],
								[
									10184,
									10221
								],
								[
									10436,
									10452
								],
								[
									11339,
									11347
								],
								[
									11435,
									11443
								]
							],
							"symlist":
							[
								"  m =>",
								"() =>",
								"  m =>",
								"() =>",
								"  m =>",
								"() =>",
								"IfDebug(token)",
								"LogIfDebug(token, loggerFn)",
								"\t() =>",
								"\t(...args) =>",
								"ReadFd(fd, binary)",
								"ReadFile(name, binary)",
								"LoadHistory(filename)",
								"  parse = () =>",
								"  entry =>",
								"ReadJSON(filename)",
								"ReadXML(filename, ...args)",
								"MapFile(filename)",
								"WriteFile(name, data, verbose = true)",
								"WriteJSON(name, data, ...args)",
								"WriteXML(name, data, ...args)",
								"ReadBJSON(filename)",
								"WriteBJSON(name, data)",
								"DirIterator(...args)",
								"\t() =>",
								"RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
								"  pred = (entry, file, dir, depth) =>",
								"ReadDirRecursive(dir, maxDepth = Infinity)",
								"Filter(gen, regEx = /.*/)",
								"FilterImages(gen)",
								"SortFiles(arr, field = 'ctime')",
								"(a, b) =>",
								"StatFiles(gen)",
								"  toString()",
								"() =>",
								"  toString()",
								"  get landscape()",
								"  get portrait()",
								"FdReader(fd, bufferSize = 1024)",
								"CopyToClipboard(text)",
								"ReadCallback(fd, fn = data => {})",
								"\t() =>",
								"LogCall(fn, thisObj)",
								"\tfunction(...args)",
								"  arg =>",
								"Spawn(file, args, options = {})",
								"  wait()",
								"FetchURL(url, options = {})",
								"(acc, [k, v]) =>",
								"\tdata =>",
								"\tdata =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679643914.39,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "io-helpers.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11744,
						"regions":
						{
						},
						"selection":
						[
							[
								1188,
								1188
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679671490.83,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 389.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"jsut",
				"quickjs/qjs-modules/src/js-utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"run-test",
				"quickjs/run-test262.c"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"build-libwe",
				"quickjs/qjs-net/build-libwebsockets.sh"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"matrix.js",
				"lib/geom/matrix.js"
			],
			[
				"transform",
				"lib/geom/transformation.js"
			],
			[
				"pin.js",
				"lib/eagle/components/pin.js"
			],
			[
				"",
				"~/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.sch"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"symb",
				"lib/eagle/components/symbol.js"
			],
			[
				"schematicren",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardren",
				"lib/eagle/boardRenderer.js"
			],
			[
				"element",
				"lib/eagle/element.js"
			],
			[
				"svgRend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardRen",
				"lib/eagle/boardRenderer.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"boardRe",
				"lib/eagle/boardRenderer.js"
			],
			[
				"renderUtil",
				"lib/eagle/renderUtils.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"text.js",
				"lib/eagle/components/text.js"
			],
			[
				"project",
				"lib/eagle/project.js"
			],
			[
				"nodeList",
				"lib/eagle/nodeList.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"common",
				"lib/eagle/common.js"
			],
			[
				"ref.js",
				"lib/eagle/ref.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"element.js",
				"lib/eagle/element.js"
			],
			[
				"common.j",
				"lib/eagle/common.js"
			],
			[
				"nodeLi",
				"lib/eagle/nodeList.js"
			],
			[
				"common.js",
				"lib/eagle/common.js"
			],
			[
				"elementP",
				"lib/eagle/elementProxy.js"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"wirePa",
				"lib/eagle/components/wirePath.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"nodeMap",
				"lib/eagle/nodeMap.js"
			],
			[
				"renderer.js",
				"lib/eagle/renderer.js"
			],
			[
				"functions.cmake",
				"qjs-opencv/cmake/functions.cmake"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"textEle",
				"lib/eagle/components/textElement.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"drawing",
				"lib/eagle/components/drawing.js"
			],
			[
				"pathMapper",
				"lib/json/pathMapper.js"
			],
			[
				"xml-shell",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"server.js",
				"upload-server.js"
			],
			[
				"delega",
				"lib/delegate.js"
			],
			[
				"rgba",
				"lib/color/rgba.js"
			],
			[
				"eagle-com",
				"eagle-commands.js"
			],
			[
				"colorCod",
				"lib/eda/colorCoding.js"
			],
			[
				"eagle-qu",
				"eagle-query.js"
			],
			[
				"eagle-q",
				"eagle-query.js"
			],
			[
				"read.hex",
				"read.hex"
			],
			[
				"exam",
				"example.circuit"
			],
			[
				"xpath.js",
				"quickjs/qjs-modules/lib/xpath.js"
			],
			[
				"Document",
				"lib/eagle/document.js"
			],
			[
				"test-",
				"test-bitset.js"
			],
			[
				"circuit",
				"circuit.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"eagle2ger",
				"eagle2gerber.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"websock",
				"lib/async/websocket.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"websocket.js",
				"lib/async/websocket.js"
			],
			[
				"test-bj",
				"test-bjson.js"
			],
			[
				"bjson",
				"bjson.js"
			],
			[
				"string-he",
				"string-helpers.js"
			],
			[
				"quickjs-po",
				"quickjs/qjs-modules/quickjs-pointer.c"
			],
			[
				"list-exp",
				"quickjs/qjs-modules/list-exports.js"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"utils.js",
				"lib/stream/utils.js"
			],
			[
				"mirror",
				"quickjs/qjs-net/src/plugins/mirror.c"
			],
			[
				"list-ex",
				"quickjs/qjs-modules/list-exports.js"
			],
			[
				"fire.html",
				"fire.html"
			],
			[
				"server-htt",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"-ws.c",
				"quickjs/qjs-net/minnet-server-ws.c"
			],
			[
				"filelist",
				"filelist.js"
			],
			[
				"filelist.js",
				"filelist.js"
			],
			[
				"extendGe",
				"quickjs/qjs-modules/lib/extendGenerator.js"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"fire.htm",
				"fire.html"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"fontsample",
				"fontsample.js"
			],
			[
				"upload.htm",
				"upload.html"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"test-gpio",
				"test-gpio.js"
			],
			[
				"index.html",
				"index.html"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"test-minnet",
				"test-minnet.js"
			],
			[
				"list-dir",
				"list-directory.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"transformation",
				"lib/geom/transformation.js"
			],
			[
				"element.",
				"lib/dom/element.js"
			],
			[
				"crosskit",
				"lib/crosskit.js"
			],
			[
				"fire-es",
				"fire-es.html"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"fire-es.h",
				"fire-es.html"
			],
			[
				"fire-es.js",
				"fire-es.js"
			],
			[
				"fire.es",
				"fire.es"
			],
			[
				"quickjs",
				"qjs-opencv/cmake/QuickJSModule.cmake"
			],
			[
				"test-strea",
				"test-stream.js"
			],
			[
				"worker.js",
				"worker.js"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/include/vector.h"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"test-work",
				"test-worker.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 784.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
