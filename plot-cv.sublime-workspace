{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cons",
				"constructor"
			],
			[
				"i",
				"is_dir"
			],
			[
				"getText",
				"getTextArray"
			],
			[
				"Lin",
				"LinearTransform"
			],
			[
				"CURL_LIB",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"Circ",
				"CircuitJS"
			],
			[
				"dep",
				"dependency"
			],
			[
				"opt",
				"optimization"
			],
			[
				"OPENCV_LIB",
				"OPENCV_LIBRARIES"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"relat",
				"relativeTo"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  define(obj, ...args)\n  once(fn, thisArg, memoFn)\n  function(...args)\n  fd =>\n() =>\nREPL\n  constructor(name, show_banner = true)\n  () =>\n  addCleanupHandler(fn)\n() =>\n  .cleanup = () =>\n  exit(exitCode = 0)\n  abort()\n  acceptLine()\n  alert()\n  backwardChar()\n  backwardDeleteChar()\n  backwardKillLine()\n  backwardKillWord()\n  backwardWord()\n  beginningOfLine()\n  bigfloatToString(a, radix)\n  bigintToString(a, radix)\n  cmdReadlineStart()\n  cmdStart(show_banner = true)\n  colorizeJs(str)\n  pushState(c)\n  lastState(c)\n  popState(c)\n  parseBlockComment()\n  parseLineComment()\n  parseString(delim)\n  parseRegex()\n  parseNumber()\n  parseIdentifier()\n  setStyle(from, to)\n  completion()\n  controlC()\n  controlD()\n  deleteChar()\n  deleteCharDir(dir)\n  downcaseWord()\n  dupstr(str, count)\n  endOfLine()\n  readlineRemovePrompt()\n  evalAndPrint(expr)\n  extractDirective(a)\n  forwardChar()\n  forwardWord()\n  getCompletions(line, pos)\n  symcmp(a, b)\n  getContextObject(line, pos)\n  getContextWord(line, pos)\n  handleByte(c)\n  handleChar(c1)\n  handleMouse(keys)\n  p =>\n  p =>\n  handleCmd(expr)\n  hasDirective(cmd)\n  getDirective(cmd)\n  handleDirective(cmd, expr)\n  handleKey(keys)\n  help()\n  sel = n =>\n  putline = s =>\n  historyFile()\n  historyLoad(filename, fs)\n() =>\n  historySave(filename, fs)\n  line =>\n  line =>\n  historyClear()\n  historyAdd(str)\n  historySearch(dir)\n  historySearchBackward()\n  historySearchForward()\n  set history(entries)\n  get history()\n  historyPos()\n  insert(str)\n  killLine()\n  killRegion(start, end, dir)\n  killWord()\n  moveCursor(delta)\n  nextHistory()\n  numberToString(a, radix)\n  previousHistory()\n  print(a)\n  printRec(a)\n  printStatus(fn, prompt = true)\n  arg =>\n  arg =>\n  fn = () =>\n  fn = () =>\n  printFunction(logFn)\n  (...args) =>\n() =>\n  quotedInsert()\n  reverseSearch()\n  forwardSearch()\n  searchCb(pattern)\n  readlineHandleCmd(expr)\n  readlinePrintPrompt()\n  readlineStart(defstr, cb)\n  reset()\n  run(banner = true)\n  runSync()\n  () =>\n() =>\n  stop()\n  sigintHandler()\n  skipWordBackward(pos)\n  skipWordForward(pos)\n  termInit()\n  arg =>\n  () =>\n  mouseTracking(enable = true)\n  setupMouseTracking(fs = fs)\n() =>\n  termReadHandler()\n  transposeChars()\n  transposeWords()\n  upcaseWord()\n  update()\n([i, c]) =>\n  yank()\nREPL\nREPL\n  file =>\n  m =>\n  error =>\n  isAlpha(c)\n  isDigit(c)\n  isWord(c)\n  ucsLength(str)\n  rotateLeft(array, n)\n  isTrailingSurrogate(c)\n  isBalanced(a, b)\n  printColorText(str, start, style_names)\n  printCsi(n, code)\nREPL",
			"settings":
			{
				"buffer_size": 2477,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					898,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABiBAAAR2V0UHJveHkoZm4gPSAocHJvcCwgdGFyZ2V0KSA9PiBudWxsLCBoYW5kbGVycyA9IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQpFYWdsZURvY3VtZW50CiAgZ2V0IHR5cGVOYW1lKCkKICBzdGF0aWMgdHlwZU5hbWUoZmlsZUV4dGVuc2lvbikKICBzdGF0aWMgYmFzZU9mKGZpbGVuYW1lKQogIHN0YXRpYyB0eXBlT2YoZmlsZW5hbWUpCiAgc3RhdGljIG9wZW4oZmlsZW5hbWUsIGZzKQogIGNvbnN0cnVjdG9yKHhtbFN0ciwgcHJvamVjdCwgZmlsZW5hbWUsIHR5cGUsIGZzKQoocmF3LCBvd25lciwgcmVmKSA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+CihrZXksIHZhbHVlKSA9PgoociwgZywgYikgPT4KICAoKSA9PgogIChwcm9wLCB0YXJnZXQpID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CiAgYyA9PgoocHJvcCwgdGFyZ2V0KSA9PgogIG93bktleXM6IHRhcmdldCA9PgooYywgaSkgPT4KICAoKSA9PgogIGdldCByYXcoKQogIGdldCBmaWxlbmFtZSgpCiAgZ2V0IGRpcm5hbWUoKQogIGdldCBiYXNlbmFtZSgpCiAgZ2V0IGNoYW5nZXMoKQogIGNhY2hlRmllbGRzKCkKICBzYXZlVG8oZmlsZSwgb3ZlcndyaXRlID0gZmFsc2UsIGZzKQogIGluZGV4KHBhdGgsIHRyYW5zZm9ybSA9IGFyZyA9PiBhcmcpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtKQoodiwgcCwgbykgPT4KICBnZXQocHJlZCwgdHJhbnNmb3JtKQoodiwgcCwgbykgPT4KICBmaW5kKHByZWQsIHRyYW5zZm9ybSkKKHYsIHAsIG8pID0+CiAgbG9va3VwKHhwYXRoKQogIChvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhzaGVldE5vID0gMCkKICB2ID0+CiAgc2lnID0+CiAgYyA9PgogIGUgPT4KUmVjdAogIGdldE1lYXN1cmVzKG9wdGlvbnMgPSB7fSkKICBlID0+CiAgb2JqID0+CiAgZSA9PgogIHYgPT4KICBlID0+CiAgbCA9PgogIGdldCBtZWFzdXJlcygpCiAgZ2V0IGRpbWVuc2lvbnMoKQogIHNpZ25hbE1hcCgpCihbbmFtZSwgc2lnbmFsXSkgPT4KICBjaGlsZCA9PgooW2NoaWxkLCBnZW9tZXRyeV0pID0+CihbY2hpbGQsIGdlb21ldHJ5XSkgPT4KICBnZXRMYXllcihpZCkKICBnZXRTaGVldChpZCkKICBnZXRMaWJyYXJ5KG5hbWUpCiAgZSA9PgooKQogIGdldCBtYWluRWxlbWVudCgpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					899,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								711,
								735
							],
							[
								771,
								795
							],
							[
								884,
								896
							],
							[
								966,
								983
							],
							[
								1458,
								1470
							],
							[
								1646,
								1673
							],
							[
								2787,
								2841
							],
							[
								3048,
								3076
							],
							[
								3902,
								3911
							],
							[
								4116,
								4121
							],
							[
								4394,
								4400
							],
							[
								4527,
								4533
							],
							[
								4888,
								4904
							],
							[
								4922,
								4938
							],
							[
								4990,
								5007
							],
							[
								5258,
								5274
							],
							[
								5286,
								5303
							],
							[
								5312,
								5328
							],
							[
								5382,
								5398
							],
							[
								5416,
								5432
							],
							[
								5459,
								5476
							],
							[
								5562,
								5578
							],
							[
								5596,
								5612
							],
							[
								5627,
								5644
							],
							[
								5855,
								5863
							],
							[
								5994,
								6002
							],
							[
								6346,
								6351
							],
							[
								6384,
								6391
							],
							[
								6553,
								6558
							],
							[
								7221,
								7227
							],
							[
								7654,
								7668
							],
							[
								7827,
								7831
							],
							[
								8184,
								8195
							],
							[
								8282,
								8293
							],
							[
								8401,
								8412
							],
							[
								8527,
								8538
							],
							[
								8649,
								8660
							],
							[
								9378,
								9389
							],
							[
								9408,
								9412
							],
							[
								9541,
								9552
							],
							[
								9665,
								9676
							],
							[
								9760,
								9771
							],
							[
								9900,
								9911
							],
							[
								10040,
								10051
							],
							[
								10571,
								10589
							],
							[
								11138,
								11144
							],
							[
								11306,
								11312
							],
							[
								11534,
								11540
							],
							[
								11550,
								11554
							],
							[
								11649,
								11655
							],
							[
								11767,
								11773
							],
							[
								11886,
								11892
							],
							[
								12002,
								12008
							],
							[
								12091,
								12097
							],
							[
								12185,
								12191
							],
							[
								12412,
								12418
							],
							[
								12506,
								12512
							],
							[
								12564,
								12570
							],
							[
								12662,
								12668
							],
							[
								13258,
								13264
							],
							[
								13340,
								13345
							],
							[
								13570,
								13576
							],
							[
								13688,
								13704
							],
							[
								13723,
								13747
							],
							[
								13939,
								13945
							],
							[
								14135,
								14142
							],
							[
								14232,
								14238
							],
							[
								14428,
								14435
							],
							[
								14605,
								14611
							],
							[
								14676,
								14681
							],
							[
								14781,
								14787
							],
							[
								14842,
								14847
							],
							[
								14902,
								14908
							],
							[
								14984,
								14989
							],
							[
								15104,
								15110
							],
							[
								15173,
								15178
							],
							[
								15255,
								15284
							],
							[
								15381,
								15404
							],
							[
								15503,
								15525
							],
							[
								15657,
								15674
							],
							[
								15707,
								15715
							],
							[
								15757,
								15774
							],
							[
								15807,
								15815
							],
							[
								16014,
								16036
							],
							[
								16448,
								16457
							],
							[
								16506,
								16510
							],
							[
								16945,
								16959
							],
							[
								17024,
								17045
							],
							[
								17166,
								17186
							],
							[
								17231,
								17261
							],
							[
								17478,
								17487
							],
							[
								17592,
								17603
							],
							[
								17797,
								17815
							],
							[
								17900,
								17920
							],
							[
								17970,
								17974
							],
							[
								18039,
								18049
							],
							[
								18267,
								18283
							],
							[
								18318,
								18328
							],
							[
								18567,
								18588
							],
							[
								18777,
								18790
							],
							[
								19090,
								19116
							],
							[
								19219,
								19230
							],
							[
								19828,
								19832
							],
							[
								21331,
								21335
							],
							[
								21772,
								21776
							],
							[
								22027,
								22031
							],
							[
								22186,
								22190
							],
							[
								22219,
								22223
							],
							[
								22520,
								22524
							],
							[
								23989,
								23993
							],
							[
								24138,
								24150
							],
							[
								24189,
								24205
							],
							[
								24590,
								24604
							],
							[
								24689,
								24721
							],
							[
								24950,
								24956
							],
							[
								25047,
								25056
							],
							[
								25124,
								25138
							],
							[
								25369,
								25378
							],
							[
								25623,
								25632
							],
							[
								25812,
								25821
							],
							[
								26210,
								26216
							],
							[
								26477,
								26483
							],
							[
								26588,
								26611
							],
							[
								26671,
								26699
							],
							[
								26787,
								26794
							],
							[
								26957,
								26980
							],
							[
								27260,
								27276
							],
							[
								27317,
								27325
							],
							[
								27410,
								27421
							],
							[
								27532,
								27550
							],
							[
								27683,
								27694
							],
							[
								27761,
								27778
							],
							[
								27887,
								27894
							],
							[
								27944,
								27959
							],
							[
								28024,
								28043
							],
							[
								28107,
								28128
							],
							[
								28194,
								28216
							],
							[
								28284,
								28302
							],
							[
								28667,
								28675
							],
							[
								28736,
								28744
							],
							[
								29015,
								29032
							],
							[
								29135,
								29145
							],
							[
								29255,
								29288
							],
							[
								29326,
								29344
							],
							[
								29424,
								29445
							],
							[
								29471,
								29482
							],
							[
								29597,
								29609
							],
							[
								29695,
								29724
							],
							[
								29752,
								29764
							],
							[
								30418,
								30448
							],
							[
								30486,
								30504
							],
							[
								30543,
								30564
							],
							[
								30585,
								30596
							],
							[
								30656,
								30681
							],
							[
								30811,
								30832
							],
							[
								30902,
								30911
							],
							[
								34013,
								34052
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							" () =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							" () =>",
							"hfn = value =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"nfn = (...args) =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = function(element)",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"(elem) =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = (k) => (v) =>",
							"(p) =>",
							"(prop) =>",
							" (k) => (v) =>",
							"(prop) =>",
							"(prop) =>",
							"(prop) =>",
							" () =>",
							"(g) =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							"(acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AQAAAAAAAAAAAAAAsggAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					900,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACyCAAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KVExpc3QgPSAoY2hpbGQsIGVsZW0pID0+CiAgcm91bmQgPSBuID0+CiAgZ2V0KHRhcmdldCwgcHJvcCkKRWFnbGVFbGVtZW50CiAgc3RhdGljIGdldChvd25lciwgcmVmLCByYXcpCiAgc3RhdGljIGNyZWF0ZSh0YWdOYW1lLCBhdHRyaWJ1dGVzID0ge30sIGNoaWxkcmVuID0gW10pCiAgY29uc3RydWN0b3Iob3duZXIsIHJlZiwgcmF3KQpFYWdsZU5vZGUKICBnZXQoKQogICgpID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHYgPT4KICBuYW1lID0+CiAgdiA9PgogICgpID0+CiAgaGZuID0gdmFsdWUgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBuZm4gPSAoLi4uYXJncykgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAobywgcCwgcikgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbihlbGVtZW50KQogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oKQogIHZhbHVlID0+CiAgbiA9PgogIGdldCByZXBlYXRlcigpCihwdXNoLCBzdG9wKSA9PgooeyB2YWx1ZSwgZG9uZSB9KSA9PgogIC5wdXNoRXZlbnQgPSBmdW5jdGlvbiguLi5hcmdzKQooZWxlbSkgPT4KICBldmVudChuYW1lKQogIHN1YnNjcmliZShoYW5kbGVyKQogIHVuc3Vic2NyaWJlKGhhbmRsZXIpCiAgaCA9PgogIGdldCB0ZXh0KCkKICBnZXQgYXR0cmlidXRlcygpCiAgZ2V0TGF5ZXIoKQogIGxvb2t1cCh4cGF0aCwgY3JlYXRlKQogIChvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSAoaykgPT4gKHYpID0+CihwKSA9PgoocHJvcCkgPT4KICAoaykgPT4gKHYpID0+Cihwcm9wKSA9PgoocHJvcCkgPT4KKHByb3ApID0+CiAgKCkgPT4KKGcpID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgZ2V0IGNoYWluKCkKICBnZXRQYXJlbnQodGFnTmFtZSkKICBnZXQgc2hlZXQoKQogIGdldCBzaGVldE51bWJlcigpCiAgbmFtZXMoKQooYWNjLCBlbnRyeSkgPT4KICBzdGF0aWMga2V5cyhlbnRpdHkpCiAgc3RhdGljIHZhbHVlcyhlbnRpdHkpCiAgc3RhdGljIGVudHJpZXMoZW50aXR5KQogIHN0YXRpYyB0b09iamVjdChlKQogIGNoaWxkID0+CiAgY2hpbGQgPT4KICBzdGF0aWMgdG9BcnJheShlKQogIHRvU3RyaW5nKCkKKmdldEFsbChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KKHYsIHAsIG8pID0+CiAgZ2V0KHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CiAgZmluZChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgZ2V0IHBvcygpCiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					901,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								711,
								735
							],
							[
								771,
								795
							],
							[
								884,
								896
							],
							[
								966,
								983
							],
							[
								1458,
								1470
							],
							[
								1646,
								1673
							],
							[
								2787,
								2841
							],
							[
								3048,
								3076
							],
							[
								3902,
								3911
							],
							[
								4116,
								4121
							],
							[
								4394,
								4400
							],
							[
								4527,
								4533
							],
							[
								4888,
								4904
							],
							[
								4922,
								4938
							],
							[
								4990,
								5007
							],
							[
								5258,
								5274
							],
							[
								5286,
								5303
							],
							[
								5312,
								5328
							],
							[
								5382,
								5398
							],
							[
								5416,
								5432
							],
							[
								5459,
								5476
							],
							[
								5562,
								5578
							],
							[
								5596,
								5612
							],
							[
								5627,
								5644
							],
							[
								5855,
								5863
							],
							[
								5994,
								6002
							],
							[
								6346,
								6351
							],
							[
								6384,
								6391
							],
							[
								6553,
								6558
							],
							[
								7221,
								7227
							],
							[
								7654,
								7668
							],
							[
								7827,
								7831
							],
							[
								8184,
								8195
							],
							[
								8282,
								8293
							],
							[
								8401,
								8412
							],
							[
								8527,
								8538
							],
							[
								8649,
								8660
							],
							[
								9378,
								9389
							],
							[
								9408,
								9412
							],
							[
								9541,
								9552
							],
							[
								9665,
								9676
							],
							[
								9760,
								9771
							],
							[
								9900,
								9911
							],
							[
								10040,
								10051
							],
							[
								10571,
								10589
							],
							[
								11138,
								11144
							],
							[
								11306,
								11312
							],
							[
								11534,
								11540
							],
							[
								11550,
								11554
							],
							[
								11649,
								11655
							],
							[
								11767,
								11773
							],
							[
								11886,
								11892
							],
							[
								12002,
								12008
							],
							[
								12091,
								12097
							],
							[
								12185,
								12191
							],
							[
								12412,
								12418
							],
							[
								12506,
								12512
							],
							[
								12564,
								12570
							],
							[
								12662,
								12668
							],
							[
								13258,
								13264
							],
							[
								13340,
								13345
							],
							[
								13570,
								13576
							],
							[
								13688,
								13704
							],
							[
								13723,
								13747
							],
							[
								13939,
								13945
							],
							[
								14135,
								14142
							],
							[
								14232,
								14238
							],
							[
								14428,
								14435
							],
							[
								14605,
								14611
							],
							[
								14676,
								14681
							],
							[
								14781,
								14787
							],
							[
								14842,
								14847
							],
							[
								14902,
								14908
							],
							[
								14984,
								14989
							],
							[
								15104,
								15110
							],
							[
								15173,
								15178
							],
							[
								15255,
								15284
							],
							[
								15381,
								15404
							],
							[
								15503,
								15525
							],
							[
								15657,
								15674
							],
							[
								15707,
								15715
							],
							[
								15757,
								15774
							],
							[
								15807,
								15815
							],
							[
								16014,
								16036
							],
							[
								16448,
								16457
							],
							[
								16506,
								16510
							],
							[
								16945,
								16959
							],
							[
								17024,
								17045
							],
							[
								17166,
								17186
							],
							[
								17231,
								17261
							],
							[
								17478,
								17487
							],
							[
								17592,
								17603
							],
							[
								17797,
								17815
							],
							[
								17900,
								17920
							],
							[
								17970,
								17974
							],
							[
								18039,
								18049
							],
							[
								18267,
								18283
							],
							[
								18318,
								18328
							],
							[
								18567,
								18588
							],
							[
								18777,
								18790
							],
							[
								19090,
								19116
							],
							[
								19219,
								19230
							],
							[
								19828,
								19832
							],
							[
								21331,
								21335
							],
							[
								21772,
								21776
							],
							[
								22027,
								22031
							],
							[
								22186,
								22190
							],
							[
								22219,
								22223
							],
							[
								22520,
								22524
							],
							[
								23989,
								23993
							],
							[
								24138,
								24150
							],
							[
								24189,
								24205
							],
							[
								24590,
								24604
							],
							[
								24689,
								24721
							],
							[
								24950,
								24956
							],
							[
								25047,
								25056
							],
							[
								25124,
								25138
							],
							[
								25369,
								25378
							],
							[
								25623,
								25632
							],
							[
								25812,
								25821
							],
							[
								26210,
								26216
							],
							[
								26477,
								26483
							],
							[
								26588,
								26611
							],
							[
								26671,
								26699
							],
							[
								26787,
								26794
							],
							[
								26957,
								26980
							],
							[
								27260,
								27276
							],
							[
								27317,
								27325
							],
							[
								27410,
								27421
							],
							[
								27532,
								27550
							],
							[
								27683,
								27694
							],
							[
								27761,
								27778
							],
							[
								27887,
								27894
							],
							[
								27944,
								27959
							],
							[
								28024,
								28043
							],
							[
								28107,
								28128
							],
							[
								28194,
								28216
							],
							[
								28284,
								28302
							],
							[
								28667,
								28675
							],
							[
								28736,
								28744
							],
							[
								29015,
								29032
							],
							[
								29135,
								29145
							],
							[
								29255,
								29288
							],
							[
								29326,
								29344
							],
							[
								29424,
								29445
							],
							[
								29471,
								29482
							],
							[
								29597,
								29609
							],
							[
								29695,
								29724
							],
							[
								29752,
								29764
							],
							[
								30418,
								30448
							],
							[
								30486,
								30504
							],
							[
								30543,
								30564
							],
							[
								30585,
								30596
							],
							[
								30656,
								30681
							],
							[
								30811,
								30832
							],
							[
								30902,
								30911
							],
							[
								34013,
								34052
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							" () =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							" () =>",
							"hfn = value =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"nfn = (...args) =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = function(element)",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"(elem) =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = (k) => (v) =>",
							"(p) =>",
							"(prop) =>",
							" (k) => (v) =>",
							"(prop) =>",
							"(prop) =>",
							"(prop) =>",
							" () =>",
							"(g) =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							"(acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AQAAAAAAAAAAAAAAsggAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					902,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								711,
								735
							],
							[
								771,
								795
							],
							[
								884,
								896
							],
							[
								966,
								983
							],
							[
								1458,
								1470
							],
							[
								1646,
								1673
							],
							[
								2787,
								2841
							],
							[
								3048,
								3076
							],
							[
								3902,
								3911
							],
							[
								4116,
								4121
							],
							[
								4394,
								4400
							],
							[
								4527,
								4533
							],
							[
								4888,
								4904
							],
							[
								4922,
								4938
							],
							[
								4990,
								5007
							],
							[
								5258,
								5274
							],
							[
								5286,
								5303
							],
							[
								5312,
								5328
							],
							[
								5382,
								5398
							],
							[
								5416,
								5432
							],
							[
								5459,
								5476
							],
							[
								5562,
								5578
							],
							[
								5596,
								5612
							],
							[
								5627,
								5644
							],
							[
								5855,
								5863
							],
							[
								5994,
								6002
							],
							[
								6346,
								6351
							],
							[
								6384,
								6391
							],
							[
								6553,
								6558
							],
							[
								7221,
								7227
							],
							[
								7654,
								7668
							],
							[
								7827,
								7831
							],
							[
								8184,
								8195
							],
							[
								8282,
								8293
							],
							[
								8401,
								8412
							],
							[
								8527,
								8538
							],
							[
								8649,
								8660
							],
							[
								9378,
								9389
							],
							[
								9408,
								9412
							],
							[
								9541,
								9552
							],
							[
								9665,
								9676
							],
							[
								9760,
								9771
							],
							[
								9900,
								9911
							],
							[
								10040,
								10051
							],
							[
								11142,
								11148
							],
							[
								11310,
								11316
							],
							[
								11538,
								11544
							],
							[
								11554,
								11558
							],
							[
								11653,
								11659
							],
							[
								11771,
								11777
							],
							[
								11890,
								11896
							],
							[
								12006,
								12012
							],
							[
								12095,
								12101
							],
							[
								12189,
								12195
							],
							[
								12416,
								12422
							],
							[
								12510,
								12516
							],
							[
								12568,
								12574
							],
							[
								12666,
								12672
							],
							[
								13262,
								13268
							],
							[
								13344,
								13349
							],
							[
								13574,
								13580
							],
							[
								13692,
								13708
							],
							[
								13727,
								13751
							],
							[
								13943,
								13949
							],
							[
								14139,
								14146
							],
							[
								14236,
								14242
							],
							[
								14432,
								14439
							],
							[
								14609,
								14615
							],
							[
								14680,
								14685
							],
							[
								14785,
								14791
							],
							[
								14846,
								14851
							],
							[
								14906,
								14912
							],
							[
								14988,
								14993
							],
							[
								15108,
								15114
							],
							[
								15177,
								15182
							],
							[
								15259,
								15288
							],
							[
								15385,
								15408
							],
							[
								15507,
								15529
							],
							[
								15661,
								15678
							],
							[
								15711,
								15719
							],
							[
								15761,
								15778
							],
							[
								15811,
								15819
							],
							[
								16018,
								16040
							],
							[
								16452,
								16461
							],
							[
								16510,
								16514
							],
							[
								16949,
								16963
							],
							[
								17028,
								17049
							],
							[
								17170,
								17190
							],
							[
								17235,
								17265
							],
							[
								17482,
								17491
							],
							[
								17596,
								17607
							],
							[
								17801,
								17819
							],
							[
								17904,
								17924
							],
							[
								17974,
								17978
							],
							[
								18043,
								18053
							],
							[
								18271,
								18287
							],
							[
								18322,
								18332
							],
							[
								18571,
								18592
							],
							[
								18781,
								18794
							],
							[
								19094,
								19120
							],
							[
								19223,
								19234
							],
							[
								19832,
								19836
							],
							[
								21335,
								21339
							],
							[
								21776,
								21780
							],
							[
								22031,
								22035
							],
							[
								22190,
								22194
							],
							[
								22223,
								22227
							],
							[
								22524,
								22528
							],
							[
								23993,
								23997
							],
							[
								24142,
								24154
							],
							[
								24193,
								24209
							],
							[
								24594,
								24608
							],
							[
								24693,
								24725
							],
							[
								24954,
								24960
							],
							[
								25051,
								25060
							],
							[
								25128,
								25142
							],
							[
								25373,
								25382
							],
							[
								25627,
								25636
							],
							[
								25816,
								25825
							],
							[
								26214,
								26220
							],
							[
								26481,
								26487
							],
							[
								26592,
								26615
							],
							[
								26675,
								26703
							],
							[
								26791,
								26798
							],
							[
								26961,
								26984
							],
							[
								27264,
								27280
							],
							[
								27321,
								27329
							],
							[
								27414,
								27425
							],
							[
								27536,
								27554
							],
							[
								27687,
								27698
							],
							[
								27765,
								27782
							],
							[
								27891,
								27898
							],
							[
								27948,
								27963
							],
							[
								28028,
								28047
							],
							[
								28111,
								28132
							],
							[
								28198,
								28220
							],
							[
								28288,
								28306
							],
							[
								28671,
								28679
							],
							[
								28740,
								28748
							],
							[
								29019,
								29036
							],
							[
								29139,
								29149
							],
							[
								29259,
								29292
							],
							[
								29330,
								29348
							],
							[
								29428,
								29449
							],
							[
								29475,
								29486
							],
							[
								29601,
								29613
							],
							[
								29699,
								29728
							],
							[
								29756,
								29768
							],
							[
								30422,
								30452
							],
							[
								30490,
								30508
							],
							[
								30547,
								30568
							],
							[
								30589,
								30600
							],
							[
								30660,
								30685
							],
							[
								30815,
								30836
							],
							[
								30906,
								30915
							],
							[
								34017,
								34056
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							" () =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							" () =>",
							"hfn = value =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = function(element)",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"(elem) =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = (k) => (v) =>",
							"(p) =>",
							"(prop) =>",
							" (k) => (v) =>",
							"(prop) =>",
							"(prop) =>",
							"(prop) =>",
							" () =>",
							"(g) =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							"(acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACyCAAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KVExpc3QgPSAoY2hpbGQsIGVsZW0pID0+CiAgcm91bmQgPSBuID0+CiAgZ2V0KHRhcmdldCwgcHJvcCkKRWFnbGVFbGVtZW50CiAgc3RhdGljIGdldChvd25lciwgcmVmLCByYXcpCiAgc3RhdGljIGNyZWF0ZSh0YWdOYW1lLCBhdHRyaWJ1dGVzID0ge30sIGNoaWxkcmVuID0gW10pCiAgY29uc3RydWN0b3Iob3duZXIsIHJlZiwgcmF3KQpFYWdsZU5vZGUKICBnZXQoKQogICgpID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHYgPT4KICBuYW1lID0+CiAgdiA9PgogICgpID0+CiAgaGZuID0gdmFsdWUgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBuZm4gPSAoLi4uYXJncykgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAobywgcCwgcikgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbihlbGVtZW50KQogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oKQogIHZhbHVlID0+CiAgbiA9PgogIGdldCByZXBlYXRlcigpCihwdXNoLCBzdG9wKSA9PgooeyB2YWx1ZSwgZG9uZSB9KSA9PgogIC5wdXNoRXZlbnQgPSBmdW5jdGlvbiguLi5hcmdzKQooZWxlbSkgPT4KICBldmVudChuYW1lKQogIHN1YnNjcmliZShoYW5kbGVyKQogIHVuc3Vic2NyaWJlKGhhbmRsZXIpCiAgaCA9PgogIGdldCB0ZXh0KCkKICBnZXQgYXR0cmlidXRlcygpCiAgZ2V0TGF5ZXIoKQogIGxvb2t1cCh4cGF0aCwgY3JlYXRlKQogIChvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSAoaykgPT4gKHYpID0+CihwKSA9PgoocHJvcCkgPT4KICAoaykgPT4gKHYpID0+Cihwcm9wKSA9PgoocHJvcCkgPT4KKHByb3ApID0+CiAgKCkgPT4KKGcpID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgZ2V0IGNoYWluKCkKICBnZXRQYXJlbnQodGFnTmFtZSkKICBnZXQgc2hlZXQoKQogIGdldCBzaGVldE51bWJlcigpCiAgbmFtZXMoKQooYWNjLCBlbnRyeSkgPT4KICBzdGF0aWMga2V5cyhlbnRpdHkpCiAgc3RhdGljIHZhbHVlcyhlbnRpdHkpCiAgc3RhdGljIGVudHJpZXMoZW50aXR5KQogIHN0YXRpYyB0b09iamVjdChlKQogIGNoaWxkID0+CiAgY2hpbGQgPT4KICBzdGF0aWMgdG9BcnJheShlKQogIHRvU3RyaW5nKCkKKmdldEFsbChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KKHYsIHAsIG8pID0+CiAgZ2V0KHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CiAgZmluZChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgZ2V0IHBvcygpCiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAACdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnQgAACAgYWRkID0gKGFyciwgLi4uaXRlbXMpID0+ClRMaXN0ID0gKGNoaWxkLCBlbGVtKSA9PgogIHJvdW5kID0gbiA9PgogIGdldCh0YXJnZXQsIHByb3ApCkVhZ2xlRWxlbWVudAogIHN0YXRpYyBnZXQob3duZXIsIHJlZiwgcmF3KQogIHN0YXRpYyBjcmVhdGUodGFnTmFtZSwgYXR0cmlidXRlcyA9IHt9LCBjaGlsZHJlbiA9IFtdKQogIGNvbnN0cnVjdG9yKG93bmVyLCByZWYsIHJhdykKRWFnbGVOb2RlCiAgZ2V0KCkKICAoKSA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICAoKSA9PgogIHYgPT4KICAoKSA9PgogIHYgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICAoKSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2ID0+CiAgbmFtZSA9PgogIHYgPT4KICAoKSA9PgogIGhmbiA9IHZhbHVlID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgZSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICBlID0+CiAgKG8sIHAsIHIpID0+CiAgKCkgPT4KICBjcmVmID0+CiAgKCkgPT4KICBjcmVmID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICBlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oZWxlbWVudCkKICAuaXNWaXNpYmxlID0gZWxlbWVudCA9PgogIC5zZXRWaXNpYmxlID0gdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKICB2YWx1ZSA9PgogIG4gPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKKGVsZW0pID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKICAobywgcCwgdikgPT4KICBnZXRCb3VuZHMocHJlZCwgb3B0cyA9IHt9KQogIHByZWQgPSBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGIgPT4KICByID0+CiAgZSA9PgogIG4gPT4KICBnZXQgYm91bmRzKCkKICB0cmFuc2Zvcm1hdGlvbigpCiAgZ2V0IGdlb21ldHJ5KCkKICBtYWtlR2V0dGVyU2V0dGVyID0gKGspID0+ICh2KSA9PgoocCkgPT4KKHByb3ApID0+CiAgKGspID0+ICh2KSA9PgoocHJvcCkgPT4KKHByb3ApID0+Cihwcm9wKSA9PgogICgpID0+CihnKSA9PgogIHBvc2l0aW9uKG9mZnNldCA9IG51bGwpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHByb3AgPT4KICBzdGF0aWMgaXNSZWxhdGlvbihuYW1lKQogIHQgPSAobywgcCwgdikgPT4KICByID0gZSA9PgogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQogICh2LCBwLCBvKSA9PgogIChyLCB2LCBwLCBvKSA9PgogICgpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQogICh2LCBwLCBvKSA9PgogIChyLCB2LCBwLCBvKSA9PgogICgpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQogIG1ha2VFYWdsZUVsZW1lbnQgPSAob3duZXIsIHJlZiwgcmF3KSA9PgAAAAAAAAAAnQgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					903,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								743,
								768
							],
							[
								1488,
								1492
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACdCAAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KVExpc3QgPSAoY2hpbGQsIGVsZW0pID0+CiAgcm91bmQgPSBuID0+CiAgZ2V0KHRhcmdldCwgcHJvcCkKRWFnbGVFbGVtZW50CiAgc3RhdGljIGdldChvd25lciwgcmVmLCByYXcpCiAgc3RhdGljIGNyZWF0ZSh0YWdOYW1lLCBhdHRyaWJ1dGVzID0ge30sIGNoaWxkcmVuID0gW10pCiAgY29uc3RydWN0b3Iob3duZXIsIHJlZiwgcmF3KQpFYWdsZU5vZGUKICBnZXQoKQogICgpID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHYgPT4KICBuYW1lID0+CiAgdiA9PgogICgpID0+CiAgaGZuID0gdmFsdWUgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAobywgcCwgcikgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbihlbGVtZW50KQogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oKQogIHZhbHVlID0+CiAgbiA9PgogIGdldCByZXBlYXRlcigpCihwdXNoLCBzdG9wKSA9PgooeyB2YWx1ZSwgZG9uZSB9KSA9PgogIC5wdXNoRXZlbnQgPSBmdW5jdGlvbiguLi5hcmdzKQooZWxlbSkgPT4KICBldmVudChuYW1lKQogIHN1YnNjcmliZShoYW5kbGVyKQogIHVuc3Vic2NyaWJlKGhhbmRsZXIpCiAgaCA9PgogIGdldCB0ZXh0KCkKICBnZXQgYXR0cmlidXRlcygpCiAgZ2V0TGF5ZXIoKQogIGxvb2t1cCh4cGF0aCwgY3JlYXRlKQogIChvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSAoaykgPT4gKHYpID0+CihwKSA9PgoocHJvcCkgPT4KICAoaykgPT4gKHYpID0+Cihwcm9wKSA9PgoocHJvcCkgPT4KKHByb3ApID0+CiAgKCkgPT4KKGcpID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgZ2V0IGNoYWluKCkKICBnZXRQYXJlbnQodGFnTmFtZSkKICBnZXQgc2hlZXQoKQogIGdldCBzaGVldE51bWJlcigpCiAgbmFtZXMoKQooYWNjLCBlbnRyeSkgPT4KICBzdGF0aWMga2V5cyhlbnRpdHkpCiAgc3RhdGljIHZhbHVlcyhlbnRpdHkpCiAgc3RhdGljIGVudHJpZXMoZW50aXR5KQogIHN0YXRpYyB0b09iamVjdChlKQogIGNoaWxkID0+CiAgY2hpbGQgPT4KICBzdGF0aWMgdG9BcnJheShlKQogIHRvU3RyaW5nKCkKKmdldEFsbChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KKHYsIHAsIG8pID0+CiAgZ2V0KHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CiAgZmluZChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgZ2V0IHBvcygpCiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					904,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								747,
								772
							],
							[
								1492,
								1496
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"CgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					905,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								747,
								772
							],
							[
								1492,
								1496
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					906,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								747,
								772
							],
							[
								1447,
								1451
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					907,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3653,
								3675
							],
							[
								4220,
								4229
							],
							[
								4255,
								4267
							],
							[
								5988,
								5999
							],
							[
								6683,
								6727
							],
							[
								6853,
								6873
							],
							[
								7035,
								7045
							],
							[
								7073,
								7083
							],
							[
								7936,
								7945
							],
							[
								8696,
								8720
							],
							[
								8846,
								8850
							],
							[
								8945,
								8958
							],
							[
								9045,
								9066
							],
							[
								9425,
								9441
							],
							[
								9684,
								9689
							],
							[
								9727,
								9742
							],
							[
								9903,
								9911
							],
							[
								9952,
								9960
							],
							[
								10168,
								10192
							],
							[
								10356,
								10370
							],
							[
								10451,
								10464
							],
							[
								10528,
								10537
							],
							[
								10616,
								10626
							],
							[
								10690,
								10700
							],
							[
								10744,
								10772
							],
							[
								10839,
								10873
							],
							[
								10907,
								10912
							],
							[
								11549,
								11597
							],
							[
								11715,
								11724
							],
							[
								11887,
								11891
							],
							[
								11999,
								12029
							],
							[
								12271,
								12279
							],
							[
								12346,
								12350
							],
							[
								12440,
								12447
							],
							[
								12749,
								12773
							],
							[
								13018,
								13023
							],
							[
								14758,
								14802
							],
							[
								15249,
								15275
							],
							[
								16001,
								16024
							],
							[
								16144,
								16166
							],
							[
								16417,
								16421
							],
							[
								16909,
								16913
							],
							[
								17530,
								17559
							],
							[
								17584,
								17588
							],
							[
								17664,
								17687
							],
							[
								17731,
								17737
							],
							[
								17765,
								17769
							],
							[
								17785,
								17822
							],
							[
								17844,
								17860
							],
							[
								17880,
								17887
							],
							[
								17944,
								17972
							],
							[
								18026,
								18037
							],
							[
								18120,
								18128
							],
							[
								18224,
								18228
							],
							[
								18378,
								18382
							],
							[
								18480,
								18485
							],
							[
								18545,
								18556
							],
							[
								18628,
								18639
							],
							[
								18731,
								18736
							],
							[
								18791,
								18797
							],
							[
								18894,
								18902
							],
							[
								19077,
								19106
							],
							[
								19199,
								19252
							],
							[
								19405,
								19409
							],
							[
								19463,
								19467
							],
							[
								19752,
								19759
							],
							[
								19781,
								19787
							],
							[
								19816,
								19847
							],
							[
								19990,
								20014
							],
							[
								20145,
								20156
							],
							[
								20179,
								20195
							],
							[
								20354,
								20359
							],
							[
								20383,
								20387
							],
							[
								20440,
								20449
							],
							[
								20522,
								20527
							],
							[
								20665,
								20670
							],
							[
								20797,
								20808
							],
							[
								20897,
								20904
							],
							[
								21496,
								21512
							],
							[
								23378,
								23412
							],
							[
								23751,
								23765
							],
							[
								23893,
								23897
							],
							[
								23919,
								23933
							],
							[
								23964,
								23968
							],
							[
								25290,
								25306
							],
							[
								25356,
								25371
							],
							[
								25440,
								25459
							],
							[
								25482,
								25494
							],
							[
								25583,
								25587
							],
							[
								25686,
								25690
							],
							[
								25909,
								25915
							],
							[
								26010,
								26024
							],
							[
								26058,
								26076
							],
							[
								26218,
								26230
							],
							[
								26260,
								26332
							],
							[
								26565,
								26570
							],
							[
								27276,
								27280
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					908,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								747,
								772
							],
							[
								1447,
								1451
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					909,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3653,
								3675
							],
							[
								4220,
								4229
							],
							[
								4255,
								4267
							],
							[
								5988,
								5999
							],
							[
								6683,
								6727
							],
							[
								6853,
								6873
							],
							[
								7035,
								7045
							],
							[
								7073,
								7083
							],
							[
								7936,
								7945
							],
							[
								8696,
								8720
							],
							[
								8846,
								8850
							],
							[
								8945,
								8958
							],
							[
								9045,
								9066
							],
							[
								9425,
								9441
							],
							[
								9684,
								9689
							],
							[
								9727,
								9742
							],
							[
								9903,
								9911
							],
							[
								9952,
								9960
							],
							[
								10168,
								10192
							],
							[
								10356,
								10370
							],
							[
								10451,
								10464
							],
							[
								10528,
								10537
							],
							[
								10616,
								10626
							],
							[
								10690,
								10700
							],
							[
								10744,
								10772
							],
							[
								10839,
								10873
							],
							[
								10907,
								10912
							],
							[
								11549,
								11597
							],
							[
								11715,
								11724
							],
							[
								11887,
								11891
							],
							[
								11999,
								12029
							],
							[
								12271,
								12279
							],
							[
								12346,
								12350
							],
							[
								12440,
								12447
							],
							[
								12749,
								12773
							],
							[
								13018,
								13023
							],
							[
								14758,
								14802
							],
							[
								15249,
								15275
							],
							[
								16001,
								16024
							],
							[
								16144,
								16166
							],
							[
								16417,
								16421
							],
							[
								16909,
								16913
							],
							[
								17530,
								17559
							],
							[
								17584,
								17588
							],
							[
								17664,
								17687
							],
							[
								17731,
								17737
							],
							[
								17765,
								17769
							],
							[
								17785,
								17822
							],
							[
								17844,
								17860
							],
							[
								17880,
								17887
							],
							[
								17944,
								17972
							],
							[
								18026,
								18037
							],
							[
								18120,
								18128
							],
							[
								18224,
								18228
							],
							[
								18378,
								18382
							],
							[
								18480,
								18485
							],
							[
								18545,
								18556
							],
							[
								18628,
								18639
							],
							[
								18731,
								18736
							],
							[
								18791,
								18797
							],
							[
								18894,
								18902
							],
							[
								19077,
								19106
							],
							[
								19199,
								19252
							],
							[
								19405,
								19409
							],
							[
								19463,
								19467
							],
							[
								19752,
								19759
							],
							[
								19781,
								19787
							],
							[
								19816,
								19847
							],
							[
								19990,
								20014
							],
							[
								20145,
								20156
							],
							[
								20179,
								20195
							],
							[
								20354,
								20359
							],
							[
								20383,
								20387
							],
							[
								20440,
								20449
							],
							[
								20522,
								20527
							],
							[
								20665,
								20670
							],
							[
								20797,
								20808
							],
							[
								20897,
								20904
							],
							[
								21496,
								21512
							],
							[
								23378,
								23412
							],
							[
								23751,
								23765
							],
							[
								23893,
								23897
							],
							[
								23919,
								23933
							],
							[
								23964,
								23968
							],
							[
								25290,
								25306
							],
							[
								25356,
								25371
							],
							[
								25440,
								25459
							],
							[
								25482,
								25494
							],
							[
								25583,
								25587
							],
							[
								25686,
								25690
							],
							[
								25909,
								25915
							],
							[
								26010,
								26024
							],
							[
								26058,
								26076
							],
							[
								26218,
								26230
							],
							[
								26260,
								26332
							],
							[
								26565,
								26570
							],
							[
								27276,
								27280
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					910,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3709,
								3731
							],
							[
								4276,
								4285
							],
							[
								4311,
								4323
							],
							[
								6044,
								6055
							],
							[
								6739,
								6783
							],
							[
								6909,
								6929
							],
							[
								7091,
								7101
							],
							[
								7129,
								7139
							],
							[
								7992,
								8001
							],
							[
								8752,
								8776
							],
							[
								8902,
								8906
							],
							[
								9001,
								9014
							],
							[
								9101,
								9122
							],
							[
								9481,
								9497
							],
							[
								9740,
								9745
							],
							[
								9783,
								9798
							],
							[
								9959,
								9967
							],
							[
								10008,
								10016
							],
							[
								10224,
								10248
							],
							[
								10412,
								10426
							],
							[
								10507,
								10520
							],
							[
								10584,
								10593
							],
							[
								10672,
								10682
							],
							[
								10746,
								10756
							],
							[
								10800,
								10828
							],
							[
								10895,
								10929
							],
							[
								10963,
								10968
							],
							[
								11605,
								11653
							],
							[
								11771,
								11780
							],
							[
								11943,
								11947
							],
							[
								12055,
								12085
							],
							[
								12327,
								12335
							],
							[
								12402,
								12406
							],
							[
								12496,
								12503
							],
							[
								12805,
								12829
							],
							[
								13074,
								13079
							],
							[
								14814,
								14858
							],
							[
								15305,
								15331
							],
							[
								16057,
								16080
							],
							[
								16200,
								16222
							],
							[
								16473,
								16477
							],
							[
								16965,
								16969
							],
							[
								17586,
								17615
							],
							[
								17640,
								17644
							],
							[
								17720,
								17743
							],
							[
								17787,
								17793
							],
							[
								17821,
								17825
							],
							[
								17841,
								17878
							],
							[
								17900,
								17916
							],
							[
								17936,
								17943
							],
							[
								18000,
								18028
							],
							[
								18082,
								18093
							],
							[
								18176,
								18184
							],
							[
								18280,
								18284
							],
							[
								18434,
								18438
							],
							[
								18536,
								18541
							],
							[
								18601,
								18612
							],
							[
								18684,
								18695
							],
							[
								18787,
								18792
							],
							[
								18847,
								18853
							],
							[
								18950,
								18958
							],
							[
								19133,
								19162
							],
							[
								19255,
								19308
							],
							[
								19461,
								19465
							],
							[
								19519,
								19523
							],
							[
								19808,
								19815
							],
							[
								19837,
								19843
							],
							[
								19872,
								19903
							],
							[
								20046,
								20070
							],
							[
								20201,
								20212
							],
							[
								20235,
								20251
							],
							[
								20410,
								20415
							],
							[
								20439,
								20443
							],
							[
								20496,
								20505
							],
							[
								20578,
								20583
							],
							[
								20721,
								20726
							],
							[
								20853,
								20864
							],
							[
								20953,
								20960
							],
							[
								21552,
								21568
							],
							[
								23434,
								23468
							],
							[
								23807,
								23821
							],
							[
								23949,
								23953
							],
							[
								23975,
								23989
							],
							[
								24020,
								24024
							],
							[
								25346,
								25362
							],
							[
								25412,
								25427
							],
							[
								25496,
								25515
							],
							[
								25538,
								25550
							],
							[
								25639,
								25643
							],
							[
								25742,
								25746
							],
							[
								25965,
								25971
							],
							[
								26066,
								26080
							],
							[
								26114,
								26132
							],
							[
								26274,
								26286
							],
							[
								26316,
								26388
							],
							[
								26621,
								26626
							],
							[
								27332,
								27336
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					911,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3721,
								3743
							],
							[
								4288,
								4297
							],
							[
								4323,
								4335
							],
							[
								6056,
								6067
							],
							[
								6751,
								6795
							],
							[
								6921,
								6941
							],
							[
								7103,
								7113
							],
							[
								7141,
								7151
							],
							[
								8004,
								8013
							],
							[
								8764,
								8788
							],
							[
								8914,
								8918
							],
							[
								9013,
								9026
							],
							[
								9113,
								9134
							],
							[
								9493,
								9509
							],
							[
								9752,
								9757
							],
							[
								9795,
								9810
							],
							[
								9971,
								9979
							],
							[
								10020,
								10028
							],
							[
								10236,
								10260
							],
							[
								10424,
								10438
							],
							[
								10519,
								10532
							],
							[
								10596,
								10605
							],
							[
								10684,
								10694
							],
							[
								10758,
								10768
							],
							[
								10812,
								10840
							],
							[
								10907,
								10941
							],
							[
								10975,
								10980
							],
							[
								11617,
								11665
							],
							[
								11783,
								11792
							],
							[
								11955,
								11959
							],
							[
								12067,
								12097
							],
							[
								12339,
								12347
							],
							[
								12414,
								12418
							],
							[
								12508,
								12515
							],
							[
								12817,
								12841
							],
							[
								13086,
								13091
							],
							[
								14826,
								14870
							],
							[
								15317,
								15343
							],
							[
								16069,
								16092
							],
							[
								16212,
								16234
							],
							[
								16485,
								16489
							],
							[
								16977,
								16981
							],
							[
								17598,
								17627
							],
							[
								17652,
								17656
							],
							[
								17732,
								17755
							],
							[
								17799,
								17805
							],
							[
								17833,
								17837
							],
							[
								17853,
								17890
							],
							[
								17912,
								17928
							],
							[
								17948,
								17955
							],
							[
								18012,
								18040
							],
							[
								18094,
								18105
							],
							[
								18188,
								18196
							],
							[
								18292,
								18296
							],
							[
								18446,
								18450
							],
							[
								18548,
								18553
							],
							[
								18613,
								18624
							],
							[
								18696,
								18707
							],
							[
								18799,
								18804
							],
							[
								18859,
								18865
							],
							[
								18962,
								18970
							],
							[
								19145,
								19174
							],
							[
								19267,
								19320
							],
							[
								19473,
								19477
							],
							[
								19531,
								19535
							],
							[
								19820,
								19827
							],
							[
								19849,
								19855
							],
							[
								19884,
								19915
							],
							[
								20058,
								20082
							],
							[
								20213,
								20224
							],
							[
								20247,
								20263
							],
							[
								20422,
								20427
							],
							[
								20451,
								20455
							],
							[
								20508,
								20517
							],
							[
								20590,
								20595
							],
							[
								20733,
								20738
							],
							[
								20865,
								20876
							],
							[
								20965,
								20972
							],
							[
								21564,
								21580
							],
							[
								23446,
								23480
							],
							[
								23819,
								23833
							],
							[
								23961,
								23965
							],
							[
								23987,
								24001
							],
							[
								24032,
								24036
							],
							[
								25358,
								25374
							],
							[
								25424,
								25439
							],
							[
								25508,
								25527
							],
							[
								25550,
								25562
							],
							[
								25651,
								25655
							],
							[
								25754,
								25758
							],
							[
								25977,
								25983
							],
							[
								26078,
								26092
							],
							[
								26126,
								26144
							],
							[
								26286,
								26298
							],
							[
								26328,
								26400
							],
							[
								26633,
								26638
							],
							[
								27344,
								27348
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					912,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3721,
								3743
							],
							[
								4288,
								4297
							],
							[
								4323,
								4335
							],
							[
								6056,
								6067
							],
							[
								6751,
								6795
							],
							[
								6921,
								6941
							],
							[
								7103,
								7113
							],
							[
								7141,
								7151
							],
							[
								8004,
								8013
							],
							[
								8764,
								8788
							],
							[
								8914,
								8918
							],
							[
								9013,
								9026
							],
							[
								9113,
								9134
							],
							[
								9493,
								9509
							],
							[
								9752,
								9757
							],
							[
								9795,
								9810
							],
							[
								9971,
								9979
							],
							[
								10020,
								10028
							],
							[
								10236,
								10260
							],
							[
								10424,
								10438
							],
							[
								10519,
								10532
							],
							[
								10596,
								10605
							],
							[
								10684,
								10694
							],
							[
								10758,
								10768
							],
							[
								10812,
								10840
							],
							[
								10907,
								10941
							],
							[
								10975,
								10980
							],
							[
								11617,
								11665
							],
							[
								11783,
								11792
							],
							[
								11955,
								11959
							],
							[
								12067,
								12097
							],
							[
								12339,
								12347
							],
							[
								12414,
								12418
							],
							[
								12508,
								12515
							],
							[
								12817,
								12841
							],
							[
								13086,
								13091
							],
							[
								14826,
								14870
							],
							[
								15317,
								15343
							],
							[
								16069,
								16092
							],
							[
								16212,
								16234
							],
							[
								16485,
								16489
							],
							[
								16977,
								16981
							],
							[
								17598,
								17627
							],
							[
								17652,
								17656
							],
							[
								17732,
								17755
							],
							[
								17799,
								17805
							],
							[
								17833,
								17837
							],
							[
								17853,
								17890
							],
							[
								17912,
								17928
							],
							[
								17948,
								17955
							],
							[
								18012,
								18040
							],
							[
								18094,
								18105
							],
							[
								18188,
								18196
							],
							[
								18292,
								18296
							],
							[
								18446,
								18450
							],
							[
								18548,
								18553
							],
							[
								18613,
								18624
							],
							[
								18696,
								18707
							],
							[
								18799,
								18804
							],
							[
								18859,
								18865
							],
							[
								18962,
								18970
							],
							[
								19145,
								19174
							],
							[
								19267,
								19320
							],
							[
								19473,
								19477
							],
							[
								19531,
								19535
							],
							[
								19820,
								19827
							],
							[
								19849,
								19855
							],
							[
								19884,
								19915
							],
							[
								20058,
								20082
							],
							[
								20213,
								20224
							],
							[
								20247,
								20263
							],
							[
								20422,
								20427
							],
							[
								20451,
								20455
							],
							[
								20508,
								20517
							],
							[
								20590,
								20595
							],
							[
								20733,
								20738
							],
							[
								20865,
								20876
							],
							[
								20965,
								20972
							],
							[
								21564,
								21580
							],
							[
								23446,
								23480
							],
							[
								23819,
								23833
							],
							[
								23961,
								23965
							],
							[
								23987,
								24001
							],
							[
								24032,
								24036
							],
							[
								25358,
								25374
							],
							[
								25424,
								25439
							],
							[
								25508,
								25527
							],
							[
								25550,
								25562
							],
							[
								25651,
								25655
							],
							[
								25754,
								25758
							],
							[
								25977,
								25983
							],
							[
								26078,
								26092
							],
							[
								26126,
								26144
							],
							[
								26286,
								26298
							],
							[
								26328,
								26400
							],
							[
								26633,
								26638
							],
							[
								27344,
								27348
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					913,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					914,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					915,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3721,
								3743
							],
							[
								4288,
								4297
							],
							[
								4323,
								4335
							],
							[
								6056,
								6067
							],
							[
								6751,
								6795
							],
							[
								6921,
								6941
							],
							[
								7103,
								7113
							],
							[
								7141,
								7151
							],
							[
								8004,
								8013
							],
							[
								8764,
								8788
							],
							[
								8914,
								8918
							],
							[
								9013,
								9026
							],
							[
								9113,
								9134
							],
							[
								9493,
								9509
							],
							[
								9752,
								9757
							],
							[
								9795,
								9810
							],
							[
								9971,
								9979
							],
							[
								10020,
								10028
							],
							[
								10236,
								10260
							],
							[
								10424,
								10438
							],
							[
								10519,
								10532
							],
							[
								10596,
								10605
							],
							[
								10684,
								10694
							],
							[
								10758,
								10768
							],
							[
								10812,
								10840
							],
							[
								10907,
								10941
							],
							[
								10975,
								10980
							],
							[
								11617,
								11665
							],
							[
								11783,
								11792
							],
							[
								11955,
								11959
							],
							[
								12067,
								12097
							],
							[
								12339,
								12347
							],
							[
								12414,
								12418
							],
							[
								12508,
								12515
							],
							[
								12817,
								12841
							],
							[
								13086,
								13091
							],
							[
								14826,
								14870
							],
							[
								15317,
								15343
							],
							[
								16069,
								16092
							],
							[
								16212,
								16234
							],
							[
								16485,
								16489
							],
							[
								16977,
								16981
							],
							[
								17598,
								17627
							],
							[
								17652,
								17656
							],
							[
								17732,
								17755
							],
							[
								17799,
								17805
							],
							[
								17833,
								17837
							],
							[
								17853,
								17890
							],
							[
								17912,
								17928
							],
							[
								17948,
								17955
							],
							[
								18012,
								18040
							],
							[
								18094,
								18105
							],
							[
								18188,
								18196
							],
							[
								18292,
								18296
							],
							[
								18446,
								18450
							],
							[
								18548,
								18553
							],
							[
								18613,
								18624
							],
							[
								18696,
								18707
							],
							[
								18799,
								18804
							],
							[
								18859,
								18865
							],
							[
								18962,
								18970
							],
							[
								19145,
								19174
							],
							[
								19267,
								19320
							],
							[
								19473,
								19477
							],
							[
								19531,
								19535
							],
							[
								19820,
								19827
							],
							[
								19849,
								19855
							],
							[
								19884,
								19915
							],
							[
								20058,
								20082
							],
							[
								20213,
								20224
							],
							[
								20247,
								20263
							],
							[
								20422,
								20427
							],
							[
								20451,
								20455
							],
							[
								20508,
								20517
							],
							[
								20590,
								20595
							],
							[
								20733,
								20738
							],
							[
								20865,
								20876
							],
							[
								20965,
								20972
							],
							[
								21564,
								21580
							],
							[
								23446,
								23480
							],
							[
								23819,
								23833
							],
							[
								23961,
								23965
							],
							[
								23987,
								24001
							],
							[
								24032,
								24036
							],
							[
								25358,
								25374
							],
							[
								25424,
								25439
							],
							[
								25508,
								25527
							],
							[
								25550,
								25562
							],
							[
								25651,
								25655
							],
							[
								25754,
								25758
							],
							[
								25977,
								25983
							],
							[
								26078,
								26092
							],
							[
								26126,
								26144
							],
							[
								26286,
								26298
							],
							[
								26328,
								26400
							],
							[
								26633,
								26638
							],
							[
								27344,
								27348
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AwAAAAAAAAAAAAAA8wUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMFAAAgIHBpY2soaXQsIG4gPSAxKQogIG4gPSBpID0+CiAgYXBwZW5kKHRhZywgYXR0cnMsIGNoaWxkcmVuLCBwYXJlbnQsIGVsZW1lbnQpCiAgcmVuZGVyKGRvYykKICBtYWluKC4uLmFyZ3MpCiAgKCkgPT4KICB2YWx1ZSA9PgogIHRvTnVtYmVyKG4pCiAgbG9hZChmaWxlbmFtZSwgcHJvamVjdCA9IGdsb2JhbFRoaXMucHJvamVjdCkKICBuZXdQcm9qZWN0KGZpbGVuYW1lKQogIHNjaDogKCkgPT4KICBicmQ6ICgpID0+CiAgcXVpdChhcmcpCiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIHJvdGF0ZVJpZ2h0KG4pCiAgcm90YXRlTGVmdChuKQogIGF0KGluZGV4KQogIGdldCBoZWFkKCkKICBnZXQgdGFpbCgpClRlcm1pbmF0ZShleGl0Q29kZSkKICB4bWwoc3RyaW5ncywgZXhwcmVzc2lvbnMpCiAgZSA9PgogIGltcG9ydE1vZHVsZShtb2R1bGVOYW1lLCAuLi5hcmdzKQogIG1vZHVsZSA9PgogIGUgPT4KVXBkYXRlTWVhc3VyZXMoYm9hcmQpCiAgbGluZXMgPT4KICBlID0+CiAgbGluZSA9PgpBbGlnbkl0ZW0oaXRlbSkKICB0ciA9PgpBbGlnbkFsbChkb2MgPSBnbG9iYWxUaGlzLmRvY3VtZW50KQogIGZpeFZhbHVlKGVsZW1lbnQpCiAgZml4VmFsdWVzKGRvYykKICBjb29yZE1hcChkb2MpCiAgcCA9PgogIHQgPT4KR2V0UG9seWdvbnMoZCA9IGRvYykKICBlID0+CkZpbmRQb2x5Z29ucygpCiAgZG9jID0+CiAgZSA9PgpSZW1vdmVQb2x5Z29ucyhwID0gcG9seWdvbnMpCihbZG9jLCBsaXN0XSkgPT4KICBwYXRoID0+CkdldE5hbWVzKGRvYywgcHJlZCkKICBwcmVkID0gZSA9PgogIHNoZWV0ID0+CiAgZSA9PgogIGUgPT4KICBlID0+CihbdiwgcF0pID0+CihbdiwgcF0pID0+CigpID0+CiAgZG9jID0+CiAgc2hlZXQgPT4KR2V0QnlOYW1lKGRvYywgbmFtZSkKQ29ycmVsYXRlU2NoZW1hdGljQW5kQm9hcmQoc2NoZW1hdGljLCBib2FyZCkKICBkID0+CiAgbiA9PgogIG5hbWUgPT4KICBkb2MgPT4KR2V0U2hlZXRzKGRvY19vcl9wcm9qKQpTYXZlTGlicmFyaWVzKCkKKFtuLCBlXSkgPT4KKGFjYywgW24sIGVdKSA9PgogIGUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgpFYWdsZTJDaXJjdWl0SlMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMsIHNjYWxlID0gNTAsIHNoZWV0ID0gMCkKICBuID0+CiAgZSA9PgAAAAAAAAAA8wUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					916,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					917,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					918,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
						"symkeys":
						[
							[
								316,
								361
							],
							[
								747,
								772
							],
							[
								1447,
								1451
							]
						],
						"symlist":
						[
							"Instance = ({ data, opts = {}, ...props }) =>",
							"async function* DataFn ()",
							"t =>"
						]
					},
					"AQAAAAAAAAAAAAAAPgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					919,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								711,
								735
							],
							[
								771,
								795
							],
							[
								884,
								896
							],
							[
								966,
								983
							],
							[
								1458,
								1470
							],
							[
								1646,
								1673
							],
							[
								2787,
								2841
							],
							[
								3048,
								3076
							],
							[
								3902,
								3911
							],
							[
								4116,
								4121
							],
							[
								4394,
								4400
							],
							[
								4527,
								4533
							],
							[
								4888,
								4904
							],
							[
								4922,
								4938
							],
							[
								4990,
								5007
							],
							[
								5258,
								5274
							],
							[
								5286,
								5303
							],
							[
								5312,
								5328
							],
							[
								5382,
								5398
							],
							[
								5416,
								5432
							],
							[
								5459,
								5476
							],
							[
								5562,
								5578
							],
							[
								5596,
								5612
							],
							[
								5627,
								5644
							],
							[
								5855,
								5863
							],
							[
								5994,
								6002
							],
							[
								6346,
								6351
							],
							[
								6384,
								6391
							],
							[
								6553,
								6558
							],
							[
								7221,
								7227
							],
							[
								7654,
								7668
							],
							[
								7827,
								7831
							],
							[
								8184,
								8195
							],
							[
								8282,
								8293
							],
							[
								8401,
								8412
							],
							[
								8527,
								8538
							],
							[
								8649,
								8660
							],
							[
								9378,
								9389
							],
							[
								9408,
								9412
							],
							[
								9541,
								9552
							],
							[
								9665,
								9676
							],
							[
								9760,
								9771
							],
							[
								9900,
								9911
							],
							[
								10040,
								10051
							],
							[
								11144,
								11150
							],
							[
								11312,
								11318
							],
							[
								11540,
								11546
							],
							[
								11556,
								11560
							],
							[
								11655,
								11661
							],
							[
								11773,
								11779
							],
							[
								11892,
								11898
							],
							[
								12008,
								12014
							],
							[
								12097,
								12103
							],
							[
								12191,
								12197
							],
							[
								12418,
								12424
							],
							[
								12512,
								12518
							],
							[
								12570,
								12576
							],
							[
								12668,
								12674
							],
							[
								13264,
								13270
							],
							[
								13346,
								13351
							],
							[
								13576,
								13582
							],
							[
								13694,
								13710
							],
							[
								13729,
								13753
							],
							[
								13945,
								13951
							],
							[
								14141,
								14148
							],
							[
								14238,
								14244
							],
							[
								14434,
								14441
							],
							[
								14611,
								14617
							],
							[
								14682,
								14687
							],
							[
								14787,
								14793
							],
							[
								14848,
								14853
							],
							[
								14908,
								14914
							],
							[
								14990,
								14995
							],
							[
								15110,
								15116
							],
							[
								15179,
								15184
							],
							[
								15261,
								15290
							],
							[
								15387,
								15410
							],
							[
								15509,
								15531
							],
							[
								15663,
								15680
							],
							[
								15713,
								15721
							],
							[
								15763,
								15780
							],
							[
								15813,
								15821
							],
							[
								16020,
								16042
							],
							[
								16454,
								16463
							],
							[
								16512,
								16516
							],
							[
								16951,
								16965
							],
							[
								17030,
								17051
							],
							[
								17172,
								17192
							],
							[
								17237,
								17267
							],
							[
								17484,
								17493
							],
							[
								17598,
								17609
							],
							[
								17803,
								17821
							],
							[
								17906,
								17926
							],
							[
								17976,
								17980
							],
							[
								18045,
								18055
							],
							[
								18273,
								18289
							],
							[
								18324,
								18334
							],
							[
								18573,
								18594
							],
							[
								18783,
								18796
							],
							[
								19096,
								19122
							],
							[
								19225,
								19236
							],
							[
								19834,
								19838
							],
							[
								21337,
								21341
							],
							[
								21778,
								21782
							],
							[
								22033,
								22037
							],
							[
								22192,
								22196
							],
							[
								22225,
								22229
							],
							[
								22526,
								22530
							],
							[
								23995,
								23999
							],
							[
								24144,
								24156
							],
							[
								24195,
								24211
							],
							[
								24596,
								24610
							],
							[
								24695,
								24727
							],
							[
								24956,
								24962
							],
							[
								25053,
								25062
							],
							[
								25130,
								25144
							],
							[
								25375,
								25384
							],
							[
								25629,
								25638
							],
							[
								25818,
								25827
							],
							[
								26216,
								26222
							],
							[
								26483,
								26489
							],
							[
								26594,
								26617
							],
							[
								26677,
								26705
							],
							[
								26793,
								26800
							],
							[
								26963,
								26986
							],
							[
								27266,
								27282
							],
							[
								27323,
								27331
							],
							[
								27416,
								27427
							],
							[
								27538,
								27556
							],
							[
								27689,
								27700
							],
							[
								27767,
								27784
							],
							[
								27893,
								27900
							],
							[
								27950,
								27965
							],
							[
								28030,
								28049
							],
							[
								28113,
								28134
							],
							[
								28200,
								28222
							],
							[
								28290,
								28308
							],
							[
								28673,
								28681
							],
							[
								28742,
								28750
							],
							[
								29021,
								29038
							],
							[
								29141,
								29151
							],
							[
								29261,
								29294
							],
							[
								29332,
								29350
							],
							[
								29430,
								29451
							],
							[
								29477,
								29488
							],
							[
								29603,
								29615
							],
							[
								29701,
								29730
							],
							[
								29758,
								29770
							],
							[
								30424,
								30454
							],
							[
								30492,
								30510
							],
							[
								30549,
								30570
							],
							[
								30591,
								30602
							],
							[
								30662,
								30687
							],
							[
								30817,
								30838
							],
							[
								30908,
								30917
							],
							[
								34019,
								34058
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							" () =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" v =>",
							" () =>",
							" v =>",
							" v =>",
							" () =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							" () =>",
							"hfn = value =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = function(element)",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"(elem) =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = (k) => (v) =>",
							"(p) =>",
							"(prop) =>",
							" (k) => (v) =>",
							"(prop) =>",
							"(prop) =>",
							"(prop) =>",
							" () =>",
							"(g) =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							"(acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA+AAAASW5zdGFuY2UgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CkRhdGFGbiAoKQogIHQgPT4AAAAAAAAAAJ0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					920,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
						"symkeys":
						[
							[
								195,
								280
							],
							[
								572,
								588
							],
							[
								612,
								619
							],
							[
								689,
								705
							],
							[
								729,
								736
							]
						],
						"symlist":
						[
							"SchematicSymbol = ({ data, component = Fragment, id, class: className, ...props }) =>",
							"({ tagName }) =>",
							"data =>",
							"({ tagName }) =>",
							"data =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACdCAAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KVExpc3QgPSAoY2hpbGQsIGVsZW0pID0+CiAgcm91bmQgPSBuID0+CiAgZ2V0KHRhcmdldCwgcHJvcCkKRWFnbGVFbGVtZW50CiAgc3RhdGljIGdldChvd25lciwgcmVmLCByYXcpCiAgc3RhdGljIGNyZWF0ZSh0YWdOYW1lLCBhdHRyaWJ1dGVzID0ge30sIGNoaWxkcmVuID0gW10pCiAgY29uc3RydWN0b3Iob3duZXIsIHJlZiwgcmF3KQpFYWdsZU5vZGUKICBnZXQoKQogICgpID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogICgpID0+CiAgdiA9PgogIHYgPT4KICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgdiA9PgogICgpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHYgPT4KICBuYW1lID0+CiAgdiA9PgogICgpID0+CiAgaGZuID0gdmFsdWUgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICBlID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogICgpID0+CiAgKCkgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAobywgcCwgcikgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGNyZWYgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAoKSA9PgogIGUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbihlbGVtZW50KQogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oKQogIHZhbHVlID0+CiAgbiA9PgogIGdldCByZXBlYXRlcigpCihwdXNoLCBzdG9wKSA9PgooeyB2YWx1ZSwgZG9uZSB9KSA9PgogIC5wdXNoRXZlbnQgPSBmdW5jdGlvbiguLi5hcmdzKQooZWxlbSkgPT4KICBldmVudChuYW1lKQogIHN1YnNjcmliZShoYW5kbGVyKQogIHVuc3Vic2NyaWJlKGhhbmRsZXIpCiAgaCA9PgogIGdldCB0ZXh0KCkKICBnZXQgYXR0cmlidXRlcygpCiAgZ2V0TGF5ZXIoKQogIGxvb2t1cCh4cGF0aCwgY3JlYXRlKQogIChvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSAoaykgPT4gKHYpID0+CihwKSA9PgoocHJvcCkgPT4KICAoaykgPT4gKHYpID0+Cihwcm9wKSA9PgoocHJvcCkgPT4KKHByb3ApID0+CiAgKCkgPT4KKGcpID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgZ2V0IGNoYWluKCkKICBnZXRQYXJlbnQodGFnTmFtZSkKICBnZXQgc2hlZXQoKQogIGdldCBzaGVldE51bWJlcigpCiAgbmFtZXMoKQooYWNjLCBlbnRyeSkgPT4KICBzdGF0aWMga2V5cyhlbnRpdHkpCiAgc3RhdGljIHZhbHVlcyhlbnRpdHkpCiAgc3RhdGljIGVudHJpZXMoZW50aXR5KQogIHN0YXRpYyB0b09iamVjdChlKQogIGNoaWxkID0+CiAgY2hpbGQgPT4KICBzdGF0aWMgdG9BcnJheShlKQogIHRvU3RyaW5nKCkKKmdldEFsbChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KKHYsIHAsIG8pID0+CiAgZ2V0KHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CiAgZmluZChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCiAgKHYsIHAsIG8pID0+CiAgKHIsIHYsIHAsIG8pID0+CiAgKCkgPT4KICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgZ2V0IHBvcygpCiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAACLAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					921,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/functional.js",
						"symkeys":
						[
							[
								39,
								49
							],
							[
								54,
								65
							],
							[
								219,
								224
							],
							[
								794,
								799
							],
							[
								1181,
								1186
							],
							[
								1248,
								1270
							],
							[
								1327,
								1349
							],
							[
								1453,
								1473
							],
							[
								1537,
								1557
							],
							[
								1589,
								1600
							],
							[
								1624,
								1647
							],
							[
								1665,
								1676
							],
							[
								1737,
								1749
							],
							[
								1858,
								1873
							],
							[
								1918,
								1923
							],
							[
								1973,
								1987
							],
							[
								2014,
								2028
							],
							[
								2061,
								2075
							],
							[
								2127,
								2138
							],
							[
								2196,
								2200
							],
							[
								2254,
								2265
							],
							[
								2359,
								2371
							],
							[
								2465,
								2480
							],
							[
								2574,
								2592
							],
							[
								2686,
								2707
							],
							[
								2801,
								2825
							],
							[
								2919,
								2946
							],
							[
								3040,
								3070
							],
							[
								3164,
								3197
							],
							[
								3291,
								3327
							],
							[
								3422,
								3461
							],
							[
								3593,
								3612
							],
							[
								3674,
								3687
							],
							[
								3798,
								3803
							],
							[
								3939,
								3945
							],
							[
								3946,
								3961
							],
							[
								4029,
								4035
							],
							[
								4036,
								4054
							],
							[
								4123,
								4129
							],
							[
								4130,
								4151
							],
							[
								4204,
								4228
							],
							[
								4324,
								4341
							],
							[
								4526,
								4537
							],
							[
								4861,
								4867
							],
							[
								5031,
								5036
							],
							[
								5084,
								5103
							],
							[
								5256,
								5268
							],
							[
								5378,
								5389
							],
							[
								5425,
								5430
							],
							[
								5478,
								5497
							],
							[
								5650,
								5662
							],
							[
								5831,
								5842
							],
							[
								5875,
								5880
							],
							[
								5928,
								5950
							],
							[
								6122,
								6131
							],
							[
								6224,
								6236
							],
							[
								6352,
								6363
							],
							[
								6399,
								6404
							],
							[
								6452,
								6474
							],
							[
								6649,
								6664
							],
							[
								6830,
								6842
							],
							[
								7016,
								7027
							],
							[
								7059,
								7064
							],
							[
								7349,
								7354
							],
							[
								7441,
								7457
							],
							[
								7636,
								7651
							],
							[
								7874,
								7891
							],
							[
								8070,
								8085
							],
							[
								8333,
								8338
							],
							[
								8463,
								8474
							],
							[
								8698,
								8714
							],
							[
								8954,
								8971
							],
							[
								8972,
								8992
							],
							[
								9163,
								9176
							],
							[
								9325,
								9340
							],
							[
								9341,
								9359
							],
							[
								9680,
								9691
							],
							[
								9980,
								9995
							],
							[
								10183,
								10189
							],
							[
								10363,
								10372
							],
							[
								10428,
								10437
							],
							[
								10502,
								10513
							],
							[
								10674,
								10680
							],
							[
								10681,
								10697
							],
							[
								10759,
								10765
							],
							[
								10766,
								10780
							],
							[
								10920,
								10932
							],
							[
								11011,
								11022
							],
							[
								11351,
								11357
							],
							[
								11391,
								11402
							],
							[
								11601,
								11606
							],
							[
								11618,
								11623
							],
							[
								11643,
								11648
							],
							[
								11688,
								11699
							],
							[
								11841,
								11847
							],
							[
								11900,
								11911
							],
							[
								12137,
								12147
							],
							[
								12172,
								12178
							],
							[
								12235,
								12246
							],
							[
								12770,
								12780
							],
							[
								12846,
								12857
							],
							[
								13096,
								13106
							],
							[
								13303,
								13324
							],
							[
								13533,
								13566
							],
							[
								13738,
								13772
							],
							[
								13949,
								13962
							],
							[
								14023,
								14033
							],
							[
								14096,
								14109
							],
							[
								14172,
								14182
							],
							[
								14246,
								14256
							],
							[
								14416,
								14427
							],
							[
								14585,
								14596
							],
							[
								14847,
								14858
							],
							[
								15199,
								15209
							],
							[
								15526,
								15537
							],
							[
								15647,
								15657
							],
							[
								15710,
								15716
							],
							[
								15783,
								15793
							],
							[
								15824,
								15838
							],
							[
								16149,
								16160
							],
							[
								16325,
								16330
							],
							[
								16343,
								16360
							],
							[
								16577,
								16592
							],
							[
								16619,
								16636
							],
							[
								16778,
								16813
							],
							[
								16859,
								16873
							],
							[
								16973,
								16987
							],
							[
								17108,
								17114
							],
							[
								17217,
								17222
							],
							[
								17350,
								17361
							],
							[
								17601,
								17613
							],
							[
								18068,
								18073
							],
							[
								18128,
								18147
							],
							[
								18225,
								18230
							],
							[
								18302,
								18308
							],
							[
								18367,
								18376
							],
							[
								18558,
								18563
							],
							[
								18598,
								18603
							],
							[
								18626,
								18631
							],
							[
								18671,
								18680
							],
							[
								18847,
								18856
							],
							[
								19001,
								19010
							],
							[
								19027,
								19037
							],
							[
								19160,
								19174
							],
							[
								19555,
								19564
							],
							[
								20154,
								20166
							],
							[
								20212,
								20221
							],
							[
								20264,
								20273
							],
							[
								20293,
								20306
							],
							[
								20365,
								20376
							],
							[
								20487,
								20497
							],
							[
								20543,
								20554
							],
							[
								20665,
								20675
							],
							[
								20721,
								20732
							],
							[
								20843,
								20853
							],
							[
								20899,
								20910
							],
							[
								21021,
								21031
							],
							[
								21077,
								21088
							],
							[
								21199,
								21209
							],
							[
								21255,
								21266
							],
							[
								21420,
								21431
							],
							[
								21581,
								21590
							],
							[
								21627,
								21636
							],
							[
								21673,
								21682
							],
							[
								21719,
								21728
							],
							[
								21754,
								21759
							],
							[
								21811,
								21822
							],
							[
								21949,
								21959
							],
							[
								22115,
								22126
							],
							[
								22237,
								22247
							],
							[
								22298,
								22309
							],
							[
								22420,
								22430
							],
							[
								22453,
								22467
							],
							[
								22521,
								22532
							],
							[
								22640,
								22651
							],
							[
								22947,
								22958
							],
							[
								23066,
								23077
							],
							[
								23354,
								23359
							],
							[
								23375,
								23386
							],
							[
								23546,
								23557
							],
							[
								23930,
								23941
							],
							[
								24252,
								24263
							],
							[
								24384,
								24389
							],
							[
								24408,
								24419
							],
							[
								24433,
								24442
							],
							[
								24475,
								24492
							],
							[
								24590,
								24595
							],
							[
								24650,
								24673
							],
							[
								24743,
								24765
							],
							[
								25027,
								25051
							],
							[
								25152,
								25163
							],
							[
								25192,
								25214
							],
							[
								25563,
								25572
							],
							[
								25679,
								25690
							],
							[
								25909,
								25920
							],
							[
								26044,
								26050
							],
							[
								26162,
								26167
							],
							[
								26217,
								26231
							],
							[
								26246,
								26257
							],
							[
								26511,
								26531
							],
							[
								26569,
								26574
							]
						],
						"symlist":
						[
							"Functional",
							"static I(a)",
							" a =>",
							" a =>",
							"() =>",
							"isobject = function(o)",
							"isobjobj = function(o)",
							"iscons = function(o)",
							"isprot = function(o)",
							"constructor",
							"isprotobj = function(o)",
							"constructor",
							" function(o)",
							"static isdef(o)",
							" a =>",
							"static head(a)",
							"static tail(a)",
							"static last(a)",
							" (n, fn) =>",
							"n =>",
							" function()",
							" function(a)",
							" function(a, b)",
							" function(a, b, c)",
							" function(a, b, c, d)",
							" function(a, b, c, d, e)",
							" function(a, b, c, d, e, f)",
							" function(a, b, c, d, e, f, g)",
							" function(a, b, c, d, e, f, g, h)",
							" function(a, b, c, d, e, f, g, h, i)",
							" function(a, b, c, d, e, f, g, h, i, j)",
							"static arity(fn, n)",
							" function(fn)",
							" f =>",
							" fn =>",
							" function(a)",
							" fn =>",
							" function(a, b)",
							" fn =>",
							" function(a, b, c)",
							"static _defprop(t, n, v)",
							" (n, v, f, as) =>",
							" function()",
							" () =>",
							" f =>",
							"f2 = function(a, b)",
							" function(a)",
							" () =>",
							" f =>",
							"f2 = function(a, b)",
							" function(a)",
							" () =>",
							" f =>",
							"f2 = function(a, b, c)",
							"(a, b) =>",
							" function(a)",
							" () =>",
							" f =>",
							"f2 = function(a, b, c)",
							"function (a, b)",
							" function(a)",
							" () =>",
							" f =>",
							" f =>",
							"static partial()",
							"fn = function()",
							"static partialr()",
							"fn = function()",
							" f =>",
							" function()",
							"static compose()",
							" (f, g) =>",
							" function()",
							"static pipe()",
							" (f, g) =>",
							" function()",
							"function ()",
							"fn = function()",
							" fn =>",
							"(a, s) =>",
							"(a, f) =>",
							"function ()",
							" fn =>",
							" function(as)",
							" fn =>",
							" function()",
							"(c, t, f) =>",
							"function ()",
							" fn =>",
							"function ()",
							" v =>",
							"() =>",
							" n =>",
							" function()",
							" fn =>",
							" function()",
							"(as, n) =>",
							" cs =>",
							" function()",
							"(as, a) =>",
							"function ()",
							"(as, f) =>",
							"static _filter(as, f)",
							"static _fold(as, f, acc, arrInit)",
							"static _foldr(as, f, acc, arrInit)",
							"(as, f, v) =>",
							"(as, f) =>",
							"(as, f, v) =>",
							"(as, f) =>",
							"(as, v) =>",
							"(as, fn) =>",
							"(as, fn) =>",
							"(as, fn) =>",
							"(as, f) =>",
							"(as, fn) =>",
							" (v, i) =>",
							" as =>",
							" (v, i) =>",
							"static merge()",
							"function ()",
							"() =>",
							"isthenable = p =>",
							"thenbind = p =>",
							"firstthen = as =>",
							"promapply = errfn => (pfn, parg) =>",
							"onacc = arg =>",
							"onrej = err =>",
							"_fn =>",
							" f =>",
							" function()",
							"alws = () =>",
							" f =>",
							"static _ispfail(fn)",
							"() =>",
							" as =>",
							"(o, k) =>",
							" o =>",
							" o =>",
							" k =>",
							"(o, f) =>",
							"(o, f) =>",
							"(o, t) =>",
							" (k, v) =>",
							" function()",
							"(k, v) =>",
							"(s, m, n) =>",
							"(s, n) =>",
							"(s, n) =>",
							"static len(t)",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							"function ()",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"() =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"function ()",
							" (a, b) =>",
							"static nnot(a)",
							"function ()",
							"function ()",
							"function ()",
							"function ()",
							" f =>",
							"function ()",
							"function ()",
							"function ()",
							"function ()",
							"() =>",
							"fn = obj =>",
							"(k, v) =>",
							" function(ks, vs)",
							"() =>",
							"eqtype = function(a, b)",
							"eqarr = function(a, b)",
							"eqplain = function(a, b)",
							"(s1, s2) =>",
							"eqobj = function(a, b)",
							"(a, b) =>",
							"function ()",
							" function()",
							" fn =>",
							"() =>",
							" function(exp)",
							" function()",
							"valid = function(as)",
							" a =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACLAAAAU2NoZW1hdGljU3ltYm9sID0gKHsgZGF0YSwgY29tcG9uZW50ID0gRnJhZ21lbnQsIGlkLCBjbGFzczogY2xhc3NOYW1lLCAuLi5wcm9wcyB9KSA9PgooeyB0YWdOYW1lIH0pID0+CiAgZGF0YSA9PgooeyB0YWdOYW1lIH0pID0+CiAgZGF0YSA9PgAAAAAAAAAA/wkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					922,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/CQAARnVuY3Rpb25hbAogIHN0YXRpYyBJKGEpCiAgYSA9PgogIGEgPT4KKCkgPT4KICBpc29iamVjdCA9IGZ1bmN0aW9uKG8pCiAgaXNvYmpvYmogPSBmdW5jdGlvbihvKQogIGlzY29ucyA9IGZ1bmN0aW9uKG8pCiAgaXNwcm90ID0gZnVuY3Rpb24obykKICBjb25zdHJ1Y3RvcgogIGlzcHJvdG9iaiA9IGZ1bmN0aW9uKG8pCiAgY29uc3RydWN0b3IKICBmdW5jdGlvbihvKQogIHN0YXRpYyBpc2RlZihvKQogIGEgPT4KICBzdGF0aWMgaGVhZChhKQogIHN0YXRpYyB0YWlsKGEpCiAgc3RhdGljIGxhc3QoYSkKICAobiwgZm4pID0+CiAgbiA9PgogIGZ1bmN0aW9uKCkKICBmdW5jdGlvbihhKQogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYiwgYykKICBmdW5jdGlvbihhLCBiLCBjLCBkKQogIGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUpCiAgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZikKICBmdW5jdGlvbihhLCBiLCBjLCBkLCBlLCBmLCBnKQogIGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUsIGYsIGcsIGgpCiAgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZiwgZywgaCwgaSkKICBmdW5jdGlvbihhLCBiLCBjLCBkLCBlLCBmLCBnLCBoLCBpLCBqKQogIHN0YXRpYyBhcml0eShmbiwgbikKICBmdW5jdGlvbihmbikKICBmID0+CiAgZm4gPT4KICBmdW5jdGlvbihhKQogIGZuID0+CiAgZnVuY3Rpb24oYSwgYikKICBmbiA9PgogIGZ1bmN0aW9uKGEsIGIsIGMpCiAgc3RhdGljIF9kZWZwcm9wKHQsIG4sIHYpCiAgKG4sIHYsIGYsIGFzKSA9PgogIGZ1bmN0aW9uKCkKICAoKSA9PgogIGYgPT4KICBmMiA9IGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSkKICAoKSA9PgogIGYgPT4KICBmMiA9IGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSkKICAoKSA9PgogIGYgPT4KICBmMiA9IGZ1bmN0aW9uKGEsIGIsIGMpCihhLCBiKSA9PgogIGZ1bmN0aW9uKGEpCiAgKCkgPT4KICBmID0+CiAgZjIgPSBmdW5jdGlvbihhLCBiLCBjKQooYSwgYikKICBmdW5jdGlvbihhKQogICgpID0+CiAgZiA9PgogIGYgPT4KICBzdGF0aWMgcGFydGlhbCgpCiAgZm4gPSBmdW5jdGlvbigpCiAgc3RhdGljIHBhcnRpYWxyKCkKICBmbiA9IGZ1bmN0aW9uKCkKICBmID0+CiAgZnVuY3Rpb24oKQogIHN0YXRpYyBjb21wb3NlKCkKICAoZiwgZykgPT4KICBmdW5jdGlvbigpCiAgc3RhdGljIHBpcGUoKQogIChmLCBnKSA9PgogIGZ1bmN0aW9uKCkKKCkKICBmbiA9IGZ1bmN0aW9uKCkKICBmbiA9PgooYSwgcykgPT4KKGEsIGYpID0+CigpCiAgZm4gPT4KICBmdW5jdGlvbihhcykKICBmbiA9PgogIGZ1bmN0aW9uKCkKKGMsIHQsIGYpID0+CigpCiAgZm4gPT4KKCkKICB2ID0+CigpID0+CiAgbiA9PgogIGZ1bmN0aW9uKCkKICBmbiA9PgogIGZ1bmN0aW9uKCkKKGFzLCBuKSA9PgogIGNzID0+CiAgZnVuY3Rpb24oKQooYXMsIGEpID0+CigpCihhcywgZikgPT4KICBzdGF0aWMgX2ZpbHRlcihhcywgZikKICBzdGF0aWMgX2ZvbGQoYXMsIGYsIGFjYywgYXJySW5pdCkKICBzdGF0aWMgX2ZvbGRyKGFzLCBmLCBhY2MsIGFyckluaXQpCihhcywgZiwgdikgPT4KKGFzLCBmKSA9PgooYXMsIGYsIHYpID0+CihhcywgZikgPT4KKGFzLCB2KSA9PgooYXMsIGZuKSA9PgooYXMsIGZuKSA9PgooYXMsIGZuKSA9PgooYXMsIGYpID0+CihhcywgZm4pID0+CiAgKHYsIGkpID0+CiAgYXMgPT4KICAodiwgaSkgPT4KICBzdGF0aWMgbWVyZ2UoKQooKQooKSA9PgogIGlzdGhlbmFibGUgPSBwID0+CiAgdGhlbmJpbmQgPSBwID0+CiAgZmlyc3R0aGVuID0gYXMgPT4KICBwcm9tYXBwbHkgPSBlcnJmbiA9PiAocGZuLCBwYXJnKSA9PgogIG9uYWNjID0gYXJnID0+CiAgb25yZWogPSBlcnIgPT4KICBfZm4gPT4KICBmID0+CiAgZnVuY3Rpb24oKQogIGFsd3MgPSAoKSA9PgogIGYgPT4KICBzdGF0aWMgX2lzcGZhaWwoZm4pCigpID0+CiAgYXMgPT4KKG8sIGspID0+CiAgbyA9PgogIG8gPT4KICBrID0+CihvLCBmKSA9PgoobywgZikgPT4KKG8sIHQpID0+CiAgKGssIHYpID0+CiAgZnVuY3Rpb24oKQooaywgdikgPT4KKHMsIG0sIG4pID0+CihzLCBuKSA9PgoocywgbikgPT4KICBzdGF0aWMgbGVuKHQpCigpCiAgKGEsIGIpID0+CigpCiAgKGEsIGIpID0+CigpCiAgKGEsIGIpID0+CigpCiAgKGEsIGIpID0+CigpCiAgKGEsIGIpID0+CigpCigpCihhLCBiKSA9PgooYSwgYikgPT4KKGEsIGIpID0+CihhLCBiKSA9PgooKSA9PgooKQogIChhLCBiKSA9PgooKQogIChhLCBiKSA9PgooKQogIChhLCBiKSA9PgogIHN0YXRpYyBubm90KGEpCigpCigpCigpCigpCiAgZiA9PgooKQooKQooKQooKQooKSA9PgogIGZuID0gb2JqID0+CihrLCB2KSA9PgogIGZ1bmN0aW9uKGtzLCB2cykKKCkgPT4KICBlcXR5cGUgPSBmdW5jdGlvbihhLCBiKQogIGVxYXJyID0gZnVuY3Rpb24oYSwgYikKICBlcXBsYWluID0gZnVuY3Rpb24oYSwgYikKKHMxLCBzMikgPT4KICBlcW9iaiA9IGZ1bmN0aW9uKGEsIGIpCihhLCBiKSA9PgooKQogIGZ1bmN0aW9uKCkKICBmbiA9PgooKSA9PgogIGZ1bmN0aW9uKGV4cCkKICBmdW5jdGlvbigpCiAgdmFsaWQgPSBmdW5jdGlvbihhcykKICBhID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					923,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3721,
								3743
							],
							[
								4288,
								4297
							],
							[
								4323,
								4335
							],
							[
								6056,
								6067
							],
							[
								6751,
								6795
							],
							[
								6921,
								6941
							],
							[
								7103,
								7113
							],
							[
								7141,
								7151
							],
							[
								8004,
								8013
							],
							[
								8764,
								8788
							],
							[
								8914,
								8918
							],
							[
								9013,
								9026
							],
							[
								9113,
								9134
							],
							[
								9493,
								9509
							],
							[
								9752,
								9757
							],
							[
								9795,
								9810
							],
							[
								9971,
								9979
							],
							[
								10020,
								10028
							],
							[
								10236,
								10260
							],
							[
								10424,
								10438
							],
							[
								10519,
								10532
							],
							[
								10596,
								10605
							],
							[
								10684,
								10694
							],
							[
								10758,
								10768
							],
							[
								10812,
								10840
							],
							[
								10907,
								10941
							],
							[
								10975,
								10980
							],
							[
								11617,
								11665
							],
							[
								11783,
								11792
							],
							[
								11955,
								11959
							],
							[
								12067,
								12097
							],
							[
								12339,
								12347
							],
							[
								12414,
								12418
							],
							[
								12508,
								12515
							],
							[
								12817,
								12841
							],
							[
								13086,
								13091
							],
							[
								14826,
								14870
							],
							[
								15317,
								15343
							],
							[
								16069,
								16092
							],
							[
								16212,
								16234
							],
							[
								16485,
								16489
							],
							[
								16977,
								16981
							],
							[
								17598,
								17627
							],
							[
								17652,
								17656
							],
							[
								17732,
								17755
							],
							[
								17799,
								17805
							],
							[
								17833,
								17837
							],
							[
								17853,
								17890
							],
							[
								17912,
								17928
							],
							[
								17948,
								17955
							],
							[
								18012,
								18040
							],
							[
								18094,
								18105
							],
							[
								18188,
								18196
							],
							[
								18292,
								18296
							],
							[
								18446,
								18450
							],
							[
								18548,
								18553
							],
							[
								18613,
								18624
							],
							[
								18696,
								18707
							],
							[
								18799,
								18804
							],
							[
								18859,
								18865
							],
							[
								18962,
								18970
							],
							[
								19145,
								19174
							],
							[
								19267,
								19320
							],
							[
								19473,
								19477
							],
							[
								19531,
								19535
							],
							[
								19820,
								19827
							],
							[
								19849,
								19855
							],
							[
								19884,
								19915
							],
							[
								20058,
								20082
							],
							[
								20213,
								20224
							],
							[
								20247,
								20263
							],
							[
								20422,
								20427
							],
							[
								20451,
								20455
							],
							[
								20508,
								20517
							],
							[
								20590,
								20595
							],
							[
								20733,
								20738
							],
							[
								20865,
								20876
							],
							[
								20965,
								20972
							],
							[
								21564,
								21580
							],
							[
								23446,
								23480
							],
							[
								23819,
								23833
							],
							[
								23961,
								23965
							],
							[
								23987,
								24001
							],
							[
								24032,
								24036
							],
							[
								25358,
								25374
							],
							[
								25424,
								25439
							],
							[
								25508,
								25527
							],
							[
								25550,
								25562
							],
							[
								25651,
								25655
							],
							[
								25754,
								25758
							],
							[
								25977,
								25983
							],
							[
								26078,
								26092
							],
							[
								26126,
								26144
							],
							[
								26286,
								26298
							],
							[
								26328,
								26400
							],
							[
								26633,
								26638
							],
							[
								27344,
								27348
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AQAAAAAAAAAAAAAA8wUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					924,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					925,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					926,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41425,
								41435
							],
							[
								41698,
								41718
							],
							[
								41731,
								41744
							],
							[
								41762,
								41767
							],
							[
								41792,
								41806
							],
							[
								41843,
								41858
							],
							[
								42252,
								42267
							],
							[
								42455,
								42472
							],
							[
								42787,
								42810
							],
							[
								42875,
								42896
							],
							[
								43079,
								43104
							],
							[
								43807,
								43814
							],
							[
								43867,
								43891
							],
							[
								44156,
								44165
							],
							[
								44253,
								44259
							],
							[
								44312,
								44317
							],
							[
								44372,
								44378
							],
							[
								44504,
								44519
							],
							[
								44587,
								44608
							],
							[
								44759,
								44779
							],
							[
								44950,
								44960
							],
							[
								45353,
								45360
							],
							[
								45500,
								45506
							],
							[
								45539,
								45567
							],
							[
								45656,
								45683
							],
							[
								45761,
								45766
							],
							[
								45875,
								45892
							],
							[
								46064,
								46080
							],
							[
								46420,
								46436
							],
							[
								46902,
								46914
							],
							[
								47130,
								47138
							],
							[
								47696,
								47707
							],
							[
								50435,
								50441
							],
							[
								50480,
								50484
							],
							[
								50525,
								50529
							],
							[
								50562,
								50573
							],
							[
								50607,
								50611
							],
							[
								50651,
								50659
							],
							[
								50764,
								50783
							],
							[
								50875,
								50894
							],
							[
								50956,
								50974
							],
							[
								51066,
								51089
							],
							[
								51490,
								51519
							],
							[
								51578,
								51609
							],
							[
								51766,
								51791
							],
							[
								51900,
								51948
							],
							[
								52236,
								52262
							],
							[
								52491,
								52495
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AQAAAAAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					927,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								2942,
								2966
							],
							[
								3047,
								3055
							],
							[
								3238,
								3292
							],
							[
								3489,
								3509
							],
							[
								3721,
								3743
							],
							[
								4288,
								4297
							],
							[
								4323,
								4335
							],
							[
								6056,
								6067
							],
							[
								6751,
								6795
							],
							[
								6921,
								6941
							],
							[
								7103,
								7113
							],
							[
								7141,
								7151
							],
							[
								8004,
								8013
							],
							[
								8764,
								8788
							],
							[
								8914,
								8918
							],
							[
								9013,
								9026
							],
							[
								9113,
								9134
							],
							[
								9493,
								9509
							],
							[
								9752,
								9757
							],
							[
								9795,
								9810
							],
							[
								9971,
								9979
							],
							[
								10020,
								10028
							],
							[
								10236,
								10260
							],
							[
								10424,
								10438
							],
							[
								10519,
								10532
							],
							[
								10596,
								10605
							],
							[
								10684,
								10694
							],
							[
								10758,
								10768
							],
							[
								10812,
								10840
							],
							[
								10907,
								10941
							],
							[
								10975,
								10980
							],
							[
								11617,
								11665
							],
							[
								11783,
								11792
							],
							[
								11955,
								11959
							],
							[
								12067,
								12097
							],
							[
								12339,
								12347
							],
							[
								12414,
								12418
							],
							[
								12508,
								12515
							],
							[
								12817,
								12841
							],
							[
								13086,
								13091
							],
							[
								14826,
								14870
							],
							[
								15317,
								15343
							],
							[
								16069,
								16092
							],
							[
								16212,
								16234
							],
							[
								16485,
								16489
							],
							[
								16977,
								16981
							],
							[
								17598,
								17627
							],
							[
								17652,
								17656
							],
							[
								17732,
								17755
							],
							[
								17799,
								17805
							],
							[
								17833,
								17837
							],
							[
								17853,
								17890
							],
							[
								17912,
								17928
							],
							[
								17948,
								17955
							],
							[
								18012,
								18040
							],
							[
								18094,
								18105
							],
							[
								18188,
								18196
							],
							[
								18292,
								18296
							],
							[
								18446,
								18450
							],
							[
								18548,
								18553
							],
							[
								18613,
								18624
							],
							[
								18696,
								18707
							],
							[
								18799,
								18804
							],
							[
								18859,
								18865
							],
							[
								18962,
								18970
							],
							[
								19145,
								19174
							],
							[
								19267,
								19320
							],
							[
								19473,
								19477
							],
							[
								19531,
								19535
							],
							[
								19820,
								19827
							],
							[
								19849,
								19855
							],
							[
								19884,
								19915
							],
							[
								20058,
								20082
							],
							[
								20213,
								20224
							],
							[
								20247,
								20263
							],
							[
								20422,
								20427
							],
							[
								20451,
								20455
							],
							[
								20508,
								20517
							],
							[
								20590,
								20595
							],
							[
								20733,
								20738
							],
							[
								20865,
								20876
							],
							[
								20965,
								20972
							],
							[
								21564,
								21580
							],
							[
								23446,
								23480
							],
							[
								23819,
								23833
							],
							[
								23961,
								23965
							],
							[
								23987,
								24001
							],
							[
								24032,
								24036
							],
							[
								25358,
								25374
							],
							[
								25424,
								25439
							],
							[
								25508,
								25527
							],
							[
								25550,
								25562
							],
							[
								25651,
								25655
							],
							[
								25754,
								25758
							],
							[
								25977,
								25983
							],
							[
								26078,
								26092
							],
							[
								26126,
								26144
							],
							[
								26286,
								26298
							],
							[
								26328,
								26400
							],
							[
								26633,
								26638
							],
							[
								27344,
								27348
							]
						],
						"symlist":
						[
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc)",
							"function main(...args)",
							" () =>",
							" value =>",
							"toNumber(n)",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"quit(arg)",
							" (module, ...args) =>",
							"m =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"findLastIndex(predicate)",
							"rotateRight(n)",
							"rotateLeft(n)",
							"at(index)",
							"get head()",
							"get tail()",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"async function importModule(moduleName, ...args)",
							"module =>",
							"e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAPMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					928,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAADzBQAAICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgdmFsdWUgPT4KICB0b051bWJlcihuKQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIHF1aXQoYXJnKQogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5leGl0ID0gKCkgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KICAuc2hvdyA9IHZhbHVlID0+CigpID0+CihpdGVtLCBpLCBhKSA9PgogIGVudHJ5ID0+CiAgZW50cnkgPT4KICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICByb3RhdGVSaWdodChuKQogIHJvdGF0ZUxlZnQobikKICBhdChpbmRleCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQogIGUgPT4KICBpbXBvcnRNb2R1bGUobW9kdWxlTmFtZSwgLi4uYXJncykKICBtb2R1bGUgPT4KICBlID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CiAgZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KICBlID0+CiAgZSA9PgooYSwgYikgPT4KICBpZCA9PgogIGlkID0+CihbbiwgZV0pID0+CiAgbmFtZSA9PgooYWNjLCBbbiwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+CiAgKFtrLCB2XSkgPT4KRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCiAgbiA9PgogIGUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					929,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					930,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41425,
								41435
							],
							[
								41698,
								41718
							],
							[
								41731,
								41744
							],
							[
								41762,
								41767
							],
							[
								41792,
								41806
							],
							[
								41843,
								41858
							],
							[
								42252,
								42267
							],
							[
								42455,
								42472
							],
							[
								42787,
								42810
							],
							[
								42875,
								42896
							],
							[
								43079,
								43104
							],
							[
								43807,
								43814
							],
							[
								43867,
								43891
							],
							[
								44156,
								44165
							],
							[
								44253,
								44259
							],
							[
								44312,
								44317
							],
							[
								44372,
								44378
							],
							[
								44504,
								44519
							],
							[
								44587,
								44608
							],
							[
								44759,
								44779
							],
							[
								44950,
								44960
							],
							[
								45353,
								45360
							],
							[
								45500,
								45506
							],
							[
								45539,
								45567
							],
							[
								45656,
								45683
							],
							[
								45761,
								45766
							],
							[
								45875,
								45892
							],
							[
								46064,
								46080
							],
							[
								46420,
								46436
							],
							[
								46902,
								46914
							],
							[
								47130,
								47138
							],
							[
								47696,
								47707
							],
							[
								50435,
								50441
							],
							[
								50480,
								50484
							],
							[
								50525,
								50529
							],
							[
								50562,
								50573
							],
							[
								50607,
								50611
							],
							[
								50651,
								50659
							],
							[
								50764,
								50783
							],
							[
								50875,
								50894
							],
							[
								50956,
								50974
							],
							[
								51066,
								51089
							],
							[
								51490,
								51519
							],
							[
								51578,
								51609
							],
							[
								51766,
								51791
							],
							[
								51900,
								51948
							],
							[
								52236,
								52262
							],
							[
								52491,
								52495
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"AQAAAAAAAAAAAAAArQkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					931,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
						"symkeys":
						[
							[
								1690,
								1719
							],
							[
								2002,
								2036
							],
							[
								2076,
								2094
							],
							[
								3634,
								3639
							],
							[
								3681,
								3686
							],
							[
								3830,
								3834
							],
							[
								4177,
								4214
							],
							[
								7286,
								7292
							],
							[
								7348,
								7369
							],
							[
								7415,
								7420
							],
							[
								7468,
								7484
							],
							[
								7616,
								7634
							],
							[
								7727,
								7734
							],
							[
								7802,
								7814
							],
							[
								7890,
								7897
							],
							[
								7904,
								7918
							],
							[
								8071,
								8091
							],
							[
								8129,
								8147
							],
							[
								8201,
								8219
							],
							[
								8309,
								8323
							],
							[
								8393,
								8410
							],
							[
								8444,
								8470
							],
							[
								9452,
								9476
							],
							[
								9765,
								9783
							],
							[
								9874,
								9902
							],
							[
								10259,
								10274
							],
							[
								10437,
								10462
							],
							[
								10489,
								10514
							],
							[
								10571,
								10595
							],
							[
								10700,
								10732
							],
							[
								10949,
								10980
							],
							[
								11108,
								11139
							],
							[
								11477,
								11502
							],
							[
								12217,
								12243
							],
							[
								12972,
								13002
							],
							[
								13564,
								13595
							],
							[
								15392,
								15404
							],
							[
								17139,
								17149
							],
							[
								17432,
								17442
							],
							[
								17607,
								17619
							],
							[
								17656,
								17674
							],
							[
								18204,
								18218
							],
							[
								18434,
								18452
							],
							[
								18531,
								18542
							],
							[
								18590,
								18612
							],
							[
								18666,
								18684
							],
							[
								20057,
								20076
							],
							[
								20253,
								20266
							],
							[
								20433,
								20446
							],
							[
								20515,
								20540
							],
							[
								21772,
								21799
							],
							[
								22299,
								22326
							],
							[
								23340,
								23365
							],
							[
								23495,
								23508
							],
							[
								23971,
								23985
							],
							[
								25383,
								25400
							],
							[
								25530,
								25534
							],
							[
								25552,
								25556
							],
							[
								25673,
								25688
							],
							[
								26584,
								26601
							],
							[
								26679,
								26696
							],
							[
								26772,
								26798
							],
							[
								30284,
								30299
							],
							[
								32207,
								32213
							],
							[
								32242,
								32252
							],
							[
								32280,
								32294
							],
							[
								33860,
								33873
							],
							[
								34068,
								34093
							],
							[
								34265,
								34270
							],
							[
								34564,
								34589
							],
							[
								34767,
								34774
							],
							[
								34805,
								34812
							],
							[
								35063,
								35077
							],
							[
								35166,
								35181
							],
							[
								35335,
								35353
							],
							[
								35698,
								35721
							],
							[
								35766,
								35788
							],
							[
								35832,
								35852
							],
							[
								35925,
								35938
							],
							[
								35968,
								35980
							],
							[
								36015,
								36026
							],
							[
								36191,
								36201
							],
							[
								36268,
								36295
							],
							[
								36722,
								36732
							],
							[
								36820,
								36837
							],
							[
								37686,
								37699
							],
							[
								37876,
								37900
							],
							[
								38415,
								38432
							],
							[
								38680,
								38688
							],
							[
								38712,
								38736
							],
							[
								41061,
								41091
							],
							[
								41139,
								41146
							],
							[
								41167,
								41174
							],
							[
								41271,
								41281
							],
							[
								41425,
								41435
							],
							[
								41777,
								41797
							],
							[
								41810,
								41823
							],
							[
								41841,
								41846
							],
							[
								41871,
								41885
							],
							[
								41922,
								41937
							],
							[
								42331,
								42346
							],
							[
								42534,
								42551
							],
							[
								42866,
								42889
							],
							[
								42954,
								42975
							],
							[
								43158,
								43183
							],
							[
								43886,
								43893
							],
							[
								43946,
								43970
							],
							[
								44235,
								44244
							],
							[
								44332,
								44338
							],
							[
								44391,
								44396
							],
							[
								44451,
								44457
							],
							[
								44583,
								44598
							],
							[
								44666,
								44687
							],
							[
								44838,
								44858
							],
							[
								45029,
								45039
							],
							[
								45432,
								45439
							],
							[
								45579,
								45585
							],
							[
								45618,
								45646
							],
							[
								45735,
								45762
							],
							[
								45840,
								45845
							],
							[
								45954,
								45971
							],
							[
								46143,
								46159
							],
							[
								46499,
								46515
							],
							[
								46981,
								46993
							],
							[
								47209,
								47217
							],
							[
								47775,
								47786
							],
							[
								50514,
								50520
							],
							[
								50559,
								50563
							],
							[
								50604,
								50608
							],
							[
								50641,
								50652
							],
							[
								50686,
								50690
							],
							[
								50730,
								50738
							],
							[
								50843,
								50862
							],
							[
								50954,
								50973
							],
							[
								51035,
								51053
							],
							[
								51145,
								51168
							],
							[
								51569,
								51598
							],
							[
								51657,
								51688
							],
							[
								51845,
								51870
							],
							[
								51979,
								52027
							],
							[
								52315,
								52341
							],
							[
								52570,
								52574
							]
						],
						"symlist":
						[
							"function define(obj, ...args)",
							"function once(fn, thisArg, memoFn)",
							" function(...args)",
							"fd =>",
							"() =>",
							"REPL",
							"constructor(name, show_banner = true)",
							" () =>",
							"addCleanupHandler(fn)",
							"() =>",
							".cleanup = () =>",
							"exit(exitCode = 0)",
							"abort()",
							"acceptLine()",
							"alert()",
							"backwardChar()",
							"backwardDeleteChar()",
							"backwardKillLine()",
							"backwardKillWord()",
							"backwardWord()",
							"beginningOfLine()",
							"bigfloatToString(a, radix)",
							"bigintToString(a, radix)",
							"cmdReadlineStart()",
							"cmdStart(show_banner = true)",
							"colorizeJs(str)",
							" function pushState(c)",
							" function lastState(c)",
							" function popState(c)",
							" function parseBlockComment()",
							" function parseLineComment()",
							" function parseString(delim)",
							" function parseRegex()",
							" function parseNumber()",
							" function parseIdentifier()",
							" function setStyle(from, to)",
							"completion()",
							"controlC()",
							"controlD()",
							"deleteChar()",
							"deleteCharDir(dir)",
							"downcaseWord()",
							"dupstr(str, count)",
							"endOfLine()",
							"readlineRemovePrompt()",
							"evalAndPrint(expr)",
							"extractDirective(a)",
							"forwardChar()",
							"forwardWord()",
							"getCompletions(line, pos)",
							" function symcmp(a, b)",
							"getContextObject(line, pos)",
							"getContextWord(line, pos)",
							"handleByte(c)",
							"handleChar(c1)",
							"handleMouse(keys)",
							"p =>",
							"p =>",
							"handleCmd(expr)",
							"hasDirective(cmd)",
							"getDirective(cmd)",
							"handleDirective(cmd, expr)",
							"handleKey(keys)",
							"help()",
							"sel = n =>",
							"putline = s =>",
							"historyFile()",
							"historyLoad(filename, fs)",
							"() =>",
							"historySave(filename, fs)",
							"line =>",
							"line =>",
							"historyClear()",
							"historyAdd(str)",
							"historySearch(dir)",
							"historySearchBackward()",
							"historySearchForward()",
							"set history(entries)",
							"get history()",
							"historyPos()",
							"insert(str)",
							"killLine()",
							"killRegion(start, end, dir)",
							"killWord()",
							"moveCursor(delta)",
							"nextHistory()",
							"numberToString(a, radix)",
							"previousHistory()",
							"print(a)",
							" function printRec(a)",
							"printStatus(fn, prompt = true)",
							" arg =>",
							" arg =>",
							"fn = () =>",
							"fn = () =>",
							"printFunction(logFn)",
							" (...args) =>",
							"() =>",
							"quotedInsert()",
							"reverseSearch()",
							"forwardSearch()",
							"searchCb(pattern)",
							"readlineHandleCmd(expr)",
							"readlinePrintPrompt()",
							"readlineStart(defstr, cb)",
							"reset()",
							"async run(banner = true)",
							"runSync()",
							" () =>",
							"() =>",
							"stop()",
							"sigintHandler()",
							"skipWordBackward(pos)",
							"skipWordForward(pos)",
							"termInit()",
							" arg =>",
							" () =>",
							"mouseTracking(enable = true)",
							"setupMouseTracking(fs = fs)",
							"() =>",
							"termReadHandler()",
							"transposeChars()",
							"transposeWords()",
							"upcaseWord()",
							"update()",
							"([i, c]) =>",
							"yank()",
							"REPL",
							"REPL",
							" file =>",
							"m =>",
							"error =>",
							"function isAlpha(c)",
							"function isDigit(c)",
							"function isWord(c)",
							"function ucsLength(str)",
							"function rotateLeft(array, n)",
							"function isTrailingSurrogate(c)",
							"function isBalanced(a, b)",
							"function printColorText(str, start, style_names)",
							"function printCsi(n, code)",
							"REPL"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAK0JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtCQAAICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGZkID0+CigpID0+ClJFUEwKICBjb25zdHJ1Y3RvcihuYW1lLCBzaG93X2Jhbm5lciA9IHRydWUpCiAgKCkgPT4KICBhZGRDbGVhbnVwSGFuZGxlcihmbikKKCkgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgZXhpdChleGl0Q29kZSA9IDApCiAgYWJvcnQoKQogIGFjY2VwdExpbmUoKQogIGFsZXJ0KCkKICBiYWNrd2FyZENoYXIoKQogIGJhY2t3YXJkRGVsZXRlQ2hhcigpCiAgYmFja3dhcmRLaWxsTGluZSgpCiAgYmFja3dhcmRLaWxsV29yZCgpCiAgYmFja3dhcmRXb3JkKCkKICBiZWdpbm5pbmdPZkxpbmUoKQogIGJpZ2Zsb2F0VG9TdHJpbmcoYSwgcmFkaXgpCiAgYmlnaW50VG9TdHJpbmcoYSwgcmFkaXgpCiAgY21kUmVhZGxpbmVTdGFydCgpCiAgY21kU3RhcnQoc2hvd19iYW5uZXIgPSB0cnVlKQogIGNvbG9yaXplSnMoc3RyKQogIHB1c2hTdGF0ZShjKQogIGxhc3RTdGF0ZShjKQogIHBvcFN0YXRlKGMpCiAgcGFyc2VCbG9ja0NvbW1lbnQoKQogIHBhcnNlTGluZUNvbW1lbnQoKQogIHBhcnNlU3RyaW5nKGRlbGltKQogIHBhcnNlUmVnZXgoKQogIHBhcnNlTnVtYmVyKCkKICBwYXJzZUlkZW50aWZpZXIoKQogIHNldFN0eWxlKGZyb20sIHRvKQogIGNvbXBsZXRpb24oKQogIGNvbnRyb2xDKCkKICBjb250cm9sRCgpCiAgZGVsZXRlQ2hhcigpCiAgZGVsZXRlQ2hhckRpcihkaXIpCiAgZG93bmNhc2VXb3JkKCkKICBkdXBzdHIoc3RyLCBjb3VudCkKICBlbmRPZkxpbmUoKQogIHJlYWRsaW5lUmVtb3ZlUHJvbXB0KCkKICBldmFsQW5kUHJpbnQoZXhwcikKICBleHRyYWN0RGlyZWN0aXZlKGEpCiAgZm9yd2FyZENoYXIoKQogIGZvcndhcmRXb3JkKCkKICBnZXRDb21wbGV0aW9ucyhsaW5lLCBwb3MpCiAgc3ltY21wKGEsIGIpCiAgZ2V0Q29udGV4dE9iamVjdChsaW5lLCBwb3MpCiAgZ2V0Q29udGV4dFdvcmQobGluZSwgcG9zKQogIGhhbmRsZUJ5dGUoYykKICBoYW5kbGVDaGFyKGMxKQogIGhhbmRsZU1vdXNlKGtleXMpCiAgcCA9PgogIHAgPT4KICBoYW5kbGVDbWQoZXhwcikKICBoYXNEaXJlY3RpdmUoY21kKQogIGdldERpcmVjdGl2ZShjbWQpCiAgaGFuZGxlRGlyZWN0aXZlKGNtZCwgZXhwcikKICBoYW5kbGVLZXkoa2V5cykKICBoZWxwKCkKICBzZWwgPSBuID0+CiAgcHV0bGluZSA9IHMgPT4KICBoaXN0b3J5RmlsZSgpCiAgaGlzdG9yeUxvYWQoZmlsZW5hbWUsIGZzKQooKSA9PgogIGhpc3RvcnlTYXZlKGZpbGVuYW1lLCBmcykKICBsaW5lID0+CiAgbGluZSA9PgogIGhpc3RvcnlDbGVhcigpCiAgaGlzdG9yeUFkZChzdHIpCiAgaGlzdG9yeVNlYXJjaChkaXIpCiAgaGlzdG9yeVNlYXJjaEJhY2t3YXJkKCkKICBoaXN0b3J5U2VhcmNoRm9yd2FyZCgpCiAgc2V0IGhpc3RvcnkoZW50cmllcykKICBnZXQgaGlzdG9yeSgpCiAgaGlzdG9yeVBvcygpCiAgaW5zZXJ0KHN0cikKICBraWxsTGluZSgpCiAga2lsbFJlZ2lvbihzdGFydCwgZW5kLCBkaXIpCiAga2lsbFdvcmQoKQogIG1vdmVDdXJzb3IoZGVsdGEpCiAgbmV4dEhpc3RvcnkoKQogIG51bWJlclRvU3RyaW5nKGEsIHJhZGl4KQogIHByZXZpb3VzSGlzdG9yeSgpCiAgcHJpbnQoYSkKICBwcmludFJlYyhhKQogIHByaW50U3RhdHVzKGZuLCBwcm9tcHQgPSB0cnVlKQogIGFyZyA9PgogIGFyZyA9PgogIGZuID0gKCkgPT4KICBmbiA9ICgpID0+CiAgcHJpbnRGdW5jdGlvbihsb2dGbikKICAoLi4uYXJncykgPT4KKCkgPT4KICBxdW90ZWRJbnNlcnQoKQogIHJldmVyc2VTZWFyY2goKQogIGZvcndhcmRTZWFyY2goKQogIHNlYXJjaENiKHBhdHRlcm4pCiAgcmVhZGxpbmVIYW5kbGVDbWQoZXhwcikKICByZWFkbGluZVByaW50UHJvbXB0KCkKICByZWFkbGluZVN0YXJ0KGRlZnN0ciwgY2IpCiAgcmVzZXQoKQogIHJ1bihiYW5uZXIgPSB0cnVlKQogIHJ1blN5bmMoKQogICgpID0+CigpID0+CiAgc3RvcCgpCiAgc2lnaW50SGFuZGxlcigpCiAgc2tpcFdvcmRCYWNrd2FyZChwb3MpCiAgc2tpcFdvcmRGb3J3YXJkKHBvcykKICB0ZXJtSW5pdCgpCiAgYXJnID0+CiAgKCkgPT4KICBtb3VzZVRyYWNraW5nKGVuYWJsZSA9IHRydWUpCiAgc2V0dXBNb3VzZVRyYWNraW5nKGZzID0gZnMpCigpID0+CiAgdGVybVJlYWRIYW5kbGVyKCkKICB0cmFuc3Bvc2VDaGFycygpCiAgdHJhbnNwb3NlV29yZHMoKQogIHVwY2FzZVdvcmQoKQogIHVwZGF0ZSgpCihbaSwgY10pID0+CiAgeWFuaygpClJFUEwKUkVQTAogIGZpbGUgPT4KICBtID0+CiAgZXJyb3IgPT4KICBpc0FscGhhKGMpCiAgaXNEaWdpdChjKQogIGlzV29yZChjKQogIHVjc0xlbmd0aChzdHIpCiAgcm90YXRlTGVmdChhcnJheSwgbikKICBpc1RyYWlsaW5nU3Vycm9nYXRlKGMpCiAgaXNCYWxhbmNlZChhLCBiKQogIHByaW50Q29sb3JUZXh0KHN0ciwgc3RhcnQsIHN0eWxlX25hbWVzKQogIHByaW50Q3NpKG4sIGNvZGUpClJFUEwAAAAAAAAAAK0JAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 13159,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"left_delete",
					null,
					"CgAAAMcoAAAAAAAAxygAAAAAAAABAAAAaMYoAAAAAAAAxigAAAAAAAABAAAAdMUoAAAAAAAAxSgAAAAAAAABAAAAZ8QoAAAAAAAAxCgAAAAAAAABAAAAbsMoAAAAAAAAwygAAAAAAAABAAAAZcIoAAAAAAAAwigAAAAAAAABAAAATMEoAAAAAAAAwSgAAAAAAAABAAAAZcAoAAAAAAAAwCgAAAAAAAABAAAAdL8oAAAAAAAAvygAAAAAAAABAAAAeb4oAAAAAAAAvigAAAAAAAABAAAAYg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgoAAAAAAAAyCgAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"cut",
					null,
					"AQAAAL8oAAAAAAAAvygAAAAAAAAnAAAAICAgICAgICAgICAgY29uc29sZS5sb2coJ2RhdGE6JyxkYXRhKTsK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8oAAAAAAAA5igAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"paste",
					null,
					"AQAAAL8oAAAAAAAA5igAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8oAAAAAAAAvygAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAG8oAAAAAAAAcCgAAAAAAAAAAAAAcCgAAAAAAABwKAAAAAAAAAMAAAAgLy8",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIoAAAAAAAAbygAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOsoAAAAAAAA7CgAAAAAAAAAAAAA7CgAAAAAAADsKAAAAAAAAAUAAAAgIC8vIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAoAAAAAAAA6ygAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFspAAAAAAAAXCkAAAAAAAAAAAAAXCkAAAAAAABcKQAAAAAAAC0AAAAgLy8gICAgICBjb25zb2xlLmxvZygnZGF0YTonLHRvU3RyaW5nKGRhdGEpKTs",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFspAAAAAAAAiCkAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAoSYAAAAAAAChJgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "upload.html",
			"settings":
			{
				"buffer_size": 527,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAvAAAAPGlucHV0IGlkPSJmaWxlIiB0eXBlPSJmaWxlIiBhY2NlcHQ9ImltYWdlLyoiPgo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAALwAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " method="
					},
					"CAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "OP"
					},
					"AgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEAAAAAAAAA8QAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAPIAAAAAAAAA8gAAAAAAAAABAAAAUPEAAAAAAAAA8QAAAAAAAAABAAAATw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMAAAAAAAAA8wAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "POST"
					},
					"BAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEAAAAAAAAA8QAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYAAAAAAAAA9gAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "action="
					},
					"BwAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcAAAAAAAAA9wAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAP4AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4AAAAAAAAA/gAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "/up√∂paod"
					},
					"CAAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8AAAAAAAAA/wAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					5,
					"left_delete",
					null,
					"BQAAAAYBAAAAAAAABgEAAAAAAAABAAAAZAUBAAAAAAAABQEAAAAAAAABAAAAbwQBAAAAAAAABAEAAAAAAAABAAAAYQMBAAAAAAAAAwEAAAAAAAABAAAAcAIBAAAAAAAAAgEAAAAAAAACAAAAw7Y",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcBAAAAAAAABwEAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "load"
					},
					"BAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIBAAAAAAAAAgEAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"cut",
					null,
					"AQAAAAkBAAAAAAAACQEAAAAAAAAzAAAAICAgIDxpbnB1dCBpZD0iZmlsZSIgdHlwZT0iZmlsZSIgYWNjZXB0PSJpbWFnZS8qIj4K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkBAAAAAAAAPAEAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					2,
					"paste",
					null,
					"AgAAAAkBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAABvAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkBAAAAAAAACQEAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BQAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABIAQAAAAAAAAIAAABpZEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAABKAQAAAAAAAEsBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcBAAAAAAAASQEAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "submit"
					},
					"BwAAAE0BAAAAAAAATgEAAAAAAAAAAAAATgEAAAAAAABOAQAAAAAAAAQAAABmaWxlTgEAAAAAAABPAQAAAAAAAAAAAABPAQAAAAAAAFABAAAAAAAAAAAAAFABAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABSAQAAAAAAAAAAAABSAQAAAAAAAFMBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0BAAAAAAAAUQEAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAFUBAAAAAAAAVQEAAAAAAAAcAAAAdHlwZT0iZmlsZSIgYWNjZXB0PSJpbWFnZS8qIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUBAAAAAAAAcQEAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"js_prettier",
					null,
					"AQAAAAAAAAAAAAAAfQEAAAAAAABwAQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiIC8+CiAgICA8dGl0bGU+TGlzdGluZyBkaXJlY3Rvcnk8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIHNpemVzPSIxNngxNiAzMngzMiA2NHg2NCIgaHJlZj0ic3RhdGljL3RyYW5zaXN0b3IuaWNvIiAvPgogICAgIDwvaGVhZD4KICA8Ym9keT48Zm9ybSBtZXRob2Q9IlBPU1QiIGFjdGlvbj0iL3VwbG9hZCI+CiAgICA8aW5wdXQgaWQ9ImZpbGUiIHR5cGU9ImZpbGUiIGFjY2VwdD0iaW1hZ2UvKiI+CiAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiA+CiAgPC9mb3JtPjwvYm9keT4KPC9odG1sPgo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHABAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAH0BAAAAAAAAfgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "<br"
					},
					"AwAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " />"
					},
					"AwAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACEAQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiIC8+CiAgICA8dGl0bGU+TGlzdGluZyBkaXJlY3Rvcnk8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIHNpemVzPSIxNngxNiAzMngzMiA2NHg2NCIgaHJlZj0ic3RhdGljL3RyYW5zaXN0b3IuaWNvIiAvPgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxmb3JtIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIvdXBsb2FkIj4KICAgICAgPGlucHV0IGlkPSJmaWxlIiB0eXBlPSJmaWxlIiBhY2NlcHQ9ImltYWdlLyoiIC8+PGJyIC8+CiAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIC8+CiAgICA8L2Zvcm0+CiAgPC9ib2R5Pgo8L2h0bWw+CgAAAAAAAAAADwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "list.html",
			"settings":
			{
				"buffer_size": 442,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"auto_indent_tag",
					null,
					"AQAAAGUBAAAAAAAAbQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUBAAAAAAAAZQEAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "<form>"
					},
					"BgAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABvAQAAAAAAAAAAAABvAQAAAAAAAHABAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoBAAAAAAAAagEAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n<"
					},
					"BAAAAHABAAAAAAAAcQEAAAAAAAAAAAAAcQEAAAAAAAB1AQAAAAAAAAAAAAB1AQAAAAAAAHcBAAAAAAAAAAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHABAAAAAAAAcAEAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"close_tag",
					{
						"insert_slash": true
					},
					"AwAAAHgBAAAAAAAAfgEAAAAAAAAAAAAAcQEAAAAAAABxAQAAAAAAAAYAAAAgICAgICBxAQAAAAAAAHUBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgBAAAAAAAAeAEAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "fio"
					},
					"AwAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwBAAAAAAAAfAEAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					3,
					"left_delete",
					null,
					"AwAAAH4BAAAAAAAAfgEAAAAAAAABAAAAb30BAAAAAAAAfQEAAAAAAAABAAAAaXwBAAAAAAAAfAEAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8BAAAAAAAAfwEAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAHABAAAAAAAAnwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHABAAAAAAAAcAEAAAAAAAAAAAAAAIBbQA"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AQAAPCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiIC8+CiAgICA8dGl0bGU+TGlzdGluZyBkaXJlY3Rvcnk8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIHNpemVzPSIxNngxNiAzMngzMiA2NHg2NCIgaHJlZj0ic3RhdGljL3RyYW5zaXN0b3IuaWNvIiAvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0ic3RhdGljL2Nzcy9saXN0LmNzcyIgLz4KICAgIDxzY3JpcHQgdHlwZT0ibW9kdWxlIiBzcmM9Imxpc3QtZGlyZWN0b3J5LmpzIj48L3NjcmlwdD4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8Zm9ybT48aW5wdXQgaWQ9ImZpbGUiIHR5cGU9ImZpbGUiIGFjY2VwdD0iaW1hZ2UvKiI+CgogICAgPC9mb3JtPgogIDwvYm9keT4KPC9odG1sPgoAAAAAAAAAALoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/svgRenderer.js",
			"settings":
			{
				"buffer_size": 15643,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					46,
					1,
					"cut",
					null,
					"AQAAAJEJAAAAAAAAkQkAAAAAAABUAAAAICAgIHRoaXMubGF5ZXJzID0gT2JqZWN0LmZyb21FbnRyaWVzKFsuLi5kb2MubGF5ZXJzXS5tYXAoKFtuLCBsXSkgPT4gW2wubmFtZSwgbF0pKTsK",
					"AQAAAAAAAAABAAAAkQkAAAAAAADlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					2,
					"paste",
					null,
					"AgAAAJEJAAAAAAAA5QkAAAAAAAAAAAAA5QkAAAAAAAA5CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQkAAAAAAACRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJQJAAAAAAAAlQkAAAAAAAAAAAAAlQkAAAAAAACWCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAkAAAAAAACUCQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "getO"
					},
					"BQAAAAAKAAAAAAAAAQoAAAAAAAAAAAAAAQoAAAAAAAABCgAAAAAAAAsAAABmcm9tRW50cmllcwEKAAAAAAAAAgoAAAAAAAAAAAAAAgoAAAAAAAADCgAAAAAAAAAAAAADCgAAAAAAAAQKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAoAAAAAAAALCgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert_completion",
					{
						"completion": "getOwnPropertyNames",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getOwnPropertyNames(...)"
					},
					"AgAAAAAKAAAAAAAAAAoAAAAAAAAEAAAAZ2V0TwAKAAAAAAAAEwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAoAAAAAAAAECgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					4,
					"left_delete",
					null,
					"BAAAABcKAAAAAAAAFwoAAAAAAAABAAAALhYKAAAAAAAAFgoAAAAAAAABAAAALhUKAAAAAAAAFQoAAAAAAAABAAAALhQKAAAAAAAAFAoAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAGAoAAAAAAAAYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAB4KAAAAAAAAHgoAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAHwoAAAAAAAAfCgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAB4KAAAAAAAAHwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgoAAAAAAAAeCgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "nm"
					},
					"AgAAACQKAAAAAAAAJQoAAAAAAAAAAAAAJQoAAAAAAAAmCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAoAAAAAAAAkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAACUKAAAAAAAAJQoAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAJgoAAAAAAAAmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " =)>"
					},
					"BAAAACUKAAAAAAAAJgoAAAAAAAAAAAAAJgoAAAAAAAAnCgAAAAAAAAAAAAAnCgAAAAAAACgKAAAAAAAAAAAAACgKAAAAAAAAKQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQoAAAAAAAAlCgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					3,
					"left_delete",
					null,
					"AwAAACgKAAAAAAAAKAoAAAAAAAABAAAAPicKAAAAAAAAJwoAAAAAAAABAAAAKSYKAAAAAAAAJgoAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAKQoAAAAAAAApCgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAACYKAAAAAAAAJwoAAAAAAAAAAAAAJwoAAAAAAAAoCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgoAAAAAAAAmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " ["
					},
					"AgAAACgKAAAAAAAAKQoAAAAAAAAAAAAAKQoAAAAAAAAqCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAoAAAAAAAAoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "nb"
					},
					"AgAAACoKAAAAAAAAKwoAAAAAAAAAAAAAKwoAAAAAAAAsCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgoAAAAAAAAqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAACsKAAAAAAAAKwoAAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAALAoAAAAAAAAsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACsKAAAAAAAALAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwoAAAAAAAArCgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " doc."
					},
					"BQAAACwKAAAAAAAALQoAAAAAAAAAAAAALQoAAAAAAAAuCgAAAAAAAAAAAAAuCgAAAAAAAC8KAAAAAAAAAAAAAC8KAAAAAAAAMAoAAAAAAAAAAAAAMAoAAAAAAAAxCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAoAAAAAAAAsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "layers."
					},
					"BwAAADEKAAAAAAAAMgoAAAAAAAAAAAAAMgoAAAAAAAAzCgAAAAAAAAAAAAAzCgAAAAAAADQKAAAAAAAAAAAAADQKAAAAAAAANQoAAAAAAAAAAAAANQoAAAAAAAA2CgAAAAAAAAAAAAA2CgAAAAAAADcKAAAAAAAAAAAAADcKAAAAAAAAOAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQoAAAAAAAAxCgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAADcKAAAAAAAANwoAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAOAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "[n]])"
					},
					"BQAAADcKAAAAAAAAOAoAAAAAAAAAAAAAOAoAAAAAAAA5CgAAAAAAAAAAAAA5CgAAAAAAADoKAAAAAAAAAAAAADoKAAAAAAAAOwoAAAAAAAAAAAAAOwoAAAAAAAA8CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwoAAAAAAAA3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADwKAAAAAAAAPQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAoAAAAAAAA8CgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"cut",
					null,
					"AQAAAD0KAAAAAAAAPQoAAAAAAAAaAAAAKFtuLCBsXSkgPT4gW2wubmFtZSwgbF0pKTs",
					"AQAAAAAAAAABAAAAPQoAAAAAAABXCgAAAAAAAP///////+9/"
				],
				[
					86,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAPQoAAAAAAAA9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"cut",
					null,
					"AQAAACY1AAAAAAAAJjUAAAAAAAAwAAAAdGhpcy5kZWJ1ZygnRWFnbGVTVkdSZW5kZXJlci5yZW5kZXInLCBvYmopOwogICAg",
					"AQAAAAAAAAABAAAAJjUAAAAAAABWNQAAAAAAAAAAAAAAAERA"
				],
				[
					104,
					1,
					"paste",
					null,
					"AQAAACY1AAAAAAAAVjUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJjUAAAAAAAAmNQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAAP40AAAAAAAALjUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/jQAAAAAAAD+NAAAAAAAAAAAAAAAAERA"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"DAAAAP40AAAAAAAA/zQAAAAAAAAAAAAA/zQAAAAAAAD/NAAAAAAAAAoAAAB0aGlzLmRlYnVn/zQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAE1AAAAAAAAAAAAAAE1AAAAAAAAAjUAAAAAAAAAAAAAAjUAAAAAAAADNQAAAAAAAAAAAAADNQAAAAAAAAQ1AAAAAAAAAAAAAAQ1AAAAAAAABTUAAAAAAAAAAAAABTUAAAAAAAAGNQAAAAAAAAAAAAAGNQAAAAAAAAc1AAAAAAAAAAAAAAc1AAAAAAAACDUAAAAAAAAAAAAACDUAAAAAAAAJNQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/jQAAAAAAAAINQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					3,
					"left_delete",
					null,
					"AwAAACc1AAAAAAAAJzUAAAAAAAABAAAAaiY1AAAAAAAAJjUAAAAAAAABAAAAYiU1AAAAAAAAJTUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAKDUAAAAAAAAoNQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACU1AAAAAAAAJzUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJTUAAAAAAAAlNQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "obj,props,children"
					},
					"EgAAACY1AAAAAAAAJzUAAAAAAAAAAAAAJzUAAAAAAAAoNQAAAAAAAAAAAAAoNQAAAAAAACk1AAAAAAAAAAAAACk1AAAAAAAAKjUAAAAAAAAAAAAAKjUAAAAAAAArNQAAAAAAAAAAAAArNQAAAAAAACw1AAAAAAAAAAAAACw1AAAAAAAALTUAAAAAAAAAAAAALTUAAAAAAAAuNQAAAAAAAAAAAAAuNQAAAAAAAC81AAAAAAAAAAAAAC81AAAAAAAAMDUAAAAAAAAAAAAAMDUAAAAAAAAxNQAAAAAAAAAAAAAxNQAAAAAAADI1AAAAAAAAAAAAADI1AAAAAAAAMzUAAAAAAAAAAAAAMzUAAAAAAAA0NQAAAAAAAAAAAAA0NQAAAAAAADU1AAAAAAAAAAAAADU1AAAAAAAANjUAAAAAAAAAAAAANjUAAAAAAAA3NQAAAAAAAAAAAAA3NQAAAAAAADg1AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJjUAAAAAAAAmNQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAI41AAAAAAAAjjUAAAAAAAADAAAAb2JqjjUAAAAAAACTNQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjjUAAAAAAACRNQAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"BAAAAI81AAAAAAAAkDUAAAAAAAAAAAAAkDUAAAAAAACQNQAAAAAAAAMAAABvYmqQNQAAAAAAAJE1AAAAAAAAAAAAAJE1AAAAAAAAkjUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjzUAAAAAAACSNQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\nconso"
					},
					"CAAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHkGAAAAAAAAAAAAAHkGAAAAAAAAegYAAAAAAAAAAAAAegYAAAAAAAB7BgAAAAAAAAAAAAB7BgAAAAAAAHwGAAAAAAAAAAAAAHwGAAAAAAAAfQYAAAAAAAAAAAAAfQYAAAAAAAB+BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "le.log"
					},
					"BgAAAH4GAAAAAAAAfwYAAAAAAAAAAAAAfwYAAAAAAACABgAAAAAAAAAAAACABgAAAAAAAIEGAAAAAAAAAAAAAIEGAAAAAAAAggYAAAAAAAAAAAAAggYAAAAAAACDBgAAAAAAAAAAAACDBgAAAAAAAIQGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgYAAAAAAAB+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQGAAAAAAAAhgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIUGAAAAAAAAhwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQYAAAAAAACFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "EagleSV"
					},
					"BwAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAACIBgAAAAAAAIkGAAAAAAAAAAAAAIkGAAAAAAAAigYAAAAAAAAAAAAAigYAAAAAAACLBgAAAAAAAAAAAACLBgAAAAAAAIwGAAAAAAAAAAAAAIwGAAAAAAAAjQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgYAAAAAAACGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert_completion",
					{
						"completion": "EagleSVGRenderer",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "EagleSVGRenderer"
					},
					"AgAAAIYGAAAAAAAAhgYAAAAAAAAHAAAARWFnbGVTVoYGAAAAAAAAlgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQYAAAAAAACNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ".create"
					},
					"BwAAAJYGAAAAAAAAlwYAAAAAAAAAAAAAlwYAAAAAAACYBgAAAAAAAAAAAACYBgAAAAAAAJkGAAAAAAAAAAAAAJkGAAAAAAAAmgYAAAAAAAAAAAAAmgYAAAAAAACbBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAJwGAAAAAAAAnQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgYAAAAAAACWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4GAAAAAAAAnwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngYAAAAAAACeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJ8GAAAAAAAAoQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "factory"
					},
					"BwAAAKAGAAAAAAAAoQYAAAAAAAAAAAAAoQYAAAAAAACiBgAAAAAAAAAAAACiBgAAAAAAAKMGAAAAAAAAAAAAAKMGAAAAAAAApAYAAAAAAAAAAAAApAYAAAAAAAClBgAAAAAAAAAAAAClBgAAAAAAAKYGAAAAAAAAAAAAAKYGAAAAAAAApwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAYAAAAAAACgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKgGAAAAAAAAqgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAYAAAAAAACoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"left_delete",
					null,
					"AQAAAKkGAAAAAAAAqQYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAqgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKgGAAAAAAAAqAYAAAAAAAABAAAAKKgGAAAAAAAAqAYAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAKgGAAAAAAAAqQYAAAAAAAAAAAAAqQYAAAAAAACqBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAYAAAAAAACoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"cut",
					null,
					"AQAAAHkGAAAAAAAAeQYAAAAAAAA4AAAAY29uc29sZS5sb2coJ0VhZ2xlU1ZHUmVuZGVyZXIuY3JlYXRlJyx7ZmFjdG9yeX0pOwogICAgICA",
					"AQAAAAAAAAABAAAAeQYAAAAAAACxBgAAAAAAAAAAAAAAAE5A"
				],
				[
					222,
					1,
					"paste",
					null,
					"AQAAAHkGAAAAAAAAsQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"paste",
					null,
					"AQAAAAEEAAAAAAAAOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAERA"
				],
				[
					236,
					1,
					"paste",
					null,
					"AgAAAB8EAAAAAAAAKgQAAAAAAAAAAAAAKgQAAAAAAAAqBAAAAAAAAAYAAABjcmVhdGU",
					"AQAAAAAAAAABAAAAHwQAAAAAAAAlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALUGAAAAAAAAtgYAAAAAAAAAAAAAtgYAAAAAAAC3BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQYAAAAAAAC1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAADBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABAcAAAAAAAArBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 96864,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/eagle/schematicRenderer.js",
			"settings":
			{
				"buffer_size": 6662,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					32,
					2,
					"paste",
					null,
					"AwAAADgWAAAAAAAAchYAAAAAAAAAAAAAchYAAAAAAAByFgAAAAAAADoAAAAgICAgLy9jb25zb2xlLmxvZygnc2hlZXQuZ2V0Qm91bmRzJywgc2hlZXQuZ2V0Qm91bmRzKycnKTsKchYAAAAAAACsFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBYAAAAAAAByFgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAHIWAAAAAAAAcxYAAAAAAAAAAAAAcxYAAAAAAABzFgAAAAAAAAcAAAAgICAgLy9j",
					"AQAAAAAAAAABAAAAeRYAAAAAAAByFgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"paste",
					null,
					"AgAAAH8WAAAAAAAAhhYAAAAAAAAAAAAAhhYAAAAAAACGFgAAAAAAAA8AAABzaGVldC5nZXRCb3VuZHM",
					"AQAAAAAAAAABAAAAfxYAAAAAAACOFgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"paste",
					null,
					"AgAAAIkWAAAAAAAAkBYAAAAAAAAAAAAAkBYAAAAAAACQFgAAAAAAABIAAABzaGVldC5nZXRCb3VuZHMrJyc",
					"AQAAAAAAAAABAAAAiRYAAAAAAACbFgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"cut",
					null,
					"AQAAAHIWAAAAAAAAchYAAAAAAAAhAAAAY29uc29sZS5sb2coJ3NoZWV0Tm8nLCBzaGVldE5vKTsK",
					"AQAAAAAAAAABAAAAchYAAAAAAACTFgAAAAAAAAAAAAAAAAAA"
				],
				[
					62,
					2,
					"paste",
					null,
					"AgAAAHIWAAAAAAAAkxYAAAAAAAAAAAAAkxYAAAAAAAC0FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAchYAAAAAAAByFgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"BAAAAKAWAAAAAAAAoRYAAAAAAAAAAAAAoRYAAAAAAAChFgAAAAAAAAcAAABzaGVldE5voRYAAAAAAACiFgAAAAAAAAAAAACiFgAAAAAAAKMWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBYAAAAAAACnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AgAAAKYWAAAAAAAAqRYAAAAAAAAAAAAAqRYAAAAAAACpFgAAAAAAAAcAAABzaGVldE5v",
					"AQAAAAAAAAABAAAAphYAAAAAAACtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKkWAAAAAAAAqhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRYAAAAAAACpFgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " Util.className"
					},
					"DwAAAKoWAAAAAAAAqxYAAAAAAAAAAAAAqxYAAAAAAACsFgAAAAAAAAAAAACsFgAAAAAAAK0WAAAAAAAAAAAAAK0WAAAAAAAArhYAAAAAAAAAAAAArhYAAAAAAACvFgAAAAAAAAAAAACvFgAAAAAAALAWAAAAAAAAAAAAALAWAAAAAAAAsRYAAAAAAAAAAAAAsRYAAAAAAACyFgAAAAAAAAAAAACyFgAAAAAAALMWAAAAAAAAAAAAALMWAAAAAAAAtBYAAAAAAAAAAAAAtBYAAAAAAAC1FgAAAAAAAAAAAAC1FgAAAAAAALYWAAAAAAAAAAAAALYWAAAAAAAAtxYAAAAAAAAAAAAAtxYAAAAAAAC4FgAAAAAAAAAAAAC4FgAAAAAAALkWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhYAAAAAAACqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkWAAAAAAAAuxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRYAAAAAAAC5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"AwAAALoWAAAAAAAAuxYAAAAAAAAAAAAAuxYAAAAAAAC8FgAAAAAAAAAAAAC8FgAAAAAAAL0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhYAAAAAAAC6FgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"cut",
					null,
					"AQAAAE8VAAAAAAAATxUAAAAAAAAgAAAAICAgIC8vY29uc29sZS5sb2coJ2RvYzonLCBkb2MpOwo",
					"AQAAAAAAAAABAAAATxUAAAAAAABvFQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					2,
					"paste",
					null,
					"AgAAAE8VAAAAAAAAbxUAAAAAAAAAAAAAbxUAAAAAAACPFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxUAAAAAAABPFQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHIVAAAAAAAAcxUAAAAAAAAAAAAAcxUAAAAAAABzFQAAAAAAAAMAAAAgLy8",
					"AQAAAAAAAAABAAAAdRUAAAAAAAByFQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "Eagh"
					},
					"BQAAAIAVAAAAAAAAgRUAAAAAAAAAAAAAgRUAAAAAAACBFQAAAAAAAAMAAABkb2OBFQAAAAAAAIIVAAAAAAAAAAAAAIIVAAAAAAAAgxUAAAAAAAAAAAAAgxUAAAAAAACEFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBUAAAAAAACDFQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAIMVAAAAAAAAgxUAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAhBUAAAAAAACEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "leS"
					},
					"AwAAAIMVAAAAAAAAhBUAAAAAAAAAAAAAhBUAAAAAAACFFQAAAAAAAAAAAACFFQAAAAAAAIYVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxUAAAAAAACDFQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"left_delete",
					null,
					"AQAAAIUVAAAAAAAAhRUAAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAhhUAAAAAAACGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					4,
					"left_delete",
					null,
					"BAAAAIQVAAAAAAAAhBUAAAAAAAABAAAAZYMVAAAAAAAAgxUAAAAAAAABAAAAbIIVAAAAAAAAghUAAAAAAAABAAAAZ4EVAAAAAAAAgRUAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAhRUAAAAAAACFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAIEVAAAAAAAAghUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRUAAAAAAACBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					2,
					"left_delete",
					null,
					"AgAAAIEVAAAAAAAAgRUAAAAAAAABAAAAU4AVAAAAAAAAgBUAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAghUAAAAAAACCFQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "Sch"
					},
					"AwAAAIAVAAAAAAAAgRUAAAAAAAAAAAAAgRUAAAAAAACCFQAAAAAAAAAAAACCFQAAAAAAAIMVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBUAAAAAAACAFQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert_completion",
					{
						"completion": "SchematicRenderer",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "SchematicRenderer"
					},
					"AgAAAIAVAAAAAAAAgBUAAAAAAAADAAAAU2NogBUAAAAAAACRFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxUAAAAAAACDFQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": ".rendewr"
					},
					"CAAAAJEVAAAAAAAAkhUAAAAAAAAAAAAAkhUAAAAAAACTFQAAAAAAAAAAAACTFQAAAAAAAJQVAAAAAAAAAAAAAJQVAAAAAAAAlRUAAAAAAAAAAAAAlRUAAAAAAACWFQAAAAAAAAAAAACWFQAAAAAAAJcVAAAAAAAAAAAAAJcVAAAAAAAAmBUAAAAAAAAAAAAAmBUAAAAAAACZFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRUAAAAAAACRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"right_delete",
					null,
					"AQAAAJkVAAAAAAAAmRUAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAmRUAAAAAAACZFQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					2,
					"left_delete",
					null,
					"AgAAAJgVAAAAAAAAmBUAAAAAAAABAAAAcpcVAAAAAAAAlxUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAmRUAAAAAAACZFQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAJcVAAAAAAAAmBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxUAAAAAAACXFQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJoVAAAAAAAAnBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhUAAAAAAACaFQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"right_delete",
					null,
					"AQAAAJsVAAAAAAAAmxUAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAmxUAAAAAAACbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": ",parent,opr"
					},
					"CwAAAJ8VAAAAAAAAoBUAAAAAAAAAAAAAoBUAAAAAAAChFQAAAAAAAAAAAAChFQAAAAAAAKIVAAAAAAAAAAAAAKIVAAAAAAAAoxUAAAAAAAAAAAAAoxUAAAAAAACkFQAAAAAAAAAAAACkFQAAAAAAAKUVAAAAAAAAAAAAAKUVAAAAAAAAphUAAAAAAAAAAAAAphUAAAAAAACnFQAAAAAAAAAAAACnFQAAAAAAAKgVAAAAAAAAAAAAAKgVAAAAAAAAqRUAAAAAAAAAAAAAqRUAAAAAAACqFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxUAAAAAAACfFQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					3,
					"left_delete",
					null,
					"AwAAAKkVAAAAAAAAqRUAAAAAAAABAAAAcqgVAAAAAAAAqBUAAAAAAAABAAAAcKcVAAAAAAAApxUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqhUAAAAAAACqFQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "props,sheetNo}"
					},
					"DgAAAKcVAAAAAAAAqBUAAAAAAAAAAAAAqBUAAAAAAACpFQAAAAAAAAAAAACpFQAAAAAAAKoVAAAAAAAAAAAAAKoVAAAAAAAAqxUAAAAAAAAAAAAAqxUAAAAAAACsFQAAAAAAAAAAAACsFQAAAAAAAK0VAAAAAAAAAAAAAK0VAAAAAAAArhUAAAAAAAAAAAAArhUAAAAAAACvFQAAAAAAAAAAAACvFQAAAAAAALAVAAAAAAAAAAAAALAVAAAAAAAAsRUAAAAAAAAAAAAAsRUAAAAAAACyFQAAAAAAAAAAAACyFQAAAAAAALMVAAAAAAAAAAAAALMVAAAAAAAAtBUAAAAAAAAAAAAAtBUAAAAAAAC1FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxUAAAAAAACnFQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADQWAAAAAAAANhYAAAAAAAAAAAAAuhUAAAAAAAC8FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhUAAAAAAAA0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "doc."
					},
					"BAAAAHQWAAAAAAAAdRYAAAAAAAAAAAAAdRYAAAAAAAB2FgAAAAAAAAAAAAB2FgAAAAAAAHcWAAAAAAAAAAAAAHcWAAAAAAAAeBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBYAAAAAAAB0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					2,
					"right_delete",
					null,
					"AgAAAI0WAAAAAAAAjRYAAAAAAAABAAAAL40WAAAAAAAAjRYAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAjRYAAAAAAACNFgAAAAAAAAAAAAAAAERA"
				],
				[
					199,
					9,
					"right_delete",
					null,
					"CQAAAKAWAAAAAAAAoBYAAAAAAAABAAAAZ6AWAAAAAAAAoBYAAAAAAAABAAAAZaAWAAAAAAAAoBYAAAAAAAABAAAAdKAWAAAAAAAAoBYAAAAAAAABAAAAQqAWAAAAAAAAoBYAAAAAAAABAAAAb6AWAAAAAAAAoBYAAAAAAAABAAAAdaAWAAAAAAAAoBYAAAAAAAABAAAAbqAWAAAAAAAAoBYAAAAAAAABAAAAZKAWAAAAAAAAoBYAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAoBYAAAAAAACgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAAJ8WAAAAAAAAnxYAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAoBYAAAAAAACgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					2,
					"left_delete",
					null,
					"AgAAAKgWAAAAAAAAqBYAAAAAAAAMAAAAZ2V0Qm91bmRzKycnpxYAAAAAAACnFgAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAAqBYAAAAAAAC0FgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMsWAAAAAAAAzBYAAAAAAAAAAAAAzBYAAAAAAADNFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxYAAAAAAADLFgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACBkAAAAAAAAIGQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/functional.js",
			"redo_stack":
			[
				[
					209,
					1,
					"unindent",
					null,
					"AQAAAB5qAAAAAAAAIGoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJWoAAAAAAAAlagAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 29193,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					180,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcxYAAAAAAABzFgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/repeater/react-hooks.js",
			"settings":
			{
				"buffer_size": 7064,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/dom/preactComponent.js",
			"settings":
			{
				"buffer_size": 10072,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/eagle/renderer.js",
			"settings":
			{
				"buffer_size": 1227,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/node.js",
			"settings":
			{
				"buffer_size": 16640,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABLAwAAAAAAAAAAAABLAwAAAAAAAE0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAE0DAAAAAAAAtwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AgAAAGYDAAAAAAAAbwMAAAAAAAAAAAAAbwMAAAAAAABvAwAAAAAAAAwAAABFYWdsZUVsZW1lbnQ",
					"AQAAAAAAAAABAAAAZgMAAAAAAAByAwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB9AwAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACIAwAAAAAAAA0AAAA6IHRoaXMub3duZXIs",
					"AQAAAAAAAAABAAAAhwMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " iow"
					},
					"BAAAAIgDAAAAAAAAiQMAAAAAAAAAAAAAiQMAAAAAAACKAwAAAAAAAAAAAACKAwAAAAAAAIsDAAAAAAAAAAAAAIsDAAAAAAAAjAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAMAAAAAAACIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					3,
					"left_delete",
					null,
					"AwAAAIsDAAAAAAAAiwMAAAAAAAABAAAAd4oDAAAAAAAAigMAAAAAAAABAAAAb4kDAAAAAAAAiQMAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "owner,"
					},
					"BgAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAACOAwAAAAAAAI8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQMAAAAAAACJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAI4DAAAAAAAAjgMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAjwMAAAAAAACPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ".raw,"
					},
					"BQAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "ef"
					},
					"AwAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACYAwAAAAAAABgAAAA6IHRoaXMucmVmLHJhdzogdGhpcy5yYXeYAwAAAAAAAJkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwMAAAAAAACvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"left_delete",
					null,
					"AgAAAJgDAAAAAAAAmAMAAAAAAAABAAAAZpcDAAAAAAAAlwMAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAmQMAAAAAAACZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": ",raw"
					},
					"BAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACZAwAAAAAAAAAAAACZAwAAAAAAAJoDAAAAAAAAAAAAAJoDAAAAAAAAmwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwMAAAAAAACXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"cut",
					null,
					"AQAAAEkDAAAAAAAASQMAAAAAAABVAAAAICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFYWdsZU5vZGUuY29uc3RydWN0b3IoMSknLCB7b3duZXI6IG93bmVyLnJhdywgcmVmLHJhd30pOw",
					"AQAAAAAAAAABAAAASQMAAAAAAACeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"paste",
					null,
					"AQAAAEkDAAAAAAAAngMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIwFAAAAAAAAjQUAAAAAAAAAAAAAjQUAAAAAAACRBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAUAAAAAAACMBQAAAAAAAAAAAAAAkIpA"
				],
				[
					70,
					1,
					"paste",
					null,
					"AQAAAJEFAAAAAAAA5gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "tjhi"
					},
					"BQAAANEFAAAAAAAA0gUAAAAAAAAAAAAA0gUAAAAAAADSBQAAAAAAAAUAAABvd25lctIFAAAAAAAA0wUAAAAAAAAAAAAA0wUAAAAAAADUBQAAAAAAAAAAAADUBQAAAAAAANUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QUAAAAAAADWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					3,
					"left_delete",
					null,
					"AwAAANQFAAAAAAAA1AUAAAAAAAABAAAAadMFAAAAAAAA0wUAAAAAAAABAAAAaNIFAAAAAAAA0gUAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAA1QUAAAAAAADVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "his.owner"
					},
					"CQAAANIFAAAAAAAA0wUAAAAAAAAAAAAA0wUAAAAAAADUBQAAAAAAAAAAAADUBQAAAAAAANUFAAAAAAAAAAAAANUFAAAAAAAA1gUAAAAAAAAAAAAA1gUAAAAAAADXBQAAAAAAAAAAAADXBQAAAAAAANgFAAAAAAAAAAAAANgFAAAAAAAA2QUAAAAAAAAAAAAA2QUAAAAAAADaBQAAAAAAAAAAAADaBQAAAAAAANsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gUAAAAAAADSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					4,
					"right_delete",
					null,
					"BAAAANsFAAAAAAAA2wUAAAAAAAABAAAALtsFAAAAAAAA2wUAAAAAAAABAAAActsFAAAAAAAA2wUAAAAAAAABAAAAYdsFAAAAAAAA2wUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA2wUAAAAAAADbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOAFAAAAAAAA4QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AUAAAAAAADgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " rhi"
					},
					"BAAAAOEFAAAAAAAA4gUAAAAAAAAAAAAA4gUAAAAAAADjBQAAAAAAAAAAAADjBQAAAAAAAOQFAAAAAAAAAAAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QUAAAAAAADhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					3,
					"left_delete",
					null,
					"AwAAAOQFAAAAAAAA5AUAAAAAAAABAAAAaeMFAAAAAAAA4wUAAAAAAAABAAAAaOIFAAAAAAAA4gUAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA5QUAAAAAAADlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "this.rew"
					},
					"CAAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA4wUAAAAAAADkBQAAAAAAAAAAAADkBQAAAAAAAOUFAAAAAAAAAAAAAOUFAAAAAAAA5gUAAAAAAAAAAAAA5gUAAAAAAADnBQAAAAAAAAAAAADnBQAAAAAAAOgFAAAAAAAAAAAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA6QUAAAAAAADqBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gUAAAAAAADiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAOkFAAAAAAAA6QUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA6gUAAAAAAADqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QUAAAAAAADpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "raw:"
					},
					"BAAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA7AUAAAAAAADtBQAAAAAAAAAAAADtBQAAAAAAAO4FAAAAAAAAAAAAAO4FAAAAAAAA7wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wUAAAAAAADrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " this."
					},
					"BgAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA8AUAAAAAAADxBQAAAAAAAAAAAADxBQAAAAAAAPIFAAAAAAAAAAAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA8wUAAAAAAAD0BQAAAAAAAAAAAAD0BQAAAAAAAPUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					4,
					"left_delete",
					null,
					"BAAAAJEDAAAAAAAAkQMAAAAAAAABAAAAd5ADAAAAAAAAkAMAAAAAAAABAAAAYY8DAAAAAAAAjwMAAAAAAAABAAAAco4DAAAAAAAAjgMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABqBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQUAAAAAAABlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"right_delete",
					null,
					"AgAAAI0FAAAAAAAAjQUAAAAAAAABAAAACmYFAAAAAAAAZgUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAjQUAAAAAAACNBQAAAAAAAP///////+9/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIkFAAAAAAAAigUAAAAAAAAAAAAAigUAAAAAAACOBQAAAAAAAAAAAACOBQAAAAAAAI8FAAAAAAAAAAAAAI8FAAAAAAAAkwUAAAAAAAAAAAAAigUAAAAAAACKBQAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAiQUAAAAAAACJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					2,
					"right_delete",
					null,
					"AgAAAI8FAAAAAAAAjwUAAAAAAAACAAAAICCPBQAAAAAAAI8FAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAjwUAAAAAAACPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAMIFAAAAAAAAwwUAAAAAAAAAAAAAwwUAAAAAAADDBQAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAwgUAAAAAAADDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAACcMAAAAAAAAKAwAAAAAAAAAAAAAKAwAAAAAAAApDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwwAAAAAAAAnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABUMAAAAAAAAFgwAAAAAAAAAAAAAFgwAAAAAAAAaDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAERA"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "\ntjhr"
					},
					"BgAAACkMAAAAAAAAKgwAAAAAAAAAAAAAKgwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADEMAAAAAAAAAAAAADEMAAAAAAAAMgwAAAAAAAAAAAAAMgwAAAAAAAAzDAAAAAAAAAAAAAAzDAAAAAAAADQMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQwAAAAAAAApDAAAAAAAAP///////+9/"
				],
				[
					175,
					3,
					"left_delete",
					null,
					"AwAAADMMAAAAAAAAMwwAAAAAAAABAAAAcjIMAAAAAAAAMgwAAAAAAAABAAAAaDEMAAAAAAAAMQwAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAANAwAAAAAAAA0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "hrow"
					},
					"BAAAADEMAAAAAAAAMgwAAAAAAAAAAAAAMgwAAAAAAAAzDAAAAAAAAAAAAAAzDAAAAAAAADQMAAAAAAAAAAAAADQMAAAAAAAANQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQwAAAAAAAAxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAADUMAAAAAAAANgwAAAAAAAAAAAAANgwAAAAAAAA3DAAAAAAAAAAAAAA3DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAOQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQwAAAAAAAA1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " ErroR"
					},
					"BgAAADkMAAAAAAAAOgwAAAAAAAAAAAAAOgwAAAAAAAA7DAAAAAAAAAAAAAA7DAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAPQwAAAAAAAAAAAAAPQwAAAAAAAA+DAAAAAAAAAAAAAA+DAAAAAAAAD8MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQwAAAAAAAA5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"left_delete",
					null,
					"AQAAAD4MAAAAAAAAPgwAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAPwwAAAAAAAA/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAD4MAAAAAAAAPwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8MAAAAAAAAQQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwwAAAAAAAA/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAAEAMAAAAAAAAQgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAwAAAAAAABADAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "EagleNode."
					},
					"CgAAAEEMAAAAAAAAQgwAAAAAAAAAAAAAQgwAAAAAAABDDAAAAAAAAAAAAABDDAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAARQwAAAAAAAAAAAAARQwAAAAAAABGDAAAAAAAAAAAAABGDAAAAAAAAEcMAAAAAAAAAAAAAEcMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABJDAAAAAAAAAAAAABJDAAAAAAAAEoMAAAAAAAAAAAAAEoMAAAAAAAASwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQwAAAAAAABBDAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAEsMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABNDAAAAAAAAAAAAABNDAAAAAAAAE4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwwAAAAAAABLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " raw"
					},
					"BAAAAE4MAAAAAAAATwwAAAAAAAAAAAAATwwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFEMAAAAAAAAAAAAAFEMAAAAAAAAUgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgwAAAAAAABODAAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFIMAAAAAAAAUwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAFIMAAAAAAAAUgwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAUwwAAAAAAABTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFIMAAAAAAAAUwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"left_delete",
					null,
					"AQAAAFIMAAAAAAAAUgwAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAUwwAAAAAAABTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAFIMAAAAAAAAUwwAAAAAAAAAAAAAUwwAAAAAAABUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " '"
					},
					"AgAAAFQMAAAAAAAAVQwAAAAAAAAAAAAAVQwAAAAAAABWDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAwAAAAAAABUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "No"
					},
					"AgAAAFYMAAAAAAAAVwwAAAAAAAAAAAAAVwwAAAAAAABYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgwAAAAAAABWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " ref"
					},
					"BAAAAFgMAAAAAAAAWQwAAAAAAAAAAAAAWQwAAAAAAABaDAAAAAAAAAAAAABaDAAAAAAAAFsMAAAAAAAAAAAAAFsMAAAAAAAAXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAwAAAAAAABYDAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAFwMAAAAAAAAXQwAAAAAAAAAAAAAXQwAAAAAAABeDAAAAAAAAAAAAABeDAAAAAAAAF8MAAAAAAAAAAAAAF8MAAAAAAAAYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAwAAAAAAABcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": " no"
					},
					"AwAAAGAMAAAAAAAAYQwAAAAAAAAAAAAAYQwAAAAAAABiDAAAAAAAAAAAAABiDAAAAAAAAGMMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAwAAAAAAABgDAAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " path'"
					},
					"BgAAAGMMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAGYMAAAAAAAAZwwAAAAAAAAAAAAAZwwAAAAAAABoDAAAAAAAAAAAAABoDAAAAAAAAGkMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwwAAAAAAABjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAAGgMAAAAAAAAaAwAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAaQwAAAAAAABpDAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGoMAAAAAAAAawwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagwAAAAAAABqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACkMAAAAAAAAKgwAAAAAAAAAAAAAKgwAAAAAAAAwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQwAAAAAAAApDAAAAAAAAAAAAAAAUIRA"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAAG8MAAAAAAAAcAwAAAAAAAAAAAAAKgwAAAAAAAAqDAAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAbwwAAAAAAABvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": " O"
					},
					"AgAAAGoMAAAAAAAAawwAAAAAAAAAAAAAawwAAAAAAABsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagwAAAAAAABqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"left_delete",
					null,
					"AQAAAGsMAAAAAAAAawwAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAbAwAAAAAAABsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "$()"
					},
					"AwAAAGsMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABtDAAAAAAAAAAAAABtDAAAAAAAAG4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawwAAAAAAABrDAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					2,
					"left_delete",
					null,
					"AgAAAG0MAAAAAAAAbQwAAAAAAAABAAAAKWwMAAAAAAAAbAwAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAbgwAAAAAAABuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "{OP"
					},
					"AwAAAGwMAAAAAAAAbQwAAAAAAAAAAAAAbQwAAAAAAABuDAAAAAAAAAAAAABuDAAAAAAAAG8MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAwAAAAAAABsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAAG4MAAAAAAAAbgwAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAbwwAAAAAAABvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "bject.keys(this)"
					},
					"EAAAAG4MAAAAAAAAbwwAAAAAAAAAAAAAbwwAAAAAAABwDAAAAAAAAAAAAABwDAAAAAAAAHEMAAAAAAAAAAAAAHEMAAAAAAAAcgwAAAAAAAAAAAAAcgwAAAAAAABzDAAAAAAAAAAAAABzDAAAAAAAAHQMAAAAAAAAAAAAAHQMAAAAAAAAdQwAAAAAAAAAAAAAdQwAAAAAAAB2DAAAAAAAAAAAAAB2DAAAAAAAAHcMAAAAAAAAAAAAAHcMAAAAAAAAeAwAAAAAAAAAAAAAeAwAAAAAAAB5DAAAAAAAAAAAAAB5DAAAAAAAAHoMAAAAAAAAAAAAAHoMAAAAAAAAewwAAAAAAAAAAAAAewwAAAAAAAB8DAAAAAAAAAAAAAB8DAAAAAAAAH0MAAAAAAAAAAAAAH0MAAAAAAAAfgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgwAAAAAAABuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": ".join(',"
					},
					"CAAAAH4MAAAAAAAAfwwAAAAAAAAAAAAAfwwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIEMAAAAAAAAAAAAAIEMAAAAAAAAggwAAAAAAAAAAAAAggwAAAAAAACDDAAAAAAAAAAAAACDDAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAhQwAAAAAAAAAAAAAhQwAAAAAAACGDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgwAAAAAAAB+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " ')}"
					},
					"BAAAAIYMAAAAAAAAhwwAAAAAAAAAAAAAhwwAAAAAAACIDAAAAAAAAAAAAACIDAAAAAAAAIkMAAAAAAAAAAAAAIkMAAAAAAAAigwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgwAAAAAAACGDAAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					4,
					"left_delete",
					null,
					"BAAAAHcMAAAAAAAAdwwAAAAAAAABAAAAc3YMAAAAAAAAdgwAAAAAAAABAAAAeXUMAAAAAAAAdQwAAAAAAAABAAAAZXQMAAAAAAAAdAwAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAeAwAAAAAAAB4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "getOwn"
					},
					"BgAAAHQMAAAAAAAAdQwAAAAAAAAAAAAAdQwAAAAAAAB2DAAAAAAAAAAAAAB2DAAAAAAAAHcMAAAAAAAAAAAAAHcMAAAAAAAAeAwAAAAAAAAAAAAAeAwAAAAAAAB5DAAAAAAAAAAAAAB5DAAAAAAAAHoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAwAAAAAAAB0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert_completion",
					{
						"completion": "getOwnPropertyNames",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getOwnPropertyNames(...)"
					},
					"AgAAAHQMAAAAAAAAdAwAAAAAAAAGAAAAZ2V0T3dudAwAAAAAAACHDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegwAAAAAAAB6DAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMoLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADRCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAwIxA"
				],
				[
					259,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BwAAAMkLAAAAAAAAygsAAAAAAAAAAAAAygsAAAAAAADQCwAAAAAAAAAAAADQCwAAAAAAANELAAAAAAAAAAAAANELAAAAAAAA1wsAAAAAAAAAAAAA2QsAAAAAAADZCwAAAAAAAAYAAAAgICAgICDKCwAAAAAAAMoLAAAAAAAABgAAACAgICAgIMoLAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQsAAAAAAADJCwAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "throw"
					},
					"BQAAANILAAAAAAAA0wsAAAAAAAAAAAAA0wsAAAAAAADUCwAAAAAAAAAAAADUCwAAAAAAANULAAAAAAAAAAAAANULAAAAAAAA1gsAAAAAAAAAAAAA1gsAAAAAAADXCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAFRA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DgAAAJYLAAAAAAAAlwsAAAAAAAAAAAAAlwsAAAAAAACdCwAAAAAAAAAAAACdCwAAAAAAAJ8LAAAAAAAAAAAAAJ8LAAAAAAAAoAsAAAAAAAAAAAAAoAsAAAAAAAChCwAAAAAAAAAAAAChCwAAAAAAAKILAAAAAAAAAAAAAKILAAAAAAAAowsAAAAAAAAAAAAAowsAAAAAAACkCwAAAAAAAAAAAACkCwAAAAAAAKULAAAAAAAAAAAAAKULAAAAAAAApgsAAAAAAAAAAAAApgsAAAAAAACnCwAAAAAAAAAAAACnCwAAAAAAAKgLAAAAAAAAAAAAAKgLAAAAAAAAqQsAAAAAAAAAAAAAqQsAAAAAAACqCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgsAAAAAAACWCwAAAAAAAAAAAAAAAGRA"
				],
				[
					268,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKoLAAAAAAAArAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgsAAAAAAACqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKsLAAAAAAAArQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwsAAAAAAACrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "ref"
					},
					"AwAAAKwLAAAAAAAArQsAAAAAAAAAAAAArQsAAAAAAACuCwAAAAAAAAAAAACuCwAAAAAAAK8LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAsAAAAAAACsCwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": ",ref"
					},
					"BAAAALALAAAAAAAAsQsAAAAAAAAAAAAAsQsAAAAAAACyCwAAAAAAAAAAAACyCwAAAAAAALMLAAAAAAAAAAAAALMLAAAAAAAAtAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAsAAAAAAACwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALULAAAAAAAAtgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQsAAAAAAAC1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC/CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgsAAAAAAAC2CwAAAAAAAAAAAAAAYHNA"
				],
				[
					297,
					1,
					"cut",
					null,
					"AQAAAJcLAAAAAAAAlwsAAAAAAAAgAAAAICAgICAgICBjb25zb2xlLmxvZygncmVmJyxyZWYpOwo",
					"AQAAAAAAAAABAAAAlwsAAAAAAAC3CwAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					2,
					"paste",
					null,
					"AgAAAJcLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAADXCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwsAAAAAAACXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"paste",
					null,
					"AQAAANELAAAAAAAA7AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QsAAAAAAADRCwAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AwAAAO8LAAAAAAAA8AsAAAAAAAAAAAAA8wsAAAAAAADzCwAAAAAAAAgAAAAgICAgICAgIPALAAAAAAAA8QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wsAAAAAAADvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					2,
					"left_delete",
					null,
					"AgAAAPALAAAAAAAA8AsAAAAAAAABAAAALu8LAAAAAAAA7wsAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": ".__proto__"
					},
					"CgAAAO8LAAAAAAAA8AsAAAAAAAAAAAAA8AsAAAAAAADxCwAAAAAAAAAAAADxCwAAAAAAAPILAAAAAAAAAAAAAPILAAAAAAAA8wsAAAAAAAAAAAAA8wsAAAAAAAD0CwAAAAAAAAAAAAD0CwAAAAAAAPULAAAAAAAAAAAAAPULAAAAAAAA9gsAAAAAAAAAAAAA9gsAAAAAAAD3CwAAAAAAAAAAAAD3CwAAAAAAAPgLAAAAAAAAAAAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wsAAAAAAADvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPoLAAAAAAAA+wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gsAAAAAAAD6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"cut",
					null,
					"AQAAAJcLAAAAAAAAlwsAAAAAAAAgAAAAICAgICAgICBjb25zb2xlLmxvZygncmVmJyxyZWYpOwo",
					"AQAAAAAAAAABAAAAlwsAAAAAAAC3CwAAAAAAAAAAAAAAAAAA"
				],
				[
					324,
					2,
					"paste",
					null,
					"AgAAAJcLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAADXCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwsAAAAAAACXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": ".dereference"
					},
					"DAAAANQLAAAAAAAA1QsAAAAAAAAAAAAA1QsAAAAAAADWCwAAAAAAAAAAAADWCwAAAAAAANcLAAAAAAAAAAAAANcLAAAAAAAA2AsAAAAAAAAAAAAA2AsAAAAAAADZCwAAAAAAAAAAAADZCwAAAAAAANoLAAAAAAAAAAAAANoLAAAAAAAA2wsAAAAAAAAAAAAA2wsAAAAAAADcCwAAAAAAAAAAAADcCwAAAAAAAN0LAAAAAAAAAAAAAN0LAAAAAAAA3gsAAAAAAAAAAAAA3gsAAAAAAADfCwAAAAAAAAAAAADfCwAAAAAAAOALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AsAAAAAAADUCwAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAM8LAAAAAAAA0AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwsAAAAAAADPCwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"paste",
					null,
					"AQAAANALAAAAAAAA2wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AsAAAAAAADQCwAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAE8MAAAAAAAAUAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"left_delete",
					null,
					"AQAAAE8MAAAAAAAATwwAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"paste",
					null,
					"AgAAAEkMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABUDAAAAAAAAAkAAABkZXJlZmVuY2U",
					"AQAAAAAAAAABAAAASQwAAAAAAABSDAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADQMAAAAAAAANgwAAAAAAAAAAAAAnQsAAAAAAACfCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQsAAAAAAAA0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"left_delete",
					null,
					"AQAAAJcLAAAAAAAAlwsAAAAAAACjAAAAICAgICAgLyogIGNvbnNvbGUubG9nKCdyZWYnLHJlZik7CiAgICAgICAgY29uc29sZS5sb2coJ3JlZi5kZXJlZmVyZW5jZScscmVmLmRlcmVmZXJlbmNlKTsKICAgICAgICBjb25zb2xlLmxvZygncmVmJyxPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhyZWYuX19wcm90b19fKSk7Ki8KCg",
					"AQAAAAAAAAABAAAAlwsAAAAAAAA6DAAAAAAAAAAAAAAAAAAA"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEwMAAAAAAAATQwAAAAAAAAAAAAATQwAAAAAAABODAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					4,
					"left_delete",
					null,
					"BAAAAL8MAAAAAAAAvwwAAAAAAAABAAAAIL4MAAAAAAAAvgwAAAAAAAABAAAAIL0MAAAAAAAAvQwAAAAAAAABAAAAL7wMAAAAAAAAvAwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAwAwAAAAAAADADAAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"",
					null,
					"AQAAAEkDAAAAAAAAZgMAAAAAAAAbAAAAICAgICAgICAgICAgICAgIGNvbnNvbGUubG9n",
					"AQAAAAAAAAABAAAASQMAAAAAAABkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"",
					null,
					"AQAAAIwFAAAAAAAArgUAAAAAAAAgAAAACiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2c",
					"AQAAAAAAAAABAAAAjAUAAAAAAACsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAADAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/iwUAAAAAAACLBQAAAAAAAAAAAAAAAPC/jgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/element.js",
			"settings":
			{
				"buffer_size": 34094,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1605,
					1,
					"left_delete",
					null,
					"AQAAAOQsAAAAAAAA5CwAAAAAAAAlAAAAICAgICAgICBjb25zb2xlLmxvZygnY2hpbGQnLCBjaGlsZCk7Cg",
					"AQAAAAAAAAABAAAA5CwAAAAAAAAJLQAAAAAAAAAAAAAAAAAA"
				],
				[
					1607,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL0sAAAAAAAAviwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvSwAAAAAAAC9LAAAAAAAAAAAAAAAAAAA"
				],
				[
					1608,
					1,
					"left_delete",
					null,
					"AQAAAL0sAAAAAAAAvSwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAviwAAAAAAAC+LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1609,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL0sAAAAAAAAviwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvSwAAAAAAAC9LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1610,
					1,
					"left_delete",
					null,
					"AQAAAL0sAAAAAAAAvSwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAviwAAAAAAAC+LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1611,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAL0sAAAAAAAAviwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvSwAAAAAAAC9LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1613,
					1,
					"left_delete",
					null,
					"AQAAAOMsAAAAAAAA4ywAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA5CwAAAAAAADkLAAAAAAAAP///////+9/"
				],
				[
					1615,
					1,
					"left_delete",
					null,
					"AQAAAEYtAAAAAAAARi0AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAARy0AAAAAAABHLQAAAAAAAAAAAAAAwHdA"
				],
				[
					1622,
					2,
					"left_delete",
					null,
					"AgAAAL4sAAAAAAAAviwAAAAAAAABAAAAIL0sAAAAAAAAvSwAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAvywAAAAAAAC/LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1627,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAvSwAAAAAAAC9LAAAAAAAAAAAAAAAAPC/"
				],
				[
					1644,
					1,
					"",
					null,
					"BAAAAOZQAAAAAAAA+lAAAAAAAAATAAAALmxpYnJhcmllc1tsaWJOYW1lXRUjAAAAAAAAPiMAAAAAAAAoAAAALmxpYnJhcmllc1t0aGlzLnBhcnQuYXR0cmlidXRlcy5saWJyYXJ5XWggAAAAAAAAhyAAAAAAAAAeAAAALmxpYnJhcmllc1thdHRyaWJ1dGVzLmxpYnJhcnld6hoAAAAAAAAJGwAAAAAAAB4AAAAubGlicmFyaWVzW2F0dHJpYnV0ZXMubGlicmFyeV0",
					"AQAAAAAAAAABAAAA6xoAAAAAAAD1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					1658,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAwqAAAAAAAADioAAAAAAAAAAAAARSkAAAAAAABHKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARSkAAAAAAAAMKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1663,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AgAAAEsqAAAAAAAATCoAAAAAAAAAAAAATCoAAAAAAABMKgAAAAAAAAMAAABuZm4",
					"AQAAAAAAAAABAAAASyoAAAAAAABOKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1664,
					1,
					"left_delete",
					null,
					"AQAAAEsqAAAAAAAASyoAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAATCoAAAAAAABMKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1665,
					1,
					"insert",
					{
						"characters": "hfn"
					},
					"AwAAAEsqAAAAAAAATCoAAAAAAAAAAAAATCoAAAAAAABNKgAAAAAAAAAAAABNKgAAAAAAAE4qAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASyoAAAAAAABLKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1670,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAATioAAAAAAABOKgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/components/instance.js",
			"settings":
			{
				"buffer_size": 1649,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADABAAAAAAAAC4AAAAgICBjb25zb2xlLmxvZygnSW5zdGFuY2UucmVuZGVyJywgeyBzeW1ib2x9KTsK",
					"AQAAAAAAAAABAAAAvwQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/components/symbol.js",
			"settings":
			{
				"buffer_size": 792,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "console."
					},
					"CAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAEMBAAAAAAAARAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAEAAAAAAABEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQEAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ",id"
					},
					"AwAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQEAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 27733,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					39,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAPMNAAAAAAAA9A0AAAAAAAAAAAAA9A0AAAAAAAD1DQAAAAAAAAAAAAD1DQAAAAAAAPYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8w0AAAAAAADzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " str;"
					},
					"BQAAAPYNAAAAAAAA9w0AAAAAAAAAAAAA9w0AAAAAAAD4DQAAAAAAAAAAAAD4DQAAAAAAAPkNAAAAAAAAAAAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA+g0AAAAAAAD7DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9g0AAAAAAAD2DQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					5,
					"left_delete",
					null,
					"BQAAACUOAAAAAAAAJQ4AAAAAAAABAAAAbiQOAAAAAAAAJA4AAAAAAAABAAAAciMOAAAAAAAAIw4AAAAAAAABAAAAdSIOAAAAAAAAIg4AAAAAAAABAAAAdCEOAAAAAAAAIQ4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAJg4AAAAAAAAmDgAAAAAAAAAAAAAAAFRA"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ4AAAAAAAAhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					4,
					"left_delete",
					null,
					"BAAAACMOAAAAAAAAIw4AAAAAAAABAAAAciIOAAAAAAAAIg4AAAAAAAABAAAAdCEOAAAAAAAAIQ4AAAAAAAABAAAAcyAOAAAAAAAAIA4AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAJA4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "str="
					},
					"BAAAACAOAAAAAAAAIQ4AAAAAAAAAAAAAIQ4AAAAAAAAiDgAAAAAAAAAAAAAiDgAAAAAAACMOAAAAAAAAAAAAACMOAAAAAAAAJA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIA4AAAAAAAAgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					3,
					"right_delete",
					null,
					"AwAAAEMOAAAAAAAAQw4AAAAAAAABAAAAc0MOAAAAAAAAQw4AAAAAAAABAAAAdkMOAAAAAAAAQw4AAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAQw4AAAAAAABDDgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "str"
					},
					"AwAAAEMOAAAAAAAARA4AAAAAAAAAAAAARA4AAAAAAABFDgAAAAAAAAAAAABFDgAAAAAAAEYOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQw4AAAAAAABDDgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BQAAAB0OAAAAAAAAHg4AAAAAAAAAAAAAHg4AAAAAAAAgDgAAAAAAAAAAAAAgDgAAAAAAACEOAAAAAAAAAAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQ4AAAAAAAAdDgAAAAAAAP///////+9/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACMOAAAAAAAAJQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIw4AAAAAAAAjDgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"right_delete",
					null,
					"AQAAACQOAAAAAAAAJA4AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAJA4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAEAOAAAAAAAAQQ4AAAAAAAAAAAAAQQ4AAAAAAABDDgAAAAAAAAAAAABDDgAAAAAAAEQOAAAAAAAAAAAAAEEOAAAAAAAAQQ4AAAAAAAACAAAAICBBDgAAAAAAAEEOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQA4AAAAAAABADgAAAAAAAP///////+9/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAEIOAAAAAAAAQw4AAAAAAAAAAAAAQw4AAAAAAABEDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQg4AAAAAAABCDgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAEMOAAAAAAAAQw4AAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAARA4AAAAAAABEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "catch"
					},
					"BQAAAEMOAAAAAAAARA4AAAAAAAAAAAAARA4AAAAAAABFDgAAAAAAAAAAAABFDgAAAAAAAEYOAAAAAAAAAAAAAEYOAAAAAAAARw4AAAAAAAAAAAAARw4AAAAAAABIDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQw4AAAAAAABDDgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgOAAAAAAAASg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASA4AAAAAAABIDgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEkOAAAAAAAASg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ4AAAAAAABJDgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsOAAAAAAAATA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASw4AAAAAAABLDgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAEwOAAAAAAAATQ4AAAAAAAAAAAAAXA4AAAAAAABeDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATA4AAAAAAABMDgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAE0OAAAAAAAATg4AAAAAAAAAAAAATg4AAAAAAABQDgAAAAAAAAAAAABQDgAAAAAAAFEOAAAAAAAAAAAAAFEOAAAAAAAAUg4AAAAAAAAAAAAAUg4AAAAAAABTDgAAAAAAAAAAAABTDgAAAAAAAFQOAAAAAAAAAAAAAFQOAAAAAAAAVQ4AAAAAAAAAAAAAVQ4AAAAAAABWDgAAAAAAAAAAAABWDgAAAAAAAFcOAAAAAAAAAAAAAFcOAAAAAAAAWA4AAAAAAAAAAAAAWA4AAAAAAABZDgAAAAAAAAAAAABZDgAAAAAAAFoOAAAAAAAAAAAAAFoOAAAAAAAAWw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQ4AAAAAAABNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFsOAAAAAAAAXQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWw4AAAAAAABbDgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "?="
					},
					"AgAAAFwOAAAAAAAAXQ4AAAAAAAAAAAAAXQ4AAAAAAABeDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXA4AAAAAAABcDgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					2,
					"left_delete",
					null,
					"AgAAAF0OAAAAAAAAXQ4AAAAAAAABAAAAPVwOAAAAAAAAXA4AAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAXg4AAAAAAABeDgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFwOAAAAAAAAXg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXA4AAAAAAABcDgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "ERROR:"
					},
					"BgAAAF0OAAAAAAAAXg4AAAAAAAAAAAAAXg4AAAAAAABfDgAAAAAAAAAAAABfDgAAAAAAAGAOAAAAAAAAAAAAAGAOAAAAAAAAYQ4AAAAAAAAAAAAAYQ4AAAAAAABiDgAAAAAAAAAAAABiDgAAAAAAAGMOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQ4AAAAAAABdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGQOAAAAAAAAZQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZA4AAAAAAABkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAGUOAAAAAAAAZg4AAAAAAAAAAAAAZg4AAAAAAABnDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQ4AAAAAAABlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGgOAAAAAAAAag4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA4AAAAAAABoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAGgOAAAAAAAAaA4AAAAAAAABAAAAKGgOAAAAAAAAaA4AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAaQ4AAAAAAABpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGgOAAAAAAAAaQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaA4AAAAAAABoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAGkOAAAAAAAAag4AAAAAAAAAAAAAag4AAAAAAABsDgAAAAAAAAAAAABsDgAAAAAAAG0OAAAAAAAAAAAAAGoOAAAAAAAAag4AAAAAAAACAAAAICBqDgAAAAAAAGoOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQ4AAAAAAABpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					2,
					"left_delete",
					null,
					"AgAAAHoOAAAAAAAAeg4AAAAAAAABAAAAfXkOAAAAAAAAeQ4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAew4AAAAAAAB7DgAAAAAAAAAAAAAAACRA"
				],
				[
					87,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAeQ4AAAAAAAB5DgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/lib/repl.js",
			"settings":
			{
				"buffer_size": 52637,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAGqiAAAAAAAAa6IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaqIAAAAAAABqogAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"left_delete",
					null,
					"AQAAAGqiAAAAAAAAaqIAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAa6IAAAAAAABrogAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BQAAAGqiAAAAAAAAa6IAAAAAAAAAAAAAa6IAAAAAAABvogAAAAAAAAAAAABvogAAAAAAAHCiAAAAAAAAAAAAAHCiAAAAAAAAcaIAAAAAAAAAAAAAcaIAAAAAAAByogAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaqIAAAAAAABqogAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHKiAAAAAAAAc6IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcqIAAAAAAAByogAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHOiAAAAAAAAdaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAc6IAAAAAAABzogAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"right_delete",
					null,
					"AQAAAHSiAAAAAAAAdKIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAdKIAAAAAAAB0ogAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\n}catch"
					},
					"CgAAAH6iAAAAAAAAf6IAAAAAAAAAAAAAf6IAAAAAAACDogAAAAAAAAAAAACDogAAAAAAAISiAAAAAAAAAAAAAH+iAAAAAAAAf6IAAAAAAAAEAAAAICAgIH+iAAAAAAAAgaIAAAAAAAAAAAAAgqIAAAAAAACDogAAAAAAAAAAAACDogAAAAAAAISiAAAAAAAAAAAAAISiAAAAAAAAhaIAAAAAAAAAAAAAhaIAAAAAAACGogAAAAAAAAAAAACGogAAAAAAAIeiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfqIAAAAAAAB+ogAAAAAAAAAAAAAAgFZA"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIeiAAAAAAAAiaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh6IAAAAAAACHogAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAIiiAAAAAAAAiaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiKIAAAAAAACIogAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIqiAAAAAAAAi6IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiqIAAAAAAACKogAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIuiAAAAAAAAjaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi6IAAAAAAACLogAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAIyiAAAAAAAAjKIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAjaIAAAAAAACNogAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DgAAAIyiAAAAAAAAjaIAAAAAAAAAAAAAjaIAAAAAAACPogAAAAAAAAAAAACPogAAAAAAAJGiAAAAAAAAAAAAAJGiAAAAAAAAkqIAAAAAAAAAAAAAkqIAAAAAAACTogAAAAAAAAAAAACTogAAAAAAAJSiAAAAAAAAAAAAAJSiAAAAAAAAlaIAAAAAAAAAAAAAlaIAAAAAAACWogAAAAAAAAAAAACWogAAAAAAAJeiAAAAAAAAAAAAAJeiAAAAAAAAmKIAAAAAAAAAAAAAmKIAAAAAAACZogAAAAAAAAAAAACZogAAAAAAAJqiAAAAAAAAAAAAAJqiAAAAAAAAm6IAAAAAAAAAAAAAm6IAAAAAAACcogAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjKIAAAAAAACMogAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJyiAAAAAAAAnqIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnKIAAAAAAACcogAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ2iAAAAAAAAn6IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnaIAAAAAAACdogAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "printStatus"
					},
					"CwAAAJ6iAAAAAAAAn6IAAAAAAAAAAAAAn6IAAAAAAACgogAAAAAAAAAAAACgogAAAAAAAKGiAAAAAAAAAAAAAKGiAAAAAAAAoqIAAAAAAAAAAAAAoqIAAAAAAACjogAAAAAAAAAAAACjogAAAAAAAKSiAAAAAAAAAAAAAKSiAAAAAAAApaIAAAAAAAAAAAAApaIAAAAAAACmogAAAAAAAAAAAACmogAAAAAAAKeiAAAAAAAAAAAAAKeiAAAAAAAAqKIAAAAAAAAAAAAAqKIAAAAAAACpogAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnqIAAAAAAACeogAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " ERROR:"
					},
					"BwAAAKmiAAAAAAAAqqIAAAAAAAAAAAAAqqIAAAAAAACrogAAAAAAAAAAAACrogAAAAAAAKyiAAAAAAAAAAAAAKyiAAAAAAAAraIAAAAAAAAAAAAAraIAAAAAAACuogAAAAAAAAAAAACuogAAAAAAAK+iAAAAAAAAAAAAAK+iAAAAAAAAsKIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqaIAAAAAAACpogAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALGiAAAAAAAAsqIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsaIAAAAAAACxogAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " e."
					},
					"AwAAALKiAAAAAAAAs6IAAAAAAAAAAAAAs6IAAAAAAAC0ogAAAAAAAAAAAAC0ogAAAAAAALWiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsqIAAAAAAACyogAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAALSiAAAAAAAAtKIAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAtaIAAAAAAAC1ogAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALWiAAAAAAAAtqIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtaIAAAAAAAC1ogAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAALaiAAAAAAAAt6IAAAAAAAAAAAAAt6IAAAAAAAC7ogAAAAAAAAAAAAC7ogAAAAAAALyiAAAAAAAAAAAAALeiAAAAAAAAt6IAAAAAAAAEAAAAICAgILeiAAAAAAAAuaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtqIAAAAAAAC2ogAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJCiAAAAAAAAkaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkKIAAAAAAACQogAAAAAAAAAAAAAAAD5A"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAJCiAAAAAAAAkKIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAkaIAAAAAAACRogAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALSiAAAAAAAAtaIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtKIAAAAAAAC0ogAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " e.stack"
					},
					"CAAAALWiAAAAAAAAtqIAAAAAAAAAAAAAtqIAAAAAAAC3ogAAAAAAAAAAAAC3ogAAAAAAALiiAAAAAAAAAAAAALiiAAAAAAAAuaIAAAAAAAAAAAAAuaIAAAAAAAC6ogAAAAAAAAAAAAC6ogAAAAAAALuiAAAAAAAAAAAAALuiAAAAAAAAvKIAAAAAAAAAAAAAvKIAAAAAAAC9ogAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtaIAAAAAAAC1ogAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAwaIAAAAAAADBogAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 7244 files for \"raw2element\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/lib/eagle/document.js:\n   71  \n   72      Util.define(this, {\n   73:       raw2element: Util.weakMapper((raw, owner, ref) => new EagleElement(owner, ref, raw))\n   74      });\n   75  \n   76:     const { pathMapper, raw2element } = this;\n   77  \n   78      const [obj2path, path2obj] = pathMapper.maps.map(Util.mapFunction);\n   79      const [obj2eagle, path2eagle] = [\n   80:       Util.mapFunction(raw2element),\n   81        Util.mapAdapter((key, value) => (value === undefined && key !== undefined ? this.lookup(key) : undefined))\n   82      ];\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n   59      let root = ref.root || owner.raw ? owner.raw : owner;\n   60      let doc = owner.document;\n   61:     const { pathMapper, raw2element } = doc;\n   62      let insert = Util.inserter(pathMapper);\n   63      if(typeof ref == 'string') ref = new ImmutablePath(ref, { separator: ' ' });\n   ..\n   65      if(!raw) raw = ref.path.apply(root, true);\n   66      if(!raw) raw = ref.dereference();\n   67:     let inst = doc.raw2element(raw, owner, ref);\n   68      insert(inst, ref.path);\n   69      EagleElement.currentElement = inst;\n\n5 matches across 2 files\n\n\nSearching 7244 files for \"pathMapper\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/sw.js:\n  169    'lib/json/json2xml.js',\n  170    'lib/json/path.js',\n  171:   'lib/json/pathMapper.js',\n  172    'lib/json/treeObserver.js',\n  173    'lib/json/util.js',\n\n/home/roman/Projects/plot-cv/lib/json.js:\n    1  export { DereferenceError, Path, MutablePath, ImmutablePath } from './json/path.js';\n    2: export { PathMapper } from './json/pathMapper.js';\n    3  export { xml2json } from './json/xml2json.js';\n    4  export { json2xml } from './json/json2xml.js';\n\n/home/roman/Projects/plot-cv/lib/eagle/document.js:\n   12  import { RGBA } from '../color.js';\n   13  import { EagleNodeList } from './nodeList.js';\n   14: import { PathMapper } from '../json/pathMapper.js';\n   15  import { Palette } from './common.js';\n   16  import { lazyProperty } from '../lazyInitializer.js';\n   ..\n   67      let xmlObj = deep.clone(xml[0]);\n   68      super(project, EagleRef(xmlObj, []), xmlObj);\n   69:     this.pathMapper = new PathMapper(xmlObj, ImmutablePath);\n   70      this.data = xmlStr;\n   71  \n   ..\n   74      });\n   75  \n   76:     const { pathMapper, raw2element } = this;\n   77  \n   78:     const [obj2path, path2obj] = pathMapper.maps.map(Util.mapFunction);\n   79      const [obj2eagle, path2eagle] = [\n   80        Util.mapFunction(raw2element),\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n   59      let root = ref.root || owner.raw ? owner.raw : owner;\n   60      let doc = owner.document;\n   61:     const { pathMapper, raw2element } = doc;\n   62:     let insert = Util.inserter(pathMapper);\n   63      if(typeof ref == 'string') ref = new ImmutablePath(ref, { separator: ' ' });\n   64      if(!Util.isObject(ref) || !('dereference' in ref)) ref = new EagleReference(root, ref);\n\n/home/roman/Projects/plot-cv/lib/json/treeObserver.js:\n    1  import ObservableMembrane from '../proxy/observableMembrane.js';\n    2  import Util from '../util.js';\n    3: import { PathMapper } from './pathMapper.js';\n    4  import { ImmutablePath } from './path.js';\n    5  import { ImmutableXPath } from '../xml/xpath.js';\n    .\n   22    }\n   23  \n   24:   constructor(pathMapper, readOnly = true) {\n   25:     if(!(pathMapper instanceof PathMapper)) pathMapper = new PathMapper();\n   26  \n   27      super({\n   ..\n   32          const value = target[key];\n   33          if(Util.isObject(value)) {\n   34:           pathMapper.set(value, path.concat([]));\n   35            for(let handler of this.handlers) handler('access', target, path.concat([key]), value);\n   36          }\n   ..\n   69      function getPath(target, key) {\n   70        target = this.unwrapProxy(target);\n   71:       let path = pathMapper.get(target);\n   72  \n   73        path = new ImmutablePath(path, true);\n   ..\n   76        let value;\n   77        if(path !== null && Util.isObject(target) && key) {\n   78:         let obj = target[key] ? null : pathMapper.at(path);\n   79          value = obj ? obj[key] : target[key];\n   80          if(Util.isObject(value)) {\n   81            for(let prop in value)\n   82              if(Util.isObject(value[prop]))\n   83:               pathMapper.set(\n   84                  value[prop],\n   85                  Util.isNumeric(prop) && !ImmutablePath.isChildren(path.last)\n   ..\n   99      );\n  100  \n  101:     this.mapper = pathMapper;\n  102      this.readOnly = !!readOnly;\n  103    }\n\n17 matches across 5 files\n\n\nSearching 7244 files for \"new EagleElement\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/lib/eagle/document.js:\n   71  \n   72      Util.define(this, {\n   73:       raw2element: Util.weakMapper((raw, owner, ref) => new EagleElement(owner, ref, raw))\n   74      });\n   75  \n\n/home/roman/Projects/plot-cv/lib/eagle/elementProxy.js:\n   28  \n   29    static create(element, matrix) {\n   30:     let instance = new EagleElementProxy(element, matrix);\n   31      return new Proxy(instance, {\n   32        set(target, prop, value) {\n\n2 matches across 2 files\n\n\nSearching 7244 files for \"new EagleNodeMap\" (regex, case sensitive)\n\n0 matches\n\nSearching 7244 files for \"EagleNodeMap.create\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/lib/eagle/document.js:\n  127  \n  128      lazyProperty(this, 'children', () => EagleNodeList.create(this, ['children'] /*, this.raw.children*/));\n  129:     lazyProperty(this, 'layers', () => EagleNodeMap.create(this, ['children'] /*, this.raw.children*/));\n  130    }\n  131  \n\n/home/roman/Projects/plot-cv/lib/eagle/node.js:\n  176              ? lists[key]\n  177              : () =>\n  178:                 EagleNodeMap.create(\n  179                    lists[key](),\n  180                    ['board', 'schematic', 'library'].indexOf(key) != -1\n\n/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js:\n   90    static create(list, key = 'name', filter) {\n   91      const Ctor = EagleNodeMap;\n   92:     //console.log('EagleNodeMap.create', { list, key });\n   93      const instance = new Ctor(list, key, filter);\n   94      return new Proxy(instance, {\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n  344        lazyProperty(this, 'pins', () => {\n  345          let list = EagleNodeList.create(this, this.path.down('children'), e => e.tagName == 'pin');\n  346:         return EagleNodeMap.create(list, 'name');\n  347        });\n  348      }\n  ...\n  358  \n  359            if(key != 'pad') return list;\n  360:           return EagleNodeMap.create(list, 'name');\n  361          });\n  362  \n  ...\n  392        lazyProperty(this, 'pads', () => {\n  393          let list = EagleNodeList.create(this, this.path.down('children'), e => e.tagName == 'pad');\n  394:         return EagleNodeMap.create(list, 'name');\n  395        });\n  396        lazyProperty(this, 'wires', () =>\n\n6 matches across 4 files\n\n\nSearching 7244 files for \"SchematicSymbol\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/main.js:\n   61  import { Wire } from './lib/eagle/components/wire.js';\n   62  import { Instance } from './lib/eagle/components/instance.js';\n   63: import { SchematicSymbol } from './lib/eagle/components/symbol.js';\n   64  import { Emitter, EventIterator, EventEmitter, EventTarget } from './events.js';\n   65  import { Slot, SlotProvider } from './slots.js';\n   ..\n 1502    //prettier-ignore\n 1503    const imports = {Transformation, Rotation, Translation, Scaling, MatrixTransformation, TransformationList, dom, ReactComponent, iterator, eventIterator, keysim, geom, isBBox, BBox, LineList, Polygon, Circle, TouchListener, trkl, ColorMap, ClipperLib, Shape, devtools, Util, tlite, debounceAsync, tXml, deep, Alea, path, TimeoutError, Timers, asyncHelpers, Cache, CacheStorage, InterpretGcode, gcodetogeometry, GcodeObject, gcodeToObject, objectToGcode, parseGcode, GcodeParser, GCodeLineStream, parseStream, parseFile, parseFileSync, parseString, parseStringSync, noop, Interpreter, Iterator, Functional, makeLocalStorage, Repeater, useResult, LogJS, useDimensions, toXML, MutablePath, ImmutablePath, MutablePath,arrayDiff, objectDiff, Object2Array, XmlObject, XmlAttr, MutableXPath,ImmutableXPath, RGBA, isRGBA, ImmutableRGBA, HSLA, isHSLA, ImmutableHSLA, ColoredText, React, h, html, render, Fragment, Component, useState, useLayoutEffect, useRef, components, Chooser, DynamicLabel, Button, FileList, Panel, SizedAspectRatioBox, TransformedElement, Canvas, ColorWheel, Slider, CrossHair, FloatingPanel, DropDown, Conditional, Message, WebSocketClient,    PipeTo, AsyncRead, AsyncWrite,   DebugTransformStream, TextEncodeTransformer, TextEncoderStream, TextDecodeTransformer, TextDecoderStream, TransformStreamSink, TransformStreamSource, TransformStreamDefaultController, TransformStream, ArrayWriter, readStream, WriteToRepeater, LogSink, RepeaterSink, StringReader, LineReader, ChunkReader, ByteReader, PipeToRepeater,ReadFromIterator, WritableStream, useTrkl, RAD2DEG, DEG2RAD, VERTICAL, HORIZONTAL, HORIZONTAL_VERTICAL, DEBUG, log, setDebug, PinSizes, EscapeClassName, UnescapeClassName, LayerToClass, ElementToClass, ClampAngle, AlignmentAngle, MakeRotation, EagleAlignments, Alignment, SVGAlignments, AlignmentAttrs, RotateTransformation, LayerAttributes, InvertY, PolarToCartesian, CartesianToPolar, RenderArc,\n 1504:  CalculateArcRadius, LinesToPath, MakeCoordTransformer, useAttributes , Wire, Instance, SchematicSymbol, Emitter, EventIterator, Slot, SlotProvider, Voronoi, GerberParser, lazyInitializer, LibraryRenderer,EagleElementProxy,  BoardRenderer, DereferenceError, EagleDocument, EagleElement, EagleNode, EagleNodeList, EagleNodeMap, EagleProject, EagleRef, EagleReference, EagleSVGRenderer, Renderer, SchematicRenderer, makeEagleElement, makeEagleNode, brcache, lscache, BaseCache, CachedFetch, NormalizeResponse, ResponseData, FetchURL, FetchCached, GetProject, ListProjects, GetLayer, AddLayer, BoardToGerber, GerberToGcode, GcodeToPolylines, \n 1505   ...github, classNames , BinaryTree, normalizePath, reverseNormalizedPath, reverseSubPath, reversePath, ...commands,  DEBUG, objectInspect, SvgPath, renderToString , ...ecmascript };\n 1506  \n\n/home/roman/Projects/plot-cv/lib/eagle/components.js:\n   18  import { WirePath } from './components/wirePath.js';\n   19  import { Package } from './components/package.js';\n   20: import { SchematicSymbol } from './components/symbol.js';\n   21  import { Hole } from './components/hole.js';\n   22  import { Dimension } from './components/dimension.js';\n   ..\n   40    Origin,\n   41    Polygon,\n   42:   Symbol: SchematicSymbol,\n   43    Package,\n   44    Hole,\n   ..\n   80  export { WirePath } from './components/wirePath.js';\n   81  export { Package } from './components/package.js';\n   82: export { SchematicSymbol } from './components/symbol.js';\n   83  export { Instance } from './components/instance.js';\n   84  export { Sheet } from './components/sheet.js';\n\n/home/roman/Projects/plot-cv/lib/eagle/components/instance.js:\n    1  import { h, Component } from '../../dom/preactComponent.js';\n    2  import { TransformationList } from '../../geom/transformation.js';\n    3: import { SchematicSymbol } from './symbol.js';\n    4  import { MakeRotation, log, useTransform } from '../renderUtils.js';\n    5  import { useValue } from '../../repeater/react-hooks.js';\n    .\n   35    // value = value.replace(/Œ©/g, \"\\u2126;\").replace(/Œº/g, \"\\u00b5;\");\n   36  \n   37:   const sym = h(SchematicSymbol, {\n   38      data: symbol,\n   39      opts: {\n\n/home/roman/Projects/plot-cv/lib/eagle/components/sheet.js:\n    1  import { h, Component } from '../../dom/preactComponent.js';\n    2  import { TransformationList } from '../../geom/transformation.js';\n    3: import { SchematicSymbol } from './symbol.js';\n    4  import { Instance } from './instance.js';\n    5  import { MakeRotation, log, useTransform } from '../renderUtils.js';\n\n/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js:\n    3  import { ElementToComponent } from '../components.js';\n    4  \n    5: export const SchematicSymbol = ({ data, component = Fragment, id, class: className, ...props }) => {\n    6:   console.log(`SchematicSymbol.render`, { data,id });\n    7    const children = [...data.children];\n    8  \n\n10 matches across 5 files\n\n\nSearching 7244 files for \"libraries\\[\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/eagle-shell.js:\n  733    console.log('libraryNames', libraryNames);\n  734  \n  735:   const libraries = libraryNames.map(name => [name, schematic.libraries[name], board.libraries[name]]);\n  736    for(let [name, ...libs] of libraries) {\n  737      let obj = { symbols: [], packages: [], devicesets: [] };\n\n/home/roman/Projects/plot-cv/lib/eagle/project.js:\n  244      let libraries = {\n  245        file: this.getLibrary(name),\n  246:       schematic: schematic.libraries[name],\n  247:       board: board.libraries[name]\n  248      };\n  249  \n  ...\n  260      for(let destDoc of ['schematic', 'board']) {\n  261        //console.log(`project[${destDoc}].libraries:`, this[destDoc].libraries);\n  262:       //console.log(`libraries[${destDoc}]:`, libraries[destDoc]);\n  263:       //console.log(`libraries[${destDoc}].packages:`, libraries[destDoc].packages);\n  264        const libProps = lib => lib;\n  265  \n  ...\n  267          return Object.fromEntries(['packages', 'symbols', 'devicesets'].map(destDoc => [destDoc, lib[destDoc]]).filter(([destDoc, v]) => v));\n  268        };*/\n  269:       const destLib = libProps(libraries[destDoc]);\n  270        const srcLib = libProps(libraries.file);\n  271        //console.log('libraries', libraries);\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n  187                }\n  188              } else {\n  189:               const library = doc.libraries[attributes.library];\n  190                const deviceset = library.devicesets[attributes.deviceset];\n  191                const device = deviceset.devices[attributes.device];\n  ...\n  217                  break;\n  218                case 'library':\n  219:                 hfn = () => doc.libraries[attributes.library];\n  220                  break;\n  221                case 'deviceset':\n  ...\n  232              const module = elem.chain.module || doc;\n  233  \n  234:             /*        if(this.library === undefined) trkl.bind(this, 'library', () => this.part.library || this.document.libraries[this.part.attributes.library]);\n  235                if(this.deviceset === undefined) trkl.bind(this, 'deviceset', () => this.part.deviceset || this.library.devicesets[this.part.attributes.deviceset]);\n  236                if(this.value === undefined) trkl.bind(this, 'value', () => this.part.value || this.deviceset.name);\n  ...\n  595        const { raw, ref, path, attributes, owner, document } = this;\n  596        const libName = raw.attributes.library;\n  597:       let library = document.libraries[libName];\n  598        console.log(Util.className(this) + '.getBounds', path + '', `<${this.tagName}>`, { libName, library });\n  599        let pkg = library.packages[raw.attributes.package];\n\n13 matches across 3 files\n\n\nSearching 7244 files for \"\\.libraries\\[\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/eagle-shell.js:\n  733    console.log('libraryNames', libraryNames);\n  734  \n  735:   const libraries = libraryNames.map(name => [name, schematic.libraries[name], board.libraries[name]]);\n  736    for(let [name, ...libs] of libraries) {\n  737      let obj = { symbols: [], packages: [], devicesets: [] };\n\n/home/roman/Projects/plot-cv/lib/eagle/project.js:\n  244      let libraries = {\n  245        file: this.getLibrary(name),\n  246:       schematic: schematic.libraries[name],\n  247:       board: board.libraries[name]\n  248      };\n  249  \n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n  187                }\n  188              } else {\n  189:               const library = doc.libraries[attributes.library];\n  190                const deviceset = library.devicesets[attributes.deviceset];\n  191                const device = deviceset.devices[attributes.device];\n  ...\n  217                  break;\n  218                case 'library':\n  219:                 hfn = () => doc.libraries[attributes.library];\n  220                  break;\n  221                case 'deviceset':\n  ...\n  232              const module = elem.chain.module || doc;\n  233  \n  234:             /*        if(this.library === undefined) trkl.bind(this, 'library', () => this.part.library || this.document.libraries[this.part.attributes.library]);\n  235                if(this.deviceset === undefined) trkl.bind(this, 'deviceset', () => this.part.deviceset || this.library.devicesets[this.part.attributes.deviceset]);\n  236                if(this.value === undefined) trkl.bind(this, 'value', () => this.part.value || this.deviceset.name);\n  ...\n  595        const { raw, ref, path, attributes, owner, document } = this;\n  596        const libName = raw.attributes.library;\n  597:       let library = document.libraries[libName];\n  598        console.log(Util.className(this) + '.getBounds', path + '', `<${this.tagName}>`, { libName, library });\n  599        let pkg = library.packages[raw.attributes.package];\n\n8 matches across 3 files\n\n\nSearching 7244 files for \".libraries\\[([^]]*)\\]\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/eagle-shell.js:\n  733    console.log('libraryNames', libraryNames);\n  734  \n  735:   const libraries = libraryNames.map(name => [name, schematic.libraries[name], board.libraries[name]]);\n  736    for(let [name, ...libs] of libraries) {\n  737      let obj = { symbols: [], packages: [], devicesets: [] };\n\n/home/roman/Projects/plot-cv/lib/eagle/project.js:\n  244      let libraries = {\n  245        file: this.getLibrary(name),\n  246:       schematic: schematic.libraries[name],\n  247:       board: board.libraries[name]\n  248      };\n  249  \n  ...\n  260      for(let destDoc of ['schematic', 'board']) {\n  261        //console.log(`project[${destDoc}].libraries:`, this[destDoc].libraries);\n  262:       //console.log(`libraries[${destDoc}]:`, libraries[destDoc]);\n  263:       //console.log(`libraries[${destDoc}].packages:`, libraries[destDoc].packages);\n  264        const libProps = lib => lib;\n  265  \n  ...\n  267          return Object.fromEntries(['packages', 'symbols', 'devicesets'].map(destDoc => [destDoc, lib[destDoc]]).filter(([destDoc, v]) => v));\n  268        };*/\n  269:       const destLib = libProps(libraries[destDoc]);\n  270        const srcLib = libProps(libraries.file);\n  271        //console.log('libraries', libraries);\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n  187                }\n  188              } else {\n  189:               const library = doc.libraries[attributes.library];\n  190                const deviceset = library.devicesets[attributes.deviceset];\n  191                const device = deviceset.devices[attributes.device];\n  ...\n  217                  break;\n  218                case 'library':\n  219:                 hfn = () => doc.libraries[attributes.library];\n  220                  break;\n  221                case 'deviceset':\n  ...\n  232              const module = elem.chain.module || doc;\n  233  \n  234:             /*        if(this.library === undefined) trkl.bind(this, 'library', () => this.part.library || this.document.libraries[this.part.attributes.library]);\n  235                if(this.deviceset === undefined) trkl.bind(this, 'deviceset', () => this.part.deviceset || this.library.devicesets[this.part.attributes.deviceset]);\n  236                if(this.value === undefined) trkl.bind(this, 'value', () => this.part.value || this.deviceset.name);\n  ...\n  595        const { raw, ref, path, attributes, owner, document } = this;\n  596        const libName = raw.attributes.library;\n  597:       let library = document.libraries[libName];\n  598        console.log(Util.className(this) + '.getBounds', path + '', `<${this.tagName}>`, { libName, library });\n  599        let pkg = library.packages[raw.attributes.package];\n\n13 matches across 3 files\n\n\nSearching 7244 files for \".libraries\\[([^]]*)\\]\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/lib/eagle/project.js:\n  244      let libraries = {\n  245        file: this.getLibrary(name),\n  246:       schematic: schematic.libraries[name],\n  247:       board: board.libraries[name]\n  248      };\n  249  \n  ...\n  260      for(let destDoc of ['schematic', 'board']) {\n  261        //console.log(`project[${destDoc}].libraries:`, this[destDoc].libraries);\n  262:       //console.log(`libraries[${destDoc}]:`, libraries[destDoc]);\n  263:       //console.log(`libraries[${destDoc}].packages:`, libraries[destDoc].packages);\n  264        const libProps = lib => lib;\n  265  \n  ...\n  267          return Object.fromEntries(['packages', 'symbols', 'devicesets'].map(destDoc => [destDoc, lib[destDoc]]).filter(([destDoc, v]) => v));\n  268        };*/\n  269:       const destLib = libProps(libraries[destDoc]);\n  270        const srcLib = libProps(libraries.file);\n  271        //console.log('libraries', libraries);\n\n/home/roman/Projects/plot-cv/lib/eagle/element.js:\n  187                }\n  188              } else {\n  189:               const library = doc.libraries[attributes.library];\n  190                const deviceset = library.devicesets[attributes.deviceset];\n  191                const device = deviceset.devices[attributes.device];\n  ...\n  217                  break;\n  218                case 'library':\n  219:                 hfn = () => doc.getLibrary(attributes.library);\n  220                  break;\n  221                case 'deviceset':\n  ...\n  232              const module = elem.chain.module || doc;\n  233  \n  234:             /*        if(this.library === undefined) trkl.bind(this, 'library', () => this.part.library || this.document.getLibrary(this.part.attributes.library));\n  235                if(this.deviceset === undefined) trkl.bind(this, 'deviceset', () => this.part.deviceset || this.library.devicesets[this.part.attributes.deviceset]);\n  236                if(this.value === undefined) trkl.bind(this, 'value', () => this.part.value || this.deviceset.name);\n  ...\n  595        const { raw, ref, path, attributes, owner, document } = this;\n  596        const libName = raw.attributes.library;\n  597:       let library = document.libraries[libName];\n  598        console.log(Util.className(this) + '.getBounds', path + '', `<${this.tagName}>`, { libName, library });\n  599        let pkg = library.packages[raw.attributes.package];\n\n11 matches across 2 files\n\n\nSearching 7244 files for \".libraries\\[([^]]*)\\]\" (regex, case sensitive)\n\n0 matches",
			"settings":
			{
				"buffer_size": 22735,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "lib/eagle/document.js",
			"settings":
			{
				"buffer_size": 12395,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					892,
					1,
					"insert",
					{
						"characters": "this"
					},
					"BAAAAGgQAAAAAAAAaRAAAAAAAAAAAAAAaRAAAAAAAABqEAAAAAAAAAAAAABqEAAAAAAAAGsQAAAAAAAAAAAAAGsQAAAAAAAAbBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBAAAAAAAABoEAAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAIkQAAAAAAAAihAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRAAAAAAAACJEAAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIoQAAAAAAAAixAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihAAAAAAAACKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"left_delete",
					null,
					"AQAAAIoQAAAAAAAAihAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAixAAAAAAAACLEAAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "name')"
					},
					"BgAAAIoQAAAAAAAAixAAAAAAAAAAAAAAixAAAAAAAACMEAAAAAAAAAAAAACMEAAAAAAAAI0QAAAAAAAAAAAAAI0QAAAAAAAAjhAAAAAAAAAAAAAAjhAAAAAAAACPEAAAAAAAAAAAAACPEAAAAAAAAJAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihAAAAAAAACKEAAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"cut",
					null,
					"AQAAAJAQAAAAAAAAkBAAAAAAAAAnAAAAWydjaGlsZHJlbiddIC8qLCB0aGlzLnJhdy5jaGlsZHJlbiovKSk7",
					"AQAAAAAAAAABAAAAkBAAAAAAAAC3EAAAAAAAAP///////+9/"
				],
				[
					901,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJAQAAAAAAAAkRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBAAAAAAAACQEAAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJAQAAAAAAAAkRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBAAAAAAAACQEAAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"cut",
					null,
					"AQAAAPQBAAAAAAAA9AEAAAAAAAAvAAAAaW1wb3J0IHsgRWFnbGVOb2RlTGlzdCB9IGZyb20gJy4vbm9kZUxpc3QuanMnOwo",
					"AQAAAAAAAAABAAAA9AEAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					2,
					"paste",
					null,
					"AgAAAPQBAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAABSAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					930,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA2AgAAAAAAAAQAAABMaXN0",
					"AQAAAAAAAAABAAAANQIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					1,
					"left_delete",
					null,
					"AQAAADUCAAAAAAAANQIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": "Map"
					},
					"AwAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": "Map"
					},
					"BAAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABIAgAAAAAAAAQAAABMaXN0SAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFwQAAAAAAAAXRAAAAAAAAAAAAAAXRAAAAAAAABeEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBAAAAAAAABcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPIPAAAAAAAA8w8AAAAAAAAAAAAA8w8AAAAAAAD3DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8g8AAAAAAADyDwAAAAAAAAAAAAAAAERA"
				],
				[
					977,
					3,
					"left_delete",
					null,
					"AwAAAPUPAAAAAAAA9Q8AAAAAAAACAAAAICDzDwAAAAAAAPMPAAAAAAAAAgAAACAg8g8AAAAAAADyDwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA9w8AAAAAAAD3DwAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABeEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRAAAAAAAABZEAAAAAAAAP///////+9/"
				],
				[
					1023,
					1,
					"insert",
					{
						"characters": "\n\n\nfunction"
					},
					"DAAAAB0DAAAAAAAAHgMAAAAAAAAAAAAAWxAAAAAAAABbEAAAAAAAAAQAAAAgICAgHgMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIQMAAAAAAAAAAAAAIQMAAAAAAAAiAwAAAAAAAAAAAAAiAwAAAAAAACMDAAAAAAAAAAAAACMDAAAAAAAAJAMAAAAAAAAAAAAAJAMAAAAAAAAlAwAAAAAAAAAAAAAlAwAAAAAAACYDAAAAAAAAAAAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAoAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQMAAAAAAAAdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1024,
					1,
					"insert",
					{
						"characters": " Gwt"
					},
					"BAAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAMAAAAAAAAoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					3,
					"left_delete",
					null,
					"AwAAACsDAAAAAAAAKwMAAAAAAAABAAAAdCoDAAAAAAAAKgMAAAAAAAABAAAAdykDAAAAAAAAKQMAAAAAAAABAAAARw",
					"AQAAAAAAAAABAAAALAMAAAAAAAAsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1026,
					1,
					"insert",
					{
						"characters": "GetProxy"
					},
					"CAAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC8DAAAAAAAAAAAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADEDAAAAAAAAMwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQMAAAAAAAAxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1028,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1029,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA4AwAAAAAAADkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": " null"
					},
					"BQAAADkDAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADwDAAAAAAAAAAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8DAAAAAAAAQAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEADAAAAAAAAQgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAMAAAAAAABAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAABCAwAAAAAAAEQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQMAAAAAAABBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AwAAADIDAAAAAAAAMwMAAAAAAAAAAAAAQwMAAAAAAABDAwAAAAAAAAIAAAAgIDMDAAAAAAAANAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1040,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAMAAAAAAAA0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYDAAAAAAAANwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1047,
					1,
					"insert",
					{
						"characters": "  return"
					},
					"CAAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABJAwAAAAAAAEoDAAAAAAAAAAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAwGxA"
				],
				[
					1048,
					1,
					"insert",
					{
						"characters": " nwe"
					},
					"BAAAAE8DAAAAAAAAUAMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAABRAwAAAAAAAFIDAAAAAAAAAAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1049,
					1,
					"insert",
					{
						"characters": " P"
					},
					"AgAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwMAAAAAAABTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1050,
					4,
					"left_delete",
					null,
					"BAAAAFQDAAAAAAAAVAMAAAAAAAABAAAAUFMDAAAAAAAAUwMAAAAAAAABAAAAIFIDAAAAAAAAUgMAAAAAAAABAAAAZVEDAAAAAAAAUQMAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAVQMAAAAAAABVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": "ew"
					},
					"AgAAAFEDAAAAAAAAUgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQMAAAAAAABRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					1,
					"insert",
					{
						"characters": " Proxy"
					},
					"BgAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAAVwMAAAAAAABYAwAAAAAAAAAAAABYAwAAAAAAAFkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwMAAAAAAABTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFkDAAAAAAAAWwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQMAAAAAAABZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1054,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFoDAAAAAAAAXAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgMAAAAAAABaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1056,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAMAAAAAAABcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4DAAAAAAAAXwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgMAAAAAAABeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					2,
					"left_delete",
					null,
					"AgAAAF4DAAAAAAAAXgMAAAAAAAABAAAAIF0DAAAAAAAAXQMAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAXwMAAAAAAABfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF0DAAAAAAAAXgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQMAAAAAAABdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1060,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAF4DAAAAAAAAYAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgMAAAAAAABeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAF8DAAAAAAAAYAMAAAAAAAAAAAAAYAMAAAAAAABiAwAAAAAAAAAAAABiAwAAAAAAAGMDAAAAAAAAAAAAAGMDAAAAAAAAZQMAAAAAAAAAAAAAYAMAAAAAAABgAwAAAAAAAAIAAAAgIGADAAAAAAAAZAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwMAAAAAAABfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAABmAwAAAAAAAGcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAMAAAAAAABkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1063,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGcDAAAAAAAAaQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwMAAAAAAABnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1065,
					2,
					"left_delete",
					null,
					"AgAAAGkDAAAAAAAAaQMAAAAAAAABAAAAZWgDAAAAAAAAaAMAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAagMAAAAAAABqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"insert",
					{
						"characters": "targhet"
					},
					"BwAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAABqAwAAAAAAAGsDAAAAAAAAAAAAAGsDAAAAAAAAbAMAAAAAAAAAAAAAbAMAAAAAAABtAwAAAAAAAAAAAABtAwAAAAAAAG4DAAAAAAAAAAAAAG4DAAAAAAAAbwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					3,
					"left_delete",
					null,
					"AwAAAG4DAAAAAAAAbgMAAAAAAAABAAAAdG0DAAAAAAAAbQMAAAAAAAABAAAAZWwDAAAAAAAAbAMAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1068,
					1,
					"insert",
					{
						"characters": "et,prop,"
					},
					"CAAAAGwDAAAAAAAAbQMAAAAAAAAAAAAAbQMAAAAAAABuAwAAAAAAAAAAAABuAwAAAAAAAG8DAAAAAAAAAAAAAG8DAAAAAAAAcAMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAABxAwAAAAAAAHIDAAAAAAAAAAAAAHIDAAAAAAAAcwMAAAAAAAAAAAAAcwMAAAAAAAB0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAMAAAAAAABsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1069,
					1,
					"insert",
					{
						"characters": "receiver"
					},
					"CAAAAHQDAAAAAAAAdQMAAAAAAAAAAAAAdQMAAAAAAAB2AwAAAAAAAAAAAAB2AwAAAAAAAHcDAAAAAAAAAAAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAB5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAMAAAAAAAB0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0DAAAAAAAAfgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQMAAAAAAAB9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH4DAAAAAAAAgAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgMAAAAAAAB+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1073,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACEAwAAAAAAAAAAAACEAwAAAAAAAIUDAAAAAAAAAAAAAIUDAAAAAAAAiQMAAAAAAAAAAAAAgAMAAAAAAACAAwAAAAAAAAQAAAAgICAggAMAAAAAAACGAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1074,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAhwMAAAAAAACIAwAAAAAAAAAAAACIAwAAAAAAAIkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgMAAAAAAACGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"insert",
					{
						"characters": " al"
					},
					"AwAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAIwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQMAAAAAAACJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					2,
					"left_delete",
					null,
					"AgAAAIsDAAAAAAAAiwMAAAAAAAABAAAAbIoDAAAAAAAAigMAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					1,
					"insert",
					{
						"characters": "layer"
					},
					"BQAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAACMAwAAAAAAAI0DAAAAAAAAAAAAAI0DAAAAAAAAjgMAAAAAAAAAAAAAjgMAAAAAAACPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1078,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAI8DAAAAAAAAkAMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwMAAAAAAACPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEDAAAAAAAAkgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1080,
					8,
					"left_delete",
					null,
					"CAAAAJEDAAAAAAAAkQMAAAAAAAABAAAAIJADAAAAAAAAkAMAAAAAAAABAAAAPY8DAAAAAAAAjwMAAAAAAAABAAAAII4DAAAAAAAAjgMAAAAAAAABAAAAco0DAAAAAAAAjQMAAAAAAAABAAAAZYwDAAAAAAAAjAMAAAAAAAABAAAAeYsDAAAAAAAAiwMAAAAAAAABAAAAYYoDAAAAAAAAigMAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "ret=fn"
					},
					"BgAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAACMAwAAAAAAAI0DAAAAAAAAAAAAAI0DAAAAAAAAjgMAAAAAAAAAAAAAjgMAAAAAAACPAwAAAAAAAAAAAACPAwAAAAAAAJADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJADAAAAAAAAkgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAMAAAAAAACQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BAAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAACTAwAAAAAAAJQDAAAAAAAAAAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUDAAAAAAAAlgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQMAAAAAAACVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1088,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYDAAAAAAAAlwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgMAAAAAAACWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1090,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAADcDAAAAAAAAOAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAwGxA"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": ",target)"
					},
					"CAAAADwDAAAAAAAAPQMAAAAAAAAAAAAAPQMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1096,
					1,
					"insert",
					{
						"characters": "target"
					},
					"BgAAAKADAAAAAAAAoQMAAAAAAAAAAAAAoQMAAAAAAACiAwAAAAAAAAAAAACiAwAAAAAAAKMDAAAAAAAAAAAAAKMDAAAAAAAApAMAAAAAAAAAAAAApAMAAAAAAAClAwAAAAAAAAAAAAClAwAAAAAAAKYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAMAAAAAAACgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAqQMAAAAAAACvAwAAAAAAAAAAAACvAwAAAAAAALADAAAAAAAAAAAAALADAAAAAAAAsQMAAAAAAAAAAAAAsQMAAAAAAACyAwAAAAAAAAAAAACyAwAAAAAAALMDAAAAAAAAAAAAALMDAAAAAAAAtAMAAAAAAAAAAAAAtAMAAAAAAAC1AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAMAAAAAAACoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1100,
					1,
					"insert",
					{
						"characters": " ret;:"
					},
					"BgAAALUDAAAAAAAAtgMAAAAAAAAAAAAAtgMAAAAAAAC3AwAAAAAAAAAAAAC3AwAAAAAAALgDAAAAAAAAAAAAALgDAAAAAAAAuQMAAAAAAAAAAAAAuQMAAAAAAAC6AwAAAAAAAAAAAAC6AwAAAAAAALsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQMAAAAAAAC1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"left_delete",
					null,
					"AQAAALoDAAAAAAAAugMAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAuwMAAAAAAAC7AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMUDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQMAAAAAAADFAwAAAAAAAAAAAAAAAElA"
				],
				[
					1118,
					1,
					"insert",
					{
						"characters": "\ntghi"
					},
					"BQAAAAURAAAAAAAABhEAAAAAAAAAAAAABhEAAAAAAAAHEQAAAAAAAAAAAAAHEQAAAAAAAAgRAAAAAAAAAAAAAAgRAAAAAAAACREAAAAAAAAAAAAACREAAAAAAAAKEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABREAAAAAAAAFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					3,
					"left_delete",
					null,
					"AwAAAAkRAAAAAAAACREAAAAAAAABAAAAaQgRAAAAAAAACBEAAAAAAAABAAAAaAcRAAAAAAAABxEAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAChEAAAAAAAAKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert",
					{
						"characters": "his.laywer"
					},
					"CgAAAAcRAAAAAAAACBEAAAAAAAAAAAAACBEAAAAAAAAJEQAAAAAAAAAAAAAJEQAAAAAAAAoRAAAAAAAAAAAAAAoRAAAAAAAACxEAAAAAAAAAAAAACxEAAAAAAAAMEQAAAAAAAAAAAAAMEQAAAAAAAA0RAAAAAAAAAAAAAA0RAAAAAAAADhEAAAAAAAAAAAAADhEAAAAAAAAPEQAAAAAAAAAAAAAPEQAAAAAAABARAAAAAAAAAAAAABARAAAAAAAAEREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxEAAAAAAAAHEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					3,
					"left_delete",
					null,
					"AwAAABARAAAAAAAAEBEAAAAAAAABAAAAcg8RAAAAAAAADxEAAAAAAAABAAAAZQ4RAAAAAAAADhEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAEREAAAAAAAAREQAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"insert",
					{
						"characters": "ers"
					},
					"AwAAAA4RAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAQEQAAAAAAAAAAAAAQEQAAAAAAABERAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhEAAAAAAAAOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1123,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABERAAAAAAAAEhEAAAAAAAAAAAAAEhEAAAAAAAATEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEREAAAAAAAAREQAAAAAAAAAAAAAAAPC/"
				],
				[
					1124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMRAAAAAAAAFBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExEAAAAAAAATEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1125,
					1,
					"paste",
					null,
					"AQAAABQRAAAAAAAAHBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBEAAAAAAAAUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAABwRAAAAAAAAHhEAAAAAAAAAAAAAHREAAAAAAAAfEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBEAAAAAAAAcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1127,
					1,
					"insert",
					{
						"characters": "prop,target"
					},
					"CwAAAB4RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAgEQAAAAAAAAAAAAAgEQAAAAAAACERAAAAAAAAAAAAACERAAAAAAAAIhEAAAAAAAAAAAAAIhEAAAAAAAAjEQAAAAAAAAAAAAAjEQAAAAAAACQRAAAAAAAAAAAAACQRAAAAAAAAJREAAAAAAAAAAAAAJREAAAAAAAAmEQAAAAAAAAAAAAAmEQAAAAAAACcRAAAAAAAAAAAAACcRAAAAAAAAKBEAAAAAAAAAAAAAKBEAAAAAAAApEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhEAAAAAAAAeEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1129,
					1,
					"insert",
					{
						"characters": " ?=>"
					},
					"BAAAACoRAAAAAAAAKxEAAAAAAAAAAAAAKxEAAAAAAAAsEQAAAAAAAAAAAAAsEQAAAAAAAC0RAAAAAAAAAAAAAC0RAAAAAAAALhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhEAAAAAAAAqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					3,
					"left_delete",
					null,
					"AwAAAC0RAAAAAAAALREAAAAAAAABAAAAPiwRAAAAAAAALBEAAAAAAAABAAAAPSsRAAAAAAAAKxEAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAALhEAAAAAAAAuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAACsRAAAAAAAALBEAAAAAAAAAAAAALBEAAAAAAAAtEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxEAAAAAAAArEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1132,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0RAAAAAAAALhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALREAAAAAAAAtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAC4RAAAAAAAAMBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALhEAAAAAAAAuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAwEQAAAAAAADIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1138,
					1,
					"insert",
					{
						"characters": ":;"
					},
					"AwAAADURAAAAAAAANhEAAAAAAAAAAAAAMBEAAAAAAAAwEQAAAAAAAAIAAAAgIDQRAAAAAAAANREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANREAAAAAAAA1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					2,
					"left_delete",
					null,
					"AgAAADQRAAAAAAAANBEAAAAAAAABAAAAOzMRAAAAAAAAMxEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAANREAAAAAAAA1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1140,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADMRAAAAAAAANBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxEAAAAAAAAzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					1,
					"insert",
					{
						"characters": "this.getLay"
					},
					"CwAAADARAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAAAyEQAAAAAAAAAAAAAyEQAAAAAAADMRAAAAAAAAAAAAADMRAAAAAAAANBEAAAAAAAAAAAAANBEAAAAAAAA1EQAAAAAAAAAAAAA1EQAAAAAAADYRAAAAAAAAAAAAADYRAAAAAAAANxEAAAAAAAAAAAAANxEAAAAAAAA4EQAAAAAAAAAAAAA4EQAAAAAAADkRAAAAAAAAAAAAADkRAAAAAAAAOhEAAAAAAAAAAAAAOhEAAAAAAAA7EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBEAAAAAAAAwEQAAAAAAAAAAAAAAAD5A"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAADsRAAAAAAAAPBEAAAAAAAAAAAAAPBEAAAAAAAA9EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxEAAAAAAAA7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD0RAAAAAAAAPxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPREAAAAAAAA9EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1150,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAADARAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAAAyEQAAAAAAAAAAAAAyEQAAAAAAADMRAAAAAAAAAAAAADMRAAAAAAAANBEAAAAAAAAAAAAANBEAAAAAAAA1EQAAAAAAAAAAAAA1EQAAAAAAADYRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBEAAAAAAAAwEQAAAAAAAAAAAAAAAAAA"
				],
				[
					1151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYRAAAAAAAANxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhEAAAAAAAA2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1155,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BAAAAEURAAAAAAAARhEAAAAAAAAAAAAARhEAAAAAAABHEQAAAAAAAAAAAABHEQAAAAAAAEgRAAAAAAAAAAAAAEgRAAAAAAAASREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEoRAAAAAAAASxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShEAAAAAAABKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEwDAAAAAAAATQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": " obj"
					},
					"BAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAFADAAAAAAAAUQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFEDAAAAAAAAUgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQMAAAAAAABRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1166,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMDAAAAAAAAVAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwMAAAAAAABTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					6,
					"left_delete",
					null,
					"BgAAAFMDAAAAAAAAUwMAAAAAAAABAAAAIFIDAAAAAAAAUgMAAAAAAAABAAAAPVEDAAAAAAAAUQMAAAAAAAABAAAAIFADAAAAAAAAUAMAAAAAAAABAAAAak8DAAAAAAAATwMAAAAAAAABAAAAYk4DAAAAAAAATgMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAVAMAAAAAAABUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1168,
					1,
					"insert",
					{
						"characters": "handlers"
					},
					"CAAAAE4DAAAAAAAATwMAAAAAAAAAAAAATwMAAAAAAABQAwAAAAAAAAAAAABQAwAAAAAAAFEDAAAAAAAAAAAAAFEDAAAAAAAAUgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAABTAwAAAAAAAFQDAAAAAAAAAAAAAFQDAAAAAAAAVQMAAAAAAAAAAAAAVQMAAAAAAABWAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFYDAAAAAAAAVwMAAAAAAAAAAAAAVwMAAAAAAABYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgMAAAAAAABWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1170,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgDAAAAAAAAWQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAMAAAAAAABYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFkDAAAAAAAAWwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQMAAAAAAABZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwMAAAAAAADPAwAAAAAAAAAAAAAAcIJA"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": " ...handlers"
					},
					"DAAAANADAAAAAAAA0QMAAAAAAAAAAAAA0QMAAAAAAADSAwAAAAAAAAAAAADSAwAAAAAAANMDAAAAAAAAAAAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAADVAwAAAAAAANYDAAAAAAAAAAAAANYDAAAAAAAA1wMAAAAAAAAAAAAA1wMAAAAAAADYAwAAAAAAAAAAAADYAwAAAAAAANkDAAAAAAAAAAAAANkDAAAAAAAA2gMAAAAAAAAAAAAA2gMAAAAAAADbAwAAAAAAAAAAAADbAwAAAAAAANwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AMAAAAAAADQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGkRAAAAAAAAahEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaREAAAAAAABpEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoRAAAAAAAAaxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahEAAAAAAABqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1190,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGsRAAAAAAAAbREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxEAAAAAAABrEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1191,
					1,
					"insert",
					{
						"characters": " keys"
					},
					"BQAAAGwRAAAAAAAAbREAAAAAAAAAAAAAbREAAAAAAABuEQAAAAAAAAAAAABuEQAAAAAAAG8RAAAAAAAAAAAAAG8RAAAAAAAAcBEAAAAAAAAAAAAAcBEAAAAAAABxEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBEAAAAAAABsEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1192,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHERAAAAAAAAcxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcREAAAAAAABxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1194,
					6,
					"left_delete",
					null,
					"BgAAAHIRAAAAAAAAchEAAAAAAAABAAAAKXERAAAAAAAAcREAAAAAAAABAAAAKHARAAAAAAAAcBEAAAAAAAABAAAAc28RAAAAAAAAbxEAAAAAAAABAAAAeW4RAAAAAAAAbhEAAAAAAAABAAAAZW0RAAAAAAAAbREAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAcxEAAAAAAABzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"insert",
					{
						"characters": "oiwn"
					},
					"BAAAAG0RAAAAAAAAbhEAAAAAAAAAAAAAbhEAAAAAAABvEQAAAAAAAAAAAABvEQAAAAAAAHARAAAAAAAAAAAAAHARAAAAAAAAcREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbREAAAAAAABtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1196,
					3,
					"left_delete",
					null,
					"AwAAAHARAAAAAAAAcBEAAAAAAAABAAAAbm8RAAAAAAAAbxEAAAAAAAABAAAAd24RAAAAAAAAbhEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAcREAAAAAAABxEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1197,
					1,
					"insert",
					{
						"characters": "wnKeys"
					},
					"BgAAAG4RAAAAAAAAbxEAAAAAAAAAAAAAbxEAAAAAAABwEQAAAAAAAAAAAABwEQAAAAAAAHERAAAAAAAAAAAAAHERAAAAAAAAchEAAAAAAAAAAAAAchEAAAAAAABzEQAAAAAAAAAAAABzEQAAAAAAAHQRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhEAAAAAAABuEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1198,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHQRAAAAAAAAdhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBEAAAAAAAB0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1199,
					1,
					"insert",
					{
						"characters": "target"
					},
					"BgAAAHURAAAAAAAAdhEAAAAAAAAAAAAAdhEAAAAAAAB3EQAAAAAAAAAAAAB3EQAAAAAAAHgRAAAAAAAAAAAAAHgRAAAAAAAAeREAAAAAAAAAAAAAeREAAAAAAAB6EQAAAAAAAAAAAAB6EQAAAAAAAHsRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1201,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwRAAAAAAAAfREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBEAAAAAAAB8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1202,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH0RAAAAAAAAfxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfREAAAAAAAB9EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH4RAAAAAAAAfxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhEAAAAAAAB+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAH8RAAAAAAAAgBEAAAAAAAAAAAAAgBEAAAAAAACBEQAAAAAAAAAAAACBEQAAAAAAAIIRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxEAAAAAAAB/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1225,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHQRAAAAAAAAdREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBEAAAAAAAB0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1226,
					1,
					"left_delete",
					null,
					"AQAAAHQRAAAAAAAAdBEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAHQRAAAAAAAAdREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBEAAAAAAAB0EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1228,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHURAAAAAAAAdhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdREAAAAAAAB1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"right_delete",
					null,
					"AQAAAHYRAAAAAAAAdhEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAdhEAAAAAAAB2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1231,
					1,
					"left_delete",
					null,
					"AQAAAHwRAAAAAAAAfBEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAfREAAAAAAAB9EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1232,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAAHwRAAAAAAAAfREAAAAAAAAAAAAAfREAAAAAAAB+EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBEAAAAAAAB8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1234,
					1,
					"paste",
					null,
					"AQAAAIIRAAAAAAAAuxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghEAAAAAAACCEQAAAAAAAAAAAAAAgGtA"
				],
				[
					1236,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAIIRAAAAAAAAgxEAAAAAAAAAAAAAgxEAAAAAAACEEQAAAAAAAAAAAACEEQAAAAAAAIURAAAAAAAAAAAAAIURAAAAAAAAhhEAAAAAAAAAAAAAhhEAAAAAAACHEQAAAAAAAAAAAACHEQAAAAAAAIgRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghEAAAAAAACCEQAAAAAAAAAAAAAAAAAA"
				],
				[
					1237,
					1,
					"insert",
					{
						"characters": " this."
					},
					"BgAAAIgRAAAAAAAAiREAAAAAAAAAAAAAiREAAAAAAACKEQAAAAAAAAAAAACKEQAAAAAAAIsRAAAAAAAAAAAAAIsRAAAAAAAAjBEAAAAAAAAAAAAAjBEAAAAAAACNEQAAAAAAAAAAAACNEQAAAAAAAI4RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBEAAAAAAACIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1238,
					18,
					"right_delete",
					null,
					"EgAAAI4RAAAAAAAAjhEAAAAAAAABAAAAcI4RAAAAAAAAjhEAAAAAAAABAAAAco4RAAAAAAAAjhEAAAAAAAABAAAAb44RAAAAAAAAjhEAAAAAAAABAAAAao4RAAAAAAAAjhEAAAAAAAABAAAAZY4RAAAAAAAAjhEAAAAAAAABAAAAY44RAAAAAAAAjhEAAAAAAAABAAAAdI4RAAAAAAAAjhEAAAAAAAABAAAALo4RAAAAAAAAjhEAAAAAAAABAAAAc44RAAAAAAAAjhEAAAAAAAABAAAAY44RAAAAAAAAjhEAAAAAAAABAAAAaI4RAAAAAAAAjhEAAAAAAAABAAAAZY4RAAAAAAAAjhEAAAAAAAABAAAAbY4RAAAAAAAAjhEAAAAAAAABAAAAYY4RAAAAAAAAjhEAAAAAAAABAAAAdI4RAAAAAAAAjhEAAAAAAAABAAAAaY4RAAAAAAAAjhEAAAAAAAABAAAAY44RAAAAAAAAjhEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAjhEAAAAAAACOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1240,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAALURAAAAAAAAthEAAAAAAAAAAAAAthEAAAAAAAC3EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtREAAAAAAAC1EQAAAAAAAP///////+9/"
				],
				[
					1241,
					1,
					"left_delete",
					null,
					"AQAAALYRAAAAAAAAthEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAtxEAAAAAAAC3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1243,
					1,
					"left_delete",
					null,
					"AQAAALYRAAAAAAAAthEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAtxEAAAAAAAC3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1262,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALsRAAAAAAAAvBEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxEAAAAAAAC7EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1265,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAvBEAAAAAAAC8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1272,
					1,
					"cut",
					null,
					"AQAAAEERAAAAAAAAQREAAAAAAADhAAAACiAgICB0aGlzLmxheWVycyA9IEdldFByb3h5KAogICAgICAocHJvcCwgdGFyZ2V0KSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TGF5ZXIocHJvcCk7CiAgICAgIH0sCiAgICAgIHsKICAgICAgICBvd25LZXlzOiB0YXJnZXQgPT4gewogICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCdsYXllcnMnKS5jaGlsZHJlbi5tYXAoYyA9PiBjLm5hbWUpOwogICAgICAgIH0KICAgICAgfQogICAgKTsK",
					"AQAAAAAAAAABAAAAQREAAAAAAAAiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1273,
					2,
					"paste",
					null,
					"AgAAAEERAAAAAAAAIhIAAAAAAAAAAAAAIhIAAAAAAAADEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQREAAAAAAABBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1278,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BwAAACwSAAAAAAAALRIAAAAAAAAAAAAALRIAAAAAAAAtEgAAAAAAAAYAAABsYXllcnMtEgAAAAAAAC4SAAAAAAAAAAAAAC4SAAAAAAAALxIAAAAAAAAAAAAALxIAAAAAAAAwEgAAAAAAAAAAAAAwEgAAAAAAADESAAAAAAAAAAAAADESAAAAAAAAMhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBIAAAAAAAAyEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1294,
					1,
					"cut",
					null,
					"AQAAAAssAAAAAAAACywAAAAAAAAnAQAACiAgZ2V0TGF5ZXIoaWQpIHsKICAgIGxldCBsYXllcnMgPSB0aGlzLmdldCgnbGF5ZXJzJyk7CiAgICBsZXQgaSA9IDA7CgogICAgZm9yKGxldCBsYXllciBvZiBsYXllcnMuY2hpbGRyZW4pIHsKICAgICAgbGV0IHsgbnVtYmVyLCBuYW1lIH0gPSBsYXllci5hdHRyaWJ1dGVzOwogICAgICAvLyBjb25zb2xlLmxvZygnbGF5ZXInLCB7IG51bWJlciwgbmFtZSB9KTsKICAgICAgaWYobnVtYmVyID09IGlkIHx8IG5hbWUgPT0gaWQpIHJldHVybiBsYXllcjsKICAgICAgaSsrOwogICAgfQogICAgcmV0dXJuIG51bGw7CiAgfQ",
					"AQAAAAAAAAABAAAACywAAAAAAAAyLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1295,
					2,
					"paste",
					null,
					"AgAAAAssAAAAAAAAMi0AAAAAAAAAAAAAMi0AAAAAAABZLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACywAAAAAAAALLAAAAAAAAAAAAAAAAPC/"
				],
				[
					1300,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BwAAAEwtAAAAAAAATS0AAAAAAAAAAAAATS0AAAAAAABNLQAAAAAAAAYAAABsYXllcnNNLQAAAAAAAE4tAAAAAAAAAAAAAE4tAAAAAAAATy0AAAAAAAAAAAAATy0AAAAAAABQLQAAAAAAAAAAAABQLQAAAAAAAFEtAAAAAAAAAAAAAFEtAAAAAAAAUi0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATC0AAAAAAABSLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1305,
					1,
					"insert",
					{
						"characters": "getSheet"
					},
					"CQAAADUtAAAAAAAANi0AAAAAAAAAAAAANi0AAAAAAAA2LQAAAAAAAAgAAABnZXRMYXllcjYtAAAAAAAANy0AAAAAAAAAAAAANy0AAAAAAAA4LQAAAAAAAAAAAAA4LQAAAAAAADktAAAAAAAAAAAAADktAAAAAAAAOi0AAAAAAAAAAAAAOi0AAAAAAAA7LQAAAAAAAAAAAAA7LQAAAAAAADwtAAAAAAAAAAAAADwtAAAAAAAAPS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANS0AAAAAAAA9LQAAAAAAAAAAAAAAAPC/"
				],
				[
					1310,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BwAAAF8tAAAAAAAAYC0AAAAAAAAAAAAAYC0AAAAAAABgLQAAAAAAAAYAAABsYXllcnNgLQAAAAAAAGEtAAAAAAAAAAAAAGEtAAAAAAAAYi0AAAAAAAAAAAAAYi0AAAAAAABjLQAAAAAAAAAAAABjLQAAAAAAAGQtAAAAAAAAAAAAAGQtAAAAAAAAZS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXy0AAAAAAABlLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1320,
					1,
					"paste",
					null,
					"AgAAAI4tAAAAAAAAlC0AAAAAAAAAAAAAlC0AAAAAAACULQAAAAAAAAYAAABsYXllcnM",
					"AQAAAAAAAAABAAAAji0AAAAAAACULQAAAAAAAAAAAAAAAPC/"
				],
				[
					1325,
					1,
					"paste",
					null,
					"AgAAAIUtAAAAAAAAiy0AAAAAAAAAAAAAiy0AAAAAAACLLQAAAAAAAAUAAABsYXllcg",
					"AQAAAAAAAAABAAAAhS0AAAAAAACKLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1326,
					1,
					"left_delete",
					null,
					"AQAAAIotAAAAAAAAii0AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAiy0AAAAAAACLLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1336,
					1,
					"paste",
					null,
					"AgAAAL4tAAAAAAAAwy0AAAAAAAAAAAAAwy0AAAAAAADDLQAAAAAAAAUAAABsYXllcg",
					"AQAAAAAAAAABAAAAvi0AAAAAAADDLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1348,
					6,
					"left_delete",
					null,
					"BgAAAA8uAAAAAAAADy4AAAAAAAABAAAAcg4uAAAAAAAADi4AAAAAAAABAAAAZQ0uAAAAAAAADS4AAAAAAAABAAAAYgwuAAAAAAAADC4AAAAAAAABAAAAbQsuAAAAAAAACy4AAAAAAAABAAAAdQouAAAAAAAACi4AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAEC4AAAAAAAAQLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAAouAAAAAAAACy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACi4AAAAAAAAKLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					13,
					"right_delete",
					null,
					"DQAAABIuAAAAAAAAEi4AAAAAAAABAAAAfBIuAAAAAAAAEi4AAAAAAAABAAAAfBIuAAAAAAAAEi4AAAAAAAABAAAAIBIuAAAAAAAAEi4AAAAAAAABAAAAbhIuAAAAAAAAEi4AAAAAAAABAAAAYRIuAAAAAAAAEi4AAAAAAAABAAAAbRIuAAAAAAAAEi4AAAAAAAABAAAAZRIuAAAAAAAAEi4AAAAAAAABAAAAIBIuAAAAAAAAEi4AAAAAAAABAAAAPRIuAAAAAAAAEi4AAAAAAAABAAAAPRIuAAAAAAAAEi4AAAAAAAABAAAAIBIuAAAAAAAAEi4AAAAAAAABAAAAaRIuAAAAAAAAEi4AAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAEi4AAAAAAAASLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1354,
					2,
					"left_delete",
					null,
					"AgAAABwuAAAAAAAAHC4AAAAAAAAEAAAAYXllchsuAAAAAAAAGy4AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAHC4AAAAAAAAgLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1355,
					1,
					"insert",
					{
						"characters": "sheet"
					},
					"BQAAABsuAAAAAAAAHC4AAAAAAAAAAAAAHC4AAAAAAAAdLgAAAAAAAAAAAAAdLgAAAAAAAB4uAAAAAAAAAAAAAB4uAAAAAAAAHy4AAAAAAAAAAAAAHy4AAAAAAAAgLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGy4AAAAAAAAbLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1360,
					1,
					"left_delete",
					null,
					"AQAAAKItAAAAAAAAoi0AAAAAAABfAAAAICAgICBsZXQgeyBudW1iZXIsIG5hbWUgfSA9IHNoZWV0LmF0dHJpYnV0ZXM7CiAgICAgIC8vIGNvbnNvbGUubG9nKCdsYXllcicsIHsgbnVtYmVyLCBuYW1lIH0pOwo",
					"AQAAAAAAAAABAAAAoi0AAAAAAAABLgAAAAAAAAAAAAAAAAAA"
				],
				[
					1382,
					1,
					"insert",
					{
						"characters": "Sheet"
					},
					"BgAAAHASAAAAAAAAcRIAAAAAAAAAAAAAcRIAAAAAAABxEgAAAAAAAAUAAABMYXllcnESAAAAAAAAchIAAAAAAAAAAAAAchIAAAAAAABzEgAAAAAAAAAAAABzEgAAAAAAAHQSAAAAAAAAAAAAAHQSAAAAAAAAdRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBIAAAAAAAB1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1393,
					1,
					"insert",
					{
						"characters": "sheets"
					},
					"BwAAAMYSAAAAAAAAxxIAAAAAAAAAAAAAxxIAAAAAAADHEgAAAAAAAAYAAABsYXllcnPHEgAAAAAAAMgSAAAAAAAAAAAAAMgSAAAAAAAAyRIAAAAAAAAAAAAAyRIAAAAAAADKEgAAAAAAAAAAAADKEgAAAAAAAMsSAAAAAAAAAAAAAMsSAAAAAAAAzBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhIAAAAAAADMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1396,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAANwSAAAAAAAA3RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BIAAAAAAADcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": ",i"
					},
					"AgAAAN4SAAAAAAAA3xIAAAAAAAAAAAAA3xIAAAAAAADgEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hIAAAAAAADeEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOASAAAAAAAA4hIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BIAAAAAAADgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1400,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOASAAAAAAAA4BIAAAAAAAABAAAAKOASAAAAAAAA4BIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA4RIAAAAAAADhEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOASAAAAAAAA4RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BIAAAAAAADgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1404,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AgAAAOUSAAAAAAAA5hIAAAAAAAAAAAAA5hIAAAAAAADmEgAAAAAAAAYAAABjLm5hbWU",
					"AQAAAAAAAAABAAAA5RIAAAAAAADrEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAOYSAAAAAAAA5xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hIAAAAAAADmEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOcSAAAAAAAA6RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xIAAAAAAADnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1451,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAACiIAAAAAAAAKIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"cut",
					null,
					"AQAAADctAAAAAAAANy0AAAAAAAC1AAAACiAgZ2V0U2hlZXQoaWQpIHsKICAgIGxldCBzaGVldHMgPSB0aGlzLmdldCgnc2hlZXRzJyk7CiAgICBsZXQgaSA9IDA7CgogICAgZm9yKGxldCBzaGVldCBvZiBzaGVldHMuY2hpbGRyZW4pIHsKICAgICAgaWYoaSA9PSBpZCkgcmV0dXJuIHNoZWV0OwogICAgICBpKys7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Cg",
					"AQAAAAAAAAABAAAANy0AAAAAAADsLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1455,
					2,
					"paste",
					null,
					"AgAAADctAAAAAAAA7C0AAAAAAAAAAAAA7C0AAAAAAAChLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANy0AAAAAAAA3LQAAAAAAAAAAAAAAAPC/"
				],
				[
					1458,
					2,
					"left_delete",
					null,
					"AgAAAPMtAAAAAAAA8y0AAAAAAAAEAAAAaGVldPItAAAAAAAA8i0AAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAA8y0AAAAAAAD3LQAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": "Library"
					},
					"BwAAAPItAAAAAAAA8y0AAAAAAAAAAAAA8y0AAAAAAAD0LQAAAAAAAAAAAAD0LQAAAAAAAPUtAAAAAAAAAAAAAPUtAAAAAAAA9i0AAAAAAAAAAAAA9i0AAAAAAAD3LQAAAAAAAAAAAAD3LQAAAAAAAPgtAAAAAAAAAAAAAPgtAAAAAAAA+S0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8i0AAAAAAADyLQAAAAAAAAAAAAAAAPC/"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BQAAAPotAAAAAAAA+y0AAAAAAAAAAAAA+y0AAAAAAAD7LQAAAAAAAAIAAABpZPstAAAAAAAA/C0AAAAAAAAAAAAA/C0AAAAAAAD9LQAAAAAAAAAAAAD9LQAAAAAAAP4tAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+i0AAAAAAAD8LQAAAAAAAAAAAAAAAPC/"
				],
				[
					1471,
					1,
					"insert",
					{
						"characters": "libraries"
					},
					"CgAAAB0uAAAAAAAAHi4AAAAAAAAAAAAAHi4AAAAAAAAeLgAAAAAAAAYAAABzaGVldHMeLgAAAAAAAB8uAAAAAAAAAAAAAB8uAAAAAAAAIC4AAAAAAAAAAAAAIC4AAAAAAAAhLgAAAAAAAAAAAAAhLgAAAAAAACIuAAAAAAAAAAAAACIuAAAAAAAAIy4AAAAAAAAAAAAAIy4AAAAAAAAkLgAAAAAAAAAAAAAkLgAAAAAAACUuAAAAAAAAAAAAACUuAAAAAAAAJi4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHS4AAAAAAAAjLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1482,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAABwuAAAAAAAAHS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHC4AAAAAAAAcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1483,
					1,
					"insert",
					{
						"characters": " ?=>"
					},
					"BAAAAB0uAAAAAAAAHi4AAAAAAAAAAAAAHi4AAAAAAAAfLgAAAAAAAAAAAAAfLgAAAAAAACAuAAAAAAAAAAAAACAuAAAAAAAAIS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHS4AAAAAAAAdLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1484,
					3,
					"left_delete",
					null,
					"AwAAACAuAAAAAAAAIC4AAAAAAAABAAAAPh8uAAAAAAAAHy4AAAAAAAABAAAAPR4uAAAAAAAAHi4AAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAIS4AAAAAAAAhLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1485,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAAB4uAAAAAAAAHy4AAAAAAAAAAAAAHy4AAAAAAAAgLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHi4AAAAAAAAeLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1486,
					1,
					"insert",
					{
						"characters": " e."
					},
					"AwAAACAuAAAAAAAAIS4AAAAAAAAAAAAAIS4AAAAAAAAiLgAAAAAAAAAAAAAiLgAAAAAAACMuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIC4AAAAAAAAgLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1487,
					1,
					"insert",
					{
						"characters": "tagName=='library'"
					},
					"EgAAACMuAAAAAAAAJC4AAAAAAAAAAAAAJC4AAAAAAAAlLgAAAAAAAAAAAAAlLgAAAAAAACYuAAAAAAAAAAAAACYuAAAAAAAAJy4AAAAAAAAAAAAAJy4AAAAAAAAoLgAAAAAAAAAAAAAoLgAAAAAAACkuAAAAAAAAAAAAACkuAAAAAAAAKi4AAAAAAAAAAAAAKi4AAAAAAAArLgAAAAAAAAAAAAArLgAAAAAAACwuAAAAAAAAAAAAACwuAAAAAAAALS4AAAAAAAAAAAAALS4AAAAAAAAuLgAAAAAAAAAAAAAuLgAAAAAAAC8uAAAAAAAAAAAAAC8uAAAAAAAAMC4AAAAAAAAAAAAAMC4AAAAAAAAxLgAAAAAAAAAAAAAxLgAAAAAAADIuAAAAAAAAAAAAADIuAAAAAAAAMy4AAAAAAAAAAAAAMy4AAAAAAAA0LgAAAAAAAAAAAAA0LgAAAAAAADUuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIy4AAAAAAAAjLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1488,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAADUuAAAAAAAANi4AAAAAAAAAAAAANi4AAAAAAAA3LgAAAAAAAAAAAAA3LgAAAAAAADguAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANS4AAAAAAAA1LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1489,
					1,
					"insert",
					{
						"characters": " e.attributes.name"
					},
					"EgAAADguAAAAAAAAOS4AAAAAAAAAAAAAOS4AAAAAAAA6LgAAAAAAAAAAAAA6LgAAAAAAADsuAAAAAAAAAAAAADsuAAAAAAAAPC4AAAAAAAAAAAAAPC4AAAAAAAA9LgAAAAAAAAAAAAA9LgAAAAAAAD4uAAAAAAAAAAAAAD4uAAAAAAAAPy4AAAAAAAAAAAAAPy4AAAAAAABALgAAAAAAAAAAAABALgAAAAAAAEEuAAAAAAAAAAAAAEEuAAAAAAAAQi4AAAAAAAAAAAAAQi4AAAAAAABDLgAAAAAAAAAAAABDLgAAAAAAAEQuAAAAAAAAAAAAAEQuAAAAAAAARS4AAAAAAAAAAAAARS4AAAAAAABGLgAAAAAAAAAAAABGLgAAAAAAAEcuAAAAAAAAAAAAAEcuAAAAAAAASC4AAAAAAAAAAAAASC4AAAAAAABJLgAAAAAAAAAAAABJLgAAAAAAAEouAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOC4AAAAAAAA4LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1490,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEouAAAAAAAASy4AAAAAAAAAAAAASy4AAAAAAABMLgAAAAAAAAAAAABMLgAAAAAAAE0uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASi4AAAAAAABKLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": " name);"
					},
					"BwAAAE0uAAAAAAAATi4AAAAAAAAAAAAATi4AAAAAAABPLgAAAAAAAAAAAABPLgAAAAAAAFAuAAAAAAAAAAAAAFAuAAAAAAAAUS4AAAAAAAAAAAAAUS4AAAAAAABSLgAAAAAAAAAAAABSLgAAAAAAAFMuAAAAAAAAAAAAAFMuAAAAAAAAVC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATS4AAAAAAABNLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					1,
					"cut",
					null,
					"AQAAAFQuAAAAAAAAVC4AAAAAAAANAAAAJ2xpYnJhcmllcycpOw",
					"AQAAAAAAAAABAAAAVC4AAAAAAABhLgAAAAAAAP///////+9/"
				],
				[
					1498,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAAMuAAAAAAAABC4AAAAAAAAAAAAABC4AAAAAAAAELgAAAAAAAA8AAAAgICBsZXQgc2hlZXRzID0ELgAAAAAAAAUuAAAAAAAAAAAAAAUuAAAAAAAABi4AAAAAAAAAAAAABi4AAAAAAAAHLgAAAAAAAAAAAAAHLgAAAAAAAAguAAAAAAAAAAAAAAguAAAAAAAACS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAy4AAAAAAAASLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1504,
					1,
					"left_delete",
					null,
					"AQAAAFAuAAAAAAAAUC4AAAAAAAB1AAAAbGV0IGkgPSAwOwoKICAgIGZvcihsZXQgc2hlZXQgb2Ygc2hlZXRzLmNoaWxkcmVuKSB7CiAgICAgIGlmKGkgPT0gaWQpIHJldHVybiBzaGVldDsKICAgICAgaSsrOwogICAgfQogICAgcmV0dXJuIG51bGw7",
					"AQAAAAAAAAABAAAAUC4AAAAAAADFLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1509,
					4,
					"left_delete",
					null,
					"BAAAAE4uAAAAAAAATi4AAAAAAAACAAAAICBMLgAAAAAAAEwuAAAAAAAAAgAAACAgSy4AAAAAAABLLgAAAAAAAAEAAAAKSi4AAAAAAABKLgAAAAAAAAEAAAA7",
					"AQAAAAAAAAABAAAAUC4AAAAAAABQLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1510,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEouAAAAAAAASy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASi4AAAAAAABKLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1524,
					1,
					"cut",
					null,
					"AQAAACISAAAAAAAAIhIAAAAAAADmAAAACiAgICB0aGlzLnNoZWV0cyA9IEdldFByb3h5KAogICAgICAocHJvcCwgdGFyZ2V0KSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U2hlZXQocHJvcCk7CiAgICAgIH0sCiAgICAgIHsKICAgICAgICBvd25LZXlzOiB0YXJnZXQgPT4gewogICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCdzaGVldHMnKS5jaGlsZHJlbi5tYXAoKGMsIGkpID0+IGkgKyAnJyk7CiAgICAgICAgfQogICAgICB9CiAgICApOwo",
					"AQAAAAAAAAABAAAAIhIAAAAAAAAIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1525,
					2,
					"paste",
					null,
					"AgAAACISAAAAAAAACBMAAAAAAAAAAAAACBMAAAAAAADuEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhIAAAAAAAAiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					1,
					"insert",
					{
						"characters": "libraries"
					},
					"CgAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAATEwAAAAAAAAYAAABzaGVldHMTEwAAAAAAABQTAAAAAAAAAAAAABQTAAAAAAAAFRMAAAAAAAAAAAAAFRMAAAAAAAAWEwAAAAAAAAAAAAAWEwAAAAAAABcTAAAAAAAAAAAAABcTAAAAAAAAGBMAAAAAAAAAAAAAGBMAAAAAAAAZEwAAAAAAAAAAAAAZEwAAAAAAABoTAAAAAAAAAAAAABoTAAAAAAAAGxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhMAAAAAAAAYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1539,
					1,
					"insert",
					{
						"characters": "gewt"
					},
					"BQAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABXEwAAAAAAAAgAAABnZXRTaGVldFcTAAAAAAAAWBMAAAAAAAAAAAAAWBMAAAAAAABZEwAAAAAAAAAAAABZEwAAAAAAAFoTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhMAAAAAAABeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1540,
					2,
					"left_delete",
					null,
					"AgAAAFkTAAAAAAAAWRMAAAAAAAABAAAAdFgTAAAAAAAAWBMAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1541,
					1,
					"insert",
					{
						"characters": "tLibrary"
					},
					"CAAAAFgTAAAAAAAAWRMAAAAAAAAAAAAAWRMAAAAAAABaEwAAAAAAAAAAAABaEwAAAAAAAFsTAAAAAAAAAAAAAFsTAAAAAAAAXBMAAAAAAAAAAAAAXBMAAAAAAABdEwAAAAAAAAAAAABdEwAAAAAAAF4TAAAAAAAAAAAAAF4TAAAAAAAAXxMAAAAAAAAAAAAAXxMAAAAAAABgEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBMAAAAAAABYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1552,
					1,
					"insert",
					{
						"characters": "l,i"
					},
					"BAAAALETAAAAAAAAshMAAAAAAAAAAAAAshMAAAAAAACyEwAAAAAAAAYAAABzaGVldHOyEwAAAAAAALMTAAAAAAAAAAAAALMTAAAAAAAAtBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRMAAAAAAAC3EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1553,
					3,
					"left_delete",
					null,
					"AwAAALMTAAAAAAAAsxMAAAAAAAABAAAAabITAAAAAAAAshMAAAAAAAABAAAALLETAAAAAAAAsRMAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAtBMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1554,
					1,
					"insert",
					{
						"characters": "libraries"
					},
					"CQAAALETAAAAAAAAshMAAAAAAAAAAAAAshMAAAAAAACzEwAAAAAAAAAAAACzEwAAAAAAALQTAAAAAAAAAAAAALQTAAAAAAAAtRMAAAAAAAAAAAAAtRMAAAAAAAC2EwAAAAAAAAAAAAC2EwAAAAAAALcTAAAAAAAAAAAAALcTAAAAAAAAuBMAAAAAAAAAAAAAuBMAAAAAAAC5EwAAAAAAAAAAAAC5EwAAAAAAALoTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRMAAAAAAACxEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1562,
					1,
					"paste",
					null,
					"AgAAAKsTAAAAAAAA4hMAAAAAAAAAAAAA4hMAAAAAAADiEwAAAAAAADEAAAAuZ2V0KCdsaWJyYXJpZXMnKS5jaGlsZHJlbi5tYXAoKGMsIGkpID0+IGkgKyAnJyk7",
					"AQAAAAAAAAABAAAAqxMAAAAAAADcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1563,
					1,
					"left_delete",
					null,
					"AQAAAOETAAAAAAAA4RMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA4hMAAAAAAADiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1564,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOETAAAAAAAA4hMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RMAAAAAAADhEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1568,
					1,
					"left_delete",
					null,
					"AQAAAJQTAAAAAAAAlBMAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAlRMAAAAAAACVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1569,
					18,
					"right_delete",
					null,
					"EgAAAJQTAAAAAAAAlBMAAAAAAAABAAAACpQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAIJQTAAAAAAAAlBMAAAAAAAABAAAAcpQTAAAAAAAAlBMAAAAAAAABAAAAZZQTAAAAAAAAlBMAAAAAAAABAAAAdJQTAAAAAAAAlBMAAAAAAAABAAAAdZQTAAAAAAAAlBMAAAAAAAABAAAAcpQTAAAAAAAAlBMAAAAAAAABAAAAbpQTAAAAAAAAlBMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAlBMAAAAAAACUEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					2,
					"left_delete",
					null,
					"AgAAANgTAAAAAAAA2BMAAAAAAAABAAAAfdYTAAAAAAAA1hMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA2RMAAAAAAADZEwAAAAAAAAAAAAAA4HBA"
				],
				[
					1576,
					1,
					"left_delete",
					null,
					"AQAAAEATAAAAAAAAQBMAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAQRMAAAAAAABBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					14,
					"right_delete",
					null,
					"DgAAAEATAAAAAAAAQBMAAAAAAAABAAAACkATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAIEATAAAAAAAAQBMAAAAAAAABAAAAckATAAAAAAAAQBMAAAAAAAABAAAAZUATAAAAAAAAQBMAAAAAAAABAAAAdEATAAAAAAAAQBMAAAAAAAABAAAAdUATAAAAAAAAQBMAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAQBMAAAAAAABAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1578,
					1,
					"right_delete",
					null,
					"AQAAAEATAAAAAAAAQBMAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAQBMAAAAAAABAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1580,
					1,
					"left_delete",
					null,
					"AQAAAFYTAAAAAAAAVhMAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAVxMAAAAAAABXEwAAAAAAAP///////+9/"
				],
				[
					1583,
					1,
					"left_delete",
					null,
					"AQAAAF0TAAAAAAAAXRMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAXhMAAAAAAABeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1588,
					1,
					"left_delete",
					null,
					"AQAAAFcSAAAAAAAAVxIAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAWBIAAAAAAABYEgAAAAAAAP///////+9/"
				],
				[
					1589,
					2,
					"right_delete",
					null,
					"AgAAAFcSAAAAAAAAVxIAAAAAAAABAAAAClcSAAAAAAAAVxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1590,
					14,
					"right_delete",
					null,
					"DgAAAFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAIFcSAAAAAAAAVxIAAAAAAAABAAAAclcSAAAAAAAAVxIAAAAAAAABAAAAZVcSAAAAAAAAVxIAAAAAAAABAAAAdFcSAAAAAAAAVxIAAAAAAAABAAAAdVcSAAAAAAAAVxIAAAAAAAABAAAAclcSAAAAAAAAVxIAAAAAAAABAAAAblcSAAAAAAAAVxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVxIAAAAAAABXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1592,
					1,
					"left_delete",
					null,
					"AQAAAGoSAAAAAAAAahIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAaxIAAAAAAABrEgAAAAAAAP///////+9/"
				],
				[
					1593,
					8,
					"right_delete",
					null,
					"CAAAAGoSAAAAAAAAahIAAAAAAAABAAAACmoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAIGoSAAAAAAAAahIAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAahIAAAAAAABqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1608,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI8SAAAAAAAAkBIAAAAAAAAAAAAAkBIAAAAAAACQEgAAAAAAABIAAAB7CiAgICAgICAgICByZXR1cm4",
					"AQAAAAAAAAABAAAAjxIAAAAAAAChEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1611,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMkSAAAAAAAAyhIAAAAAAAAAAAAAyhIAAAAAAADKEgAAAAAAAAQAAAAgICB9",
					"AQAAAAAAAAABAAAAyRIAAAAAAADNEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1631,
					1,
					"left_delete",
					null,
					"AQAAAMISAAAAAAAAwhIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAwxIAAAAAAADDEgAAAAAAAP///////+9/"
				],
				[
					1634,
					1,
					"left_delete",
					null,
					"AQAAAMgRAAAAAAAAyBEAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAyREAAAAAAADJEQAAAAAAAAAAAAAAYIhA"
				],
				[
					1635,
					17,
					"right_delete",
					null,
					"EQAAAMgRAAAAAAAAyBEAAAAAAAABAAAACsgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAIMgRAAAAAAAAyBEAAAAAAAABAAAAcsgRAAAAAAAAyBEAAAAAAAABAAAAZcgRAAAAAAAAyBEAAAAAAAABAAAAdMgRAAAAAAAAyBEAAAAAAAABAAAAdcgRAAAAAAAAyBEAAAAAAAABAAAAcsgRAAAAAAAAyBEAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAyBEAAAAAAADIEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1637,
					1,
					"left_delete",
					null,
					"AQAAAPURAAAAAAAA9REAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA9hEAAAAAAAD2EQAAAAAAAP///////+9/"
				],
				[
					1639,
					2,
					"left_delete",
					null,
					"AgAAAP4RAAAAAAAA/hEAAAAAAAABAAAAffwRAAAAAAAA/BEAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA/xEAAAAAAAD/EQAAAAAAAAAAAAAAgIZA"
				],
				[
					1642,
					1,
					"left_delete",
					null,
					"AQAAAHcTAAAAAAAAdxMAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAeBMAAAAAAAB4EwAAAAAAAP///////+9/"
				],
				[
					1645,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAdxMAAAAAAAB3EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1663,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEETAAAAAAAAQxMAAAAAAAAAAAAAoRIAAAAAAACjEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRIAAAAAAABBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1681,
					1,
					"paste",
					null,
					"AQAAAEYTAAAAAAAAsBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhMAAAAAAABGEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABIEwAAAAAAAAYAAAAgICAvLyA",
					"AQAAAAAAAAABAAAATRMAAAAAAABHEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1693,
					1,
					"insert",
					{
						"characters": "drawing"
					},
					"CAAAAF0TAAAAAAAAXhMAAAAAAAAAAAAAXhMAAAAAAABeEwAAAAAAAAYAAABsYXllcnNeEwAAAAAAAF8TAAAAAAAAAAAAAF8TAAAAAAAAYBMAAAAAAAAAAAAAYBMAAAAAAABhEwAAAAAAAAAAAABhEwAAAAAAAGITAAAAAAAAAAAAAGITAAAAAAAAYxMAAAAAAAAAAAAAYxMAAAAAAABkEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRMAAAAAAABjEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1696,
					1,
					"right_delete",
					null,
					"AQAAAG0TAAAAAAAAbRMAAAAAAAAUAAAARWFnbGVOb2RlTWFwLmNyZWF0ZSg",
					"AQAAAAAAAAABAAAAbRMAAAAAAACBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1699,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHcTAAAAAAAAeBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxMAAAAAAAB3EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1700,
					1,
					"left_delete",
					null,
					"AQAAAHcTAAAAAAAAdxMAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAeBMAAAAAAAB4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "drawing'));"
					},
					"DAAAAHcTAAAAAAAAeBMAAAAAAAAAAAAAeBMAAAAAAAB4EwAAAAAAACAAAABsYXllcnMnKS5jaGlsZHJlbi5yYXcsICduYW1lJykpO3gTAAAAAAAAeRMAAAAAAAAAAAAAeRMAAAAAAAB6EwAAAAAAAAAAAAB6EwAAAAAAAHsTAAAAAAAAAAAAAHsTAAAAAAAAfBMAAAAAAAAAAAAAfBMAAAAAAAB9EwAAAAAAAAAAAAB9EwAAAAAAAH4TAAAAAAAAAAAAAH4TAAAAAAAAfxMAAAAAAAAAAAAAfxMAAAAAAACAEwAAAAAAAAAAAACAEwAAAAAAAIETAAAAAAAAAAAAAIETAAAAAAAAghMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxMAAAAAAACXEwAAAAAAAP///////+9/"
				],
				[
					1712,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAphUAAAAAAACmFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1725,
					1,
					"cut",
					null,
					"AQAAACQJAAAAAAAAJAkAAAAAAAAGAAAAeG1sU3Ry",
					"AQAAAAAAAAABAAAAJAkAAAAAAAAqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1726,
					1,
					"paste",
					null,
					"AQAAACQJAAAAAAAAKgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAkAAAAAAAAkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": "\ndata:"
					},
					"CAAAAEQJAAAAAAAARQkAAAAAAAAAAAAARQkAAAAAAABJCQAAAAAAAAAAAABJCQAAAAAAAEsJAAAAAAAAAAAAAEsJAAAAAAAATAkAAAAAAAAAAAAATAkAAAAAAABNCQAAAAAAAAAAAABNCQAAAAAAAE4JAAAAAAAAAAAAAE4JAAAAAAAATwkAAAAAAAAAAAAATwkAAAAAAABQCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					1730,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAJAAAAAAAAUQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAkAAAAAAABQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1731,
					1,
					"paste",
					null,
					"AQAAAFEJAAAAAAAAVwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQkAAAAAAABRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1732,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFcJAAAAAAAAWAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwkAAAAAAABXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1736,
					1,
					"left_delete",
					null,
					"AQAAABgJAAAAAAAAGAkAAAAAAAAUAAAAdGhpcy5kYXRhID0geG1sU3RyOwo",
					"AQAAAAAAAAABAAAAGAkAAAAAAAAsCQAAAAAAAAAAAAAAAERA"
				],
				[
					1749,
					2,
					"left_delete",
					null,
					"AgAAAOsIAAAAAAAA6wgAAAAAAAABAAAAPeoIAAAAAAAA6ggAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1750,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6ggAAAAAAADqCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1754,
					1,
					"cut",
					null,
					"AQAAAOAIAAAAAAAA4AgAAAAAAAA3AAAAcGF0aE1hcHBlcjogbmV3IFBhdGhNYXBwZXIoeG1sT2JqLCBJbW11dGFibGVQYXRoKTsKICAgIA",
					"AQAAAAAAAAABAAAA4AgAAAAAAAAXCQAAAAAAAAAAAAAAgFZA"
				],
				[
					1757,
					1,
					"paste",
					null,
					"AQAAAP8IAAAAAAAANgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wgAAAAAAAD/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1759,
					1,
					"left_delete",
					null,
					"AQAAADAJAAAAAAAAMAkAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAMQkAAAAAAAAxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1760,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADAJAAAAAAAAMQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAkAAAAAAAAwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					1766,
					1,
					"left_delete",
					null,
					"AQAAANcIAAAAAAAA1wgAAAAAAAAKAAAAICAgIHRoaXMuCg",
					"AQAAAAAAAAABAAAA1wgAAAAAAADhCAAAAAAAAAAAAAAAAAAA"
				],
				[
					1767,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANcIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wgAAAAAAADXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1777,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKcHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACpBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1784,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAARQ4AAAAAAABFDgAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/eagle/project.js",
			"settings":
			{
				"buffer_size": 9861,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"",
					null,
					"BwAAAJ4dAAAAAAAAsh0AAAAAAAATAAAAKGxpYnJhcmllc1tkZXN0RG9jXWscAAAAAAAAfxwAAAAAAAATAAAAIGxpYnJhcmllc1tkZXN0RG9jXUkcAAAAAAAAYBwAAAAAAAAWAAAAYGxpYnJhcmllc1ske2Rlc3REb2N9XR8cAAAAAAAAMxwAAAAAAAATAAAAIGxpYnJhcmllc1tkZXN0RG9jXQYcAAAAAAAAHRwAAAAAAAAWAAAAYGxpYnJhcmllc1ske2Rlc3REb2N9XRQaAAAAAAAAJRoAAAAAAAAQAAAALmxpYnJhcmllc1tuYW1lXfAZAAAAAAAAARoAAAAAAAAQAAAALmxpYnJhcmllc1tuYW1lXQ",
					"AQAAAAAAAAABAAAADwgAAAAAAAAPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKJgAAaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbC5qcyc7CmltcG9ydCB7IEVhZ2xlRG9jdW1lbnQgfSBmcm9tICcuL2RvY3VtZW50LmpzJzsKaW1wb3J0IHsgRWFnbGVFbGVtZW50IH0gZnJvbSAnLi9lbGVtZW50LmpzJzsKaW1wb3J0IHsgRWFnbGVOb2RlTWFwIH0gZnJvbSAnLi9ub2RlTWFwLmpzJzsKaW1wb3J0IHsgZHVtcCB9IGZyb20gJy4vY29tbW9uLmpzJzsKaW1wb3J0IHBhdGggZnJvbSAnLi4vcGF0aC5qcyc7CmltcG9ydCAqIGFzIGZzIGZyb20gJy4uL2ZpbGVzeXN0ZW0uanMnOwoKZXhwb3J0IGNsYXNzIEVhZ2xlUHJvamVjdCB7CiAgLy9iYXNlbmFtZSA9IG51bGw7CgogIGNvbnN0cnVjdG9yKGZpbGUsIGZzKSB7CiAgICBmcyA9IGZzIHx8IHRoaXMuZnMgfHwgZ2xvYmFsVGhpcy5mczsKICAgIC8vc3VwZXIoKTsKCiAgICB0aGlzLmZpbGVuYW1lcyA9IFtdOwoKICAgIFV0aWwuZGVmaW5lKHRoaXMsIHsKICAgICAgZmlsZSwKICAgICAgLy8gIC4uLihmaWxlID8geyBkaXI6IHBhdGguZGlybmFtZShmaWxlKSB9IDoge30pLAogICAgICBkb2N1bWVudHM6IHt9LAogICAgICBsaXN0OiBbXSwKICAgICAgZGF0YTogeyBzY2g6IG51bGwsIGJyZDogbnVsbCwgbGJyOiB7fSB9LAogICAgICBmcwogICAgfSk7CgogICAgY29uc3QgbG9hZEZpbGUgPSBmaWxlID0+IHsKICAgICAgaWYodHlwZW9mIGZpbGUgPT0gJ3N0cmluZycpIHsKICAgICAgICBpZigvXC4oYnJkfHNjaCkkLy50ZXN0KGZpbGUpIHx8ICEvXC5sYnIkLy50ZXN0KGZpbGUpKSB0aGlzLmJhc2VuYW1lID0gZmlsZS5yZXBsYWNlKC9cLihicmR8c2NofGxicikkL2ksICcnKTsKICAgICAgfQoKICAgICAgbGV0IGRpciA9IHBhdGguZGlybmFtZShmaWxlKTsKICAgICAgbGV0IGxpYnJhcnlQYXRoID0gW2Rpcl07CiAgICAgIGRpciA9IHBhdGguam9pbihkaXIsICdsYnInKTsKICAgICAgaWYoZnMuZXhpc3RzU3luYyhkaXIpKSBsaWJyYXJ5UGF0aC5wdXNoKGRpcik7CiAgICAgIHRoaXMubGlicmFyeVBhdGggPSBsaWJyYXJ5UGF0aDsKICAgICAgY29uc29sZS5sb2coJ2xvYWRGaWxlJywgZmlsZSwgdGhpcy5iYXNlbmFtZSk7CiAgICAgIGlmKGZzLmV4aXN0c1N5bmMoZmlsZSkpIHRoaXMubGF6eU9wZW4oZmlsZSk7CiAgICAgIC8qZWxzZSovIHRoaXMubG9hZCgpOwogICAgfTsKCiAgICBFYWdsZVByb2plY3QuZGV0ZXJtaW5lRWFnbGVQYXRoKGZzKS50aGVuKGVhZ2xlUGF0aCA9PiB7CiAgICAgIHRoaXMuZWFnbGVQYXRoID0gZWFnbGVQYXRoOwogICAgICAvL2NvbnNvbGUubG9nKCdFYWdsZVByb2plY3QuY29uc3RydWN0b3InLCB7IGZpbGUgfSwgdGhpcy5lYWdsZVBhdGgpOwoKICAgICAgaWYoZmlsZSkgewogICAgICAgIGlmKEFycmF5LmlzQXJyYXkoZmlsZSkpIGZpbGUuZm9yRWFjaChsb2FkRmlsZSk7CiAgICAgICAgZWxzZSBsb2FkRmlsZShmaWxlKTsKICAgICAgICBpZighdGhpcy5mYWlsZWQpIGNvbnNvbGUubG9nKCdPcGVuZWQgcHJvamVjdDonLCB0aGlzLmJhc2VuYW1lLCB0aGlzLmVhZ2xlUGF0aCk7CiAgICAgIH0KICAgIH0pOwogIH0KCiAgbG9hZCgpIHsKICAgIHRoaXMubGF6eU9wZW4odGhpcy5iYXNlbmFtZSArICcuc2NoJyk7CiAgICB0aGlzLmxhenlPcGVuKHRoaXMuYmFzZW5hbWUgKyAnLmJyZCcpOwogICAgLy8gdGhpcy5sb2FkTGlicmFyaWVzKCkgOwogICAgLy8gaWYoIXRoaXMuc2NoZW1hdGljIHx8ICF0aGlzLmJvYXJkKSB0aGlzLmZhaWxlZCA9IHRydWU7CiAgICByZXR1cm4gIXRoaXMuZmFpbGVkOwogIH0KCiAgbGF6eU9wZW4oZmlsZSkgewogICAgLy9jb25zb2xlLmxvZygnRWFnbGVQcm9qZWN0LmxhenlPcGVuJywgZmlsZSk7CiAgICBsZXQgaW5kZXggPSB0aGlzLmZpbGVuYW1lcy5sZW5ndGg7CiAgICB0aGlzLmZpbGVuYW1lcy5wdXNoKGZpbGUpOwogICAgVXRpbC5sYXp5UHJvcGVydHkoCiAgICAgIHRoaXMuZG9jdW1lbnRzLAogICAgICBwYXRoLmJhc2VuYW1lKGZpbGUpLAogICAgICAoKSA9PiB7CiAgICAgICAgbGV0IGRvYyA9IEVhZ2xlRG9jdW1lbnQub3BlbihmaWxlLCB0aGlzLmZzKTsKICAgICAgICB0aGlzLmxpc3RbaW5kZXhdID0gZG9jOwogICAgICAgIGlmKGRvYy5saWJyYXJpZXMpIHRoaXMuYWRkTGlicmFyaWVzKGRvYy5saWJyYXJpZXMubGlzdC5tYXAobCA9PiBsLm5hbWUpKTsKICAgICAgICByZXR1cm4gZG9jOwogICAgICB9LAogICAgICB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9CiAgICApOwogIH0KCiAgYWRkTGlicmFyaWVzKGxpYnMpIHsKICAgIGZvcihsZXQgbGliIG9mIGxpYnMpIHsKICAgICAgbGV0IGZpbGUgPSB0aGlzLmZpbmRMaWJyYXJ5KGxpYik7CiAgICAgIGlmKGZpbGUgJiYgdGhpcy5maWxlbmFtZXMuaW5kZXhPZihmaWxlKSA9PSAtMSkgdGhpcy5sYXp5T3BlbihmaWxlKTsKICAgIH0KICB9CgogIC8qKgogICAqIEBicmllZiAgT3BlbnMgYSBvd25lckRvY3VtZW50CiAgICoKICAgKiBAcGFyYW0gICAgICB7c3RyaW5nfSAgICAgICAgIGJhc2VuYW1lICBEb2N1bWVudCBiYXNlbmFtZQogICAqIEByZXR1cm4gICAgIHtFYWdsZURvY3VtZW50fSAgVGhlIGVhZ2xlIG93bmVyRG9jdW1lbnQuCiAgICovCiAgb3BlbihmaWxlKSB7CiAgICBjb25zb2xlLmxvZygnRWFnbGVQcm9qZWN0Lm9wZW4nLCBmaWxlKTsKICAgIGxldCBkb2MsIGVycjsKCiAgICBVdGlsLnRyeUNhdGNoKCk7CgogICAgdHJ5IHsKICAgICAgZG9jID0gRWFnbGVEb2N1bWVudC5vcGVuKGZpbGUsIHRoaXMuZnMpOwogICAgfSBjYXRjaChlcnJvcikgewogICAgICBlcnIgPSBlcnJvcjsKICAgICAgY29uc29sZS5sb2coJ0VSUk9SOicsIGVycik7CiAgICB9CiAgICBpZihkb2MpIHsKICAgICAgY29uc29sZS5sb2coJ09wZW5lZCBkb2N1bWVudCcsIGZpbGUpOwogICAgICB0aGlzLmZpbGVuYW1lcy5wdXNoKGZpbGUpOwogICAgICB0aGlzLmxpc3RbcGF0aC5iYXNlbmFtZShmaWxlKV0gPSBkb2M7CiAgICB9IGVsc2UgdGhyb3cgbmV3IEVycm9yKGBFYWdsZVByb2plY3Q6IGVycm9yIG9wZW5pbmcgJyR7ZmlsZX0nOiAke2Vycn1gKTsKICAgIGlmKGRvYy50eXBlID09ICdsYnInKSB7CiAgICAgIHRoaXMuZGF0YVtkb2MudHlwZV1bZG9jLmJhc2VuYW1lXSA9IGRvYzsKICAgICAgY29uc29sZS5sb2coJ09wZW5lZCBsaWJyYXJ5OicsIGRvYy5iYXNlbmFtZSk7CiAgICB9IGVsc2UgdGhpcy5kYXRhW2RvYy50eXBlXSA9IGRvYzsKICAgIHRoaXMuZmFpbGVkID0gIWRvYzsKICAgIHJldHVybiBkb2M7CiAgfQoKICBzdGF0aWMgYXN5bmMgZGV0ZXJtaW5lRWFnbGVQYXRoKGZzKSB7CiAgICBjb25zdCBlbnZWYXIgPSBhd2FpdCBVdGlsLmdldEVudignUEFUSCcpOwogICAgLy8gY29uc29sZS5sb2coJ2VudlZhcicsIHsgZW52VmFyIH0pOwoKICAgIGxldCBzZWFyY2hQYXRoID0gZW52VmFyLnNwbGl0KC86L2cpOwogICAgbGV0IGJpbjsKICAgIGZvcihsZXQgZGlyIG9mIHNlYXJjaFBhdGgpIHsKICAgICAgYmluID0gZGlyICsgJy9lYWdsZSc7CiAgICAgIGlmKCFmcy5leGlzdHNTeW5jKGJpbikpIGNvbnRpbnVlOwogICAgICBpZighLyhlYWdsZSkvaS50ZXN0KGRpcikpIHsKICAgICAgICBiaW4gPSBmcy5yZWFscGF0aFN5bmMoYmluKTsKICAgICAgICBkaXIgPSBiaW4ucmVwbGFjZSgvXC9bXlwvXSskLywgJycpOwogICAgICB9CiAgICAgIGRpciA9IGRpci5yZXBsYWNlKC9bXFxcL11iaW4kL2ksICcnKTsKICAgICAgLy9jb25zb2xlLmxvZygnZGlyOicsIGRpciwgYmluKTsKICAgICAgcmV0dXJuIGRpcjsKICAgIH0KICB9CgogIGZpbmREb2N1bWVudChwcmVkKSB7CiAgICBpZih0eXBlb2YgcHJlZCA9PSAnc3RyaW5nJykgewogICAgICBsZXQgbmFtZSA9IHByZWQ7CiAgICAgIGlmKG5hbWUuaW5kZXhPZignLycpID09IC0xKSBuYW1lID0gJyhefC8pJyArIG5hbWU7CgogICAgICBsZXQgcmUgPSBuZXcgUmVnRXhwKG5hbWUgKyAnJCcpOwogICAgICBwcmVkID0gbmFtZSA9PiByZS50ZXN0KG5hbWUpOwogICAgfQogICAgbGV0IG5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcy5kb2N1bWVudHMpOwogICAgY29uc3QgbmFtZSA9IG5hbWVzLmZpbmQocHJlZCk7CiAgICAvL2NvbnNvbGUubG9nKCdmaW5kRG9jdW1lbnQnLCB7IG5hbWVzLCBuYW1lLCBwcmVkOiBwcmVkICsgJycgfSk7CiAgICByZXR1cm4gdGhpcy5kb2N1bWVudHNbbmFtZV07CiAgfQogIGdldExpYnJhcnkobmFtZSkgewogICAgcmV0dXJuIHRoaXMuZmluZERvY3VtZW50KG5hbWUgKyAnLmxicicpOwogIH0KCiAgZ2V0IHNjaGVtYXRpYygpIHsKICAgIHJldHVybiB0aGlzLmZpbmREb2N1bWVudChuYW1lID0+IC9cLnNjaCQvaS50ZXN0KG5hbWUpKTsKICB9CiAgZ2V0IGJvYXJkKCkgewogICAgcmV0dXJuIHRoaXMuZmluZERvY3VtZW50KG5hbWUgPT4gL1wuYnJkJC9pLnRlc3QobmFtZSkpOwogIH0KICBnZXQgbGlicmFyaWVzKCkgewogICAgcmV0dXJuIHRoaXMubGlzdC5maWx0ZXIoZG9jID0+IGRvYy50eXBlID09ICdsYnInKTsKICB9CiAgZ2V0IHJvb3QoKSB7CiAgICBsZXQgY2hpbGRyZW4gPSB0aGlzLmxpc3Q7CiAgICByZXR1cm4geyBjaGlsZHJlbiB9OwogIH0KICBnZXQgY2hpbGRyZW4oKSB7CiAgICBsZXQgY2hpbGRyZW4gPSB0aGlzLmxpc3Q7CiAgICByZXR1cm4gY2hpbGRyZW47CiAgfQoKICAqaXRlcmF0b3IodCA9IChbdiwgbCwgZF0pID0+IFt0eXBlb2YgdiA9PSAnb2JqZWN0JyA/IEVhZ2xlRWxlbWVudC5nZXQoZCwgbCwgdikgOiB2LCBsLCBkXSkgewogICAgY29uc3QgcHJvamVjdCA9IHRoaXM7CiAgICBmb3IobGV0IGRvYyBvZiB0aGlzLmxpc3QpIHsKICAgICAgbGV0IHByZWZpeCA9IEVhZ2xlUHJvamVjdC5kb2N1bWVudEtleShkb2MpOwogICAgICB5aWVsZCogZG9jLml0ZXJhdG9yKHQpOwogICAgfQogIH0KCiAgLyogcHJldHRpZXItaWdub3JlICovIHN0YXRpYyBkb2N1bWVudExvY2F0aW9uKGQpIHsgcmV0dXJuIGQudHlwZSA9PSAnbGJyJyA/IFsnbGJyJyxkLmJhc2VuYW1lXSA6IFtkLnR5cGVdOyB9CgogIHN0YXRpYyBkb2N1bWVudEtleShkKSB7CiAgICBzd2l0Y2ggKGQudHlwZSkgewogICAgICBjYXNlICdzY2gnOgogICAgICAgIHJldHVybiBbJ3NjaGVtYXRpYyddOwogICAgICBjYXNlICdicmQnOgogICAgICAgIHJldHVybiBbJ2JvYXJkJ107CiAgICAgIGNhc2UgJ2xicic6CiAgICAgICAgcmV0dXJuIFsnbGlicmFyeScsIGQuYmFzZW5hbWVdOwogICAgfQogICAgcmV0dXJuIG51bGw7CiAgfQoKICBnZXREb2N1bWVudERpcmVjdG9yaWVzKCkgewogICAgcmV0dXJuIFV0aWwudW5pcXVlKHRoaXMuZmlsZW5hbWVzLm1hcChmaWxlID0+IHBhdGguZGlybmFtZShmaWxlKSkpOwogIH0KCiAgZ2V0TGlicmFyeVBhdGgoKSB7CiAgICBsZXQgZG9jRGlycyA9IHRoaXMuZ2V0RG9jdW1lbnREaXJlY3RvcmllcygpOwogICAgbGV0IHBhdGggPSBbLi4uZG9jRGlycywgLi4uZG9jRGlycy5tYXAoZGlyID0+IGAke2Rpcn0vbGJyYCldOyAvLy5maWx0ZXIoZnMuZXhpc3RzU3luYyk7CiAgICBpZih0aGlzLmVhZ2xlUGF0aCkgcGF0aC5wdXNoKHRoaXMuZWFnbGVQYXRoICsgJy9sYnInKTsKICAgIHJldHVybiBwYXRoOwogIH0KCiAgZ2V0TGlicmFyeU5hbWVzKCkgewogICAgbGV0IGxpYnJhcnlOYW1lcyA9IFtdOwoKICAgIFV0aWwudHJ5Q2F0Y2goCiAgICAgICgpID0+IHRoaXMuc2NoZW1hdGljLmxpYnJhcmllcy5rZXlzKCksCiAgICAgIG5hbWVzID0+IChsaWJyYXJ5TmFtZXMgPSBsaWJyYXJ5TmFtZXMuY29uY2F0KG5hbWVzKSkKICAgICk7CiAgICBVdGlsLnRyeUNhdGNoKAogICAgICAoKSA9PiB0aGlzLmJvYXJkLmxpYnJhcmllcy5rZXlzKCksCiAgICAgIG5hbWVzID0+IChsaWJyYXJ5TmFtZXMgPSBsaWJyYXJ5TmFtZXMuY29uY2F0KG5hbWVzKSkKICAgICk7CgogICAgcmV0dXJuIFV0aWwudW5pcXVlKGxpYnJhcnlOYW1lcyk7CiAgfQoKICBmaW5kTGlicmFyeShuYW1lLCBkaXJzID0gdGhpcy5saWJyYXJ5UGF0aCkgewogICAgZGlycyA/Pz0gdGhpcy5nZXRMaWJyYXJ5UGF0aCgpOwoKICAgIGZvcihsZXQgZGlyIG9mIGRpcnMpIHsKICAgICAgY29uc3QgZmlsZSA9IGAke2Rpcn0vJHtuYW1lfS5sYnJgOwogICAgICBpZih0aGlzLmZzLmV4aXN0c1N5bmMoZmlsZSkpIHJldHVybiBmaWxlOwogICAgfQogICAgcmV0dXJuIG51bGw7CiAgfQoKICAvKmxvYWRMaWJyYXJpZXMoZGlycyA9IHRoaXMubGlicmFyeVBhdGgpIHsKICAgIGNvbnN0IG5hbWVzID0gdGhpcy5nZXRMaWJyYXJ5TmFtZXMoKTsKICAgICBmb3IobGV0IG5hbWUgb2YgbmFtZXMpIHsKICAgICAgbGV0IGxpYiA9IHRoaXMuZmluZExpYnJhcnkobmFtZSwgZGlycyk7CiAgICAgIGlmKCFsaWIpCiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFYWdsZVByb2plY3QgbGlicmFyeSAnJHtuYW1lfScgbm90IGZvdW5kIGluOiAgXG4ke2RpcnMuam9pbignXG4gICcpfWApOwogICAgICB0aGlzLmxhenlPcGVuKGxpYik7CiAgICB9CiAgfSovCgogIHVwZGF0ZUxpYnJhcnkobmFtZSkgewogICAgY29uc3QgbCA9IHRoaXMubGlicmFyeTsKCiAgICBjb25zdCB7IHNjaGVtYXRpYywgYm9hcmQgfSA9IHRoaXM7CgogICAgbGV0IGxpYnJhcmllcyA9IHsKICAgICAgZmlsZTogdGhpcy5nZXRMaWJyYXJ5KG5hbWUpLAogICAgICBzY2hlbWF0aWM6IHNjaGVtYXRpYy5nZXRMaWJyYXJ5KG5hbWUpLAogICAgICBib2FyZDogYm9hcmQuZ2V0TGlicmFyeShuYW1lKQogICAgfTsKCiAgICAvKiAgbGV0IGxheWVycyA9IHsKICAgICAgc2NoZW1hdGljOiBVdGlsLnRvTWFwKHNjaGVtYXRpYy5sYXllcnMubGlzdC5maWx0ZXIobCA9PiBsLmFjdGl2ZSA9PSAneWVzJyksCiAgICAgICAgbCA9PiBbbC5udW1iZXIsIGxdCiAgICAgICksCiAgICAgIGJvYXJkOiBVdGlsLnRvTWFwKGJvYXJkLmxheWVycy5saXN0LmZpbHRlcihsID0+IGwuYWN0aXZlID09ICd5ZXMnKSwKICAgICAgICBsID0+IFtsLm51bWJlciwgbF0KICAgICAgKQogICAgfTsqLwoKICAgIC8vY29uc29sZS5sb2coJ2xpYnJhcmllcy5zY2hlbWF0aWM6JywgbGlicmFyaWVzLnNjaGVtYXRpYyk7CiAgICBmb3IobGV0IGRlc3REb2Mgb2YgWydzY2hlbWF0aWMnLCAnYm9hcmQnXSkgewogICAgICAvL2NvbnNvbGUubG9nKGBwcm9qZWN0WyR7ZGVzdERvY31dLmxpYnJhcmllczpgLCB0aGlzW2Rlc3REb2NdLmxpYnJhcmllcyk7CiAgICAgIC8vY29uc29sZS5sb2coLmdldExpYnJhcnkoJHtkZXN0RG9jfSk6YCwuZ2V0TGlicmFyeShkZXN0RG9jKSk7CiAgICAgIC8vY29uc29sZS5sb2coLmdldExpYnJhcnkoJHtkZXN0RG9jfSkucGFja2FnZXM6YCwuZ2V0TGlicmFyeShkZXN0RG9jKS5wYWNrYWdlcyk7CiAgICAgIGNvbnN0IGxpYlByb3BzID0gbGliID0+IGxpYjsKCiAgICAgIC8qICBjb25zdCB7IHBhY2thZ2VzLCBkZXZpY2VzZXRzLCBzeW1ib2xzIH0gPSBsaWI7CiAgICAgICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhbJ3BhY2thZ2VzJywgJ3N5bWJvbHMnLCAnZGV2aWNlc2V0cyddLm1hcChkZXN0RG9jID0+IFtkZXN0RG9jLCBsaWJbZGVzdERvY11dKS5maWx0ZXIoKFtkZXN0RG9jLCB2XSkgPT4gdikpOwogICAgICB9OyovCiAgICAgIGNvbnN0IGRlc3RMaWIgPSBsaWJQcm9wcy5nZXRMaWJyYXJ5KGRlc3REb2MpKTsKICAgICAgY29uc3Qgc3JjTGliID0gbGliUHJvcHMobGlicmFyaWVzLmZpbGUpOwogICAgICAvL2NvbnNvbGUubG9nKCdsaWJyYXJpZXMnLCBsaWJyYXJpZXMpOwogICAgICAvL2NvbnNvbGUubG9nKCdkZXN0TGliJywgZGVzdExpYik7CiAgICAgIGZvcihsZXQgZW50aXR5IG9mIFsncGFja2FnZXMnLCAnc3ltYm9scycsICdkZXZpY2VzZXRzJ10pIHsKICAgICAgICBpZighKGVudGl0eSBpbiBkZXN0TGliKSkgY29udGludWU7CiAgICAgICAgaWYoIShkZXN0TGliW2VudGl0eV0gaW5zdGFuY2VvZiBFYWdsZU5vZGVNYXApKSBjb250aW51ZTsKCiAgICAgICAgLypjb25zb2xlLmxvZygnZGVzdExpYicsIGRlc3RMaWIpOwogICAgICAgIC8vY29uc29sZS5sb2coJ2Rlc3RMaWJbZW50aXR5XScsIGRlc3RMaWJbZW50aXR5XSk7Ki8KICAgICAgICBjb25zdCBkc3RNYXAgPSBkZXN0TGliW2VudGl0eV07CiAgICAgICAgbGV0IGVudCA9IHNyY0xpYltlbnRpdHldLmVudHJpZXMoKTsKICAgICAgICBsZXQgbSA9IG5ldyBNYXAoZW50KTsKICAgICAgICAvL2NvbnNvbGUubG9nKGBkc3RNYXA6YCwgZHN0TWFwKTsKICAgICAgICAvL2NvbnNvbGUubG9nKGBkc3RNYXA6YCwgVXRpbC5jbGFzc05hbWUoZHN0TWFwKSk7CiAgICAgICAgbGV0IG51bVVwZGF0ZWQgPSAwOwogICAgICAgIGZvcihsZXQgdmFsdWUgb2Ygc3JjTGliW2VudGl0eV0udmFsdWVzKCkpIHsKICAgICAgICAgIGNvbnN0IGtleSA9IHZhbHVlLm5hbWU7CiAgICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCJzZXQiLHtrZXksdmFsdWV9KTsKICAgICAgICAgIGRzdE1hcC5zZXQoa2V5LCB2YWx1ZSk7CiAgICAgICAgICBudW1VcGRhdGVkKys7CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCd1cGRhdGUnLCB7IGRlc3REb2MsIGRlc3RMaWIsIGVudGl0eSwgbnVtVXBkYXRlZCB9KTsKICAgICAgICAvL2NvbnNvbGUubG9nKCdkc3RNYXAucmVmOicsIGR1bXAoZHN0TWFwLnJlZiwgMikpOwogICAgICAgIC8vY29uc29sZS5sb2coJ2RzdE1hcC5yYXc6JywgZHVtcChkc3RNYXAucmF3LCAyKSk7CiAgICAgICAgLy9jb25zb2xlLmxvZygnZHN0TWFwLmtleXM6JywgZHVtcChkc3RNYXAucmF3Lm1hcChpdGVtID0+IGl0ZW0uYXR0cmlidXRlcy5uYW1lKS5zb3J0KCksIDIpKTsKICAgICAgICAvL2NvbnNvbGUubG9nKCdkc3RNYXAua2V5czonLCBkdW1wKGRzdE1hcC5rZXlzKCkubGVuZ3RoLCAyKSk7CiAgICAgICAgLy9jb25zb2xlLmxvZygnZHN0TWFwLm1hcDonLCBkdW1wKGRzdE1hcC5tYXAoKS5zaXplLCAyKSk7CiAgICAgIH0KICAgIH0KICB9CgogIGluZGV4KGwpIHsKICAgIGxldCBwYXRoID0gWy4uLmxdOwogICAgbGV0IGtleSA9IHBhdGguc2hpZnQoKTsKICAgIGxldCBkb2MsIG5hbWU7CgogICAgaWYocGF0aC5sZW5ndGggPT0gMCkgcmV0dXJuIHRoaXM7CgogICAgc3dpdGNoIChrZXkpIHsKICAgICAgY2FzZSAnYm9hcmQnOgogICAgICBjYXNlICdzY2hlbWF0aWMnOgogICAgICAgIGRvYyA9IHRoaXNba2V5XTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAnbGlicmFyeSc6CiAgICAgICAgbmFtZSA9IHBhdGguc2hpZnQoKTsKICAgICAgICBkb2MgPSB0aGlzW2tleV1bbmFtZV07CiAgICAgICAgYnJlYWs7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgYnJlYWs7CiAgICB9CiAgICBpZighZG9jIHx8ICFkb2MuaW5kZXgpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdFUlJPUjogcHJvamVjdC5pbmRleCgnICsgbC5qb2luKCcsICcpICsgJyApJyk7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgaWYocGF0aC5sZW5ndGggPT0gMCkgcmV0dXJuIGRvYzsKICAgIHJldHVybiBkb2MuaW5kZXgocGF0aCk7CiAgfQoKICBzYXZlVG8oZGlyID0gJy4nLCBvdmVyd3JpdGUgPSBmYWxzZSkgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgbGV0IHByb21pc2VzID0gdGhpcy5saXN0Lm1hcChkb2MgPT4gWwogICAgICAgIGRvYy5iYXNlbmFtZSwKICAgICAgICBkb2Muc2F2ZVRvKFtkaXIsIGRvYy5iYXNlbmFtZV0uam9pbignLycpLCBvdmVyd3JpdGUsIHRoaXMuZnMpCiAgICAgIF0pOwoKICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKHJlc3VsdCA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ3Jlc3VsdDonLCByZXN1bHQpOwogICAgICAgIHJlc29sdmUoT2JqZWN0LmZyb21FbnRyaWVzKHJlc3VsdCkpOwogICAgICB9KTsKICAgIH0pOwogIH0KfQoAAAAAAAAAAIUmAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApR0AAAAAAACvHQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/nodeMap.js",
			"settings":
			{
				"buffer_size": 3681,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "lib/eagle/nodeList.js",
			"settings":
			{
				"buffer_size": 5226,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIsDAAAAAAAAjAMAAAAAAAAAAAAAjAMAAAAAAACMAwAAAAAAAAYAAAAgICAgLy8",
					"AQAAAAAAAAABAAAAkQMAAAAAAACLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"left_delete",
					null,
					"AgAAACUEAAAAAAAAJQQAAAAAAAAIAAAAZG9jdW1lbnQkBAAAAAAAACQEAAAAAAAAAQAAAC4",
					"AQAAAAAAAAABAAAAJQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAADQEAAAAAAAANAQAAAAAAAACAAAALyo",
					"AQAAAAAAAAABAAAANAQAAAAAAAA2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAD8EAAAAAAAAPwQAAAAAAAABAAAALz4EAAAAAAAAPgQAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKYDAAAAAAAApwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAKYDAAAAAAAApgMAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAApwMAAAAAAACnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ".item"
					},
					"BQAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAKkDAAAAAAAAqgMAAAAAAAAAAAAAqgMAAAAAAACrAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "opwne"
					},
					"BQAAAK8DAAAAAAAAsAMAAAAAAAAAAAAAsAMAAAAAAACxAwAAAAAAAAAAAACxAwAAAAAAALIDAAAAAAAAAAAAALIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwMAAAAAAACvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					4,
					"left_delete",
					null,
					"BAAAALMDAAAAAAAAswMAAAAAAAABAAAAZbIDAAAAAAAAsgMAAAAAAAABAAAAbrEDAAAAAAAAsQMAAAAAAAABAAAAd7ADAAAAAAAAsAMAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAtAMAAAAAAAC0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "wner,ref,"
					},
					"CQAAALADAAAAAAAAsQMAAAAAAAAAAAAAsQMAAAAAAACyAwAAAAAAAAAAAACyAwAAAAAAALMDAAAAAAAAAAAAALMDAAAAAAAAtAMAAAAAAAAAAAAAtAMAAAAAAAC1AwAAAAAAAAAAAAC1AwAAAAAAALYDAAAAAAAAAAAAALYDAAAAAAAAtwMAAAAAAAAAAAAAtwMAAAAAAAC4AwAAAAAAAAAAAAC4AwAAAAAAALkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAMAAAAAAACwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"paste",
					null,
					"AQAAABkKAAAAAAAANgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQoAAAAAAAAZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKwKAAAAAAAArQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAoAAAAAAACsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAAK0KAAAAAAAArwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQoAAAAAAACtCgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "${raw.length}"
					},
					"DQAAAK4KAAAAAAAArwoAAAAAAAAAAAAArwoAAAAAAACwCgAAAAAAAAAAAACwCgAAAAAAALEKAAAAAAAAAAAAALEKAAAAAAAAsgoAAAAAAAAAAAAAsgoAAAAAAACzCgAAAAAAAAAAAACzCgAAAAAAALQKAAAAAAAAAAAAALQKAAAAAAAAtQoAAAAAAAAAAAAAtQoAAAAAAAC2CgAAAAAAAAAAAAC2CgAAAAAAALcKAAAAAAAAAAAAALcKAAAAAAAAuAoAAAAAAAAAAAAAuAoAAAAAAAC5CgAAAAAAAAAAAAC5CgAAAAAAALoKAAAAAAAAAAAAALoKAAAAAAAAuwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgoAAAAAAACuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " items..."
					},
					"CQAAALsKAAAAAAAAvAoAAAAAAAAAAAAAvAoAAAAAAAC9CgAAAAAAAAAAAAC9CgAAAAAAAL4KAAAAAAAAAAAAAL4KAAAAAAAAvwoAAAAAAAAAAAAAvwoAAAAAAADACgAAAAAAAAAAAADACgAAAAAAAMEKAAAAAAAAAAAAAMEKAAAAAAAAwgoAAAAAAAAAAAAAwgoAAAAAAADDCgAAAAAAAAAAAADDCgAAAAAAAMQKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwoAAAAAAAC7CgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAMUKAAAAAAAAxgoAAAAAAAAAAAAAxgoAAAAAAADHCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQoAAAAAAADFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAAK4KAAAAAAAArwoAAAAAAAAAAAAArwoAAAAAAACwCgAAAAAAAAAAAACwCgAAAAAAALEKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgoAAAAAAACuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAANEKAAAAAAAA0goAAAAAAAAAAAAA0goAAAAAAADTCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QoAAAAAAADRCgAAAAAAAAAAAAAAAE5A"
				],
				[
					145,
					2,
					"left_delete",
					null,
					"AgAAANIKAAAAAAAA0goAAAAAAAABAAAAJtEKAAAAAAAA0QoAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA0woAAAAAAADTCgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANEKAAAAAAAA0goAAAAAAAAAAAAA0goAAAAAAADTCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QoAAAAAAADRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACPAwAAAAAAAAAAAACPAwAAAAAAAJADAAAAAAAAAAAAAJADAAAAAAAAkQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigMAAAAAAACKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIDAAAAAAAAkwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgMAAAAAAACSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJMDAAAAAAAAlQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwMAAAAAAACTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BAAAAJQDAAAAAAAAlQMAAAAAAAAAAAAAlQMAAAAAAACWAwAAAAAAAAAAAACWAwAAAAAAAJcDAAAAAAAAAAAAAJcDAAAAAAAAmAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "=ref;"
					},
					"BQAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAACbAwAAAAAAAJwDAAAAAAAAAAAAAJwDAAAAAAAAnQMAAAAAAAAAAAAAnQMAAAAAAACeAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQMAAAAAAACZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BQAAAMkDAAAAAAAAygMAAAAAAAAAAAAAygMAAAAAAADKAwAAAAAAAAMAAAByZWbKAwAAAAAAAMsDAAAAAAAAAAAAAMsDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQMAAAAAAADMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BQAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABLBAAAAAAAAAMAAAByZWZLBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAATQQAAAAAAAAAAAAATQQAAAAAAABOBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					11,
					"right_delete",
					null,
					"CwAAAFgEAAAAAAAAWAQAAAAAAAABAAAAIFgEAAAAAAAAWAQAAAAAAAABAAAALFgEAAAAAAAAWAQAAAAAAAABAAAAIFgEAAAAAAAAWAQAAAAAAAABAAAAclgEAAAAAAAAWAQAAAAAAAABAAAAYVgEAAAAAAAAWAQAAAAAAAABAAAAd1gEAAAAAAAAWAQAAAAAAAABAAAAW1gEAAAAAAAAWAQAAAAAAAABAAAAcFgEAAAAAAAAWAQAAAAAAAABAAAAb1gEAAAAAAAAWAQAAAAAAAABAAAAc1gEAAAAAAAAWAQAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAWAQAAAAAAABYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ".document"
					},
					"CQAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					9,
					"left_delete",
					null,
					"CQAAAFAEAAAAAAAAUAQAAAAAAAABAAAAdE8EAAAAAAAATwQAAAAAAAABAAAAbk4EAAAAAAAATgQAAAAAAAABAAAAZU0EAAAAAAAATQQAAAAAAAABAAAAbUwEAAAAAAAATAQAAAAAAAABAAAAdUsEAAAAAAAASwQAAAAAAAABAAAAY0oEAAAAAAAASgQAAAAAAAABAAAAb0kEAAAAAAAASQQAAAAAAAABAAAAZEgEAAAAAAAASAQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAUQQAAAAAAABRBAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "slice(-1)."
					},
					"CgAAAE8EAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABRBAAAAAAAAAAAAABRBAAAAAAAAFIEAAAAAAAAAAAAAFIEAAAAAAAAUwQAAAAAAAAAAAAAUwQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFUEAAAAAAAAAAAAAFUEAAAAAAAAVgQAAAAAAAAAAAAAVgQAAAAAAABXBAAAAAAAAAAAAABXBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAWQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAE8EAAAAAAAATwQAAAAAAAAKAAAAc2xpY2UoLTEpLg",
					"AQAAAAAAAAABAAAAWQQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": ".document"
					},
					"CQAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAiBAAAAAAAAAAAAAAiBAAAAAAAACQEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQQAAAAAAAAdBAAAAAAAAAAAAAAAUIRA"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "owner.document.raw"
					},
					"EgAAACQEAAAAAAAAJQQAAAAAAAAAAAAAJQQAAAAAAAAmBAAAAAAAAAAAAAAmBAAAAAAAACcEAAAAAAAAAAAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAADMEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "2element"
					},
					"CAAAADYEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADkEAAAAAAAAAAAAADkEAAAAAAAAOgQAAAAAAAAAAAAAOgQAAAAAAAA7BAAAAAAAAAAAAAA7BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA+BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgQAAAAAAAA2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": ".delete"
					},
					"BwAAAD4EAAAAAAAAPwQAAAAAAAAAAAAAPwQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEEEAAAAAAAAAAAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABDBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAARQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					6,
					"left_delete",
					null,
					"BgAAAEQEAAAAAAAARAQAAAAAAAABAAAAZUMEAAAAAAAAQwQAAAAAAAABAAAAdEIEAAAAAAAAQgQAAAAAAAABAAAAZUEEAAAAAAAAQQQAAAAAAAABAAAAbEAEAAAAAAAAQAQAAAAAAAABAAAAZT8EAAAAAAAAPwQAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAARQQAAAAAAABFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "maop"
					},
					"BAAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAABBBAAAAAAAAEIEAAAAAAAAAAAAAEIEAAAAAAAAQwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					2,
					"left_delete",
					null,
					"AgAAAEIEAAAAAAAAQgQAAAAAAAABAAAAcEEEAAAAAAAAQQQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "p.delete"
					},
					"CAAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABDBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAABGBAAAAAAAAEcEAAAAAAAAAAAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkEAAAAAAAASwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQQAAAAAAABJBAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "raw"
					},
					"AwAAAEoEAAAAAAAASwQAAAAAAAAAAAAASwQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAE0EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAE0EAAAAAAAATwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFEEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFMEAAAAAAAAVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwQAAAAAAABTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFQEAAAAAAAAVQQAAAAAAAAAAAAAVQQAAAAAAABbBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAQAAAAAAABUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAJ8EAAAAAAAAoAQAAAAAAAAAAAAAVQQAAAAAAABVBAAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAnwQAAAAAAACfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": " raw"
					},
					"BAAAAJoEAAAAAAAAmwQAAAAAAAAAAAAAmwQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAJ0EAAAAAAAAAAAAAJ0EAAAAAAAAngQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgQAAAAAAACaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJ4EAAAAAAAAoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAJ8EAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAAChBAAAAAAAAAAAAAChBAAAAAAAAKIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwQAAAAAAACfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB4EAAAAAAAAHwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAAAA"
				],
				[
					385,
					1,
					"left_delete",
					null,
					"AQAAAJMDAAAAAAAAkwMAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAlAMAAAAAAACUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"left_delete",
					null,
					"AQAAAJcDAAAAAAAAlwMAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAmAMAAAAAAACYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": ".path.down"
					},
					"CgAAAJsDAAAAAAAAnAMAAAAAAAAAAAAAnAMAAAAAAACdAwAAAAAAAAAAAACdAwAAAAAAAJ4DAAAAAAAAAAAAAJ4DAAAAAAAAnwMAAAAAAAAAAAAAnwMAAAAAAACgAwAAAAAAAAAAAACgAwAAAAAAAKEDAAAAAAAAAAAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACjAwAAAAAAAAAAAACjAwAAAAAAAKQDAAAAAAAAAAAAAKQDAAAAAAAApQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwMAAAAAAACbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUDAAAAAAAApwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQMAAAAAAAClAwAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "ops"
					},
					"AwAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					3,
					"left_delete",
					null,
					"AwAAAKgDAAAAAAAAqAMAAAAAAAABAAAAc6cDAAAAAAAApwMAAAAAAAABAAAAcKYDAAAAAAAApgMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqQMAAAAAAACpAwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAKYDAAAAAAAApwMAAAAAAAAAAAAApwMAAAAAAACoAwAAAAAAAAAAAACoAwAAAAAAAKkDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					2,
					"left_delete",
					null,
					"AgAAAJ4EAAAAAAAAngQAAAAAAAAEAAAAZG93bp0EAAAAAAAAnQQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAngQAAAAAAACiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					5,
					"right_delete",
					null,
					"BQAAAJ0EAAAAAAAAnQQAAAAAAAABAAAAKJ0EAAAAAAAAnQQAAAAAAAABAAAAcJ0EAAAAAAAAnQQAAAAAAAABAAAAb50EAAAAAAAAnQQAAAAAAAABAAAAc50EAAAAAAAAnQQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": " raw:"
					},
					"BQAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADrAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gMAAAAAAADmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": " raw"
					},
					"BAAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA7AMAAAAAAADtAwAAAAAAAAAAAADtAwAAAAAAAO4DAAAAAAAAAAAAAO4DAAAAAAAA7wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wMAAAAAAADrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAO8DAAAAAAAA8QMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wMAAAAAAADvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAPADAAAAAAAA8QMAAAAAAAAAAAAA8QMAAAAAAADyAwAAAAAAAAAAAADyAwAAAAAAAPMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AMAAAAAAADwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					2,
					"left_delete",
					null,
					"AgAAAJ4EAAAAAAAAngQAAAAAAAAIAAAAZG9jdW1lbnSdBAAAAAAAAJ0EAAAAAAAAAQAAAC4",
					"AQAAAAAAAAABAAAAngQAAAAAAACmBAAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": ".slice"
					},
					"BgAAAKMEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAAClBAAAAAAAAAAAAAClBAAAAAAAAKYEAAAAAAAAAAAAAKYEAAAAAAAApwQAAAAAAAAAAAAApwQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKkEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowQAAAAAAACjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "(-1)"
					},
					"BAAAAKkEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAACrBAAAAAAAAAAAAACrBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAArQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQQAAAAAAACpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAKwEAAAAAAAArQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					2,
					"left_delete",
					null,
					"AgAAAKwEAAAAAAAArAQAAAAAAAABAAAAMqsEAAAAAAAAqwQAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAArQQAAAAAAACtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAKsEAAAAAAAArAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwQAAAAAAACrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": ".-"
					},
					"AgAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					2,
					"left_delete",
					null,
					"AgAAAJ4EAAAAAAAAngQAAAAAAAABAAAALZ0EAAAAAAAAnQQAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAnwQAAAAAAACfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": ".docuzm"
					},
					"BwAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAACiBAAAAAAAAKMEAAAAAAAAAAAAAKMEAAAAAAAApAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQQAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					2,
					"left_delete",
					null,
					"AgAAAKMEAAAAAAAAowQAAAAAAAABAAAAbaIEAAAAAAAAogQAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAApAQAAAAAAACkBAAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "ment"
					},
					"BAAAAKIEAAAAAAAAowQAAAAAAAAAAAAAowQAAAAAAACkBAAAAAAAAAAAAACkBAAAAAAAAKUEAAAAAAAAAAAAAKUEAAAAAAAApgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogQAAAAAAACiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": "ref.do"
					},
					"BgAAAKgEAAAAAAAAqQQAAAAAAAAAAAAAqQQAAAAAAACqBAAAAAAAAAAAAACqBAAAAAAAAKsEAAAAAAAAAAAAAKsEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACtBAAAAAAAAAAAAACtBAAAAAAAAK4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": "wn(pos)"
					},
					"BwAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALEEAAAAAAAAAAAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACzBAAAAAAAAAAAAACzBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAtQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"left_delete",
					null,
					"AQAAALUEAAAAAAAAtQQAAAAAAAAOAAAAcGF0aC5zbGljZSgtMik",
					"AQAAAAAAAAABAAAAtQQAAAAAAADDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"left_delete",
					null,
					"AQAAALUEAAAAAAAAtQQAAAAAAAAKAAAALCByYXdbcG9zXQ",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"paste",
					null,
					"AQAAAAgGAAAAAAAAEQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbFAAAaW1wb3J0IHsgRWFnbGVSZWYgfSBmcm9tICcuL3JlZi5qcyc7CmltcG9ydCB7IEVhZ2xlRWxlbWVudCB9IGZyb20gJy4vZWxlbWVudC5qcyc7CmltcG9ydCBVdGlsIGZyb20gJy4uL3V0aWwuanMnOwppbXBvcnQgeyB0ZXh0LCBjb25jYXQsIGluc3BlY3RTeW1ib2wgfSBmcm9tICcuL2NvbW1vbi5qcyc7CgpleHBvcnQgY2xhc3MgRWFnbGVOb2RlTGlzdCB7CiAgY29uc3RydWN0b3Iob3duZXIsIHJlZiwgcHJlZCwgZ2V0T3JDcmVhdGUgPSBFYWdsZUVsZW1lbnQuZ2V0KSB7CiAgICBpZihVdGlsLmlzT2JqZWN0KHJlZikgJiYgISgnZGVyZWZlcmVuY2UnIGluIHJlZikpIHJlZiA9IEVhZ2xlUmVmKG93bmVyLCByZWYpOwogICAgbGV0IHJhdyA9IHJlZi5kZXJlZmVyZW5jZSgpOwogICAgLy9jb25zb2xlLmxvZygnRWFnbGVOb2RlTGlzdC5jb25zdHJ1Y3RvcicsIHsgb3duZXIsIHJlZiwgcHJlZCwgcmF3IH0pOwogICAgbGV0IHNwZWNpZXMgPSBVdGlsLmdldENvbnN0cnVjdG9yKG93bmVyKTsKICAgIFV0aWwuZGVmaW5lKHRoaXMsIHsgcmVmLCBvd25lciwgcmF3LCBnZXRPckNyZWF0ZSB9KTsKICAgIHRoaXMucHJlZCA9IHR5cGVvZiBwcmVkID09ICdmdW5jdGlvbicgPyBwcmVkIDogKCkgPT4gdHJ1ZTsKICB9CgogIGl0ZW0ocG9zKSB7CiAgICBsZXQgeyBvd25lciwgcmVmLCByYXcsIHByZWQgfSA9IHRoaXM7CiAgICBsZXQgZW50cmllcyA9IFsuLi5yYXcuZW50cmllcygpXTsKICAgIGlmKHR5cGVvZiBwcmVkID09ICdmdW5jdGlvbicpIHsKICAgICAgZW50cmllcyA9IGVudHJpZXMuZmlsdGVyKChbaSwgdl0pID0+IHByZWQodiwgaSwgcmF3KSk7CiAgICAgIGlmKGVudHJpZXNbcG9zXSkgcG9zID0gZW50cmllc1twb3NdWzBdOwogICAgfQogICAgaWYocG9zIDwgMCkgcG9zICs9IHJhdy5sZW5ndGg7CiAgICBsZXQgcGF0aD1yZWYucGF0aC5kb3duKHBvcyk7CiBjb25zb2xlLmxvZygnRWFnbGVOb2RlTGlzdC5pdGVtJywge293bmVyLHBhdGgsIHBvcywgcHJlZCwgcmF3OiByYXdbcG9zXX0pOwogICAgaWYocmF3ICYmIFV0aWwuaXNPYmplY3QocmF3W3Bvc10pICYmICd0YWdOYW1lJyBpbiByYXdbcG9zXSkgewoKICAgICAgb3duZXIuZG9jdW1lbnQucmF3MmVsZW1lbnQubWFwLmRlbGV0ZShyYXdbcG9zXSk7CgogICAgICBsZXQgZWxlbWVudCA9IHRoaXMuZ2V0T3JDcmVhdGUob3duZXIuZG9jdW1lbnQsIHJlZi5kb3duKHBvcykpOwogICAgICBpZihwcmVkKGVsZW1lbnQpKSByZXR1cm4gZWxlbWVudDsKICAgIH0KICB9CgogICpbU3ltYm9sLml0ZXJhdG9yXSgpIHsKICAgIGxldCB7IHJlZiwgb3duZXIsIHJhdywgcHJlZCB9ID0gdGhpczsKICAgIC8vY29uc29sZS5sb2coJ1N5bWJvbC5pdGVyYXRvcicsIHsgcmVmLCBvd25lciwgcmF3LCBwcmVkOiBwcmVkICsgJycgfSk7CiAgICBsZXQgaiA9IDA7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgcmF3Lmxlbmd0aDsgaSsrKSB7CiAgICAgIGlmKHByZWQgJiYgIXByZWQocmF3W2ldLCBqLCB0aGlzKSkgY29udGludWU7CiAgICAgIHlpZWxkIHRoaXMuZ2V0T3JDcmVhdGUob3duZXIuZG9jdW1lbnQsIHJlZi5kb3duKGkpIC8qLCByYXdbaV0qLyk7CiAgICAgIGorKzsKICAgIH0KICB9CgogIGdldCBsZW5ndGgoKSB7CiAgICBsZXQgeyByZWYsIG93bmVyLCByYXcsIHByZWQgfSA9IHRoaXM7CiAgICBpZih0eXBlb2YgcHJlZCA9PSAnZnVuY3Rpb24nKSByYXcgPSByYXcuZmlsdGVyKHByZWQpOwogICAgcmV0dXJuIHJhdyA/IHJhdy5sZW5ndGggOiAwOwogIH0KCiAgZ2V0IGl0ZXJhdG9yKCkgewogICAgcmV0dXJuIHRoaXNbU3ltYm9sLml0ZXJhdG9yXTsKICB9CgogIHJlbW92ZShjb25kKSB7CiAgICBsZXQgeyByYXcsIHByZWQgPSBpID0+IHRydWUgfSA9IHRoaXM7CiAgICBpZih0eXBlb2YgY29uZCA9PSAnbnVtYmVyJykgewogICAgICBsZXQgbnVtID0gY29uZDsKICAgICAgY29uZCA9IChjaGlsZCwgaSwgbGlzdCkgPT4gaSA9PT0gbnVtOwogICAgfQogICAgY29uc29sZS5sb2coJ2NvbmQ6JywgY29uZCk7CiAgICBmb3IobGV0IGkgPSByYXcubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmKHByZWQocmF3W2ldLCBpLCB0aGlzKSAmJiBjb25kKHJhd1tpXSwgaSwgdGhpcykpIHJhdy5zcGxpY2UoaSwgMSk7CgogICAgcmV0dXJuIHRoaXM7CiAgfQoKICBhcHBlbmQoLi4uYXJncykgewogICAgbGV0IHsgcmF3LCByZWYgfSA9IHRoaXM7CiAgICBsZXQgcGFyZW50ID0gcmVmLnBhcmVudC5kZXJlZmVyZW5jZSgpOwogICAgYXJncyA9IGFyZ3MubWFwKCh7IHRhZ05hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH0pID0+IEVhZ2xlRWxlbWVudC5jcmVhdGUodGFnTmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pKTsKICAgIHBhcmVudC5jaGlsZHJlbi5zcGxpY2UocGFyZW50LmNoaWxkcmVuLmxlbmd0aCwgcGFyZW50LmNoaWxkcmVuLmxlbmd0aCwgLi4uYXJncyk7CiAgICByZXR1cm4gdGhpczsKICB9CgogIHRvWE1MKGRlcHRoID0gSW5maW5pdHkpIHsKICAgIGxldCBzID0gJyc7CiAgICBmb3IobGV0IGVsZW0gb2YgdGhpc1tTeW1ib2wuaXRlcmF0b3JdKCkpIHsKICAgICAgaWYocyAhPSAnJykgcyArPSAnXG4nOwogICAgICBzICs9IGVsZW0udG9YTUwoTnVtYmVyLmlzRmluaXRlKGRlcHRoKSA/IGRlcHRoIDogSW5maW5pdHkpOwogICAgfQoKICAgIHJldHVybiBzOwogIH0KCiAgW2luc3BlY3RTeW1ib2xdKCkgewogICAgICBsZXQgeyByYXcsIHJlZiB9ID0gdGhpczsKICAvLyAgICBjb25zb2xlLmxvZygidGhpcy5lbnRyaWVzIiwgdGhpcy5lbnRyaWVzKTsKICAgIHJldHVybiAoCiAgICAgIHRleHQoVXRpbC5jbGFzc05hbWUodGhpcyksIDApICsKICAgICAgYCBbXG4gIGAgKyBgLi4uJHtyYXcubGVuZ3RofSBpdGVtcy4uLmAgKwogICAgICAvL1suLi50aGlzLmVudHJpZXMoKV0ucmVkdWNlKChhY2MsIFtrLCB2XSkgPT4gKGFjYyA/IGFjYyArICcsXG4gICcgOiBhY2MpICsgdltpbnNwZWN0U3ltYm9sXSgpLCAnJykgKwogICAgICBgXG5dYAogICAgKTsKICB9CgogIHN0YXRpYyBjcmVhdGUob3duZXIsIHJlZiwgcHJlZCwgZ2V0T3JDcmVhdGUpIHsKICAgIGxldCBpbnN0YW5jZSA9IG5ldyBFYWdsZU5vZGVMaXN0KG93bmVyLCByZWYsIHByZWQsIGdldE9yQ3JlYXRlKTsKICAgIHJldHVybiBuZXcgUHJveHkoaW5zdGFuY2UsIHsKICAgICAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpIHsKICAgICAgICBpZih0eXBlb2YgcHJvcCA9PSAnbnVtYmVyJyB8fCAodHlwZW9mIHByb3AgPT0gJ3N0cmluZycgJiYgL15bMC05XSskLy50ZXN0KHByb3ApKSkgewogICAgICAgICAgcHJvcCA9ICtwcm9wOwogICAgICAgICAgbGV0IGxpc3QgPSBpbnN0YW5jZS5yZWYuZGVyZWZlcmVuY2UoKTsKICAgICAgICAgIGlmKHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyAmJiAncmF3JyBpbiB2YWx1ZSkgdmFsdWUgPSB2YWx1ZS5yYXc7CiAgICAgICAgICBSZWZsZWN0LnNldChsaXN0LCBwcm9wLCB2YWx1ZSk7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlKTsKICAgICAgfSwKICAgICAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHsKICAgICAgICBsZXQgaW5kZXg7CiAgICAgICAgbGV0IGlzX3N5bWJvbCA9IHR5cGVvZiBwcm9wID09ICdzeW1ib2wnOwogICAgICAgIGxldCBlOwogICAgICAgIGlmKHR5cGVvZiBwcm9wID09ICdudW1iZXInIHx8ICh0eXBlb2YgcHJvcCA9PSAnc3RyaW5nJyAmJiAvXi0/WzAtOV0rJC8udGVzdChwcm9wKSkpIHsKICAgICAgICAgIHByb3AgPSArcHJvcDsKICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5pdGVtKHByb3ApOwogICAgICAgIH0KCiAgICAgICAgaWYocHJvcCA9PSAnbGVuZ3RoJykgewogICAgICAgICAgcmV0dXJuIGluc3RhbmNlLmxlbmd0aDsKICAgICAgICB9CgogICAgICAgIGlmKHByb3AgPT0gJ3JhdycpIHsKICAgICAgICAgIGNvbnN0IHsgcmF3LCByZWYgfSA9IGluc3RhbmNlOwogICAgICAgICAgcmV0dXJuIHJhdyB8fCAocmVmICYmIHJlZi5kZXJlZmVyZW5jZSgpKTsKICAgICAgICB9CgogICAgICAgIGlmKHByb3AgPT0gJ2luc3RhbmNlJykgcmV0dXJuIGluc3RhbmNlOwogICAgICAgIGlmKHR5cGVvZiBFYWdsZU5vZGVMaXN0LnByb3RvdHlwZVtwcm9wXSA9PSAnZnVuY3Rpb24nKSByZXR1cm4gRWFnbGVOb2RlTGlzdC5wcm90b3R5cGVbcHJvcF07CiAgICAgICAgaWYocHJvcCA9PSAncGF0aCcpIHJldHVybiBpbnN0YW5jZS5yZWYucGF0aDsKICAgICAgICBpZih0eXBlb2YgaW5zdGFuY2VbcHJvcF0gPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGluc3RhbmNlW3Byb3BdLmJpbmQoaW5zdGFuY2UpOwogICAgICAgIGlmKGluc3RhbmNlW3Byb3BdICE9PSB1bmRlZmluZWQpIHJldHVybiBpbnN0YW5jZVtwcm9wXTsKICAgICAgICBsZXQgbGlzdCA9IGluc3RhbmNlICYmIGluc3RhbmNlLnJlZiA/IGluc3RhbmNlLnJlZi5kZXJlZmVyZW5jZSgpIDogbnVsbDsKICAgICAgICBpZihwcm9wID09ICdmaW5kJykKICAgICAgICAgIHJldHVybiBuYW1lID0+IHsKICAgICAgICAgICAgY29uc3QgaWR4ID0gbGlzdC5maW5kSW5kZXgoZSA9PiBlLmF0dHJpYnV0ZXMubmFtZSA9PSBuYW1lKTsKICAgICAgICAgICAgcmV0dXJuIGlkeCA9PSAtMSA/IG51bGwgOiB0aGlzLmdldE9yQ3JlYXRlKGluc3RhbmNlLCBpbnN0YW5jZS5yZWYuY29uY2F0KFtpZHhdKSk7CiAgICAgICAgICB9OwogICAgICAgIC8vICAgICAgaWYocHJvcCA9PSAnZW50cmllcycpIHJldHVybiAoKSA9PiBsaXN0Lm1hcCgoaXRlbSwgaSkgPT4gW2l0ZW0uYXR0cmlidXRlcy5uYW1lLCBpdGVtXSk7CgogICAgICAgIGlmKChsaXN0ICYmICFpc19zeW1ib2wgJiYgL14oWzAtOV0rfGxlbmd0aCkkLy50ZXN0KCcnICsgcHJvcCkpIHx8IFsnZmluZEluZGV4J10uaW5kZXhPZihwcm9wKSAhPT0gLTEpIHsKICAgICAgICAgIGlmKHByb3AgaW4gbGlzdCkgcmV0dXJuIGxpc3RbcHJvcF07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7CiAgICAgIH0sCiAgICAgIGdldFByb3RvdHlwZU9mKHRhcmdldCkgewogICAgICAgIHJldHVybiBFYWdsZU5vZGVMaXN0LnByb3RvdHlwZTsKICAgICAgfQogICAgfSk7CiAgfQp9CgpVdGlsLmRlY29yYXRlSXRlcmFibGUoRWFnbGVOb2RlTGlzdC5wcm90b3R5cGUsIGZhbHNlKTsKAAAAAAAAAABoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAMAAAAAAAD4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALIDAAAAAAAAswMAAAAAAAAAAAAAswMAAAAAAAC0AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgMAAAAAAACyAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pretti",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/eagle",
		"/home/roman/Projects/plot-cv/lib/eagle/components"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/json/pathMapper.js",
		"/home/janos/Sources/plot-cv/upload.html",
		"/home/janos/Sources/plot-cv/.cmds",
		"/home/janos/Sources/plot-cv/.cmake-format",
		"/home/janos/Sources/plot-cv/.cproject",
		"/home/janos/Sources/plot-cv/test-rpc.js",
		"/home/janos/Sources/plot-cv/test-video.js",
		"/home/janos/Sources/plot-cv/imagePipeline.js",
		"/home/janos/Sources/plot-cv/test-image.js",
		"/home/janos/Sources/plot-cv/midi-tcp.js",
		"/home/janos/Sources/plot-cv/list-proxies.js",
		"/home/janos/Sources/plot-cv/libraries.js",
		"/home/janos/Sources/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Sources/plot-cv/test-membrane.js",
		"/home/janos/Sources/plot-cv/eagle-server.js",
		"/home/janos/Sources/plot-cv/eagle-query.js",
		"/home/janos/Sources/plot-cv/eagle-commands.js",
		"/home/janos/Sources/plot-cv/check-discogs.js",
		"/home/janos/Sources/plot-cv/debugger-server.js",
		"/home/janos/Sources/plot-cv/adsb-server.js",
		"/home/janos/Sources/plot-cv/adsb-client.js",
		"/home/janos/Sources/plot-cv/worker.js",
		"/home/janos/Sources/plot-cv/time-helpers.js",
		"/home/janos/Sources/plot-cv/test-umat.js",
		"/home/janos/Sources/plot-cv/test-quickjs.js",
		"/home/janos/Sources/plot-cv/ws-worker.js",
		"/home/janos/Sources/plot-cv/wscli.js",
		"/home/janos/Sources/plot-cv/test-worker.js",
		"/home/janos/Sources/plot-cv/test-sockets.js",
		"/home/janos/Sources/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/jsutils.c",
		"/home/janos/Sources/plot-cv/quickjs/qjs-net/jsutils.h",
		"/home/janos/Sources/plot-cv/test-net.js",
		"/home/janos/Sources/plot-cv/test-nanovg.js",
		"/home/janos/Sources/plot-cv/test.js",
		"/home/janos/Sources/plot-cv/test-imread.js",
		"/home/janos/Sources/plot-cv/test-glfw.js",
		"/home/janos/Sources/plot-cv/test-features2d.js",
		"/home/janos/Sources/plot-cv/test-diagram.js",
		"/home/janos/Sources/plot-cv/test-cv.js",
		"/home/janos/Sources/plot-cv/test-cli.js",
		"/home/janos/Sources/plot-cv/test-minnet.js",
		"/home/janos/Sources/plot-cv/test-midi.js",
		"/home/janos/Sources/plot-cv/search-engine.js",
		"/home/janos/Sources/plot-cv/plot-cv.js",
		"/home/janos/Sources/plot-cv/param.js",
		"/home/janos/Sources/plot-cv/myworker.js",
		"/home/janos/Sources/plot-cv/make-bitmap.js",
		"/home/janos/Sources/plot-cv/draw-utils.js",
		"/home/janos/Sources/plot-cv/doc-scanner.js",
		"/home/janos/Sources/plot-cv/diagram.js",
		"/home/janos/Sources/plot-cv/cv-shell.js",
		"/home/janos/Sources/plot-cv/ast-shell.js",
		"/home/janos/Sources/plot-cv/test-eagle.js",
		"/home/janos/Sources/plot-cv/eagle-worker.js",
		"/home/janos/Sources/plot-cv/eagle-shell.js",
		"/home/janos/Sources/plot-cv/test-opencv.js",
		"/home/janos/Sources/plot-cv/commands.js",
		"/home/janos/Sources/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/janos/Sources/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/janos/Sources/plot-cv/autoValue.js",
		"/home/janos/Sources/plot-cv/terminal.js",
		"/home/janos/Sources/plot-cv/lib/eagle/renderer.js",
		"/home/janos/Sources/plot-cv/lib/eagle/node.js",
		"/home/janos/Sources/plot-cv/lib/eagle/element.js",
		"/home/janos/Sources/plot-cv/lib/eagle/document.js",
		"/home/janos/Sources/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/janos/Sources/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/janos/Sources/plot-cv/lib/eagle/nodeMap.js",
		"/home/janos/Sources/plot-cv/lib/eagle/svgRenderer.js",
		"/home/janos/Sources/plot-cv/main.js",
		"/home/janos/Sources/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/janos/Sources/plot-cv/virtfs.js",
		"/home/janos/Sources/plot-cv/server.js",
		"/home/janos/Sources/plot-cv/qjs-opencv/out/utility.js.html",
		"/home/janos/Sources/plot-cv/lib/dom.es",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/virtfs.js",
		"/home/roman/Projects/plot-cv/eagle-server.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/xpath.g4",
		"/home/roman/Projects/plot-cv/lib/spawn.js",
		"/home/roman/Projects/plot-cv/trkl.es",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/deep.es",
		"/home/roman/Projects/plot-cv/preact.es",
		"/home/roman/Projects/plot-cv/preact.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/discogs.js",
		"/home/roman/Projects/plot-cv/lscache.es",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg-qjs.h",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-104",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/check-discogs.js",
		"/home/roman/Projects/plot-cv/libs.js",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-102",
		"/home/roman/Projects/plot-cv/discogs.es",
		"/home/roman/Projects/plot-cv/date-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js.orig",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/childProcess.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/config.js",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/a.out",
		"/home/roman/Projects/plot-cv/test-autoplacer.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,-*/opencv/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			" show",
			"show",
			"REPL",
			"repl",
			"render",
			"hfn",
			".libraries\\[([^]]*)\\]",
			"\\.libraries\\[",
			"libraries\\[",
			"SchematicSymbol",
			"data =",
			"children",
			"'drawing'",
			"useValue",
			"hfn",
			"name\\]",
			"hfn",
			"fn",
			"fn\\(",
			"fn ",
			"fn =",
			"render",
			"append",
			"console",
			"ReactComponent",
			"new Renderer",
			"getLayer",
			"GetProxy",
			"EagleNodeMap",
			"EagleNodeMap.create",
			"new EagleNodeMap",
			"'layer'",
			"getLayer",
			"^(\\s*)(console.log)",
			"        console.log",
			"^(\\s*)(console.log)",
			"getRaw",
			"getOrCreate",
			"raw2element",
			"new EagleElement",
			"path",
			"PathMapper",
			"pathMapper",
			"raw2element",
			"raw2ele",
			"tagName",
			"children",
			"children(",
			"get children",
			"children",
			"getOrCreate",
			"children",
			"getLayer",
			"getAll",
			"pick",
			"curry2var",
			"pick",
			"concat",
			"data =",
			"$",
			"data =",
			"fs",
			"console",
			"req.body",
			"test-rpc",
			"log",
			"saveContours",
			"WriteJSON",
			"237",
			"saveContours",
			"wait",
			"SVG",
			"SVG$",
			"svg",
			"typeof req.body, req.body.length, ",
			"int64",
			"get children",
			"children",
			"getLayer",
			"'layers'",
			"EagleNodeMap",
			"new EagleNodeMap",
			" Renderer",
			"cacheFields",
			"readXML",
			"Util\\.",
			"Renderer",
			"new SchematicRenderer",
			"Renderer",
			"SchematicRenderer",
			"terminal",
			"Terminal",
			"terminal",
			"fs\\.",
			"setInter",
			"globalKeys",
			"AutoProps",
			"globalValues",
			"globalKeys",
			"lazyI",
			"ImagePip",
			"#create",
			"ImageRec",
			"moveWindow",
			"namedWin",
			"historyLoad",
			"_history",
			"historyLoad",
			"waitKey",
			"imshow\\(",
			"imsohw",
			"Object.ass",
			"WebSocketClient",
			"WebSocket",
			"resp.headers",
			"\"resp.headers",
			"path",
			"ListProjects",
			"sch.*brd",
			"brd.*sch",
			"brd",
			"ListProjects",
			"AsyncFetch",
			"ListProjects",
			"projectFiles",
			"projectFiles =",
			"Files",
			"Fetch[A-Za-z]*\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			".getLibrary(\\1)",
			"\\1//\\2",
			"uint32",
			"lstat",
			"ordersGetList",
			"getCacheValue",
			"tlsv",
			"\\1",
			"http",
			"fs.",
			",\\n    '-H', ",
			"Size.getOther(",
			"matrix",
			" cv::CV_",
			"CV_RGB(0, 0, 0)",
			"",
			"point",
			"\\\\D",
			"\\\\d",
			"\\.deref",
			"is_alphanumeric_char",
			"is_whitespace_char",
			"length",
			"{ const",
			"{ return",
			"const  {flags}=this;\\nreturn flags",
			"defines",
			"",
			"fs.\\1Sync",
			"define",
			",",
			"file",
			"target_compile_definitions",
			"msg",
			"PmDeviceInfo",
			"export function",
			"libportmidi",
			"\\1//\\2",
			"text",
			"\\1",
			"export function",
			"export &",
			"fs.",
			"array",
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2477,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
							"function_name_status_row": 22,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1690,
									1719
								],
								[
									2002,
									2036
								],
								[
									2076,
									2094
								],
								[
									3634,
									3639
								],
								[
									3681,
									3686
								],
								[
									3830,
									3834
								],
								[
									4177,
									4214
								],
								[
									7286,
									7292
								],
								[
									7348,
									7369
								],
								[
									7415,
									7420
								],
								[
									7468,
									7484
								],
								[
									7616,
									7634
								],
								[
									7727,
									7734
								],
								[
									7802,
									7814
								],
								[
									7890,
									7897
								],
								[
									7904,
									7918
								],
								[
									8071,
									8091
								],
								[
									8129,
									8147
								],
								[
									8201,
									8219
								],
								[
									8309,
									8323
								],
								[
									8393,
									8410
								],
								[
									8444,
									8470
								],
								[
									9452,
									9476
								],
								[
									9765,
									9783
								],
								[
									9874,
									9902
								],
								[
									10259,
									10274
								],
								[
									10437,
									10462
								],
								[
									10489,
									10514
								],
								[
									10571,
									10595
								],
								[
									10700,
									10732
								],
								[
									10949,
									10980
								],
								[
									11108,
									11139
								],
								[
									11477,
									11502
								],
								[
									12217,
									12243
								],
								[
									12972,
									13002
								],
								[
									13564,
									13595
								],
								[
									15392,
									15404
								],
								[
									17139,
									17149
								],
								[
									17432,
									17442
								],
								[
									17607,
									17619
								],
								[
									17656,
									17674
								],
								[
									18204,
									18218
								],
								[
									18434,
									18452
								],
								[
									18531,
									18542
								],
								[
									18590,
									18612
								],
								[
									18666,
									18684
								],
								[
									20057,
									20076
								],
								[
									20253,
									20266
								],
								[
									20433,
									20446
								],
								[
									20515,
									20540
								],
								[
									21772,
									21799
								],
								[
									22299,
									22326
								],
								[
									23340,
									23365
								],
								[
									23495,
									23508
								],
								[
									23971,
									23985
								],
								[
									25383,
									25400
								],
								[
									25530,
									25534
								],
								[
									25552,
									25556
								],
								[
									25673,
									25688
								],
								[
									26584,
									26601
								],
								[
									26679,
									26696
								],
								[
									26772,
									26798
								],
								[
									30284,
									30299
								],
								[
									32207,
									32213
								],
								[
									32242,
									32252
								],
								[
									32280,
									32294
								],
								[
									33860,
									33873
								],
								[
									34068,
									34093
								],
								[
									34265,
									34270
								],
								[
									34564,
									34589
								],
								[
									34767,
									34774
								],
								[
									34805,
									34812
								],
								[
									35063,
									35077
								],
								[
									35166,
									35181
								],
								[
									35335,
									35353
								],
								[
									35698,
									35721
								],
								[
									35766,
									35788
								],
								[
									35832,
									35852
								],
								[
									35925,
									35938
								],
								[
									35968,
									35980
								],
								[
									36015,
									36026
								],
								[
									36191,
									36201
								],
								[
									36268,
									36295
								],
								[
									36722,
									36732
								],
								[
									36820,
									36837
								],
								[
									37686,
									37699
								],
								[
									37876,
									37900
								],
								[
									38415,
									38432
								],
								[
									38680,
									38688
								],
								[
									38712,
									38736
								],
								[
									41061,
									41091
								],
								[
									41139,
									41146
								],
								[
									41167,
									41174
								],
								[
									41271,
									41281
								],
								[
									41425,
									41435
								],
								[
									41777,
									41797
								],
								[
									41810,
									41823
								],
								[
									41841,
									41846
								],
								[
									41871,
									41885
								],
								[
									41922,
									41937
								],
								[
									42331,
									42346
								],
								[
									42534,
									42551
								],
								[
									42866,
									42889
								],
								[
									42954,
									42975
								],
								[
									43158,
									43183
								],
								[
									43886,
									43893
								],
								[
									43946,
									43970
								],
								[
									44235,
									44244
								],
								[
									44332,
									44338
								],
								[
									44391,
									44396
								],
								[
									44451,
									44457
								],
								[
									44583,
									44598
								],
								[
									44666,
									44687
								],
								[
									44838,
									44858
								],
								[
									45029,
									45039
								],
								[
									45432,
									45439
								],
								[
									45579,
									45585
								],
								[
									45618,
									45646
								],
								[
									45735,
									45762
								],
								[
									45840,
									45845
								],
								[
									45954,
									45971
								],
								[
									46143,
									46159
								],
								[
									46499,
									46515
								],
								[
									46981,
									46993
								],
								[
									47209,
									47217
								],
								[
									47775,
									47786
								],
								[
									50514,
									50520
								],
								[
									50559,
									50563
								],
								[
									50604,
									50608
								],
								[
									50641,
									50652
								],
								[
									50686,
									50690
								],
								[
									50730,
									50738
								],
								[
									50843,
									50862
								],
								[
									50954,
									50973
								],
								[
									51035,
									51053
								],
								[
									51145,
									51168
								],
								[
									51569,
									51598
								],
								[
									51657,
									51688
								],
								[
									51845,
									51870
								],
								[
									51979,
									52027
								],
								[
									52315,
									52341
								],
								[
									52570,
									52574
								]
							],
							"symlist":
							[
								"  define(obj, ...args)",
								"  once(fn, thisArg, memoFn)",
								"\tfunction(...args)",
								"  fd =>",
								"() =>",
								"REPL",
								"  constructor(name, show_banner = true)",
								"\t() =>",
								"  addCleanupHandler(fn)",
								"() =>",
								"  .cleanup = () =>",
								"  exit(exitCode = 0)",
								"  abort()",
								"  acceptLine()",
								"  alert()",
								"  backwardChar()",
								"  backwardDeleteChar()",
								"  backwardKillLine()",
								"  backwardKillWord()",
								"  backwardWord()",
								"  beginningOfLine()",
								"  bigfloatToString(a, radix)",
								"  bigintToString(a, radix)",
								"  cmdReadlineStart()",
								"  cmdStart(show_banner = true)",
								"  colorizeJs(str)",
								"  pushState(c)",
								"  lastState(c)",
								"  popState(c)",
								"  parseBlockComment()",
								"  parseLineComment()",
								"  parseString(delim)",
								"  parseRegex()",
								"  parseNumber()",
								"  parseIdentifier()",
								"  setStyle(from, to)",
								"  completion()",
								"  controlC()",
								"  controlD()",
								"  deleteChar()",
								"  deleteCharDir(dir)",
								"  downcaseWord()",
								"  dupstr(str, count)",
								"  endOfLine()",
								"  readlineRemovePrompt()",
								"  evalAndPrint(expr)",
								"  extractDirective(a)",
								"  forwardChar()",
								"  forwardWord()",
								"  getCompletions(line, pos)",
								"  symcmp(a, b)",
								"  getContextObject(line, pos)",
								"  getContextWord(line, pos)",
								"  handleByte(c)",
								"  handleChar(c1)",
								"  handleMouse(keys)",
								"  p =>",
								"  p =>",
								"  handleCmd(expr)",
								"  hasDirective(cmd)",
								"  getDirective(cmd)",
								"  handleDirective(cmd, expr)",
								"  handleKey(keys)",
								"  help()",
								"  sel = n =>",
								"  putline = s =>",
								"  historyFile()",
								"  historyLoad(filename, fs)",
								"() =>",
								"  historySave(filename, fs)",
								"  line =>",
								"  line =>",
								"  historyClear()",
								"  historyAdd(str)",
								"  historySearch(dir)",
								"  historySearchBackward()",
								"  historySearchForward()",
								"  set history(entries)",
								"  get history()",
								"  historyPos()",
								"  insert(str)",
								"  killLine()",
								"  killRegion(start, end, dir)",
								"  killWord()",
								"  moveCursor(delta)",
								"  nextHistory()",
								"  numberToString(a, radix)",
								"  previousHistory()",
								"  print(a)",
								"  printRec(a)",
								"  printStatus(fn, prompt = true)",
								"\targ =>",
								"\targ =>",
								"  fn = () =>",
								"  fn = () =>",
								"  printFunction(logFn)",
								"\t(...args) =>",
								"() =>",
								"  quotedInsert()",
								"  reverseSearch()",
								"  forwardSearch()",
								"  searchCb(pattern)",
								"  readlineHandleCmd(expr)",
								"  readlinePrintPrompt()",
								"  readlineStart(defstr, cb)",
								"  reset()",
								"  run(banner = true)",
								"  runSync()",
								"\t() =>",
								"() =>",
								"  stop()",
								"  sigintHandler()",
								"  skipWordBackward(pos)",
								"  skipWordForward(pos)",
								"  termInit()",
								"\targ =>",
								"\t() =>",
								"  mouseTracking(enable = true)",
								"  setupMouseTracking(fs = fs)",
								"() =>",
								"  termReadHandler()",
								"  transposeChars()",
								"  transposeWords()",
								"  upcaseWord()",
								"  update()",
								"([i, c]) =>",
								"  yank()",
								"REPL",
								"REPL",
								"\tfile =>",
								"  m =>",
								"  error =>",
								"  isAlpha(c)",
								"  isDigit(c)",
								"  isWord(c)",
								"  ucsLength(str)",
								"  rotateLeft(array, n)",
								"  isTrailingSurrogate(c)",
								"  isBalanced(a, b)",
								"  printColorText(str, start, style_names)",
								"  printCsi(n, code)",
								"REPL"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658870218.81,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13159,
						"regions":
						{
						},
						"selection":
						[
							[
								9889,
								9889
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 286,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658873307.77,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6289.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "upload.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 527,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								328
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 8,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658700958.26,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "list.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 442,
						"regions":
						{
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658862870.66,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 87.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/eagle/svgRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15643,
						"regions":
						{
						},
						"selection":
						[
							[
								1796,
								1835
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 42,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658872204.05,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96864,
						"regions":
						{
						},
						"selection":
						[
							[
								194,
								267
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 3,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658871868.81,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/eagle/schematicRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6662,
						"regions":
						{
						},
						"selection":
						[
							[
								6408,
								6408
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 201,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658872201.8,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3099.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/functional.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29193,
						"regions":
						{
						},
						"selection":
						[
							[
								27175,
								27175
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1147,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875657.01,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21546.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/repeater/react-hooks.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7064,
						"regions":
						{
						},
						"selection":
						[
							[
								6900,
								6908
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 263,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658874172.83,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4574.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/dom/preactComponent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10072,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658874174.85,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/eagle/renderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1227,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658872202.76,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/eagle/node.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16640,
						"regions":
						{
						},
						"selection":
						[
							[
								1375,
								1375
							],
							[
								1419,
								1419
							],
							[
								1422,
								1454
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 41,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658871227.29,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 113.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/eagle/element.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34094,
						"regions":
						{
						},
						"selection":
						[
							[
								10830,
								10830
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 276,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875655.71,
							"tabs_extra_last_activated_sheet_index": 11,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4695.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/eagle/components/instance.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1649,
						"regions":
						{
						},
						"selection":
						[
							[
								1216,
								1216
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 36,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875669.9,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/eagle/components/symbol.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 792,
						"regions":
						{
						},
						"selection":
						[
							[
								287,
								287
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875656.09,
							"tabs_extra_last_activated_sheet_index": 13,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27733,
						"regions":
						{
						},
						"selection":
						[
							[
								1213,
								1217
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875674.92,
							"tabs_extra_last_activated_sheet_index": 14,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "quickjs/qjs-modules/lib/repl.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52637,
						"regions":
						{
							"col_000080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2583,
										2591
									]
								],
								"scope": "col_000080FF"
							},
							"col_000080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_000080FF_circle.png",
								"regions":
								[
									[
										2574,
										2574
									]
								],
								"scope": "col_gutter"
							},
							"col_0000DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2807,
										2817
									]
								],
								"scope": "col_0000DDFF"
							},
							"col_0000DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000DDFF_circle.png",
								"regions":
								[
									[
										2791,
										2791
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2576,
										2580
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										2574,
										2574
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2533,
										2538
									],
									[
										2541,
										2549
									],
									[
										3170,
										3175
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										2531,
										2531
									],
									[
										3159,
										3159
									]
								],
								"scope": "col_gutter"
							},
							"col_008080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2626,
										2634
									]
								],
								"scope": "col_008080FF"
							},
							"col_008080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008080FF_circle.png",
								"regions":
								[
									[
										2617,
										2617
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2747,
										2757
									]
								],
								"scope": "col_00DD00FF"
							},
							"col_00DD00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD00FF_circle.png",
								"regions":
								[
									[
										2730,
										2730
									]
								],
								"scope": "col_gutter"
							},
							"col_00DDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2868,
										2878
									]
								],
								"scope": "col_00DDDDFF"
							},
							"col_00DDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DDDDFF_circle.png",
								"regions":
								[
									[
										2852,
										2852
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2619,
										2623
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										2617,
										2617
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2493,
										2498
									],
									[
										2501,
										2509
									],
									[
										2667,
										2677
									],
									[
										2689,
										2699
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										2491,
										2491
									],
									[
										2658,
										2658
									],
									[
										2680,
										2680
									]
								],
								"scope": "col_gutter"
							},
							"col_800000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2520,
										2528
									]
								],
								"scope": "col_800000FF"
							},
							"col_800000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800000FF_circle.png",
								"regions":
								[
									[
										2512,
										2512
									]
								],
								"scope": "col_gutter"
							},
							"col_800080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2606,
										2614
									]
								],
								"scope": "col_800080FF"
							},
							"col_800080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_800080FF_circle.png",
								"regions":
								[
									[
										2594,
										2594
									]
								],
								"scope": "col_gutter"
							},
							"col_808000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2563,
										2571
									]
								],
								"scope": "col_808000FF"
							},
							"col_808000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808000FF_circle.png",
								"regions":
								[
									[
										2552,
										2552
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2660,
										2664
									],
									[
										2682,
										2686
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										2658,
										2658
									],
									[
										2680,
										2680
									]
								],
								"scope": "col_gutter"
							},
							"col_C0C0C0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2647,
										2655
									]
								],
								"scope": "col_C0C0C0FF"
							},
							"col_C0C0C0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_C0C0C0FF_circle.png",
								"regions":
								[
									[
										2637,
										2637
									]
								],
								"scope": "col_gutter"
							},
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2717,
										2727
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										2702,
										2702
									]
								],
								"scope": "col_gutter"
							},
							"col_DD00DDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2839,
										2849
									]
								],
								"scope": "col_DD00DDFF"
							},
							"col_DD00DDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD00DDFF_circle.png",
								"regions":
								[
									[
										2820,
										2820
									]
								],
								"scope": "col_gutter"
							},
							"col_DD8800FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2778,
										2788
									]
								],
								"scope": "col_DD8800FF"
							},
							"col_DD8800FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD8800FF_circle.png",
								"regions":
								[
									[
										2760,
										2760
									]
								],
								"scope": "col_gutter"
							},
							"col_DDDDDDFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2898,
										2908
									]
								],
								"scope": "col_DDDDDDFF"
							},
							"col_DDDDDDFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DDDDDDFF_circle.png",
								"regions":
								[
									[
										2881,
										2881
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2514,
										2517
									],
									[
										3295,
										3298
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										2512,
										2512
									],
									[
										3285,
										3285
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2596,
										2603
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										2594,
										2594
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2554,
										2560
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										2552,
										2552
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										2639,
										2644
									],
									[
										3312,
										3317
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										2637,
										2637
									],
									[
										3301,
										3301
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								41665,
								41665
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1554,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875789.86,
							"tabs_extra_last_activated_sheet_index": 15,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 28958.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22735,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										168,
										179
									],
									[
										307,
										318
									],
									[
										491,
										502
									],
									[
										824,
										835
									],
									[
										1115,
										1126
									],
									[
										1435,
										1445
									],
									[
										1694,
										1704
									],
									[
										2011,
										2021
									],
									[
										2257,
										2267
									],
									[
										2396,
										2406
									],
									[
										2478,
										2488
									],
									[
										2779,
										2789
									],
									[
										2850,
										2860
									],
									[
										3253,
										3263
									],
									[
										3422,
										3432
									],
									[
										3469,
										3479
									],
									[
										3504,
										3514
									],
									[
										3669,
										3679
									],
									[
										3952,
										3962
									],
									[
										4176,
										4186
									],
									[
										4403,
										4413
									],
									[
										4592,
										4602
									],
									[
										4906,
										4922
									],
									[
										5097,
										5113
									],
									[
										5618,
										5637
									],
									[
										5834,
										5853
									],
									[
										6141,
										6160
									],
									[
										6505,
										6524
									],
									[
										6655,
										6674
									],
									[
										6900,
										6919
									],
									[
										7281,
										7296
									],
									[
										9541,
										9556
									],
									[
										10480,
										10495
									],
									[
										10701,
										10716
									],
									[
										10891,
										10906
									],
									[
										11276,
										11291
									],
									[
										11569,
										11584
									],
									[
										11851,
										11866
									],
									[
										12166,
										12181
									],
									[
										12276,
										12291
									],
									[
										12636,
										12646
									],
									[
										12659,
										12669
									],
									[
										12952,
										12962
									],
									[
										12995,
										13005
									],
									[
										13210,
										13220
									],
									[
										13235,
										13245
									],
									[
										13284,
										13294
									],
									[
										13318,
										13328
									],
									[
										13609,
										13619
									],
									[
										13880,
										13890
									],
									[
										14178,
										14188
									],
									[
										14480,
										14490
									],
									[
										14984,
										14994
									],
									[
										15454,
										15465
									],
									[
										15477,
										15488
									],
									[
										15770,
										15781
									],
									[
										15813,
										15824
									],
									[
										15995,
										16006
									],
									[
										16293,
										16304
									],
									[
										16595,
										16606
									],
									[
										17099,
										17110
									],
									[
										17577,
										17593
									],
									[
										17600,
										17616
									],
									[
										17893,
										17909
									],
									[
										17936,
										17952
									],
									[
										18151,
										18173
									],
									[
										18176,
										18195
									],
									[
										18225,
										18247
									],
									[
										18259,
										18278
									],
									[
										18550,
										18569
									],
									[
										18821,
										18851
									],
									[
										19119,
										19149
									],
									[
										19421,
										19461
									],
									[
										19925,
										19944
									],
									[
										20386,
										20402
									],
									[
										20429,
										20445
									],
									[
										20644,
										20666
									],
									[
										20669,
										20688
									],
									[
										20718,
										20740
									],
									[
										20752,
										20771
									],
									[
										21043,
										21062
									],
									[
										21314,
										21344
									],
									[
										21613,
										21643
									],
									[
										21916,
										21956
									],
									[
										22420,
										22439
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								22652,
								22652
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 467,
							"line_numbers": false,
							"output_tag": 11,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1658875376.81,
							"tabs_extra_last_activated_sheet_index": 14,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9709.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/eagle/document.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12395,
						"regions":
						{
						},
						"selection":
						[
							[
								3653,
								3653
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 120,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875377.94,
							"tabs_extra_last_activated_sheet_index": 15,
							"tabs_extra_moving":
							[
								4,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1997.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/eagle/project.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9861,
						"regions":
						{
						},
						"selection":
						[
							[
								7589,
								7599
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 268,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658875375.4,
							"tabs_extra_last_activated_sheet_index": 16,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4656.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "lib/eagle/nodeMap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								273,
								275
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658871224.88,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "lib/eagle/nodeList.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5226,
						"regions":
						{
						},
						"selection":
						[
							[
								948,
								948
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1658871583.33,
							"tabs_extra_last_activated_sheet_index": 12,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tabs_extra_last_activated": 1658871227.64,
							"tabs_extra_last_activated_sheet_index": 13
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139700989367200)":
	{
		"height": 0.0
	},
	"output.Protocol(139713492737424)":
	{
		"height": 0.0
	},
	"output.Protocol(140020110213280)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752054832)":
	{
		"height": 0.0
	},
	"output.Protocol(140156680251040)":
	{
		"height": 0.0
	},
	"output.Protocol(140190209186352)":
	{
		"height": 0.0
	},
	"output.Protocol(140264240155856)":
	{
		"height": 0.0
	},
	"output.Protocol(140490298408144)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873410144)":
	{
		"height": 0.0
	},
	"output.Protocol(140627243657680)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"repl",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"element",
				"lib/eagle/element.js"
			],
			[
				"docum",
				"lib/eagle/document.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"react-hook",
				"lib/repeater/react-hooks.js"
			],
			[
				"element.js",
				"lib/eagle/element.js"
			],
			[
				"instance",
				"lib/eagle/components/instance.js"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"drawing",
				"lib/eagle/components/drawing.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"schema",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"documen",
				"lib/eagle/document.js"
			],
			[
				"docu",
				"lib/eagle/document.js"
			],
			[
				"schematic",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"svgRend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"pathMapper",
				"lib/json/pathMapper.js"
			],
			[
				"functional",
				"lib/functional.js"
			],
			[
				"svgrend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"schemat",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"list.html",
				"list.html"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"",
				".cmake-format"
			],
			[
				"imagepip",
				"imagePipeline.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"test-ima",
				"test-image.js"
			],
			[
				"jsutils.h",
				"quickjs/qjs-net/jsutils.h"
			],
			[
				"jsut",
				"quickjs/qjs-net/jsutils.c"
			],
			[
				"cv-she",
				"cv-shell.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"eagle",
				"test-eagle.js"
			],
			[
				"termina",
				"terminal.js"
			],
			[
				"cvPipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"gui.js",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"make-bi",
				"make-bitmap.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"virtfs",
				"virtfs.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"quickjs-deep",
				"quickjs/qjs-modules/quickjs-deep.c"
			],
			[
				"eagle-ser",
				"eagle-server.js"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"index.html",
				"index.html"
			],
			[
				"css",
				"lib/grammars/css3.g4"
			],
			[
				"xpath",
				"lib/grammars/xpath.g4"
			],
			[
				"console",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"libs.js",
				"libs.js"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"disco",
				"discogs.js"
			],
			[
				"spawn.",
				"lib/spawn.js"
			],
			[
				"helpers",
				"io-helpers.js.orig"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"package.j",
				"package.json"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-imrea",
				"test-imread.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"cvpipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"events.js",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"test-vi",
				"test-video.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"size.js",
				"lib/geom/size.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"test-wor",
				"test-worker.js"
			],
			[
				"ws-work",
				"ws-worker.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"cvVi",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"ideoSou",
				"videoSource.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"dia",
				"diagram.js"
			],
			[
				"diagra",
				"diagram.js"
			],
			[
				"diag",
				"diagram.js"
			],
			[
				"opencv-vi",
				"opencv-video.c"
			],
			[
				"opencv-vide",
				"opencv-video.c"
			],
			[
				"simplest",
				"simplest_ffmpeg_audio_decoder.cpp"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"js",
				"jack-session-client.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"diagram",
				"diagram.js"
			],
			[
				"point.hpp",
				"qjs-opencv/js_point.hpp"
			],
			[
				"jsbind",
				"qjs-opencv/jsbindings.hpp"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"help",
				"time-helpers.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"image",
				"imagePipeline.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"minnet-http",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"minnet-server",
				"quickjs/qjs-net/minnet-server.c"
			],
			[
				"minnet.c",
				"quickjs/qjs-net/minnet.c"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"time-help",
				"time-helpers.js"
			],
			[
				"io-helpers",
				"io-helpers.js"
			],
			[
				"test-bjson",
				"test-bjson.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"commands.j",
				"commands.js"
			],
			[
				"render",
				"lib/eagle/renderer.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"diff.js",
				"lib/json/diff.js"
			],
			[
				"circuit",
				"lib/eda/circuitjs.js"
			],
			[
				"-shell.js",
				"cv-shell.js"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"queue.h",
				"quickjs/qjs-modules/queue.h"
			],
			[
				"queue.c",
				"quickjs/qjs-modules/queue.c"
			],
			[
				"char-utils",
				"quickjs/qjs-modules/char-utils.h"
			],
			[
				"quickjs-misc.",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"predicate.c",
				"quickjs/qjs-modules/predicate.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 272.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
