{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "() =>\n  res =>\n() =>\n  r =>\n  r =>\n  entries()\nGetProject = arg =>\n  p =>\n  add = (arr, ...items) =>\n  useSlot = (arr, i) =>\n() =>\n  v =>\n  trklGetSet = (get, set) => value =>\nMouseEvents = h =>\n() =>\n(parent, delegate) =>\n  append_to(elem, p)\nDrawSVG(...args)\n  append_to(elem, p)\n  adjustViewBox(e)\n  calcViewBox(box)\n  setViewBox(svgOwner, box)\nElementToXML = (e, predicate) =>\n  (v, k) =>\n  (v, k) =>\n  (v, k) =>\n  readFile(filename)\n  writeFile(filename, data, overwrite = true)\n  exists(filename)\n  realpath(filename)\nLoadFile(file)\nSaveFile(filename, data, contentType)\n  s =>\n() =>\nSaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])\n  predicate = element =>\nLoadSVG(filename)\nLoadImage(filename)\n() =>\nRenderComponent(component)\nModifyColors = fn => e =>\nFindLayer = name_or_id =>\n  n =>\n  l =>\n(id = '#geom') =>\n(props = {}) =>\n  maxZIndex = () =>\n  e =>\n  z =>\n  z =>\n() =>\n  randomColor = () =>\nDrawArc(start, end, angle)\n  props =>\n  p =>\n  a =>\n  m =>\n  hex =>\n  p =>\n  p =>\n  p =>\n({ x, y }) =>\n  a =>\n({ x, y }, i) =>\n  e =>\n(l, i) =>\n(p, i) =>\n(p, i) =>\n  add = (level, item) =>\nRecurseBinaryNode(node, parent = null, depth = 0)\n(nodes, i, level) =>\n  fx = j =>\n(node, j) =>\n  item =>\nDrawNode(x, y, node)\nDrawEdge(item, parent)\nGetPaths(query, parent = project.svgElement)\n  (a, e) =>\nPathToPolylines(path, step = 0.01)\n  p =>\n  poly =>\n  poly =>\n  (p, d, set, stop) =>\nPathToPolyline(path, step = 0.01)\n  (p, d, set, stop) =>\nPathsToPolylines(paths, step = 0.01)\nOutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)\n  .toPolylines = function()\n  p =>\n({ X, Y }) =>\nOutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)\n(a, p) =>\nClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)\n  add = (p, clip = false) =>\n  .toPolylines = function()\n  p =>\n({ X, Y }) =>\n  saveItemStates(itemList, get = item => Util.is.\n(item.\n))\n  item =>\n  restoreItemStates( itemStates, /*prettier-ignore */ set = (item, value) => item.\n(value ? 'yes' : 'no') )\nEagleMaps(project)\n  transformPath = p =>\n  e =>\n  dom2eagle = node =>\n  eagle2dom = elem =>\n  path2dom = p =>\n(key, value) =>\n(key, value) =>\nPackageNames(doc = project.doc)\n  e =>\n([e, b]) =>\n([e, w, h, m, v]) =>\n({ index, ...match }) =>\n  ({ s, v, indexes }, match, i) =>\n([token, index]) =>\n([token, index]) =>\nNextDocument(n = 1)\n  (idx, i) =>\n  (idx, i) =>\nLoadDocument(project, parentElem)\n  err =>\n() =>\n  ent =>\n() =>\n  ent =>\n  renamePackages()\n  a =>\n  value =>\n  layer =>\n() =>\n  layer =>\n() =>\n  fn = function(v)\n() =>\n  .makeGroup = function({ transform, ...props } = {})\n  id =>\n() =>\n  xx()\n  () =>\n(transform)\n  (tag, attr, children = []) =>\n  value =>\n() =>\nRect\nChooseDocument(project, i)\nGenerateVoronoi = () =>\nRect\n  p =>\n  e =>\n({ lSite, rSite, ...edge }) =>\n  e =>\n({ lSite, rSite, ...edge }) =>\n  e =>\n({ va, vb, ...edge }) =>\n  v =>\n  add = (arr, ...items) =>\n  l =>\n  t =>\n  l =>\n  t =>\n  p =>\n  (acc, { site, halfedges }) =>\n({ site }) =>\nPackageChildren(element, layer)\n(c, i) =>\n([i, p]) =>\n([i, e]) =>\nElementChildren(layer = 'tPlace', rfn = ent => \n(ent))\n([name, element]) =>\nElementGeometries(layer = 'tPlace', rfn = ent => \n(ent))\n  ent =>\n([name, children]) =>\n([i, e]) =>\n([name, lines]) =>\n  pts =>\n([name, lines, polygons]) =>\nNewPath(path)\nMakeFitAction = index =>\n  event =>\nZoomFactor(val = config.\n)\nZoomLog(factor)\nAdjustZoom(l = config.\n)\nCreateGrblSocket = (port = 'tnt1') =>\nHandleMessage(msg)\n  pointStr =>\n  socketFn = () =>\n  .send = (...args) =>\nAuthorizationDialog = ({ onAuth, ...props }) =>\n  onSubmit: () =>\n  onInput: e =>\n  onInput: e =>\n  onClick: e =>\n  arg =>\n  .onload = () =>\n  response =>\n  e =>\n  v =>\nTestArc: () =>\n() =>\n(push, stop) =>\n() =>\n(push, stop) =>\n  target =>\n  (key, modifiers = 0) =>\n  .focusSearch = state =>\n  children: () =>\n  geometries: () =>\n  value =>\n() =>\n  testComponent = props =>\nFile(obj, i)\nFile\nFile.prototype.toString = function()\n(a, b) =>\n(obj, i) =>\n(acc, file) =>\n  i =>\n  value =>\n  value =>\n  value =>\n  value =>\n  value =>\n  value =>\n  updateIfChanged = (trkl, newValue, callback) =>\n  (elem, i) =>\n  changeInput = e =>\n  p =>\n  arg =>\nConsumer = props =>\n()\n  log(type, time, msg)\nLogger = props =>\n()\n([type, d, t, m], i) =>\nDumper = props =>\n  value =>\n([k, v], i) =>\nCommander = ({ onCommand, ...props }) =>\n  handler = e =>\n  toggle = trkl =>\nLayer = ({ title, name, label, i, color, element, className, ...props }) =>\n  setVisible = value =>\n  e =>\n  e =>\n  l =>\n  l =>\n  (item, value) =>\n  item =>\n  l =>\n([l, state]) =>\n  e =>\n  onMouseMove: e =>\n  onMouseUp: e =>\nDocumentList\n  constructor()\n(push, stop) =>\n  add(name, component)\n  addEntry([name, component])\n  remove(name)\n  update()\n  fn: e =>\n  fn: () =>\n  open =>\n  props =>\n  props =>\n  e =>\n  i =>\n  i =>\n({ coord }) =>\n  side =>\n  create: (project, props = {}) =>\n  a =>\n  e =>\n  e =>\n  name =>\n  e =>\n  makeLayerName(name, side)\n  fn: () =>\n  onChange(event)\n  props =>\n  props =>\n  props =>\n(e, p, i) =>\n  makeSortCompare: key =>\n  function(a, b)\n  function(a, b)\n  onCommand: cmdStr =>\n  handleChange: e =>\n  event =>\n  e =>\nMoveEvent(event, prevEvent)\nWalkUp(e)\n  e =>\n  z =>\n  p =>\n  e =>\n  e =>\n  e =>\n  v =>\n  l =>\n  e =>\n  () =>\n  (e, depth) =>\n  classes =>\n  e =>\n  e =>\n  (a, b) =>\n  (a, b) =>\nNode\n  e =>\n  (p, d, set, stop) =>\n  e =>\n  e =>\nTouchEvent(event)\n  e =>\n(p, i) =>\n(a, b) =>\n  size =>\n  border =>\n  r =>\n  mod(n, m)\n() =>\n  (pos, last, first) =>\n  cancel()\n  .oncontextmenu = function(e)\n  .processEvents = function eventLoop()\n  event =>\n  e =>\n  onRuntimeInitialized: () =>\n  print: txt =>",
			"settings":
			{
				"buffer_size": 5585,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					441,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80934,
								80948
							],
							[
								81077,
								81091
							],
							[
								81233,
								81247
							],
							[
								82235,
								82253
							],
							[
								82451,
								82474
							],
							[
								82516,
								82531
							],
							[
								82887,
								82902
							],
							[
								83315,
								83335
							],
							[
								83817,
								83835
							],
							[
								84551,
								84560
							],
							[
								84603,
								84607
							],
							[
								84819,
								84857
							],
							[
								85032,
								85055
							],
							[
								85199,
								85204
							],
							[
								85243,
								85253
							],
							[
								85417,
								85421
							],
							[
								85568,
								85572
							],
							[
								85611,
								85616
							],
							[
								86021,
								86025
							],
							[
								86064,
								86078
							],
							[
								86082,
								86096
							],
							[
								86103,
								86107
							],
							[
								86128,
								86143
							],
							[
								86199,
								86224
							],
							[
								86356,
								86367
							],
							[
								86417,
								86422
							],
							[
								86482,
								86487
							],
							[
								86942,
								86952
							],
							[
								87066,
								87083
							],
							[
								87096,
								87100
							],
							[
								87290,
								87294
							],
							[
								87462,
								87483
							],
							[
								88629,
								88633
							],
							[
								88739,
								88743
							],
							[
								89037,
								89065
							],
							[
								89516,
								89520
							],
							[
								89976,
								89985
							],
							[
								90117,
								90126
							],
							[
								90230,
								90238
							],
							[
								90744,
								90753
							],
							[
								90902,
								90906
							],
							[
								90971,
								90997
							],
							[
								91642,
								91647
							],
							[
								91954,
								91985
							],
							[
								93022,
								93043
							],
							[
								93248,
								93276
							],
							[
								93643,
								93686
							],
							[
								95016,
								95025
							],
							[
								95905,
								95909
							],
							[
								96649,
								96676
							],
							[
								96799,
								96812
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAANEVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					442,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80947,
								80961
							],
							[
								81090,
								81104
							],
							[
								81246,
								81260
							],
							[
								82248,
								82266
							],
							[
								82464,
								82487
							],
							[
								82529,
								82544
							],
							[
								82900,
								82915
							],
							[
								83328,
								83348
							],
							[
								83830,
								83848
							],
							[
								84564,
								84573
							],
							[
								84616,
								84620
							],
							[
								84832,
								84870
							],
							[
								85045,
								85068
							],
							[
								85212,
								85217
							],
							[
								85256,
								85266
							],
							[
								85430,
								85434
							],
							[
								85581,
								85585
							],
							[
								85624,
								85629
							],
							[
								86034,
								86038
							],
							[
								86077,
								86091
							],
							[
								86095,
								86109
							],
							[
								86116,
								86120
							],
							[
								86141,
								86156
							],
							[
								86212,
								86237
							],
							[
								86369,
								86380
							],
							[
								86430,
								86435
							],
							[
								86495,
								86500
							],
							[
								86955,
								86965
							],
							[
								87079,
								87096
							],
							[
								87109,
								87113
							],
							[
								87303,
								87307
							],
							[
								87475,
								87496
							],
							[
								88642,
								88646
							],
							[
								88752,
								88756
							],
							[
								89050,
								89078
							],
							[
								89529,
								89533
							],
							[
								89989,
								89998
							],
							[
								90130,
								90139
							],
							[
								90243,
								90251
							],
							[
								90757,
								90766
							],
							[
								90915,
								90919
							],
							[
								90984,
								91010
							],
							[
								91655,
								91660
							],
							[
								91967,
								91998
							],
							[
								93035,
								93056
							],
							[
								93261,
								93289
							],
							[
								93656,
								93699
							],
							[
								95029,
								95038
							],
							[
								95918,
								95922
							],
							[
								96662,
								96689
							],
							[
								96812,
								96825
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAANEVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					443,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/components.js",
						"symkeys":
						[
							[
								956,
								1015
							],
							[
								1252,
								1260
							],
							[
								1434,
								1454
							],
							[
								1488,
								1506
							],
							[
								1538,
								1558
							],
							[
								1590,
								1610
							],
							[
								1710,
								1730
							],
							[
								2398,
								2429
							],
							[
								2535,
								2589
							],
							[
								2774,
								2792
							],
							[
								3308,
								3331
							],
							[
								3750,
								3765
							],
							[
								4239,
								4312
							],
							[
								4442,
								4462
							],
							[
								4586,
								4603
							],
							[
								5275,
								5343
							],
							[
								5433,
								5441
							],
							[
								5655,
								5671
							],
							[
								5766,
								5783
							],
							[
								6018,
								6042
							],
							[
								6766,
								6848
							],
							[
								7226,
								7254
							],
							[
								7307,
								7312
							],
							[
								7372,
								7378
							],
							[
								7860,
								7888
							],
							[
								7929,
								7934
							],
							[
								7994,
								8000
							],
							[
								8474,
								8542
							],
							[
								8855,
								8913
							],
							[
								8984,
								8992
							],
							[
								9071,
								9154
							],
							[
								9445,
								9505
							],
							[
								9587,
								9635
							],
							[
								10461,
								10485
							],
							[
								12681,
								12701
							],
							[
								14867,
								14889
							],
							[
								15290,
								15310
							],
							[
								18695,
								18703
							],
							[
								18823,
								18905
							],
							[
								19034,
								19042
							],
							[
								19335,
								19350
							],
							[
								19479,
								19499
							],
							[
								19954,
								19961
							],
							[
								20018,
								20032
							],
							[
								21178,
								21185
							],
							[
								21599,
								21614
							],
							[
								21686,
								21702
							],
							[
								21709,
								21723
							],
							[
								22058,
								22090
							],
							[
								22327,
								22335
							],
							[
								22367,
								22384
							],
							[
								22405,
								22412
							],
							[
								22435,
								22440
							],
							[
								22536,
								22540
							],
							[
								22686,
								22690
							],
							[
								22750,
								22754
							],
							[
								22778,
								22782
							],
							[
								22839,
								22843
							],
							[
								22967,
								22971
							],
							[
								22994,
								22998
							],
							[
								23017,
								23021
							],
							[
								23100,
								23114
							],
							[
								23133,
								23137
							],
							[
								23147,
								23152
							],
							[
								23183,
								23188
							],
							[
								23233,
								23246
							],
							[
								23264,
								23268
							],
							[
								23434,
								23447
							],
							[
								23469,
								23484
							],
							[
								24434,
								24474
							],
							[
								24800,
								24818
							],
							[
								24862,
								24880
							],
							[
								25464,
								25487
							],
							[
								25541,
								25549
							],
							[
								25590,
								25598
							],
							[
								26177,
								26195
							],
							[
								26349,
								26371
							],
							[
								26436,
								26482
							],
							[
								26580,
								26662
							],
							[
								29533,
								29552
							],
							[
								29660,
								29674
							],
							[
								30998,
								31032
							],
							[
								31256,
								31261
							],
							[
								31748,
								31777
							],
							[
								32099,
								32125
							],
							[
								32479,
								32503
							],
							[
								32809,
								32852
							],
							[
								32956,
								32986
							],
							[
								33197,
								33224
							],
							[
								34560,
								34589
							],
							[
								34773,
								34800
							],
							[
								35048,
								35094
							],
							[
								35978,
								36036
							],
							[
								36157,
								36165
							],
							[
								36199,
								36207
							],
							[
								37110,
								37131
							],
							[
								38012,
								38020
							],
							[
								38112,
								38122
							],
							[
								38292,
								38304
							],
							[
								39229,
								39255
							],
							[
								39569,
								39646
							],
							[
								39839,
								39847
							],
							[
								39949,
								39957
							],
							[
								40402,
								40461
							],
							[
								40718,
								40739
							],
							[
								40779,
								40801
							],
							[
								40924,
								40935
							],
							[
								41366,
								41403
							],
							[
								41473,
								41491
							]
						],
						"symlist":
						[
							"Ruler = ({ handleChange, style = {}, class: className }) =>",
							"value =>",
							"pressingDown = () =>",
							"pressingUp = () =>",
							"stopPressing = () =>",
							"onChanged = value =>",
							"onChanged = value =>",
							"ClickHandler = callback => e =>",
							"ToggleHandler = (callback, getState, setState) => e =>",
							"MouseEvents = h =>",
							" (e, state) =>",
							" () =>",
							"Container = ({ className = 'panel', tag = 'div', children, ...props }) =>",
							"Button = allProps =>",
							"onPush = state =>",
							"Toggle = ({ className, images, fn, state, style = {}, ...props }) =>",
							"value =>",
							"onChange = () =>",
							"(component, i) =>",
							" function onPush(event)",
							"FloatingPanel = ({ children, className, onSize, onHide, style = {}, ...props }) =>",
							" function updateSize(value)",
							"() =>",
							" () =>",
							" function updateHide(value)",
							"() =>",
							" () =>",
							"Label = ({ className, text, title, tooltip, children, ...props }) =>",
							"DynamicLabel = ({ caption, title, children, ...props }) =>",
							"value =>",
							"Item = ({ className = 'item', title, tooltip, label, icon, children, ...props }) =>",
							"Icon = ({ className = 'icon', caption, image, ...props }) =>",
							"Progress = ({ className, percent, ...props }) =>",
							"SchematicIcon = props =>",
							"BoardIcon = props =>",
							"LibraryIcon = props =>",
							"GCodeIcon = props =>",
							"value =>",
							"ShowHide = ({ initialState, component, className, children, signal, ...props }) =>",
							"value =>",
							".ref = input =>",
							".onSubmit = event =>",
							"data =>",
							"async state =>",
							"line =>",
							"tooltip = () =>",
							"onChange = () =>",
							"onPush = () =>",
							"pushHandler = i => (e, state) =>",
							"value =>",
							"list2re = list =>",
							"part =>",
							"() =>",
							"r =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"pred = name =>",
							"c =>",
							"re =>",
							"re =>",
							"({ name }) =>",
							"i =>",
							"({ name }) =>",
							"(value, key) =>",
							"ToolTipFn = ({ name, data, ...item }) =>",
							"([name, value]) =>",
							"([name, value]) =>",
							"sortCompare = (a, b) =>",
							"value =>",
							"value =>",
							"itemClass: item =>",
							"onChange: (...args) =>",
							"Panel = ({ className, children, ...props }) =>",
							"WrapInAspectBox = (enable, { width = '100%', aspect = 1, className }, children) =>",
							"onChange = value =>",
							"onInput = e =>",
							"Canvas = ({ onInit, ...props }) =>",
							"() =>",
							" function handleMouseMove(e)",
							" function startDrawing(e)",
							" function stopDrawing()",
							"ColorWheel = ({ radius = 50, ...props }) =>",
							"onInit: (ctx, canvas, size) =>",
							" function drawCircle()",
							" function xy2polar(x, y)",
							" function rad2deg(rad)",
							" function hsv2rgb(hue, saturation, value)",
							"CrossHair = ({ position, show, radius = 20, ...props }) =>",
							"value =>",
							"value =>",
							"MoveCursor = props =>",
							"value =>",
							"element =>",
							"(e, prev) =>",
							" function onMouseWheel(e)",
							"Fence = ({ children, style = {}, sizeListener, aspectListener, ...props }) =>",
							"value =>",
							"value =>",
							"Zoomable = ({ type = 'div', style, children, ...props }) =>",
							" function onPan(arg)",
							" function onZoom(arg)",
							"ref = el =>",
							"DisplayList = ({ data, ...props }) =>",
							"async function* ()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAAB8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80947,
								80961
							],
							[
								81090,
								81104
							],
							[
								81246,
								81260
							],
							[
								82248,
								82266
							],
							[
								82464,
								82487
							],
							[
								82529,
								82544
							],
							[
								82900,
								82915
							],
							[
								83328,
								83348
							],
							[
								83830,
								83848
							],
							[
								84564,
								84573
							],
							[
								84616,
								84620
							],
							[
								84832,
								84870
							],
							[
								85045,
								85068
							],
							[
								85212,
								85217
							],
							[
								85256,
								85266
							],
							[
								85430,
								85434
							],
							[
								85581,
								85585
							],
							[
								85624,
								85629
							],
							[
								86034,
								86038
							],
							[
								86077,
								86091
							],
							[
								86095,
								86109
							],
							[
								86116,
								86120
							],
							[
								86141,
								86156
							],
							[
								86212,
								86237
							],
							[
								86369,
								86380
							],
							[
								86430,
								86435
							],
							[
								86495,
								86500
							],
							[
								86955,
								86965
							],
							[
								87079,
								87096
							],
							[
								87109,
								87113
							],
							[
								87303,
								87307
							],
							[
								87475,
								87496
							],
							[
								88642,
								88646
							],
							[
								88752,
								88756
							],
							[
								89050,
								89078
							],
							[
								89529,
								89533
							],
							[
								89989,
								89998
							],
							[
								90130,
								90139
							],
							[
								90243,
								90251
							],
							[
								90757,
								90766
							],
							[
								90915,
								90919
							],
							[
								90984,
								91010
							],
							[
								91655,
								91660
							],
							[
								91967,
								91998
							],
							[
								93035,
								93056
							],
							[
								93261,
								93289
							],
							[
								93656,
								93699
							],
							[
								95029,
								95038
							],
							[
								95918,
								95922
							],
							[
								96662,
								96689
							],
							[
								96812,
								96825
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfCgAAUnVsZXIgPSAoeyBoYW5kbGVDaGFuZ2UsIHN0eWxlID0ge30sIGNsYXNzOiBjbGFzc05hbWUgfSkgPT4KICB2YWx1ZSA9PgogIHByZXNzaW5nRG93biA9ICgpID0+CiAgcHJlc3NpbmdVcCA9ICgpID0+CiAgc3RvcFByZXNzaW5nID0gKCkgPT4KICBvbkNoYW5nZWQgPSB2YWx1ZSA9PgogIG9uQ2hhbmdlZCA9IHZhbHVlID0+CkNsaWNrSGFuZGxlciA9IGNhbGxiYWNrID0+IGUgPT4KVG9nZ2xlSGFuZGxlciA9IChjYWxsYmFjaywgZ2V0U3RhdGUsIHNldFN0YXRlKSA9PiBlID0+Ck1vdXNlRXZlbnRzID0gaCA9PgogIChlLCBzdGF0ZSkgPT4KICAoKSA9PgpDb250YWluZXIgPSAoeyBjbGFzc05hbWUgPSAncGFuZWwnLCB0YWcgPSAnZGl2JywgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CkJ1dHRvbiA9IGFsbFByb3BzID0+CiAgb25QdXNoID0gc3RhdGUgPT4KVG9nZ2xlID0gKHsgY2xhc3NOYW1lLCBpbWFnZXMsIGZuLCBzdGF0ZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KKGNvbXBvbmVudCwgaSkgPT4KICBvblB1c2goZXZlbnQpCkZsb2F0aW5nUGFuZWwgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBvblNpemUsIG9uSGlkZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB1cGRhdGVTaXplKHZhbHVlKQooKSA9PgogICgpID0+CiAgdXBkYXRlSGlkZSh2YWx1ZSkKKCkgPT4KICAoKSA9PgpMYWJlbCA9ICh7IGNsYXNzTmFtZSwgdGV4dCwgdGl0bGUsIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgpEeW5hbWljTGFiZWwgPSAoeyBjYXB0aW9uLCB0aXRsZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KSXRlbSA9ICh7IGNsYXNzTmFtZSA9ICdpdGVtJywgdGl0bGUsIHRvb2x0aXAsIGxhYmVsLCBpY29uLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4KSWNvbiA9ICh7IGNsYXNzTmFtZSA9ICdpY29uJywgY2FwdGlvbiwgaW1hZ2UsIC4uLnByb3BzIH0pID0+ClByb2dyZXNzID0gKHsgY2xhc3NOYW1lLCBwZXJjZW50LCAuLi5wcm9wcyB9KSA9PgpTY2hlbWF0aWNJY29uID0gcHJvcHMgPT4KQm9hcmRJY29uID0gcHJvcHMgPT4KTGlicmFyeUljb24gPSBwcm9wcyA9PgpHQ29kZUljb24gPSBwcm9wcyA9PgogIHZhbHVlID0+ClNob3dIaWRlID0gKHsgaW5pdGlhbFN0YXRlLCBjb21wb25lbnQsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIHNpZ25hbCwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIC5yZWYgPSBpbnB1dCA9PgogIC5vblN1Ym1pdCA9IGV2ZW50ID0+CiAgZGF0YSA9PgogIHN0YXRlID0+CiAgbGluZSA9PgogIHRvb2x0aXAgPSAoKSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KICBvblB1c2ggPSAoKSA9PgogIHB1c2hIYW5kbGVyID0gaSA9PiAoZSwgc3RhdGUpID0+CiAgdmFsdWUgPT4KICBsaXN0MnJlID0gbGlzdCA9PgogIHBhcnQgPT4KKCkgPT4KICByID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHByZWQgPSBuYW1lID0+CiAgYyA9PgogIHJlID0+CiAgcmUgPT4KKHsgbmFtZSB9KSA9PgogIGkgPT4KKHsgbmFtZSB9KSA9PgoodmFsdWUsIGtleSkgPT4KVG9vbFRpcEZuID0gKHsgbmFtZSwgZGF0YSwgLi4uaXRlbSB9KSA9PgooW25hbWUsIHZhbHVlXSkgPT4KKFtuYW1lLCB2YWx1ZV0pID0+CiAgc29ydENvbXBhcmUgPSAoYSwgYikgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgaXRlbUNsYXNzOiBpdGVtID0+CiAgb25DaGFuZ2U6ICguLi5hcmdzKSA9PgpQYW5lbCA9ICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CldyYXBJbkFzcGVjdEJveCA9IChlbmFibGUsIHsgd2lkdGggPSAnMTAwJScsIGFzcGVjdCA9IDEsIGNsYXNzTmFtZSB9LCBjaGlsZHJlbikgPT4KICBvbkNoYW5nZSA9IHZhbHVlID0+CiAgb25JbnB1dCA9IGUgPT4KQ2FudmFzID0gKHsgb25Jbml0LCAuLi5wcm9wcyB9KSA9PgooKSA9PgogIGhhbmRsZU1vdXNlTW92ZShlKQogIHN0YXJ0RHJhd2luZyhlKQogIHN0b3BEcmF3aW5nKCkKQ29sb3JXaGVlbCA9ICh7IHJhZGl1cyA9IDUwLCAuLi5wcm9wcyB9KSA9PgogIG9uSW5pdDogKGN0eCwgY2FudmFzLCBzaXplKSA9PgogIGRyYXdDaXJjbGUoKQogIHh5MnBvbGFyKHgsIHkpCiAgcmFkMmRlZyhyYWQpCiAgaHN2MnJnYihodWUsIHNhdHVyYXRpb24sIHZhbHVlKQpDcm9zc0hhaXIgPSAoeyBwb3NpdGlvbiwgc2hvdywgcmFkaXVzID0gMjAsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgpNb3ZlQ3Vyc29yID0gcHJvcHMgPT4KICB2YWx1ZSA9PgogIGVsZW1lbnQgPT4KKGUsIHByZXYpID0+CiAgb25Nb3VzZVdoZWVsKGUpCkZlbmNlID0gKHsgY2hpbGRyZW4sIHN0eWxlID0ge30sIHNpemVMaXN0ZW5lciwgYXNwZWN0TGlzdGVuZXIsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgpab29tYWJsZSA9ICh7IHR5cGUgPSAnZGl2Jywgc3R5bGUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIG9uUGFuKGFyZykKICBvblpvb20oYXJnKQogIHJlZiA9IGVsID0+CkRpc3BsYXlMaXN0ID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KKCkAAAAAAAAAANEVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					445,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/components.js",
						"symkeys":
						[
							[
								956,
								1015
							],
							[
								1252,
								1260
							],
							[
								1434,
								1454
							],
							[
								1488,
								1506
							],
							[
								1538,
								1558
							],
							[
								1590,
								1610
							],
							[
								1710,
								1730
							],
							[
								2398,
								2429
							],
							[
								2535,
								2589
							],
							[
								2774,
								2792
							],
							[
								3308,
								3331
							],
							[
								3750,
								3765
							],
							[
								4239,
								4312
							],
							[
								4442,
								4462
							],
							[
								4586,
								4603
							],
							[
								5275,
								5343
							],
							[
								5433,
								5441
							],
							[
								5655,
								5671
							],
							[
								5766,
								5783
							],
							[
								6018,
								6042
							],
							[
								6766,
								6848
							],
							[
								7226,
								7254
							],
							[
								7307,
								7312
							],
							[
								7372,
								7378
							],
							[
								7860,
								7888
							],
							[
								7929,
								7934
							],
							[
								7994,
								8000
							],
							[
								8474,
								8542
							],
							[
								8855,
								8913
							],
							[
								8984,
								8992
							],
							[
								9071,
								9154
							],
							[
								9445,
								9505
							],
							[
								9587,
								9635
							],
							[
								10461,
								10485
							],
							[
								12681,
								12701
							],
							[
								14867,
								14889
							],
							[
								15290,
								15310
							],
							[
								18695,
								18703
							],
							[
								18823,
								18905
							],
							[
								19034,
								19042
							],
							[
								19335,
								19350
							],
							[
								19479,
								19499
							],
							[
								19954,
								19961
							],
							[
								20018,
								20032
							],
							[
								21178,
								21185
							],
							[
								21599,
								21614
							],
							[
								21686,
								21702
							],
							[
								21709,
								21723
							],
							[
								22058,
								22090
							],
							[
								22327,
								22335
							],
							[
								22367,
								22384
							],
							[
								22405,
								22412
							],
							[
								22435,
								22440
							],
							[
								22536,
								22540
							],
							[
								22686,
								22690
							],
							[
								22750,
								22754
							],
							[
								22778,
								22782
							],
							[
								22839,
								22843
							],
							[
								22967,
								22971
							],
							[
								22994,
								22998
							],
							[
								23017,
								23021
							],
							[
								23100,
								23114
							],
							[
								23133,
								23137
							],
							[
								23147,
								23152
							],
							[
								23183,
								23188
							],
							[
								23233,
								23246
							],
							[
								23264,
								23268
							],
							[
								23434,
								23447
							],
							[
								23469,
								23484
							],
							[
								24434,
								24474
							],
							[
								24800,
								24818
							],
							[
								24862,
								24880
							],
							[
								25464,
								25487
							],
							[
								25541,
								25549
							],
							[
								25590,
								25598
							],
							[
								26177,
								26195
							],
							[
								26349,
								26371
							],
							[
								26436,
								26482
							],
							[
								26580,
								26662
							],
							[
								29533,
								29552
							],
							[
								29660,
								29674
							],
							[
								30998,
								31032
							],
							[
								31256,
								31261
							],
							[
								31748,
								31777
							],
							[
								32099,
								32125
							],
							[
								32479,
								32503
							],
							[
								32809,
								32852
							],
							[
								32956,
								32986
							],
							[
								33197,
								33224
							],
							[
								34560,
								34589
							],
							[
								34773,
								34800
							],
							[
								35048,
								35094
							],
							[
								35978,
								36036
							],
							[
								36157,
								36165
							],
							[
								36199,
								36207
							],
							[
								37110,
								37131
							],
							[
								38012,
								38020
							],
							[
								38112,
								38122
							],
							[
								38292,
								38304
							],
							[
								39229,
								39255
							],
							[
								39569,
								39646
							],
							[
								39839,
								39847
							],
							[
								39949,
								39957
							],
							[
								40402,
								40461
							],
							[
								40718,
								40739
							],
							[
								40779,
								40801
							],
							[
								40924,
								40935
							],
							[
								41366,
								41403
							],
							[
								41473,
								41491
							]
						],
						"symlist":
						[
							"Ruler = ({ handleChange, style = {}, class: className }) =>",
							"value =>",
							"pressingDown = () =>",
							"pressingUp = () =>",
							"stopPressing = () =>",
							"onChanged = value =>",
							"onChanged = value =>",
							"ClickHandler = callback => e =>",
							"ToggleHandler = (callback, getState, setState) => e =>",
							"MouseEvents = h =>",
							" (e, state) =>",
							" () =>",
							"Container = ({ className = 'panel', tag = 'div', children, ...props }) =>",
							"Button = allProps =>",
							"onPush = state =>",
							"Toggle = ({ className, images, fn, state, style = {}, ...props }) =>",
							"value =>",
							"onChange = () =>",
							"(component, i) =>",
							" function onPush(event)",
							"FloatingPanel = ({ children, className, onSize, onHide, style = {}, ...props }) =>",
							" function updateSize(value)",
							"() =>",
							" () =>",
							" function updateHide(value)",
							"() =>",
							" () =>",
							"Label = ({ className, text, title, tooltip, children, ...props }) =>",
							"DynamicLabel = ({ caption, title, children, ...props }) =>",
							"value =>",
							"Item = ({ className = 'item', title, tooltip, label, icon, children, ...props }) =>",
							"Icon = ({ className = 'icon', caption, image, ...props }) =>",
							"Progress = ({ className, percent, ...props }) =>",
							"SchematicIcon = props =>",
							"BoardIcon = props =>",
							"LibraryIcon = props =>",
							"GCodeIcon = props =>",
							"value =>",
							"ShowHide = ({ initialState, component, className, children, signal, ...props }) =>",
							"value =>",
							".ref = input =>",
							".onSubmit = event =>",
							"data =>",
							"async state =>",
							"line =>",
							"tooltip = () =>",
							"onChange = () =>",
							"onPush = () =>",
							"pushHandler = i => (e, state) =>",
							"value =>",
							"list2re = list =>",
							"part =>",
							"() =>",
							"r =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"pred = name =>",
							"c =>",
							"re =>",
							"re =>",
							"({ name }) =>",
							"i =>",
							"({ name }) =>",
							"(value, key) =>",
							"ToolTipFn = ({ name, data, ...item }) =>",
							"([name, value]) =>",
							"([name, value]) =>",
							"sortCompare = (a, b) =>",
							"value =>",
							"value =>",
							"itemClass: item =>",
							"onChange: (...args) =>",
							"Panel = ({ className, children, ...props }) =>",
							"WrapInAspectBox = (enable, { width = '100%', aspect = 1, className }, children) =>",
							"onChange = value =>",
							"onInput = e =>",
							"Canvas = ({ onInit, ...props }) =>",
							"() =>",
							" function handleMouseMove(e)",
							" function startDrawing(e)",
							" function stopDrawing()",
							"ColorWheel = ({ radius = 50, ...props }) =>",
							"onInit: (ctx, canvas, size) =>",
							" function drawCircle()",
							" function xy2polar(x, y)",
							" function rad2deg(rad)",
							" function hsv2rgb(hue, saturation, value)",
							"CrossHair = ({ position, show, radius = 20, ...props }) =>",
							"value =>",
							"value =>",
							"MoveCursor = props =>",
							"value =>",
							"element =>",
							"(e, prev) =>",
							" function onMouseWheel(e)",
							"Fence = ({ children, style = {}, sizeListener, aspectListener, ...props }) =>",
							"value =>",
							"value =>",
							"Zoomable = ({ type = 'div', style, children, ...props }) =>",
							" function onPan(arg)",
							" function onZoom(arg)",
							"ref = el =>",
							"DisplayList = ({ data, ...props }) =>",
							"async function* ()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAAB8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					446,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/components.js",
						"symkeys":
						[
							[
								956,
								1015
							],
							[
								1252,
								1260
							],
							[
								1434,
								1454
							],
							[
								1488,
								1506
							],
							[
								1538,
								1558
							],
							[
								1590,
								1610
							],
							[
								1710,
								1730
							],
							[
								2398,
								2429
							],
							[
								2535,
								2589
							],
							[
								2774,
								2792
							],
							[
								3308,
								3331
							],
							[
								3750,
								3765
							],
							[
								4239,
								4312
							],
							[
								4442,
								4462
							],
							[
								4586,
								4603
							],
							[
								5275,
								5343
							],
							[
								5433,
								5441
							],
							[
								5655,
								5671
							],
							[
								5766,
								5783
							],
							[
								6022,
								6046
							],
							[
								6770,
								6852
							],
							[
								7230,
								7258
							],
							[
								7311,
								7316
							],
							[
								7376,
								7382
							],
							[
								7864,
								7892
							],
							[
								7933,
								7938
							],
							[
								7998,
								8004
							],
							[
								8478,
								8546
							],
							[
								8859,
								8917
							],
							[
								8988,
								8996
							],
							[
								9075,
								9158
							],
							[
								9449,
								9509
							],
							[
								9591,
								9639
							],
							[
								10465,
								10489
							],
							[
								12685,
								12705
							],
							[
								14871,
								14893
							],
							[
								15294,
								15314
							],
							[
								18699,
								18707
							],
							[
								18827,
								18909
							],
							[
								19038,
								19046
							],
							[
								19339,
								19354
							],
							[
								19483,
								19503
							],
							[
								19958,
								19965
							],
							[
								20022,
								20036
							],
							[
								21182,
								21189
							],
							[
								21603,
								21618
							],
							[
								21690,
								21706
							],
							[
								21713,
								21727
							],
							[
								22062,
								22094
							],
							[
								22331,
								22339
							],
							[
								22371,
								22388
							],
							[
								22409,
								22416
							],
							[
								22439,
								22444
							],
							[
								22540,
								22544
							],
							[
								22690,
								22694
							],
							[
								22754,
								22758
							],
							[
								22782,
								22786
							],
							[
								22843,
								22847
							],
							[
								22971,
								22975
							],
							[
								22998,
								23002
							],
							[
								23021,
								23025
							],
							[
								23104,
								23118
							],
							[
								23137,
								23141
							],
							[
								23151,
								23156
							],
							[
								23187,
								23192
							],
							[
								23237,
								23250
							],
							[
								23268,
								23272
							],
							[
								23438,
								23451
							],
							[
								23473,
								23488
							],
							[
								24438,
								24478
							],
							[
								24804,
								24822
							],
							[
								24866,
								24884
							],
							[
								25468,
								25491
							],
							[
								25545,
								25553
							],
							[
								25594,
								25602
							],
							[
								26181,
								26199
							],
							[
								26353,
								26375
							],
							[
								26440,
								26486
							],
							[
								26584,
								26666
							],
							[
								29537,
								29556
							],
							[
								29664,
								29678
							],
							[
								31002,
								31036
							],
							[
								31260,
								31265
							],
							[
								31752,
								31781
							],
							[
								32103,
								32129
							],
							[
								32483,
								32507
							],
							[
								32813,
								32856
							],
							[
								32960,
								32990
							],
							[
								33201,
								33228
							],
							[
								34564,
								34593
							],
							[
								34777,
								34804
							],
							[
								35052,
								35098
							],
							[
								35982,
								36040
							],
							[
								36161,
								36169
							],
							[
								36203,
								36211
							],
							[
								37114,
								37135
							],
							[
								38016,
								38024
							],
							[
								38116,
								38126
							],
							[
								38296,
								38308
							],
							[
								39233,
								39259
							],
							[
								39573,
								39650
							],
							[
								39843,
								39851
							],
							[
								39953,
								39961
							],
							[
								40406,
								40465
							],
							[
								40722,
								40743
							],
							[
								40783,
								40805
							],
							[
								40928,
								40939
							],
							[
								41370,
								41407
							],
							[
								41477,
								41495
							]
						],
						"symlist":
						[
							"Ruler = ({ handleChange, style = {}, class: className }) =>",
							"value =>",
							"pressingDown = () =>",
							"pressingUp = () =>",
							"stopPressing = () =>",
							"onChanged = value =>",
							"onChanged = value =>",
							"ClickHandler = callback => e =>",
							"ToggleHandler = (callback, getState, setState) => e =>",
							"MouseEvents = h =>",
							" (e, state) =>",
							" () =>",
							"Container = ({ className = 'panel', tag = 'div', children, ...props }) =>",
							"Button = allProps =>",
							"onPush = state =>",
							"Toggle = ({ className, images, fn, state, style = {}, ...props }) =>",
							"value =>",
							"onChange = () =>",
							"(component, i) =>",
							" function onPush(event)",
							"FloatingPanel = ({ children, className, onSize, onHide, style = {}, ...props }) =>",
							" function updateSize(value)",
							"() =>",
							" () =>",
							" function updateHide(value)",
							"() =>",
							" () =>",
							"Label = ({ className, text, title, tooltip, children, ...props }) =>",
							"DynamicLabel = ({ caption, title, children, ...props }) =>",
							"value =>",
							"Item = ({ className = 'item', title, tooltip, label, icon, children, ...props }) =>",
							"Icon = ({ className = 'icon', caption, image, ...props }) =>",
							"Progress = ({ className, percent, ...props }) =>",
							"SchematicIcon = props =>",
							"BoardIcon = props =>",
							"LibraryIcon = props =>",
							"GCodeIcon = props =>",
							"value =>",
							"ShowHide = ({ initialState, component, className, children, signal, ...props }) =>",
							"value =>",
							".ref = input =>",
							".onSubmit = event =>",
							"data =>",
							"async state =>",
							"line =>",
							"tooltip = () =>",
							"onChange = () =>",
							"onPush = () =>",
							"pushHandler = i => (e, state) =>",
							"value =>",
							"list2re = list =>",
							"part =>",
							"() =>",
							"r =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"pred = name =>",
							"c =>",
							"re =>",
							"re =>",
							"({ name }) =>",
							"i =>",
							"({ name }) =>",
							"(value, key) =>",
							"ToolTipFn = ({ name, data, ...item }) =>",
							"([name, value]) =>",
							"([name, value]) =>",
							"sortCompare = (a, b) =>",
							"value =>",
							"value =>",
							"itemClass: item =>",
							"onChange: (...args) =>",
							"Panel = ({ className, children, ...props }) =>",
							"WrapInAspectBox = (enable, { width = '100%', aspect = 1, className }, children) =>",
							"onChange = value =>",
							"onInput = e =>",
							"Canvas = ({ onInit, ...props }) =>",
							"() =>",
							" function handleMouseMove(e)",
							" function startDrawing(e)",
							" function stopDrawing()",
							"ColorWheel = ({ radius = 50, ...props }) =>",
							"onInit: (ctx, canvas, size) =>",
							" function drawCircle()",
							" function xy2polar(x, y)",
							" function rad2deg(rad)",
							" function hsv2rgb(hue, saturation, value)",
							"CrossHair = ({ position, show, radius = 20, ...props }) =>",
							"value =>",
							"value =>",
							"MoveCursor = props =>",
							"value =>",
							"element =>",
							"(e, prev) =>",
							" function onMouseWheel(e)",
							"Fence = ({ children, style = {}, sizeListener, aspectListener, ...props }) =>",
							"value =>",
							"value =>",
							"Zoomable = ({ type = 'div', style, children, ...props }) =>",
							" function onPan(arg)",
							" function onZoom(arg)",
							"ref = el =>",
							"DisplayList = ({ data, ...props }) =>",
							"async function* ()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfCgAAUnVsZXIgPSAoeyBoYW5kbGVDaGFuZ2UsIHN0eWxlID0ge30sIGNsYXNzOiBjbGFzc05hbWUgfSkgPT4KICB2YWx1ZSA9PgogIHByZXNzaW5nRG93biA9ICgpID0+CiAgcHJlc3NpbmdVcCA9ICgpID0+CiAgc3RvcFByZXNzaW5nID0gKCkgPT4KICBvbkNoYW5nZWQgPSB2YWx1ZSA9PgogIG9uQ2hhbmdlZCA9IHZhbHVlID0+CkNsaWNrSGFuZGxlciA9IGNhbGxiYWNrID0+IGUgPT4KVG9nZ2xlSGFuZGxlciA9IChjYWxsYmFjaywgZ2V0U3RhdGUsIHNldFN0YXRlKSA9PiBlID0+Ck1vdXNlRXZlbnRzID0gaCA9PgogIChlLCBzdGF0ZSkgPT4KICAoKSA9PgpDb250YWluZXIgPSAoeyBjbGFzc05hbWUgPSAncGFuZWwnLCB0YWcgPSAnZGl2JywgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CkJ1dHRvbiA9IGFsbFByb3BzID0+CiAgb25QdXNoID0gc3RhdGUgPT4KVG9nZ2xlID0gKHsgY2xhc3NOYW1lLCBpbWFnZXMsIGZuLCBzdGF0ZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KKGNvbXBvbmVudCwgaSkgPT4KICBvblB1c2goZXZlbnQpCkZsb2F0aW5nUGFuZWwgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBvblNpemUsIG9uSGlkZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB1cGRhdGVTaXplKHZhbHVlKQooKSA9PgogICgpID0+CiAgdXBkYXRlSGlkZSh2YWx1ZSkKKCkgPT4KICAoKSA9PgpMYWJlbCA9ICh7IGNsYXNzTmFtZSwgdGV4dCwgdGl0bGUsIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgpEeW5hbWljTGFiZWwgPSAoeyBjYXB0aW9uLCB0aXRsZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KSXRlbSA9ICh7IGNsYXNzTmFtZSA9ICdpdGVtJywgdGl0bGUsIHRvb2x0aXAsIGxhYmVsLCBpY29uLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4KSWNvbiA9ICh7IGNsYXNzTmFtZSA9ICdpY29uJywgY2FwdGlvbiwgaW1hZ2UsIC4uLnByb3BzIH0pID0+ClByb2dyZXNzID0gKHsgY2xhc3NOYW1lLCBwZXJjZW50LCAuLi5wcm9wcyB9KSA9PgpTY2hlbWF0aWNJY29uID0gcHJvcHMgPT4KQm9hcmRJY29uID0gcHJvcHMgPT4KTGlicmFyeUljb24gPSBwcm9wcyA9PgpHQ29kZUljb24gPSBwcm9wcyA9PgogIHZhbHVlID0+ClNob3dIaWRlID0gKHsgaW5pdGlhbFN0YXRlLCBjb21wb25lbnQsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIHNpZ25hbCwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIC5yZWYgPSBpbnB1dCA9PgogIC5vblN1Ym1pdCA9IGV2ZW50ID0+CiAgZGF0YSA9PgogIHN0YXRlID0+CiAgbGluZSA9PgogIHRvb2x0aXAgPSAoKSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KICBvblB1c2ggPSAoKSA9PgogIHB1c2hIYW5kbGVyID0gaSA9PiAoZSwgc3RhdGUpID0+CiAgdmFsdWUgPT4KICBsaXN0MnJlID0gbGlzdCA9PgogIHBhcnQgPT4KKCkgPT4KICByID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHByZWQgPSBuYW1lID0+CiAgYyA9PgogIHJlID0+CiAgcmUgPT4KKHsgbmFtZSB9KSA9PgogIGkgPT4KKHsgbmFtZSB9KSA9PgoodmFsdWUsIGtleSkgPT4KVG9vbFRpcEZuID0gKHsgbmFtZSwgZGF0YSwgLi4uaXRlbSB9KSA9PgooW25hbWUsIHZhbHVlXSkgPT4KKFtuYW1lLCB2YWx1ZV0pID0+CiAgc29ydENvbXBhcmUgPSAoYSwgYikgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgaXRlbUNsYXNzOiBpdGVtID0+CiAgb25DaGFuZ2U6ICguLi5hcmdzKSA9PgpQYW5lbCA9ICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CldyYXBJbkFzcGVjdEJveCA9IChlbmFibGUsIHsgd2lkdGggPSAnMTAwJScsIGFzcGVjdCA9IDEsIGNsYXNzTmFtZSB9LCBjaGlsZHJlbikgPT4KICBvbkNoYW5nZSA9IHZhbHVlID0+CiAgb25JbnB1dCA9IGUgPT4KQ2FudmFzID0gKHsgb25Jbml0LCAuLi5wcm9wcyB9KSA9PgooKSA9PgogIGhhbmRsZU1vdXNlTW92ZShlKQogIHN0YXJ0RHJhd2luZyhlKQogIHN0b3BEcmF3aW5nKCkKQ29sb3JXaGVlbCA9ICh7IHJhZGl1cyA9IDUwLCAuLi5wcm9wcyB9KSA9PgogIG9uSW5pdDogKGN0eCwgY2FudmFzLCBzaXplKSA9PgogIGRyYXdDaXJjbGUoKQogIHh5MnBvbGFyKHgsIHkpCiAgcmFkMmRlZyhyYWQpCiAgaHN2MnJnYihodWUsIHNhdHVyYXRpb24sIHZhbHVlKQpDcm9zc0hhaXIgPSAoeyBwb3NpdGlvbiwgc2hvdywgcmFkaXVzID0gMjAsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgpNb3ZlQ3Vyc29yID0gcHJvcHMgPT4KICB2YWx1ZSA9PgogIGVsZW1lbnQgPT4KKGUsIHByZXYpID0+CiAgb25Nb3VzZVdoZWVsKGUpCkZlbmNlID0gKHsgY2hpbGRyZW4sIHN0eWxlID0ge30sIHNpemVMaXN0ZW5lciwgYXNwZWN0TGlzdGVuZXIsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgpab29tYWJsZSA9ICh7IHR5cGUgPSAnZGl2Jywgc3R5bGUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIG9uUGFuKGFyZykKICBvblpvb20oYXJnKQogIHJlZiA9IGVsID0+CkRpc3BsYXlMaXN0ID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KKCkAAAAAAAAAAB8KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					447,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/preact.js",
						"symkeys":
						[
							[
								189,
								216
							],
							[
								288,
								313
							],
							[
								413,
								447
							],
							[
								1219,
								1264
							],
							[
								2022,
								2075
							],
							[
								2406,
								2426
							],
							[
								2460,
								2484
							],
							[
								2519,
								2566
							],
							[
								2632,
								2666
							],
							[
								2720,
								2777
							],
							[
								3198,
								3250
							],
							[
								3381,
								3390
							],
							[
								3421,
								3462
							],
							[
								3854,
								3889
							],
							[
								4484,
								4523
							],
							[
								5024,
								5049
							],
							[
								5279,
								5297
							],
							[
								5393,
								5408
							],
							[
								5496,
								5508
							],
							[
								5597,
								5772
							],
							[
								9185,
								9221
							],
							[
								9355,
								9371
							],
							[
								9471,
								9571
							],
							[
								10302,
								10361
							],
							[
								10820,
								10856
							],
							[
								11112,
								11167
							],
							[
								13213,
								13235
							],
							[
								13314,
								13343
							],
							[
								13421,
								13474
							],
							[
								13975,
								14114
							],
							[
								14957,
								14964
							],
							[
								17102,
								17113
							],
							[
								19156,
								19194
							],
							[
								19277,
								19289
							],
							[
								19371,
								19384
							],
							[
								19478,
								19595
							],
							[
								22201,
								22237
							],
							[
								22396,
								22444
							],
							[
								23199,
								23239
							],
							[
								23316,
								23362
							],
							[
								24140,
								24174
							],
							[
								24220,
								24265
							],
							[
								24875,
								24922
							],
							[
								25018,
								25047
							],
							[
								25104,
								25130
							],
							[
								25248,
								25277
							],
							[
								25326,
								25367
							],
							[
								25494,
								25512
							],
							[
								25595,
								25629
							],
							[
								26278,
								26300
							],
							[
								26394,
								26416
							],
							[
								26689,
								26714
							],
							[
								26928,
								26963
							],
							[
								26985,
								27005
							],
							[
								27106,
								27119
							],
							[
								27220,
								27232
							],
							[
								27440,
								27466
							],
							[
								27678,
								27712
							],
							[
								28056,
								28087
							],
							[
								28163,
								28211
							],
							[
								28418,
								28440
							],
							[
								28745,
								28779
							],
							[
								28979,
								29019
							],
							[
								29215,
								29244
							],
							[
								29284,
								29295
							],
							[
								29349,
								29402
							],
							[
								29444,
								29458
							],
							[
								29692,
								29723
							],
							[
								29911,
								29947
							],
							[
								29987,
								29998
							],
							[
								30037,
								30065
							],
							[
								30362,
								30402
							],
							[
								30507,
								30536
							],
							[
								30698,
								30732
							],
							[
								30852,
								30866
							],
							[
								30913,
								30946
							],
							[
								30977,
								30997
							],
							[
								31365,
								31398
							],
							[
								31407,
								31429
							],
							[
								31671,
								31706
							],
							[
								31892,
								31920
							],
							[
								32044,
								32071
							],
							[
								32159,
								32197
							],
							[
								32285,
								32306
							],
							[
								32361,
								32392
							],
							[
								32909,
								32937
							],
							[
								32948,
								32967
							],
							[
								33967,
								34005
							],
							[
								34830,
								34855
							],
							[
								35017,
								35034
							],
							[
								38729,
								38756
							]
						],
						"symlist":
						[
							"function assign(obj, props)",
							"function removeNode(node)",
							"function _catchError(error, vnode)",
							"function createElement(type, props, children)",
							"function createVNode(type, props, key, ref, original)",
							"function createRef()",
							"function Fragment(props)",
							"isValidElement = function isValidElement(vnode)",
							"function Component(props, context)",
							"Component.prototype.setState = function(update, callback)",
							"Component.prototype.forceUpdate = function(callback)",
							"Component",
							"function getDomSibling(vnode, childIndex)",
							"function renderComponent(component)",
							"function updateParentDomPointers(vnode)",
							"function enqueueRender(c)",
							"function process()",
							"function (a, b)",
							"function (c)",
							"function diffChildren( parentDom, renderResult, newParentVNode, oldParentVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating )",
							"function toChildArray(children, out)",
							"function (child)",
							"function placeChild(parentDom, childVNode, oldVNode, oldChildren, excessDomChildren, newDom, oldDom)",
							"function diffProps(dom, newProps, oldProps, isSvg, hydrate)",
							"function setStyle(style, key, value)",
							"function setProperty(dom, name, value, oldValue, isSvg)",
							"function eventProxy(e)",
							"function eventProxyCapture(e)",
							"function reorderChildren(newVNode, oldDom, parentDom)",
							"function diff( parentDom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating )",
							"newType",
							"function ()",
							"function commitRoot(commitQueue, root)",
							"function (c)",
							"function (cb)",
							"function diffElementNodes(dom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, isHydrating)",
							"function applyRef(ref, value, vnode)",
							"function unmount(vnode, parentVNode, skipRemove)",
							"function doRender(props, state, context)",
							"function render(vnode, parentDom, replaceNode)",
							"function hydrate(vnode, parentDom)",
							"function cloneElement(vnode, props, children)",
							"function createContext(defaultValue, contextId)",
							"Consumer(props, contextValue)",
							"Provider(props, subs, ctx)",
							".getChildContext = function()",
							".shouldComponentUpdate = function(_props)",
							".sub = function(c)",
							".componentWillUnmount = function()",
							".__b = function(vnode)",
							".__r = function(vnode)",
							".diffed = function(vnode)",
							".__c = function(vnode, commitQueue)",
							"function (component)",
							"function (cb)",
							"function (c)",
							".unmount = function(vnode)",
							"function getHookState(index, type)",
							"function useState(initialState)",
							"function useReducer(reducer, initialState, init)",
							" function(action)",
							"function useEffect(callback, args)",
							"function useLayoutEffect(callback, args)",
							"function useRef(initialValue)",
							"function ()",
							"function useImperativeHandle(ref, createHandle, args)",
							" function()",
							"function useMemo(factory, args)",
							"function useCallback(callback, args)",
							"function ()",
							"function useContext(context)",
							"function useDebugValue(value, formatter)",
							"function useErrorBoundary(cb)",
							".componentDidCatch = function(err)",
							" function()",
							"function flushAfterPaintEffects()",
							"function (component)",
							"function afterNextFrame(callback)",
							"done = function done()",
							"function afterPaint(newQueueLength)",
							"function invokeCleanup(hook)",
							"function invokeEffect(hook)",
							"function argsChanged(oldArgs, newArgs)",
							"function (arg, index)",
							"function invokeOrReturn(arg, f)",
							"treeify = (built, fields) =>",
							"_treeify = built =>",
							"evaluate = (h, built, fields, args) =>",
							"build = function(statics)",
							"commit = field =>",
							"regular = function(statics)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfCgAAUnVsZXIgPSAoeyBoYW5kbGVDaGFuZ2UsIHN0eWxlID0ge30sIGNsYXNzOiBjbGFzc05hbWUgfSkgPT4KICB2YWx1ZSA9PgogIHByZXNzaW5nRG93biA9ICgpID0+CiAgcHJlc3NpbmdVcCA9ICgpID0+CiAgc3RvcFByZXNzaW5nID0gKCkgPT4KICBvbkNoYW5nZWQgPSB2YWx1ZSA9PgogIG9uQ2hhbmdlZCA9IHZhbHVlID0+CkNsaWNrSGFuZGxlciA9IGNhbGxiYWNrID0+IGUgPT4KVG9nZ2xlSGFuZGxlciA9IChjYWxsYmFjaywgZ2V0U3RhdGUsIHNldFN0YXRlKSA9PiBlID0+Ck1vdXNlRXZlbnRzID0gaCA9PgogIChlLCBzdGF0ZSkgPT4KICAoKSA9PgpDb250YWluZXIgPSAoeyBjbGFzc05hbWUgPSAncGFuZWwnLCB0YWcgPSAnZGl2JywgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CkJ1dHRvbiA9IGFsbFByb3BzID0+CiAgb25QdXNoID0gc3RhdGUgPT4KVG9nZ2xlID0gKHsgY2xhc3NOYW1lLCBpbWFnZXMsIGZuLCBzdGF0ZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KKGNvbXBvbmVudCwgaSkgPT4KICBvblB1c2goZXZlbnQpCkZsb2F0aW5nUGFuZWwgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBvblNpemUsIG9uSGlkZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB1cGRhdGVTaXplKHZhbHVlKQooKSA9PgogICgpID0+CiAgdXBkYXRlSGlkZSh2YWx1ZSkKKCkgPT4KICAoKSA9PgpMYWJlbCA9ICh7IGNsYXNzTmFtZSwgdGV4dCwgdGl0bGUsIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgpEeW5hbWljTGFiZWwgPSAoeyBjYXB0aW9uLCB0aXRsZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KSXRlbSA9ICh7IGNsYXNzTmFtZSA9ICdpdGVtJywgdGl0bGUsIHRvb2x0aXAsIGxhYmVsLCBpY29uLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4KSWNvbiA9ICh7IGNsYXNzTmFtZSA9ICdpY29uJywgY2FwdGlvbiwgaW1hZ2UsIC4uLnByb3BzIH0pID0+ClByb2dyZXNzID0gKHsgY2xhc3NOYW1lLCBwZXJjZW50LCAuLi5wcm9wcyB9KSA9PgpTY2hlbWF0aWNJY29uID0gcHJvcHMgPT4KQm9hcmRJY29uID0gcHJvcHMgPT4KTGlicmFyeUljb24gPSBwcm9wcyA9PgpHQ29kZUljb24gPSBwcm9wcyA9PgogIHZhbHVlID0+ClNob3dIaWRlID0gKHsgaW5pdGlhbFN0YXRlLCBjb21wb25lbnQsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIHNpZ25hbCwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIC5yZWYgPSBpbnB1dCA9PgogIC5vblN1Ym1pdCA9IGV2ZW50ID0+CiAgZGF0YSA9PgogIHN0YXRlID0+CiAgbGluZSA9PgogIHRvb2x0aXAgPSAoKSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KICBvblB1c2ggPSAoKSA9PgogIHB1c2hIYW5kbGVyID0gaSA9PiAoZSwgc3RhdGUpID0+CiAgdmFsdWUgPT4KICBsaXN0MnJlID0gbGlzdCA9PgogIHBhcnQgPT4KKCkgPT4KICByID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHByZWQgPSBuYW1lID0+CiAgYyA9PgogIHJlID0+CiAgcmUgPT4KKHsgbmFtZSB9KSA9PgogIGkgPT4KKHsgbmFtZSB9KSA9PgoodmFsdWUsIGtleSkgPT4KVG9vbFRpcEZuID0gKHsgbmFtZSwgZGF0YSwgLi4uaXRlbSB9KSA9PgooW25hbWUsIHZhbHVlXSkgPT4KKFtuYW1lLCB2YWx1ZV0pID0+CiAgc29ydENvbXBhcmUgPSAoYSwgYikgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgaXRlbUNsYXNzOiBpdGVtID0+CiAgb25DaGFuZ2U6ICguLi5hcmdzKSA9PgpQYW5lbCA9ICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CldyYXBJbkFzcGVjdEJveCA9IChlbmFibGUsIHsgd2lkdGggPSAnMTAwJScsIGFzcGVjdCA9IDEsIGNsYXNzTmFtZSB9LCBjaGlsZHJlbikgPT4KICBvbkNoYW5nZSA9IHZhbHVlID0+CiAgb25JbnB1dCA9IGUgPT4KQ2FudmFzID0gKHsgb25Jbml0LCAuLi5wcm9wcyB9KSA9PgooKSA9PgogIGhhbmRsZU1vdXNlTW92ZShlKQogIHN0YXJ0RHJhd2luZyhlKQogIHN0b3BEcmF3aW5nKCkKQ29sb3JXaGVlbCA9ICh7IHJhZGl1cyA9IDUwLCAuLi5wcm9wcyB9KSA9PgogIG9uSW5pdDogKGN0eCwgY2FudmFzLCBzaXplKSA9PgogIGRyYXdDaXJjbGUoKQogIHh5MnBvbGFyKHgsIHkpCiAgcmFkMmRlZyhyYWQpCiAgaHN2MnJnYihodWUsIHNhdHVyYXRpb24sIHZhbHVlKQpDcm9zc0hhaXIgPSAoeyBwb3NpdGlvbiwgc2hvdywgcmFkaXVzID0gMjAsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgpNb3ZlQ3Vyc29yID0gcHJvcHMgPT4KICB2YWx1ZSA9PgogIGVsZW1lbnQgPT4KKGUsIHByZXYpID0+CiAgb25Nb3VzZVdoZWVsKGUpCkZlbmNlID0gKHsgY2hpbGRyZW4sIHN0eWxlID0ge30sIHNpemVMaXN0ZW5lciwgYXNwZWN0TGlzdGVuZXIsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgpab29tYWJsZSA9ICh7IHR5cGUgPSAnZGl2Jywgc3R5bGUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIG9uUGFuKGFyZykKICBvblpvb20oYXJnKQogIHJlZiA9IGVsID0+CkRpc3BsYXlMaXN0ID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KKCkAAAAAAAAAAMsKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					448,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/components.js",
						"symkeys":
						[
							[
								956,
								1015
							],
							[
								1252,
								1260
							],
							[
								1434,
								1454
							],
							[
								1488,
								1506
							],
							[
								1538,
								1558
							],
							[
								1590,
								1610
							],
							[
								1710,
								1730
							],
							[
								2398,
								2429
							],
							[
								2535,
								2589
							],
							[
								2774,
								2792
							],
							[
								3308,
								3331
							],
							[
								3750,
								3765
							],
							[
								4239,
								4312
							],
							[
								4442,
								4462
							],
							[
								4586,
								4603
							],
							[
								5275,
								5343
							],
							[
								5433,
								5441
							],
							[
								5655,
								5671
							],
							[
								5766,
								5783
							],
							[
								6022,
								6046
							],
							[
								6770,
								6852
							],
							[
								7230,
								7258
							],
							[
								7311,
								7316
							],
							[
								7376,
								7382
							],
							[
								7864,
								7892
							],
							[
								7933,
								7938
							],
							[
								7998,
								8004
							],
							[
								8478,
								8546
							],
							[
								8859,
								8917
							],
							[
								8988,
								8996
							],
							[
								9075,
								9158
							],
							[
								9449,
								9509
							],
							[
								9591,
								9639
							],
							[
								10465,
								10489
							],
							[
								12685,
								12705
							],
							[
								14871,
								14893
							],
							[
								15294,
								15314
							],
							[
								18699,
								18707
							],
							[
								18827,
								18909
							],
							[
								19038,
								19046
							],
							[
								19339,
								19354
							],
							[
								19483,
								19503
							],
							[
								19958,
								19965
							],
							[
								20022,
								20036
							],
							[
								21182,
								21189
							],
							[
								21603,
								21618
							],
							[
								21690,
								21706
							],
							[
								21713,
								21727
							],
							[
								22062,
								22094
							],
							[
								22331,
								22339
							],
							[
								22371,
								22388
							],
							[
								22409,
								22416
							],
							[
								22439,
								22444
							],
							[
								22540,
								22544
							],
							[
								22690,
								22694
							],
							[
								22754,
								22758
							],
							[
								22782,
								22786
							],
							[
								22843,
								22847
							],
							[
								22971,
								22975
							],
							[
								22998,
								23002
							],
							[
								23021,
								23025
							],
							[
								23104,
								23118
							],
							[
								23137,
								23141
							],
							[
								23151,
								23156
							],
							[
								23187,
								23192
							],
							[
								23237,
								23250
							],
							[
								23268,
								23272
							],
							[
								23438,
								23451
							],
							[
								23473,
								23488
							],
							[
								24438,
								24478
							],
							[
								24804,
								24822
							],
							[
								24866,
								24884
							],
							[
								25468,
								25491
							],
							[
								25545,
								25553
							],
							[
								25594,
								25602
							],
							[
								26181,
								26199
							],
							[
								26353,
								26375
							],
							[
								26440,
								26486
							],
							[
								26584,
								26666
							],
							[
								29537,
								29556
							],
							[
								29664,
								29678
							],
							[
								31002,
								31036
							],
							[
								31260,
								31265
							],
							[
								31752,
								31781
							],
							[
								32103,
								32129
							],
							[
								32483,
								32507
							],
							[
								32813,
								32856
							],
							[
								32960,
								32990
							],
							[
								33201,
								33228
							],
							[
								34564,
								34593
							],
							[
								34777,
								34804
							],
							[
								35052,
								35098
							],
							[
								35982,
								36040
							],
							[
								36161,
								36169
							],
							[
								36203,
								36211
							],
							[
								37114,
								37135
							],
							[
								38016,
								38024
							],
							[
								38116,
								38126
							],
							[
								38296,
								38308
							],
							[
								39233,
								39259
							],
							[
								39573,
								39650
							],
							[
								39843,
								39851
							],
							[
								39953,
								39961
							],
							[
								40406,
								40465
							],
							[
								40722,
								40743
							],
							[
								40783,
								40805
							],
							[
								40928,
								40939
							],
							[
								41370,
								41407
							],
							[
								41477,
								41495
							]
						],
						"symlist":
						[
							"Ruler = ({ handleChange, style = {}, class: className }) =>",
							"value =>",
							"pressingDown = () =>",
							"pressingUp = () =>",
							"stopPressing = () =>",
							"onChanged = value =>",
							"onChanged = value =>",
							"ClickHandler = callback => e =>",
							"ToggleHandler = (callback, getState, setState) => e =>",
							"MouseEvents = h =>",
							" (e, state) =>",
							" () =>",
							"Container = ({ className = 'panel', tag = 'div', children, ...props }) =>",
							"Button = allProps =>",
							"onPush = state =>",
							"Toggle = ({ className, images, fn, state, style = {}, ...props }) =>",
							"value =>",
							"onChange = () =>",
							"(component, i) =>",
							" function onPush(event)",
							"FloatingPanel = ({ children, className, onSize, onHide, style = {}, ...props }) =>",
							" function updateSize(value)",
							"() =>",
							" () =>",
							" function updateHide(value)",
							"() =>",
							" () =>",
							"Label = ({ className, text, title, tooltip, children, ...props }) =>",
							"DynamicLabel = ({ caption, title, children, ...props }) =>",
							"value =>",
							"Item = ({ className = 'item', title, tooltip, label, icon, children, ...props }) =>",
							"Icon = ({ className = 'icon', caption, image, ...props }) =>",
							"Progress = ({ className, percent, ...props }) =>",
							"SchematicIcon = props =>",
							"BoardIcon = props =>",
							"LibraryIcon = props =>",
							"GCodeIcon = props =>",
							"value =>",
							"ShowHide = ({ initialState, component, className, children, signal, ...props }) =>",
							"value =>",
							".ref = input =>",
							".onSubmit = event =>",
							"data =>",
							"async state =>",
							"line =>",
							"tooltip = () =>",
							"onChange = () =>",
							"onPush = () =>",
							"pushHandler = i => (e, state) =>",
							"value =>",
							"list2re = list =>",
							"part =>",
							"() =>",
							"r =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"p =>",
							"pred = name =>",
							"c =>",
							"re =>",
							"re =>",
							"({ name }) =>",
							"i =>",
							"({ name }) =>",
							"(value, key) =>",
							"ToolTipFn = ({ name, data, ...item }) =>",
							"([name, value]) =>",
							"([name, value]) =>",
							"sortCompare = (a, b) =>",
							"value =>",
							"value =>",
							"itemClass: item =>",
							"onChange: (...args) =>",
							"Panel = ({ className, children, ...props }) =>",
							"WrapInAspectBox = (enable, { width = '100%', aspect = 1, className }, children) =>",
							"onChange = value =>",
							"onInput = e =>",
							"Canvas = ({ onInit, ...props }) =>",
							"() =>",
							" function handleMouseMove(e)",
							" function startDrawing(e)",
							" function stopDrawing()",
							"ColorWheel = ({ radius = 50, ...props }) =>",
							"onInit: (ctx, canvas, size) =>",
							" function drawCircle()",
							" function xy2polar(x, y)",
							" function rad2deg(rad)",
							" function hsv2rgb(hue, saturation, value)",
							"CrossHair = ({ position, show, radius = 20, ...props }) =>",
							"value =>",
							"value =>",
							"MoveCursor = props =>",
							"value =>",
							"element =>",
							"(e, prev) =>",
							" function onMouseWheel(e)",
							"Fence = ({ children, style = {}, sizeListener, aspectListener, ...props }) =>",
							"value =>",
							"value =>",
							"Zoomable = ({ type = 'div', style, children, ...props }) =>",
							" function onPan(arg)",
							" function onZoom(arg)",
							"ref = el =>",
							"DisplayList = ({ data, ...props }) =>",
							"async function* ()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLCgAAICBhc3NpZ24ob2JqLCBwcm9wcykKICByZW1vdmVOb2RlKG5vZGUpCiAgX2NhdGNoRXJyb3IoZXJyb3IsIHZub2RlKQogIGNyZWF0ZUVsZW1lbnQodHlwZSwgcHJvcHMsIGNoaWxkcmVuKQogIGNyZWF0ZVZOb2RlKHR5cGUsIHByb3BzLCBrZXksIHJlZiwgb3JpZ2luYWwpCiAgY3JlYXRlUmVmKCkKRnJhZ21lbnQocHJvcHMpCiAgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudCh2bm9kZSkKQ29tcG9uZW50KHByb3BzLCBjb250ZXh0KQpDb21wb25lbnQucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24odXBkYXRlLCBjYWxsYmFjaykKQ29tcG9uZW50LnByb3RvdHlwZS5mb3JjZVVwZGF0ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKQpDb21wb25lbnQKICBnZXREb21TaWJsaW5nKHZub2RlLCBjaGlsZEluZGV4KQogIHJlbmRlckNvbXBvbmVudChjb21wb25lbnQpCiAgdXBkYXRlUGFyZW50RG9tUG9pbnRlcnModm5vZGUpCiAgZW5xdWV1ZVJlbmRlcihjKQogIHByb2Nlc3MoKQooYSwgYikKKGMpCiAgZGlmZkNoaWxkcmVuKCBwYXJlbnREb20sIHJlbmRlclJlc3VsdCwgbmV3UGFyZW50Vk5vZGUsIG9sZFBhcmVudFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBvbGREb20sIGlzSHlkcmF0aW5nICkKICB0b0NoaWxkQXJyYXkoY2hpbGRyZW4sIG91dCkKKGNoaWxkKQogIHBsYWNlQ2hpbGQocGFyZW50RG9tLCBjaGlsZFZOb2RlLCBvbGRWTm9kZSwgb2xkQ2hpbGRyZW4sIGV4Y2Vzc0RvbUNoaWxkcmVuLCBuZXdEb20sIG9sZERvbSkKICBkaWZmUHJvcHMoZG9tLCBuZXdQcm9wcywgb2xkUHJvcHMsIGlzU3ZnLCBoeWRyYXRlKQogIHNldFN0eWxlKHN0eWxlLCBrZXksIHZhbHVlKQogIHNldFByb3BlcnR5KGRvbSwgbmFtZSwgdmFsdWUsIG9sZFZhbHVlLCBpc1N2ZykKICBldmVudFByb3h5KGUpCiAgZXZlbnRQcm94eUNhcHR1cmUoZSkKICByZW9yZGVyQ2hpbGRyZW4obmV3Vk5vZGUsIG9sZERvbSwgcGFyZW50RG9tKQogIGRpZmYoIHBhcmVudERvbSwgbmV3Vk5vZGUsIG9sZFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBvbGREb20sIGlzSHlkcmF0aW5nICkKICBuZXdUeXBlCigpCiAgY29tbWl0Um9vdChjb21taXRRdWV1ZSwgcm9vdCkKKGMpCihjYikKICBkaWZmRWxlbWVudE5vZGVzKGRvbSwgbmV3Vk5vZGUsIG9sZFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBpc0h5ZHJhdGluZykKICBhcHBseVJlZihyZWYsIHZhbHVlLCB2bm9kZSkKICB1bm1vdW50KHZub2RlLCBwYXJlbnRWTm9kZSwgc2tpcFJlbW92ZSkKICBkb1JlbmRlcihwcm9wcywgc3RhdGUsIGNvbnRleHQpCiAgcmVuZGVyKHZub2RlLCBwYXJlbnREb20sIHJlcGxhY2VOb2RlKQogIGh5ZHJhdGUodm5vZGUsIHBhcmVudERvbSkKICBjbG9uZUVsZW1lbnQodm5vZGUsIHByb3BzLCBjaGlsZHJlbikKICBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY29udGV4dElkKQpDb25zdW1lcihwcm9wcywgY29udGV4dFZhbHVlKQpQcm92aWRlcihwcm9wcywgc3VicywgY3R4KQogIC5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbigpCiAgLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZ1bmN0aW9uKF9wcm9wcykKICAuc3ViID0gZnVuY3Rpb24oYykKICAuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbigpCiAgLl9fYiA9IGZ1bmN0aW9uKHZub2RlKQogIC5fX3IgPSBmdW5jdGlvbih2bm9kZSkKICAuZGlmZmVkID0gZnVuY3Rpb24odm5vZGUpCiAgLl9fYyA9IGZ1bmN0aW9uKHZub2RlLCBjb21taXRRdWV1ZSkKKGNvbXBvbmVudCkKKGNiKQooYykKICAudW5tb3VudCA9IGZ1bmN0aW9uKHZub2RlKQogIGdldEhvb2tTdGF0ZShpbmRleCwgdHlwZSkKICB1c2VTdGF0ZShpbml0aWFsU3RhdGUpCiAgdXNlUmVkdWNlcihyZWR1Y2VyLCBpbml0aWFsU3RhdGUsIGluaXQpCiAgZnVuY3Rpb24oYWN0aW9uKQogIHVzZUVmZmVjdChjYWxsYmFjaywgYXJncykKICB1c2VMYXlvdXRFZmZlY3QoY2FsbGJhY2ssIGFyZ3MpCiAgdXNlUmVmKGluaXRpYWxWYWx1ZSkKKCkKICB1c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgY3JlYXRlSGFuZGxlLCBhcmdzKQogIGZ1bmN0aW9uKCkKICB1c2VNZW1vKGZhY3RvcnksIGFyZ3MpCiAgdXNlQ2FsbGJhY2soY2FsbGJhY2ssIGFyZ3MpCigpCiAgdXNlQ29udGV4dChjb250ZXh0KQogIHVzZURlYnVnVmFsdWUodmFsdWUsIGZvcm1hdHRlcikKICB1c2VFcnJvckJvdW5kYXJ5KGNiKQogIC5jb21wb25lbnREaWRDYXRjaCA9IGZ1bmN0aW9uKGVycikKICBmdW5jdGlvbigpCiAgZmx1c2hBZnRlclBhaW50RWZmZWN0cygpCihjb21wb25lbnQpCiAgYWZ0ZXJOZXh0RnJhbWUoY2FsbGJhY2spCiAgZG9uZSA9IGZ1bmN0aW9uIGRvbmUoKQogIGFmdGVyUGFpbnQobmV3UXVldWVMZW5ndGgpCiAgaW52b2tlQ2xlYW51cChob29rKQogIGludm9rZUVmZmVjdChob29rKQogIGFyZ3NDaGFuZ2VkKG9sZEFyZ3MsIG5ld0FyZ3MpCihhcmcsIGluZGV4KQogIGludm9rZU9yUmV0dXJuKGFyZywgZikKICB0cmVlaWZ5ID0gKGJ1aWx0LCBmaWVsZHMpID0+CiAgX3RyZWVpZnkgPSBidWlsdCA9PgogIGV2YWx1YXRlID0gKGgsIGJ1aWx0LCBmaWVsZHMsIGFyZ3MpID0+CiAgYnVpbGQgPSBmdW5jdGlvbihzdGF0aWNzKQogIGNvbW1pdCA9IGZpZWxkID0+CiAgcmVndWxhciA9IGZ1bmN0aW9uKHN0YXRpY3MpAAAAAAAAAAAfCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					449,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80947,
								80961
							],
							[
								81090,
								81104
							],
							[
								81246,
								81260
							],
							[
								82248,
								82266
							],
							[
								82464,
								82487
							],
							[
								82529,
								82544
							],
							[
								82900,
								82915
							],
							[
								83328,
								83348
							],
							[
								83830,
								83848
							],
							[
								84564,
								84573
							],
							[
								84616,
								84620
							],
							[
								84832,
								84870
							],
							[
								85045,
								85068
							],
							[
								85212,
								85217
							],
							[
								85256,
								85266
							],
							[
								85430,
								85434
							],
							[
								85581,
								85585
							],
							[
								85624,
								85629
							],
							[
								86034,
								86038
							],
							[
								86077,
								86091
							],
							[
								86095,
								86109
							],
							[
								86116,
								86120
							],
							[
								86141,
								86156
							],
							[
								86212,
								86237
							],
							[
								86369,
								86380
							],
							[
								86430,
								86435
							],
							[
								86495,
								86500
							],
							[
								86955,
								86965
							],
							[
								87079,
								87096
							],
							[
								87109,
								87113
							],
							[
								87303,
								87307
							],
							[
								87475,
								87496
							],
							[
								88642,
								88646
							],
							[
								88752,
								88756
							],
							[
								89050,
								89078
							],
							[
								89529,
								89533
							],
							[
								89989,
								89998
							],
							[
								90130,
								90139
							],
							[
								90243,
								90251
							],
							[
								90757,
								90766
							],
							[
								90915,
								90919
							],
							[
								90984,
								91010
							],
							[
								91655,
								91660
							],
							[
								91967,
								91998
							],
							[
								93035,
								93056
							],
							[
								93261,
								93289
							],
							[
								93656,
								93699
							],
							[
								95029,
								95038
							],
							[
								95918,
								95922
							],
							[
								96662,
								96689
							],
							[
								96812,
								96825
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAfCgAAUnVsZXIgPSAoeyBoYW5kbGVDaGFuZ2UsIHN0eWxlID0ge30sIGNsYXNzOiBjbGFzc05hbWUgfSkgPT4KICB2YWx1ZSA9PgogIHByZXNzaW5nRG93biA9ICgpID0+CiAgcHJlc3NpbmdVcCA9ICgpID0+CiAgc3RvcFByZXNzaW5nID0gKCkgPT4KICBvbkNoYW5nZWQgPSB2YWx1ZSA9PgogIG9uQ2hhbmdlZCA9IHZhbHVlID0+CkNsaWNrSGFuZGxlciA9IGNhbGxiYWNrID0+IGUgPT4KVG9nZ2xlSGFuZGxlciA9IChjYWxsYmFjaywgZ2V0U3RhdGUsIHNldFN0YXRlKSA9PiBlID0+Ck1vdXNlRXZlbnRzID0gaCA9PgogIChlLCBzdGF0ZSkgPT4KICAoKSA9PgpDb250YWluZXIgPSAoeyBjbGFzc05hbWUgPSAncGFuZWwnLCB0YWcgPSAnZGl2JywgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CkJ1dHRvbiA9IGFsbFByb3BzID0+CiAgb25QdXNoID0gc3RhdGUgPT4KVG9nZ2xlID0gKHsgY2xhc3NOYW1lLCBpbWFnZXMsIGZuLCBzdGF0ZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KKGNvbXBvbmVudCwgaSkgPT4KICBvblB1c2goZXZlbnQpCkZsb2F0aW5nUGFuZWwgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBvblNpemUsIG9uSGlkZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4KICB1cGRhdGVTaXplKHZhbHVlKQooKSA9PgogICgpID0+CiAgdXBkYXRlSGlkZSh2YWx1ZSkKKCkgPT4KICAoKSA9PgpMYWJlbCA9ICh7IGNsYXNzTmFtZSwgdGV4dCwgdGl0bGUsIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgpEeW5hbWljTGFiZWwgPSAoeyBjYXB0aW9uLCB0aXRsZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KSXRlbSA9ICh7IGNsYXNzTmFtZSA9ICdpdGVtJywgdGl0bGUsIHRvb2x0aXAsIGxhYmVsLCBpY29uLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4KSWNvbiA9ICh7IGNsYXNzTmFtZSA9ICdpY29uJywgY2FwdGlvbiwgaW1hZ2UsIC4uLnByb3BzIH0pID0+ClByb2dyZXNzID0gKHsgY2xhc3NOYW1lLCBwZXJjZW50LCAuLi5wcm9wcyB9KSA9PgpTY2hlbWF0aWNJY29uID0gcHJvcHMgPT4KQm9hcmRJY29uID0gcHJvcHMgPT4KTGlicmFyeUljb24gPSBwcm9wcyA9PgpHQ29kZUljb24gPSBwcm9wcyA9PgogIHZhbHVlID0+ClNob3dIaWRlID0gKHsgaW5pdGlhbFN0YXRlLCBjb21wb25lbnQsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIHNpZ25hbCwgLi4ucHJvcHMgfSkgPT4KICB2YWx1ZSA9PgogIC5yZWYgPSBpbnB1dCA9PgogIC5vblN1Ym1pdCA9IGV2ZW50ID0+CiAgZGF0YSA9PgogIHN0YXRlID0+CiAgbGluZSA9PgogIHRvb2x0aXAgPSAoKSA9PgogIG9uQ2hhbmdlID0gKCkgPT4KICBvblB1c2ggPSAoKSA9PgogIHB1c2hIYW5kbGVyID0gaSA9PiAoZSwgc3RhdGUpID0+CiAgdmFsdWUgPT4KICBsaXN0MnJlID0gbGlzdCA9PgogIHBhcnQgPT4KKCkgPT4KICByID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgogIHByZWQgPSBuYW1lID0+CiAgYyA9PgogIHJlID0+CiAgcmUgPT4KKHsgbmFtZSB9KSA9PgogIGkgPT4KKHsgbmFtZSB9KSA9PgoodmFsdWUsIGtleSkgPT4KVG9vbFRpcEZuID0gKHsgbmFtZSwgZGF0YSwgLi4uaXRlbSB9KSA9PgooW25hbWUsIHZhbHVlXSkgPT4KKFtuYW1lLCB2YWx1ZV0pID0+CiAgc29ydENvbXBhcmUgPSAoYSwgYikgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgaXRlbUNsYXNzOiBpdGVtID0+CiAgb25DaGFuZ2U6ICguLi5hcmdzKSA9PgpQYW5lbCA9ICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CldyYXBJbkFzcGVjdEJveCA9IChlbmFibGUsIHsgd2lkdGggPSAnMTAwJScsIGFzcGVjdCA9IDEsIGNsYXNzTmFtZSB9LCBjaGlsZHJlbikgPT4KICBvbkNoYW5nZSA9IHZhbHVlID0+CiAgb25JbnB1dCA9IGUgPT4KQ2FudmFzID0gKHsgb25Jbml0LCAuLi5wcm9wcyB9KSA9PgooKSA9PgogIGhhbmRsZU1vdXNlTW92ZShlKQogIHN0YXJ0RHJhd2luZyhlKQogIHN0b3BEcmF3aW5nKCkKQ29sb3JXaGVlbCA9ICh7IHJhZGl1cyA9IDUwLCAuLi5wcm9wcyB9KSA9PgogIG9uSW5pdDogKGN0eCwgY2FudmFzLCBzaXplKSA9PgogIGRyYXdDaXJjbGUoKQogIHh5MnBvbGFyKHgsIHkpCiAgcmFkMmRlZyhyYWQpCiAgaHN2MnJnYihodWUsIHNhdHVyYXRpb24sIHZhbHVlKQpDcm9zc0hhaXIgPSAoeyBwb3NpdGlvbiwgc2hvdywgcmFkaXVzID0gMjAsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgpNb3ZlQ3Vyc29yID0gcHJvcHMgPT4KICB2YWx1ZSA9PgogIGVsZW1lbnQgPT4KKGUsIHByZXYpID0+CiAgb25Nb3VzZVdoZWVsKGUpCkZlbmNlID0gKHsgY2hpbGRyZW4sIHN0eWxlID0ge30sIHNpemVMaXN0ZW5lciwgYXNwZWN0TGlzdGVuZXIsIC4uLnByb3BzIH0pID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgpab29tYWJsZSA9ICh7IHR5cGUgPSAnZGl2Jywgc3R5bGUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIG9uUGFuKGFyZykKICBvblpvb20oYXJnKQogIHJlZiA9IGVsID0+CkRpc3BsYXlMaXN0ID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KKCkAAAAAAAAAANEVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "style.css",
			"redo_stack":
			[
				[
					30,
					1,
					"insert",
					{
						"characters": "debu"
					},
					"BAAAABcMAAAAAAAAFwwAAAAAAAABAAAAdRYMAAAAAAAAFgwAAAAAAAABAAAAYhUMAAAAAAAAFQwAAAAAAAABAAAAZRQMAAAAAAAAFAwAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYDAAAAAAAABgMAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 15411,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALMHAAAAAAAAtAcAAAAAAAAAAAAAtAcAAAAAAAC1BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMHAAAAAAAAswcAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"cut",
					null,
					"AQAAADIHAAAAAAAAMgcAAAAAAACDAAAALmJ1dHRvbiB7CiAgdGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IGJsYWNrOwogIG1hcmdpbjogNHB4IDRweCA2cHggNHB4OwogIHBhZGRpbmc6IDRweCA0cHg7CiAgZmxleDogMCAxIGF1dG87CiAgbWluLXdpZHRoOiA1MnB4Owp9Cgo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUHAAAAAAAAMgcAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					2,
					"paste",
					null,
					"AgAAADIHAAAAAAAAtQcAAAAAAAAAAAAAtQcAAAAAAAA4CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIHAAAAAAAAMgcAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAALwHAAAAAAAAvQcAAAAAAAAAAAAAvQcAAAAAAAC+BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwHAAAAAAAAvAcAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAL0HAAAAAAAAvQcAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4HAAAAAAAAvgcAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ".small"
					},
					"BgAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAAC/BwAAAAAAAAAAAAC/BwAAAAAAAMAHAAAAAAAAAAAAAMAHAAAAAAAAwQcAAAAAAAAAAAAAwQcAAAAAAADCBwAAAAAAAAAAAADCBwAAAAAAAMMHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0HAAAAAAAAvQcAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "36"
					},
					"AwAAADYIAAAAAAAANwgAAAAAAAAAAAAANwgAAAAAAAA3CAAAAAAAAAIAAAA1MjcIAAAAAAAAOAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYIAAAAAAAAOAgAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAPIHAAAAAAAA8wcAAAAAAAAAAAAA8wcAAAAAAADzBwAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIHAAAAAAAA8wcAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAPYHAAAAAAAA9wcAAAAAAAAAAAAA9wcAAAAAAAD3BwAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcHAAAAAAAA9gcAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAPoHAAAAAAAA+wcAAAAAAAAAAAAA+wcAAAAAAAD7BwAAAAAAAAEAAAA2",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoHAAAAAAAA+wcAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAP4HAAAAAAAA/wcAAAAAAAAAAAAA/wcAAAAAAAD/BwAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4HAAAAAAAA/wcAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAA4IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAPCAAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8IAAAAAAAADggAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAABIIAAAAAAAAEwgAAAAAAAAAAAAAEwgAAAAAAAATCAAAAAAAAAEAAAA0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIIAAAAAAAAEwgAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"cut",
					null,
					"AQAAAFsKAAAAAAAAWwoAAAAAAAB4AQAACi5idXR0b24gPiBpbWcgewogIG1heC13aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiAxMDAlOwp9Ci5idXR0b24gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXgtd2lkdGg6IDQ4cHg7CiAgbWF4LWhlaWdodDogNDhweDsKICBvdmVyZmxvdzogaGlkZGVuOwp9Ci5idXR0b24gewogIGJvcmRlcjogMnB4IG91dHNldCBoc2woMjIwLCAxMDAlLCA3MCUpOwogIGJveC1zaGFkb3c6IDJweCAycHggNnB4IGhzbCg2MCwgMTAwJSwgODAlKTsKfQoKLmJ1dHRvbiwKLmNlbnRlciwKLmJ1dHRvbiB7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAvKiAgYm9yZGVyOiAycHggc29saWQgaHNsKDIyMCwxMDAlLDUwJSk7Ki8KfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsKAAAAAAAA0wsAAAAAAAAAAAAAAABLQA"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAPkKAAAAAAAAcQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkKAAAAAAAA+QoAAAAAAAAAAAAAAAAiQA"
				],
				[
					64,
					1,
					"cut",
					null,
					"AQAAAPoKAAAAAAAA+goAAAAAAADLAwAALmJ1dHRvbiA+IGltZyB7CiAgbWF4LXdpZHRoOiAxMDAlOwogIG1heC1oZWlnaHQ6IDEwMCU7Cn0KLmJ1dHRvbiB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG1heC13aWR0aDogNDhweDsKICBtYXgtaGVpZ2h0OiA0OHB4OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmJ1dHRvbiB7CiAgYm9yZGVyOiAycHggb3V0c2V0IGhzbCgyMjAsIDEwMCUsIDcwJSk7CiAgYm94LXNoYWRvdzogMnB4IDJweCA2cHggaHNsKDYwLCAxMDAlLCA4MCUpOwp9CgouYnV0dG9uLAouY2VudGVyLAouYnV0dG9uIHsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIC8qICBib3JkZXI6IDJweCBzb2xpZCBoc2woMjIwLDEwMCUsNTAlKTsqLwp9Ci5idXR0b24gewogIGJveC1zaGFkb3c6IDJweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC43KTsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDMwZGVnLAogICAgaHNsYSgyMjAsIDEwMCUsIDQwJSwgMSkgMjAlLAogICAgaHNsYSgyMjAsIDEwMCUsIDUwJSwgMSkgNTAlLAogICAgaHNsYSgyMjAsIDEwMCUsIDQ1JSwgMSkgODAlCiAgKTsgLyogdzNjICovCiAgY29sb3I6IHdoaXRlOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHVzZXItc2VsZWN0OiBub25lOwogIGZvbnQtc2l6ZTogMTZweDsKICBtaW4td2lkdGg6IDQ4cHg7CiAgbWluLWhlaWdodDogNDhweDsKfQouYnV0dG9uLnB1c2hlZCB7CiAgLypiYWNrZ3JvdW5kOiAjZmZmZjAwZWU7Ki8KICAvKiAgZmlsdGVyOiBpbnZlcnQoKTsqLwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzMGRlZywgI2ZmYzMwZiAtMjAlLCAjZmZlY2IzIDg1JSk7CiAgYm9yZGVyOiAycHggaW5zZXQgI2ZmZDI0ZDsKfQouYnV0dG9uLnB1c2hlZCA+IGltZyB7CiAgZmlsdGVyOiBpbnZlcnQoKTsKfQoKLmJ1dHRvbiB7CiAgZGlzcGxheTogaW5saW5lLWZsZXg7Cn0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUOAAAAAAAA+goAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"paste",
					null,
					"AQAAAD8IAAAAAAAACgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8IAAAAAAAAPwgAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"cut",
					null,
					"AQAAALQHAAAAAAAAtAcAAAAAAACJAAAACi5idXR0b24gLnNtYWxsIHsKICB0ZXh0LXNoYWRvdzogMXB4IDFweCAxcHggYmxhY2s7CiAgbWFyZ2luOiAycHggMnB4IDNweCAycHg7CiAgcGFkZGluZzogMnB4IDJweDsKICBmbGV4OiAwIDEgYXV0bzsKICBtaW4td2lkdGg6IDM2cHg7Cn0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQHAAAAAAAAPQgAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIELAAAAAAAAggsAAAAAAAAAAAAAggsAAAAAAACDCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIELAAAAAAAAgQsAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"paste",
					null,
					"AQAAAIMLAAAAAAAADAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMLAAAAAAAAgwsAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAoMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAANDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoMAAAAAAAACgwAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAA0MAAAAAAAAMwwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0MAAAAAAAADQwAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAABsMAAAAAAAAGwwAAAAAAAABAAAAOBoMAAAAAAAAGgwAAAAAAAABAAAANA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwMAAAAAAAAHAwAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoMAAAAAAAAGgwAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					2,
					"left_delete",
					null,
					"AgAAAC8MAAAAAAAALwwAAAAAAAABAAAAOC4MAAAAAAAALgwAAAAAAAABAAAANA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAMAAAAAAAAMAwAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAC4MAAAAAAAALwwAAAAAAAAAAAAALwwAAAAAAAAwDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4MAAAAAAAALgwAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"cut",
					null,
					"AQAAAF4KAAAAAAAAXgoAAAAAAAAoAAAACiAgbWluLXdpZHRoOiA0OHB4OwogIG1pbi1oZWlnaHQ6IDQ4cHg7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYKAAAAAAAAXgoAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"paste",
					null,
					"AQAAAF4KAAAAAAAAhgoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4KAAAAAAAAXgoAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"paste",
					null,
					"AQAAAF8KAAAAAAAAagoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8KAAAAAAAAXwoAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": ".bgo"
					},
					"BAAAAGkKAAAAAAAAagoAAAAAAAAAAAAAagoAAAAAAABrCgAAAAAAAAAAAABrCgAAAAAAAGwKAAAAAAAAAAAAAGwKAAAAAAAAbQoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkKAAAAAAAAaQoAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					3,
					"left_delete",
					null,
					"AwAAAGwKAAAAAAAAbAoAAAAAAAABAAAAb2sKAAAAAAAAawoAAAAAAAABAAAAZ2oKAAAAAAAAagoAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0KAAAAAAAAbQoAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAGoKAAAAAAAAawoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoKAAAAAAAAagoAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAAGoKAAAAAAAAagoAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsKAAAAAAAAawoAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "big"
					},
					"AwAAAGoKAAAAAAAAawoAAAAAAAAAAAAAawoAAAAAAABsCgAAAAAAAAAAAABsCgAAAAAAAG0KAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoKAAAAAAAAagoAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0KAAAAAAAAbgoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0KAAAAAAAAbQoAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHAKAAAAAAAAcQoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAKAAAAAAAAcAoAAAAAAAAAAAAAAOBgQA"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0KAAAAAAAAbgoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0KAAAAAAAAbQoAAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " header"
					},
					"BwAAAG4KAAAAAAAAbwoAAAAAAAAAAAAAbwoAAAAAAABwCgAAAAAAAAAAAABwCgAAAAAAAHEKAAAAAAAAAAAAAHEKAAAAAAAAcgoAAAAAAAAAAAAAcgoAAAAAAABzCgAAAAAAAAAAAABzCgAAAAAAAHQKAAAAAAAAAAAAAHQKAAAAAAAAdQoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4KAAAAAAAAbgoAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAHUKAAAAAAAAdgoAAAAAAAAAAAAAdgoAAAAAAAB3CgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUKAAAAAAAAdQoAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					1,
					"left_delete",
					null,
					"AQAAAHYKAAAAAAAAdgoAAAAAAAABAAAAPg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcKAAAAAAAAdwoAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAHYKAAAAAAAAdwoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYKAAAAAAAAdgoAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " .button"
					},
					"CAAAAHcKAAAAAAAAeAoAAAAAAAAAAAAAeAoAAAAAAAB5CgAAAAAAAAAAAAB5CgAAAAAAAHoKAAAAAAAAAAAAAHoKAAAAAAAAewoAAAAAAAAAAAAAewoAAAAAAAB8CgAAAAAAAAAAAAB8CgAAAAAAAH0KAAAAAAAAAAAAAH0KAAAAAAAAfgoAAAAAAAAAAAAAfgoAAAAAAAB/CgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcKAAAAAAAAdwoAAAAAAAAAAAAAAADwvw"
				],
				[
					191,
					1,
					"paste",
					null,
					"AQAAAA8IAAAAAAAAMggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8IAAAAAAAADwgAAAAAAAAAAAAAAADwvw"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADIIAAAAAAAAMwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIIAAAAAAAAMggAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"cut",
					null,
					"AQAAAFoIAAAAAAAAWggAAAAAAAAUAAAAICBvdmVyZmxvdzogaGlkZGVuOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoIAAAAAAAAbggAAAAAAAAAAAAAAAAAAA"
				],
				[
					197,
					1,
					"paste",
					null,
					"AQAAAA8IAAAAAAAAIwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8IAAAAAAAADwgAAAAAAAAAAAAAAAAAAA"
				],
				[
					204,
					1,
					"paste",
					null,
					"AQAAAJ8HAAAAAAAAwgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8HAAAAAAAAnwcAAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMIHAAAAAAAAwwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIHAAAAAAAAwgcAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"left_delete",
					null,
					"AQAAAGMMAAAAAAAAYwwAAAAAAAATAAAAICBtaW4td2lkdGg6IDM2cHg7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMMAAAAAAAAdgwAAAAAAAAAAAAAAADwvw"
				],
				[
					228,
					1,
					"unindent",
					null,
					"AQAAAGMMAAAAAAAAYwwAAAAAAAACAAAAICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMMAAAAAAAAYwwAAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0LAAAAAAAA/QsAAAAAAAAAAAAAAADwvw"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " .p"
					},
					"AwAAAP4LAAAAAAAA/wsAAAAAAAAAAAAA/wsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAEMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4LAAAAAAAA/gsAAAAAAAAAAAAAAADwvw"
				],
				[
					246,
					2,
					"left_delete",
					null,
					"AgAAAAAMAAAAAAAAAAwAAAAAAAABAAAAcP8LAAAAAAAA/wsAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEMAAAAAAAAAQwAAAAAAAAAAAAAAADwvw"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "#preact"
					},
					"BwAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8LAAAAAAAA/wsAAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAAYMAAAAAAAABwwAAAAAAAAAAAAABwwAAAAAAAAIDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYMAAAAAAAABgwAAAAAAAAAAAAAAADwvw"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgMAAAAAAAACQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAADwvw"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": ".button"
					},
					"BwAAAAkMAAAAAAAACgwAAAAAAAAAAAAACgwAAAAAAAALDAAAAAAAAAAAAAALDAAAAAAAAAwMAAAAAAAAAAAAAAwMAAAAAAAADQwAAAAAAAAAAAAADQwAAAAAAAAODAAAAAAAAAAAAAAODAAAAAAAAA8MAAAAAAAAAAAAAA8MAAAAAAAAEAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkMAAAAAAAACQwAAAAAAAAAAAAAAADwvw"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAD8MAAAAAAAAQAwAAAAAAAAAAAAAQAwAAAAAAABADAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8MAAAAAAAAQAwAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEMMAAAAAAAARAwAAAAAAAAAAAAARAwAAAAAAABEDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMMAAAAAAAARAwAAAAAAAAAAAAAAADwvw"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAEcMAAAAAAAASAwAAAAAAAAAAAAASAwAAAAAAABIDAAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcMAAAAAAAASAwAAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEsMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABMDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwMAAAAAAAASwwAAAAAAAAAAAAAAADwvw"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAFsMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABcDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwMAAAAAAAAWwwAAAAAAAAAAAAAAADwvw"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAF8MAAAAAAAAYAwAAAAAAAAAAAAAYAwAAAAAAABgDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8MAAAAAAAAYAwAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGAMAAAAAAAAYgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAMAAAAAAAAYAwAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					2,
					"left_delete",
					null,
					"AgAAAGEMAAAAAAAAYQwAAAAAAAABAAAAIGAMAAAAAAAAYAwAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIMAAAAAAAAYgwAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"cut",
					null,
					"AQAAAHwLAAAAAAAAfAsAAAAAAAAdAAAAICBib3JkZXI6IDJweCBpbnNldCAjZmZkMjRkOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwLAAAAAAAAmQsAAAAAAAAAAAAAAADwvw"
				],
				[
					302,
					1,
					"paste",
					null,
					"AQAAAHwLAAAAAAAAmQsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwLAAAAAAAAfAsAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"paste",
					null,
					"AQAAAJ0MAAAAAAAAugwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0MAAAAAAAAnQwAAAAAAAAAAAAAAADwvw"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACoDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAAADwvw"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "solid"
					},
					"BgAAAKsMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACsDAAAAAAAAAUAAABpbnNldKwMAAAAAAAArQwAAAAAAAAAAAAArQwAAAAAAACuDAAAAAAAAAAAAACuDAAAAAAAAK8MAAAAAAAAAAAAAK8MAAAAAAAAsAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsMAAAAAAAAsAwAAAAAAAAAAAAAAADwvw"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACoDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACoDAAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgMAAAAAAAApwwAAAAAAAAAAAAAAADwvw"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "000"
					},
					"BAAAALIMAAAAAAAAswwAAAAAAAAAAAAAswwAAAAAAACzDAAAAAAAAAYAAABmZmQyNGSzDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAtQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIMAAAAAAAAuAwAAAAAAAAAAAAAAADwvw"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "fff"
					},
					"BAAAALIMAAAAAAAAswwAAAAAAAAAAAAAswwAAAAAAACzDAAAAAAAAAMAAAAwMDCzDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAtQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIMAAAAAAAAtQwAAAAAAAAAAAAAAADwvw"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "11"
					},
					"AgAAALYMAAAAAAAAtwwAAAAAAAAAAAAAtwwAAAAAAAC4DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYMAAAAAAAAtgwAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					2,
					"left_delete",
					null,
					"AgAAALcMAAAAAAAAtwwAAAAAAAABAAAAMbYMAAAAAAAAtgwAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAGBuQA"
				],
				[
					380,
					1,
					"left_delete",
					null,
					"AQAAAEMMAAAAAAAAQwwAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQMAAAAAAAARAwAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "-2"
					},
					"AgAAAEMMAAAAAAAARAwAAAAAAAAAAAAARAwAAAAAAABFDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMMAAAAAAAAQwwAAAAAAAAAAAAAAADwvw"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAACoMAAAAAAAAKwwAAAAAAAAAAAAAKwwAAAAAAAArDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoMAAAAAAAAKwwAAAAAAAAAAAAAAADwvw"
				],
				[
					403,
					1,
					"paste",
					null,
					"AQAAABQMAAAAAAAAQgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQMAAAAAAAAFAwAAAAAAAAAAAAAAADwvw"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAACoMAAAAAAAAKwwAAAAAAAAAAAAAKwwAAAAAAAArDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoMAAAAAAAAKwwAAAAAAAAAAAAAAADwvw"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAIoMAAAAAAAAiwwAAAAAAAAAAAAAiwwAAAAAAACLDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoMAAAAAAAAiwwAAAAAAAAAAAAAAADwvw"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAI4MAAAAAAAAjwwAAAAAAAAAAAAAjwwAAAAAAACPDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4MAAAAAAAAjwwAAAAAAAAAAAAAAADwvw"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAIoMAAAAAAAAiwwAAAAAAAAAAAAAiwwAAAAAAACLDAAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsMAAAAAAAAigwAAAAAAAAAAAAAAADwvw"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": " rgba"
					},
					"BgAAAN8MAAAAAAAA4AwAAAAAAAAAAAAA4AwAAAAAAADgDAAAAAAAAAUAAAAgI2ZmZuAMAAAAAAAA4QwAAAAAAAAAAAAA4QwAAAAAAADiDAAAAAAAAAAAAADiDAAAAAAAAOMMAAAAAAAAAAAAAOMMAAAAAAAA5AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQMAAAAAAAA3wwAAAAAAAAAAAAAAADwvw"
				],
				[
					428,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOQMAAAAAAAA5gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQMAAAAAAAA5AwAAAAAAAAAAAAAAADwvw"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "254"
					},
					"AwAAAOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAADnDAAAAAAAAOgMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUMAAAAAAAA5QwAAAAAAAAAAAAAAADwvw"
				],
				[
					430,
					2,
					"left_delete",
					null,
					"AgAAAOcMAAAAAAAA5wwAAAAAAAABAAAANOYMAAAAAAAA5gwAAAAAAAABAAAANQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgMAAAAAAAA6AwAAAAAAAAAAAAAAADwvw"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "55,255,255,0,"
					},
					"DQAAAOYMAAAAAAAA5wwAAAAAAAAAAAAA5wwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOkMAAAAAAAAAAAAAOkMAAAAAAAA6gwAAAAAAAAAAAAA6gwAAAAAAADrDAAAAAAAAAAAAADrDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAADxDAAAAAAAAPIMAAAAAAAAAAAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYMAAAAAAAA5gwAAAAAAAAAAAAAAADwvw"
				],
				[
					432,
					1,
					"left_delete",
					null,
					"AQAAAPIMAAAAAAAA8gwAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMMAAAAAAAA8wwAAAAAAAAAAAAAAADwvw"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": ".2"
					},
					"AgAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA8wwAAAAAAAD0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAO0MAAAAAAAA7gwAAAAAAAAAAAAA7gwAAAAAAADuDAAAAAAAAAMAAAAyNTU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0MAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "..8"
					},
					"BAAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADxDAAAAAAAAAIAAAAuMvEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					446,
					2,
					"left_delete",
					null,
					"AgAAAPIMAAAAAAAA8gwAAAAAAAABAAAAOPEMAAAAAAAA8QwAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMMAAAAAAAA8wwAAAAAAAAAAAAAAADwvw"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": "255"
					},
					"BAAAAO0MAAAAAAAA7gwAAAAAAAAAAAAA7gwAAAAAAADuDAAAAAAAAAEAAAAw7gwAAAAAAADvDAAAAAAAAAAAAADvDAAAAAAAAPAMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4MAAAAAAAA7QwAAAAAAAAAAAAAAADwvw"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "inset"
					},
					"BgAAANoMAAAAAAAA2wwAAAAAAAAAAAAA2wwAAAAAAADbDAAAAAAAAAUAAABzb2xpZNsMAAAAAAAA3AwAAAAAAAAAAAAA3AwAAAAAAADdDAAAAAAAAAAAAADdDAAAAAAAAN4MAAAAAAAAAAAAAN4MAAAAAAAA3wwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoMAAAAAAAA3wwAAAAAAAAAAAAAAADwvw"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADXDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1wwAAAAAAAAAAAAAAADwvw"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "210"
					},
					"BAAAAOkMAAAAAAAA6gwAAAAAAAAAAAAA6gwAAAAAAADqDAAAAAAAAAMAAAAyNTXqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkMAAAAAAAA7AwAAAAAAAAAAAAAAADwvw"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": ",80,"
					},
					"BAAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADuDAAAAAAAAAAAAADuDAAAAAAAAO8MAAAAAAAAAAAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAADwvw"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "1)"
					},
					"AgAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADyDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
				],
				[
					481,
					1,
					"left_delete",
					null,
					"AQAAAPIMAAAAAAAA8gwAAAAAAAAJAAAALDI1NSwwLjgp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA+wwAAAAAAAAAAAAAAADwvw"
				],
				[
					492,
					1,
					"left_delete",
					null,
					"AQAAANYMAAAAAAAA1gwAAAAAAAABAAAAMg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcMAAAAAAAA1wwAAAAAAAAAAAAAAADwvw"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANYMAAAAAAAA1wwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1gwAAAAAAAAAAAAAAADwvw"
				],
				[
					508,
					1,
					"paste",
					null,
					"AQAAAOAMAAAAAAAA9wwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAADwvw"
				],
				[
					511,
					1,
					"left_delete",
					null,
					"AQAAAPcMAAAAAAAA9wwAAAAAAAASAAAAcmdiYSgyNTUsMjEwLDgwLDEp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAACQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					514,
					1,
					"left_delete",
					null,
					"AQAAAPEMAAAAAAAA8QwAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					515,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					516,
					2,
					"left_delete",
					null,
					"AgAAAPEMAAAAAAAA8QwAAAAAAAABAAAANvAMAAAAAAAA8AwAAAAAAAABAAAANA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AgAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADyDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
				],
				[
					522,
					1,
					"left_delete",
					null,
					"AQAAAPAMAAAAAAAA8AwAAAAAAAABAAAANg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
				],
				[
					525,
					1,
					"left_delete",
					null,
					"AQAAAPEMAAAAAAAA8QwAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					527,
					1,
					"left_delete",
					null,
					"AQAAAPEMAAAAAAAA8QwAAAAAAAABAAAAMg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					531,
					2,
					"left_delete",
					null,
					"AgAAAOsMAAAAAAAA6wwAAAAAAAABAAAAMOoMAAAAAAAA6gwAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwMAAAAAAAA7AwAAAAAAAAAAAAAAADwvw"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAOoMAAAAAAAA6wwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoMAAAAAAAA6gwAAAAAAAAAAAAAAADwvw"
				],
				[
					536,
					1,
					"left_delete",
					null,
					"AQAAAPQMAAAAAAAA9AwAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUMAAAAAAAA9QwAAAAAAAAAAAAAAADwvw"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "0.8"
					},
					"AwAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA9QwAAAAAAAD2DAAAAAAAAAAAAAD2DAAAAAAAAPcMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQMAAAAAAAA9AwAAAAAAAAAAAAAAADwvw"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AwAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADwDAAAAAAAAAIAAAA1M/AMAAAAAAAA8QwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8MAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "80"
					},
					"AwAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADwDAAAAAAAAAIAAAA2MPAMAAAAAAAA8QwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8MAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "100"
					},
					"BAAAAOoMAAAAAAAA6wwAAAAAAAAAAAAA6wwAAAAAAADrDAAAAAAAAAIAAAA5MOsMAAAAAAAA7AwAAAAAAAAAAAAA7AwAAAAAAADtDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoMAAAAAAAA7AwAAAAAAAAAAAAAAADwvw"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": "75"
					},
					"AwAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADxDAAAAAAAAAIAAAA4MPEMAAAAAAAA8gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "99"
					},
					"AwAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD4DAAAAAAAAAEAAAA4+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
				],
				[
					584,
					1,
					"cut",
					null,
					"AQAAAMwMAAAAAAAAzAwAAAAAAAAwAAAAICBib3JkZXI6IDFweCBpbnNldCBoc2xhKDIyMCwgMTAwJSwgNzUlLCAwLjk5KTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
				],
				[
					585,
					2,
					"paste",
					null,
					"AgAAAMwMAAAAAAAA/AwAAAAAAAAAAAAA/AwAAAAAAAAsDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwMAAAAAAAAzAwAAAAAAAAAAAAAAADwvw"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": ".-"
					},
					"AgAAANQMAAAAAAAA1QwAAAAAAAAAAAAA1QwAAAAAAADWDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAADwvw"
				],
				[
					591,
					2,
					"left_delete",
					null,
					"AgAAANUMAAAAAAAA1QwAAAAAAAABAAAALdQMAAAAAAAA1AwAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1gwAAAAAAAAAAAAAAADwvw"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": "-left"
					},
					"BQAAANQMAAAAAAAA1QwAAAAAAAAAAAAA1QwAAAAAAADWDAAAAAAAAAAAAADWDAAAAAAAANcMAAAAAAAAAAAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAADwvw"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "-bottom"
					},
					"BwAAAAkNAAAAAAAACg0AAAAAAAAAAAAACg0AAAAAAAALDQAAAAAAAAAAAAALDQAAAAAAAAwNAAAAAAAAAAAAAAwNAAAAAAAADQ0AAAAAAAAAAAAADQ0AAAAAAAAODQAAAAAAAAAAAAAODQAAAAAAAA8NAAAAAAAAAAAAAA8NAAAAAAAAEA0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkNAAAAAAAACQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					602,
					1,
					"cut",
					null,
					"AQAAAM0MAAAAAAAAzQwAAAAAAABqAAAAIGJvcmRlci1sZWZ0OiAxcHggaW5zZXQgaHNsYSgyMjAsIDEwMCUsIDc1JSwgMC45OSk7CiAgYm9yZGVyLWJvdHRvbTogMXB4IGluc2V0IGhzbGEoMjIwLCAxMDAlLCA3NSUsIDAuOTkpOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0MAAAAAAAANw0AAAAAAAAAAAAAAADwvw"
				],
				[
					603,
					2,
					"paste",
					null,
					"AgAAAM0MAAAAAAAANw0AAAAAAAAAAAAANw0AAAAAAAChDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0MAAAAAAAAzQwAAAAAAAAAAAAAAADwvw"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AgAAADgNAAAAAAAAOQ0AAAAAAAAAAAAAOQ0AAAAAAAA5DQAAAAAAAAsAAABib3JkZXItbGVmdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgNAAAAAAAAQw0AAAAAAAAAAAAAAADwvw"
				],
				[
					608,
					1,
					"left_delete",
					null,
					"AQAAADgNAAAAAAAAOA0AAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkNAAAAAAAAOQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "border-top:"
					},
					"CwAAADgNAAAAAAAAOQ0AAAAAAAAAAAAAOQ0AAAAAAAA6DQAAAAAAAAAAAAA6DQAAAAAAADsNAAAAAAAAAAAAADsNAAAAAAAAPA0AAAAAAAAAAAAAPA0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD4NAAAAAAAAAAAAAD4NAAAAAAAAPw0AAAAAAAAAAAAAPw0AAAAAAABADQAAAAAAAAAAAABADQAAAAAAAEENAAAAAAAAAAAAAEENAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAABDDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgNAAAAAAAAOA0AAAAAAAAAAAAAAADwvw"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": " none"
					},
					"BQAAAEMNAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABFDQAAAAAAAAAAAABFDQAAAAAAAEYNAAAAAAAAAAAAAEYNAAAAAAAARw0AAAAAAAAAAAAARw0AAAAAAABIDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMNAAAAAAAAQw0AAAAAAAAAAAAAAADwvw"
				],
				[
					612,
					1,
					"left_delete",
					null,
					"AQAAAEgNAAAAAAAASA0AAAAAAAAnAAAAOiAxcHggaW5zZXQgaHNsYSgyMjAsIDEwMCUsIDc1JSwgMC45OSk7",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgNAAAAAAAAbw0AAAAAAAD////////vfw"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEgNAAAAAAAASQ0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgNAAAAAAAASA0AAAAAAAAAAAAAAADwvw"
				],
				[
					615,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAEkNAAAAAAAASg0AAAAAAAAAAAAASg0AAAAAAABMDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYNAAAAAAAANg0AAAAAAAAAAAAAAADwvw"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "none;"
					},
					"BwAAAF4NAAAAAAAAXw0AAAAAAAAAAAAAXw0AAAAAAABfDQAAAAAAACUAAAAxcHggaW5zZXQgaHNsYSgyMjAsIDEwMCUsIDc1JSwgMC45OSk7Sg0AAAAAAABKDQAAAAAAAAIAAAAgIF0NAAAAAAAAXg0AAAAAAAAAAAAAXg0AAAAAAABfDQAAAAAAAAAAAABfDQAAAAAAAGANAAAAAAAAAAAAAGANAAAAAAAAYQ0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4NAAAAAAAAgw0AAAAAAAAAAAAAAADwvw"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": "right"
					},
					"BgAAAE0NAAAAAAAATg0AAAAAAAAAAAAATg0AAAAAAABODQAAAAAAAA0AAABib3JkZXItYm90dG9tTg0AAAAAAABPDQAAAAAAAAAAAABPDQAAAAAAAFANAAAAAAAAAAAAAFANAAAAAAAAUQ0AAAAAAAAAAAAAUQ0AAAAAAABSDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0NAAAAAAAAWg0AAAAAAAAAAAAAAADwvw"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "borer"
					},
					"BQAAAE0NAAAAAAAATg0AAAAAAAAAAAAATg0AAAAAAABPDQAAAAAAAAAAAABPDQAAAAAAAFANAAAAAAAAAAAAAFANAAAAAAAAUQ0AAAAAAAAAAAAAUQ0AAAAAAABSDQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0NAAAAAAAATQ0AAAAAAAAAAAAAAAAyQA"
				],
				[
					625,
					2,
					"left_delete",
					null,
					"AgAAAFENAAAAAAAAUQ0AAAAAAAABAAAAclANAAAAAAAAUA0AAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFINAAAAAAAAUg0AAAAAAAAAAAAAAADwvw"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "der-"
					},
					"BAAAAFANAAAAAAAAUQ0AAAAAAAAAAAAAUQ0AAAAAAABSDQAAAAAAAAAAAABSDQAAAAAAAFMNAAAAAAAAAAAAAFMNAAAAAAAAVA0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFANAAAAAAAAUA0AAAAAAAAAAAAAAADwvw"
				],
				[
					628,
					1,
					"left_delete",
					null,
					"AQAAAEkNAAAAAAAASQ0AAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoNAAAAAAAASg0AAAAAAAAAAAAAAEBUQA"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADcNAAAAAAAAOA0AAAAAAAAAAAAAOA0AAAAAAAA6DQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcNAAAAAAAANw0AAAAAAAAAAAAAAADwvw"
				],
				[
					645,
					1,
					"cut",
					null,
					"AQAAAM4MAAAAAAAAzgwAAAAAAAALAAAAYm9yZGVyLWxlZnQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4MAAAAAAAA2QwAAAAAAAAAAAAAAADwvw"
				],
				[
					648,
					1,
					"paste",
					null,
					"AQAAAEQNAAAAAAAATw0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQNAAAAAAAARA0AAAAAAAAAAAAAAADwvw"
				],
				[
					651,
					1,
					"cut",
					null,
					"AQAAAE8NAAAAAAAATw0AAAAAAAAMAAAAYm9yZGVyLXJpZ2h0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8NAAAAAAAAWw0AAAAAAAAAAAAAAADwvw"
				],
				[
					654,
					1,
					"paste",
					null,
					"AQAAAM4MAAAAAAAA2gwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4MAAAAAAAAzgwAAAAAAAAAAAAAAADwvw"
				],
				[
					666,
					1,
					"cut",
					null,
					"AQAAAMwMAAAAAAAAzAwAAAAAAAA2AAAAICBib3JkZXItcmlnaHQ6IDFweCBpbnNldCBoc2xhKDIyMCwgMTAwJSwgNzUlLCAwLjk5KTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwMAAAAAAAAAg0AAAAAAAAAAAAAAADwvw"
				],
				[
					667,
					2,
					"paste",
					null,
					"AgAAAMwMAAAAAAAAAg0AAAAAAAAAAAAAAg0AAAAAAAA4DQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwMAAAAAAAAzAwAAAAAAAAAAAAAAADwvw"
				],
				[
					673,
					4,
					"left_delete",
					null,
					"BAAAANkMAAAAAAAA2QwAAAAAAAABAAAAdNgMAAAAAAAA2AwAAAAAAAABAAAAaNcMAAAAAAAA1wwAAAAAAAABAAAAZ9YMAAAAAAAA1gwAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoMAAAAAAAA2gwAAAAAAAAAAAAAAADwvw"
				],
				[
					674,
					1,
					"insert",
					{
						"characters": "adius"
					},
					"BQAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAADYDAAAAAAAANkMAAAAAAAAAAAAANkMAAAAAAAA2gwAAAAAAAAAAAAA2gwAAAAAAADbDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYMAAAAAAAA1gwAAAAAAAAAAAAAAADwvw"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsMAAAAAAAA3AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsMAAAAAAAA2wwAAAAAAAAAAAAAAADwvw"
				],
				[
					676,
					1,
					"left_delete",
					null,
					"AQAAANsMAAAAAAAA2wwAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAADwvw"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANsMAAAAAAAA3AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsMAAAAAAAA2wwAAAAAAAAAAAAAAADwvw"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": " 2x"
					},
					"AwAAANwMAAAAAAAA3QwAAAAAAAAAAAAA3QwAAAAAAADeDAAAAAAAAAAAAADeDAAAAAAAAN8MAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwMAAAAAAAA3AwAAAAAAAAAAAAAAADwvw"
				],
				[
					681,
					1,
					"left_delete",
					null,
					"AQAAAN8MAAAAAAAA3wwAAAAAAAAmAAAAOiAxcHggaW5zZXQgaHNsYSgyMjAsIDEwMCUsIDc1JSwgMC45OSk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8MAAAAAAAABQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAHIMAAAAAAAAcwwAAAAAAAAAAAAAcwwAAAAAAABzDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIMAAAAAAAAcwwAAAAAAAAAAAAAAADwvw"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAACYMAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAnDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcMAAAAAAAAJgwAAAAAAAAAAAAAAADwvw"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAACIMAAAAAAAAIwwAAAAAAAAAAAAAIwwAAAAAAAAjDAAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIMAAAAAAAAIwwAAAAAAAAAAAAAAADwvw"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAACoMAAAAAAAAKwwAAAAAAAAAAAAAKwwAAAAAAAArDAAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoMAAAAAAAAKwwAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": ".sna"
					},
					"BAAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAADwCwAAAAAAAPELAAAAAAAAAAAAAPELAAAAAAAA8gsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuCwAAAAAAAO4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAPELAAAAAAAA8QsAAAAAAAABAAAAYfALAAAAAAAA8AsAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyCwAAAAAAAPILAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "mall"
					},
					"BAAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAADyCwAAAAAAAPMLAAAAAAAAAAAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwCwAAAAAAAPALAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAPQLAAAAAAAA9QsAAAAAAAAAAAAA9QsAAAAAAAD2CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0CwAAAAAAAPQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " img"
					},
					"BAAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAD4CwAAAAAAAPkLAAAAAAAAAAAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2CwAAAAAAAPYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPoLAAAAAAAA+wsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6CwAAAAAAAPoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPsLAAAAAAAA/QsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7CwAAAAAAAPsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPsLAAAAAAAA+wsAAAAAAAABAAAAe/sLAAAAAAAA+wsAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8CwAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7CwAAAAAAAPsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAPsLAAAAAAAA+wsAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8CwAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPsLAAAAAAAA/QsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7CwAAAAAAAPsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA/QsAAAAAAAD+CwAAAAAAAAAAAAD9CwAAAAAAAP8LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8CwAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "transform"
					},
					"CQAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/CwAAAAAAAP8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": ": $0;"
					},
					"AQAAAAgMAAAAAAAACwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIDAAAAAAAAAgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "scale"
					},
					"BQAAAAoMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAAA0MAAAAAAAAAAAAAA0MAAAAAAAADgwAAAAAAAAAAAAADgwAAAAAAAAPDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKDAAAAAAAAAoMAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA8MAAAAAAAAEQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPDAAAAAAAAA8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "0.8"
					},
					"AwAAABAMAAAAAAAAEQwAAAAAAAAAAAAAEQwAAAAAAAASDAAAAAAAAAAAAAASDAAAAAAAABMMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQDAAAAAAAABAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUDAAAAAAAABQMAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "// prettier-ignore-start\nimport {\n  Transformation,\n  Rotation,\n  Translation,\n  Scaling,\n  MatrixTransformation,\n  TransformationList\n} from './lib/geom/transformation.js';\nimport dom from './lib/dom.js';\nimport { ReactComponent, Fragment } from './lib/dom/preactComponent.js';\nimport { iterator, eventIterator } from './lib/dom/iterator.js';\nimport keysim from './lib/dom/keysim.js';\nimport geom, { isBBox, BBox, Polygon, Circle, LineList, Arc } from './lib/geom.js';\nimport {\n  normalizePath,\n  reverseNormalizedPath,\n  reverseSubPath,\n  reversePath\n} from './lib/svg/pathReverse.js';\nimport { FixedMedium } from './lib/svg/fixedMedium.js';\nimport { TouchListener } from './lib/touchHandler.js';\nimport { trkl } from './lib/trkl.js';\nimport { ColorMap } from './lib/draw/colorMap.js';\nimport { ClipperLib } from './lib/clipper-lib.js';\nimport Shape from './lib/clipper.js';\nimport { devtools } from './lib/devtools.js';\nimport Util from './lib/util.js';\nimport tlite from './lib/tlite.js';\nimport { debounceAsync } from './lib/async/debounce.js';\nimport { SvgPath } from './lib/svg/path.js';\nimport objectInspect from './lib/objectInspect.js';\nimport tXml from './lib/tXml.js';\nimport deep from './lib/deep.js';\nimport Alea from './lib/alea.js';\nimport path from './lib/path.js';\nimport { TimeoutError } from './lib/repeater/timers.js';\nimport * as Timers from './lib/repeater/timers.js';\nimport asyncHelpers from './lib/async/helpers.js';\nimport { Cache } from './lib/dom/cache.js';\nimport { CacheStorage } from './lib/dom/cacheStorage.js';\n/* prettier-ignore */ import { InterpretGcode, gcodetogeometry, GcodeObject, gcodeToObject, objectToGcode, parseGcode, GcodeParser, GCodeLineStream, parseStream, parseFile, parseFileSync, parseString, parseStringSync, noop, Interpreter } from './lib/gcode.js';\nimport { Iterator } from './lib/iterator.js';\nimport { Functional } from './lib/functional.js';\nimport { makeLocalStorage } from './lib/autoStore.js';\nimport { Repeater } from './lib/repeater/repeater.js';\nimport { useResult, useValue } from './lib/repeater/react-hooks.js';\nimport { Portal } from './lib/dom/preactComponent.js';\nimport renderToString from './lib/preact-render-to-string.js';\nimport { BinaryTree } from './lib/container/binaryTree.js';\nimport LogJS from './lib/log.js';\nimport serial from './serial.js';\nimport { toXML, ImmutablePath, MutablePath, arrayDiff, objectDiff } from './lib/json.js';\nimport { Object2Array, XmlObject, XmlAttr, ImmutableXPath, MutableXPath } from './lib/xml.js';\nimport {\n  RGBA,\n  isRGBA,\n  ImmutableRGBA,\n  HSLA,\n  isHSLA,\n  ImmutableHSLA,\n  ColoredText\n} from './lib/color.js';\n//import { hydrate, Fragment, createRef, isValidElement, cloneElement, toChildArray } from './modules/preact/dist/preact.mjs';\n//import React, { h, html, render, Fragment, Component, useState, useLayoutEffect, useRef } from './lib/dom/preactComponent.js';\nimport * as React from './lib/preact.mjs';\nimport { h, html, render, Component, useState, useLayoutEffect, useRef } from './lib/preact.mjs';\nimport {\n  Chooser,\n  DynamicLabel,\n  Button,\n  FileList,\n  Panel,\n  SizedAspectRatioBox,\n  TransformedElement,\n  Canvas,\n  ColorWheel,\n  Slider,\n  CrossHair,\n  FloatingPanel,\n  DropDown,\n  Conditional,\n  Fence,\n  Zoomable,\n  DisplayList,\n  Ruler,\n  Toggle,\n  ButtonGroup\n} from './components.js';\nimport * as components from './components.js';\nimport { Message } from './message.js';\n\nimport {\n  useActive,\n  useClickout,\n  useDimensions,\n  useDoubleClick,\n  useElement,\n  EventTracker,\n  useEvent,\n  useFocus,\n  useRecognizers,\n  useDrag,\n  usePinch,\n  useWheel,\n  useMove,\n  useScroll,\n  useGesture,\n  useHover,\n  useMousePosition,\n  usePanZoom,\n  useToggleButtonGroupState\n} from './lib/hooks.js';\n\nimport { WebSocketClient } from './lib/net/websocket-async.js';\n/* prettier-ignore */ import * as ecmascript from './lib/ecmascript.js';\nimport {\n  PipeTo,\n  AsyncRead,\n  AsyncWrite,\n  DebugTransformStream,\n  TextEncodeTransformer,\n  TextEncoderStream,\n  TextDecodeTransformer,\n  TextDecoderStream,\n  TransformStreamSink,\n  TransformStreamSource,\n  TransformStreamDefaultController,\n  TransformStream,\n  ArrayWriter,\n  readStream,\n  WriteToRepeater,\n  LogSink,\n  RepeaterSink,\n  StringReader,\n  LineReader,\n  ChunkReader,\n  ByteReader,\n  PipeToRepeater,\n  WritableStream,\n  ReadFromIterator\n} from './lib/stream.js?ts=<?TS?>';\nimport {\n  PrimitiveComponents,\n  ElementNameToComponent,\n  ElementToComponent\n} from './lib/eagle/components.js';\nimport {\n  useTrkl,\n  RAD2DEG,\n  DEG2RAD,\n  VERTICAL,\n  HORIZONTAL,\n  HORIZONTAL_VERTICAL,\n  DEBUG,\n  log,\n  setDebug,\n  PinSizes,\n  EscapeClassName,\n  UnescapeClassName,\n  LayerToClass,\n  ElementToClass,\n  ClampAngle,\n  AlignmentAngle,\n  MakeRotation,\n  EagleAlignments,\n  Alignment,\n  SVGAlignments,\n  AlignmentAttrs,\n  RotateTransformation,\n  LayerAttributes,\n  InvertY,\n  PolarToCartesian,\n  CartesianToPolar,\n  CalculateArcRadius,\n  LinesToPath,\n  MakeCoordTransformer,\n  useAttributes,\n  RenderArc\n} from './lib/eagle/renderUtils.js';\nimport { Wire } from './lib/eagle/components/wire.js';\nimport { Instance } from './lib/eagle/components/instance.js';\nimport { SchematicSymbol } from './lib/eagle/components/symbol.js';\nimport { Emitter, EventIterator, EventEmitter, EventTarget } from './events.js';\nimport { Slot, SlotProvider } from './slots.js';\nimport Voronoi from './lib/geom/voronoi.js';\nimport GerberParser from './lib/gerber/parser.js';\nimport { lazyInitializer } from './lib/lazyInitializer.js';\nimport {\n  EagleElementProxy,\n  BoardRenderer,\n  DereferenceError,\n  EagleDocument,\n  EagleElement,\n  EagleNode,\n  EagleNodeList,\n  EagleNodeMap,\n  EagleProject,\n  EagleRef,\n  EagleReference,\n  EagleSVGRenderer,\n  Renderer,\n  SchematicRenderer,\n  LibraryRenderer,\n  makeEagleElement,\n  makeEagleNode\n} from './lib/eagle.js';\n//import PureCache from 'pure-cache';\nimport { brcache, lscache, BaseCache, CachedFetch } from './lib/lscache.js'; //const React = {Component, Fragment, create: h, html, render, useLayoutEffect, useRef, useState };\nimport commands, {\n  ListProjects,\n  GetLayer,\n  AddLayer,\n  BoardToGerber,\n  GerberToGcode,\n  GcodeToPolylines,\n  ClearCache\n} from './commands.js';\nimport { NormalizeResponse, ResponseData, FetchURL, FetchCached } from './lib/fetch.js';\nimport github, {\n  GithubListFiles,\n  GithubListRepositories,\n  GithubRepositories,\n  GithubListContents,\n  ListGithubRepoServer\n} from './lib/github.js';\n// prettier-ignore-end\n\n/* prettier-ignore */ const { Align, AlignToString, Anchor, CSS, Event, CSSTransformSetters, Element, ElementPosProps, ElementRectProps, ElementRectProxy, ElementSizeProps, ElementTransformation, ElementWHProps, ElementXYProps, isElement, isLine, isMatrix, isNumber, isPoint, isRect, isSize, Line,Matrix,  Point, PointList, Polyline, Rect, Select, Size, SVG, Transition, TransitionList, TRBL, Tree } = { ...dom, ...geom };\n\nimport { classNames } from './lib/classNames.js';\nimport rpc from './quickjs/qjs-net/rpc.js';\nimport * as rpc2 from './quickjs/qjs-net/rpc.js';\nimport { fnmatch, PATH_FNM_MULTI } from './lib/fnmatch.js';\n\nUtil.colorCtor = ColoredText;\nconst elementDefaultAttributes = {\n  stroke: 'red',\n  fill: 'none',\n  'stroke-linecap': 'round',\n  'stroke-linejoin': 'round',\n  'stroke-width': 0.1\n};\n\n/* prettier-ignore */\n//Util.extend(window, { React, ReactComponent, WebSocketClient, html }, { dom, keysim }, geom, { Iterator, Functional }, { EagleNodeList, EagleNodeMap, EagleDocument, EagleReference, EagleNode, EagleElement }, { toXML, XmlObject, XmlAttr }, { CTORS, ECMAScriptParser, ESNode, estree, Factory, Lexer, Parser, PathReplacer, Printer, Stack, Token, ReactComponent, ClipperLib, Shape, isRGBA, RGBA, ImmutableRGBA, isHSLA, HSLA, ImmutableHSLA, ColoredText, Alea, Message }, { Chooser, useState, useLayoutEffect, useRef, Polygon, Circle } );\nconst Timer = { ...Timers, once: dom.Timer };\n\nlet currentProj = trkl.property(window, 'project');\nlet layerList = trkl.property(window, 'layers', { value: [] });\nlet gcode = trkl(null);\nlet wantAuthorization = trkl(null);\n\nlet open = trkl();\nlet showSearch = trkl(true);\nlet dump = trkl({});\nlet cache = new lscache();\n\nlet projectName = 'Headphone-Amplifier-ClassAB-alt3';\nlet palette = null;\nlet svgElement;\nlet brdXml, schXml, brdDom, schDom;\nlet board, schematic;\nlet loadedProjects = [];\nlet container;\n\nlet projectFiles = [];\nlet activeFile;\nlet transform = trkl(new TransformationList());\nlet sizeListener = trkl({});\nlet aspectListener = trkl(1);\nconst documentTitle = trkl('');\nconst documentSize = trkl('');\nconst loading = trkl(false);\nconst filePanel = trkl(false);\n\nconst SaveConfig = Util.debounce(() => {\n  let obj = store.toObject();\n\n  return fetch('config', {\n    method: 'POST',\n    headers: { 'content-type': 'application/octet-stream' },\n    body: JSON.stringify(obj)\n  }).then(res => res.json());\n}, 5 * 1000);\n\nconst LoadConfig = Util.once(() =>\n  fetch('config')\n    .then(ResponseData)\n    .then(r => (console.log('config:', r), r))\n    //    .then(r => r.json())\n    .then(r => ({\n      ...r,\n      entries() {\n        return Object.entries(r);\n      }\n    }))\n);\n\nlet store = (window.store = makeLocalStorage());\n\nlet projects = trkl([]);\nlet socket = trkl();\nlet config = {\n  listURL: trkl(store.get('url') || null),\n  searchFilter: trkl(store.get('filter') || '*'),\n  zoomLog: trkl(store.get('zoom') || null),\n  logSize: trkl(store.get('console') || null),\n  debugFlag: trkl(store.get('debug') || false),\n  credentials: trkl(store.get('auth') || {}),\n  showGrid: trkl(store.get('grid') || true),\n  sortOrder: trkl(store.get('sortOrder') || -1),\n  sortKey: trkl(store.get('sortKey') || 'name'),\n  currentProject: trkl(store.get('currentProject') || null)\n};\n\nconst GetProject = arg => {\n  let ret =\n    typeof arg == 'number'\n      ? projects()[arg]\n      : typeof arg == 'string'\n      ? projects().find(p => p.name == arg)\n      : arg;\n  if(typeof ret == 'string') ret = { name: ret };\n  return ret;\n};\nlet elementChildren = null;\nlet elementGeometries = null;\n//let zoomValue = Util.getSet(() => ZoomFactor(config.zoomLog()), value => config.zoomLog(ZoomLog(value)));\nlet zoomValue = Util.deriveGetSet(config.zoomLog, ZoomFactor, ZoomLog);\n\nconfig.zoomLog.subscribe(AdjustZoom);\n\nconst add = (arr, ...items) => [...(arr ? arr : []), ...items];\n\nconst useSlot = (arr, i) => [() => arr[i], v => (arr[i] = v)];\nconst trklGetSet = (get, set) => value => value !== undefined ? set(value) : get();\n//const useTrkl = trkl => [() => trkl(), value => trkl(value)];\n\nconst MouseEvents = h => ({\n  onMouseDown: h,\n  /*  onBlur: h,*/ onMouseOut: h,\n  onMouseUp: h\n});\n\ntlite(() => ({\n  grav: 'nw',\n  attrib: ['data-tlite', 'data-tooltip', 'title', 'data-filename']\n}));\n\nconst utf8Decoder = new TextDecoder('utf-8');\nlet svgOwner, parent;\n\nconst svgFactory = Util.memoize((parent, delegate) => {\n  parent = parent ? Element.find(parent) : project.svgElement.parentElement;\n  const factory = SVG.factory({\n    ...delegate,\n    append_to(elem, p) {\n      if(delegate.append_to) delegate.append_to(elem, p || parent);\n    }\n  });\n  let rect = calcViewBox(parent);\n  let zIndex = maxZIndex() + 1;\n  const svg = [\n    'svg',\n    {\n      viewBox: rect.toString(),\n      style: `position: absolute; left: 0; top: 0; z-index: ${zIndex}; stroke: #000, fill: none;`\n    },\n    [\n      ['defs'],\n      [\n        'g',\n        {\n          transform: ` scale(1,-1) translate(0,1.27) translate(0,${-rect.y2}) `\n        },\n        [['rect', { ...rect.toObject(), fill: 'hsla(0,0%,50%,0.3333)' }]]\n      ]\n    ]\n  ];\n  const element = (svgOwner = factory(...svg));\n  factory.root = parent = element.lastElementChild;\n  return factory;\n});\n\nfunction DrawSVG(...args) {\n  const factory = svgFactory('body', {\n    append_to(elem, p) {\n      //console.log('append_to', this, { elem, p });\n      (p || this.root).appendChild(elem);\n      adjustViewBox(elem);\n    }\n  });\n  let e;\n  /*let parent = project.svg.parentElement.lastElementChild;\n    const append = e => parent.appendChild(e);*/\n  let c = RGBA.random();\n  let [tag, attrs, children] = args;\n  if(typeof tag == 'string') {\n    // console.log('draw(', ...args, ')');\n    e = factory(tag, { stroke: c.hex(), 'stroke-width': 0.1, ...attrs }, children);\n  } else if(Util.isArray(args[0])) {\n    let items = args.shift();\n    // document.querySelector('#main > div > div > div > svg:nth-child(2) > g');\n    //   setViewBox(factory.root.ownerSVGElement||factory.root, BBox.from(items));\n    for(let item of items) {\n      let line;\n      if(isLine(item)) line = new Line(item);\n      if(line) {\n        e = factory('line', {\n          ...line.toObject(),\n          stroke: c.hex(),\n          'stroke-width': 0.1\n        });\n      }\n    }\n\n    return;\n  }\n\n  function adjustViewBox(e) {\n    let ownerSVG;\n\n    if(!(ownerSVG = e.ownerSVGElement)) return;\n    let rect = new Rect(ownerSVG.getBBox());\n    //console.log('ownerSVG:', ownerSVG, 'rect:', rect);\n    ownerSVG.setAttribute('viewBox', rect + '');\n    if(!ownerSVG.style.maxHeight)\n      Element.setCSS(ownerSVG, { maxWidth: '100vw', maxHeight: '100vh' });\n  }\n\n  return e || factory;\n}\n\nfunction calcViewBox(box) {\n  box =\n    box ||\n    (project &&\n      project.doc &&\n      BBox.from(project.doc.getMeasures(true) || project.doc.getBounds(0)));\n  box = box || Element.rect('.aspect-ratio-box-inside');\n  const { width, height, x, y } = box;\n  let { x1, y1, x2, y2 } = new Rect(x, y, width, height);\n  const rect = new BBox(x1, y1 - y2, x2 - x1, y2);\n  return rect;\n}\n\nfunction setViewBox(svgOwner, box) {\n  svgOwner = svgOwner || [...Element.findAll('svg', Element.find('#main'))].reverse()[0];\n  const rect = box; // instanceof BBox ? box : DrawSVG.calcViewBox(box);\n  rect.y1 -= rect.y2;\n  rect.x2 -= rect.x1;\n  //console.log('setViewBox', { svgOwner, rect, box });\n  svgOwner.setAttribute('viewBox', rect.toString());\n  svgOwner.lastElementChild.setAttribute('transform', `scale(1,-1)  translate(0,${-rect.height})`);\n  Element.attr(svgOwner.lastElementChild.firstElementChild, {\n    ...rect.toRect()\n  });\n}\nconst ElementToXML = (e, predicate) => {\n  if(globalThis.XMLSerializer) return new XMLSerializer().serializeToString(e);\n\n  const x = Element.toObject(e, { predicate });\n\n  for(let [value, path] of deep.iterate(x, (v, k) => k[k.length - 1] == 'd')) {\n    deep.set(x, path, value.trim().replace(/\\s+/g, ' '));\n  }\n\n  for(let [value, path] of deep.iterate(x, (v, k) => k[k.length - 1] == 'id' && v == 'rects'))\n    deep.unset(x, path.slice(0, -1));\n  for(let [value, path] of deep.iterate(x, (v, k) => /(^data-|^class$)/.test(k[k.length - 1])))\n    deep.unset(x, path);\n  //console.log('x:', x);\n  return Element.toString(x, { newline: '\\n' });\n};\n\nconst filesystem = {\n  async readFile(filename) {\n    return await FetchURL(`static/${filename}`);\n  },\n  async writeFile(filename, data, overwrite = true) {\n    return await fetch('save', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/octet-stream',\n        'Content-Disposition': `attachment; filename=\"${filename}\"`\n      },\n      body: data + ''\n    });\n  },\n  async exists(filename) {},\n  async realpath(filename) {}\n};\n\nasync function LoadFile(file) {\n  let { url, name } =\n    typeof file == 'string' ? { url: file, name: file.replace(/.*\\//g, '') } : GetProject(file);\n  LogJS.info(`LoadFile ${name}`);\n  url = /:\\/\\//.test(url) ? url : /^(tmp|data|static)\\//.test(url) ? '/' + url : `/data/${name}`;\n  let response = await FetchURL(url);\n  let xml = await response.text();\n  let doc = new EagleDocument(await xml, null, name, null, filesystem);\n  if(/\\.brd$/.test(name)) window.board = doc;\n  if(/\\.sch$/.test(name)) window.schematic = doc;\n  if(/\\.lbr$/.test(name)) window.libraries = add(window.libraries, doc);\n  return doc;\n}\n\nasync function SaveFile(filename, data, contentType) {\n  if(!data.endsWith('\\n')) data += '\\n';\n  let response = await fetch('save', {\n    method: 'post',\n    headers: {\n      'Content-Type': contentType || 'application/xml',\n      'Content-Disposition': `attachment; filename=\"${filename}\"`\n    },\n    body: data\n  });\n  let { status, statusText } = response;\n  //console.log('SaveFile', {filename,data, response});\n  globalThis.saveResponse = response;\n  let body = await response\n    .text()\n    .then(s => JSON.parse(s))\n    .catch(() => null);\n  let headers = [...(await response.headers.entries())];\n  //console.log('SaveFile', { body, headers });\n  const result = { status, statusText };\n  const request = new Request(`/tmp/${filename}`);\n  response = new Response(data, { status, statusText });\n  let cache = await caches.open('fetch');\n  let r = await cache.put(request, response);\n  LogJS.info(`${filename} saved & cached (${body.size} bytes)`);\n  return result;\n}\n\nasync function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51]) {\n  const { doc } = project;\n  const { basename, typeName } = doc;\n  if(!filename) filename = `${doc.basename}.${doc.typeName}.svg`;\n  //console.log('SaveSVG(', filename, ', ', layers, ')');\n  let predicate = element => {\n    /*  if(element.hasAttribute) {if(!element.hasAttribute('data-layer')) return true;\n    const layer = element.getAttribute('data-layer');\n    let [number, name] = layer.split(/\\ /);\n    if(number !== undefined && name !== undefined) return layers.indexOf(+number) != -1 || layers.indexOf(name) != -1;\n  }*/\n    return true;\n  };\n  let data = ElementToXML(project.svgElement, predicate);\n  //let data = ElementToXML(project.svgElement);\n  return await SaveFile(filename.replace(/\\.svg$/i, '.svg'), data);\n}\n\nasync function LoadSVG(filename) {\n  let data = await FetchURL(filename).then(ResponseData);\n  let xml = tXml(data.replace(/<\\?xml[^>]*>/, ''));\n  let element = Element.create('div', { style: { display: 'inline-block' } }, 'body');\n  let component = ReactComponent.fromObject(xml[0]);\n  React.render(component, element);\n  return element.firstElementChild;\n}\n\nasync function LoadImage(filename) {\n  let element = Element.create('img', { src: filename }, 'body');\n  return element;\n}\n\nconst RenderComponent = (() => {\n  let id = 1;\n  return function RenderComponent(component) {\n    let element = Element.create(\n      'div',\n      { id: `react-${id++}`, style: { display: 'inline-block' } },\n      'body'\n    );\n    React.render(component, element);\n    return element;\n  };\n})();\n\nconst ModifyColors = fn => e => {\n  const { type, buttons } = e;\n  if(type.endsWith('down')) {\n    if(!window.c) window.c = SVG.allColors(project.svgElement);\n    let { c } = window;\n    c.dump();\n    fn(c);\n  }\n};\n\nconst FindLayer = name_or_id => {\n  for(let id of (name_or_id + '').split(/\\s+/g).map(n => (isNaN(n) ? n : +n))) {\n    const layer = layers.find(l => l.i == id || l.name == id);\n    if(layer) return layer;\n  }\n};\n\nconst GerberLayers = {\n  GTL: 'Top (copper) Layer',\n  GBL: 'Bottom (copper) Layer ',\n  GTO: 'Top Overlay',\n  GBO: 'Bottom Overlay ',\n  GTP: 'Top Paste Mask ',\n  GBP: 'Bottom Paste Mask ',\n  GTS: 'Top Solder Mask ',\n  GBS: 'Bottom Solder Mask ',\n  GKO: 'Keep-Out Layer ',\n  GML: 'Mill layer',\n  gpi: 'Photoplotter info file',\n  TXT: 'Drill file'\n};\n\nlet svgDocFactory = Util.memoize((id = '#geom') =>\n  SVG.factory(Element.find(id)).initialize('svg', {\n    width: window.innerWidth,\n    height: window.innerHeight /*, style: \"pointer-events: none;\"*/\n  })\n);\nlet svgGroupFactory = Util.memoize((props = {}) =>\n  svgDocFactory().setRoot('g', {\n    stroke: '#f00',\n    'stroke-width': 3,\n    fill: 'none',\n    ...props\n  })\n);\n\nconst maxZIndex = () =>\n  Math.max(\n    ...Element.findAll('*')\n      .map(e => Element.getCSS(e, 'z-index'))\n      .filter(z => !/(auto)/.test(z))\n      .map(z => +z)\n  );\n\nconst groupProps = Util.memoize(() => {\n  let transform = `translate(300,-50)`;\n  const prng = new Alea(234234800);\n  const randomColor = () => HSLA.random([240, -120], [100, 100], [30, 75], [1, 1], prng).hex();\n  return [\n    { stroke: randomColor(), transform },\n    { stroke: randomColor(), transform },\n    { stroke: randomColor(), transform }\n  ];\n});\n\nfunction DrawArc(start, end, angle) {\n  let [r, g, b] = groupProps().map(props => svgGroupFactory(props).clear());\n\n  let [p1, p2] = [start, end].map(p => new Point(p));\n\n  let line = new Line(p1, p2);\n  let radius = Arc.radius(angle, p1, p2);\n  let length = Arc.length(angle, p1, p2);\n  let center = Arc.center(p1.x, p1.y, p2.x, p2.y, radius);\n\n  let rect = new Rect({ x: 50, y: 350, width: 300, height: 300 });\n  let middle = line.pointAt(0.5);\n  let points = [\n    ...line,\n    middle,\n    center\n    //...[0.25, 0.75].map(a => line.pointAt(a))\n  ];\n  let degA = (angle * 180) / Math.PI;\n  let a_b = (360 - degA) / 2;\n  let angles = [90, -a_b, a_b];\n  //console.log('angles:', angles);\n  let matrices = angles.map(a => new Rotation(a).toMatrix());\n\n  let slopes = matrices.map(m => new Point(m.transform_point(line.slope)).normal());\n\n  slopes[1].mul(-1);\n  //console.log('slopes:', slopes);\n\n  // r('rect', rect.toObject());\n  let rot = new TransformationList([\n    new Translation(middle.x, middle.y),\n    new Rotation(90),\n    new Translation(-middle.x, -middle.y)\n  ]);\n  //console.log('rot:', rot + '');\n  let pivots = [middle, line.a, line.b];\n  let colors = ['#EB1F00', '#F0CC11', '#34DB05', '#0078F0', '#8D1AE6'];\n  let compound = ['#2E17B3', '#554D85', '#3578E6', '#E9B470', '#B35917'];\n  let palette = ['ff595e', 'ffca3a', '8ac926', '1982c4', '6a4c93'].map(hex => `#${hex}`);\n  let rainbow = ['#E64535', '#E6AA4C', '#D0E634', '#1EE67B', '#3394E8'];\n  let lines2 = [new Line(p1, center), new Line(p2, center)];\n\n  let norms = [p1, p2].map(p => p.diff(center)).map(p => p.normal());\n  angles = norms.map(p => Util.mod(p.toAngle(true), 360));\n  //console.log('angles:', angles);\n  //console.log('angles abs:', Math.abs(angles[0] - angles[1]));\n  //console.log('angle :', angle);\n  //console.log('norms:', norms);\n  //console.log('center:', center);\n\n  let range = norms.map(({ x, y }) => new Point(x * radius, y * radius).sum(center));\n  let deg = (angle * 180) / Math.PI;\n  let approx = Util.range(0, deg, 10).map(a =>\n    Point.fromAngle((a * Math.PI) / 180 - angle, radius - 30)\n  );\n\n  //console.log('range:', range);\n  //console.log('approx:', approx);\n  //range = range.map(v => v. sum(center));\n\n  points.forEach(({ x, y }, i) =>\n    b('circle', {\n      cx: x,\n      cy: y,\n      r: 10,\n      fill: rainbow[i],\n      'stroke-width': 2,\n      stroke: 'black'\n    })\n  );\n\n  let svg = g('line', { ...line.toObject() }).ownerSVGElement;\n  //console.log('svg:', svg);\n  svg.addEventListener('click', e => {\n    //console.log('clicked:', e.target);\n    svg.style.setProperty('display', 'none');\n  });\n  lines2.forEach((l, i) => g('line', { ...l.toObject(), stroke: compound[i] }));\n\n  range.forEach((p, i) => b('circle', { cx: p.x, cy: p.y, r: 15, stroke: '#0ff' }));\n  approx.forEach((p, i) =>\n    b('circle', {\n      cx: p.x,\n      cy: p.y,\n      r: 9,\n      fill: '#ff0',\n      stroke: '#000',\n      'stroke-width': 1.5,\n      transform: `translate(${center})`\n    })\n  );\n\n  b('polyline', {\n    points: new PointList(approx),\n    fill: 'none',\n    stroke: '#000',\n    'stroke-width': 1.5,\n    transform: `translate(${center})`\n  });\n\n  r('path', { d: `M ${p1} A ${radius} ${radius} 0 0 1 ${p2}` });\n  r('path', {\n    d: `M ${p1} A ${radius} ${radius} 0 1 0 ${p2}`,\n    stroke: '#00dd0080'\n  });\n\n  //g('line', { ...line2.toObject(), stroke: '#0f0' });\n}\n\nconst DrawBinaryTree = (tree, draw = DrawSVG()) => {\n  let a = [];\n  const add = (level, item) => (a[level] ? a[level].push(item) : (a[level] = [item]));\n\n  RecurseBinaryNode(tree.root);\n\n  let svg = Element.find('body > svg');\n  [...svg.children].forEach(Element.remove);\n\n  function RecurseBinaryNode(node, parent = null, depth = 0) {\n    let item = { node, parent, y: depth * 20 };\n    add(depth, item);\n\n    if(node.left) RecurseBinaryNode(node.left, item, depth + 1);\n    if(node.right) RecurseBinaryNode(node.right, item, depth + 1);\n  }\n\n  //console.log('a:', a);\n  a.forEach((nodes, i, level) => {\n    let fx = j => j * 20 - ((nodes.length - 1) * 20) / 2;\n    nodes.map((node, j) => (node.x = fx(j)));\n  });\n  a.flat().forEach(\n    item => (DrawNode(item.x, item.y, item.node), item.parent && DrawEdge(item, item.parent))\n  );\n\n  function DrawNode(x, y, node) {\n    draw('circle', {\n      cx: x,\n      cy: y,\n      r: 5,\n      stroke: '#000',\n      fill: '#fff',\n      'stroke-width': 0.4\n    });\n    draw(\n      'text',\n      {\n        x: x + 0.2,\n        y: y + 0.5,\n        ...AlignmentAttrs({ x: 0, y: 0 }),\n        'font-size': '6px'\n      },\n      node.value + ''\n    );\n  }\n  function DrawEdge(item, parent) {\n    let points = [item, parent].map(Point);\n    let line = new Line(...points);\n    let slope = line.slope.normal().mul(5);\n\n    points[0].add(slope);\n    points[1].sub(slope);\n\n    //console.log('points:', points);\n    draw('line', {\n      ...Line(...points).round(0.001),\n      stroke: '#000',\n      'stroke-width': 0.4\n    });\n  }\n};\nDrawBinaryTree.bt = new BinaryTree(\n  new BinaryTree.Node(\n    'A',\n    new BinaryTree.Node('B', new BinaryTree.Node('D')),\n    new BinaryTree.Node(\n      'C',\n      new BinaryTree.Node('E', null, new BinaryTree.Node('G')),\n      new BinaryTree.Node('F')\n    )\n  )\n);\nDrawBinaryTree.bt = new BinaryTree(\n  new BinaryTree.Node(\n    'V',\n    new BinaryTree.Node('H', new BinaryTree.Node(2), new BinaryTree.Node(1)),\n    new BinaryTree.Node(\n      'H',\n      new BinaryTree.Node(\n        'H',\n        new BinaryTree.Node('V', new BinaryTree.Node(6), new BinaryTree.Node(7)),\n        new BinaryTree.Node('V', new BinaryTree.Node(4), new BinaryTree.Node(5)),\n        new BinaryTree.Node('V')\n      ),\n      new BinaryTree.Node(3)\n    )\n  )\n);\n\nfunction GetPaths(query, parent = project.svgElement) {\n  return Element.findAll(query, parent).reduce(\n    (a, e) => a.concat(e.tagName != 'path' ? Element.findAll('path', e) : [e]),\n    []\n  );\n}\n\nfunction PathToPolylines(path, step = 0.01) {\n  let poly,\n    polys = [];\n  [...SVG.pathIterator(path, { step })].forEach(p => {\n    if(p.move || !poly) polys.push((poly = []));\n\n    poly.push(new Point(p).round(0.001));\n  });\n\n  return polys\n    .filter(poly => poly.length > 1)\n    .map(poly => {\n      let transforms = new TransformationList(\n        Element.walkUp(path, (p, d, set, stop) =>\n          p.parentElement.tagName == 'svg'\n            ? stop()\n            : p.hasAttribute('transform') && set(p.getAttribute('transform'))\n        ).reverse()\n      ).collapse();\n      //console.log('transforms', transforms);\n      return new Polyline(poly).transform(transforms);\n    });\n}\n\nfunction PathToPolyline(path, step = 0.01) {\n  let poly = [...SVG.pathIterator(path, { step })];\n\n  let transforms = new TransformationList(\n    Element.walkUp(path, (p, d, set, stop) =>\n      p.parentElement.tagName == 'svg'\n        ? stop()\n        : p.hasAttribute('transform') && set(p.getAttribute('transform'))\n    ).reverse()\n  ).collapse();\n  //console.log('transforms', transforms);\n  return new Polyline(poly).transform(transforms);\n}\n\nfunction PathsToPolylines(paths, step = 0.01) {\n  if(typeof paths == 'string') paths = GetPaths(...paths.split(' '));\n  if(!Util.isArray(paths)) paths = [paths];\n  return new Map(paths.map(path => [path, PathToPolyline(path, step)]));\n}\n\nfunction OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01) {\n  let co = new ClipperLib.ClipperOffset(miterLimit, arcTolerance);\n  let output = (window.output = new ClipperLib.Paths());\n  co.AddPath(\n    path.closed ? path.slice(0, -1) : path,\n    ClipperLib.JoinType[path.closed ? 'jtRound' : 'jtSquare'],\n    ClipperLib.EndType[\n      path.closed ? 'etClosedLine' /*'etClosedPolygon' */ : 'etOpenSquare' || 'etOpenRound'\n    ]\n  );\n  co.Execute(output, offset);\n  //console.log('output:', output);\n  output.toPolylines = function() {\n    return this.map(p => new Polyline(p.map(({ X, Y }) => new Point(X, Y))).close());\n  };\n  return output;\n}\n\n//\n//  OutsetPaths(PathsToPolylines('path.top .R8'), 0.1);\n//\nfunction OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25) {\n  let ret;\n  // if(typeof paths == 'string') paths = PathsToPolylines(paths);\n  if(typeof paths.values == 'function') paths = [...paths.values()];\n\n  //console.log('OutsetPaths:', { paths, ret });\n\n  ret = paths.map(path => OutsetPath(path, offset, miterLimit, arcTolerance));\n\n  ret = ret.slice(1).reduce((a, p) => ClipPath(a, p), ret[0]);\n\n  let [outer, clip] = ret.toPolylines();\n\n  let f = project.makeFactory();\n  let d = [outer.toPath(), clip.toPath()].join(' ');\n\n  //console.log('d:', d);\n\n  /* outer.toSVG(f, { 'stroke-width': 0.0508, stroke: 'black', fill: 'none' });\n  clip.toSVG(f, { 'stroke-width': 0.0508, stroke: 'black', fill: 'none' });\n*/\n  f('path', { d, 'stroke-width': 0.0508, stroke: 'none', fill: 'red' });\n  return ret;\n}\n\nfunction ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion) {\n  let cl = new ClipperLib.Clipper();\n  let output = new ClipperLib.Paths();\n  const add = (p, clip = false) =>\n    (Util.isArray(p[0]) ? cl.AddPaths : cl.AddPath).call(\n      cl,\n      p,\n      clip ? ClipperLib.PolyType.ptClip : ClipperLib.PolyType.ptSubject,\n      true\n    );\n\n  add(path, false);\n  add(clip, true);\n\n  cl.Execute(mode, output);\n  output.toPolylines = function() {\n    return this.map(p => new Polyline(p.map(({ X, Y }) => new Point(X, Y))).close());\n  };\n  return output;\n}\n\nfunction saveItemStates(itemList, get = item => Util.is.on(item.visible())) {\n  return itemList.map(item => [item, get(item)]);\n}\n\nfunction restoreItemStates(\n  itemStates,\n  /* prettier-ignore */ set = (item, value) => item.visible(value ? 'yes' : 'no')\n) {\n  for(let [item, state] of itemStates) set(item, state);\n}\n\nfunction EagleMaps(project) {\n  let transformPath = p => p.replace(/\\s*➟\\s*/g, '/').replace(/\\/([0-9]+)/g, '/[$1]');\n  let dom2path = [...Element.findAll('*[data-path]', project.object)].map(e => [\n    e,\n    new ImmutableXPath(transformPath(e.getAttribute('data-path')))\n  ]);\n  // console.debug('dom2path:', dom2path);\n  dom2path = Util.mapFunction(new WeakMap(dom2path));\n\n  let dom2eagle = node => {\n    let p;\n    if((p = dom2path(node))) return project.doc.lookup(p);\n  };\n  let eagle2dom = elem =>\n    Element.find(`[data-type=${elem.tagName}][data-name=${elem.name}]`, project.element);\n  let path2dom = p => Element.find(`[data-path='${CSS.escape(p)}']`, project.element);\n\n  let mapElements = {\n    /*    eagle: Util.unique(eagle2dom.map(([e, d]) => e)),\n    dom: Util.unique(eagle2dom.map(([e, d]) => d), (a, b) => a.isSameNode(b))*/\n  };\n  let maps = { dom2path, dom2eagle, eagle2dom, path2dom };\n  /*  maps.eagle2dom = Util.mapFunction(new WeakMap(mapElements.eagle.map(eagle => [\n        eagle,\n        eagle2dom.filter(([e, d]) => e === eagle).map(([e, d]) => d)\n      ])\n    )\n  );\n  //console.debug('maps.eagle2dom:', maps.eagle2dom);*/\n  //) maps.dom2eagle = Util.mapFunction(new WeakMap(eagle2dom.map(([k, v]) => [v, k])));\n  const [path2component, component2path] = project.renderer.maps.map(Util.mapFunction);\n  const { /*path2obj, obj2path, */ path2eagle, eagle2path /*, eagle2obj, obj2eagle */ } =\n    project.doc.maps;\n  const [component2eagle, eagle2component] = [\n    Util.mapAdapter((key, value) =>\n      value === undefined ? path2eagle(component2path(key)) : undefined\n    ),\n    Util.mapAdapter((key, value) =>\n      value === undefined ? path2component(eagle2path(key) + '') : undefined\n    )\n  ];\n  Util.weakAssign(maps, {\n    path2eagle,\n    eagle2path,\n    path2component,\n    component2path\n  });\n\n  /* const [component2dom, dom2component] = [\n    Util.mapAdapter((key, value) =>\n      value === undefined ? eagle2dom(component2eagle(key)) : undefined\n    ),\n    Util.mapAdapter((key, value) =>\n      value === undefined ? eagle2component(dom2eagle(key)) : undefined\n    )\n  ]; */\n  Object.assign(maps, {\n    /*dom2component,\n component2dom, */\n    component2eagle,\n    component2path,\n    eagle2component,\n    path2component\n  });\n  Object.assign(project, { maps });\n  return maps;\n}\n\nfunction* PackageNames(doc = project.doc) {\n  const tokenize = Util.matchAll(/([A-Za-z]+|[0-9,]+|[^0-9A-Za-z]+)/g);\n  let packages = doc.packages && doc.packages.length ? doc.packages : [...doc.getAll('package')];\n  let names = packages\n    .map(e => [e, e.getBounds()])\n    .map(([e, b]) => [e, b.width, b.height, Math.max(b.width, b.height), b.height > b.width])\n    .map(([e, w, h, m, v]) => [\n      e,\n      e.name,\n      [...tokenize(e.name)],\n      Util.roundTo(w, 0.01),\n      Util.roundTo(h, 0.01),\n      Math.floor(m),\n      v ? 'V' : ''\n    ]);\n\n  for(let [element, name, matches, w, h, size, orientation] of names) {\n    let tokens = matches.map(({ index, ...match }) => match[0] + '');\n    let [index] = matches\n      .reduce(\n        ({ s, v, indexes }, match, i) => {\n          if(Number.isFinite(s) && indexes.length) return { s, v, indexes };\n          if(match[0] == '/' && !Number.isFinite(s)) s = i;\n          if(match[0] == 'V') v = i;\n          if(!isNaN(+(match[0] + ''))) indexes.push(i);\n          return { s, v, indexes };\n        },\n        { indexes: [] }\n      )\n      .indexes.reverse();\n    let sIndex = tokens.findIndex(([token, index]) => token == '/');\n    let vhIndex = tokens.findIndex(([token, index]) => token == 'V' || token == 'H');\n    let tokIndex = vhIndex != -1 ? vhIndex - 1 : sIndex + 1;\n\n    if(tokens[vhIndex]) {\n      while(tokIndex >= 0 && isNaN(tokens[tokIndex])) tokIndex--;\n    }\n    if(isNaN(+tokens[tokIndex])) tokIndex = index;\n\n    let token = tokens[tokIndex];\n    let vertical = tokens[vhIndex] == 'V';\n    let number = typeof token == 'string' ? +token.replace(/[^-.0-9]/g, '') : NaN;\n    //console.log('names:', { index, sIndex, vhIndex, token, vertical, number });\n\n    /*  if(number != size || vertical != (orientation == 'V')) */\n\n    if(token) {\n      let fromTo = [`${token}${tokens[vhIndex] || ''}`, `${size}${vertical ? 'V' : ''}`];\n      let newName = name.replace(...fromTo);\n\n      yield Object.assign([name, newName, ...fromTo], {\n        w,\n        h,\n        size,\n        orientation\n      });\n    }\n  }\n}\n\n//let projectIndex;\n\nfunction NextDocument(n = 1) {\n  let i;\n  const { projects } = globalThis;\n  if(typeof globalThis.projectIndex != 'number')\n    globalThis.projectIndex = projects.indexOf(project);\n  const cond =\n    Util.isObject(n) && n instanceof RegExp\n      ? (idx, i) => !n.test(projects[idx]?.name)\n      : (idx, i) => i < n;\n  let start = projectIndex;\n  for(i = 0; cond(++projectIndex, i); ++i) {\n    //LogJS.verbose(`NextDocument skip ${i} [${projectIndex}] ${projects[projectIndex].name}`);\n\n    projectIndex %= projects.length;\n    if(projectIndex == start) break;\n  }\n  LogJS.verbose(`NextDocument skipped ${projectIndex - start}`);\n\n  let next = projects[projectIndex];\n  config.currentProject(next.name);\n\n  //console.log('NextDocument', `[${projectIndex}]`, projects[projectIndex].name);\n  return LoadDocument(next);\n}\n\nasync function LoadDocument(project, parentElem) {\n  console.log('LoadDocument', project);\n  open(false);\n  gcode(null);\n\n  if(typeof project == 'string') project = GetProject(project);\n\n  config.currentProject(project.name);\n\n  project.doc = await LoadFile(project).catch(err => console.error(err));\n\n  currentProj(project);\n  LogJS.info(`${project.name} loaded.`);\n  const topPlace = 'tPlace';\n  elementChildren = Util.memoize(() => ElementChildren(topPlace, ent => Object.fromEntries(ent)));\n  elementGeometries = Util.memoize(() =>\n    ElementGeometries(topPlace, ent => Object.fromEntries(ent))\n  );\n  //polygonGeometries = Util.memoize(() => Object.entries(elementGeometries()).map(([name, lineList]) => [name, lineList.toPolygon((pts) => new Polyline(pts))]));\n\n  documentTitle(project.doc.file.replace(/.*\\//g, ''));\n  let s = project.doc.type != 'lbr' && project.doc.dimensions;\n\n  if(s) documentSize(s.round(0.01).toString({ unit: 'mm' }));\n\n  const { doc } = project;\n\n  window.eagle = doc;\n  window.project = project;\n  Element.remove('#fence');\n  let docElem = Element.find('#doc');\n  docElem.innerHTML = '';\n  //console.log('doc.basename', doc.basename);\n\n  Util.memoizedProperties(window, {\n    renamePackages() {\n      let names = [...PackageNames(doc)];\n      //console.log('Package names', names);\n      let changes = names.filter(a => a[0] != a[1]);\n      //console.log('Commands:\\n' + changes.map(([oldName, newName]) => `RENAME ${oldName} ${newName};`).join('\\n'));\n      //console.log('Expressions:\\n' + changes.map(([oldName, newName]) => `s|=\"${oldName}\"|=\"${newName}\"|g;`).join('\\n'));\n      return names;\n    }\n  });\n  let Component;\n\n  if(/*doc.type != 'lbr'*/ true) {\n    project.renderer = new Renderer(doc, ReactComponent.append, /* false && */ config.debugFlag());\n\n    config.showGrid = trkl(true);\n    config.showGrid.subscribe(value => {\n      let obj = { ...project.renderer.grid, visible: value };\n      //console.log('config.showGrid:', obj);\n      project.renderer.grid = obj;\n    });\n\n    //console.log('project.renderer', project.renderer);\n    let style = { width: '100%', height: '100%', position: 'relative' };\n    Component = project.renderer.render(doc, null, {});\n\n    //console.log('renderer.render =', Component);\n\n    let usedLayers = [...doc.layers.list].filter(layer => layer.elements.size > 0);\n\n    Timer.once(250).then(() =>\n      layerList(\n        usedLayers.map(layer => ({\n          i: layer.number,\n          name: layer.name,\n          color: layer.getColor(),\n          element: layer,\n          visible: (() => {\n            let fn;\n            const handler = layer.handlers.visible;\n            fn = function(v) {\n              if(v !== undefined) handler(Util.is.on(v) ? 'yes' : 'no');\n              else return handler();\n            };\n            fn.subscribe = handler.subscribe;\n            fn.unsubscribe = handler.unsubscribe;\n            return fn;\n          })()\n        }))\n      )\n    );\n    LogJS.info(`${project.name} rendered.`);\n    window.component = project.component = Component;\n  }\n\n  let element = Element.find('#main');\n\n  if(project.renderer) {\n    //console.debug('testRender:', Component);\n    //\n    let r = project.renderer.rect || project.renderer.bounds;\n    let size = (project.dimensions = project.renderer.size);\n    //console.debug('project.renderer:', project.renderer);\n    //console.debug('r:', r);\n    let aspectRatio = 1;\n    if(project.doc.type != 'lbr') {\n      if(r) {\n        aspectRatio = r.width / r.height;\n        sizeListener(size);\n      }\n    } else {\n      sizeListener({});\n    }\n    //console.\n    aspectListener(aspectRatio);\n    //console.debug('aspectRatio:', aspectRatio);\n    Component =\n      // h(Zoomable, { /*className: 'zoomable',*/ style: size.toCSS('mm') }, [Component]) ||\n      h(\n        Fence,\n        {\n          style: {},\n          sizeListener,\n          aspectListener,\n          listener: transform,\n          'data-name': project.name\n        },\n        [Component]\n      );\n  }\n\n  let svgElement;\n\n  if(window.component) {\n    //[...element.children].forEach(Element.remove);\n\n    React.render(Component, element);\n\n    let object = ReactComponent.toObject(Component);\n    project.object = object;\n    let rendered = object.children[0];\n    //console.debug('LoadDocument rendered:', rendered);\n\n    setTimeout(() => {\n      SaveSVG();\n    }, 500);\n\n    //console.debug('LoadDocument element:', element);\n    //console.debug('LoadDocument  project:', project);\n\n    //path2eagle: path2obj, eagle2path: obj2path\n\n    project.maps = {\n      ...project.doc.maps,\n      ...EagleMaps(project)\n    };\n\n    project.rendered = rendered;\n    window.project.element = element;\n    window.project.svgElement = svgElement = Element.find('svg', element);\n    project.grid = Element.find('g.grid', project.element);\n    project.bbox = SVG.bbox(project.grid);\n    project.aspectRatio = aspect;\n  }\n  let svg = Element.find('svg', '#main');\n\n  if(svg) {\n    project.makeGroup = function({ transform, ...props } = {}) {\n      let e;\n      if(props.id && (e = Element.find(`#${props.id}`))) return e;\n\n      let groupElement = Element.find('g.elements', svg) || Element.find('g.instances', svg);\n      transform =\n        (groupElement ? groupElement.getAttribute('transform') : '') +\n        (transform ? ' ' + transform : '');\n      return (e = SVG.create('g', { ...props, transform }, svg));\n    };\n\n    project.makeFactory = Util.memoize(id =>\n      SVG.factory(() =>\n        project.makeGroup({\n          ...((id !== undefined && { id }) || {}),\n          'stroke-width': 0.127 / 4\n        })\n      )\n    );\n\n    project.makeFactory();\n\n    let center = SVG.bbox(svgElement).center.round();\n    let defaultTransform = `translate(${center.x},${center.y}) scale(2.54,2.54)`;\n\n    function xx() {\n      let g = SVG.create('g', {});\n\n      project.svgElement.appendChild(g);\n      let ll =\n        geometries.R4 &&\n        geometries.R4.lines.toSVG(ReactComponent.append, () =>\n          h('g', { ...elementDefaultAttributes, defaultTransform })\n        );\n\n      render(ll, g);\n    }\n    /*xx();*/\n\n    window.AddElement = (function (transform) {\n      const root = project.svgElement;\n\n      let list = [];\n\n      return (tag, attr, children = []) => {\n        let e = SVG.create(tag, { ...elementDefaultAttributes, transform, ...attr }, root);\n        list.push(e);\n        let d = trkl.property(e, 'd');\n        d.subscribe(value => e.setAttribute('d', value));\n        return e;\n      };\n    })(defaultTransform);\n  }\n\n  Util.tryCatch(async () => {\n    let { name, data, doc, svg, bbox } = project;\n    let bounds = doc.getBounds();\n    let rect = bounds.toRect(Rect.prototype);\n    let size = new Size(r);\n    // currentProj(project);\n    size.mul(doc.type == 'brd' ? 2 : 1.5);\n    let svgrect = SVG.bbox(project.svgElement);\n    let measures = (doc.measures || doc.getBounds()).rect;\n    //console.debug('measures:', measures);\n    Element.attr(project.svgElement, {\n      'data-filename': project.name,\n      'data-aspect': project.aspectRatio\n    });\n    // let css = size.div(0.26458333333719).toCSS({ width: 'px', height: 'px' });\n    //  window.size = project.doc.type == 'lbr' ? {} : css;\n    AdjustZoom();\n    project.status = SaveSVG();\n  }, Util.putError);\n\n  /* sizeListener.subscribe(value => {\n    //console.log('sizeListener', { value }, Util.getCallers());\n  });\n*/\n  return project;\n}\n\nasync function ChooseDocument(project, i) {\n  let r;\n  if(i == undefined) i = project.i || projectFiles.indexOf(project);\n  const box = Element.findAll('.file')[i];\n  LogJS.info('ChooseDocument:', { project, i, box });\n  LogJS.info(`${project.name} selected.`);\n\n  if(!project.loaded) {\n    loading(true);\n    let data = await LoadDocument(project, box);\n    project.loaded = true;\n    //console.log('loaded:', project);\n    loading(false);\n  }\n  return project.loaded;\n}\n\n/* gerber=await BoardToGerber(project.name); gc=await GerberToGcode('tmp/7seg-2.54.GBL'); geom=gcodetogeometry(gc.data);lines = geom.lines.map(({start,end}) => new Line(start,end)) */\n\nconst GenerateVoronoi = () => {\n  //console.log('Loading document: ' + filename);\n  let { doc } = project;\n  //console.log('doc', doc);\n  let points = new PointList();\n  for(let element of doc.elements.list) {\n    const pkg = element.package;\n    let { x, y } = element;\n    //console.log('element:', element, { x, y });\n    let origin = new Point(x, y);\n    for(let item of pkg.children) {\n      if(item.drill !== undefined) {\n        let pos = new Point(+item.x, +item.y).add(origin);\n        //console.log('pos:', pos);\n        points.push(pos);\n      }\n    }\n  }\n  let bb = doc.getBounds();\n  let rect = bb.toRect(Rect.prototype);\n  //console.log('bb:', bb);\n  //console.log('rect:', rect);\n  rect.outset(1.27);\n  window.tmprect = rect;\n  let sites = points.map(p => p.toObject());\n  let bbox = { xl: bb.x1, xr: bb.x2, yt: bb.y1, yb: bb.y2 };\n  let voronoi = new Voronoi();\n  //pass an object which exhibits xl, xr, yt, yb properties. The bounding\n  //box will be used to connect unbound edges, and to close open cells\n  let result = voronoi.compute(sites, bbox);\n  //render, further analyze, etc.\n  //console.log('result:', Object.keys(result).join(', '));\n  let { site, cells, edges, vertices, execTime } = result;\n  //console.log('cells:', cells);\n  let holes = edges.filter(e => !e.rSite).map(({ lSite, rSite, ...edge }) => new Point(lSite));\n  let rlines = edges\n    .filter(e => e.rSite)\n    .map(({ lSite, rSite, ...edge }) => new Line(lSite, rSite));\n  let vlines = edges\n    .filter(e => e.va && e.vb)\n    .map(({ va, vb, ...edge }) => new Line(va, vb).round(0.127, 4));\n  let points2 = vertices.map(v => new Point(v).round(0.127, 4));\n  const add = (arr, ...items) => [...(Util.isArray(arr) ? arr : []), ...items];\n  const factory = SVG.factory();\n  const lines = [\n    ...rlines.map(l => [\n      'line',\n      { ...l.toObject(t => t + ''), stroke: '#000', 'stroke-width': 0.01 }\n    ]),\n    ...vlines.map(l => [\n      'line',\n      { ...l.toObject(t => t + ''), stroke: '#f00', 'stroke-width': 0.01 }\n    ])\n  ];\n  const circles = [\n    ...holes.map(p => [\n      'circle',\n      {\n        cx: p.x,\n        cy: p.y,\n        r: 0.254,\n        fill: 'none',\n        stroke: '#00f',\n        'stroke-width': 0.3\n      }\n    ]) /* ...points2.map(p => [ 'circle', { cx: p.x, cy: p.y, r: 0.254 * 2, fill: 'none', stroke: 'rgba(0,255,255,0.75)', 'stroke-width': 0.1 } ])*/\n  ];\n  const polylines = [\n    ...cells.reduce(\n      (acc, { site, halfedges }) => [\n        ...acc,\n        [\n          'polyline',\n          {\n            points: new PointList(halfedges.map(({ site }) => site)).toString(),\n            stroke: '#f0f',\n            'stroke-width': 0.1\n          }\n        ]\n      ],\n      []\n    )\n  ];\n  //console.log('polylines:', polylines);\n  //console.log('cells:', cells);\n  window.cells = cells;\n  Element.setCSS(svgElem, {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: 'auto'\n  });\n  //filesystem.writeFile('output.svg', svgFile);\n  //console.log('svg:', svgElem);\n};\n\nfunction PackageChildren(element, layer) {\n  let children = [...element.children]\n    .map((c, i) => [i, c])\n    .filter(([i, p]) => p.layer && p.layer.name == 'tPlace' && p.tagName == 'wire');\n  children.xml = children.map(([i, e]) => e.toXML()).join('\\n');\n  return children;\n}\n\nfunction ElementChildren(layer = 'tPlace', rfn = ent => new Map(ent)) {\n  const { elements = [] } = project.doc || {};\n\n  return rfn([...elements].map(([name, element]) => [name, PackageChildren(element, layer)]));\n}\n\nfunction ElementGeometries(layer = 'tPlace', rfn = ent => new Map(ent)) {\n  return rfn(\n    ElementChildren(layer, ent => ent)\n      .map(([name, children]) => [\n        name,\n        new LineList(\n          children.map(([i, e]) => {\n            let line = e.geometry;\n            if(e.curve !== undefined) line.curve = e.curve;\n            line.element = e;\n            line.xml = e.toXML();\n            return line;\n          })\n        )\n      ])\n      .map(([name, lines]) => [name, lines, lines.slice().toPolygons(pts => new Polyline(pts))])\n      .map(([name, lines, polygons]) => [name, { lines, polygons }])\n  );\n}\n\nfunction NewPath(path) {\n  let elem = SVG.create('path');\n  project.svgElement.appendChild(elem);\n}\n\nconst MakeFitAction = index => async event => {\n  // window.transform='';\n  const { buttons, type, target } = event;\n  if(!type.endsWith('down') || buttons == 0) return false;\n  //console.debug(`FitAct(${index})`, { buttons, type, target });\n  let oldSize = Element.rect('#fence');\n  let matrix = transform().invert().toMatrix();\n  oldSize = matrix.transform_rect(oldSize);\n  let topBar = Element.rect('.buttons');\n  let clientArea = Element.rect('#main');\n  let f = oldSize.fit(clientArea);\n  let factors = new Size(oldSize).fitFactors(new Size(clientArea));\n  let t = new TransformationList().scale(factors[index], factors[index]);\n  matrix = t.toMatrix();\n  let newSize = matrix.transform_rect(new Rect(oldSize));\n  let align = 0;\n  if(newSize.width > clientArea.width) align |= Align.LEFT;\n  else align |= Align.CENTER;\n  if(newSize.height > clientArea.height) align |= Align.TOP;\n  else align |= Align.MIDDLE;\n  newSize.align(clientArea, align);\n  matrix = Matrix.getAffineTransform(oldSize.toPoints(), newSize.toPoints());\n  //console.debug(`FitAction(${index})`, { oldSize, newSize, clientArea }, AlignToString(align), matrix.decompose());\n  transform(t);\n};\n\nfunction ZoomFactor(val = config.zoomLog()) {\n  return +Math.pow(10, val / 200).toFixed(5);\n}\n\nfunction ZoomLog(factor) {\n  return Math.log10(factor) * 200;\n}\n\nfunction AdjustZoom(l = config.zoomLog()) {\n  let zoomFactor = ZoomFactor(l);\n  let t = new TransformationList(window.transform);\n  if(!t.scaling) t.scale(zoomFactor, zoomFactor);\n  else {\n    t.scaling.x = zoomFactor;\n    t.scaling.y = zoomFactor;\n  }\n  window.transform = t;\n}\nconst CreateGrblSocket = async (port = 'tnt1') => {\n  let url = Util.makeURL({\n    location: '/serial',\n    protocol: 'ws',\n    query: { port }\n  });\n  let ws = new WebSocketClient();\n  await ws.connect(url);\n  LogJS.info('Grbl Connected:', ws.connected);\n  let output = await AsyncRead(ws);\n  for await(let data of output) {\n    //console.log('data:', data);\n  }\n};\n\nfunction HandleMessage(msg) {\n  const { type, origin, recipient, body } = msg;\n\n  switch (type) {\n    case 'CONTOURS': {\n      let { frame, width, height, contours } = body;\n      //console.log('HandleMessage', { contours });\n\n      let lists = (typeof contours == 'string' ? contours.split(/\\s*\\|\\s*/g) : contours).map(\n        pointStr => new Polyline(pointStr)\n      );\n\n      window.lists = lists;\n      //console.log('HandleMessage', { type, width, height, frame }, lists);\n\n      break;\n    }\n  }\n}\n\nconst CreateWebSocket = async (socketURL, log, socketFn = () => {}) => {\n  // log = log || ((...args) => console.log(...args));\n  socketURL =\n    socketURL ||\n    Util.makeURL({\n      location: Util.parseURL(window.location.href).location + 'ws',\n      protocol: window.location.href.startsWith('https') ? 'wss' : 'ws'\n    });\n  let ws = new WebSocketClient();\n  let send = ws.send;\n  ws.send = (...args) => {\n    let [msg] = args;\n    if(!(msg instanceof Message)) msg = new Message(...args);\n    //console.log('send:', msg.data);\n    return send.call(ws, msg.data);\n  };\n  window.socket = ws;\n  LogJS.info('New WebSocket: ' + socketURL);\n  await ws.connect(socketURL);\n  LogJS.info('WebSocket Connected:', ws.connected);\n  socketFn(ws);\n  ws.send('PING main.js:data!');\n  let data;\n  //console.log('ws', ws);\n\n  for await(event of ws) {\n    //console.log('WebSocket event:', event);\n    if(event.type == 'message') {\n      const { data } = event;\n      //   console.log('data:', Util.abbreviate(data, 40));\n      let msg = new Message(data);\n      window.msg = msg;\n      // LogJS.info('WebSocket recv: ' + Util.inspect(msg));\n      HandleMessage(msg);\n      ws.dataAvailable !== 0;\n    } else {\n      //console.log(`${event.type}:`, event);\n      break;\n    }\n  }\n  await ws.disconnect();\n};\n\nconst AuthorizationDialog = ({ onAuth, ...props }) => {\n  const [username, setUsername] = useState(props.username || '');\n  const [password, setPassword] = useState(props.password || '');\n\n  return h(\n    Portal,\n    { into: '#portal' },\n    h(\n      'div',\n      { class: 'auth-portal' },\n      h('div', { class: 'auth-dialog' }, [\n        h('h1', {}, 'Authorization'),\n        h(\n          'form',\n          { action: '', method: '', onSubmit: () => false },\n          h('div', { class: 'auth-form' }, [\n            h('input', {\n              name: 'username',\n              placeholder: 'Username',\n              type: 'text',\n              size: 30,\n              onInput: e => {\n                setUsername(e.target.value);\n              },\n              value: username\n            }),\n            h('input', {\n              name: 'password',\n              placeholder: 'Password',\n              type: 'password',\n              size: 30,\n              onInput: e => {\n                setPassword(e.target.value);\n              },\n              value: password\n            }),\n            h('input', {\n              name: 'Ok',\n              type: 'submit',\n              onClick: e => {\n                e.preventDefault();\n                onAuth({ username, password });\n                return false;\n              }\n            })\n          ])\n        )\n      ])\n    )\n  );\n};\n\nconst BindGlobal = Util.once(arg => trkl.bind(window, arg));\n\nconst AppMain = (window.onload = async () => {\n  const { sortOrder, sortKey } = config;\n  //prettier-ignore\n  const imports = {Transformation, Rotation, Translation, Scaling, MatrixTransformation, TransformationList, dom, ReactComponent, iterator, eventIterator, keysim, geom, isBBox, BBox, LineList, Polygon, Circle, TouchListener, trkl, ColorMap, ClipperLib, Shape, devtools, Util, tlite, debounceAsync, tXml, deep, Alea, path, TimeoutError, Timers, asyncHelpers, Cache, CacheStorage, InterpretGcode, gcodetogeometry, GcodeObject, gcodeToObject, objectToGcode, parseGcode, GcodeParser, GCodeLineStream, parseStream, parseFile, parseFileSync, parseString, parseStringSync, noop, Interpreter, Iterator, Functional, makeLocalStorage, Repeater, useResult, LogJS, useDimensions, toXML, MutablePath, ImmutablePath, MutablePath,arrayDiff, objectDiff, Object2Array, XmlObject, XmlAttr, MutableXPath,ImmutableXPath, RGBA, isRGBA, ImmutableRGBA, HSLA, isHSLA, ImmutableHSLA, ColoredText, React, h, html, render, Fragment, Component, useState, useLayoutEffect, useRef, components, Chooser, DynamicLabel, Button, FileList, Panel, SizedAspectRatioBox, TransformedElement, Canvas, ColorWheel, Slider, CrossHair, FloatingPanel, DropDown, Conditional, Message, WebSocketClient,    PipeTo, AsyncRead, AsyncWrite,   DebugTransformStream, TextEncodeTransformer, TextEncoderStream, TextDecodeTransformer, TextDecoderStream, TransformStreamSink, TransformStreamSource, TransformStreamDefaultController, TransformStream, ArrayWriter, readStream, WriteToRepeater, LogSink, RepeaterSink, StringReader, LineReader, ChunkReader, ByteReader, PipeToRepeater,ReadFromIterator, WritableStream, useTrkl, RAD2DEG, DEG2RAD, VERTICAL, HORIZONTAL, HORIZONTAL_VERTICAL, DEBUG, log, setDebug, PinSizes, EscapeClassName, UnescapeClassName, LayerToClass, ElementToClass, ClampAngle, AlignmentAngle, MakeRotation, EagleAlignments, Alignment, SVGAlignments, AlignmentAttrs, RotateTransformation, LayerAttributes, InvertY, PolarToCartesian, CartesianToPolar, RenderArc,\n CalculateArcRadius, LinesToPath, MakeCoordTransformer, useAttributes , Wire, Instance, SchematicSymbol, Emitter, EventIterator, Slot, SlotProvider, Voronoi, GerberParser, lazyInitializer, LibraryRenderer,EagleElementProxy,  BoardRenderer, DereferenceError, EagleDocument, EagleElement, EagleNode, EagleNodeList, EagleNodeMap, EagleProject, EagleRef, EagleReference, EagleSVGRenderer, Renderer, SchematicRenderer, makeEagleElement, makeEagleNode, brcache, lscache, BaseCache, CachedFetch, NormalizeResponse, ResponseData, FetchURL, FetchCached, GetProject, ListProjects, GetLayer, AddLayer, BoardToGerber, GerberToGcode, GcodeToPolylines, \n ...github, classNames , BinaryTree, normalizePath, reverseNormalizedPath, reverseSubPath, reversePath, ...commands,  DEBUG, objectInspect, SvgPath, renderToString , ...ecmascript };\n\n  const localFunctions = {\n    PackageChildren,\n    ElementChildren,\n    Timer,\n    MouseEvents,\n    DrawSVG,\n    ElementToXML,\n    filesystem,\n    LoadFile,\n    SaveFile,\n    SaveSVG,\n    LoadSVG,\n    LoadImage,\n    RenderComponent,\n    ModifyColors,\n    GerberLayers,\n    LoadDocument,\n    NextDocument,\n    ChooseDocument,\n    GenerateVoronoi,\n    MakeFitAction,\n    CreateWebSocket,\n    CreateGrblSocket,\n    BindGlobal,\n    AppMain,\n    serial,\n    FindLayer,\n    OutsetPath,\n    OutsetPaths,\n    ClipPath,\n    PathToPolyline,\n    PathsToPolylines,\n    GetPaths,\n    DrawArc,\n    maxZIndex,\n    ClearCache,\n    PackageNames,\n    DrawBinaryTree,\n    EagleMaps,\n    SaveConfig,\n    LoadConfig,\n    FixedMedium,\n    EventTarget,\n    EventEmitter,\n    ...rpc2,\n    ...components,\n    ...commands,\n    fnmatch,\n    PATH_FNM_MULTI,\n    rpc: { ...rpc }\n  };\n\n  if(store.keys().length == 0) {\n    await LoadConfig()\n      .then(response => {\n        for(let [key, value] of response.entries()) {\n          //console.log(`Initializing store set('${key}',`, value, `)`);\n          store.set(key, value);\n        }\n\n        for(let key of store.keys()) {\n          const value = store.get(key);\n          switch (key) {\n            case 'url':\n              config.listURL(value);\n              break;\n            case 'filter':\n              config.searchFilter(value);\n              break;\n            case 'zoom':\n              config.zoomLog(value);\n              break;\n            case 'console':\n              config.logSize(value);\n              break;\n            case 'debug':\n              config.debugFlag(value);\n              break;\n            case 'auth':\n              config.credentials(value);\n              break;\n          }\n        }\n      })\n      .catch(e => {});\n  }\n  const importedNames = Object.keys(imports);\n  //console.debug('Dupes:', Util.getMemberNames(window).filter(m => importedNames.indexOf(m) != -1));\n\n  //prettier-ignore\n  Util.weakAssign(window, { rpc });\n  Util.weakAssign(window, imports);\n  Util.weakAssign(window.Element, Util.getMethods(dom.Element));\n  Util.weakAssign(window, dom, geom, imports, localFunctions);\n  Util.weakAssign(window, {\n    functions: Util.filter(localFunctions, v => typeof v == 'function'),\n    dom,\n    geom,\n    config,\n    loading,\n    filePanel\n  });\n  Error.stackTraceLimit = 100;\n\n  Util.weakAssign(window, {\n    TestArc: () =>\n      Util.timer(2000).then(() =>\n        DrawArc({ x: 50, y: 150 }, { x: 350, y: 300 }, 120 * (Math.PI / 180))\n      )\n  });\n\n  const timestamps = new Repeater(async (push, stop) => {\n    push(Date.now());\n    const interval = setInterval(() => push(Date.now()), 1000);\n    await stop;\n    clearInterval(interval);\n  });\n\n  const logger = new Repeater(async (push, stop) => {\n    push(['DEBUG', null, null, 'Load ready!']);\n    window.pushlog = push;\n    await stop;\n  });\n  logger.push = window.pushlog;\n\n  //window.focusSearch = trkl();\n  window.currentSearch = trkl(null);\n\n  window.keystroke =\n    target =>\n    (key, modifiers = 0) =>\n      keysim.Keyboard.US_ENGLISH.dispatchEventsForKeystroke(\n        new keysim.Keystroke(modifiers, key),\n        target\n      );\n\n  window.focusSearch = state => {\n    const input = currentSearch();\n    //console.log('focusSearch', input.tagName, state);\n    input[state ? 'focus' : 'blur']();\n  };\n\n  // prettier-ignore\n  BindGlobal({ projects, socket, transform, size: sizeListener, aspect: aspectListener, showSearch,   watched: dump, \n    children: () => elementChildren(),\n     geometries: () => elementGeometries(),\n    ...config });\n\n  currentSearch.subscribe(value => {\n    if(value) {\n      focusSearch(false);\n      Timer.once(1000).then(() => focusSearch(true));\n    }\n  });\n\n  const inspectSym = Symbol.for('nodejs.util.inspect.custom');\n\n  const testComponent = props => html` <div>This is a test</div> `;\n\n  let c = h(testComponent, {});\n  window.testComponent = c;\n\n  const UpdateProjectList = async (\n    opts = config.listURL() ? { url: config.listURL(), ...credentials } : {}\n  ) => {\n    let list = [];\n    //console.log('opts:', opts);\n    let { url, ...restOfOpts } = opts;\n    let urls = url ? url.split(/\\n/g) : [null];\n    for(url of urls) {\n      //console.log('UpdateProjectList:', { ...opts, ...credentials, url });\n      let data = await ListProjects({ ...opts, ...credentials, url });\n      let files = (typeof data == 'object' && data != null && data.files) || [];\n      console.log('files', files);\n      function File(obj, i) {\n        const { name } = obj;\n        let file = this instanceof File ? this : Object.create(File.prototype);\n        let data = trkl({ percent: NaN });\n        Object.assign(file, obj);\n        file.name = name;\n        file.i = i;\n        trkl.bind(file, { data });\n        //        console.info(`Got file '${name.replace(/.*:\\/\\//g, '').replace(/raw.githubusercontent.com/, 'github.com') || name.replace(/.*\\//g, '')}'`);\n\n        return file;\n      }\n      File.prototype.toString = function() {\n        return this.name;\n      };\n      if(files) {\n        list = list.concat(\n          files.sort((a, b) => a.name.localeCompare(b.name)).map((obj, i) => new File(obj, i))\n        );\n        let svgs = list.reduce((acc, file) => {\n          if(/\\.lbr$/i.test(file.name)) return acc;\n          file.svg = `${EagleDocument.baseOf(file.name)}.${EagleDocument.typeOf(file.name)}.svg`;\n          //console.log(`file.svg = '${file.svg}'`);\n          return [...acc, file.svg];\n        }, []);\n\n        data = await ListProjects({ descriptions: false, names: svgs });\n        files = globalThis.files = (data && data.files) || [];\n        //      console.log('filesData:', files);\n\n        for(let svgFile of files) {\n          if(Util.isObject(svgFile) && svgFile.mtime !== undefined) {\n            const f = list.find(i => i.svg === svgFile.name);\n            if(Util.isObject(f) && f.mtime !== undefined) {\n              const delta = svgFile.mtime - f.mtime;\n\n              f.modified = delta < 0;\n            }\n          }\n        }\n      }\n    }\n\n    LogJS.info(`retrieved project list. Got ${list.length} items.`);\n\n    projects(list);\n  };\n\n  UpdateProjectList();\n\n  /*(async function() {\n    while(true) {\n      await CreateWebSocket(null, null, ws => (window.socket = ws)).catch(console.error);\n      await Util.waitFor(1000);\n    }\n  })();*/\n\n  const crosshair = { show: trkl(false), position: trkl({ x: 0, y: 0 }) };\n\n  window.crosshair = trkl.bind({}, crosshair);\n\n  config.credentials.subscribe(value => {\n    store.set('auth', value);\n    LogJS.info(`config.credentials`, value);\n  });\n  config.searchFilter.subscribe(value => {\n    store.set('filter', value);\n    LogJS.info(`config.searchFilter is ${value}`);\n  });\n\n  config.listURL.subscribe(value => {\n    store.set('url', value);\n    LogJS.info(`config.listURL is '${value}'`);\n  });\n  config.debugFlag.subscribe(value => store.set('debug', value));\n\n  config.logSize.subscribe(value => {\n    const { width, height } = value;\n\n    if(width === undefined || height === undefined) {\n      throw new Error('config.logSize undefined');\n    }\n    store.set('console', value);\n    //LogJS.info(`config.logSize is ${value.width} x ${value.height}`);\n  });\n\n  //trkl.bind(window, { config.searchFilter, config.listURL });\n  //trkl.bind(window, { svgFactory });\n\n  //trkl.bind(window, { config.zoomLog, zoom: zoomValue, config.logSize });\n\n  config.zoomLog.subscribe(value => {\n    let factor = ZoomFactor(value);\n    //console.info('zoomFactor changed', value, factor);\n    store.set('zoom', value);\n    if(value === 1) throw new Error(value);\n  });\n\n  const updateIfChanged = (trkl, newValue, callback) => {\n    const oldValue = trkl() || [];\n    //console.info('updateIfChanged ', { oldValue, newValue });\n    if(!Array.prototype.every.call(oldValue, (elem, i) => newValue[i] === elem)) return false;\n    trkl(newValue);\n    if(typeof callback == 'function') callback(trkl, oldValue, newValue);\n    return true;\n  };\n\n  const changeInput = e => {\n    const { target } = e;\n    LogJS.info('changeInput:', target.value);\n    let { value } = target;\n    let parts = value.split(/\\s+/g);\n    let urls = parts.filter(p => /\\:\\/\\//.test(p)).join('\\n');\n    updateIfChanged(config.listURL, urls, arg => {\n      //console.debug('updateIfChanged:', arg);\n    });\n    config.listURL(urls);\n    //    value = parts.filter(p => !/\\:\\/\\//.test(p)).join(' ');\n    config.searchFilter(value == '' ? '*' : value.split(/\\s*\\|\\s*/g).join(' | '));\n  };\n\n  const Consumer = props => {\n    const result = useResult(async function* () {\n      for await(let time of timestamps) {\n        yield time;\n      }\n    });\n    return h(\n      'div',\n      {\n        className: 'vcenter fixed grow no-select',\n        style: {\n          flex: '1 0 auto',\n          justifyContent: 'flex-end',\n          color: 'white',\n          height: '60px',\n          width: '200px',\n          padding: '0 10px 0 0'\n        }\n      },\n      [result && new Date(result.value).toLocaleTimeString('de-CH')]\n    );\n  };\n  LogJS.addAppender(\n    class extends LogJS.BaseAppender {\n      log(type, time, msg) {\n        let d = new Date(time);\n        if(typeof window.pushlog == 'function')\n          window.pushlog([\n            type,\n            Util.isoDate(d).replace(/-/g, ''),\n            d.toLocaleTimeString(navigator.language || 'de'),\n            msg\n          ]);\n      }\n    }\n  );\n  let loggerRect = new Rect();\n  const Logger = props => {\n    const [lines, setLines] = useState([]);\n    const [ref, rect] = useDimensions();\n\n    const r = new Rect(rect);\n    if(!loggerRect.equals(r)) {\n      loggerRect = r;\n    }\n    const result = useResult(async function* () {\n      for await(let msg of logger) {\n        //  console.debug(\"msg:\", msg);\n        yield msg;\n      }\n    });\n    if(result) {\n      lines.push(result.value);\n    }\n    return h(\n      'table',\n      { className: 'logger', ref },\n      lines.slice(-100, lines.length).map(([type, d, t, m], i) =>\n        h('tr', {}, [\n          h(\n            'td',\n            { className: 'log sign' },\n            h('img', {\n              className: 'log sign',\n              src: `static/${type.toLowerCase() || 'warn'}.svg`,\n              style: { height: '14px', width: 'auto', marginTop: '-1px' }\n            })\n          ),\n          h('td', { className: 'log message' }, m + '')\n        ])\n      )\n    );\n  };\n\n  dump({ ...dump(), test: 123 });\n\n  const Dumper = props => {\n    const [values, setValues] = useState(dump());\n    let lines = [];\n    dump.subscribe(value => setValues(value));\n    for(let [key, value] of Object.entries(values)) lines.push([key, value]);\n    return h(\n      'table',\n      { border: '0', cellpadding: 3, cellspacing: 0, className: 'dumper' },\n      lines.map(([k, v], i) =>\n        h('tr', { className: 'watch' }, [\n          h('td', { className: 'name' }, k + ''),\n          h('td', { className: 'value' }, v + '')\n        ])\n      )\n    );\n  };\n\n  const Commander = ({ onCommand, ...props }) => {\n    const [inputText, setInputText] = useState('');\n    const handler = e => {\n      const { target } = e;\n      if(e.type.endsWith('down') && e.keyCode == 13) {\n        const value = target.value || inputText;\n        if(value != '') {\n          if(typeof onCommand == 'function') onCommand(value);\n          setInputText('');\n        }\n      } else {\n        setInputText(target.value);\n      }\n    };\n    return h(\n      'input',\n      {\n        type: 'text',\n        className: 'commander',\n        value: inputText,\n        onKeyDown: handler,\n        autofocus: true\n      },\n      []\n    );\n  };\n\n  const layersDropDown = trkl(false);\n\n  const toggle = trkl => trkl(!trkl());\n  let setTo;\n\n  const Layer = ({ title, name, label, i, color, element, className, ...props }) => {\n    let setVisible = props.visible || element.handlers.visible,\n      visible = useTrkl(setVisible);\n    const isVisible = visible === true || (visible !== false && Util.is.on(visible));\n    if(Util.isObject(element) && 'visible' in element)\n      setVisible = value => (element.visible = value);\n    let [solo, setSolo] = useState(null);\n\n    const onMouseDown = Util.debounce(e => {\n      //console.log('onMouseDown', e);\n      /* if(e.buttons & 1)*/ {\n        setVisible((setTo = !isVisible));\n        return true;\n      }\n    }, 200);\n    // console.log(`Layer #${i} ${name} isVisible=${isVisible}`);\n    return h(\n      'div',\n      {\n        className: classNames(className, !isVisible && 'gray'),\n        id: `layer-${i}`,\n        'data-layer': `${(element && element.number) || i} ${(element && element.name) || name}`,\n        onClick: useDoubleClick(\n          e => {\n            let { target } = e;\n\n            while(!target.hasAttribute('id') && target.parentElement)\n              target = target.parentElement;\n            //console.log('Double click', { solo, i, target });\n            let layers = [...layerList()];\n            let visibleLayers = layers.filter(l => Util.is.on(l.visible()));\n            let hiddenLayers = layers.filter(l => !Util.is.on(l.visible()));\n            //console.log('Layer.onClick', { visibleLayers, hiddenLayers, solo });\n\n            if(solo) {\n              onMouseDown.clear();\n              let restoreData = solo;\n\n              setSolo(null);\n              restoreItemStates(restoreData, (item, value) => item.visible(value ? 'yes' : 'no'));\n\n              //console.debug('restoreData:', restoreData);\n            } else {\n              let saved = saveItemStates(layers, item => Util.is.on(item.visible()));\n              //console.debug('saved:', saved);\n              setSolo(saved);\n              //console.debug('layers:', layers);\n              const states = layers.map(l => [l, l.i == i]);\n              //console.debug('states:', states);\n              states.forEach(([l, state]) => l.visible(state ? 'yes' : 'no'));\n              //    for(let l of layers) l.visible(l.name == name ? 'no' : 'yes');\n              setVisible(true);\n            }\n            layerList(layers);\n          },\n          onMouseDown ||\n            (e => {\n              let layers = [...layerList()];\n              if(solo) {\n              } else {\n              }\n\n              layerList(layers);\n            }),\n          { timeout: 40 }\n        ),\n        onMouseMove: e => {\n          if(e.buttons & 1 && setTo !== undefined) setVisible(setTo);\n        },\n        onMouseUp: e => {\n          setTo = null;\n        } /*,\n        onMouseDown*/\n      },\n      [\n        h(\n          'span',\n          {\n            className: classNames(className, 'number'),\n            style: {\n              background: color || (Util.isObject(element) && element.color)\n            },\n            ...props\n          },\n          `${i}`\n        ),\n        h(\n          'span',\n          {\n            className: classNames(className, 'name', !isVisible && 'gray', solo && 'bold'),\n            ...props\n          },\n          `${name}`\n        ),\n        h('img', {\n          className: classNames(className, 'visible'),\n          ...props,\n          style: { height: '1em', width: 'auto' },\n          src: `static/svg/${isVisible ? 'show' : 'hide'}.svg`\n        })\n      ]\n    );\n  };\n\n  class DocumentList {\n    constructor() {\n      this.repeater = new Repeater((push, stop) => {\n        this.push = push;\n        this.stop = stop;\n      });\n      this.map = new Map();\n    }\n\n    add(name, component) {\n      const { map } = this;\n\n      if(!ReactComponent.isComponent(component)) component = h(component, {}, []);\n\n      map.set(name, component);\n      this.update();\n    }\n\n    addEntry([name, component]) {\n      return this.add(name, component);\n    }\n\n    remove(name) {\n      if(map.has(name)) {\n        map.delete(name);\n        this.update();\n        return true;\n      }\n    }\n\n    update() {\n      const { map } = this;\n      this.push([...map.values()]);\n    }\n  }\n  let data;\n\n  console.log('DUMMY');\n\n  window.documentList = data = new DocumentList();\n  React.render(h(DisplayList, { data }), Element.find('#display'));\n\n  let preactComponent = h(SlotProvider, {}, [\n    h(Panel, { className: classNames('buttons', 'no-select'), tag: 'header' }, [\n      h(Button, {\n        image: 'static/svg/browse.svg',\n        state: open,\n        fn: e => {\n          if(e.type.endsWith('down')) {\n            //console.log('file list push', e);\n            open(!open());\n          }\n        }\n      }),\n\n      /* h(Button, {\n          caption: 'Random',\n          fn: ModifyColors(c => c.replaceAll(c => HSLA.random()))\n        }),\n        h(Button, {\n          caption: 'Invert',\n          fn: ModifyColors(c => c.replaceAll(c => c.invert()))\n        }),*/\n      h(DropDown, {}, []),\n      h(Button, {\n        //  caption: '↔',\n        fn: MakeFitAction(VERTICAL & 1),\n        image: 'static/svg/fit-vertical.svg'\n      }),\n      h(Button, {\n        //  caption: '↕',\n        fn: MakeFitAction(HORIZONTAL & 1),\n        image: 'static/svg/fit-horizontal.svg'\n      }),\n      h(Conditional, { signal: currentProj }, [\n        h(Button, {\n          //  caption: '↕',\n          fn: () => config.showGrid(!config.showGrid()),\n          state: config.showGrid,\n          toggle: true,\n          image: 'static/svg/grid.svg'\n        }),\n        h(\n          DropDown,\n          {\n            isOpen: layersDropDown.subscribe(open => console.log('layers dropdown', { open }))\n            // into: '#portal'\n          },\n          [\n            props =>\n              h(Button, {\n                ...props,\n                toggle: true,\n                state: layersDropDown,\n                image: 'static/svg/layers.svg'\n              }),\n            props =>\n              h(\n                Chooser,\n                {\n                  ...props,\n                  className: 'layers',\n                  itemClass: 'layer',\n                  itemComponent: Layer,\n                  items: layerList\n                },\n                []\n              )\n          ]\n        ),\n        h(Button, {\n          fn: debounceAsync(async e => {\n            /*console.log(\"CAM button\",{e});\n              if(e.type.endsWith('up')) return false;*/\n            let r;\n            project.gerber = {};\n            project.gcode = {};\n            //console.debug('CAM Button');\n            for(let side of ['back', 'front', 'drill', 'outline']) {\n              let gerber = await BoardToGerber(project, {\n                side,\n                [side]: true,\n                fetch: ['drill', 'outline'].indexOf(side) != -1\n              });\n\n              if(gerber) {\n                //console.debug(`project.gerber['${side}'] =`, gerber);\n                project.gerber[side] = gerber;\n                if(gerber && gerber.data) {\n                  gerber.cmds = await GerberParser.parse(gerber.data);\n                  gerber.unit = gerber.cmds.find(i => i.prop == 'units');\n\n                  gerber.points = gerber.cmds\n                    .filter(i => i.coord)\n                    .map(({ coord }) => new Point(coord.x, coord.y));\n                }\n                //console.debug('BoardToGerber side =', side, ' file =', gerber.file);\n              }\n            }\n            const sides = /*Object.fromEntries*/ ['back', 'front', 'drill', 'outline'].map(side => [\n              side,\n              project.gerber[side].file\n            ]);\n            //console.debug('  sides = ', sides);\n            //console.debug('  project = ', project);\n            let allGcode = {};\n            for(let [side, file] of sides) {\n              let gcode = await GerberToGcode(project, {\n                side,\n                file,\n                nog64: true,\n                'fill-outline': true,\n                voronoi: true,\n                /*'zero-start': true,*/ nog81: true\n              });\n              allGcode[side] = gcode;\n              //project.gcode[side] = gcode.data && gcode.data.data ? gcode.data.data : gcode.data;\n            }\n            //console.debug('GerberToGcode allGcode = ', allGcode);\n            let bbox;\n            for(let side of ['outline', 'back', 'front', 'drill']) {\n              try {\n                let gerber = project.gerber[side];\n                let data = allGcode[side];\n                let file = gerber.file || allGcode.data.files[side];\n                //console.debug('GerberToGcode  ', { gerber, data, file });\n\n                if(data) {\n                  let gc = { data, file };\n\n                  if(side != 'drill') {\n                    let processed = file.replace(/\\.ngc$/, '.svg');\n                    //console.debug('processed', processed);\n                    gc.svg = await FetchURL(processed).then(ResponseData);\n                    let pos;\n\n                    if(gc.svg) {\n                      if((pos = gc.svg.indexOf('<svg ')) != -1) gc.svg = gc.svg.substring(pos);\n\n                      if(side == 'outline') {\n                        //console.debug('outline', gc.svg);\n                        let xmlData = tXml(gc.svg);\n                        let svgPath = Util.tail(xmlData[0].children).children[0];\n                        let points = SVG.pathToPoints(svgPath.attributes);\n                        //console.debug('points:', points);\n                        bbox = new Rect(new BBox().update(points)).round(0.001);\n                        //console.debug('bbox:', bbox);\n\n                        continue;\n                      }\n                      //  console.debug('gc.svg ',gc.svg );\n                      let layer = GetLayer({\n                        name: makeLayerName('processed', side),\n                        'data-filename': processed,\n                        create: (project, props = {}) => {\n                          let g = SVG.create(\n                            'g',\n                            { innerHTML: gc.svg, ...props },\n                            project.svgElement\n                          );\n                          g.innerHTML = gc.svg;\n                          if(g.firstElementChild && g.firstElementChild.tagName == 'svg') {\n                            let svg = g.firstElementChild;\n                            ['width', 'height', 'xmlns', 'xmlns:xlink', 'version'].forEach(a =>\n                              svg.removeAttribute(a)\n                            );\n                            svg.setAttribute('viewBox', bbox);\n                          }\n                          Element.findAll('path', g)\n                            .filter(e => e.style['fill-opacity'] == 1)\n                            .forEach(e => (e.style.display = 'none'));\n\n                          ['fill', 'stroke'].forEach(name =>\n                            Element.findAll(`[style*=\"${name}:\"]`, g).forEach(e => {\n                              const value = e.style[name];\n                              if(value != 'rgb(0, 0, 0)' && value != 'none') {\n                                e.setAttribute(name, value);\n                                e.style.removeProperty(name);\n                              }\n                            })\n                          );\n\n                          return g;\n                        }\n                      });\n                      /*\n                      layer.sublayers = Util.histogram(Element.walk(layer.dom, (e, acc) => (e.tagName.endsWith('g') ? acc : [...acc, e]), []),\n                        e => e.getAttribute('style'),\n                        new Map(),\n                        () => new Set()\n                      );*/\n                    }\n                  }\n\n                  //console.debug('GerberToGcode side =', side, ' gc =', gc.file, ' svg =', Util.abbreviate(gc.svg));\n                }\n              } catch(e) {\n                Util.putError(e);\n              }\n            }\n            gcode(project.gcode);\n\n            function makeLayerName(name, side) {\n              const prefix = side == 'front' ? 't-' : side == 'back' ? 'b-' : '';\n              return Util.camelize(\n                prefix + path.basename(name, /\\.[^.]+$/).replace(new RegExp(`_${side}`), '')\n              );\n            }\n          }, 100),\n          'data-tooltip': 'Generate Gerber RS274-X CAM data',\n          image: 'static/svg/cnc-obrabeni.svg'\n        })\n      ]),\n\n      h(Conditional, { signal: gcode }, [\n        h(Button, {\n          fn: () => {\n            const colors = {\n              front: 'hsl(300,100%,70%)',\n              back: 'hsl(230,100%,70%)'\n            };\n            for(let side of ['back', 'front']) {\n              let gc = project.gcode[side];\n              if(gc) {\n                //console.debug(`${side} gcode gc =`, gc);\n                GcodeToPolylines(gc.data, {\n                  fill: false,\n                  color: colors[side],\n                  side\n                });\n              }\n            }\n          },\n          'data-tooltip': 'Create Voronoi diagram',\n          image: 'static/svg/voronoi.svg'\n        })\n      ]),\n      h(Toggle, {\n        state: sortOrder,\n        images: ['static/svg/sort-asc.svg', 'static/svg/sort-desc.svg'],\n        //disable: trkl(true),\n        visible: open\n      }),\n      h(DynamicLabel, {\n        className: 'vcenter pad-lr',\n        caption: documentTitle\n      }),\n      h(DynamicLabel, {\n        className: 'vcenter pad-lr',\n        caption: documentSize\n      }),\n      h(Consumer, {})\n    ]),\n    h(ButtonGroup, {className: 'small', onChange(event) {\n         let { currentTarget, target } = event;\n         let key = target.getAttribute('data-key');\n\n console.log('Sort order changed', key);\n config.sortKey(key);\n\n    } }, [\n      props =>\n        h('img', {\n          src: 'static/svg/sort-name-2.svg',\n          alt: 'Name', 'data-key': 'name', ...props\n        }),\n      props =>\n      \n        h('img', {\n          src: 'static/svg/sort-time-2.svg',\n          alt: 'Modification time','data-key': 'mtime', ...props\n        }),\n      props =>\n        h('img', {\n          src: 'static/svg/sort-size-2.svg',\n          alt: 'Size','data-key': 'size', ...props\n        })\n    ]),\n    /*  h('div', { style: { display: 'inline-flex', flexFlow: 'row', alignItems: 'stretch', height: '100px', padding: '10px' } }, [\n        h(ColorWheel, {}),\n        h(Slider, {\n          min: 0,\n          max: 100,\n          value: 100,\n          orient: 'vertical',\n          name: 'S',\n          length: '10px',\n          style: { flex: '0 1 auto' },\n          onChange: value => {\n            //console.log('value:', value);\n          }\n        }),\n        h(Slider, {\n          min: 0,\n          max: 100,\n          orient: 'vertical',\n          name: 'L',\n          length: '10px',\n          style: { flex: '0 1 auto' },\n          onChange: value => {\n            //console.log('value:', value);\n          }\n        })\n      ]),*/\n    h(FileList, {\n      listTag: 'nav',\n      files: projects,\n      onActive: open,\n      onChange: debounceAsync(async (e, p, i) => await ChooseDocument(p, i), 5000, {\n        leading: true\n      }),\n      filter: config.searchFilter,\n      showSearch,\n      changeInput,\n      focusSearch,\n      sortKey,\n      sortOrder,\n      makeSortCompare: key =>\n        key == 'name' || !key\n          ? function(a, b) {\n              let nameA = a.name,\n                nameB = b.name;\n              let extA = path.extname(nameA),\n                extB = path.extname(nameB);\n              if(extA == '.lbr' && extB != '.lbr') return -1;\n              if(extA != '.lbr' && extB == '.lbr') return 1;\n              return nameA.localeCompare(nameB);\n            }\n          : function(a, b) {\n              let valueA = a[key],\n                valueB = b[key];\n              return valueA < valueB ? -1 : valueA > valueB ? 1 : 0;\n            },\n      currentInput: currentSearch\n    }),\n\n    h(CrossHair, { ...crosshair }),\n    h(FloatingPanel, { onSize: config.logSize, className: 'no-select', id: 'console' }, [\n      /*h(div, {}, [ */ h(Logger, {}),\n      h(Dumper, {}),\n      h(Commander, {\n        onCommand: cmdStr => {\n          let fn = new Function(`return ${cmdStr};`);\n\n          //console.log('Command:', cmdStr);\n          LogJS.info(`> ${cmdStr}`);\n          let result = fn();\n          LogJS.info(`= ${Util.toSource(result)}`);\n        }\n      }) /*])*/\n    ]),\n    h(Slot, { name: 'layers' }),\n    h(\n      Conditional,\n      { signal: wantAuthorization },\n      h(AuthorizationDialog, { onAuth: config.credentials })\n    ),\n    h(Ruler, {\n      class: 'ruler-container vertical ',\n      handleChange: e => {\n        //console.log('Ruler changed:', e);\n      },\n      style: {\n        position: 'absolute',\n        right: 0\n      }\n    })\n  ]);\n  console.log('DUMMY', (window.preactComponent = preactComponent));\n  React.render(preactComponent, Element.find('#preact'));\n\n  let move, resize;\n  let box;\n  container = Element.find('#main');\n\n  let touchHandler = trkl();\n  let moveHandler = trkl();\n\n  //Element.find('.transformed-element-size').setAttribute('id', 'transformed-element');\n\n  TouchListener(touchHandler, { element: window });\n\n  window.addEventListener('pointermove', moveHandler);\n\n  let rects = (window.rects = new Map());\n  let elems = (window.elems = new Set());\n  window.addEventListener('pointerdown', event => {\n    window.elements = [...elems].filter(e => e.tagName == 'path');\n  });\n  let css = {\n    cursor: undefined,\n    'pointer-events': undefined,\n    'user-select': undefined\n  };\n\n  //moveHandler.subscribe(MoveEvent);\n\n  touchHandler.subscribe(TouchEvent);\n\n  function MoveEvent(event, prevEvent) {\n    const { x, y, clientX, clientY, index, buttons, start, type, target } = event;\n    window.lastMoveEvent = event;\n    event.elements = document.elementsFromPoint(x, y);\n    function* WalkUp(e) {\n      while(e) {\n        yield e;\n        e = e.parentElement;\n      }\n    }\n    let zIndex = Util.find(\n      Util.map(WalkUp(event.target), e => e.style.getPropertyValue('z-index')),\n      z => /^[0-9]/.test(z)\n    );\n    if(zIndex > 0) Util.clear(event.elements);\n    for(let e of event.elements)\n      Element.walkUp(e)\n        .slice(1)\n        .forEach(p => Util.remove(event.elements, p));\n    Util.remove(event.elements, document.documentElement);\n\n    event.layers = new Map(\n      event.elements.map(e => [\n        e,\n        Element.walkUp(e, e => {\n          if(e.hasAttribute('data-layer')) throw e.getAttribute('data-layer');\n        })\n      ])\n    );\n    event.colors = new Map();\n    for(let [e, layer] of event.layers) {\n      if(!layer || /(Measure|Dimension)/.test(layer)) continue;\n      let l = FindLayer(layer);\n      if(l) event.colors.set(e, l.color.setOpacity(0.8) || '#000');\n    }\n    event.classes = new Map(\n      event.elements.map(e => [\n        e,\n        Util.ifThenElse(\n          v => v,\n          l => l.map(e => e.classList.value),\n          () => ''\n        )(\n          Element.walkUp(\n            e,\n            (e, depth) => !e.classList.value.startsWith('aspect') && e.classList.value\n          )\n        )\n      ])\n    );\n    Util.removeIf(event.classes, classes => classes == '');\n    Util.removeIf(event.elements, e => e.tagName == 'polyline');\n    Util.removeIf(event.elements, e => !(event.classes.has(e) || event.colors.has(e)));\n    const group =\n      project &&\n      project.makeGroup &&\n      project.makeGroup({\n        id: 'rects',\n        stroke: '#ff6f00',\n        'stroke-width': 0.127,\n        fill: 'none',\n        'stroke-linecap': 'square',\n        'vector-effect': 'non-scaling-stroke',\n        'pointer-events': 'none'\n      });\n\n    if(prevEvent && group) {\n      let u = Util.union(prevEvent.elements, event.elements, (a, b) => a.isSameNode(b));\n      let [remove, add] = Util.difference(\n        prevEvent.elements,\n        event.elements,\n        (a, b) => a.findIndex(Node.prototype.isSameNode, b) != -1\n      );\n\n      //  console.log('difference:', [remove,add], 'union:', u);\n      //  console.log('add:', add);\n\n      const bboxes = new Map(\n        add.map(e => [e, new Rect(e.getBBox ? e.getBBox() : e.getBoundingClientRect())])\n      );\n\n      for(let [e, rect] of bboxes) {\n        let transforms =\n          Element.walkUp(e, (p, d, set, stop) =>\n            p.parentElement == null || p.parentElement.isSameNode(p.ownerSVGElement)\n              ? stop()\n              : p.hasAttribute('transform') && set(p.getAttribute('transform'))\n          ) || [];\n        transforms = transforms.reverse();\n        elems.add(e);\n        let props = {\n          ...rect.round(0.001).toObject(),\n          transform: transforms.join(' ')\n        };\n        rects.set(e, [\n          // SVG.create('rect', { ...props, stroke: '#000', 'stroke-width': 0.127 * 2 }, group),\n          SVG.create(\n            'rect',\n            { ...props, 'stroke-dasharray': '0.508 0.508', stroke: '#000' },\n            group\n          ),\n          SVG.create(\n            'rect',\n            {\n              ...props,\n              'stroke-dasharray': '0.508 0.508',\n              'stroke-dashoffset': 0.508,\n              stroke: '#ff0'\n            },\n            group\n          )\n        ]);\n      }\n      /*\n      add.forEach(e => {\n        elems.add(e);\n        rects.set(e, devtools.rect(new Rect(e.getBoundingClientRect()), event.colors.get(e) || '#00000000', event.colors.get(e)));\n      });*/\n      remove.forEach(e => {\n        let rect = rects.get(e);\n        rects.delete(e);\n\n        if(Util.isArray(rect)) rect.forEach(e => Element.remove(e));\n      });\n\n      if(bboxes.size) {\n        /* console.log('event.elements:', event.elements);\n        //console.log('event.classes:', event.classes);\n        //console.log('event.target:', zIndex);*/\n        //  console.log('rects:', Util.clone(bboxes));\n      }\n    }\n  }\n  function TouchEvent(event) {\n    const { x, y, index, buttons, start, type, target } = event;\n    //  console.log('touchHandler', event);\n    if(type.endsWith('end') || type.endsWith('up')) return cancel();\n    if(event.buttons === 0 && type.endsWith('move')) return cancel();\n    // if(event.index > 0) console.log('touch', { x, y, index, buttons, type, target }, container);\n    if(!move && !resize) {\n      let elemId;\n      //  console.log('target:', target);\n      box = (e => {\n        do {\n          elemId = e.getAttribute('id');\n          if(['fence', 'console'].indexOf(elemId) != -1) return e;\n        } while((e = e.parentElement));\n      })(target);\n      //console.log('box:', box);\n      if(event.buttons && event.buttons != 1) {\n        if('preventDefault' in event) event.preventDefault();\n        if(!resize && box) {\n          let edges = Element.rect(box).toPoints();\n          let corners = [edges[0], edges[2]].map((p, i) => [\n            i,\n            p.distance(new Point(start).sum(x, y)),\n            p\n          ]);\n          let edge = corners.sort((a, b) => a[1] - b[1])[0];\n          window.resize = resize = Element.resizeRelative(box, null, edge[0] ? -1 : 1, size => {\n            //    console.log('resizeRelative:', { elemId, size });\n            if(elemId == 'console') config.logSize(size);\n          });\n          box.style.cursor = `nwse-resize`;\n          //console.log('RESIZE:', { resize, box, corners, edge });\n          return true;\n        }\n        return cancel();\n      }\n\n      //        let box = Element.find('#main').firstElementChild;\n      const id = box && box.getAttribute('id');\n\n      if(id == 'console') {\n        const rects = [true, false].map(border => Element.rect(box, { border }));\n        let p = new Point(start.x + x, start.y + y);\n        //console.log('', p);\n        const inside = rects.map(r => r.inside(p));\n        const inBorder = inside[0] && !inside[1];\n        function mod(n, m) {\n          return ((n % m) + m) % m;\n        }\n        let rad = p.diff(rects[0].center).toAngle();\n        let deg = Math.round((rad * 180) / Math.PI);\n        let sector = mod(Math.floor(((180 - deg) * 8) / 360), 8);\n        let directions = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];\n        let norm = Point.fromAngle(rad, 1);\n        //console.log('box: ', id, ...inside, inBorder, p, { sector, deg });\n        let compass = directions[sector];\n      }\n      if(box) {\n        let translation = new Translation();\n        let transformList = new TransformationList([translation]).concat(transform());\n\n        let setStyle = Util.once(() =>\n          Element.setCSS(box, {\n            cursor: 'move',\n            'pointer-events': 'none',\n            'user-select': 'none'\n          })\n        );\n\n        window.move = move = Element.moveRelative(\n          box,\n          null,\n          id == 'console' ? ['right', 'bottom'] : ['left', 'top'],\n          (pos, last, first) => {\n            if(pos && first) {\n              let rel = Point.diff(pos, first);\n              if(rel.distanceSquared() > 0) {\n                setStyle();\n\n                translation.x = rel.x;\n                translation.y = rel.y;\n                transform(transformList.collapse());\n                //   console.log('TouchHandler transform:', transform());\n              }\n            }\n          }\n        );\n      }\n      return true;\n    }\n    if((move || resize) && event.buttons == 0) {\n      return cancel();\n    }\n\n    if(event.index > 0) {\n      let rel = new Point(event).sub(event.start);\n      let absolute = new Point(start).add(rel);\n\n      if(resize) {\n        if(event.buttons > 0) resize(-rel.x, -rel.y);\n        else resize = resize.jump();\n      } else if(move) {\n        /*  window.crosshair.show = true;\n          window.crosshair.position = absolute;*/\n\n        //          console.log('move', { rel, absolute });\n        if(event.buttons > 0) move(rel.x, rel.y);\n        else move = move.jump();\n      }\n    }\n    function cancel() {\n      move = null;\n      resize = null;\n      window.crosshair.show = false;\n\n      if(box && box.style) Element.setCSS(box, css);\n      /*return*/ event.cancel();\n      return false;\n    }\n  }\n  window.oncontextmenu = function(e) {\n    const { x, y, index, buttons, start, type, target } = event;\n    let rect = Element.rect('.transformed-element-size');\n    let cons = Element.rect('#console');\n    if(rect && cons) if (rect.inside(event) && !cons.inside(event)) return true;\n    if(e.shiftKey && e.altKey) return true;\n    //console.log('oncontextmenu',  event);\n    return false;\n  };\n  window.processEvents = async function eventLoop() {\n    for await(let e of new EventIterator('touch')) {\n      const {\n        altKey,\n        bubbles,\n        button,\n        buttons,\n        cancelBubble,\n        cancelable,\n        clientX,\n        clientY,\n        composed,\n        ctrlKey,\n        detail,\n        eventPhase,\n        fromElement,\n        isTrusted,\n        layerX,\n        layerY,\n        metaKey,\n        movementX,\n        movementY,\n        offsetX,\n        offsetY,\n        pageX,\n        pageY,\n        path,\n        region,\n        relatedTarget,\n        returnValue,\n        screenX,\n        screenY,\n        shiftKey,\n        srcElement,\n        target,\n        timeStamp,\n        toElement,\n        type,\n        view,\n        which,\n        x,\n        y,\n        ...event\n      } = e;\n      // LogJS.info(`${type} ` + /* Util.toSource(e)+ */ ` ${x},${y} → ${Element.xpath(target)}`);\n    }\n  };\n  processEvents();\n\n  //  eventLoop();\n\n  window.styles = CSS.create('head');\n\n  /* document.addEventListener('keydown', event => {\n    const { ctrlKey, shiftKey, altKey, metaKey } = event;\n\n    if(true || ctrlKey || shiftKey || altKey || metaKey) {\n      const { key, code, keyCode } = event;\n      const { target, currentTarget } = event;\n      //console.log('keydown: ', (window.keyEvent = event));\n    }\n  });*/\n\n  window.addEventListener('wheel', event => {\n    const {\n      wheelDelta,\n      deltaMode,\n      deltaX,\n      deltaY,\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      x,\n      y,\n      offsetX,\n      offsetY,\n      layerX,\n      layerY\n    } = event;\n\n    window.wheelEvent = event;\n\n    const clientArea = Element.rect('body > div');\n    const sideBar = Element.rect('.sidebar');\n\n    if(sideBar.x2 > clientArea.x1) {\n      clientArea.width -= sideBar.x2;\n      clientArea.x = sideBar.x2;\n      clientArea.width = window.innerWidth - clientArea.x;\n    }\n    clientArea.height = window.innerHeight;\n    clientArea.x += container.parentElement.scrollLeft;\n\n    const clientCenter = clientArea.center;\n    const { target, currentTarget, buttons, altKey, ctrlKey, shiftKey } = event;\n    const pos = new Point(clientX, clientY);\n\n    if(\n      Element.walkUp(target)\n        .map(e => [...e.classList])\n        .flat()\n        .indexOf('ruler-container') != -1\n    )\n      return;\n\n    //console.log('wheel:', { deltaY, deltaMode, wheelDelta, target });\n\n    if(!pos.inside(clientArea)) return;\n\n    const dy = Math.sign(event.deltaY) * 53;\n\n    const wheelPos = -dy.toFixed(2);\n    let zoomVal = config.zoomLog();\n\n    zoomVal = altKey || ctrlKey || shiftKey ? 0 : Util.clamp(-100, 300, zoomVal + wheelPos * 0.1);\n    config.zoomLog(zoomVal);\n    AdjustZoom();\n  });\n\n  //console.error('AppMain done');\n\n  //console.log(globalThis);\n\n  /*  for(let path of [...Element.findAll('path')]) {\n    let points = new PointList([...SVG.pathIterator(path, 30, p => p.toFixed(3))]);\n  }*/\n});\nconst Module = {\n  noInitialRun: true,\n  onRuntimeInitialized: () => {\n    //console.log('initialized');\n    let myString = prompt('Enter a string:');\n    Module.callMain([myString]);\n  },\n  print: txt => alert(`The MD5 hash is: ${txt}`)\n};\n",
			"file": "main.js",
			"file_size": 96872,
			"file_write_time": 132823881657472348,
			"settings":
			{
				"buffer_size": 96869,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					253,
					1,
					"cut",
					null,
					"AQAAAI87AQAAAAAAjzsBAAAAAAATAAAAY2xhc3NOYW1lOiAnc21hbGwnLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPOwEAAAAAAKI7AQAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"paste",
					null,
					"AQAAAF07AQAAAAAAcDsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdOwEAAAAAAF07AQAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"left_delete",
					null,
					"AQAAAG87AQAAAAAAbzsBAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwOwEAAAAAAHA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG87AQAAAAAAcDsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvOwEAAAAAAG87AQAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAI47AQAAAAAAjjsBAAAAAAAGAAAAQnV0dG9ujjsBAAAAAACWOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOOwEAAAAAAJQ7AQAAAAAAAAAAAAAA8L8"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "img"
					},
					"BAAAAI87AQAAAAAAkDsBAAAAAAAAAAAAkDsBAAAAAACQOwEAAAAAAAYAAABCdXR0b26QOwEAAAAAAJE7AQAAAAAAAAAAAJE7AQAAAAAAkjsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPOwEAAAAAAJU7AQAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "src"
					},
					"BAAAAKw7AQAAAAAArTsBAAAAAAAAAAAArTsBAAAAAACtOwEAAAAAAAUAAABpbWFnZa07AQAAAAAArjsBAAAAAAAAAAAArjsBAAAAAACvOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsOwEAAAAAALE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "alt"
					},
					"BAAAANk7AQAAAAAA2jsBAAAAAAAAAAAA2jsBAAAAAADaOwEAAAAAAAcAAABjYXB0aW9u2jsBAAAAAADbOwEAAAAAAAAAAADbOwEAAAAAANw7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZOwEAAAAAAOA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"left_delete",
					null,
					"AQAAAJc7AQAAAAAAlzsBAAAAAAALAAAAICAgICAgICAgIAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXOwEAAAAAAKI7AQAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"cut",
					null,
					"AQAAANk7AQAAAAAA2TsBAAAAAAAUAAAALAogICAgICAgICAgLi4ucHJvcHM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZOwEAAAAAAO07AQAAAAAAAAAAAAAA8L8"
				],
				[
					315,
					1,
					"paste",
					null,
					"AgAAAPU7AQAAAAAACDwBAAAAAAAAAAAACDwBAAAAAAAIPAEAAAAAABQAAAAgICAgICAgIGgoQnV0dG9uLCB7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1OwEAAAAAAAk8AQAAAAAAAAAAAAAA8L8"
				],
				[
					321,
					1,
					"paste",
					null,
					"AgAAAKs8AQAAAAAAvjwBAAAAAAAAAAAAvjwBAAAAAAC+PAEAAAAAABQAAAAgICAgICAgIGgoQnV0dG9uLCB7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrPAEAAAAAAL88AQAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"left_delete",
					null,
					"AQAAAAg8AQAAAAAACDwBAAAAAAAeAAAAICAgICAgICAgIGNsYXNzTmFtZTogJ3NtYWxsJywK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIPAEAAAAAACY8AQAAAAAAAAAAAAAA8L8"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "src"
					},
					"BAAAABI8AQAAAAAAEzwBAAAAAAAAAAAAEzwBAAAAAAATPAEAAAAAAAUAAABpbWFnZRM8AQAAAAAAFDwBAAAAAAAAAAAAFDwBAAAAAAAVPAEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASPAEAAAAAABc8AQAAAAAAAAAAAAAA8L8"
				],
				[
					341,
					1,
					"insert_completion",
					{
						"completion": "srch",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "srch"
					},
					"AgAAABI8AQAAAAAAEjwBAAAAAAADAAAAc3JjEjwBAAAAAAAWPAEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVPAEAAAAAABU8AQAAAAAAAAAAAAAA8L8"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "alt"
					},
					"BAAAAEA8AQAAAAAAQTwBAAAAAAAAAAAAQTwBAAAAAABBPAEAAAAAAAcAAABjYXB0aW9uQTwBAAAAAABCPAEAAAAAAAAAAABCPAEAAAAAAEM8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAPAEAAAAAAEc8AQAAAAAAAAAAAAAA8L8"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "src"
					},
					"BAAAABI8AQAAAAAAEzwBAAAAAAAAAAAAEzwBAAAAAAATPAEAAAAAAAQAAABzcmNoEzwBAAAAAAAUPAEAAAAAAAAAAAAUPAEAAAAAABU8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASPAEAAAAAABY8AQAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "src"
					},
					"BAAAAMI8AQAAAAAAwzwBAAAAAAAAAAAAwzwBAAAAAADDPAEAAAAAAAUAAABpbWFnZcM8AQAAAAAAxDwBAAAAAAAAAAAAxDwBAAAAAADFPAEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCPAEAAAAAAMc8AQAAAAAAAAAAAAAA8L8"
				],
				[
					360,
					1,
					"left_delete",
					null,
					"AQAAAJo8AQAAAAAAmjwBAAAAAAAeAAAAICAgICAgICAgIGNsYXNzTmFtZTogJ3NtYWxsJywK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaPAEAAAAAALg8AQAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "alt"
					},
					"BAAAANE8AQAAAAAA0jwBAAAAAAAAAAAA0jwBAAAAAADSPAEAAAAAAAcAAABjYXB0aW9u0jwBAAAAAADTPAEAAAAAAAAAAADTPAEAAAAAANQ8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRPAEAAAAAANg8AQAAAAAAAAAAAAAA8L8"
				],
				[
					378,
					1,
					"left_delete",
					null,
					"AQAAAFk8AQAAAAAAWTwBAAAAAAATAAAAICAgICAgICAgIC4uLnByb3BzCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZPAEAAAAAAGw8AQAAAAAAAAAAAAAA8L8"
				],
				[
					384,
					1,
					"left_delete",
					null,
					"AQAAAMs8AQAAAAAAyzwBAAAAAAATAAAAICAgICAgICAgIC4uLnByb3BzCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLPAEAAAAAAN48AQAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAGk7AQAAAAAAajsBAAAAAAAAAAAAajsBAAAAAABrOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpOwEAAAAAAGk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					2,
					"left_delete",
					null,
					"AgAAAGo7AQAAAAAAajsBAAAAAAABAAAAYmk7AQAAAAAAaTsBAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrOwEAAAAAAGs7AQAAAAAAAAAAAAAA8L8"
				],
				[
					405,
					1,
					"paste",
					null,
					"AQAAAKE7AQAAAAAAtDsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChOwEAAAAAAKE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					406,
					1,
					"left_delete",
					null,
					"AQAAALM7AQAAAAAAszsBAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0OwEAAAAAALQ7AQAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALM7AQAAAAAAtDsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzOwEAAAAAALM7AQAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					1,
					"left_delete",
					null,
					"AQAAALM7AQAAAAAAszsBAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0OwEAAAAAALQ7AQAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALM7AQAAAAAAtDsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzOwEAAAAAALM7AQAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKA7AQAAAAAAoTsBAAAAAAAAAAAAoTsBAAAAAAChOwEAAAAAABQAAAAgY2xhc3NOYW1lOiAnc21hbGwnLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgOwEAAAAAALQ7AQAAAAAAAAAAAAAA8L8"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAANk7AQAAAAAA2jsBAAAAAAAAAAAA2jsBAAAAAADbOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZOwEAAAAAANk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					420,
					2,
					"left_delete",
					null,
					"AgAAANo7AQAAAAAA2jsBAAAAAAABAAAALNk7AQAAAAAA2TsBAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbOwEAAAAAANs7AQAAAAAAAAAAAAAA8L8"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": ",...props"
					},
					"CQAAANk7AQAAAAAA2jsBAAAAAAAAAAAA2jsBAAAAAADbOwEAAAAAAAAAAADbOwEAAAAAANw7AQAAAAAAAAAAANw7AQAAAAAA3TsBAAAAAAAAAAAA3TsBAAAAAADeOwEAAAAAAAAAAADeOwEAAAAAAN87AQAAAAAAAAAAAN87AQAAAAAA4DsBAAAAAAAAAAAA4DsBAAAAAADhOwEAAAAAAAAAAADhOwEAAAAAAOI7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZOwEAAAAAANk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					431,
					1,
					"paste",
					null,
					"AgAAAGA8AQAAAAAAaTwBAAAAAAAAAAAAaTwBAAAAAABpPAEAAAAAAAEAAAAs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgPAEAAAAAAGE8AQAAAAAAAAAAAAAA8L8"
				],
				[
					434,
					1,
					"paste",
					null,
					"AgAAANo8AQAAAAAA4zwBAAAAAAAAAAAA4zwBAAAAAADjPAEAAAAAAAEAAAAs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaPAEAAAAAANs8AQAAAAAAAAAAAAAA8L8"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": " 'data-"
					},
					"BwAAANo7AQAAAAAA2zsBAAAAAAAAAAAA2zsBAAAAAADcOwEAAAAAAAAAAADcOwEAAAAAAN07AQAAAAAAAAAAAN07AQAAAAAA3jsBAAAAAAAAAAAA3jsBAAAAAADfOwEAAAAAAAAAAADfOwEAAAAAAOA7AQAAAAAAAAAAAOA7AQAAAAAA4TsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaOwEAAAAAANo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "key':"
					},
					"BQAAAOE7AQAAAAAA4jsBAAAAAAAAAAAA4jsBAAAAAADjOwEAAAAAAAAAAADjOwEAAAAAAOQ7AQAAAAAAAAAAAOQ7AQAAAAAA5TsBAAAAAAAAAAAA5TsBAAAAAADmOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhOwEAAAAAAOE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": " 'name"
					},
					"BgAAAOY7AQAAAAAA5zsBAAAAAAAAAAAA5zsBAAAAAADoOwEAAAAAAAAAAADoOwEAAAAAAOk7AQAAAAAAAAAAAOk7AQAAAAAA6jsBAAAAAAAAAAAA6jsBAAAAAADrOwEAAAAAAAAAAADrOwEAAAAAAOw7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmOwEAAAAAAOY7AQAAAAAAAAAAAAAA8L8"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "0'"
					},
					"AgAAAOw7AQAAAAAA7TsBAAAAAAAAAAAA7TsBAAAAAADuOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsOwEAAAAAAOw7AQAAAAAAAAAAAAAA8L8"
				],
				[
					489,
					2,
					"left_delete",
					null,
					"AgAAAO07AQAAAAAA7TsBAAAAAAABAAAAJ+w7AQAAAAAA7DsBAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuOwEAAAAAAO47AQAAAAAAAAAAAAAA8L8"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "',"
					},
					"AgAAAOw7AQAAAAAA7TsBAAAAAAAAAAAA7TsBAAAAAADuOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsOwEAAAAAAOw7AQAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO47AQAAAAAA7zsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuOwEAAAAAAO47AQAAAAAAAAAAAAAA8L8"
				],
				[
					497,
					1,
					"paste",
					null,
					"AQAAAHY8AQAAAAAAijwBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2PAEAAAAAAHY8AQAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "mtime"
					},
					"BgAAAIM8AQAAAAAAhDwBAAAAAAAAAAAAhDwBAAAAAACEPAEAAAAAAAQAAABuYW1lhDwBAAAAAACFPAEAAAAAAAAAAACFPAEAAAAAAIY8AQAAAAAAAAAAAIY8AQAAAAAAhzwBAAAAAAAAAAAAhzwBAAAAAACIPAEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDPAEAAAAAAIc8AQAAAAAAAAAAAAAA8L8"
				],
				[
					504,
					1,
					"paste",
					null,
					"AQAAAAU9AQAAAAAAGT0BAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFPQEAAAAAAAU9AQAAAAAAAAAAAAAA8L8"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BQAAABI9AQAAAAAAEz0BAAAAAAAAAAAAEz0BAAAAAAATPQEAAAAAAAQAAABuYW1lEz0BAAAAAAAUPQEAAAAAAAAAAAAUPQEAAAAAABU9AQAAAAAAAAAAABU9AQAAAAAAFj0BAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASPQEAAAAAABY9AQAAAAAAAAAAAAAA8L8"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": ",,"
					},
					"AgAAAG87AQAAAAAAcDsBAAAAAAAAAAAAcDsBAAAAAABxOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvOwEAAAAAAG87AQAAAAAAAAAAAAAA8L8"
				],
				[
					525,
					1,
					"left_delete",
					null,
					"AQAAAHA7AQAAAAAAcDsBAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxOwEAAAAAAHE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": " onChange"
					},
					"CQAAAHA7AQAAAAAAcTsBAAAAAAAAAAAAcTsBAAAAAAByOwEAAAAAAAAAAAByOwEAAAAAAHM7AQAAAAAAAAAAAHM7AQAAAAAAdDsBAAAAAAAAAAAAdDsBAAAAAAB1OwEAAAAAAAAAAAB1OwEAAAAAAHY7AQAAAAAAAAAAAHY7AQAAAAAAdzsBAAAAAAAAAAAAdzsBAAAAAAB4OwEAAAAAAAAAAAB4OwEAAAAAAHk7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwOwEAAAAAAHA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					527,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHk7AQAAAAAAezsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5OwEAAAAAAHk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					528,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BQAAAHo7AQAAAAAAezsBAAAAAAAAAAAAezsBAAAAAAB8OwEAAAAAAAAAAAB8OwEAAAAAAH07AQAAAAAAAAAAAH07AQAAAAAAfjsBAAAAAAAAAAAAfjsBAAAAAAB/OwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6OwEAAAAAAHo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					5,
					"left_delete",
					null,
					"BQAAAH47AQAAAAAAfjsBAAAAAAABAAAAZX07AQAAAAAAfTsBAAAAAAABAAAAdHw7AQAAAAAAfDsBAAAAAAABAAAAYXs7AQAAAAAAezsBAAAAAAABAAAAdHo7AQAAAAAAejsBAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/OwEAAAAAAH87AQAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "inde"
					},
					"BAAAAHo7AQAAAAAAezsBAAAAAAAAAAAAezsBAAAAAAB8OwEAAAAAAAAAAAB8OwEAAAAAAH07AQAAAAAAAAAAAH07AQAAAAAAfjsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6OwEAAAAAAHo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					532,
					1,
					"left_delete",
					null,
					"AQAAAH47AQAAAAAAfjsBAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/OwEAAAAAAH87AQAAAAAAAAAAAAAA8L8"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": "x)"
					},
					"AgAAAH47AQAAAAAAfzsBAAAAAAAAAAAAfzsBAAAAAACAOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+OwEAAAAAAH47AQAAAAAAAAAAAAAA8L8"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIA7AQAAAAAAgTsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAOwEAAAAAAIA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIE7AQAAAAAAgzsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBOwEAAAAAAIE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					536,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAII7AQAAAAAAgzsBAAAAAAAAAAAAgzsBAAAAAACHOwEAAAAAAAAAAACHOwEAAAAAAIg7AQAAAAAAAAAAAIg7AQAAAAAAjDsBAAAAAAAAAAAAgzsBAAAAAACDOwEAAAAAAAQAAAAgICAggzsBAAAAAACJOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCOwEAAAAAAII7AQAAAAAAAAAAAAAA8L8"
				],
				[
					537,
					1,
					"insert",
					{
						"characters": "console.log'"
					},
					"DAAAAIk7AQAAAAAAijsBAAAAAAAAAAAAijsBAAAAAACLOwEAAAAAAAAAAACLOwEAAAAAAIw7AQAAAAAAAAAAAIw7AQAAAAAAjTsBAAAAAAAAAAAAjTsBAAAAAACOOwEAAAAAAAAAAACOOwEAAAAAAI87AQAAAAAAAAAAAI87AQAAAAAAkDsBAAAAAAAAAAAAkDsBAAAAAACROwEAAAAAAAAAAACROwEAAAAAAJI7AQAAAAAAAAAAAJI7AQAAAAAAkzsBAAAAAAAAAAAAkzsBAAAAAACUOwEAAAAAAAAAAACUOwEAAAAAAJU7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJOwEAAAAAAIk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					538,
					1,
					"left_delete",
					null,
					"AQAAAJQ7AQAAAAAAlDsBAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVOwEAAAAAAJU7AQAAAAAAAAAAAAAA8L8"
				],
				[
					539,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJQ7AQAAAAAAljsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUOwEAAAAAAJQ7AQAAAAAAAAAAAAAA8L8"
				],
				[
					540,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJU7AQAAAAAAlzsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVOwEAAAAAAJU7AQAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "Sort"
					},
					"BAAAAJY7AQAAAAAAlzsBAAAAAAAAAAAAlzsBAAAAAACYOwEAAAAAAAAAAACYOwEAAAAAAJk7AQAAAAAAAAAAAJk7AQAAAAAAmjsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWOwEAAAAAAJY7AQAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": " order"
					},
					"BgAAAJo7AQAAAAAAmzsBAAAAAAAAAAAAmzsBAAAAAACcOwEAAAAAAAAAAACcOwEAAAAAAJ07AQAAAAAAAAAAAJ07AQAAAAAAnjsBAAAAAAAAAAAAnjsBAAAAAACfOwEAAAAAAAAAAACfOwEAAAAAAKA7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaOwEAAAAAAJo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": " changed"
					},
					"CAAAAKA7AQAAAAAAoTsBAAAAAAAAAAAAoTsBAAAAAACiOwEAAAAAAAAAAACiOwEAAAAAAKM7AQAAAAAAAAAAAKM7AQAAAAAApDsBAAAAAAAAAAAApDsBAAAAAAClOwEAAAAAAAAAAAClOwEAAAAAAKY7AQAAAAAAAAAAAKY7AQAAAAAApzsBAAAAAAAAAAAApzsBAAAAAACoOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgOwEAAAAAAKA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKk7AQAAAAAAqjsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpOwEAAAAAAKk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": " index"
					},
					"BgAAAKo7AQAAAAAAqzsBAAAAAAAAAAAAqzsBAAAAAACsOwEAAAAAAAAAAACsOwEAAAAAAK07AQAAAAAAAAAAAK07AQAAAAAArjsBAAAAAAAAAAAArjsBAAAAAACvOwEAAAAAAAAAAACvOwEAAAAAALA7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqOwEAAAAAAKo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALE7AQAAAAAAsjsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxOwEAAAAAALE7AQAAAAAAAAAAAAAA8L8"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALI7AQAAAAAAszsBAAAAAAAAAAAAszsBAAAAAAC5OwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyOwEAAAAAALI7AQAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					1,
					"paste",
					null,
					"AQAAAIg7AQAAAAAAszsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIOwEAAAAAAIg7AQAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "evebnt"
					},
					"CAAAAHo7AQAAAAAAezsBAAAAAAAAAAAAezsBAAAAAAB7OwEAAAAAAAUAAABpbmRleNo7AQAAAAAA2jsBAAAAAAAGAAAAICAgICAgezsBAAAAAAB8OwEAAAAAAAAAAAB8OwEAAAAAAH07AQAAAAAAAAAAAH07AQAAAAAAfjsBAAAAAAAAAAAAfjsBAAAAAAB/OwEAAAAAAAAAAAB/OwEAAAAAAIA7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6OwEAAAAAAH87AQAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					3,
					"left_delete",
					null,
					"AwAAAH87AQAAAAAAfzsBAAAAAAABAAAAdH47AQAAAAAAfjsBAAAAAAABAAAAbn07AQAAAAAAfTsBAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAOwEAAAAAAIA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAH07AQAAAAAAfjsBAAAAAAAAAAAAfjsBAAAAAAB/OwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9OwEAAAAAAH07AQAAAAAAAAAAAAAA8L8"
				],
				[
					570,
					1,
					"paste",
					null,
					"AgAAANY7AQAAAAAA2zsBAAAAAAAAAAAA2zsBAAAAAADbOwEAAAAAAAUAAABpbmRleA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWOwEAAAAAANs7AQAAAAAAAAAAAAAA8L8"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAALI7AQAAAAAAszsBAAAAAAAAAAAAszsBAAAAAAC8OwEAAAAAAAAAAAC8OwEAAAAAAL07AQAAAAAAAAAAAL07AQAAAAAAvjsBAAAAAAAAAAAAvjsBAAAAAAC/OwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyOwEAAAAAALI7AQAAAAAAAAAAAAAA8L8"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": " key"
					},
					"BAAAAL87AQAAAAAAwDsBAAAAAAAAAAAAwDsBAAAAAADBOwEAAAAAAAAAAADBOwEAAAAAAMI7AQAAAAAAAAAAAMI7AQAAAAAAwzsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/OwEAAAAAAL87AQAAAAAAAAAAAAAA8L8"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMM7AQAAAAAAxDsBAAAAAAAAAAAAxDsBAAAAAADFOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDOwEAAAAAAMM7AQAAAAAAAAAAAAAA8L8"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": " tar"
					},
					"BAAAAMU7AQAAAAAAxjsBAAAAAAAAAAAAxjsBAAAAAADHOwEAAAAAAAAAAADHOwEAAAAAAMg7AQAAAAAAAAAAAMg7AQAAAAAAyTsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFOwEAAAAAAMU7AQAAAAAAAAAAAAAA8L8"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": "get.getAttribute"
					},
					"EAAAAMk7AQAAAAAAyjsBAAAAAAAAAAAAyjsBAAAAAADLOwEAAAAAAAAAAADLOwEAAAAAAMw7AQAAAAAAAAAAAMw7AQAAAAAAzTsBAAAAAAAAAAAAzTsBAAAAAADOOwEAAAAAAAAAAADOOwEAAAAAAM87AQAAAAAAAAAAAM87AQAAAAAA0DsBAAAAAAAAAAAA0DsBAAAAAADROwEAAAAAAAAAAADROwEAAAAAANI7AQAAAAAAAAAAANI7AQAAAAAA0zsBAAAAAAAAAAAA0zsBAAAAAADUOwEAAAAAAAAAAADUOwEAAAAAANU7AQAAAAAAAAAAANU7AQAAAAAA1jsBAAAAAAAAAAAA1jsBAAAAAADXOwEAAAAAAAAAAADXOwEAAAAAANg7AQAAAAAAAAAAANg7AQAAAAAA2TsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJOwEAAAAAAMk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					578,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANk7AQAAAAAA2zsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZOwEAAAAAANk7AQAAAAAAAAAAAAAA8L8"
				],
				[
					579,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANo7AQAAAAAA3DsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaOwEAAAAAANo7AQAAAAAAAAAAAAAA8L8"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "data-ey"
					},
					"BwAAANs7AQAAAAAA3DsBAAAAAAAAAAAA3DsBAAAAAADdOwEAAAAAAAAAAADdOwEAAAAAAN47AQAAAAAAAAAAAN47AQAAAAAA3zsBAAAAAAAAAAAA3zsBAAAAAADgOwEAAAAAAAAAAADgOwEAAAAAAOE7AQAAAAAAAAAAAOE7AQAAAAAA4jsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbOwEAAAAAANs7AQAAAAAAAAAAAAAA8L8"
				],
				[
					581,
					2,
					"left_delete",
					null,
					"AgAAAOE7AQAAAAAA4TsBAAAAAAABAAAAeeA7AQAAAAAA4DsBAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiOwEAAAAAAOI7AQAAAAAAAAAAAAAA8L8"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAAOA7AQAAAAAA4TsBAAAAAAAAAAAA4TsBAAAAAADiOwEAAAAAAAAAAADiOwEAAAAAAOM7AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgOwEAAAAAAOA7AQAAAAAAAAAAAAAA8L8"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOU7AQAAAAAA5jsBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlOwEAAAAAAOU7AQAAAAAAAAAAAAAA8L8"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOY7AQAAAAAA5zsBAAAAAAAAAAAA5zsBAAAAAADwOwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmOwEAAAAAAOY7AQAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					1,
					"paste",
					null,
					"AgAAABQ8AQAAAAAAFzwBAAAAAAAAAAAAFzwBAAAAAAAXPAEAAAAAAAUAAABldmVudA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUPAEAAAAAABk8AQAAAAAAAAAAAAAA8L8"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "\nconfig.sortOr"
					},
					"EAAAABk8AQAAAAAAGjwBAAAAAAAAAAAAGjwBAAAAAAAbPAEAAAAAAAAAAADnOwEAAAAAAOc7AQAAAAAACQAAACAgICAgICAgIBI8AQAAAAAAEzwBAAAAAAAAAAAAEzwBAAAAAAAUPAEAAAAAAAAAAAAUPAEAAAAAABU8AQAAAAAAAAAAABU8AQAAAAAAFjwBAAAAAAAAAAAAFjwBAAAAAAAXPAEAAAAAAAAAAAAXPAEAAAAAABg8AQAAAAAAAAAAABg8AQAAAAAAGTwBAAAAAAAAAAAAGTwBAAAAAAAaPAEAAAAAAAAAAAAaPAEAAAAAABs8AQAAAAAAAAAAABs8AQAAAAAAHDwBAAAAAAAAAAAAHDwBAAAAAAAdPAEAAAAAAAAAAAAdPAEAAAAAAB48AQAAAAAAAAAAAB48AQAAAAAAHzwBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZPAEAAAAAABk8AQAAAAAAAAAAAAAA8L8"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": "der"
					},
					"AwAAAB88AQAAAAAAIDwBAAAAAAAAAAAAIDwBAAAAAAAhPAEAAAAAAAAAAAAhPAEAAAAAACI8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfPAEAAAAAAB88AQAAAAAAAAAAAAAA8L8"
				],
				[
					611,
					5,
					"left_delete",
					null,
					"BQAAACE8AQAAAAAAITwBAAAAAAABAAAAciA8AQAAAAAAIDwBAAAAAAABAAAAZR88AQAAAAAAHzwBAAAAAAABAAAAZB48AQAAAAAAHjwBAAAAAAABAAAAch08AQAAAAAAHTwBAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiPAEAAAAAACI8AQAAAAAAAAAAAAAA8L8"
				],
				[
					612,
					1,
					"insert",
					{
						"characters": "Key"
					},
					"AwAAAB08AQAAAAAAHjwBAAAAAAAAAAAAHjwBAAAAAAAfPAEAAAAAAAAAAAAfPAEAAAAAACA8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdPAEAAAAAAB08AQAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACA8AQAAAAAAIjwBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgPAEAAAAAACA8AQAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAACE8AQAAAAAAIjwBAAAAAAAAAAAAIjwBAAAAAAAjPAEAAAAAAAAAAAAjPAEAAAAAACQ8AQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhPAEAAAAAACE8AQAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACU8AQAAAAAAJjwBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlPAEAAAAAACU8AQAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANA8AQAAAAAA0TwBAAAAAAAAAAAA0TwBAAAAAADXPAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0DwBAAAAAADQPAEAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/hooks.mjs",
			"settings":
			{
				"buffer_size": 4061,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/dom/preactComponent.js",
			"settings":
			{
				"buffer_size": 9972,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					61,
					1,
					"cut",
					null,
					"AQAAANQAAAAAAAAA1AAAAAAAAADUAAAAZXhwb3J0IHsgaCwgb3B0aW9ucywgaHRtbCwgcmVuZGVyLCBDb21wb25lbnQsIGNyZWF0ZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VSZWR1Y2VyLCB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCwgdXNlUmVmLCB1c2VJbXBlcmF0aXZlSGFuZGxlLCB1c2VNZW1vLCB1c2VDYWxsYmFjaywgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSB9IGZyb20gJy4uL3ByZWFjdC5tanMnOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAAKgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					2,
					"paste",
					null,
					"AgAAANQAAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAAB8AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "cloneEl"
					},
					"CAAAALABAAAAAAAAsQEAAAAAAAAAAAAAsQEAAAAAAACxAQAAAAAAALQAAAAgaCwgb3B0aW9ucywgaHRtbCwgcmVuZGVyLCBDb21wb25lbnQsIGNyZWF0ZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VSZWR1Y2VyLCB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCwgdXNlUmVmLCB1c2VJbXBlcmF0aXZlSGFuZGxlLCB1c2VNZW1vLCB1c2VDYWxsYmFjaywgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSCxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAQAAAAAAAGQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "ement"
					},
					"BQAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAC5AQAAAAAAALoBAAAAAAAAAAAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AQAAAAAAALcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALwBAAAAAAAAvQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "co"
					},
					"AwAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADJAQAAAAAAAAYAAABwcmVhY3TJAQAAAAAAAMoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAQAAAAAAAM4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAMkBAAAAAAAAyQEAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAQAAAAAAAMoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "ompat"
					},
					"BQAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAAzQEAAAAAAADOAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAQAAAAAAAMkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"paste",
					null,
					"AgAAALABAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACJAgAAAAAAAAwAAABjbG9uZUVsZW1lbnQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					2,
					"right_delete",
					null,
					"AgAAAP0BAAAAAAAA/QEAAAAAAAAKAAAAZm9yd2FyZFJlZv0BAAAAAAAA/QEAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AQAAAAAAAAcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					3,
					"right_delete",
					null,
					"AwAAADICAAAAAAAAMgIAAAAAAAAGAAAAcmVuZGVyMgIAAAAAAAAyAgAAAAAAAAEAAAAsMgIAAAAAAAAyAgAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAgAAAAAAADgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAQAAAAAAANsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"cut",
					null,
					"AQAAAN4BAAAAAAAA3gEAAAAAAAA2AAAAZXhwb3J0IHsgZm9yd2FyZFJlZiB9IGZyb20gJy4uL3ByZWFjdC9mb3J3YXJkUmVmLmpzJzsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAQAAAAAAABQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					2,
					"paste",
					null,
					"AgAAAN4BAAAAAAAAFAIAAAAAAAAAAAAAFAIAAAAAAABKAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "compat.mjs"
					},
					"CwAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA0AgAAAAAAABUAAABwcmVhY3QvZm9yd2FyZFJlZi5qcyc0AgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOQIAAAAAAAAAAAAAOQIAAAAAAAA6AgAAAAAAAAAAAAA6AgAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAPAIAAAAAAAAAAAAAPAIAAAAAAAA9AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAAEgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"paste",
					null,
					"AgAAAB0CAAAAAAAAKwIAAAAAAAAAAAAAKwIAAAAAAAArAgAAAAAAAAoAAABmb3J3YXJkUmVm",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAgAAAAAAACcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAEECAAAAAAAAQgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAgAAAAAAAEECAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"cut",
					null,
					"AQAAAAEBAAAAAAAAAQEAAAAAAAAQAAAAIGNyZWF0ZUNvbnRleHQsIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAQAAAAAAABEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					2,
					"paste",
					null,
					"AgAAAAEBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAAhAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAQAAAAAAAAEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "Ref"
					},
					"BAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAZAQAAAAAAAAcAAABDb250ZXh0GQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAD0AAAAAAAAASQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFwCAAAAAAAAXgIAAAAAAAAAAAAALAIAAAAAAAAuAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAgAAAAAAAFwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"cut",
					null,
					"AQAAAC4CAAAAAAAALgIAAAAAAAAwAAAAZXhwb3J0IHsgaXNWYWxpZEVsZW1lbnQgfSBmcm9tICcuLi9jb21wYXQubWpzJzsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAgAAAAAAAF4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"paste",
					null,
					"AQAAAC4CAAAAAAAAXgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAgAAAAAAAC4CAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/compat.mjs",
			"settings":
			{
				"buffer_size": 12196,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					28,
					1,
					"insert",
					{
						"characters": "."
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADXAAAAAAAAAAYAAABwcmVhY3Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "."
					},
					"AgAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAAcAAABwLnJlYWN0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AAAAAAAAAO8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ".mjs"
					},
					"BAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"paste",
					null,
					"AgAAAN0AAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADhAAAAAAAAAAQAAAAubWpz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"paste",
					null,
					"AQAAAPoAAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AAAAAAAAAPoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"paste",
					null,
					"AgAAAMsBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADWAQAAAAAAAAYAAABwcmVhY3Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAQAAAAAAANEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "preact"
					},
					"BwAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADOAQAAAAAAAAUAAABob29rc84BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAADQAQAAAAAAANEBAAAAAAAAAAAAANEBAAAAAAAA0gEAAAAAAAAAAAAA0gEAAAAAAADTAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAQAAAAAAANIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"paste",
					null,
					"AgAAACgCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA0AgAAAAAAAAYAAABwcmVhY3Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAgAAAAAAAC4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "dopm"
					},
					"BQAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADOAQAAAAAAAAYAAABwcmVhY3TOAQAAAAAAAM8BAAAAAAAAAAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					2,
					"left_delete",
					null,
					"AgAAANABAAAAAAAA0AEAAAAAAAABAAAAbc8BAAAAAAAAzwEAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAQAAAAAAANEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "m7"
					},
					"AgAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAQAAAAAAAM8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAANABAAAAAAAA0AEAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAQAAAAAAANEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "/preact"
					},
					"BwAAANABAAAAAAAA0QEAAAAAAAAAAAAA0QEAAAAAAADSAQAAAAAAAAAAAADSAQAAAAAAANMBAAAAAAAAAAAAANMBAAAAAAAA1AEAAAAAAAAAAAAA1AEAAAAAAADVAQAAAAAAAAAAAADVAQAAAAAAANYBAAAAAAAAAAAAANYBAAAAAAAA1wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAQAAAAAAANABAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert_completion",
					{
						"completion": "preactComponent",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "preactComponent"
					},
					"AgAAANEBAAAAAAAA0QEAAAAAAAAGAAAAcHJlYWN00QEAAAAAAADgAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAQAAAAAAANcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"paste",
					null,
					"AgAAADUCAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABOAgAAAAAAAAwAAAAuL3ByZWFjdC5tanM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AgAAAAAAAEECAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAEsCAAAAAAAASwIAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAgAAAAAAAEwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAAOEBAAAAAAAA4QEAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAQAAAAAAAOIBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/preact.mjs",
			"settings":
			{
				"buffer_size": 23347,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					35,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEBAAAAAAAAAkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEBAAAAAAAAAkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAAKtZAAAAAAAA3FkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrWQAAAAAAAKtZAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKpZAAAAAAAAq1kAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqWQAAAAAAAKpZAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAALRZAAAAAAAAtVkAAAAAAAAAAAAAtVkAAAAAAAC1WQAAAAAAAAUAAABvbnN0IA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5WQAAAAAAALRZAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					2,
					"left_delete",
					null,
					"AgAAALRZAAAAAAAAtFkAAAAAAAABAAAAKbNZAAAAAAAAs1kAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1WQAAAAAAALVZAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " const"
					},
					"BgAAALJZAAAAAAAAs1kAAAAAAAAAAAAAs1kAAAAAAAC0WQAAAAAAAAAAAAC0WQAAAAAAALVZAAAAAAAAAAAAALVZAAAAAAAAtlkAAAAAAAAAAAAAtlkAAAAAAAC3WQAAAAAAAAAAAAC3WQAAAAAAALhZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyWQAAAAAAALJZAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"paste",
					null,
					"AQAAAN1ZAAAAAAAALVoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdWQAAAAAAAN1ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "export"
					},
					"BgAAAN5ZAAAAAAAA31kAAAAAAAAAAAAA31kAAAAAAADgWQAAAAAAAAAAAADgWQAAAAAAAOFZAAAAAAAAAAAAAOFZAAAAAAAA4lkAAAAAAAAAAAAA4lkAAAAAAADjWQAAAAAAAAAAAADjWQAAAAAAAORZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeWQAAAAAAAN5ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAORZAAAAAAAA5VkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkWQAAAAAAAORZAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAN1ZAAAAAAAA3lkAAAAAAAAAAAAA3lkAAAAAAADeWQAAAAAAAFYAAAAKZXhwb3J0IGZ1bmN0aW9uIGh5ZHJhdGUodm5vZGUsIHBhcmVudERvbSkgewogIHJlbmRlcih2bm9kZSwgcGFyZW50RG9tLCBJU19IWURSQVRFKTsKfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdWQAAAAAAADNaAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"paste",
					null,
					"AQAAAN5ZAAAAAAAAE1oAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeWQAAAAAAAN5ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "export"
					},
					"BgAAAN9ZAAAAAAAA4FkAAAAAAAAAAAAA4FkAAAAAAADhWQAAAAAAAAAAAADhWQAAAAAAAOJZAAAAAAAAAAAAAOJZAAAAAAAA41kAAAAAAAAAAAAA41kAAAAAAADkWQAAAAAAAAAAAADkWQAAAAAAAOVZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfWQAAAAAAAN9ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOVZAAAAAAAA5lkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlWQAAAAAAAOVZAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "/*\n * concatenanted preact/dist/preact.module.js\n */\n\nvar EMPTY_OBJ = {};\nvar EMPTY_ARR = [];\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n\nfunction assign(obj, props) {\n  for(var i in props) {\n    obj[i] = props[i];\n  }\n\n  return obj;\n}\n\nfunction removeNode(node) {\n  var parentNode = node.parentNode;\n\n  if(parentNode) {\n    parentNode.removeChild(node);\n  }\n}\n\nfunction _catchError(error, vnode) {\n  var component, ctor, handled;\n  var wasHydrating = vnode.__h;\n\n  for(; (vnode = vnode.__); ) {\n    if((component = vnode.__c) && !component.__) {\n      try {\n        ctor = component.constructor;\n\n        if(ctor && ctor.getDerivedStateFromError != null) {\n          component.setState(ctor.getDerivedStateFromError(error));\n          handled = component.__d;\n        }\n\n        if(component.componentDidCatch != null) {\n          component.componentDidCatch(error);\n          handled = component.__d;\n        }\n\n        if(handled) {\n          vnode.__h = wasHydrating;\n          return (component.__E = component);\n        }\n      } catch(e) {\n        error = e;\n      }\n    }\n  }\n\n  throw error;\n}\nvar options = { __e: _catchError, __v: 0 };\n\nexport { options };\n\nfunction createElement(type, props, children) {\n  var arguments$1 = arguments;\n  var normalizedProps = {},\n    key,\n    ref,\n    i;\n\n  for(i in props) {\n    if(i == 'key') {\n      key = props[i];\n    } else if(i == 'ref') {\n      ref = props[i];\n    } else {\n      normalizedProps[i] = props[i];\n    }\n  }\n\n  if(arguments.length > 3) {\n    children = [children];\n\n    for(i = 3; i < arguments.length; i++) {\n      children.push(arguments$1[i]);\n    }\n  }\n\n  if(children != null) {\n    normalizedProps.children = children;\n  }\n\n  if(typeof type == 'function' && type.defaultProps != null) {\n    for(i in type.defaultProps) {\n      if(normalizedProps[i] === undefined) {\n        normalizedProps[i] = type.defaultProps[i];\n      }\n    }\n  }\n\n  return createVNode(type, normalizedProps, key, ref, null);\n}\n\nfunction createVNode(type, props, key, ref, original) {\n  var vnode = {\n    type,\n    props,\n    key,\n    ref,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: undefined,\n    __c: null,\n    __h: null,\n    constructor: undefined,\n    __v: original == null ? ++options.__v : original\n  };\n\n  if(options.vnode != null) {\n    options.vnode(vnode);\n  }\n\n  return vnode;\n}\n\nfunction createRef() {\n  return { current: null };\n}\n\nfunction Fragment(props) {\n  return props.children;\n}\n\nvar isValidElement = function isValidElement(vnode) {\n  return vnode != null && vnode.constructor === undefined;\n};\n\nfunction Component(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\nComponent.prototype.setState = function(update, callback) {\n  var s;\n\n  if(this.__s != null && this.__s !== this.state) {\n    s = this.__s;\n  } else {\n    s = this.__s = assign({}, this.state);\n  }\n\n  if(typeof update == 'function') {\n    update = update(assign({}, s), this.props);\n  }\n\n  if(update) {\n    assign(s, update);\n  }\n\n  if(update == null) {\n    return;\n  }\n\n  if(this.__v) {\n    if(callback) {\n      this.__h.push(callback);\n    }\n\n    enqueueRender(this);\n  }\n};\n\nComponent.prototype.forceUpdate = function(callback) {\n  if(this.__v) {\n    this.__e = true;\n\n    if(callback) {\n      this.__h.push(callback);\n    }\n\n    enqueueRender(this);\n  }\n};\nComponent.prototype.render = Fragment;\n\nfunction getDomSibling(vnode, childIndex) {\n  if(childIndex == null) {\n    return vnode.__ ? getDomSibling(vnode.__, vnode.__.__k.indexOf(vnode) + 1) : null;\n  }\n\n  var sibling;\n\n  for(; childIndex < vnode.__k.length; childIndex++) {\n    sibling = vnode.__k[childIndex];\n\n    if(sibling != null && sibling.__e != null) {\n      return sibling.__e;\n    }\n  }\n\n  return typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\nfunction renderComponent(component) {\n  var vnode = component.__v,\n    oldDom = vnode.__e,\n    parentDom = component.__P;\n\n  if(parentDom) {\n    var commitQueue = [];\n    var oldVNode = assign({}, vnode);\n    oldVNode.__v = vnode.__v + 1;\n    var newDom = diff(\n      parentDom,\n      vnode,\n      oldVNode,\n      component.__n,\n      parentDom.ownerSVGElement !== undefined,\n      vnode.__h != null ? [oldDom] : null,\n      commitQueue,\n      oldDom == null ? getDomSibling(vnode) : oldDom,\n      vnode.__h\n    );\n    commitRoot(commitQueue, vnode);\n\n    if(newDom != oldDom) {\n      updateParentDomPointers(vnode);\n    }\n  }\n}\n\nfunction updateParentDomPointers(vnode) {\n  if((vnode = vnode.__) != null && vnode.__c != null) {\n    vnode.__e = vnode.__c.base = null;\n\n    for(var i = 0; i < vnode.__k.length; i++) {\n      var child = vnode.__k[i];\n\n      if(child != null && child.__e != null) {\n        vnode.__e = vnode.__c.base = child.__e;\n        break;\n      }\n    }\n\n    return updateParentDomPointers(vnode);\n  }\n}\nvar rerenderQueue = [];\nvar defer = typeof Promise == 'function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\nvar prevDebounce;\n\nfunction enqueueRender(c) {\n  if(\n    (!c.__d && (c.__d = true) && rerenderQueue.push(c) && !process.__r++) ||\n    prevDebounce !== options.debounceRendering\n  ) {\n    prevDebounce = options.debounceRendering;\n    (prevDebounce || defer)(process);\n  }\n}\n\nfunction process() {\n  var queue;\n\n  while((process.__r = rerenderQueue.length)) {\n    queue = rerenderQueue.sort(function (a, b) {\n      return a.__v.__b - b.__v.__b;\n    });\n\n    rerenderQueue = [];\n\n    queue.some(function (c) {\n      if(c.__d) {\n        renderComponent(c);\n      }\n    });\n  }\n}\nprocess.__r = 0;\n\nfunction diffChildren(\n  parentDom,\n  renderResult,\n  newParentVNode,\n  oldParentVNode,\n  globalContext,\n  isSvg,\n  excessDomChildren,\n  commitQueue,\n  oldDom,\n  isHydrating\n) {\n  var i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n  var oldChildren = (oldParentVNode && oldParentVNode.__k) || EMPTY_ARR;\n  var oldChildrenLength = oldChildren.length;\n\n  if(oldDom == EMPTY_OBJ) {\n    if(excessDomChildren != null) {\n      oldDom = excessDomChildren[0];\n    } else if(oldChildrenLength) {\n      oldDom = getDomSibling(oldParentVNode, 0);\n    } else {\n      oldDom = null;\n    }\n  }\n\n  newParentVNode.__k = [];\n\n  for(i = 0; i < renderResult.length; i++) {\n    childVNode = renderResult[i];\n\n    if(childVNode == null || typeof childVNode == 'boolean') {\n      childVNode = newParentVNode.__k[i] = null;\n    } else if(typeof childVNode == 'string' || typeof childVNode == 'number') {\n      childVNode = newParentVNode.__k[i] = createVNode(null, childVNode, null, null, childVNode);\n    } else if(Array.isArray(childVNode)) {\n      childVNode = newParentVNode.__k[i] = createVNode(Fragment, { children: childVNode }, null, null, null);\n    } else if(childVNode.__e != null || childVNode.__c != null) {\n      childVNode = newParentVNode.__k[i] = createVNode(\n        childVNode.type,\n        childVNode.props,\n        childVNode.key,\n        null,\n        childVNode.__v\n      );\n    } else {\n      childVNode = newParentVNode.__k[i] = childVNode;\n    }\n\n    if(childVNode == null) {\n      continue;\n    }\n\n    childVNode.__ = newParentVNode;\n    childVNode.__b = newParentVNode.__b + 1;\n    oldVNode = oldChildren[i];\n\n    if(oldVNode === null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n      oldChildren[i] = undefined;\n    } else {\n      for(j = 0; j < oldChildrenLength; j++) {\n        oldVNode = oldChildren[j];\n\n        if(oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n          oldChildren[j] = undefined;\n          break;\n        }\n\n        oldVNode = null;\n      }\n    }\n\n    oldVNode = oldVNode || EMPTY_OBJ;\n    newDom = diff(\n      parentDom,\n      childVNode,\n      oldVNode,\n      globalContext,\n      isSvg,\n      excessDomChildren,\n      commitQueue,\n      oldDom,\n      isHydrating\n    );\n\n    if((j = childVNode.ref) && oldVNode.ref != j) {\n      if(!refs) {\n        refs = [];\n      }\n\n      if(oldVNode.ref) {\n        refs.push(oldVNode.ref, null, childVNode);\n      }\n\n      refs.push(j, childVNode.__c || newDom, childVNode);\n    }\n\n    if(newDom != null) {\n      if(firstChildDom == null) {\n        firstChildDom = newDom;\n      }\n\n      oldDom = placeChild(parentDom, childVNode, oldVNode, oldChildren, excessDomChildren, newDom, oldDom);\n\n      if(!isHydrating && newParentVNode.type == 'option') {\n        parentDom.value = '';\n      } else if(typeof newParentVNode.type == 'function') {\n        newParentVNode.__d = oldDom;\n      }\n    } else if(oldDom && oldVNode.__e == oldDom && oldDom.parentNode != parentDom) {\n      oldDom = getDomSibling(oldVNode);\n    }\n  }\n\n  newParentVNode.__e = firstChildDom;\n\n  if(excessDomChildren != null && typeof newParentVNode.type != 'function') {\n    for(i = excessDomChildren.length; i--; ) {\n      if(excessDomChildren[i] != null) {\n        removeNode(excessDomChildren[i]);\n      }\n    }\n  }\n\n  for(i = oldChildrenLength; i--; ) {\n    if(oldChildren[i] != null) {\n      unmount(oldChildren[i], oldChildren[i]);\n    }\n  }\n\n  if(refs) {\n    for(i = 0; i < refs.length; i++) {\n      applyRef(refs[i], refs[++i], refs[++i]);\n    }\n  }\n}\n\nfunction toChildArray(children, out) {\n  out = out || [];\n\n  if(children == null || typeof children == 'boolean');\n  else if(Array.isArray(children)) {\n    children.some(function (child) {\n      toChildArray(child, out);\n    });\n  } else {\n    out.push(children);\n  }\n\n  return out;\n}\n\nfunction placeChild(parentDom, childVNode, oldVNode, oldChildren, excessDomChildren, newDom, oldDom) {\n  var nextDom;\n\n  if(childVNode.__d !== undefined) {\n    nextDom = childVNode.__d;\n    childVNode.__d = undefined;\n  } else if(excessDomChildren == oldVNode || newDom != oldDom || newDom.parentNode == null) {\n    outer: if(oldDom == null || oldDom.parentNode !== parentDom) {\n      parentDom.appendChild(newDom);\n      nextDom = null;\n    } else {\n      for(var sibDom = oldDom, j = 0; (sibDom = sibDom.nextSibling) && j < oldChildren.length; j += 2) {\n        if(sibDom == newDom) {\n          break outer;\n        }\n      }\n\n      parentDom.insertBefore(newDom, oldDom);\n      nextDom = oldDom;\n    }\n  }\n\n  if(nextDom !== undefined) {\n    oldDom = nextDom;\n  } else {\n    oldDom = newDom.nextSibling;\n  }\n\n  return oldDom;\n}\n\nfunction diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n  var i;\n\n  for(i in oldProps) {\n    if(i !== 'children' && i !== 'key' && !(i in newProps)) {\n      setProperty(dom, i, null, oldProps[i], isSvg);\n    }\n  }\n\n  for(i in newProps) {\n    if(\n      (!hydrate || typeof newProps[i] == 'function') &&\n      i !== 'children' &&\n      i !== 'key' &&\n      i !== 'value' &&\n      i !== 'checked' &&\n      oldProps[i] !== newProps[i]\n    ) {\n      setProperty(dom, i, newProps[i], oldProps[i], isSvg);\n    }\n  }\n}\n\nfunction setStyle(style, key, value) {\n  if(key[0] === '-') {\n    style.setProperty(key, value);\n  } else if(value == null) {\n    style[key] = '';\n  } else if(typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n    style[key] = value;\n  } else {\n    style[key] = value + 'px';\n  }\n}\n\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n  var useCapture, nameLower, proxy;\n\n  if(isSvg && name == 'className') {\n    name = 'class';\n  }\n\n  if(name === 'style') {\n    if(typeof value == 'string') {\n      dom.style.cssText = value;\n    } else {\n      if(typeof oldValue == 'string') {\n        dom.style.cssText = oldValue = '';\n      }\n\n      if(oldValue) {\n        for(name in oldValue) {\n          if(!(value && name in value)) {\n            setStyle(dom.style, name, '');\n          }\n        }\n      }\n\n      if(value) {\n        for(name in value) {\n          if(!oldValue || value[name] !== oldValue[name]) {\n            setStyle(dom.style, name, value[name]);\n          }\n        }\n      }\n    }\n  } else if(name[0] === 'o' && name[1] === 'n') {\n    useCapture = name !== (name = name.replace(/Capture$/, ''));\n    nameLower = name.toLowerCase();\n\n    if(nameLower in dom) {\n      name = nameLower;\n    }\n\n    name = name.slice(2);\n\n    if(!dom._listeners) {\n      dom._listeners = {};\n    }\n\n    dom._listeners[name + useCapture] = value;\n    proxy = useCapture ? eventProxyCapture : eventProxy;\n\n    if(value) {\n      if(!oldValue) {\n        dom.addEventListener(name, proxy, useCapture);\n      }\n    } else {\n      dom.removeEventListener(name, proxy, useCapture);\n    }\n  } else if(\n    name !== 'list' &&\n    name !== 'tagName' &&\n    name !== 'form' &&\n    name !== 'type' &&\n    name !== 'size' &&\n    name !== 'download' &&\n    name !== 'href' &&\n    !isSvg &&\n    name in dom\n  ) {\n    dom[name] = value == null ? '' : value;\n  } else if(typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n    if(name !== (name = name.replace(/xlink:?/, ''))) {\n      if(value == null || value === false) {\n        dom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n      } else {\n        dom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n      }\n    } else if(value == null || (value === false && !/^ar/.test(name))) {\n      dom.removeAttribute(name);\n    } else {\n      dom.setAttribute(name, value);\n    }\n  }\n}\n\nfunction eventProxy(e) {\n  this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n  this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n\nfunction reorderChildren(newVNode, oldDom, parentDom) {\n  for(var tmp = 0; tmp < newVNode.__k.length; tmp++) {\n    var vnode = newVNode.__k[tmp];\n\n    if(vnode) {\n      vnode.__ = newVNode;\n\n      if(vnode.__e) {\n        if(typeof vnode.type == 'function' && vnode.__k.length > 1) {\n          reorderChildren(vnode, oldDom, parentDom);\n        }\n\n        oldDom = placeChild(parentDom, vnode, vnode, newVNode.__k, null, vnode.__e, oldDom);\n\n        if(typeof newVNode.type == 'function') {\n          newVNode.__d = oldDom;\n        }\n      }\n    }\n  }\n}\n\nfunction diff(\n  parentDom,\n  newVNode,\n  oldVNode,\n  globalContext,\n  isSvg,\n  excessDomChildren,\n  commitQueue,\n  oldDom,\n  isHydrating\n) {\n  var tmp,\n    newType = newVNode.type;\n\n  if(newVNode.constructor !== undefined) {\n    return null;\n  }\n\n  if(oldVNode.__h != null) {\n    isHydrating = oldVNode.__h;\n    oldDom = newVNode.__e = oldVNode.__e;\n    newVNode.__h = null;\n    excessDomChildren = [oldDom];\n  }\n\n  if((tmp = options.__b)) {\n    tmp(newVNode);\n  }\n\n  try {\n    outer: if(typeof newType == 'function') {\n      var c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n      var newProps = newVNode.props;\n      tmp = newType.contextType;\n      var provider = tmp && globalContext[tmp.__c];\n      var componentContext = tmp ? (provider ? provider.props.value : tmp.__) : globalContext;\n\n      if(oldVNode.__c) {\n        c = newVNode.__c = oldVNode.__c;\n        clearProcessingException = c.__ = c.__E;\n      } else {\n        if('prototype' in newType && newType.prototype.render) {\n          newVNode.__c = c = new newType(newProps, componentContext);\n        } else {\n          newVNode.__c = c = new Component(newProps, componentContext);\n          c.constructor = newType;\n          c.render = doRender;\n        }\n\n        if(provider) {\n          provider.sub(c);\n        }\n\n        c.props = newProps;\n\n        if(!c.state) {\n          c.state = {};\n        }\n\n        c.context = componentContext;\n        c.__n = globalContext;\n        isNew = c.__d = true;\n        c.__h = [];\n      }\n\n      if(c.__s == null) {\n        c.__s = c.state;\n      }\n\n      if(newType.getDerivedStateFromProps != null) {\n        if(c.__s == c.state) {\n          c.__s = assign({}, c.__s);\n        }\n\n        assign(c.__s, newType.getDerivedStateFromProps(newProps, c.__s));\n      }\n\n      oldProps = c.props;\n      oldState = c.state;\n\n      if(isNew) {\n        if(newType.getDerivedStateFromProps == null && c.componentWillMount != null) {\n          c.componentWillMount();\n        }\n\n        if(c.componentDidMount != null) {\n          c.__h.push(c.componentDidMount);\n        }\n      } else {\n        if(newType.getDerivedStateFromProps == null && newProps !== oldProps && c.componentWillReceiveProps != null) {\n          c.componentWillReceiveProps(newProps, componentContext);\n        }\n\n        if(\n          (!c.__e &&\n            c.shouldComponentUpdate != null &&\n            c.shouldComponentUpdate(newProps, c.__s, componentContext) === false) ||\n          newVNode.__v === oldVNode.__v\n        ) {\n          c.props = newProps;\n          c.state = c.__s;\n\n          if(newVNode.__v !== oldVNode.__v) {\n            c.__d = false;\n          }\n\n          c.__v = newVNode;\n          newVNode.__e = oldVNode.__e;\n          newVNode.__k = oldVNode.__k;\n\n          if(c.__h.length) {\n            commitQueue.push(c);\n          }\n\n          reorderChildren(newVNode, oldDom, parentDom);\n          break outer;\n        }\n\n        if(c.componentWillUpdate != null) {\n          c.componentWillUpdate(newProps, c.__s, componentContext);\n        }\n\n        if(c.componentDidUpdate != null) {\n          c.__h.push(function () {\n            c.componentDidUpdate(oldProps, oldState, snapshot);\n          });\n        }\n      }\n\n      c.context = componentContext;\n      c.props = newProps;\n      c.state = c.__s;\n\n      if((tmp = options.__r)) {\n        tmp(newVNode);\n      }\n\n      c.__d = false;\n      c.__v = newVNode;\n      c.__P = parentDom;\n      tmp = c.render(c.props, c.state, c.context);\n      c.state = c.__s;\n\n      if(c.getChildContext != null) {\n        globalContext = assign(assign({}, globalContext), c.getChildContext());\n      }\n\n      if(!isNew && c.getSnapshotBeforeUpdate != null) {\n        snapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n      }\n\n      var isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n      var renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n      diffChildren(\n        parentDom,\n        Array.isArray(renderResult) ? renderResult : [renderResult],\n        newVNode,\n        oldVNode,\n        globalContext,\n        isSvg,\n        excessDomChildren,\n        commitQueue,\n        oldDom,\n        isHydrating\n      );\n      c.base = newVNode.__e;\n      newVNode.__h = null;\n\n      if(c.__h.length) {\n        commitQueue.push(c);\n      }\n\n      if(clearProcessingException) {\n        c.__E = c.__ = null;\n      }\n\n      c.__e = false;\n    } else if(excessDomChildren == null && newVNode.__v === oldVNode.__v) {\n      newVNode.__k = oldVNode.__k;\n      newVNode.__e = oldVNode.__e;\n    } else {\n      newVNode.__e = diffElementNodes(\n        oldVNode.__e,\n        newVNode,\n        oldVNode,\n        globalContext,\n        isSvg,\n        excessDomChildren,\n        commitQueue,\n        isHydrating\n      );\n    }\n\n    if((tmp = options.diffed)) {\n      tmp(newVNode);\n    }\n  } catch(e) {\n    newVNode.__v = null;\n\n    if(isHydrating || excessDomChildren != null) {\n      newVNode.__e = oldDom;\n      newVNode.__h = !!isHydrating;\n      excessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n    }\n\n    options.__e(e, newVNode, oldVNode);\n  }\n\n  return newVNode.__e;\n}\n\nfunction commitRoot(commitQueue, root) {\n  if(options.__c) {\n    options.__c(root, commitQueue);\n  }\n\n  commitQueue.some(function (c) {\n    try {\n      commitQueue = c.__h;\n      c.__h = [];\n\n      commitQueue.some(function (cb) {\n        cb.call(c);\n      });\n    } catch(e) {\n      options.__e(e, c.__v);\n    }\n  });\n}\n\nfunction diffElementNodes(dom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, isHydrating) {\n  var i;\n  var oldProps = oldVNode.props;\n  var newProps = newVNode.props;\n  isSvg = newVNode.type === 'svg' || isSvg;\n\n  if(excessDomChildren != null) {\n    for(i = 0; i < excessDomChildren.length; i++) {\n      var child = excessDomChildren[i];\n\n      if(\n        child != null &&\n        ((newVNode.type === null ? child.nodeType === 3 : child.localName === newVNode.type) || dom == child)\n      ) {\n        dom = child;\n        excessDomChildren[i] = null;\n        break;\n      }\n    }\n  }\n\n  if(dom == null) {\n    if(newVNode.type === null) {\n      return document.createTextNode(newProps);\n    }\n\n    dom = isSvg\n      ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n      : document.createElement(newVNode.type, newProps.is && { is: newProps.is });\n    excessDomChildren = null;\n    isHydrating = false;\n  }\n\n  if(newVNode.type === null) {\n    if(oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n      dom.data = newProps;\n    }\n  } else {\n    if(excessDomChildren != null) {\n      excessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n    }\n\n    oldProps = oldVNode.props || EMPTY_OBJ;\n    var oldHtml = oldProps.dangerouslySetInnerHTML;\n    var newHtml = newProps.dangerouslySetInnerHTML;\n\n    if(!isHydrating) {\n      if(excessDomChildren != null) {\n        oldProps = {};\n\n        for(var _i = 0; _i < dom.attributes.length; _i++) {\n          oldProps[dom.attributes[_i].name] = dom.attributes[_i].value;\n        }\n      }\n\n      if(newHtml || oldHtml) {\n        if(!newHtml || ((!oldHtml || newHtml.__html != oldHtml.__html) && newHtml.__html !== dom.innerHTML)) {\n          dom.innerHTML = (newHtml && newHtml.__html) || '';\n        }\n      }\n    }\n\n    diffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n    if(newHtml) {\n      newVNode.__k = [];\n    } else {\n      i = newVNode.props.children;\n      diffChildren(\n        dom,\n        Array.isArray(i) ? i : [i],\n        newVNode,\n        oldVNode,\n        globalContext,\n        newVNode.type === 'foreignObject' ? false : isSvg,\n        excessDomChildren,\n        commitQueue,\n        EMPTY_OBJ,\n        isHydrating\n      );\n    }\n\n    if(!isHydrating) {\n      if(\n        'value' in newProps &&\n        (i = newProps.value) !== undefined &&\n        (i !== dom.value || (newVNode.type === 'progress' && !i))\n      ) {\n        setProperty(dom, 'value', i, oldProps.value, false);\n      }\n\n      if('checked' in newProps && (i = newProps.checked) !== undefined && i !== dom.checked) {\n        setProperty(dom, 'checked', i, oldProps.checked, false);\n      }\n    }\n  }\n\n  return dom;\n}\n\nfunction applyRef(ref, value, vnode) {\n  try {\n    if(typeof ref == 'function') {\n      ref(value);\n    } else {\n      ref.current = value;\n    }\n  } catch(e) {\n    options.__e(e, vnode);\n  }\n}\n\nfunction unmount(vnode, parentVNode, skipRemove) {\n  var r;\n\n  if(options.unmount) {\n    options.unmount(vnode);\n  }\n\n  if((r = vnode.ref)) {\n    if(!r.current || r.current === vnode.__e) {\n      applyRef(r, null, parentVNode);\n    }\n  }\n\n  var dom;\n\n  if(!skipRemove && typeof vnode.type != 'function') {\n    skipRemove = (dom = vnode.__e) != null;\n  }\n\n  vnode.__e = vnode.__d = undefined;\n\n  if((r = vnode.__c) != null) {\n    if(r.componentWillUnmount) {\n      try {\n        r.componentWillUnmount();\n      } catch(e) {\n        options.__e(e, parentVNode);\n      }\n    }\n\n    r.base = r.__P = null;\n  }\n\n  if((r = vnode.__k)) {\n    for(var i = 0; i < r.length; i++) {\n      if(r[i]) {\n        unmount(r[i], parentVNode, skipRemove);\n      }\n    }\n  }\n\n  if(dom != null) {\n    removeNode(dom);\n  }\n}\n\nfunction doRender(props, state, context) {\n  return this.constructor(props, context);\n}\nvar IS_HYDRATE = EMPTY_OBJ;\n\nfunction render(vnode, parentDom, replaceNode) {\n  if(options.__) {\n    options.__(vnode, parentDom);\n  }\n\n  var isHydrating = replaceNode === IS_HYDRATE;\n  var oldVNode = isHydrating ? null : (replaceNode && replaceNode.__k) || parentDom.__k;\n  vnode = createElement(Fragment, null, [vnode]);\n  var commitQueue = [];\n  diff(\n    parentDom,\n    ((isHydrating ? parentDom : replaceNode || parentDom).__k =\n      (vnode,\n      oldVNode || EMPTY_OBJ,\n      EMPTY_OBJ,\n      parentDom.ownerSVGElement !== undefined,\n      replaceNode && !isHydrating\n        ? [replaceNode]\n        : oldVNode\n        ? null\n        : parentDom.childNodes.length\n        ? EMPTY_ARR.slice.call(parentDom.childNodes)\n        : null,\n      commitQueue,\n      replaceNode || EMPTY_OBJ,\n      isHydrating))\n  );\n  commitRoot(commitQueue, vnode);\n}\n\nfunction hydrate(vnode, parentDom) {\n  render(vnode, parentDom, IS_HYDRATE);\n}\n\nfunction cloneElement(vnode, props, children) {\n  var arguments$1 = arguments;\n  var normalizedProps = assign({}, vnode.props),\n    key,\n    ref,\n    i;\n\n  for(i in props) {\n    if(i == 'key') {\n      key = props[i];\n    } else if(i == 'ref') {\n      ref = props[i];\n    } else {\n      normalizedProps[i] = props[i];\n    }\n  }\n\n  if(arguments.length > 3) {\n    children = [children];\n\n    for(i = 3; i < arguments.length; i++) {\n      children.push(arguments$1[i]);\n    }\n  }\n\n  if(children != null) {\n    normalizedProps.children = children;\n  }\n\n  return createVNode(vnode.type, normalizedProps, key || vnode.key, ref || vnode.ref, null);\n}\nvar i = 0;\n\nfunction createContext(defaultValue, contextId) {\n  contextId = '__cC' + i++;\n\n  var context = {\n    __c: contextId,\n    __: defaultValue,\n    Consumer(props, contextValue) {\n      return props.children(contextValue);\n    },\n    Provider(props, subs, ctx) {\n      if(!this.getChildContext) {\n        subs = [];\n        ctx = {};\n        ctx[contextId] = this;\n\n        this.getChildContext = function() {\n          return ctx;\n        };\n\n        this.shouldComponentUpdate = function(_props) {\n          if(this.props.value !== _props.value) {\n            subs.some(enqueueRender);\n          }\n        };\n\n        this.sub = function(c) {\n          subs.push(c);\n          var old = c.componentWillUnmount;\n\n          c.componentWillUnmount = function() {\n            subs.splice(subs.indexOf(c), 1);\n\n            if(old) {\n              old.call(c);\n            }\n          };\n        };\n      }\n\n      return props.children;\n    }\n  };\n\n  return (context.Provider.__ = context.Consumer.contextType = context);\n}\n\n/*\n * concatenanted preact/hooks/dist/hooks.module.js\n */\n\nvar currentIndex;\nvar currentComponent;\nvar previousComponent;\nvar currentHook = 0;\nvar afterPaintEffects = [];\nvar oldBeforeDiff = options.__b;\nvar oldBeforeRender = options.__r;\nvar oldAfterDiff = options.diffed;\nvar oldCommit = options.__c;\nvar oldBeforeUnmount = options.unmount;\nvar RAF_TIMEOUT = 100;\nvar prevRaf;\n\noptions.__b = function(vnode) {\n  currentComponent = null;\n\n  if(oldBeforeDiff) {\n    oldBeforeDiff(vnode);\n  }\n};\n\noptions.__r = function(vnode) {\n  if(oldBeforeRender) {\n    oldBeforeRender(vnode);\n  }\n\n  currentComponent = vnode.__c;\n  currentIndex = 0;\n  var hooks = currentComponent.__H;\n\n  if(hooks) {\n    hooks.__h.forEach(invokeCleanup);\n    hooks.__h.forEach(invokeEffect);\n    hooks.__h = [];\n  }\n};\n\noptions.diffed = function(vnode) {\n  if(oldAfterDiff) {\n    oldAfterDiff(vnode);\n  }\n\n  var c = vnode.__c;\n\n  if(c && c.__H && c.__H.__h.length) {\n    afterPaint(afterPaintEffects.push(c));\n  }\n\n  currentComponent = previousComponent;\n};\n\noptions.__c = function(vnode, commitQueue) {\n  commitQueue.some(function (component) {\n    try {\n      component.__h.forEach(invokeCleanup);\n\n      component.__h = component.__h.filter(function (cb) {\n        return cb.__ ? invokeEffect(cb) : true;\n      });\n    } catch(e) {\n      commitQueue.some(function (c) {\n        if(c.__h) {\n          c.__h = [];\n        }\n      });\n\n      commitQueue = [];\n      options.__e(e, component.__v);\n    }\n  });\n\n  if(oldCommit) {\n    oldCommit(vnode, commitQueue);\n  }\n};\n\noptions.unmount = function(vnode) {\n  if(oldBeforeUnmount) {\n    oldBeforeUnmount(vnode);\n  }\n\n  var c = vnode.__c;\n\n  if(c && c.__H) {\n    try {\n      c.__H.__.forEach(invokeCleanup);\n    } catch(e) {\n      options.__e(e, c.__v);\n    }\n  }\n};\n\nfunction getHookState(index, type) {\n  try {\n    if(options.__h) {\n      options.__h(currentComponent, index, currentHook || type);\n    }\n\n    currentHook = 0;\n    var hooks = currentComponent.__H || (currentComponent.__H = { __: [], __h: [] });\n\n    if(index >= hooks.__.length) {\n      hooks.__.push({});\n    }\n\n    return hooks.__[index];\n  } catch(error) {}\n  return {};\n}\n\nfunction useState(initialState) {\n  currentHook = 1;\n  return useReducer(invokeOrReturn, initialState);\n}\n\nfunction useReducer(reducer, initialState, init) {\n  var hookState = getHookState(currentIndex++, 2);\n  hookState._reducer = reducer;\n\n  if(!hookState.__c) {\n    hookState.__ = [\n      !init ? invokeOrReturn(undefined, initialState) : init(initialState),\n      function(action) {\n        var nextValue = hookState._reducer(hookState.__[0], action);\n\n        if(hookState.__[0] !== nextValue) {\n          hookState.__ = [nextValue, hookState.__[1]];\n          hookState.__c.setState({});\n        }\n      }\n    ];\n\n    hookState.__c = currentComponent;\n  }\n\n  return hookState.__;\n}\n\nfunction useEffect(callback, args) {\n  var state = getHookState(currentIndex++, 3);\n\n  if(!options.__s && argsChanged(state.__H, args)) {\n    state.__ = callback;\n    state.__H = args;\n    currentComponent.__H.__h.push(state);\n  }\n}\n\nfunction useLayoutEffect(callback, args) {\n  var state = getHookState(currentIndex++, 4);\n\n  if(!options.__s && argsChanged(state.__H, args)) {\n    state.__ = callback;\n    state.__H = args;\n    currentComponent.__h.push(state);\n  }\n}\n\nfunction useRef(initialValue) {\n  currentHook = 5;\n\n  return useMemo(function () {\n    return { current: initialValue };\n  }, []);\n}\n\nfunction useImperativeHandle(ref, createHandle, args) {\n  currentHook = 6;\n\n  useLayoutEffect(\n    function() {\n      if(typeof ref == 'function') {\n        ref(createHandle());\n      } else if(ref) {\n        ref.current = createHandle();\n      }\n      console.log('Ruler ref:', ref);\n    },\n    args == null ? args : args.concat(ref)\n  );\n}\n\nfunction useMemo(factory, args) {\n  var state = getHookState(currentIndex++, 7);\n\n  if(argsChanged(state.__H, args)) {\n    state.__ = factory();\n    state.__H = args;\n    state.__h = factory;\n  }\n\n  return state.__;\n}\n\nfunction useCallback(callback, args) {\n  currentHook = 8;\n\n  return useMemo(function () {\n    return callback;\n  }, args);\n}\n\nfunction useContext(context) {\n  var provider = currentComponent.context[context.__c];\n  var state = getHookState(currentIndex++, 9);\n  state.__c = context;\n\n  if(!provider) {\n    return context.__;\n  }\n\n  if(state.__ == null) {\n    state.__ = true;\n    provider.sub(currentComponent);\n  }\n\n  return provider.props.value;\n}\n\nfunction useDebugValue(value, formatter) {\n  if(options.useDebugValue) {\n    options.useDebugValue(formatter ? formatter(value) : value);\n  }\n}\n\nfunction useErrorBoundary(cb) {\n  var state = getHookState(currentIndex++, 10);\n  var errState = useState();\n  state.__ = cb;\n\n  if(!currentComponent.componentDidCatch) {\n    currentComponent.componentDidCatch = function(err) {\n      if(state.__) {\n        state.__(err);\n      }\n\n      errState[1](err);\n    };\n  }\n\n  return [\n    errState[0],\n    function() {\n      errState[1](undefined);\n    }\n  ];\n}\n\nfunction flushAfterPaintEffects() {\n  afterPaintEffects.forEach(function (component) {\n    if(component.__P) {\n      try {\n        component.__H.__h.forEach(invokeCleanup);\n        component.__H.__h.forEach(invokeEffect);\n        component.__H.__h = [];\n      } catch(e) {\n        component.__H.__h = [];\n        options.__e(e, component.__v);\n      }\n    }\n  });\n\n  afterPaintEffects = [];\n}\nvar HAS_RAF = typeof requestAnimationFrame == 'function';\n\nfunction afterNextFrame(callback) {\n  var done = function done() {\n    clearTimeout(timeout);\n\n    if(HAS_RAF) {\n      cancelAnimationFrame(raf);\n    }\n\n    setTimeout(callback);\n  };\n\n  var timeout = setTimeout(done, RAF_TIMEOUT);\n  var raf;\n\n  if(HAS_RAF) {\n    raf = requestAnimationFrame(done);\n  }\n}\n\nfunction afterPaint(newQueueLength) {\n  if(newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n    prevRaf = options.requestAnimationFrame;\n    (prevRaf || afterNextFrame)(flushAfterPaintEffects);\n  }\n}\n\nfunction invokeCleanup(hook) {\n  var comp = currentComponent;\n\n  if(typeof hook.__c == 'function') {\n    hook.__c();\n  }\n\n  currentComponent = comp;\n}\n\nfunction invokeEffect(hook) {\n  var comp = currentComponent;\n  hook.__c = hook.__();\n  currentComponent = comp;\n}\n\nfunction argsChanged(oldArgs, newArgs) {\n  return (\n    !oldArgs ||\n    oldArgs.length !== newArgs.length ||\n    newArgs.some(function (arg, index) {\n      return arg !== oldArgs[index];\n    })\n  );\n}\n\nfunction invokeOrReturn(arg, f) {\n  return typeof f == 'function' ? f(arg) : f;\n}\n\n/*\n * concatenanted htm/src/constants.mjs\n */\n\nexport const MINI = false;\n\n/*\n * concatenanted htm/src/build.mjs\n */\n\nconst MODE_SLASH = 0;\nconst MODE_TEXT = 1;\nconst MODE_WHITESPACE = 2;\nconst MODE_TAGNAME = 3;\nconst MODE_COMMENT = 4;\nconst MODE_PROP_SET = 5;\nconst MODE_PROP_APPEND = 6;\nconst CHILD_APPEND = 0;\nconst CHILD_RECURSE = 2;\nconst TAG_SET = 3;\nconst PROPS_ASSIGN = 4;\nconst PROP_SET = MODE_PROP_SET;\nconst PROP_APPEND = MODE_PROP_APPEND;\n\nexport const treeify = (built, fields) => {\n  const _treeify = built => {\n    let tag = '';\n    let currentProps = null;\n    const props = [];\n    const children = [];\n\n    for(let i = 1; i < built.length; i++) {\n      const type = built[i++];\n      const value = built[i] ? fields[built[i++] - 1] : built[++i];\n\n      if(type === TAG_SET) {\n        tag = value;\n      } else if(type === PROPS_ASSIGN) {\n        props.push(value);\n        currentProps = null;\n      } else if(type === PROP_SET) {\n        if(!currentProps) {\n          currentProps = Object.create(null);\n          props.push(currentProps);\n        }\n\n        currentProps[built[++i]] = [value];\n      } else if(type === PROP_APPEND) {\n        currentProps[built[++i]].push(value);\n      } else if(type === CHILD_RECURSE) {\n        children.push(_treeify(value));\n      } else if(type === CHILD_APPEND) {\n        children.push(value);\n      }\n    }\n\n    return { tag, props, children };\n  };\n\n  const { children } = _treeify(built);\n  return children.length > 1 ? children : children[0];\n};\n\nexport const evaluate = (h, built, fields, args) => {\n  let tmp;\n  built[0] = 0;\n\n  for(let i = 1; i < built.length; i++) {\n    const type = built[i++];\n    const value = built[i] ? ((built[0] |= type ? 1 : 2), fields[built[i++]]) : built[++i];\n\n    if(type === TAG_SET) {\n      args[0] = value;\n    } else if(type === PROPS_ASSIGN) {\n      args[1] = Object.assign(args[1] || {}, value);\n    } else if(type === PROP_SET) {\n      (args[1] = args[1] || {})[built[++i]] = value;\n    } else if(type === PROP_APPEND) {\n      args[1][built[++i]] += value + '';\n    } else if(type) {\n      tmp = h.apply(value, evaluate(h, value, fields, ['', null]));\n      args.push(tmp);\n\n      if(value[0]) {\n        built[0] |= 2;\n      } else {\n        built[i - 2] = CHILD_APPEND;\n        built[i] = tmp;\n      }\n    } else {\n      args.push(value);\n    }\n  }\n\n  return args;\n};\n\nexport const build = function(statics) {\n  const fields = arguments;\n  const h = this;\n  let mode = MODE_TEXT;\n  let buffer = '';\n  let quote = '';\n  let current = [0];\n  let char, propName;\n\n  const commit = field => {\n    if(mode === MODE_TEXT && (field || (buffer = buffer.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g, '')))) {\n      if(MINI) {\n        current.push(field ? fields[field] : buffer);\n      } else {\n        current.push(CHILD_APPEND, field, buffer);\n      }\n    } else if(mode === MODE_TAGNAME && (field || buffer)) {\n      if(MINI) {\n        current[1] = field ? fields[field] : buffer;\n      } else {\n        current.push(TAG_SET, field, buffer);\n      }\n\n      mode = MODE_WHITESPACE;\n    } else if(mode === MODE_WHITESPACE && buffer === '...' && field) {\n      if(MINI) {\n        current[2] = Object.assign(current[2] || {}, fields[field]);\n      } else {\n        current.push(PROPS_ASSIGN, field, 0);\n      }\n    } else if(mode === MODE_WHITESPACE && buffer && !field) {\n      if(MINI) {\n        (current[2] = current[2] || {})[buffer] = true;\n      } else {\n        current.push(PROP_SET, 0, true, buffer);\n      }\n    } else if(mode >= MODE_PROP_SET) {\n      if(MINI) {\n        if(mode === MODE_PROP_SET) {\n          (current[2] = current[2] || {})[propName] = field\n            ? buffer\n              ? buffer + fields[field]\n              : fields[field]\n            : buffer;\n          mode = MODE_PROP_APPEND;\n        } else if(field || buffer) {\n          current[2][propName] += field ? buffer + fields[field] : buffer;\n        }\n      } else {\n        if(buffer || (!field && mode === MODE_PROP_SET)) {\n          current.push(mode, 0, buffer, propName);\n          mode = MODE_PROP_APPEND;\n        }\n\n        if(field) {\n          current.push(mode, field, 0, propName);\n          mode = MODE_PROP_APPEND;\n        }\n      }\n    }\n\n    buffer = '';\n  };\n\n  for(let i = 0; i < statics.length; i++) {\n    if(i) {\n      if(mode === MODE_TEXT) {\n        commit();\n      }\n\n      commit(i);\n    }\n\n    for(let j = 0; j < statics[i].length; j++) {\n      char = statics[i][j];\n\n      if(mode === MODE_TEXT) {\n        if(char === '<') {\n          commit();\n\n          if(MINI) {\n            current = [current, '', null];\n          } else {\n            current = [current];\n          }\n\n          mode = MODE_TAGNAME;\n        } else {\n          buffer += char;\n        }\n      } else if(mode === MODE_COMMENT) {\n        if(buffer === '--' && char === '>') {\n          mode = MODE_TEXT;\n          buffer = '';\n        } else {\n          buffer = char + buffer[0];\n        }\n      } else if(quote) {\n        if(char === quote) {\n          quote = '';\n        } else {\n          buffer += char;\n        }\n      } else if(char === '\"' || char === \"'\") {\n        quote = char;\n      } else if(char === '>') {\n        commit();\n        mode = MODE_TEXT;\n      } else if(!mode) {\n      } else if(char === '=') {\n        mode = MODE_PROP_SET;\n        propName = buffer;\n        buffer = '';\n      } else if(char === '/' && (mode < MODE_PROP_SET || statics[i][j + 1] === '>')) {\n        commit();\n\n        if(mode === MODE_TAGNAME) {\n          current = current[0];\n        }\n\n        mode = current;\n\n        if(MINI) {\n          (current = current[0]).push(h.apply(null, mode.slice(1)));\n        } else {\n          (current = current[0]).push(CHILD_RECURSE, 0, mode);\n        }\n\n        mode = MODE_SLASH;\n      } else if(char === ' ' || char === '\\t' || char === '\\n' || char === '\\r') {\n        commit();\n        mode = MODE_WHITESPACE;\n      } else {\n        buffer += char;\n      }\n\n      if(mode === MODE_TAGNAME && buffer === '!--') {\n        mode = MODE_COMMENT;\n        current = current[0];\n      }\n    }\n  }\n\n  commit();\n\n  if(MINI) {\n    return current.length > 2 ? current.slice(1) : current[1];\n  }\n\n  return current;\n};\n\n/*\n * concatenanted htm/src/index.mjs\n */\n\nconst CACHES = new Map();\n\nconst regular = function(statics) {\n  let tmp = CACHES.get(this);\n\n  if(!tmp) {\n    tmp = new Map();\n    CACHES.set(this, tmp);\n  }\n\n  tmp = evaluate(this, tmp.get(statics) || (tmp.set(statics, (tmp = build(statics))), tmp), arguments, []);\n  return tmp.length > 1 ? tmp : tmp[0];\n};\n//export default MINI ? build : regular;\n\n/*\n * concatenanted htm/src/integrations/preact/standalone.mjs\n */\n\nconst html = regular.bind(createElement);\n//export { createElement as h, html, render, Component, createElement, createContext, useState, useReducer, useEffect, useLayoutEffect, useRef, useImperativeHandle, useMemo, useCallback, useContext, useDebugValue };\n//export { render, hydrate, createElement, createElement as h, Fragment, createRef, isValidElement, Component, cloneElement, createContext, toChildArray, unmount as __u, options };\n//export { useState, useReducer, useEffect, useLayoutEffect, useRef, useImperativeHandle, useMemo, useCallback, useContext, useDebugValue, useErrorBoundary };\n\nexport {\n  cloneElement,\n  Component,\n  createContext,\n  createElement,\n  createElement as h,\n  createRef,\n  Fragment,\n  html,\n  hydrate,\n  isValidElement,\n  /*  options,*/\n  render,\n  toChildArray,\n  unmount as __u,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useErrorBoundary,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState\n};\n\nexport default {\n  cloneElement,\n  Component,\n  createContext,\n  createElement,\n  createElement,\n  createRef,\n  Fragment,\n  html,\n  hydrate,\n  isValidElement,\n  options,\n  render,\n  toChildArray,\n  unmount,\n  useCallback,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useErrorBoundary,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState\n};\n",
			"file": "lib/preact.js",
			"file_size": 40481,
			"file_write_time": 132781847047805363,
			"settings":
			{
				"buffer_size": 40481,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAANqbAAAAAAAA25sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADamwAAAAAAANqbAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAANqbAAAAAAAA2psAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbmwAAAAAAANubAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAEteAAAAAAAAZ14AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLXgAAAAAAAEteAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"cut",
					null,
					"AQAAAEteAAAAAAAAS14AAAAAAAAcAAAAdmFyIElTX0hZRFJBVEUgPSBFTVBUWV9PQko7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLXgAAAAAAAGdeAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "components.js",
			"settings":
			{
				"buffer_size": 42220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1355,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGkYAAAAAAAAahgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpGAAAAAAAAGkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1356,
					1,
					"insert",
					{
						"characters": "\nonMouseDo"
					},
					"CwAAAGoYAAAAAAAAaxgAAAAAAAAAAAAAaxgAAAAAAABxGAAAAAAAAAAAAABxGAAAAAAAAHIYAAAAAAAAAAAAAHIYAAAAAAAAcxgAAAAAAAAAAAAAcxgAAAAAAAB0GAAAAAAAAAAAAAB0GAAAAAAAAHUYAAAAAAAAAAAAAHUYAAAAAAAAdhgAAAAAAAAAAAAAdhgAAAAAAAB3GAAAAAAAAAAAAAB3GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAeRgAAAAAAAAAAAAAeRgAAAAAAAB6GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqGAAAAAAAAGoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1357,
					1,
					"insert",
					{
						"characters": "wn:"
					},
					"AwAAAHoYAAAAAAAAexgAAAAAAAAAAAAAexgAAAAAAAB8GAAAAAAAAAAAAAB8GAAAAAAAAH0YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6GAAAAAAAAHoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1358,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH0YAAAAAAAAfhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9GAAAAAAAAH0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1359,
					1,
					"paste",
					null,
					"AQAAAH4YAAAAAAAAhBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+GAAAAAAAAH4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1364,
					1,
					"insert",
					{
						"characters": "\n\n\nuf"
					},
					"CgAAAPYXAAAAAAAA9xcAAAAAAAAAAAAA9xcAAAAAAAD7FwAAAAAAAAAAAAD7FwAAAAAAAPwXAAAAAAAAAAAAAPwXAAAAAAAAABgAAAAAAAAAAAAA9xcAAAAAAAD3FwAAAAAAAAQAAAAgICAg/BcAAAAAAAD9FwAAAAAAAAAAAAD9FwAAAAAAAAEYAAAAAAAAAAAAAPgXAAAAAAAA+BcAAAAAAAAEAAAAICAgIP0XAAAAAAAA/hcAAAAAAAAAAAAA/hcAAAAAAAD/FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2FwAAAAAAAPYXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1365,
					2,
					"left_delete",
					null,
					"AgAAAP4XAAAAAAAA/hcAAAAAAAABAAAAZv0XAAAAAAAA/RcAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/FwAAAAAAAP8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "îf"
					},
					"AgAAAP0XAAAAAAAA/hcAAAAAAAAAAAAA/hcAAAAAAAD/FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9FwAAAAAAAP0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1367,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP8XAAAAAAAAARgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/FwAAAAAAAP8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1368,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAP8XAAAAAAAA/xcAAAAAAAABAAAAKP8XAAAAAAAA/xcAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1369,
					3,
					"left_delete",
					null,
					"AwAAAP4XAAAAAAAA/hcAAAAAAAABAAAAZv0XAAAAAAAA/RcAAAAAAAACAAAAw677FwAAAAAAAPsXAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/FwAAAAAAAP8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1370,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAPsXAAAAAAAA/BcAAAAAAAAAAAAA/BcAAAAAAAD9FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7FwAAAAAAAPsXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1371,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP0XAAAAAAAA/xcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9FwAAAAAAAP0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1373,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAPgXAAAAAAAA+RcAAAAAAAAAAAAA+RcAAAAAAAD6FwAAAAAAAAAAAAD6FwAAAAAAAPsXAAAAAAAAAAAAAPsXAAAAAAAA/BcAAAAAAAAAAAAA/BcAAAAAAAD9FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4FwAAAAAAAPgXAAAAAAAAAAAAAACARkA"
				],
				[
					1374,
					1,
					"insert",
					{
						"characters": " tag=target."
					},
					"DAAAAP0XAAAAAAAA/hcAAAAAAAAAAAAA/hcAAAAAAAD/FwAAAAAAAAAAAAD/FwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAFGAAAAAAAAAAAAAAFGAAAAAAAAAYYAAAAAAAAAAAAAAYYAAAAAAAABxgAAAAAAAAAAAAABxgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAkYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9FwAAAAAAAP0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1375,
					1,
					"insert",
					{
						"characters": "tagName.t"
					},
					"CQAAAAkYAAAAAAAAChgAAAAAAAAAAAAAChgAAAAAAAALGAAAAAAAAAAAAAALGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAADRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAAOGAAAAAAAAA8YAAAAAAAAAAAAAA8YAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAARGAAAAAAAAAAAAAARGAAAAAAAABIYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJGAAAAAAAAAkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1376,
					1,
					"insert",
					{
						"characters": "ol"
					},
					"AgAAABIYAAAAAAAAExgAAAAAAAAAAAAAExgAAAAAAAAUGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASGAAAAAAAABIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1377,
					1,
					"left_delete",
					null,
					"AQAAABMYAAAAAAAAExgAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUGAAAAAAAABQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1378,
					1,
					"insert",
					{
						"characters": "LowerCase"
					},
					"CQAAABMYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAVGAAAAAAAAAAAAAAVGAAAAAAAABYYAAAAAAAAAAAAABYYAAAAAAAAFxgAAAAAAAAAAAAAFxgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABkYAAAAAAAAAAAAABkYAAAAAAAAGhgAAAAAAAAAAAAAGhgAAAAAAAAbGAAAAAAAAAAAAAAbGAAAAAAAABwYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATGAAAAAAAABMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1379,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABwYAAAAAAAAHhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcGAAAAAAAABwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1381,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB4YAAAAAAAAHxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeGAAAAAAAAB4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1383,
					1,
					"left_delete",
					null,
					"AQAAACUYAAAAAAAAJRgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmGAAAAAAAACYYAAAAAAAAAAAAAADwdUA"
				],
				[
					1390,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAABAYAAAAAAAAERgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQGAAAAAAAABAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1392,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAAYYAAAAAAAABxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGAAAAAAAAAYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1393,
					1,
					"left_delete",
					null,
					"AQAAAAYYAAAAAAAABhgAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHGAAAAAAAAAcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1395,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAAgYAAAAAAAACRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIGAAAAAAAAAgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1397,
					1,
					"insert",
					{
						"characters": "tag)"
					},
					"BAAAACcYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAApGAAAAAAAAAAAAAApGAAAAAAAACoYAAAAAAAAAAAAACoYAAAAAAAAKxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnGAAAAAAAACcYAAAAAAAAAAAAAAAgY0A"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsYAAAAAAAALBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArGAAAAAAAACsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1399,
					2,
					"left_delete",
					null,
					"AgAAACsYAAAAAAAAKxgAAAAAAAABAAAAICoYAAAAAAAAKhgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsGAAAAAAAACwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1400,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAACoYAAAAAAAAKxgAAAAAAAAAAAAAKxgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAAC0YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqGAAAAAAAACoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0YAAAAAAAALhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtGAAAAAAAAC0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1402,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAC4YAAAAAAAAMBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuGAAAAAAAAC4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1403,
					1,
					"insert",
					{
						"characters": "img"
					},
					"AwAAAC8YAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAAxGAAAAAAAAAAAAAAxGAAAAAAAADIYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvGAAAAAAAAC8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1405,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMYAAAAAAAANBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzGAAAAAAAADMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1406,
					1,
					"left_delete",
					null,
					"AQAAADMYAAAAAAAAMxgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0GAAAAAAAADQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADMYAAAAAAAANBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzGAAAAAAAADMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1408,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQYAAAAAAAANRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0GAAAAAAAADQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1409,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADUYAAAAAAAANxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1GAAAAAAAADUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1410,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAADYYAAAAAAAANxgAAAAAAAAAAAAANxgAAAAAAAA5GAAAAAAAAAAAAAA5GAAAAAAAADoYAAAAAAAAAAAAADoYAAAAAAAAPBgAAAAAAAAAAAAANxgAAAAAAAA3GAAAAAAAAAIAAAAgIDcYAAAAAAAAOxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2GAAAAAAAADYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1434,
					1,
					"cut",
					null,
					"AQAAALUXAAAAAAAAtRcAAAAAAABCAAAAICAgIGNvbnNvbGUubG9nKCdCdXR0b25Hcm91cC5ldmVudDonLCB7IGN1cnJlbnRUYXJnZXQsIHRhcmdldCB9KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1FwAAAAAAAPcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1437,
					1,
					"paste",
					null,
					"AQAAAPkXAAAAAAAAOxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5FwAAAAAAAPkXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1440,
					1,
					"insert",
					{
						"characters": "target"
					},
					"BwAAAB8YAAAAAAAAIBgAAAAAAAAAAAAAIBgAAAAAAAAgGAAAAAAAABkAAAB7IGN1cnJlbnRUYXJnZXQsIHRhcmdldCB9IBgAAAAAAAAhGAAAAAAAAAAAAAAhGAAAAAAAACIYAAAAAAAAAAAAACIYAAAAAAAAIxgAAAAAAAAAAAAAIxgAAAAAAAAkGAAAAAAAAAAAAAAkGAAAAAAAACUYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfGAAAAAAAADgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1456,
					1,
					"insert",
					{
						"characters": "\nco"
					},
					"AwAAAN8XAAAAAAAA4BcAAAAAAAAAAAAA4BcAAAAAAADhFwAAAAAAAAAAAADhFwAAAAAAAOIXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfFwAAAAAAAN8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1457,
					2,
					"left_delete",
					null,
					"AgAAAOEXAAAAAAAA4RcAAAAAAAABAAAAb+AXAAAAAAAA4BcAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiFwAAAAAAAOIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1458,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOAXAAAAAAAA4RcAAAAAAAAAAAAA4RcAAAAAAADiFwAAAAAAAAAAAADiFwAAAAAAAOMXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgFwAAAAAAAOAXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMXAAAAAAAA5BcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjFwAAAAAAAOMXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": "sub"
					},
					"AwAAAOQXAAAAAAAA5RcAAAAAAAAAAAAA5RcAAAAAAADmFwAAAAAAAAAAAADmFwAAAAAAAOcXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkFwAAAAAAAOQXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1461,
					2,
					"left_delete",
					null,
					"AgAAAOYXAAAAAAAA5hcAAAAAAAABAAAAYuUXAAAAAAAA5RcAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnFwAAAAAAAOcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": "iblingCoutn"
					},
					"CwAAAOUXAAAAAAAA5hcAAAAAAAAAAAAA5hcAAAAAAADnFwAAAAAAAAAAAADnFwAAAAAAAOgXAAAAAAAAAAAAAOgXAAAAAAAA6RcAAAAAAAAAAAAA6RcAAAAAAADqFwAAAAAAAAAAAADqFwAAAAAAAOsXAAAAAAAAAAAAAOsXAAAAAAAA7BcAAAAAAAAAAAAA7BcAAAAAAADtFwAAAAAAAAAAAADtFwAAAAAAAO4XAAAAAAAAAAAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADwFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlFwAAAAAAAOUXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1463,
					2,
					"left_delete",
					null,
					"AgAAAO8XAAAAAAAA7xcAAAAAAAABAAAAbu4XAAAAAAAA7hcAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwFwAAAAAAAPAXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": "nter=0;"
					},
					"BwAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADwFwAAAAAAAAAAAADwFwAAAAAAAPEXAAAAAAAAAAAAAPEXAAAAAAAA8hcAAAAAAAAAAAAA8hcAAAAAAADzFwAAAAAAAAAAAADzFwAAAAAAAPQXAAAAAAAAAAAAAPQXAAAAAAAA9RcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuFwAAAAAAAO4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					1469,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BQAAAD4YAAAAAAAAPxgAAAAAAAAAAAAAPxgAAAAAAABAGAAAAAAAAAAAAABAGAAAAAAAAEEYAAAAAAAAAAAAAEEYAAAAAAAAQhgAAAAAAAAAAAAAQhgAAAAAAABDGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+GAAAAAAAAD4YAAAAAAAAAAAAAABgZUA"
				],
				[
					1470,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMYAAAAAAAARBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDGAAAAAAAAEMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1474,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAIwXAAAAAAAAjRcAAAAAAAAAAAAAjRcAAAAAAACNFwAAAAAAAAUAAABjb25zdI0XAAAAAAAAjhcAAAAAAAAAAAAAjhcAAAAAAACPFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMFwAAAAAAAJEXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1485,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAEEYAAAAAAAAQRgAAAAAAAABAAAAIEEYAAAAAAAARBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBGAAAAAAAAEIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1486,
					1,
					"left_delete",
					null,
					"AQAAAEIYAAAAAAAAQhgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCGAAAAAAAAEMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1488,
					1,
					"insert",
					{
						"characters": "do"
					},
					"AwAAADwYAAAAAAAAPRgAAAAAAAAAAAAAPRgAAAAAAAA9GAAAAAAAAAYAAAB3aGlsZSg9GAAAAAAAAD4YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCGAAAAAAAADwYAAAAAAAAAAAAAAAAAAA"
				],
				[
					1490,
					1,
					"left_delete",
					null,
					"AQAAAD4YAAAAAAAAPhgAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/GAAAAAAAAD8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4YAAAAAAAAPxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+GAAAAAAAAD4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1492,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD8YAAAAAAAAQRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/GAAAAAAAAD8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1493,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEAYAAAAAAAAQRgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAABBGAAAAAAAAEMYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAGAAAAAAAAEAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1494,
					1,
					"insert",
					{
						"characters": "target"
					},
					"BgAAAEMYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAABFGAAAAAAAAEYYAAAAAAAAAAAAAEYYAAAAAAAARxgAAAAAAAAAAAAARxgAAAAAAABIGAAAAAAAAAAAAABIGAAAAAAAAEkYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDGAAAAAAAAEMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1495,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEkYAAAAAAAAShgAAAAAAAAAAAAAShgAAAAAAABLGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJGAAAAAAAAEkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1496,
					1,
					"insert",
					{
						"characters": " rga"
					},
					"BAAAAEsYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABNGAAAAAAAAAAAAABNGAAAAAAAAE4YAAAAAAAAAAAAAE4YAAAAAAAATxgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLGAAAAAAAAEsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1497,
					3,
					"left_delete",
					null,
					"AwAAAE4YAAAAAAAAThgAAAAAAAABAAAAYU0YAAAAAAAATRgAAAAAAAABAAAAZ0wYAAAAAAAATBgAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPGAAAAAAAAE8YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1498,
					1,
					"insert",
					{
						"characters": "target.prevous"
					},
					"DgAAAEwYAAAAAAAATRgAAAAAAAAAAAAATRgAAAAAAABOGAAAAAAAAAAAAABOGAAAAAAAAE8YAAAAAAAAAAAAAE8YAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABRGAAAAAAAAAAAAABRGAAAAAAAAFIYAAAAAAAAAAAAAFIYAAAAAAAAUxgAAAAAAAAAAAAAUxgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFUYAAAAAAAAAAAAAFUYAAAAAAAAVhgAAAAAAAAAAAAAVhgAAAAAAABXGAAAAAAAAAAAAABXGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAWRgAAAAAAAAAAAAAWRgAAAAAAABaGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMGAAAAAAAAEwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1499,
					1,
					"insert",
					{
						"characters": "Sib"
					},
					"AwAAAFoYAAAAAAAAWxgAAAAAAAAAAAAAWxgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAF0YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaGAAAAAAAAFoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1500,
					3,
					"left_delete",
					null,
					"AwAAAFwYAAAAAAAAXBgAAAAAAAABAAAAYlsYAAAAAAAAWxgAAAAAAAABAAAAaVoYAAAAAAAAWhgAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdGAAAAAAAAF0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1501,
					1,
					"insert",
					{
						"characters": "El"
					},
					"AgAAAFoYAAAAAAAAWxgAAAAAAAAAAAAAWxgAAAAAAABcGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaGAAAAAAAAFoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1502,
					1,
					"insert_completion",
					{
						"completion": "previousElementSibling",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "previousElementSibling"
					},
					"AgAAAFMYAAAAAAAAUxgAAAAAAAAJAAAAcHJldm91c0VsUxgAAAAAAABpGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcGAAAAAAAAFwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1503,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGkYAAAAAAAAahgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpGAAAAAAAAGkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1504,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGoYAAAAAAAAaxgAAAAAAAAAAAAAaxgAAAAAAABtGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqGAAAAAAAAGoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1506,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BgAAAG8YAAAAAAAAcBgAAAAAAAAAAAAAaxgAAAAAAABrGAAAAAAAAAIAAAAgIG4YAAAAAAAAbxgAAAAAAAAAAAAAbxgAAAAAAABwGAAAAAAAAAAAAABwGAAAAAAAAHEYAAAAAAAAAAAAAHEYAAAAAAAAchgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvGAAAAAAAAG8YAAAAAAAAAAAAAAAAMkA"
				],
				[
					1507,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHIYAAAAAAAAdBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByGAAAAAAAAHIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1508,
					1,
					"insert",
					{
						"characters": "target"
					},
					"BgAAAHMYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB1GAAAAAAAAAAAAAB1GAAAAAAAAHYYAAAAAAAAAAAAAHYYAAAAAAAAdxgAAAAAAAAAAAAAdxgAAAAAAAB4GAAAAAAAAAAAAAB4GAAAAAAAAHkYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzGAAAAAAAAHMYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1510,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHoYAAAAAAAAexgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6GAAAAAAAAHoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1512,
					1,
					"insert",
					{
						"characters": "sib"
					},
					"AwAAAGsYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABtGAAAAAAAAAAAAABtGAAAAAAAAG4YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrGAAAAAAAAGsYAAAAAAAAAAAAAADgYEA"
				],
				[
					1513,
					1,
					"insert_completion",
					{
						"completion": "siblingCounter",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "siblingCounter"
					},
					"AgAAAGsYAAAAAAAAaxgAAAAAAAADAAAAc2liaxgAAAAAAAB5GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuGAAAAAAAAG4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1514,
					1,
					"insert",
					{
						"characters": "++;"
					},
					"AwAAAHkYAAAAAAAAehgAAAAAAAAAAAAAehgAAAAAAAB7GAAAAAAAAAAAAAB7GAAAAAAAAHwYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5GAAAAAAAAHkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1525,
					1,
					"cut",
					null,
					"AQAAAAkYAAAAAAAACRgAAAAAAAAzAAAAICAgICAgICBjb25zb2xlLmxvZygnQnV0dG9uR3JvdXAuZXZlbnQ6JywgdGFyZ2V0KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJGAAAAAAAADwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1528,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFkYAAAAAAAAWhgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZGAAAAAAAAFkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1529,
					1,
					"paste",
					null,
					"AQAAAFoYAAAAAAAAjRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaGAAAAAAAAFoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1539,
					1,
					"paste",
					null,
					"AgAAAIQYAAAAAAAAkhgAAAAAAAAAAAAAkhgAAAAAAACSGAAAAAAAAAYAAAB0YXJnZXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEGAAAAAAAAIoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1544,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSGAAAAAAAAJIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1583,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALsYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADCGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7GAAAAAAAALsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1584,
					1,
					"insert",
					{
						"characters": "index"
					},
					"BQAAAMIYAAAAAAAAwxgAAAAAAAAAAAAAwxgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMUYAAAAAAAAAAAAAMUYAAAAAAAAxhgAAAAAAAAAAAAAxhgAAAAAAADHGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCGAAAAAAAAMIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1585,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMcYAAAAAAAAyRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHGAAAAAAAAMcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1586,
					1,
					"paste",
					null,
					"AQAAAMgYAAAAAAAA1hgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIGAAAAAAAAMgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1587,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAANYYAAAAAAAA1xgAAAAAAAAAAAAA1xgAAAAAAADYGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWGAAAAAAAANYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1589,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANkYAAAAAAAA2hgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZGAAAAAAAANkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1628,
					1,
					"insert",
					{
						"characters": "onChange"
					},
					"CAAAABcWAAAAAAAAGBYAAAAAAAAAAAAAGBYAAAAAAAAZFgAAAAAAAAAAAAAZFgAAAAAAABoWAAAAAAAAAAAAABoWAAAAAAAAGxYAAAAAAAAAAAAAGxYAAAAAAAAcFgAAAAAAAAAAAAAcFgAAAAAAAB0WAAAAAAAAAAAAAB0WAAAAAAAAHhYAAAAAAAAAAAAAHhYAAAAAAAAfFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXFgAAAAAAABcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1629,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAB8WAAAAAAAAIBYAAAAAAAAAAAAAIBYAAAAAAAAhFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfFgAAAAAAAB8WAAAAAAAAAAAAAAAA8L8"
				],
				[
					1630,
					1,
					"insert",
					{
						"characters": " trkl(),"
					},
					"CAAAACEWAAAAAAAAIhYAAAAAAAAAAAAAIhYAAAAAAAAjFgAAAAAAAAAAAAAjFgAAAAAAACQWAAAAAAAAAAAAACQWAAAAAAAAJRYAAAAAAAAAAAAAJRYAAAAAAAAmFgAAAAAAAAAAAAAmFgAAAAAAACcWAAAAAAAAAAAAACcWAAAAAAAAKBYAAAAAAAAAAAAAKBYAAAAAAAApFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhFgAAAAAAACEWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1631,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkWAAAAAAAAKhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1636,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAACIWAAAAAAAAIhYAAAAAAAAGAAAAdHJrbCgpIhYAAAAAAAAqFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAACMWAAAAAAAAJBYAAAAAAAAAAAAAJBYAAAAAAAAkFgAAAAAAAAYAAAB0cmtsKCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1638,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACQWAAAAAAAAJRYAAAAAAAAAAAAAJRYAAAAAAAAmFgAAAAAAAAAAAAAmFgAAAAAAACcWAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkFgAAAAAAACQWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1639,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcWAAAAAAAAKBYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnFgAAAAAAACcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1640,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACgWAAAAAAAAKhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1642,
					1,
					"right_delete",
					null,
					"AQAAACoWAAAAAAAAKhYAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqFgAAAAAAACoWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": "\nkl"
					},
					"BAAAANAYAAAAAAAA0RgAAAAAAAAAAAAA0RgAAAAAAADXGAAAAAAAAAAAAADXGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQGAAAAAAAANAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1658,
					2,
					"left_delete",
					null,
					"AgAAANgYAAAAAAAA2BgAAAAAAAABAAAAbNcYAAAAAAAA1xgAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZGAAAAAAAANkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAANcYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADZGAAAAAAAAAAAAADZGAAAAAAAANoYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXGAAAAAAAANcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1660,
					1,
					"insert",
					{
						"characters": " j"
					},
					"AgAAANoYAAAAAAAA2xgAAAAAAAAAAAAA2xgAAAAAAADcGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaGAAAAAAAANoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1661,
					1,
					"insert",
					{
						"characters": " =siblin"
					},
					"CAAAANwYAAAAAAAA3RgAAAAAAAAAAAAA3RgAAAAAAADeGAAAAAAAAAAAAADeGAAAAAAAAN8YAAAAAAAAAAAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAADhGAAAAAAAAOIYAAAAAAAAAAAAAOIYAAAAAAAA4xgAAAAAAAAAAAAA4xgAAAAAAADkGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcGAAAAAAAANwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1662,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOQYAAAAAAAA5RgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkGAAAAAAAAOQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1663,
					1,
					"insert_completion",
					{
						"completion": "siblingCounter",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "siblingCounter"
					},
					"AgAAAN4YAAAAAAAA3hgAAAAAAAAHAAAAc2libGluZ94YAAAAAAAA7BgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlGAAAAAAAAOUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1664,
					1,
					"insert",
					{
						"characters": "-1;"
					},
					"AwAAAOwYAAAAAAAA7RgAAAAAAAAAAAAA7RgAAAAAAADuGAAAAAAAAAAAAADuGAAAAAAAAO8YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsGAAAAAAAAOwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8YAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD2GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvGAAAAAAAAO8YAAAAAAAA////////738"
				],
				[
					1673,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAPYYAAAAAAAA9xgAAAAAAAAAAAAA9xgAAAAAAAD4GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2GAAAAAAAAPYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1674,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgYAAAAAAAA+hgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4GAAAAAAAAPgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1675,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5GAAAAAAAAPkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1676,
					1,
					"left_delete",
					null,
					"AQAAAPkYAAAAAAAA+RgAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6GAAAAAAAAPoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5GAAAAAAAAPkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1678,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6GAAAAAAAAPoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": " active"
					},
					"BwAAAP0YAAAAAAAA/hgAAAAAAAAAAAAA/hgAAAAAAAD/GAAAAAAAAAAAAAD/GAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAARkAAAAAAAAAAAAAARkAAAAAAAACGQAAAAAAAAAAAAACGQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAABBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9GAAAAAAAAP0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AgAAABIZAAAAAAAAExkAAAAAAAAAAAAAExkAAAAAAAATGQAAAAAAABAAAABzaWJsaW5nQ291bnRlci0x",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASGQAAAAAAACIZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1688,
					1,
					"insert",
					{
						"characters": "\nonChange"
					},
					"DAAAABUZAAAAAAAAFhkAAAAAAAAAAAAAFhkAAAAAAAAcGQAAAAAAAAAAAAAWGQAAAAAAABYZAAAAAAAABgAAACAgICAgIBYZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAbGQAAAAAAAAAAAAAbGQAAAAAAABwZAAAAAAAAAAAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAeGQAAAAAAAAAAAAAeGQAAAAAAAB8ZAAAAAAAAAAAAAB8ZAAAAAAAAIBkAAAAAAAAAAAAAIBkAAAAAAAAhGQAAAAAAAAAAAAAhGQAAAAAAACIZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVGQAAAAAAABUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1692,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUZAAAAAAAABhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFGQAAAAAAAAUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1693,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAYZAAAAAAAACBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGQAAAAAAAAYZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1694,
					1,
					"right_delete",
					null,
					"AQAAAAcZAAAAAAAABxkAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHGQAAAAAAAAcZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1696,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACQZAAAAAAAAJhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkGQAAAAAAACQZAAAAAAAAAAAAAADgaUA"
				],
				[
					1697,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAACUZAAAAAAAAJhkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlGQAAAAAAACUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACcZAAAAAAAAKBkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnGQAAAAAAACcZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1701,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoGQAAAAAAACgZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAAvGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqGQAAAAAAACoZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1712,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BwAAACUZAAAAAAAAJhkAAAAAAAAAAAAAJhkAAAAAAAAmGQAAAAAAAAEAAABqKxkAAAAAAAArGQAAAAAAAAQAAAAgICAgJhkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlGQAAAAAAACYZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1745,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFQXAAAAAAAAVhcAAAAAAAAAAAAAQBcAAAAAAABCFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUFwAAAAAAAEAXAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/hooks/useEvent.js",
			"settings":
			{
				"buffer_size": 706,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/static"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/compat.mjs",
		"/home/roman/Projects/plot-cv/preact.mjs",
		"/home/roman/Projects/plot-cv/lib/hooks.mjs",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/svg/sort-size-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-name-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-time-2.svg",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/tlite.css",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/lib/geom/align.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/inotify_event.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/palette.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/plot-cv/test-voronoi.js",
		"/home/roman/Projects/plot-cv/quickjs/README.md",
		"/home/roman/Projects/plot-cv/quickjs/readme.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/gif_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/png_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/DomColors.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_imgproc.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/gifenc/example.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/DomColors.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/.git",
		"/home/roman/Projects/plot-cv/image-helpers.js",
		"/home/roman/Projects/plot-cv/test-eagle.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/test-video.config.json",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
		"/home/roman/Projects/plot-cv/test-xml.js",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/convert-imports.js",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/test-readdir.js",
		"/home/roman/Projects/plot-cv/RecursiveIterator.js",
		"/home/roman/Projects/plot-cv/lib/png.js",
		"/home/roman/Projects/plot-cv/lib/jpegSize.js",
		"/home/roman/Projects/plot-cv/lib/jpeg.js",
		"/home/roman/Projects/plot-cv/lib/image-info.js",
		"/home/roman/Projects/plot-cv/lib/image-size.js",
		"/home/roman/Projects/plot-cv/lib/repeater/limiters.js",
		"/home/roman/Projects/plot-cv/lib/repeater/pubsub.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/userscript-build.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-svgpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/test-bpg.html",
		"/home/roman/Projects/plot-cv/test-call.js",
		"/home/roman/Projects/plot-cv/output-267.svg",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/dump-structs.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/jsobjstruct.c",
		"/home/roman/Projects/plot-cv/example_gl2.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/undefinedundefined63undefined",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/opencv/disabled/code10-3.cpp",
		"/home/roman/Projects/plot-cv/lib/dom/svg.js"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"          \n",
			"sort.*svg",
			"ButtonGroup",
			"useEvent",
			"mousedown",
			"ButtonGr",
			"sort-",
			"createRef",
			"IS_HYDRATE",
			"hydrate",
			"createRef",
			"preactCom",
			"Fragment",
			"vnode",
			"cloneElement",
			"cloneEleme",
			"clone",
			"\\(Button,",
			"\\(Button, ",
			"'group'",
			"ButtonGroup",
			"black",
			"#000",
			"black",
			"#000",
			"#fff",
			"#000",
			"fill",
			"button",
			"components.js",
			"ButtonGroup",
			"align",
			"CCimage",
			"resize",
			"fromImages",
			"input",
			"'ImageSize",
			"seq\\.size",
			"FAIL:",
			"ImageSize",
			"dst",
			"firstSize",
			"dst0Size",
			"videoSize",
			"video\\.",
			"videos",
			"ImageSequence",
			"fetch",
			"'/save'",
			"save'",
			"Compile\\(",
			"args",
			"SpawnCom",
			"SpawnCm",
			"-I",
			"'I'",
			"'-I'",
			"'-I?",
			"'-I'",
			"-I",
			"document",
			"global\\.",
			"outputName",
			"ResponseData",
			"dirs\\[",
			"dirs =",
			"'Request",
			"data'",
			"LoadFile",
			"LoadDoc",
			"file,",
			"file:",
			"POST files",
			"main",
			"fs\\.",
			"fsPromises",
			"\\.read",
			"post",
			"readdir",
			"safeStat",
			"filesystem",
			"fsProm",
			"\\.read",
			"fsProm",
			"readFile",
			"fsProm",
			"getDescription",
			"fsPromises",
			"open",
			"fs\\.promises",
			"fs.promises",
			"'req'",
			"'req",
			"dirs =",
			"names",
			"app.use",
			"util",
			"runMount",
			"getIterators",
			"GetFilesList",
			"files",
			"'data'",
			"POINT_METHOD_NORM",
			"fromAngle",
			"\\n\\n\\n",
			"^}$",
			"std::vector",
			"C<",
			"gif_write",
			"join",
			"paletteApply",
			"js_error_print",
			"Failed loading",
			"fs.open",
			"console.log",
			"'unhandled'",
			"'dst'",
			"invert",
			"JS_EValFunction",
			"js_color_read",
			"'s'",
			"over",
			"'s'",
			"Timers",
			"js_import_load",
			"import.*repl",
			"rec->MOdule_Func",
			"resolved"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask",
			"a.push(\\1);"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5585,
						"regions":
						{
						},
						"selection":
						[
							[
								730,
								730
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/main.js",
							"function_name_status_row": -1,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									8625,
									8630
								],
								[
									8812,
									8818
								],
								[
									8876,
									8881
								],
								[
									8934,
									8938
								],
								[
									9012,
									9016
								],
								[
									9038,
									9047
								],
								[
									9706,
									9725
								],
								[
									9846,
									9850
								],
								[
									10230,
									10254
								],
								[
									10295,
									10316
								],
								[
									10318,
									10323
								],
								[
									10331,
									10336
								],
								[
									10358,
									10393
								],
								[
									10507,
									10525
								],
								[
									10607,
									10612
								],
								[
									10804,
									10825
								],
								[
									10958,
									10976
								],
								[
									11655,
									11680
								],
								[
									11726,
									11744
								],
								[
									12720,
									12747
								],
								[
									13108,
									13133
								],
								[
									13492,
									13526
								],
								[
									14042,
									14074
								],
								[
									14249,
									14259
								],
								[
									14392,
									14402
								],
								[
									14525,
									14535
								],
								[
									14706,
									14730
								],
								[
									14789,
									14838
								],
								[
									15079,
									15101
								],
								[
									15108,
									15132
								],
								[
									15140,
									15169
								],
								[
									15754,
									15806
								],
								[
									16259,
									16263
								],
								[
									16290,
									16295
								],
								[
									16730,
									16816
								],
								[
									17014,
									17036
								],
								[
									17549,
									17581
								],
								[
									17909,
									17943
								],
								[
									18058,
									18063
								],
								[
									18088,
									18124
								],
								[
									18337,
									18362
								],
								[
									18553,
									18578
								],
								[
									18633,
									18637
								],
								[
									18692,
									18696
								],
								[
									19143,
									19160
								],
								[
									19354,
									19369
								],
								[
									19492,
									19509
								],
								[
									19561,
									19565
								],
								[
									19610,
									19614
								],
								[
									19645,
									19649
								],
								[
									19692,
									19697
								],
								[
									19784,
									19803
								],
								[
									20018,
									20053
								],
								[
									20091,
									20099
								],
								[
									20168,
									20172
								],
								[
									20735,
									20739
								],
								[
									20798,
									20802
								],
								[
									21388,
									21394
								],
								[
									21569,
									21573
								],
								[
									21594,
									21598
								],
								[
									21633,
									21637
								],
								[
									21902,
									21915
								],
								[
									22043,
									22047
								],
								[
									22248,
									22264
								],
								[
									22530,
									22535
								],
								[
									22648,
									22657
								],
								[
									22729,
									22738
								],
								[
									22815,
									22824
								],
								[
									23464,
									23486
								],
								[
									23663,
									23723
								],
								[
									23972,
									23992
								],
								[
									24003,
									24012
								],
								[
									24067,
									24079
								],
								[
									24125,
									24136
								],
								[
									24225,
									24256
								],
								[
									24578,
									24611
								],
								[
									25690,
									25743
								],
								[
									25794,
									25807
								],
								[
									25889,
									25932
								],
								[
									26011,
									26015
								],
								[
									26144,
									26151
								],
								[
									26178,
									26185
								],
								[
									26263,
									26284
								],
								[
									26580,
									26622
								],
								[
									26745,
									26766
								],
								[
									27026,
									27071
								],
								[
									27264,
									27334
								],
								[
									27783,
									27808
								],
								[
									27831,
									27835
								],
								[
									27855,
									27868
								],
								[
									27984,
									28056
								],
								[
									28365,
									28374
								],
								[
									28806,
									28871
								],
								[
									28958,
									28984
								],
								[
									29230,
									29255
								],
								[
									29278,
									29282
								],
								[
									29302,
									29315
								],
								[
									29369,
									29425
								],
								[
									29427,
									29433
								],
								[
									29442,
									29444
								],
								[
									29469,
									29476
								],
								[
									29500,
									29594
								],
								[
									29601,
									29625
								],
								[
									29688,
									29715
								],
								[
									29724,
									29744
								],
								[
									29879,
									29883
								],
								[
									30070,
									30089
								],
								[
									30173,
									30192
								],
								[
									30289,
									30304
								],
								[
									31198,
									31213
								],
								[
									31313,
									31328
								],
								[
									32009,
									32050
								],
								[
									32255,
									32259
								],
								[
									32289,
									32300
								],
								[
									32383,
									32403
								],
								[
									32666,
									32690
								],
								[
									32748,
									32788
								],
								[
									33160,
									33179
								],
								[
									33230,
									33249
								],
								[
									34111,
									34139
								],
								[
									34358,
									34370
								],
								[
									34407,
									34419
								],
								[
									34930,
									34978
								],
								[
									35203,
									35209
								],
								[
									35359,
									35364
								],
								[
									35390,
									35397
								],
								[
									35460,
									35465
								],
								[
									35497,
									35504
								],
								[
									36140,
									36156
								],
								[
									36279,
									36283
								],
								[
									36791,
									36799
								],
								[
									37242,
									37250
								],
								[
									37303,
									37308
								],
								[
									37349,
									37357
								],
								[
									37497,
									37502
								],
								[
									37589,
									37605
								],
								[
									39281,
									39286
								],
								[
									39919,
									39970
								],
								[
									40394,
									40399
								],
								[
									40418,
									40423
								],
								[
									40731,
									40748
								],
								[
									40924,
									40930
								],
								[
									41078,
									41098
								],
								[
									41175,
									41205
								],
								[
									41381,
									41389
								],
								[
									41493,
									41504
								],
								[
									41620,
									41624
								],
								[
									42361,
									42402
								],
								[
									43025,
									43048
								],
								[
									43637,
									43641
								],
								[
									43785,
									43789
								],
								[
									44301,
									44305
								],
								[
									44320,
									44350
								],
								[
									44403,
									44407
								],
								[
									44426,
									44456
								],
								[
									44515,
									44519
								],
								[
									44543,
									44567
								],
								[
									44632,
									44636
								],
								[
									44676,
									44700
								],
								[
									44817,
									44821
								],
								[
									44860,
									44864
								],
								[
									44939,
									44943
								],
								[
									44982,
									44986
								],
								[
									45084,
									45088
								],
								[
									45446,
									45481
								],
								[
									45592,
									45605
								],
								[
									46046,
									46086
								],
								[
									46137,
									46146
								],
								[
									46167,
									46178
								],
								[
									46270,
									46281
								],
								[
									46327,
									46383
								],
								[
									46390,
									46396
								],
								[
									46478,
									46498
								],
								[
									46545,
									46603
								],
								[
									46610,
									46616
								],
								[
									46659,
									46666
								],
								[
									46683,
									46704
								],
								[
									46766,
									46777
								],
								[
									47007,
									47025
								],
								[
									47065,
									47071
								],
								[
									47104,
									47132
								],
								[
									47170,
									47192
								],
								[
									47277,
									47301
								],
								[
									47302,
									47316
								],
								[
									48438,
									48471
								],
								[
									48480,
									48481
								],
								[
									48533,
									48557
								],
								[
									48598,
									48629
								],
								[
									48638,
									48639
								],
								[
									48883,
									48926
								],
								[
									49245,
									49272
								],
								[
									49566,
									49585
								],
								[
									49798,
									49814
								],
								[
									50138,
									50158
								],
								[
									51053,
									51100
								],
								[
									51483,
									51498
								],
								[
									51715,
									51728
								],
								[
									52005,
									52018
								],
								[
									52224,
									52237
								],
								[
									52461,
									52467
								],
								[
									52517,
									52538
								],
								[
									56273,
									56284
								],
								[
									57120,
									57124
								],
								[
									57573,
									57578
								],
								[
									57732,
									57746
								],
								[
									57775,
									57780
								],
								[
									57908,
									57929
								],
								[
									57987,
									57992
								],
								[
									58100,
									58121
								],
								[
									58346,
									58359
								],
								[
									58360,
									58387
								],
								[
									58528,
									58551
								],
								[
									58833,
									58848
								],
								[
									58873,
									58890
								],
								[
									58957,
									58965
								],
								[
									59038,
									59043
								],
								[
									59149,
									59173
								],
								[
									59820,
									59847
								],
								[
									59943,
									59947
								],
								[
									60312,
									60348
								],
								[
									60453,
									60462
								],
								[
									60497,
									60508
								],
								[
									60569,
									60583
								],
								[
									61168,
									61172
								],
								[
									61857,
									61865
								],
								[
									61981,
									61989
								],
								[
									62109,
									62117
								],
								[
									62232,
									62240
								],
								[
									62297,
									62305
								],
								[
									62777,
									62785
								],
								[
									62970,
									63017
								],
								[
									63163,
									63176
								],
								[
									63339,
									63357
								],
								[
									63525,
									63529
								],
								[
									63601,
									63608
								],
								[
									63856,
									63875
								],
								[
									63907,
									63925
								],
								[
									64451,
									64471
								],
								[
									64796,
									64813
								],
								[
									65021,
									65039
								],
								[
									65316,
									65339
								],
								[
									65790,
									65807
								],
								[
									65899,
									65907
								],
								[
									66126,
									66140
								],
								[
									66323,
									66363
								],
								[
									66428,
									66442
								],
								[
									67017,
									67033
								],
								[
									67071,
									67146
								],
								[
									67397,
									67418
								],
								[
									67527,
									67531
								],
								[
									68010,
									68024
								],
								[
									68328,
									68332
								],
								[
									68404,
									68408
								],
								[
									68690,
									68707
								],
								[
									68875,
									68883
								],
								[
									69081,
									69085
								],
								[
									69181,
									69196
								],
								[
									69442,
									69446
								],
								[
									69653,
									69670
								],
								[
									69762,
									69777
								],
								[
									70575,
									70587
								],
								[
									70594,
									70607
								],
								[
									70645,
									70660
								],
								[
									70764,
									70784
								],
								[
									70964,
									70991
								],
								[
									71045,
									71057
								],
								[
									71175,
									71183
								],
								[
									71632,
									71640
								],
								[
									72462,
									72471
								],
								[
									72706,
									72713
								],
								[
									72812,
									72832
								],
								[
									73019,
									73039
								],
								[
									73405,
									73415
								],
								[
									74218,
									74222
								],
								[
									74318,
									74322
								],
								[
									74357,
									74371
								],
								[
									74628,
									74635
								],
								[
									77025,
									77057
								],
								[
									77566,
									77570
								],
								[
									77835,
									77839
								],
								[
									77907,
									77911
								],
								[
									77995,
									78002
								],
								[
									78081,
									78085
								],
								[
									79159,
									79205
								],
								[
									79672,
									79681
								],
								[
									80753,
									80768
								],
								[
									80947,
									80961
								],
								[
									81090,
									81104
								],
								[
									81246,
									81260
								],
								[
									82248,
									82266
								],
								[
									82464,
									82487
								],
								[
									82529,
									82544
								],
								[
									82900,
									82915
								],
								[
									83328,
									83348
								],
								[
									83830,
									83848
								],
								[
									84564,
									84573
								],
								[
									84616,
									84620
								],
								[
									84832,
									84870
								],
								[
									85045,
									85068
								],
								[
									85212,
									85217
								],
								[
									85256,
									85266
								],
								[
									85430,
									85434
								],
								[
									85581,
									85585
								],
								[
									85624,
									85629
								],
								[
									86034,
									86038
								],
								[
									86077,
									86091
								],
								[
									86095,
									86109
								],
								[
									86116,
									86120
								],
								[
									86141,
									86156
								],
								[
									86212,
									86237
								],
								[
									86369,
									86380
								],
								[
									86430,
									86435
								],
								[
									86495,
									86500
								],
								[
									86955,
									86965
								],
								[
									87079,
									87096
								],
								[
									87109,
									87113
								],
								[
									87303,
									87307
								],
								[
									87475,
									87496
								],
								[
									88642,
									88646
								],
								[
									88752,
									88756
								],
								[
									89050,
									89078
								],
								[
									89529,
									89533
								],
								[
									89989,
									89998
								],
								[
									90130,
									90139
								],
								[
									90243,
									90251
								],
								[
									90757,
									90766
								],
								[
									90915,
									90919
								],
								[
									90984,
									91010
								],
								[
									91655,
									91660
								],
								[
									91967,
									91998
								],
								[
									93035,
									93056
								],
								[
									93261,
									93289
								],
								[
									93656,
									93699
								],
								[
									95029,
									95038
								],
								[
									95918,
									95922
								],
								[
									96662,
									96689
								],
								[
									96812,
									96825
								]
							],
							"symlist":
							[
								"() =>",
								"  res =>",
								"() =>",
								"  r =>",
								"  r =>",
								"  entries()",
								"GetProject = arg =>",
								"  p =>",
								"  add = (arr, ...items) =>",
								"  useSlot = (arr, i) =>",
								"() =>",
								"\tv =>",
								"  trklGetSet = (get, set) => value =>",
								"MouseEvents = h =>",
								"() =>",
								"(parent, delegate) =>",
								"  append_to(elem, p)",
								"DrawSVG(...args)",
								"  append_to(elem, p)",
								"  adjustViewBox(e)",
								"  calcViewBox(box)",
								"  setViewBox(svgOwner, box)",
								"ElementToXML = (e, predicate) =>",
								"\t(v, k) =>",
								"\t(v, k) =>",
								"\t(v, k) =>",
								"  readFile(filename)",
								"  writeFile(filename, data, overwrite = true)",
								"  exists(filename)",
								"  realpath(filename)",
								"LoadFile(file)",
								"SaveFile(filename, data, contentType)",
								"  s =>",
								"() =>",
								"SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
								"  predicate = element =>",
								"LoadSVG(filename)",
								"LoadImage(filename)",
								"() =>",
								"RenderComponent(component)",
								"ModifyColors = fn => e =>",
								"FindLayer = name_or_id =>",
								"  n =>",
								"  l =>",
								"(id = '#geom') =>",
								"(props = {}) =>",
								"  maxZIndex = () =>",
								"  e =>",
								"  z =>",
								"  z =>",
								"() =>",
								"  randomColor = () =>",
								"DrawArc(start, end, angle)",
								"  props =>",
								"  p =>",
								"  a =>",
								"  m =>",
								"  hex =>",
								"  p =>",
								"  p =>",
								"  p =>",
								"({ x, y }) =>",
								"  a =>",
								"({ x, y }, i) =>",
								"\te =>",
								"(l, i) =>",
								"(p, i) =>",
								"(p, i) =>",
								"  add = (level, item) =>",
								"RecurseBinaryNode(node, parent = null, depth = 0)",
								"(nodes, i, level) =>",
								"  fx = j =>",
								"(node, j) =>",
								"\titem =>",
								"DrawNode(x, y, node)",
								"DrawEdge(item, parent)",
								"GetPaths(query, parent = project.svgElement)",
								"\t(a, e) =>",
								"PathToPolylines(path, step = 0.01)",
								"  p =>",
								"  poly =>",
								"  poly =>",
								"\t(p, d, set, stop) =>",
								"PathToPolyline(path, step = 0.01)",
								"\t(p, d, set, stop) =>",
								"PathsToPolylines(paths, step = 0.01)",
								"OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
								"  .toPolylines = function()",
								"  p =>",
								"({ X, Y }) =>",
								"OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
								"(a, p) =>",
								"ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
								"  add = (p, clip = false) =>",
								"  .toPolylines = function()",
								"  p =>",
								"({ X, Y }) =>",
								"  saveItemStates(itemList, get = item => Util.is.",
								"(item.",
								"))",
								"  item =>",
								"  restoreItemStates( itemStates, /*prettier-ignore */ set = (item, value) => item.",
								"(value ? 'yes' : 'no') )",
								"EagleMaps(project)",
								"  transformPath = p =>",
								"  e =>",
								"  dom2eagle = node =>",
								"  eagle2dom = elem =>",
								"  path2dom = p =>",
								"(key, value) =>",
								"(key, value) =>",
								"PackageNames(doc = project.doc)",
								"  e =>",
								"([e, b]) =>",
								"([e, w, h, m, v]) =>",
								"({ index, ...match }) =>",
								"\t({ s, v, indexes }, match, i) =>",
								"([token, index]) =>",
								"([token, index]) =>",
								"NextDocument(n = 1)",
								"\t(idx, i) =>",
								"\t(idx, i) =>",
								"LoadDocument(project, parentElem)",
								"  err =>",
								"() =>",
								"\tent =>",
								"() =>",
								"\tent =>",
								"  renamePackages()",
								"  a =>",
								"  value =>",
								"  layer =>",
								"() =>",
								"  layer =>",
								"() =>",
								"  fn = function(v)",
								"() =>",
								"  .makeGroup = function({ transform, ...props } = {})",
								"  id =>",
								"() =>",
								"  xx()",
								"\t() =>",
								"(transform)",
								"\t(tag, attr, children = []) =>",
								"  value =>",
								"() =>",
								"Rect",
								"ChooseDocument(project, i)",
								"GenerateVoronoi = () =>",
								"Rect",
								"  p =>",
								"  e =>",
								"({ lSite, rSite, ...edge }) =>",
								"  e =>",
								"({ lSite, rSite, ...edge }) =>",
								"  e =>",
								"({ va, vb, ...edge }) =>",
								"  v =>",
								"  add = (arr, ...items) =>",
								"  l =>",
								"  t =>",
								"  l =>",
								"  t =>",
								"  p =>",
								"\t(acc, { site, halfedges }) =>",
								"({ site }) =>",
								"PackageChildren(element, layer)",
								"(c, i) =>",
								"([i, p]) =>",
								"([i, e]) =>",
								"ElementChildren(layer = 'tPlace', rfn = ent => ",
								"(ent))",
								"([name, element]) =>",
								"ElementGeometries(layer = 'tPlace', rfn = ent => ",
								"(ent))",
								"\tent =>",
								"([name, children]) =>",
								"([i, e]) =>",
								"([name, lines]) =>",
								"  pts =>",
								"([name, lines, polygons]) =>",
								"NewPath(path)",
								"MakeFitAction = index =>",
								"  event =>",
								"ZoomFactor(val = config.",
								")",
								"ZoomLog(factor)",
								"AdjustZoom(l = config.",
								")",
								"CreateGrblSocket = (port = 'tnt1') =>",
								"HandleMessage(msg)",
								"\tpointStr =>",
								"  socketFn = () =>",
								"  .send = (...args) =>",
								"AuthorizationDialog = ({ onAuth, ...props }) =>",
								"  onSubmit: () =>",
								"  onInput: e =>",
								"  onInput: e =>",
								"  onClick: e =>",
								"  arg =>",
								"  .onload = () =>",
								"  response =>",
								"  e =>",
								"\tv =>",
								"TestArc: () =>",
								"() =>",
								"(push, stop) =>",
								"() =>",
								"(push, stop) =>",
								"\ttarget =>",
								"\t(key, modifiers = 0) =>",
								"  .focusSearch = state =>",
								"  children: () =>",
								"  geometries: () =>",
								"  value =>",
								"() =>",
								"  testComponent = props =>",
								"File(obj, i)",
								"File",
								"File.prototype.toString = function()",
								"(a, b) =>",
								"(obj, i) =>",
								"(acc, file) =>",
								"  i =>",
								"  value =>",
								"  value =>",
								"  value =>",
								"  value =>",
								"  value =>",
								"  value =>",
								"  updateIfChanged = (trkl, newValue, callback) =>",
								"\t(elem, i) =>",
								"  changeInput = e =>",
								"  p =>",
								"\targ =>",
								"Consumer = props =>",
								"()",
								"  log(type, time, msg)",
								"Logger = props =>",
								"()",
								"([type, d, t, m], i) =>",
								"Dumper = props =>",
								"  value =>",
								"([k, v], i) =>",
								"Commander = ({ onCommand, ...props }) =>",
								"  handler = e =>",
								"  toggle = trkl =>",
								"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
								"  setVisible = value =>",
								"  e =>",
								"\te =>",
								"  l =>",
								"  l =>",
								"\t(item, value) =>",
								"\titem =>",
								"  l =>",
								"([l, state]) =>",
								"  e =>",
								"  onMouseMove: e =>",
								"  onMouseUp: e =>",
								"DocumentList",
								"  constructor()",
								"(push, stop) =>",
								"  add(name, component)",
								"  addEntry([name, component])",
								"  remove(name)",
								"  update()",
								"  fn: e =>",
								"  fn: () =>",
								"  open =>",
								"\tprops =>",
								"\tprops =>",
								"  e =>",
								"  i =>",
								"  i =>",
								"({ coord }) =>",
								"  side =>",
								"  create: (project, props = {}) =>",
								"  a =>",
								"  e =>",
								"  e =>",
								"  name =>",
								"  e =>",
								"  makeLayerName(name, side)",
								"  fn: () =>",
								"  onChange(event)",
								"\tprops =>",
								"\tprops =>",
								"\tprops =>",
								"(e, p, i) =>",
								"  makeSortCompare: key =>",
								"\tfunction(a, b)",
								"\tfunction(a, b)",
								"  onCommand: cmdStr =>",
								"  handleChange: e =>",
								"\tevent =>",
								"  e =>",
								"MoveEvent(event, prevEvent)",
								"WalkUp(e)",
								"\te =>",
								"\tz =>",
								"  p =>",
								"  e =>",
								"\te =>",
								"  e =>",
								"\tv =>",
								"\tl =>",
								"  e =>",
								"\t() =>",
								"\t(e, depth) =>",
								"\tclasses =>",
								"\te =>",
								"\te =>",
								"\t(a, b) =>",
								"\t(a, b) =>",
								"Node",
								"  e =>",
								"\t(p, d, set, stop) =>",
								"  e =>",
								"  e =>",
								"TouchEvent(event)",
								"  e =>",
								"(p, i) =>",
								"(a, b) =>",
								"\tsize =>",
								"  border =>",
								"  r =>",
								"  mod(n, m)",
								"() =>",
								"\t(pos, last, first) =>",
								"  cancel()",
								"  .oncontextmenu = function(e)",
								"  .processEvents = function eventLoop()",
								"\tevent =>",
								"  e =>",
								"  onRuntimeInitialized: () =>",
								"  print: txt =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637938280.83,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 45.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15411,
						"regions":
						{
						},
						"selection":
						[
							[
								3092,
								3092
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 182,
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637912557.58,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2582.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "main.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96869,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										88581,
										88590
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										88485,
										88485
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45206,
										45210
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										45189,
										45189
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21221,
										21228
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										23312,
										23321
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										23299,
										23299
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										23376,
										23380
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										23330,
										23330
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										45348,
										45368
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										45249,
										45249
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22787,
										22791
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										22713,
										22713
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11269,
										11273
									],
									[
										22386,
										22391
									],
									[
										22920,
										22924
									],
									[
										23091,
										23095
									],
									[
										24333,
										24337
									],
									[
										24903,
										24907
									],
									[
										28612,
										28617
									],
									[
										28688,
										28693
									],
									[
										44883,
										44887
									],
									[
										78190,
										78202
									],
									[
										85973,
										85977
									],
									[
										87970,
										87974
									],
									[
										88124,
										88128
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										11190,
										11190
									],
									[
										22371,
										22371
									],
									[
										22905,
										22905
									],
									[
										23078,
										23078
									],
									[
										24318,
										24318
									],
									[
										24888,
										24888
									],
									[
										28557,
										28557
									],
									[
										28637,
										28637
									],
									[
										44838,
										44838
									],
									[
										78147,
										78147
									],
									[
										85913,
										85913
									],
									[
										87917,
										87917
									],
									[
										88056,
										88056
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21458,
										21465
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21262,
										21269
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21469,
										21476
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21210,
										21217
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21284,
										21291
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21273,
										21280
									]
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										79776,
										79793
									]
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
									[
										79755,
										79755
									]
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
									[
										11486,
										11507
									]
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
									[
										11439,
										11439
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										67845,
										67849
									],
									[
										70238,
										70242
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										67789,
										67789
									],
									[
										70170,
										70170
									]
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21232,
										21239
									]
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21306,
										21313
									]
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21447,
										21454
									]
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21425,
										21432
									]
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21436,
										21443
									]
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21295,
										21302
									]
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21188,
										21195
									]
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21199,
										21206
									]
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										7148,
										7151
									],
									[
										19416,
										19420
									],
									[
										28780,
										28783
									],
									[
										45005,
										45009
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										7137,
										7137
									],
									[
										19403,
										19403
									],
									[
										28716,
										28716
									],
									[
										44960,
										44960
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45646,
										45650
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										45625,
										45625
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										79735,
										79752
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
										79713,
										79713
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										86683,
										86690
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										86666,
										86666
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										22898,
										22902
									],
									[
										88358,
										88362
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										22885,
										22885
									],
									[
										88335,
										88335
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										24353,
										24357
									],
									[
										64193,
										64198
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										24340,
										24340
									],
									[
										64175,
										64175
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								18058,
								18063
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 568,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637938179.54,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9219.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/hooks.mjs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4061,
						"regions":
						{
						},
						"selection":
						[
							[
								38,
								42
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637912558.16,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/dom/preactComponent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9972,
						"regions":
						{
						},
						"selection":
						[
							[
								606,
								606
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637912017.85,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/compat.mjs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12196,
						"regions":
						{
						},
						"selection":
						[
							[
								481,
								481
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637911895.58,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/preact.mjs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23347,
						"regions":
						{
						},
						"selection":
						[
							[
								23014,
								23014
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 712,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637911903.61,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 12689.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/preact.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40481,
						"regions":
						{
						},
						"selection":
						[
							[
								2405,
								2458
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 122,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637917130.44,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1673.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "components.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42220,
						"regions":
						{
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										34281,
										34285
									],
									[
										34450,
										34454
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										34252,
										34252
									],
									[
										34420,
										34420
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										34274,
										34279
									],
									[
										34413,
										34418
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										34252,
										34252
									],
									[
										34383,
										34383
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										9873,
										9878
									],
									[
										37047,
										37051
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										9846,
										9846
									],
									[
										37030,
										37030
									]
								],
								"scope": "col_gutter"
							},
							"col_42AB3DFF":
							{
								"flags": 16,
								"regions":
								[
									[
										14829,
										14836
									]
								],
								"scope": "col_42AB3DFF"
							},
							"col_42AB3DFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_42AB3DFF_circle.png",
								"regions":
								[
									[
										14817,
										14817
									]
								],
								"scope": "col_gutter"
							},
							"col_444443FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11366,
										11373
									],
									[
										13587,
										13594
									],
									[
										15178,
										15185
									],
									[
										16484,
										16491
									]
								],
								"scope": "col_444443FF"
							},
							"col_444443FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_444443FF_circle.png",
								"regions":
								[
									[
										11354,
										11354
									],
									[
										13575,
										13575
									],
									[
										15166,
										15166
									],
									[
										16474,
										16474
									]
								],
								"scope": "col_gutter"
							},
							"col_5599FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										18323,
										18327
									]
								],
								"scope": "col_5599FFFF"
							},
							"col_5599FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_5599FFFF_circle.png",
								"regions":
								[
									[
										18313,
										18313
									]
								],
								"scope": "col_gutter"
							},
							"col_B4B3B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11437,
										11444
									],
									[
										13661,
										13668
									]
								],
								"scope": "col_B4B3B3FF"
							},
							"col_B4B3B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B4B3B3FF_circle.png",
								"regions":
								[
									[
										11382,
										11382
									],
									[
										13603,
										13603
									]
								],
								"scope": "col_gutter"
							},
							"col_BF272FFF":
							{
								"flags": 16,
								"regions":
								[
									[
										12643,
										12650
									]
								],
								"scope": "col_BF272FFF"
							},
							"col_BF272FFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_BF272FFF_circle.png",
								"regions":
								[
									[
										12631,
										12631
									]
								],
								"scope": "col_gutter"
							},
							"col_DEDD00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										15252,
										15259
									]
								],
								"scope": "col_DEDD00FF"
							},
							"col_DEDD00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DEDD00FF_circle.png",
								"regions":
								[
									[
										15194,
										15194
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										34269,
										34272
									],
									[
										34378,
										34381
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										34252,
										34252
									],
									[
										34352,
										34352
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10431,
										10435
									],
									[
										10889,
										10893
									],
									[
										13105,
										13109
									],
									[
										15692,
										15696
									],
									[
										16010,
										16014
									],
									[
										16754,
										16758
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										10315,
										10315
									],
									[
										10877,
										10877
									],
									[
										13093,
										13093
									],
									[
										15682,
										15682
									],
									[
										16000,
										16000
									],
									[
										16744,
										16744
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								5784,
								5821
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 251,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637917132.9,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 3927.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/hooks/useEvent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637913359.85,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.754262567352,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"useEve",
				"lib/hooks/useEvent.js"
			],
			[
				"ompat.mjs",
				"lib/compat.mjs"
			],
			[
				".mjs",
				"lib/compat.mjs"
			],
			[
				"hooks.mj",
				"lib/hooks.mjs"
			],
			[
				"preact.mjs",
				"preact.mjs"
			],
			[
				"hooks.",
				"lib/hooks.mjs"
			],
			[
				"compat.mj",
				"lib/compat.mjs"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"components.",
				"components.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"tlite.css",
				"tlite.css"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"schema",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"components",
				"components.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"align.js",
				"lib/geom/align.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"cvVid",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"cvpip",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"imagepip",
				"imagePipeline.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"usetrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"fetch.j",
				"lib/fetch.js"
			],
			[
				"comm",
				"commands.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"js_Cv",
				"qjs-opencv/js_cv.cpp"
			],
			[
				"gif_wr",
				"qjs-opencv/gif_write.hpp"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"js_mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"image-he",
				"image-helpers.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-misc.c",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-mmap",
				"quickjs/qjs-modules/quickjs-mmap.c"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-ins",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"webSOc",
				"webSocket.js"
			],
			[
				"timers.",
				"lib/repeater/timers.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvGUI",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"js_Mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"-helper",
				"io-helpers.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"quickjs-lib",
				"quickjs/quickjs-libc.c"
			],
			[
				"test-repe",
				"test-repeater.js"
			],
			[
				"repea",
				"lib/repeater/repeater.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"jpeg.js",
				"lib/jpeg.js"
			],
			[
				"image-h",
				"image-helpers.js"
			],
			[
				"estree.js",
				"lib/ecmascript/estree.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"terminal",
				"qjs-modules/lib/terminal.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			],
			[
				"js_cont",
				"qjs-opencv/js_contour.hpp"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"path",
				"lib/svg/path.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"svgpa",
				"lib/svg/path-parser.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"test-clip",
				"test-clipper.js"
			],
			[
				"13",
				"opencv/disabled/code10-3.cpp"
			],
			[
				"test-svg",
				"test-svgpath.js"
			],
			[
				"test-svgp",
				"test-svgpath.js"
			],
			[
				"svg",
				"src/simple_svg_writer.hpp"
			],
			[
				"player-sy",
				"static/svg/player-symbols.svg"
			],
			[
				".svg",
				"restart.svg"
			],
			[
				"server",
				"debugger-server.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"sockets.c",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debuggerprot",
				"debuggerprotocol.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.cs",
				"static/debugger.css"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			],
			[
				"debugger-c",
				"debugger-client.js"
			],
			[
				"test-jsl",
				"test-jslexer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
