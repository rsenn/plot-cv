{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PaStream",
				"PaStreamParameters"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"PaE",
				"PaHostErrorInfo"
			],
			[
				"hostApi",
				"hostApiSpecificStreamInfo"
			],
			[
				"host",
				"hostApiType"
			],
			[
				"defaultHi",
				"defaultHighOutputLatency"
			],
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "WebSocket\n  sendMessage(msg)\n  source =>\n  line =>\n  line =>\ne =>\n() =>\ne =>\nSourceLine = ({ lineno, text, active, children }) =>\nSourceText = ({ text, filename }) =>\n  numDigits = n =>\n(line, i) =>\n([type, token]) =>\nSourceFile = props =>\nresp =>\nLoadSource(filename)\nStart(args, address)\nConnect(address)\nInitiate(command, address, connect = false, args)\nTokenizeJS(data, filename)\n(acc, [type, c]) =>\n(acc, l) =>\nCreateSocket(endpoint)\n  onOpen()\n  get ws()\n  process(callback)\n  .sendMessage = function(msg)\nGetVariables(ref = 0)\nUpdatePosition()\nStepIn()\nStepOut()\nNext()\nContinue()\nPause()\nEvaluate(expression)\nStackTrace()\nSendRequest(command, args = {})\n(resolve, reject) =>\nRenderUI()",
			"settings":
			{
				"buffer_size": 693,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					304,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					305,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
						"symkeys":
						[
							[
								6,
								61
							],
							[
								91,
								97
							],
							[
								113,
								134
							],
							[
								182,
								212
							],
							[
								272,
								297
							],
							[
								344,
								358
							],
							[
								388,
								406
							],
							[
								435,
								478
							],
							[
								738,
								753
							],
							[
								828,
								852
							],
							[
								910,
								936
							],
							[
								979,
								1005
							],
							[
								1113,
								1124
							],
							[
								1201,
								1229
							],
							[
								1347,
								1379
							],
							[
								1495,
								1510
							],
							[
								1617,
								1631
							],
							[
								1755,
								1773
							],
							[
								1880,
								1893
							],
							[
								2071,
								2101
							],
							[
								2113,
								2131
							],
							[
								2143,
								2158
							],
							[
								2170,
								2188
							],
							[
								2268,
								2286
							],
							[
								2331,
								2338
							],
							[
								2406,
								2412
							],
							[
								2454,
								2466
							],
							[
								2476,
								2488
							],
							[
								2505,
								2526
							],
							[
								2568,
								2580
							],
							[
								2637,
								2649
							],
							[
								2678,
								2691
							],
							[
								2774,
								2786
							],
							[
								2797,
								2809
							],
							[
								2828,
								2853
							],
							[
								2943,
								2955
							],
							[
								3043,
								3055
							],
							[
								3092,
								3120
							],
							[
								3326,
								3332
							],
							[
								3374,
								3379
							],
							[
								3402,
								3432
							],
							[
								3547,
								3588
							],
							[
								3723,
								3727
							],
							[
								3762,
								3771
							],
							[
								3830,
								3855
							],
							[
								3860,
								3888
							],
							[
								4136,
								4145
							],
							[
								4238,
								4271
							],
							[
								4284,
								4294
							],
							[
								4354,
								4380
							],
							[
								4806,
								4843
							],
							[
								5492,
								5502
							],
							[
								5545,
								5572
							],
							[
								5690,
								5708
							],
							[
								5758,
								5764
							],
							[
								6048,
								6062
							],
							[
								6258,
								6297
							],
							[
								6439,
								6453
							],
							[
								6875,
								6879
							],
							[
								6973,
								6993
							],
							[
								7084,
								7092
							],
							[
								7150,
								7161
							],
							[
								7222,
								7234
							],
							[
								7285,
								7299
							],
							[
								7410,
								7428
							],
							[
								7541,
								7557
							],
							[
								7757,
								7767
							],
							[
								8267,
								8326
							],
							[
								8386,
								8399
							],
							[
								8439,
								8445
							],
							[
								8466,
								8486
							],
							[
								8576,
								8580
							],
							[
								8901,
								8907
							],
							[
								8971,
								8987
							],
							[
								9068,
								9097
							],
							[
								9202,
								9206
							],
							[
								9286,
								9295
							],
							[
								9325,
								9333
							],
							[
								9525,
								9552
							],
							[
								9604,
								9611
							],
							[
								9690,
								9697
							],
							[
								9759,
								9786
							],
							[
								9892,
								9919
							],
							[
								9947,
								9985
							],
							[
								10046,
								10073
							],
							[
								10164,
								10170
							],
							[
								10236,
								10240
							],
							[
								10289,
								10293
							],
							[
								10329,
								10357
							],
							[
								10648,
								10673
							],
							[
								10720,
								10743
							],
							[
								10756,
								10774
							],
							[
								10886,
								10918
							],
							[
								10928,
								10967
							],
							[
								10980,
								11054
							],
							[
								11101,
								11119
							],
							[
								11218,
								11231
							],
							[
								11889,
								11929
							],
							[
								12089,
								12098
							],
							[
								12142,
								12178
							],
							[
								12348,
								12363
							],
							[
								12401,
								12410
							],
							[
								12515,
								12540
							],
							[
								12931,
								12940
							],
							[
								13192,
								13201
							],
							[
								13420,
								13439
							],
							[
								13691,
								13720
							],
							[
								13893,
								13913
							],
							[
								13969,
								13978
							],
							[
								14044,
								14057
							],
							[
								14080,
								14107
							],
							[
								14144,
								14175
							],
							[
								14272,
								14276
							],
							[
								14486,
								14503
							],
							[
								14572,
								14589
							],
							[
								14698,
								14721
							],
							[
								14804,
								14826
							],
							[
								15012,
								15025
							],
							[
								15150,
								15154
							],
							[
								15357,
								15375
							],
							[
								15413,
								15451
							],
							[
								15640,
								15646
							],
							[
								15672,
								15681
							],
							[
								15907,
								15916
							],
							[
								15921,
								15955
							],
							[
								16102,
								16120
							],
							[
								16170,
								16176
							],
							[
								16225,
								16242
							],
							[
								16505,
								16541
							],
							[
								16796,
								16801
							],
							[
								16889,
								16926
							],
							[
								17105,
								17138
							],
							[
								17220,
								17238
							],
							[
								17296,
								17302
							],
							[
								17327,
								17344
							],
							[
								17617,
								17631
							],
							[
								17817,
								17839
							],
							[
								17939,
								17961
							],
							[
								18135,
								18161
							],
							[
								18294,
								18314
							],
							[
								18412,
								18453
							],
							[
								18674,
								18685
							],
							[
								18715,
								18740
							],
							[
								18926,
								18936
							],
							[
								18973,
								18983
							],
							[
								19036,
								19045
							],
							[
								19146,
								19179
							],
							[
								19185,
								19223
							],
							[
								19356,
								19374
							],
							[
								19404,
								19419
							],
							[
								19446,
								19465
							],
							[
								19500,
								19519
							],
							[
								19554,
								19571
							],
							[
								19604,
								19624
							],
							[
								19673,
								19708
							],
							[
								19828,
								19873
							],
							[
								19965,
								19994
							],
							[
								20556,
								20566
							],
							[
								20700,
								20864
							],
							[
								21232,
								21353
							],
							[
								21599,
								21680
							],
							[
								22213,
								22242
							],
							[
								23057,
								23087
							],
							[
								23126,
								23130
							],
							[
								23217,
								23244
							],
							[
								23283,
								23291
							],
							[
								23371,
								23397
							],
							[
								23444,
								23473
							],
							[
								23531,
								23576
							],
							[
								23673,
								23678
							],
							[
								23721,
								23748
							],
							[
								23996,
								24056
							],
							[
								24265,
								24287
							],
							[
								24453,
								24475
							],
							[
								24709,
								24736
							],
							[
								24967,
								25014
							],
							[
								25693,
								25697
							],
							[
								25971,
								26006
							],
							[
								26028,
								26032
							],
							[
								26064,
								26068
							],
							[
								26090,
								26122
							],
							[
								26414,
								26439
							],
							[
								26440,
								26475
							],
							[
								26570,
								26595
							],
							[
								26596,
								26631
							]
						],
						"symlist":
						[
							"IdSequencer = (start = 0, typedArr = Uint32Array, a) =>",
							" () =>",
							"StringLength = str =>",
							"PadEnd = (str, n, ch = ' ') =>",
							"Color = (str, ...args) =>",
							"IsUpper = s =>",
							"Log = (...args) =>",
							"LogMethod = (className, method, ...args) =>",
							"Compact = () =>",
							"function isObject(value)",
							"function isFunction(value)",
							"function isThenable(value)",
							"Uint32Array",
							"function isTypedArray(value)",
							"function getPrototypeName(proto)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							"async bjson()",
							"encode: v =>",
							"decode: v =>",
							"async js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(connection)",
							"RPCApi",
							" o =>",
							" function RPCProxy(connection)",
							" function RPCObject(instance, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							" function EncodeValue(arg)",
							" function DecodeValue(arg, instances)",
							"Connection",
							"constructor(codec, verbose)",
							" (arg, ...args) =>",
							" () =>",
							"error(message)",
							"close(status = 1000, reason = 'closed')",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onopen()",
							"onconnect()",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"sendMessage(obj)",
							"Connection",
							" function FactoryEndpoint(classes, verbose, instances = {})",
							" (...args) =>",
							" () =>",
							"new(name, args = [])",
							"a =>",
							"list()",
							"delete(instance)",
							"(obj, method, params = []) =>",
							"a =>",
							"result =>",
							"error =>",
							"(obj, enumerable = true) =>",
							" obj =>",
							" obj =>",
							"(obj, enumerable = true) =>",
							" (proto, depth) =>",
							" (prop, obj, proto, depth) =>",
							"(obj, enumerable = true) =>",
							"sym =>",
							"v =>",
							"v =>",
							"(obj, property, instance) =>",
							"(obj, property, value) =>",
							" function instance(fn)",
							" (key, ...args) =>",
							" function members(pred = v => !",
							"(v), defaults = { maxDepth: Infinity })",
							" (obj, keyDescriptor = true, valueDescriptor = true, source = false, d) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							"function Respond(success, resultOrError)",
							"RPCServer",
							"constructor(methods, verbose, codec)",
							"get instances()",
							"cleanup()",
							"async processMessage(msg)",
							"RPCServer",
							"RPCClient",
							"processMessage(msg)",
							"async call(method, ...params)",
							"(resolve, reject) =>",
							"RPCClient",
							"FactoryClient",
							"constructor(verbose, codec)",
							"async new(className, ...params)",
							"a =>",
							"([key, value]) =>",
							"([key, value]) =>",
							"([key, value, desc]) =>",
							"get: (target, prop) =>",
							" (...args) =>",
							"a =>",
							"ownKeys: target =>",
							"getOwnPropertyDescriptor(target, prop)",
							" () =>",
							" proxy =>",
							"RPCSocket",
							"constructor(url, service, verbose)",
							" (arg, ...args) =>",
							" () =>",
							"get connections()",
							"listen(createSocket = MakeWebSocket)",
							"() =>",
							"connect(createSocket = MakeWebSocket)",
							"getCallbacks(ctor = this.service)",
							" (arg, ...args) =>",
							" () =>",
							"onConnect(socket)",
							"onOpen(socket)",
							"onMessage(socket, msg)",
							"onError(socket, error)",
							"onClose(socket, code, why)",
							"onPong(socket, data)",
							" function handle(sock, event, ...args)",
							"then: fn =>",
							" function remove(sock)",
							"get list()",
							"get last()",
							"RPCSocket",
							".WebSocket = function WebSocket()",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							"function hasHandler(obj, eventName)",
							"function callHandler(obj, eventName, ...args)",
							" function parseURL(urlOrPort)",
							"toString()",
							" function GetProperties(arg, method = Object.getOwnPropertyNames, pred = (proto, depth) => proto !== Object.prototype, propPred = (prop, obj, proto, depth) => true)",
							" function GetKeys(obj, pred = (proto, depth) => proto !== Object.prototype, propPred = (prop, obj, proto, depth) => true)",
							"function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							"function define(obj, ...args)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function RemoveFalsish(obj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							"n =>",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							" (url, verbosity = 1) =>",
							" (createSocket = MakeWebSocket) =>",
							" (url, verbosity = 1) =>",
							" (createSocket = MakeWebSocket) =>"
						]
					},
					"AQAAAAAAAAAAAAAAeg8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					306,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB6DwAASWRTZXF1ZW5jZXIgPSAoc3RhcnQgPSAwLCB0eXBlZEFyciA9IFVpbnQzMkFycmF5LCBhKSA9PgooKSA9PgpTdHJpbmdMZW5ndGggPSBzdHIgPT4KUGFkRW5kID0gKHN0ciwgbiwgY2ggPSAnICcpID0+CkNvbG9yID0gKHN0ciwgLi4uYXJncykgPT4KSXNVcHBlciA9IHMgPT4KTG9nID0gKC4uLmFyZ3MpID0+CkxvZ01ldGhvZCA9IChjbGFzc05hbWUsIG1ldGhvZCwgLi4uYXJncykgPT4KQ29tcGFjdCA9ICgpID0+CiAgaXNPYmplY3QodmFsdWUpCiAgaXNGdW5jdGlvbih2YWx1ZSkKICBpc1RoZW5hYmxlKHZhbHVlKQpVaW50MzJBcnJheQogIGlzVHlwZWRBcnJheSh2YWx1ZSkKICBnZXRQcm90b3R5cGVOYW1lKHByb3RvKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGJqc29uKCkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICBqcyh2ZXJib3NlID0gZmFsc2UpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjb25uZWN0aW9uKQpSUENBcGkKbyA9PgpSUENQcm94eShjb25uZWN0aW9uKQpSUENPYmplY3QoaW5zdGFuY2UsIGNvbm5lY3Rpb24pCiAgciA9PgpSUENPYmplY3QKUlBDRmFjdG9yeShhcGkpCkZhY3Rvcnkob3B0cykKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkucHJvdG90eXBlID0gZnVuY3Rpb24oKQpSUENGYWN0b3J5CkVuY29kZVZhbHVlKGFyZykKRGVjb2RlVmFsdWUoYXJnLCBpbnN0YW5jZXMpCkNvbm5lY3Rpb24KICBjb25zdHJ1Y3Rvcihjb2RlYywgdmVyYm9zZSkKKGFyZywgLi4uYXJncykgPT4KKCkgPT4KICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cyA9IDEwMDAsIHJlYXNvbiA9ICdjbG9zZWQnKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25vcGVuKCkKICBvbmNvbm5lY3QoKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShjb2RlLCB3aHkpCiAgc2VuZE1lc3NhZ2Uob2JqKQpDb25uZWN0aW9uCkZhY3RvcnlFbmRwb2ludChjbGFzc2VzLCB2ZXJib3NlLCBpbnN0YW5jZXMgPSB7fSkKKC4uLmFyZ3MpID0+CigpID0+CiAgbmV3KG5hbWUsIGFyZ3MgPSBbXSkKICBhID0+CiAgbGlzdCgpCiAgZGVsZXRlKGluc3RhbmNlKQoob2JqLCBtZXRob2QsIHBhcmFtcyA9IFtdKSA9PgogIGEgPT4KICByZXN1bHQgPT4KICBlcnJvciA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4Kb2JqID0+Cm9iaiA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4KKHByb3RvLCBkZXB0aCkgPT4KKHByb3AsIG9iaiwgcHJvdG8sIGRlcHRoKSA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9Pgoob2JqLCBwcm9wZXJ0eSwgaW5zdGFuY2UpID0+CihvYmosIHByb3BlcnR5LCB2YWx1ZSkgPT4KICBpbnN0YW5jZShmbikKKGtleSwgLi4uYXJncykgPT4KICBtZW1iZXJzKHByZWQgPSB2ID0+ICEKKHYpLCBkZWZhdWx0cyA9IHsgbWF4RGVwdGg6IEluZmluaXR5IH0pCihvYmosIGtleURlc2NyaXB0b3IgPSB0cnVlLCB2YWx1ZURlc2NyaXB0b3IgPSB0cnVlLCBzb3VyY2UgPSBmYWxzZSwgZCkgPT4KKHByb3RvLCBkZXB0aCkgPT4KKGFjYywga2V5KSA9PgpSZXNwb25kKHN1Y2Nlc3MsIHJlc3VsdE9yRXJyb3IpClJQQ1NlcnZlcgogIGNvbnN0cnVjdG9yKG1ldGhvZHMsIHZlcmJvc2UsIGNvZGVjKQogIGdldCBpbnN0YW5jZXMoKQogIGNsZWFudXAoKQogIHByb2Nlc3NNZXNzYWdlKG1zZykKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKG1zZykKICBjYWxsKG1ldGhvZCwgLi4ucGFyYW1zKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSUENDbGllbnQKRmFjdG9yeUNsaWVudAogIGNvbnN0cnVjdG9yKHZlcmJvc2UsIGNvZGVjKQogIG5ldyhjbGFzc05hbWUsIC4uLnBhcmFtcykKICBhID0+Cihba2V5LCB2YWx1ZV0pID0+Cihba2V5LCB2YWx1ZV0pID0+Cihba2V5LCB2YWx1ZSwgZGVzY10pID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wKSA9PgooLi4uYXJncykgPT4KICBhID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcCkKKCkgPT4KcHJveHkgPT4KUlBDU29ja2V0CiAgY29uc3RydWN0b3IodXJsLCBzZXJ2aWNlLCB2ZXJib3NlKQooYXJnLCAuLi5hcmdzKSA9PgooKSA9PgogIGdldCBjb25uZWN0aW9ucygpCiAgbGlzdGVuKGNyZWF0ZVNvY2tldCA9IE1ha2VXZWJTb2NrZXQpCigpID0+CiAgY29ubmVjdChjcmVhdGVTb2NrZXQgPSBNYWtlV2ViU29ja2V0KQogIGdldENhbGxiYWNrcyhjdG9yID0gdGhpcy5zZXJ2aWNlKQooYXJnLCAuLi5hcmdzKSA9PgooKSA9PgogIG9uQ29ubmVjdChzb2NrZXQpCiAgb25PcGVuKHNvY2tldCkKICBvbk1lc3NhZ2Uoc29ja2V0LCBtc2cpCiAgb25FcnJvcihzb2NrZXQsIGVycm9yKQogIG9uQ2xvc2Uoc29ja2V0LCBjb2RlLCB3aHkpCiAgb25Qb25nKHNvY2tldCwgZGF0YSkKICBoYW5kbGUoc29jaywgZXZlbnQsIC4uLmFyZ3MpCiAgdGhlbjogZm4gPT4KICByZW1vdmUoc29jaykKICBnZXQgbGlzdCgpCiAgZ2V0IGxhc3QoKQpSUENTb2NrZXQKICAuV2ViU29ja2V0ID0gZnVuY3Rpb24gV2ViU29ja2V0KCkKTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykKICAub25jb25uZWN0ID0gKCkgPT4KICAub25vcGVuID0gKCkgPT4KICAub25lcnJvciA9IGVycm9yID0+CiAgLm9ubWVzc2FnZSA9IG1zZyA9PgogIC5vbnBvbmcgPSBwb25nID0+CiAgLm9uY2xvc2UgPSByZWFzb24gPT4KICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybE9yUG9ydCkKICB0b1N0cmluZygpCkdldFByb3BlcnRpZXMoYXJnLCBtZXRob2QgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcywgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHByb3RvICE9PSBPYmplY3QucHJvdG90eXBlLCBwcm9wUHJlZCA9IChwcm9wLCBvYmosIHByb3RvLCBkZXB0aCkgPT4gdHJ1ZSkKR2V0S2V5cyhvYmosIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiBwcm90byAhPT0gT2JqZWN0LnByb3RvdHlwZSwgcHJvcFByZWQgPSAocHJvcCwgb2JqLCBwcm90bywgZGVwdGgpID0+IHRydWUpCiAgZ2V0UHJvcGVydHlEZXNjcmlwdG9ycyhvYmosIG1lcmdlID0gdHJ1ZSwgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHRydWUpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCm8gPT4KUmVtb3ZlRmFsc2lzaChvYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KZnVuY3Rpb24ocGFyYW1zID0ge30pCiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKICBuID0+CkRlc2VyaWFsaXplU3ltYm9scyhuYW1lcykKICBuID0+CiAgbiA9PgpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpCih1cmwsIHZlcmJvc2l0eSA9IDEpID0+CihjcmVhdGVTb2NrZXQgPSBNYWtlV2ViU29ja2V0KSA9PgoodXJsLCB2ZXJib3NpdHkgPSAxKSA9PgooY3JlYXRlU29ja2V0ID0gTWFrZVdlYlNvY2tldCkgPT4AAAAAAAAAACkGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					307,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
						"symkeys":
						[
							[
								6,
								61
							],
							[
								91,
								97
							],
							[
								113,
								134
							],
							[
								182,
								212
							],
							[
								272,
								297
							],
							[
								344,
								358
							],
							[
								388,
								406
							],
							[
								435,
								478
							],
							[
								738,
								753
							],
							[
								828,
								852
							],
							[
								910,
								936
							],
							[
								979,
								1005
							],
							[
								1113,
								1124
							],
							[
								1201,
								1229
							],
							[
								1347,
								1379
							],
							[
								1495,
								1510
							],
							[
								1617,
								1631
							],
							[
								1755,
								1773
							],
							[
								1880,
								1893
							],
							[
								2071,
								2101
							],
							[
								2113,
								2131
							],
							[
								2143,
								2158
							],
							[
								2170,
								2188
							],
							[
								2268,
								2286
							],
							[
								2331,
								2338
							],
							[
								2406,
								2412
							],
							[
								2454,
								2466
							],
							[
								2476,
								2488
							],
							[
								2505,
								2526
							],
							[
								2568,
								2580
							],
							[
								2637,
								2649
							],
							[
								2678,
								2691
							],
							[
								2774,
								2786
							],
							[
								2797,
								2809
							],
							[
								2828,
								2853
							],
							[
								2943,
								2955
							],
							[
								3043,
								3055
							],
							[
								3092,
								3120
							],
							[
								3326,
								3332
							],
							[
								3374,
								3379
							],
							[
								3402,
								3432
							],
							[
								3547,
								3588
							],
							[
								3723,
								3727
							],
							[
								3762,
								3771
							],
							[
								3830,
								3855
							],
							[
								3860,
								3888
							],
							[
								4136,
								4145
							],
							[
								4238,
								4271
							],
							[
								4284,
								4294
							],
							[
								4354,
								4380
							],
							[
								4806,
								4843
							],
							[
								5492,
								5502
							],
							[
								5545,
								5572
							],
							[
								5690,
								5708
							],
							[
								5758,
								5764
							],
							[
								6048,
								6062
							],
							[
								6258,
								6297
							],
							[
								6439,
								6453
							],
							[
								6875,
								6879
							],
							[
								6973,
								6993
							],
							[
								7084,
								7092
							],
							[
								7150,
								7161
							],
							[
								7222,
								7234
							],
							[
								7285,
								7299
							],
							[
								7410,
								7428
							],
							[
								7541,
								7557
							],
							[
								7757,
								7767
							],
							[
								8267,
								8326
							],
							[
								8386,
								8399
							],
							[
								8439,
								8445
							],
							[
								8466,
								8486
							],
							[
								8576,
								8580
							],
							[
								8901,
								8907
							],
							[
								8971,
								8987
							],
							[
								9068,
								9097
							],
							[
								9202,
								9206
							],
							[
								9286,
								9295
							],
							[
								9325,
								9333
							],
							[
								9525,
								9552
							],
							[
								9604,
								9611
							],
							[
								9690,
								9697
							],
							[
								9759,
								9786
							],
							[
								9892,
								9919
							],
							[
								9947,
								9985
							],
							[
								10046,
								10073
							],
							[
								10164,
								10170
							],
							[
								10236,
								10240
							],
							[
								10289,
								10293
							],
							[
								10329,
								10357
							],
							[
								10648,
								10673
							],
							[
								10720,
								10743
							],
							[
								10756,
								10774
							],
							[
								10886,
								10918
							],
							[
								10928,
								10967
							],
							[
								10980,
								11054
							],
							[
								11101,
								11119
							],
							[
								11218,
								11231
							],
							[
								11889,
								11929
							],
							[
								12089,
								12098
							],
							[
								12142,
								12178
							],
							[
								12348,
								12363
							],
							[
								12401,
								12410
							],
							[
								12515,
								12540
							],
							[
								12931,
								12940
							],
							[
								13192,
								13201
							],
							[
								13420,
								13439
							],
							[
								13691,
								13720
							],
							[
								13893,
								13913
							],
							[
								13969,
								13978
							],
							[
								14044,
								14057
							],
							[
								14080,
								14107
							],
							[
								14144,
								14175
							],
							[
								14272,
								14276
							],
							[
								14486,
								14503
							],
							[
								14572,
								14589
							],
							[
								14698,
								14721
							],
							[
								14804,
								14826
							],
							[
								15012,
								15025
							],
							[
								15150,
								15154
							],
							[
								15357,
								15375
							],
							[
								15413,
								15451
							],
							[
								15640,
								15646
							],
							[
								15672,
								15681
							],
							[
								15907,
								15916
							],
							[
								15921,
								15955
							],
							[
								16102,
								16120
							],
							[
								16170,
								16176
							],
							[
								16225,
								16242
							],
							[
								16505,
								16541
							],
							[
								16796,
								16801
							],
							[
								16889,
								16926
							],
							[
								17105,
								17138
							],
							[
								17220,
								17238
							],
							[
								17296,
								17302
							],
							[
								17327,
								17344
							],
							[
								17617,
								17631
							],
							[
								17817,
								17839
							],
							[
								17939,
								17961
							],
							[
								18135,
								18161
							],
							[
								18294,
								18314
							],
							[
								18412,
								18453
							],
							[
								18674,
								18685
							],
							[
								18715,
								18740
							],
							[
								18926,
								18936
							],
							[
								18973,
								18983
							],
							[
								19036,
								19045
							],
							[
								19146,
								19179
							],
							[
								19185,
								19223
							],
							[
								19356,
								19374
							],
							[
								19404,
								19419
							],
							[
								19446,
								19465
							],
							[
								19500,
								19519
							],
							[
								19554,
								19571
							],
							[
								19604,
								19624
							],
							[
								19673,
								19708
							],
							[
								19828,
								19873
							],
							[
								19965,
								19994
							],
							[
								20556,
								20566
							],
							[
								20700,
								20864
							],
							[
								21232,
								21353
							],
							[
								21599,
								21680
							],
							[
								22213,
								22242
							],
							[
								23057,
								23087
							],
							[
								23126,
								23130
							],
							[
								23217,
								23244
							],
							[
								23283,
								23291
							],
							[
								23371,
								23397
							],
							[
								23444,
								23473
							],
							[
								23531,
								23576
							],
							[
								23673,
								23678
							],
							[
								23721,
								23748
							],
							[
								23996,
								24056
							],
							[
								24265,
								24287
							],
							[
								24453,
								24475
							],
							[
								24709,
								24736
							],
							[
								24967,
								25014
							],
							[
								25693,
								25697
							],
							[
								25971,
								26006
							],
							[
								26028,
								26032
							],
							[
								26064,
								26068
							],
							[
								26090,
								26122
							],
							[
								26414,
								26439
							],
							[
								26440,
								26475
							],
							[
								26570,
								26595
							],
							[
								26596,
								26631
							]
						],
						"symlist":
						[
							"IdSequencer = (start = 0, typedArr = Uint32Array, a) =>",
							" () =>",
							"StringLength = str =>",
							"PadEnd = (str, n, ch = ' ') =>",
							"Color = (str, ...args) =>",
							"IsUpper = s =>",
							"Log = (...args) =>",
							"LogMethod = (className, method, ...args) =>",
							"Compact = () =>",
							"function isObject(value)",
							"function isFunction(value)",
							"function isThenable(value)",
							"Uint32Array",
							"function isTypedArray(value)",
							"function getPrototypeName(proto)",
							"MessageReceiver",
							"onmessage(msg)",
							"MessageTransmitter",
							"sendMessage()",
							" function MessageTransceiver()",
							"MessageTransceiver",
							"MessageReceiver",
							"MessageTransmitter",
							"value: instance =>",
							"ctor =>",
							"none()",
							"encode: v =>",
							"decode: v =>",
							"json(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							"async bjson()",
							"encode: v =>",
							"decode: v =>",
							"async js(verbose = false)",
							"encode: v =>",
							"decode: v =>",
							" function RPCApi(connection)",
							"RPCApi",
							" o =>",
							" function RPCProxy(connection)",
							" function RPCObject(instance, connection)",
							"r =>",
							"RPCObject",
							" function RPCFactory(api)",
							"async function Factory(opts)",
							"RPCObject",
							"RPCFactory.prototype = function()",
							"RPCFactory",
							" function EncodeValue(arg)",
							" function DecodeValue(arg, instances)",
							"Connection",
							"constructor(codec, verbose)",
							" (arg, ...args) =>",
							" () =>",
							"error(message)",
							"close(status = 1000, reason = 'closed')",
							"onmessage(msg)",
							"r =>",
							"processMessage(data)",
							"onopen()",
							"onconnect()",
							"onpong(data)",
							"onerror(error)",
							"onclose(code, why)",
							"sendMessage(obj)",
							"Connection",
							" function FactoryEndpoint(classes, verbose, instances = {})",
							" (...args) =>",
							" () =>",
							"new(name, args = [])",
							"a =>",
							"list()",
							"delete(instance)",
							"(obj, method, params = []) =>",
							"a =>",
							"result =>",
							"error =>",
							"(obj, enumerable = true) =>",
							" obj =>",
							" obj =>",
							"(obj, enumerable = true) =>",
							" (proto, depth) =>",
							" (prop, obj, proto, depth) =>",
							"(obj, enumerable = true) =>",
							"sym =>",
							"v =>",
							"v =>",
							"(obj, property, instance) =>",
							"(obj, property, value) =>",
							" function instance(fn)",
							" (key, ...args) =>",
							" function members(pred = v => !",
							"(v), defaults = { maxDepth: Infinity })",
							" (obj, keyDescriptor = true, valueDescriptor = true, source = false, d) =>",
							" (proto, depth) =>",
							"(acc, key) =>",
							"function Respond(success, resultOrError)",
							"RPCServer",
							"constructor(methods, verbose, codec)",
							"get instances()",
							"cleanup()",
							"async processMessage(msg)",
							"RPCServer",
							"RPCClient",
							"processMessage(msg)",
							"async call(method, ...params)",
							"(resolve, reject) =>",
							"RPCClient",
							"FactoryClient",
							"constructor(verbose, codec)",
							"async new(className, ...params)",
							"a =>",
							"([key, value]) =>",
							"([key, value]) =>",
							"([key, value, desc]) =>",
							"get: (target, prop) =>",
							" (...args) =>",
							"a =>",
							"ownKeys: target =>",
							"getOwnPropertyDescriptor(target, prop)",
							" () =>",
							" proxy =>",
							"RPCSocket",
							"constructor(url, service, verbose)",
							" (arg, ...args) =>",
							" () =>",
							"get connections()",
							"listen(createSocket = MakeWebSocket)",
							"() =>",
							"connect(createSocket = MakeWebSocket)",
							"getCallbacks(ctor = this.service)",
							" (arg, ...args) =>",
							" () =>",
							"onConnect(socket)",
							"onOpen(socket)",
							"onMessage(socket, msg)",
							"onError(socket, error)",
							"onClose(socket, code, why)",
							"onPong(socket, data)",
							" function handle(sock, event, ...args)",
							"then: fn =>",
							" function remove(sock)",
							"get list()",
							"get last()",
							"RPCSocket",
							".WebSocket = function WebSocket()",
							"function MakeWebSocket(url, callbacks)",
							".onconnect = () =>",
							".onopen = () =>",
							".onerror = error =>",
							".onmessage = msg =>",
							".onpong = pong =>",
							".onclose = reason =>",
							"function hasHandler(obj, eventName)",
							"function callHandler(obj, eventName, ...args)",
							" function parseURL(urlOrPort)",
							"toString()",
							" function GetProperties(arg, method = Object.getOwnPropertyNames, pred = (proto, depth) => proto !== Object.prototype, propPred = (prop, obj, proto, depth) => true)",
							" function GetKeys(obj, pred = (proto, depth) => proto !== Object.prototype, propPred = (prop, obj, proto, depth) => true)",
							"function getPropertyDescriptors(obj, merge = true, pred = (proto, depth) => true)",
							"function define(obj, ...args)",
							"function DeserializeEntries(e)",
							"a =>",
							"function DeserializeKeys(e)",
							"([k]) =>",
							"function DeserializeMap(e)",
							"function DeserializeObject(e)",
							"function ForwardMethods(e, ret = {}, thisObj)",
							" o =>",
							"function RemoveFalsish(obj)",
							"function MakeCommandFunction(cmd, getConnection, thisObj, t)",
							"getConnection = obj =>",
							" function(params = {})",
							"async function(params = {})",
							" function SerializeValue(value, source = false)",
							"n =>",
							" function DeserializeSymbols(names)",
							"n =>",
							"n =>",
							" function DeserializeValue(desc)",
							" (url, verbosity = 1) =>",
							" (createSocket = MakeWebSocket) =>",
							" (url, verbosity = 1) =>",
							" (createSocket = MakeWebSocket) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAHoPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					308,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB6DwAASWRTZXF1ZW5jZXIgPSAoc3RhcnQgPSAwLCB0eXBlZEFyciA9IFVpbnQzMkFycmF5LCBhKSA9PgooKSA9PgpTdHJpbmdMZW5ndGggPSBzdHIgPT4KUGFkRW5kID0gKHN0ciwgbiwgY2ggPSAnICcpID0+CkNvbG9yID0gKHN0ciwgLi4uYXJncykgPT4KSXNVcHBlciA9IHMgPT4KTG9nID0gKC4uLmFyZ3MpID0+CkxvZ01ldGhvZCA9IChjbGFzc05hbWUsIG1ldGhvZCwgLi4uYXJncykgPT4KQ29tcGFjdCA9ICgpID0+CiAgaXNPYmplY3QodmFsdWUpCiAgaXNGdW5jdGlvbih2YWx1ZSkKICBpc1RoZW5hYmxlKHZhbHVlKQpVaW50MzJBcnJheQogIGlzVHlwZWRBcnJheSh2YWx1ZSkKICBnZXRQcm90b3R5cGVOYW1lKHByb3RvKQpNZXNzYWdlUmVjZWl2ZXIKICBvbm1lc3NhZ2UobXNnKQpNZXNzYWdlVHJhbnNtaXR0ZXIKICBzZW5kTWVzc2FnZSgpCk1lc3NhZ2VUcmFuc2NlaXZlcigpCk1lc3NhZ2VUcmFuc2NlaXZlcgpNZXNzYWdlUmVjZWl2ZXIKTWVzc2FnZVRyYW5zbWl0dGVyCiAgdmFsdWU6IGluc3RhbmNlID0+CiAgY3RvciA9PgogIG5vbmUoKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGpzb24odmVyYm9zZSA9IGZhbHNlKQogIGVuY29kZTogdiA9PgogIGRlY29kZTogdiA9PgogIGJqc29uKCkKICBlbmNvZGU6IHYgPT4KICBkZWNvZGU6IHYgPT4KICBqcyh2ZXJib3NlID0gZmFsc2UpCiAgZW5jb2RlOiB2ID0+CiAgZGVjb2RlOiB2ID0+ClJQQ0FwaShjb25uZWN0aW9uKQpSUENBcGkKbyA9PgpSUENQcm94eShjb25uZWN0aW9uKQpSUENPYmplY3QoaW5zdGFuY2UsIGNvbm5lY3Rpb24pCiAgciA9PgpSUENPYmplY3QKUlBDRmFjdG9yeShhcGkpCkZhY3Rvcnkob3B0cykKUlBDT2JqZWN0ClJQQ0ZhY3RvcnkucHJvdG90eXBlID0gZnVuY3Rpb24oKQpSUENGYWN0b3J5CkVuY29kZVZhbHVlKGFyZykKRGVjb2RlVmFsdWUoYXJnLCBpbnN0YW5jZXMpCkNvbm5lY3Rpb24KICBjb25zdHJ1Y3Rvcihjb2RlYywgdmVyYm9zZSkKKGFyZywgLi4uYXJncykgPT4KKCkgPT4KICBlcnJvcihtZXNzYWdlKQogIGNsb3NlKHN0YXR1cyA9IDEwMDAsIHJlYXNvbiA9ICdjbG9zZWQnKQogIG9ubWVzc2FnZShtc2cpCiAgciA9PgogIHByb2Nlc3NNZXNzYWdlKGRhdGEpCiAgb25vcGVuKCkKICBvbmNvbm5lY3QoKQogIG9ucG9uZyhkYXRhKQogIG9uZXJyb3IoZXJyb3IpCiAgb25jbG9zZShjb2RlLCB3aHkpCiAgc2VuZE1lc3NhZ2Uob2JqKQpDb25uZWN0aW9uCkZhY3RvcnlFbmRwb2ludChjbGFzc2VzLCB2ZXJib3NlLCBpbnN0YW5jZXMgPSB7fSkKKC4uLmFyZ3MpID0+CigpID0+CiAgbmV3KG5hbWUsIGFyZ3MgPSBbXSkKICBhID0+CiAgbGlzdCgpCiAgZGVsZXRlKGluc3RhbmNlKQoob2JqLCBtZXRob2QsIHBhcmFtcyA9IFtdKSA9PgogIGEgPT4KICByZXN1bHQgPT4KICBlcnJvciA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4Kb2JqID0+Cm9iaiA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4KKHByb3RvLCBkZXB0aCkgPT4KKHByb3AsIG9iaiwgcHJvdG8sIGRlcHRoKSA9Pgoob2JqLCBlbnVtZXJhYmxlID0gdHJ1ZSkgPT4KICBzeW0gPT4KICB2ID0+CiAgdiA9Pgoob2JqLCBwcm9wZXJ0eSwgaW5zdGFuY2UpID0+CihvYmosIHByb3BlcnR5LCB2YWx1ZSkgPT4KICBpbnN0YW5jZShmbikKKGtleSwgLi4uYXJncykgPT4KICBtZW1iZXJzKHByZWQgPSB2ID0+ICEKKHYpLCBkZWZhdWx0cyA9IHsgbWF4RGVwdGg6IEluZmluaXR5IH0pCihvYmosIGtleURlc2NyaXB0b3IgPSB0cnVlLCB2YWx1ZURlc2NyaXB0b3IgPSB0cnVlLCBzb3VyY2UgPSBmYWxzZSwgZCkgPT4KKHByb3RvLCBkZXB0aCkgPT4KKGFjYywga2V5KSA9PgpSZXNwb25kKHN1Y2Nlc3MsIHJlc3VsdE9yRXJyb3IpClJQQ1NlcnZlcgogIGNvbnN0cnVjdG9yKG1ldGhvZHMsIHZlcmJvc2UsIGNvZGVjKQogIGdldCBpbnN0YW5jZXMoKQogIGNsZWFudXAoKQogIHByb2Nlc3NNZXNzYWdlKG1zZykKUlBDU2VydmVyClJQQ0NsaWVudAogIHByb2Nlc3NNZXNzYWdlKG1zZykKICBjYWxsKG1ldGhvZCwgLi4ucGFyYW1zKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSUENDbGllbnQKRmFjdG9yeUNsaWVudAogIGNvbnN0cnVjdG9yKHZlcmJvc2UsIGNvZGVjKQogIG5ldyhjbGFzc05hbWUsIC4uLnBhcmFtcykKICBhID0+Cihba2V5LCB2YWx1ZV0pID0+Cihba2V5LCB2YWx1ZV0pID0+Cihba2V5LCB2YWx1ZSwgZGVzY10pID0+CiAgZ2V0OiAodGFyZ2V0LCBwcm9wKSA9PgooLi4uYXJncykgPT4KICBhID0+CiAgb3duS2V5czogdGFyZ2V0ID0+CiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcCkKKCkgPT4KcHJveHkgPT4KUlBDU29ja2V0CiAgY29uc3RydWN0b3IodXJsLCBzZXJ2aWNlLCB2ZXJib3NlKQooYXJnLCAuLi5hcmdzKSA9PgooKSA9PgogIGdldCBjb25uZWN0aW9ucygpCiAgbGlzdGVuKGNyZWF0ZVNvY2tldCA9IE1ha2VXZWJTb2NrZXQpCigpID0+CiAgY29ubmVjdChjcmVhdGVTb2NrZXQgPSBNYWtlV2ViU29ja2V0KQogIGdldENhbGxiYWNrcyhjdG9yID0gdGhpcy5zZXJ2aWNlKQooYXJnLCAuLi5hcmdzKSA9PgooKSA9PgogIG9uQ29ubmVjdChzb2NrZXQpCiAgb25PcGVuKHNvY2tldCkKICBvbk1lc3NhZ2Uoc29ja2V0LCBtc2cpCiAgb25FcnJvcihzb2NrZXQsIGVycm9yKQogIG9uQ2xvc2Uoc29ja2V0LCBjb2RlLCB3aHkpCiAgb25Qb25nKHNvY2tldCwgZGF0YSkKICBoYW5kbGUoc29jaywgZXZlbnQsIC4uLmFyZ3MpCiAgdGhlbjogZm4gPT4KICByZW1vdmUoc29jaykKICBnZXQgbGlzdCgpCiAgZ2V0IGxhc3QoKQpSUENTb2NrZXQKICAuV2ViU29ja2V0ID0gZnVuY3Rpb24gV2ViU29ja2V0KCkKTWFrZVdlYlNvY2tldCh1cmwsIGNhbGxiYWNrcykKICAub25jb25uZWN0ID0gKCkgPT4KICAub25vcGVuID0gKCkgPT4KICAub25lcnJvciA9IGVycm9yID0+CiAgLm9ubWVzc2FnZSA9IG1zZyA9PgogIC5vbnBvbmcgPSBwb25nID0+CiAgLm9uY2xvc2UgPSByZWFzb24gPT4KICBoYXNIYW5kbGVyKG9iaiwgZXZlbnROYW1lKQogIGNhbGxIYW5kbGVyKG9iaiwgZXZlbnROYW1lLCAuLi5hcmdzKQogIHBhcnNlVVJMKHVybE9yUG9ydCkKICB0b1N0cmluZygpCkdldFByb3BlcnRpZXMoYXJnLCBtZXRob2QgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcywgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHByb3RvICE9PSBPYmplY3QucHJvdG90eXBlLCBwcm9wUHJlZCA9IChwcm9wLCBvYmosIHByb3RvLCBkZXB0aCkgPT4gdHJ1ZSkKR2V0S2V5cyhvYmosIHByZWQgPSAocHJvdG8sIGRlcHRoKSA9PiBwcm90byAhPT0gT2JqZWN0LnByb3RvdHlwZSwgcHJvcFByZWQgPSAocHJvcCwgb2JqLCBwcm90bywgZGVwdGgpID0+IHRydWUpCiAgZ2V0UHJvcGVydHlEZXNjcmlwdG9ycyhvYmosIG1lcmdlID0gdHJ1ZSwgcHJlZCA9IChwcm90bywgZGVwdGgpID0+IHRydWUpCiAgZGVmaW5lKG9iaiwgLi4uYXJncykKRGVzZXJpYWxpemVFbnRyaWVzKGUpCiAgYSA9PgpEZXNlcmlhbGl6ZUtleXMoZSkKKFtrXSkgPT4KRGVzZXJpYWxpemVNYXAoZSkKRGVzZXJpYWxpemVPYmplY3QoZSkKRm9yd2FyZE1ldGhvZHMoZSwgcmV0ID0ge30sIHRoaXNPYmopCm8gPT4KUmVtb3ZlRmFsc2lzaChvYmopCk1ha2VDb21tYW5kRnVuY3Rpb24oY21kLCBnZXRDb25uZWN0aW9uLCB0aGlzT2JqLCB0KQogIGdldENvbm5lY3Rpb24gPSBvYmogPT4KZnVuY3Rpb24ocGFyYW1zID0ge30pCiAgZnVuY3Rpb24ocGFyYW1zID0ge30pClNlcmlhbGl6ZVZhbHVlKHZhbHVlLCBzb3VyY2UgPSBmYWxzZSkKICBuID0+CkRlc2VyaWFsaXplU3ltYm9scyhuYW1lcykKICBuID0+CiAgbiA9PgpEZXNlcmlhbGl6ZVZhbHVlKGRlc2MpCih1cmwsIHZlcmJvc2l0eSA9IDEpID0+CihjcmVhdGVTb2NrZXQgPSBNYWtlV2ViU29ja2V0KSA9PgoodXJsLCB2ZXJib3NpdHkgPSAxKSA9PgooY3JlYXRlU29ja2V0ID0gTWFrZVdlYlNvY2tldCkgPT4AAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					309,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								1180,
								1207
							],
							[
								1365,
								1411
							],
							[
								1622,
								1652
							],
							[
								1708,
								1743
							],
							[
								1908,
								1921
							],
							[
								1957,
								1971
							],
							[
								2054,
								2070
							],
							[
								2302,
								2324
							],
							[
								2847,
								2865
							],
							[
								2910,
								2920
							],
							[
								3187,
								3201
							],
							[
								4095,
								4107
							],
							[
								5052,
								5060
							],
							[
								5098,
								5115
							],
							[
								5162,
								5175
							],
							[
								5214,
								5218
							],
							[
								5241,
								5250
							],
							[
								5352,
								5364
							],
							[
								5415,
								5419
							],
							[
								5499,
								5511
							],
							[
								5562,
								5566
							],
							[
								6205,
								6225
							],
							[
								6256,
								6276
							],
							[
								6362,
								6382
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function CreateREPL(prefix, suffix)",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"function main(...args)",
							" (_x, _y, opts) =>",
							" (a, v) =>",
							" (v, pv, o) =>",
							"ctor = () =>",
							"get ws()",
							"get connections()",
							"get sockets()",
							"c =>",
							"get rpc()",
							"get server()",
							"c =>",
							"get client()",
							"c =>",
							" (url, callbacks) =>",
							" (url, callbacks) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAiAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					310,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCkNyZWF0ZVJFUEwocHJlZml4LCBzdWZmaXgpCiAgLmhlbHAgPSAoKSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogIG1haW4oLi4uYXJncykKKF94LCBfeSwgb3B0cykgPT4KKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KICBjdG9yID0gKCkgPT4KICBnZXQgd3MoKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tldHMoKQogIGMgPT4KICBnZXQgcnBjKCkKICBnZXQgc2VydmVyKCkKICBjID0+CiAgZ2V0IGNsaWVudCgpCiAgYyA9PgoodXJsLCBjYWxsYmFja3MpID0+Cih1cmwsIGNhbGxiYWNrcykgPT4KICBxdWl0KHdoeSkAAAAAAAAAACkGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					311,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					312,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					313,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AQAAAAAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					314,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAACuAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					315,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
						"symkeys":
						[
							[
								1180,
								1207
							],
							[
								1365,
								1411
							],
							[
								1622,
								1652
							],
							[
								1708,
								1743
							],
							[
								1908,
								1921
							],
							[
								1957,
								1971
							],
							[
								2054,
								2070
							],
							[
								2302,
								2324
							],
							[
								2847,
								2865
							],
							[
								2910,
								2920
							],
							[
								3187,
								3201
							],
							[
								4095,
								4107
							],
							[
								5052,
								5060
							],
							[
								5098,
								5115
							],
							[
								5162,
								5175
							],
							[
								5214,
								5218
							],
							[
								5241,
								5250
							],
							[
								5352,
								5364
							],
							[
								5415,
								5419
							],
							[
								5499,
								5511
							],
							[
								5562,
								5566
							],
							[
								6205,
								6225
							],
							[
								6256,
								6276
							],
							[
								6362,
								6382
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function CreateREPL(prefix, suffix)",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"function main(...args)",
							" (_x, _y, opts) =>",
							" (a, v) =>",
							" (v, pv, o) =>",
							"ctor = () =>",
							"get ws()",
							"get connections()",
							"get sockets()",
							"c =>",
							"get rpc()",
							"get server()",
							"c =>",
							"get client()",
							"c =>",
							" (url, callbacks) =>",
							" (url, callbacks) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAiAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					316,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACIAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCkNyZWF0ZVJFUEwocHJlZml4LCBzdWZmaXgpCiAgLmhlbHAgPSAoKSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogIG1haW4oLi4uYXJncykKKF94LCBfeSwgb3B0cykgPT4KKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KICBjdG9yID0gKCkgPT4KICBnZXQgd3MoKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tldHMoKQogIGMgPT4KICBnZXQgcnBjKCkKICBnZXQgc2VydmVyKCkKICBjID0+CiAgZ2V0IGNsaWVudCgpCiAgYyA9PgoodXJsLCBjYWxsYmFja3MpID0+Cih1cmwsIGNhbGxiYWNrcykgPT4KICBxdWl0KHdoeSkAAAAAAAAAACkGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					317,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					318,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					319,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAC3AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					320,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					321,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AQAAAAAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					322,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAC3AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					323,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					326,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAArgEAAAAAAAAAAAAAAADwvw"
				],
				[
					329,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAACuAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIBAAAAAAAAcgEAAAAAAAAAAAAAAADwvw"
				],
				[
					330,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAtwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					331,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAACkGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					332,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					333,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					334,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAC3AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					335,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AQAAAAAAAAAAAAAArgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAACuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAKQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAALUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAC3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								152,
								171
							],
							[
								253,
								269
							],
							[
								274,
								291
							],
							[
								491,
								504
							],
							[
								952,
								975
							],
							[
								1831,
								1857
							],
							[
								2020,
								2042
							],
							[
								2416,
								2434
							],
							[
								3209,
								3232
							],
							[
								3579,
								3587
							],
							[
								3641,
								3672
							],
							[
								4129,
								4152
							],
							[
								4999,
								5021
							],
							[
								5207,
								5219
							],
							[
								5549,
								5568
							],
							[
								6236,
								6267
							],
							[
								6391,
								6415
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6953,
								6965
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							"(s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBoYW5kbGVSZXNwb25zZShtZXNzYWdlKQogIGhhbmRsZUJyZWFrcG9pbnRzKG1lc3NhZ2UpCiAgaGFuZGxlTWVzc2FnZShtZXNzYWdlKQogIGhhbmRsZUV2ZW50KGV2ZW50KQogIHNlbmRNZXNzYWdlKHR5cGUsIGFyZ3MpCiAgZ2V0U2VxKCkKICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30pCiAgc3RhdGljIHJlYWQoc29jaykKICBzdGF0aWMgc2VuZChzb2NrLCBtc2cpCiAgcmVhZCgpCiAgcmVhZEhhbmRsZXIoKQogIHJldFZhbHVlKHJldCwgLi4uYXJncykKICB0b0hleChuLCBiID0gMikKTWFrZUFycmF5KGJ1ZiwgbnVtQnl0ZXMpCkFycmF5QnVmVG9IZXgoYnVmLCBudW1CeXRlcyA9IDgpCihzLCBjb2RlKSA9PgAAAAAAAAAAKQYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3710,
								3722
							],
							[
								4988,
								4992
							],
							[
								5396,
								5410
							],
							[
								5490,
								5505
							],
							[
								5586,
								5598
							],
							[
								5676,
								5692
							],
							[
								5775,
								5790
							],
							[
								6111,
								6118
							],
							[
								6166,
								6205
							],
							[
								6290,
								6320
							],
							[
								6434,
								6438
							],
							[
								6634,
								6669
							],
							[
								6758,
								6807
							],
							[
								7053,
								7074
							],
							[
								7149,
								7167
							],
							[
								7252,
								7267
							],
							[
								7338,
								7348
							],
							[
								7369,
								7376
							],
							[
								7415,
								7452
							],
							[
								7608,
								7634
							],
							[
								7674,
								7686
							],
							[
								7804,
								7822
							],
							[
								7905,
								7923
							],
							[
								9454,
								9483
							],
							[
								9822,
								9855
							],
							[
								9926,
								9930
							],
							[
								9932,
								9936
							],
							[
								10059,
								10065
							],
							[
								10067,
								10071
							],
							[
								10171,
								10175
							],
							[
								10177,
								10181
							],
							[
								10232,
								10236
							],
							[
								10271,
								10275
							],
							[
								10666,
								10695
							],
							[
								10777,
								10782
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {})",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAALcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3AgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AQAAAAAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5549,
								5612
							],
							[
								6173,
								6196
							],
							[
								7170,
								7192
							],
							[
								7600,
								7647
							],
							[
								7790,
								7808
							],
							[
								8304,
								8315
							],
							[
								8625,
								8643
							],
							[
								8744,
								8761
							],
							[
								8935,
								8939
							],
							[
								9014,
								9051
							],
							[
								9211,
								9215
							],
							[
								9560,
								9592
							],
							[
								9761,
								9785
							],
							[
								9799,
								9825
							],
							[
								10132,
								10136
							],
							[
								10266,
								10289
							],
							[
								10344,
								10352
							],
							[
								10470,
								10485
							],
							[
								10849,
								10864
							],
							[
								11248,
								11277
							],
							[
								11367,
								11380
							],
							[
								12081,
								12091
							],
							[
								12234,
								12252
							],
							[
								12284,
								12302
							],
							[
								12303,
								12310
							],
							[
								12343,
								12398
							],
							[
								12665,
								12676
							],
							[
								12818,
								12847
							],
							[
								13065,
								13091
							],
							[
								13102,
								13116
							],
							[
								13333,
								13348
							],
							[
								13378,
								13397
							],
							[
								13426,
								13448
							],
							[
								13761,
								13771
							],
							[
								13979,
								13993
							],
							[
								14047,
								14061
							],
							[
								15090,
								15133
							],
							[
								15327,
								15333
							],
							[
								15346,
								15362
							],
							[
								16936,
								16972
							],
							[
								17160,
								17195
							],
							[
								17335,
								17339
							],
							[
								17466,
								17484
							],
							[
								17638,
								17670
							],
							[
								18051,
								18062
							],
							[
								18217,
								18228
							],
							[
								18288,
								18308
							],
							[
								18897,
								18932
							],
							[
								19335,
								19354
							],
							[
								19450,
								19492
							],
							[
								20396,
								20419
							],
							[
								20457,
								20464
							],
							[
								21044,
								21049
							],
							[
								22228,
								22243
							],
							[
								22621,
								22627
							],
							[
								25839,
								25845
							],
							[
								26250,
								26275
							],
							[
								26598,
								26615
							],
							[
								26659,
								26664
							],
							[
								26689,
								26703
							],
							[
								27049,
								27059
							],
							[
								27183,
								27200
							],
							[
								27232,
								27247
							],
							[
								27290,
								27304
							],
							[
								27308,
								27323
							],
							[
								27466,
								27470
							],
							[
								27547,
								27557
							],
							[
								28045,
								28054
							],
							[
								28170,
								28176
							],
							[
								28234,
								28247
							],
							[
								28462,
								28479
							],
							[
								28596,
								28638
							],
							[
								29003,
								29034
							],
							[
								29116,
								29132
							],
							[
								29315,
								29335
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAApBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAApBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgbXNnID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAALUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 29662,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEQVAAAAAAAARRUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQVAAAAAAAARBUAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " env"
					},
					"BAAAAEUVAAAAAAAARhUAAAAAAAAAAAAARhUAAAAAAABHFQAAAAAAAAAAAABHFQAAAAAAAEgVAAAAAAAAAAAAAEgVAAAAAAAASRUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUVAAAAAAAARRUAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"cut",
					null,
					"AQAAAMMTAAAAAAAAwxMAAAAAAAAMAAAAcHJvY2Vzcy5lbnYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMTAAAAAAAAzxMAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					2,
					"right_delete",
					null,
					"AgAAAMMTAAAAAAAAwxMAAAAAAAABAAAAP8MTAAAAAAAAwxMAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMTAAAAAAAAwxMAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADsVAAAAAAAAPBUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsVAAAAAAAAOxUAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwVAAAAAAAAPRUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwVAAAAAAAAPBUAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD0VAAAAAAAAPxUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0VAAAAAAAAPRUAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAAD4VAAAAAAAAPxUAAAAAAAAAAAAAPxUAAAAAAABAFQAAAAAAAAAAAABAFQAAAAAAAEEVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4VAAAAAAAAPhUAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"paste",
					null,
					"AQAAAEEVAAAAAAAATRUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEVAAAAAAAAQRUAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0VAAAAAAAAThUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0VAAAAAAAATRUAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " ....e"
					},
					"BgAAAE4VAAAAAAAATxUAAAAAAAAAAAAATxUAAAAAAABQFQAAAAAAAAAAAABQFQAAAAAAAFEVAAAAAAAAAAAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAABTFQAAAAAAAFQVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4VAAAAAAAAThUAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAAFMVAAAAAAAAUxUAAAAAAAABAAAAZVIVAAAAAAAAUhUAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQVAAAAAAAAVBUAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "env"
					},
					"AwAAAFIVAAAAAAAAUxUAAAAAAAAAAAAAUxUAAAAAAABUFQAAAAAAAAAAAABUFQAAAAAAAFUVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIVAAAAAAAAUhUAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUVAAAAAAAAVhUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUVAAAAAAAAVRUAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"cut",
					null,
					"AQAAADgVAAAAAAAAOBUAAAAAAAAfAAAAZW52OiB7Li4ucHJvY2Vzcy5lbnYgLCAuLi5lbnYgfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcVAAAAAAAAOBUAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "env"
					},
					"AwAAADgVAAAAAAAAORUAAAAAAAAAAAAAORUAAAAAAAA6FQAAAAAAAAAAAAA6FQAAAAAAADsVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgVAAAAAAAAOBUAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					3,
					"left_delete",
					null,
					"AwAAAKsUAAAAAAAAqxQAAAAAAAABAAAAdqoUAAAAAAAAqhQAAAAAAAABAAAAbqkUAAAAAAAAqRQAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwUAAAAAAAArBQAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"paste",
					null,
					"AQAAAKkUAAAAAAAAyBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkUAAAAAAAAqRQAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "address,m"
					},
					"CQAAABYXAAAAAAAAFxcAAAAAAAAAAAAAFxcAAAAAAAAYFwAAAAAAAAAAAAAYFwAAAAAAABkXAAAAAAAAAAAAABkXAAAAAAAAGhcAAAAAAAAAAAAAGhcAAAAAAAAbFwAAAAAAAAAAAAAbFwAAAAAAABwXAAAAAAAAAAAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAAeFwAAAAAAAB8XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYXAAAAAAAAFhcAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAB4XAAAAAAAAHhcAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8XAAAAAAAAHxcAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "skip"
					},
					"BAAAAB4XAAAAAAAAHxcAAAAAAAAAAAAAHxcAAAAAAAAgFwAAAAAAAAAAAAAgFwAAAAAAACEXAAAAAAAAAAAAACEXAAAAAAAAIhcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4XAAAAAAAAHhcAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIXAAAAAAAAIxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIXAAAAAAAAIhcAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAACIXAAAAAAAAIxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIXAAAAAAAAIhcAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert_completion",
					{
						"completion": "skipToMain",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "skipToMain"
					},
					"AgAAAB4XAAAAAAAAHhcAAAAAAAAFAAAAc2tpcFQeFwAAAAAAACgXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMXAAAAAAAAIxcAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACgXAAAAAAAAKRcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgXAAAAAAAAKBcAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "sock"
					},
					"BQAAACoXAAAAAAAAKxcAAAAAAAAAAAAAKxcAAAAAAAArFwAAAAAAAAMAAAByZXQrFwAAAAAAACwXAAAAAAAAAAAAACwXAAAAAAAALRcAAAAAAAAAAAAALRcAAAAAAAAuFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoXAAAAAAAALRcAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKoGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAACtBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoGAAAAAAAAqgYAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJMHAAAAAAAAlAcAAAAAAAAAAAAAlAcAAAAAAACaBwAAAAAAAAAAAACrBgAAAAAAAKsGAAAAAAAAAgAAACAg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMHAAAAAAAAkwcAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"cut",
					null,
					"AQAAAGJjAAAAAAAAYmMAAAAAAAA2AAAAICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzZW5kIHRvIGRlYnVnZ2VyJywgZGJnKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGJjAAAAAAAAmGMAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"CAAAAB1jAAAAAAAAHmMAAAAAAAAAAAAAHmMAAAAAAAAuYwAAAAAAAAAAAACSBwAAAAAAAJIHAAAAAAAABgAAACAgICAgIChjAAAAAAAAKWMAAAAAAAAAAAAAKWMAAAAAAAAqYwAAAAAAAAAAAAAqYwAAAAAAACtjAAAAAAAAAAAAACtjAAAAAAAALGMAAAAAAAAAAAAALGMAAAAAAAAtYwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB1jAAAAAAAAHWMAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC1jAAAAAAAALmMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC1jAAAAAAAALWMAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAC5jAAAAAAAAMGMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC5jAAAAAAAALmMAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "pid"
					},
					"AwAAAC9jAAAAAAAAMGMAAAAAAAAAAAAAMGMAAAAAAAAxYwAAAAAAAAAAAAAxYwAAAAAAADJjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC9jAAAAAAAAL2MAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "=c"
					},
					"AgAAADNjAAAAAAAANGMAAAAAAAAAAAAANGMAAAAAAAA1YwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADNjAAAAAAAAM2MAAAAAAAAAAAAAAADwvw"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAADRjAAAAAAAANGMAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADVjAAAAAAAANWMAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "dbg.child;"
					},
					"CgAAADRjAAAAAAAANWMAAAAAAAAAAAAANWMAAAAAAAA2YwAAAAAAAAAAAAA2YwAAAAAAADdjAAAAAAAAAAAAADdjAAAAAAAAOGMAAAAAAAAAAAAAOGMAAAAAAAA5YwAAAAAAAAAAAAA5YwAAAAAAADpjAAAAAAAAAAAAADpjAAAAAAAAO2MAAAAAAAAAAAAAO2MAAAAAAAA8YwAAAAAAAAAAAAA8YwAAAAAAAD1jAAAAAAAAAAAAAD1jAAAAAAAAPmMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADRjAAAAAAAANGMAAAAAAAAAAAAAAADwvw"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "pid,"
					},
					"BAAAAHFjAAAAAAAAcmMAAAAAAAAAAAAAcmMAAAAAAABzYwAAAAAAAAAAAABzYwAAAAAAAHRjAAAAAAAAAAAAAHRjAAAAAAAAdWMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHFjAAAAAAAAcWMAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHVjAAAAAAAAdmMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHVjAAAAAAAAdWMAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANRLAAAAAAAA1EsAAAAAAAAAAAAAAADwvw"
				],
				[
					297,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVXAAAAAAAA1VcAAAAAAAAAAAAAAADwvw"
				],
				[
					298,
					1,
					"vi_eval",
					{
						"action_args":
						{
							"insert_command": "vi_delete"
						},
						"action_command": "enter_insert_mode",
						"motion_args":
						{
							"extend": true,
							"forward": true,
							"visual": false
						},
						"motion_clip_to_line": false,
						"motion_command": "vi_move_by_characters_in_line",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAANVXAAAAAAAA1VcAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVXAAAAAAAA1VcAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": "-s"
					},
					"AgAAANVXAAAAAAAA1lcAAAAAAAAAAAAA1lcAAAAAAADXVwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVXAAAAAAAA1VcAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					2,
					"left_delete",
					null,
					"AgAAANZXAAAAAAAA1lcAAAAAAAABAAAAc9VXAAAAAAAA1VcAAAAAAAABAAAALQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdXAAAAAAAA11cAAAAAAAAAAAAAAADwvw"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ".sock)"
					},
					"BgAAANVXAAAAAAAA1lcAAAAAAAAAAAAA1lcAAAAAAADXVwAAAAAAAAAAAADXVwAAAAAAANhXAAAAAAAAAAAAANhXAAAAAAAA2VcAAAAAAAAAAAAA2VcAAAAAAADaVwAAAAAAAAAAAADaVwAAAAAAANtXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANVXAAAAAAAA1VcAAAAAAAAAAAAAAADwvw"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": ".sock"
					},
					"BQAAAO9bAAAAAAAA8FsAAAAAAAAAAAAA8FsAAAAAAADxWwAAAAAAAAAAAADxWwAAAAAAAPJbAAAAAAAAAAAAAPJbAAAAAAAA81sAAAAAAAAAAAAA81sAAAAAAAD0WwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO9bAAAAAAAA71sAAAAAAAAAAAAAAADwvw"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAACdoAAAAAAAAKGgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACdoAAAAAAAAJ2gAAAAAAAAAAAAAAADwvw"
				],
				[
					372,
					1,
					"left_delete",
					null,
					"AQAAACdoAAAAAAAAJ2gAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAChoAAAAAAAAKGgAAAAAAAAAAAAAAADwvw"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": ".map"
					},
					"BAAAACdoAAAAAAAAKGgAAAAAAAAAAAAAKGgAAAAAAAApaAAAAAAAAAAAAAApaAAAAAAAACpoAAAAAAAAAAAAACpoAAAAAAAAK2gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACdoAAAAAAAAJ2gAAAAAAAAAAAAAAADwvw"
				],
				[
					374,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACtoAAAAAAAALWgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACtoAAAAAAAAK2gAAAAAAAAAAAAAAADwvw"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACxoAAAAAAAALWgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACxoAAAAAAAALGgAAAAAAAAAAAAAAADwvw"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC1oAAAAAAAALmgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC1oAAAAAAAALWgAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					2,
					"left_delete",
					null,
					"AgAAAC1oAAAAAAAALWgAAAAAAAABAAAAICxoAAAAAAAALGgAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC5oAAAAAAAALmgAAAAAAAAAAAAAAADwvw"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAACxoAAAAAAAALWgAAAAAAAAAAAAALWgAAAAAAAAuaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACxoAAAAAAAALGgAAAAAAAAAAAAAAADwvw"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAC5oAAAAAAAAL2gAAAAAAAAAAAAAL2gAAAAAAAAwaAAAAAAAAAAAAAAwaAAAAAAAADFoAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC5oAAAAAAAALmgAAAAAAAAAAAAAAADwvw"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": " wsd2"
					},
					"BQAAADFoAAAAAAAAMmgAAAAAAAAAAAAAMmgAAAAAAAAzaAAAAAAAAAAAAAAzaAAAAAAAADRoAAAAAAAAAAAAADRoAAAAAAAANWgAAAAAAAAAAAAANWgAAAAAAAA2aAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADFoAAAAAAAAMWgAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					2,
					"left_delete",
					null,
					"AgAAADVoAAAAAAAANWgAAAAAAAABAAAAMjRoAAAAAAAANGgAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADZoAAAAAAAANmgAAAAAAAAAAAAAAADwvw"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "2dbg"
					},
					"BAAAADRoAAAAAAAANWgAAAAAAAAAAAAANWgAAAAAAAA2aAAAAAAAAAAAAAA2aAAAAAAAADdoAAAAAAAAAAAAADdoAAAAAAAAOGgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADRoAAAAAAAANGgAAAAAAAAAAAAAAADwvw"
				],
				[
					383,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADhoAAAAAAAAOmgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADhoAAAAAAAAOGgAAAAAAAAAAAAAAADwvw"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAADloAAAAAAAAOmgAAAAAAAAAAAAAOmgAAAAAAAA7aAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADloAAAAAAAAOWgAAAAAAAAAAAAAAADwvw"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG9GAAAAAAAAcEYAAAAAAAAAAAAAcEYAAAAAAAB6RgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9GAAAAAAAAb0YAAAAAAAAAAAAAAADwvw"
				],
				[
					409,
					1,
					"left_delete",
					null,
					"AQAAAHhGAAAAAAAAeEYAAAAAAAACAAAAICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHpGAAAAAAAAekYAAAAAAAAAAAAAAADwvw"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "ws2dbg"
					},
					"BgAAAHhGAAAAAAAAeUYAAAAAAAAAAAAAeUYAAAAAAAB6RgAAAAAAAAAAAAB6RgAAAAAAAHtGAAAAAAAAAAAAAHtGAAAAAAAAfEYAAAAAAAAAAAAAfEYAAAAAAAB9RgAAAAAAAAAAAAB9RgAAAAAAAH5GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHhGAAAAAAAAeEYAAAAAAAAAAAAAAADwvw"
				],
				[
					411,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH5GAAAAAAAAgEYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH5GAAAAAAAAfkYAAAAAAAAAAAAAAADwvw"
				],
				[
					422,
					1,
					"cut",
					null,
					"AQAAAHFGAAAAAAAAcUYAAAAAAAARAAAAICAgICAgIHdzMmRiZygpCiA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHFGAAAAAAAAgkYAAAAAAAAAAAAAAAAgQA"
				],
				[
					478,
					1,
					"cut",
					null,
					"AQAAAK5NAAAAAAAArk0AAAAAAAAnAAAAICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3cycsIHdzKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK5NAAAAAAAA1U0AAAAAAAAAAAAAAADwvw"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "globalThis.dbg"
					},
					"DgAAAMZNAAAAAAAAx00AAAAAAAAAAAAAx00AAAAAAADITQAAAAAAAAAAAADITQAAAAAAAMlNAAAAAAAAAAAAAMlNAAAAAAAAyk0AAAAAAAAAAAAAyk0AAAAAAADLTQAAAAAAAAAAAADLTQAAAAAAAMxNAAAAAAAAAAAAAMxNAAAAAAAAzU0AAAAAAAAAAAAAzU0AAAAAAADOTQAAAAAAAAAAAADOTQAAAAAAAM9NAAAAAAAAAAAAAM9NAAAAAAAA0E0AAAAAAAAAAAAA0E0AAAAAAADRTQAAAAAAAAAAAADRTQAAAAAAANJNAAAAAAAAAAAAANJNAAAAAAAA000AAAAAAAAAAAAA000AAAAAAADUTQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMZNAAAAAAAAxk0AAAAAAAAAAAAAAADwvw"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANRNAAAAAAAA1U0AAAAAAAAAAAAA1U0AAAAAAADWTQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANRNAAAAAAAA1E0AAAAAAAAAAAAAAADwvw"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANZNAAAAAAAA100AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZNAAAAAAAA1k0AAAAAAAAAAAAAAADwvw"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAA5OAAAAAAAAD04AAAAAAAAAAAAAD04AAAAAAAAQTgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA5OAAAAAAAADk4AAAAAAAAAAAAAAADwvw"
				],
				[
					582,
					2,
					"left_delete",
					null,
					"AgAAAA9OAAAAAAAAD04AAAAAAAABAAAALw5OAAAAAAAADk4AAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABBOAAAAAAAAEE4AAAAAAAAAAAAAAADwvw"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAABlOAAAAAAAAGk4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABlOAAAAAAAAGU4AAAAAAAAAAAAAAADwvw"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABpOAAAAAAAAG04AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABpOAAAAAAAAGk4AAAAAAAAAAAAAAADwvw"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAACBOAAAAAAAAIU4AAAAAAAAAAAAAIU4AAAAAAAAiTgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACBOAAAAAAAAIE4AAAAAAAAAAAAAAADwvw"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAKtLAAAAAAAArEsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKtLAAAAAAAAq0sAAAAAAAAAAAAAAADwvw"
				],
				[
					593,
					1,
					"run_macro_file",
					{
						"event":
						{
							"modifier_keys":
							{
							}
						},
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AwAAAL9LAAAAAAAAwEsAAAAAAAAAAAAAwEsAAAAAAADKSwAAAAAAAAAAAADKSwAAAAAAAMxLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALFLAAAAAAAAsUsAAAAAAAAAAAAAAADwvw"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AwAAAMxLAAAAAAAAzUsAAAAAAAAAAAAAwEsAAAAAAADASwAAAAAAAAwAAAAgICAgICAgICAgICDASwAAAAAAAMpLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMxLAAAAAAAAzEsAAAAAAAAAAAAAAADwvw"
				],
				[
					595,
					1,
					"left_delete",
					null,
					"AwAAAMpLAAAAAAAAyksAAAAAAAABAAAAfcBLAAAAAAAAwEsAAAAAAAAKAAAAICAgICAgICAgIMBLAAAAAAAAzEsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMtLAAAAAAAAy0sAAAAAAAAAAAAAAADwvw"
				],
				[
					599,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AgAAALFLAAAAAAAAsksAAAAAAAAAAAAAwUsAAAAAAADBSwAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALFLAAAAAAAAsUsAAAAAAAAAAAAAAADwvw"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"BAAAAKVLAAAAAAAApksAAAAAAAAAAAAApksAAAAAAACmSwAAAAAAAA4AAAAgIGxldCB7Y2hpbGR9IKZLAAAAAAAAp0sAAAAAAAAAAAAAp0sAAAAAAACoSwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALNLAAAAAAAApUsAAAAAAAAAAAAAAADwvw"
				],
				[
					677,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKhLAAAAAAAAqUsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKhLAAAAAAAAqEsAAAAAAAAAAAAAAADwvw"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"BAAAALdNAAAAAAAAuE0AAAAAAAAAAAAAuE0AAAAAAAC4TQAAAAAAAAUAAABjaGlsZLhNAAAAAAAAuU0AAAAAAAAAAAAAuU0AAAAAAAC6TQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALdNAAAAAAAAvE0AAAAAAAAAAAAAAADwvw"
				],
				[
					688,
					1,
					"paste",
					null,
					"AgAAALdNAAAAAAAAwk0AAAAAAAAAAAAAwk0AAAAAAADCTQAAAAAAAAMAAABkYmc",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALdNAAAAAAAAuk0AAAAAAAAAAAAAAADwvw"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"BAAAALZNAAAAAAAAt00AAAAAAAAAAAAAt00AAAAAAAC3TQAAAAAAAA0AAAAgc29ja2V0cy5hZGQgt00AAAAAAAC4TQAAAAAAAAAAAAC4TQAAAAAAALlNAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALZNAAAAAAAAw00AAAAAAAAAAAAAAADwvw"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAALtNAAAAAAAAvE0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALtNAAAAAAAAu00AAAAAAAAAAAAAAADwvw"
				],
				[
					697,
					1,
					"left_delete",
					null,
					"AQAAALtNAAAAAAAAu00AAAAAAAABAAAAew",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALxNAAAAAAAAvE0AAAAAAAAAAAAAAADwvw"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAMxNAAAAAAAAzU0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMxNAAAAAAAAzE0AAAAAAAAAAAAAAADwvw"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": " child:"
					},
					"BwAAAM1NAAAAAAAAzk0AAAAAAAAAAAAAzk0AAAAAAADPTQAAAAAAAAAAAADPTQAAAAAAANBNAAAAAAAAAAAAANBNAAAAAAAA0U0AAAAAAAAAAAAA0U0AAAAAAADSTQAAAAAAAAAAAADSTQAAAAAAANNNAAAAAAAAAAAAANNNAAAAAAAA1E0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM1NAAAAAAAAzU0AAAAAAAAAAAAAAADwvw"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANRNAAAAAAAA1U0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANRNAAAAAAAA1E0AAAAAAAAAAAAAAADwvw"
				],
				[
					704,
					1,
					"left_delete",
					null,
					"AQAAAPpNAAAAAAAA+k0AAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPtNAAAAAAAA+00AAAAAAAD////////vfw"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAPpNAAAAAAAA+00AAAAAAAAAAAAA+00AAAAAAAD8TQAAAAAAAAAAAAD8TQAAAAAAAP1NAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPpNAAAAAAAA+k0AAAAAAAAAAAAAAADwvw"
				],
				[
					708,
					9,
					"left_delete",
					null,
					"CQAAACFOAAAAAAAAIU4AAAAAAAABAAAAfSBOAAAAAAAAIE4AAAAAAAABAAAAIB9OAAAAAAAAH04AAAAAAAABAAAAZB5OAAAAAAAAHk4AAAAAAAABAAAAbB1OAAAAAAAAHU4AAAAAAAABAAAAaRxOAAAAAAAAHE4AAAAAAAABAAAAaBtOAAAAAAAAG04AAAAAAAABAAAAYxpOAAAAAAAAGk4AAAAAAAABAAAAIBlOAAAAAAAAGU4AAAAAAAABAAAAew",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACJOAAAAAAAAIk4AAAAAAAAAAAAAAADwvw"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "dbg"
					},
					"AwAAABlOAAAAAAAAGk4AAAAAAAAAAAAAGk4AAAAAAAAbTgAAAAAAAAAAAAAbTgAAAAAAABxOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABlOAAAAAAAAGU4AAAAAAAAAAAAAAADwvw"
				],
				[
					730,
					1,
					"cut",
					null,
					"AQAAAMVXAAAAAAAAxVcAAAAAAAAhAAAAICAgICAgICAgICAgICAgIHdzMmRiZyh3cywgZGJnKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMVXAAAAAAAA5lcAAAAAAAAAAAAAAAAAAA"
				],
				[
					734,
					1,
					"paste",
					null,
					"AQAAAGFXAAAAAAAAglcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGFXAAAAAAAAYVcAAAAAAAAAAAAAAAAAAA"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": "globalThis.db"
					},
					"DQAAAK1WAAAAAAAArlYAAAAAAAAAAAAArlYAAAAAAACvVgAAAAAAAAAAAACvVgAAAAAAALBWAAAAAAAAAAAAALBWAAAAAAAAsVYAAAAAAAAAAAAAsVYAAAAAAACyVgAAAAAAAAAAAACyVgAAAAAAALNWAAAAAAAAAAAAALNWAAAAAAAAtFYAAAAAAAAAAAAAtFYAAAAAAAC1VgAAAAAAAAAAAAC1VgAAAAAAALZWAAAAAAAAAAAAALZWAAAAAAAAt1YAAAAAAAAAAAAAt1YAAAAAAAC4VgAAAAAAAAAAAAC4VgAAAAAAALlWAAAAAAAAAAAAALlWAAAAAAAAulYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK1WAAAAAAAArVYAAAAAAAAAAAAAAADwvw"
				],
				[
					742,
					1,
					"insert",
					{
						"characters": "g="
					},
					"AgAAALpWAAAAAAAAu1YAAAAAAAAAAAAAu1YAAAAAAAC8VgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALpWAAAAAAAAulYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 12667,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"paste",
					null,
					"AQAAAFUCAAAAAAAAGgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUCAAAAAAAAVQIAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAEYDAAAAAAAARgMAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcDAAAAAAAARwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABgEAAAAAAAAGQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"paste",
					null,
					"AQAAAL4bAAAAAAAAVx0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4bAAAAAAAAvhsAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAL4bAAAAAAAA2BsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4bAAAAAAAAvhsAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEdAAAAAAAAch0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAD////////vfw"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAHEdAAAAAAAAcR0AAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIdAAAAAAAAch0AAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEdAAAAAAAAcx0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHEdAAAAAAAAcR0AAAAAAAABAAAAKHEdAAAAAAAAcR0AAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIdAAAAAAAAch0AAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAHEdAAAAAAAAch0AAAAAAAAAAAAAch0AAAAAAABzHQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAJcCAAAAAAAAnwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcCAAAAAAAAlwIAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8CAAAAAAAAnwIAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKACAAAAAAAAoAIAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAOMbAAAAAAAA6xsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMbAAAAAAAA4xsAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOsbAAAAAAAA7BsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsbAAAAAAAA6xsAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"paste",
					null,
					"AQAAAOMbAAAAAAAA7xsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMbAAAAAAAA4xsAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAO8bAAAAAAAA7xsAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAbAAAAAAAA8BsAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA8BsAAAAAAADxGwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					2,
					"left_delete",
					null,
					"AgAAAPAbAAAAAAAA8BsAAAAAAAABAAAALO8bAAAAAAAA7xsAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEbAAAAAAAA8RsAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAbAAAAAAAA8BsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 11383,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger.html",
			"settings":
			{
				"buffer_size": 441,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"right",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/portaudio2.js",
		"/usr/include/portaudio.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/portaudio.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/usr/include/portmidi.h",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/out.tmp",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/hole.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/github-userscript.js",
		"/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
		"/home/roman/Projects/an-tronics/eagle/github-userscript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"process\\b",
			"sockets.add",
			"ConnectDebugger",
			"ws2dbg",
			"StartDeb",
			"ConnectDebugger",
			"reader",
			"ws2dbg",
			"connections",
			"ws2dbg",
			"sockets",
			"FactoryClient",
			"FactoryEndpoint",
			"FactoryEndpoint(",
			"FactoryEndpoint",
			"Factory",
			"FactorySe",
			"new Proxy",
			"callHandler",
			"parseURL",
			"getCallbacks",
			"onMessage",
			"new Set",
			"RPCServer.set",
			"RPCServer",
			"StartDe",
			"send to debugger",
			"DebuggerDispatcher",
			"[Dd]ebugger",
			"[Dd]ebuger",
			"sendM",
			"StartDe",
			"StartDebugger",
			"Pm_Open",
			"PmTimestamp",
			"\\{Number\\}        buffer\\b",
			"\\{Number\\}        buffer",
			"{Number}        outputDriverInfo",
			"{Number}        stream",
			"Pm_OpenInput",
			"\\bPmEvent\\b",
			"\\bPortMidiStream\\b",
			"Pm_Open(In|Out)put\\b",
			"Pm_OpenInput\\b",
			"Pm_OpenInpu8t",
			"Pm_Open",
			"PmMessage",
			"\\bstruct\\b",
			"^typedef",
			"members",
			"putStack",
			"PmDeviceInfo",
			"PortMidiStream",
			"Pm_OpenOutput",
			"Pm_Open",
			"GenerateStructClass",
			"generateDoc",
			"MakeFFI\\b",
			"writeFileSync",
			"WriteFile\\b",
			"ConcatIterator",
			"StringGenerator",
			"s \\+= ",
			"MakeFFI",
			"hostApiSpecificStreamInfo",
			"class PaHostApiInfo",
			"PaHostApiInfo",
			"Pa_HostApiDeviceIndexToDeviceIndex",
			"Pa_Initialize",
			"new BigInt64Array",
			"sampleFormat\\b",
			"PaSampleFormat",
			"PaStreamInfo\\b",
			"Input",
			"Input\\b",
			"Input",
			"Read",
			"Pa_IsStream",
			"Pa_GetStreamReadAva",
			"Pa_GetStreamHostApiType",
			"'\\)\\, null\\, ",
			"'\\)\\, null\\, 'undefined'\\,",
			"Pa_GetStreamHostApiType",
			"GetSampleSize",
			"PaSampleFormat",
			"GetSampleSize",
			"\\.from",
			"\\.from\\b",
			"Pa_Terminate\\b",
			"GetStreamInfo\\b",
			"a\\[0\\]",
			"GetHostApiCount",
			"a = Big",
			"a = b ig",
			"get name\\b",
			"get name",
			"\n",
			";\nexport const ",
			"inspectKey",
			"\\{ structVersion\\, ",
			"structVersio",
			"^typedef",
			"enum ",
			"^const ",
			"enum ",
			"PaHostApiTypeId",
			"HostApiType\\b",
			"HostApiType",
			"PaStreamCallback\\b",
			"PaStreamCallback",
			"OpenStream\\(",
			"inspectKey",
			"HostApiInfo",
			"\\[inspectKey\\]\\(\\)",
			"Symbol.toStringTag",
			"GetHostApiInfo",
			"^define",
			"toStringTag",
			"ttoStringTag",
			" get \\[Symbol.toStringTag\\]",
			"static from\\b",
			"JS_TAG_",
			"toArrayBuffer",
			"toArray",
			"toarrayb",
			"array buffer",
			"GetVersionInifo",
			"\\bPa_[^ ]*\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"{ArrayBuffer}   buffer",
			"{ArrayBuffer}      buffer",
			"{Object|null}   outputDriverInfo",
			"{ArrayBuffer}   stream",
			", ",
			"m",
			"{ ",
			"export const ",
			"nameKey",
			", GetStream(stream)",
			"GetStream",
			"DereferenceStream",
			"export ",
			"export class ",
			"export class",
			"}\\n\n  get ",
			"); /**",
			"",
			"export const \\1 = ",
			"export function ",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 693,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-client.js",
							"function_name_status_row": 19,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1213,
									1222
								],
								[
									1238,
									1254
								],
								[
									1450,
									1459
								],
								[
									1528,
									1535
								],
								[
									1600,
									1607
								],
								[
									1885,
									1890
								],
								[
									2081,
									2092
								],
								[
									2228,
									2233
								],
								[
									2677,
									2729
								],
								[
									3107,
									3143
								],
								[
									3232,
									3248
								],
								[
									3406,
									3418
								],
								[
									3709,
									3727
								],
								[
									3794,
									3815
								],
								[
									4090,
									4098
								],
								[
									4664,
									4699
								],
								[
									4805,
									4834
								],
								[
									4890,
									4915
								],
								[
									4966,
									5024
								],
								[
									5804,
									5840
								],
								[
									5977,
									5996
								],
								[
									6452,
									6463
								],
								[
									7623,
									7660
								],
								[
									7769,
									7777
								],
								[
									7876,
									7884
								],
								[
									9376,
									9399
								],
								[
									9586,
									9614
								],
								[
									9935,
									9965
								],
								[
									10035,
									10066
								],
								[
									10372,
									10395
								],
								[
									10458,
									10482
								],
								[
									10546,
									10567
								],
								[
									10628,
									10653
								],
								[
									10693,
									10715
								],
								[
									10777,
									10812
								],
								[
									10868,
									10895
								],
								[
									11194,
									11234
								],
								[
									11369,
									11389
								],
								[
									11684,
									11703
								]
							],
							"symlist":
							[
								"WebSocket",
								"  sendMessage(msg)",
								"  source =>",
								"  line =>",
								"  line =>",
								"e =>",
								"() =>",
								"e =>",
								"SourceLine = ({ lineno, text, active, children }) =>",
								"SourceText = ({ text, filename }) =>",
								"  numDigits = n =>",
								"(line, i) =>",
								"([type, token]) =>",
								"SourceFile = props =>",
								"resp =>",
								"LoadSource(filename)",
								"Start(args, address)",
								"Connect(address)",
								"Initiate(command, address, connect = false, args)",
								"TokenizeJS(data, filename)",
								"(acc, [type, c]) =>",
								"(acc, l) =>",
								"CreateSocket(endpoint)",
								"  onOpen()",
								"  get ws()",
								"  process(callback)",
								"  .sendMessage = function(msg)",
								"GetVariables(ref = 0)",
								"UpdatePosition()",
								"StepIn()",
								"StepOut()",
								"Next()",
								"Continue()",
								"Pause()",
								"Evaluate(expression)",
								"StackTrace()",
								"SendRequest(command, args = {})",
								"(resolve, reject) =>",
								"RenderUI()"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1738261240.03,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29662,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										7386,
										7399
									],
									[
										18379,
										18392
									],
									[
										18603,
										18616
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										7345,
										7345
									],
									[
										18354,
										18354
									],
									[
										18580,
										18580
									]
								],
								"scope": "col_gutter"
							},
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3718,
										3731
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										3671,
										3671
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3694,
										3708
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										3671,
										3671
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6882,
										6896
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										6847,
										6847
									]
								],
								"scope": "col_gutter"
							},
							"col_FF8700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6816,
										6830
									]
								],
								"scope": "col_FF8700FF"
							},
							"col_FF8700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF8700FF_circle.png",
								"regions":
								[
									[
										6788,
										6788
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								26213,
								26222
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 850,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1738773457.48,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13095.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12667,
						"regions":
						{
						},
						"selection":
						[
							[
								10691,
								10691
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 379,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1738773458.28,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5031.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"file": "repredator/pre1.png",
					"selected": true,
					"semi_transient": false,
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "image"
				},
				{
					"file": "repredator/pre0.png",
					"semi_transient": true,
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "image"
				},
				{
					"file": "repredator/pre2.png",
					"semi_transient": false,
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "image"
				},
				{
					"file": "repredator/pre7.png",
					"semi_transient": false,
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "image"
				},
				{
					"file": "repredator/pre8.png",
					"semi_transient": false,
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "image"
				},
				{
					"buffer": 3,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11383,
						"regions":
						{
							"col_5F00D7FF":
							{
								"flags": 16,
								"regions":
								[
									[
										4416,
										4429
									]
								],
								"scope": "col_5F00D7FF"
							},
							"col_5F00D7FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_5F00D7FF_circle.png",
								"regions":
								[
									[
										4365,
										4365
									]
								],
								"scope": "col_gutter"
							},
							"col_87FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										5831,
										5845
									]
								],
								"scope": "col_87FF00FF"
							},
							"col_87FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_87FF00FF_circle.png",
								"regions":
								[
									[
										5793,
										5793
									]
								],
								"scope": "col_gutter"
							},
							"col_AF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										5974,
										5988
									]
								],
								"scope": "col_AF0000FF"
							},
							"col_AF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_AF0000FF_circle.png",
								"regions":
								[
									[
										5936,
										5936
									]
								],
								"scope": "col_gutter"
							},
							"col_FFD700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3768,
										3782
									],
									[
										8053,
										8067
									]
								],
								"scope": "col_FFD700FF"
							},
							"col_FFD700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFD700FF_circle.png",
								"regions":
								[
									[
										3725,
										3725
									],
									[
										8040,
										8040
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								6076,
								6076
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 173,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1738771728.76,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3339.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "debugger.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 441,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1738771731.1,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"debugger.htm",
				"debugger.html"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger",
				"debuggerprotocol.js"
			],
			[
				"portmidi",
				"/usr/include/portmidi.h"
			],
			[
				"portmidi.js",
				"portmidi.js"
			],
			[
				"portmidi.h",
				"/usr/include/portmidi.h"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-helpers",
				"os-helpers.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"portaudio.h",
				"/usr/include/portaudio.h"
			],
			[
				"portaudio",
				"portaudio.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"portaudio.js",
				"portaudio.js"
			],
			[
				"portaudio2.js",
				"portaudio2.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
