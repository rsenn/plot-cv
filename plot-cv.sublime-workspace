{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CURL_LIB",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"Circ",
				"CircuitJS"
			],
			[
				"dep",
				"dependency"
			],
			[
				"opt",
				"optimization"
			],
			[
				"OPENCV_LIB",
				"OPENCV_LIBRARIES"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"relat",
				"relativeTo"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1438,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12391,
								12412
							],
							[
								12608,
								12617
							],
							[
								12926,
								12933
							],
							[
								13004,
								13015
							],
							[
								13117,
								13128
							],
							[
								13521,
								13526
							],
							[
								13597,
								13601
							],
							[
								13807,
								13812
							],
							[
								14093,
								14113
							],
							[
								14240,
								14256
							],
							[
								14319,
								14341
							],
							[
								14651,
								14671
							],
							[
								14747,
								14775
							],
							[
								14977,
								15013
							],
							[
								15064,
								15081
							],
							[
								15563,
								15588
							],
							[
								15915,
								15931
							],
							[
								15985,
								16041
							],
							[
								16555,
								16579
							],
							[
								17216,
								17251
							],
							[
								17545,
								17549
							],
							[
								18125,
								18140
							],
							[
								19034,
								19052
							],
							[
								19237,
								19259
							],
							[
								22077,
								22100
							],
							[
								22567,
								22596
							],
							[
								22881,
								22936
							],
							[
								23165,
								23179
							],
							[
								23293,
								23315
							],
							[
								23472,
								23488
							],
							[
								23787,
								23811
							],
							[
								24056,
								24078
							],
							[
								24271,
								24298
							],
							[
								24498,
								24523
							],
							[
								24619,
								24625
							],
							[
								24875,
								24898
							],
							[
								25051,
								25080
							],
							[
								25247,
								25271
							],
							[
								28576,
								28592
							],
							[
								28696,
								28722
							],
							[
								29650,
								29688
							],
							[
								30944,
								30986
							],
							[
								31371,
								31377
							],
							[
								31535,
								31607
							],
							[
								32805,
								32882
							],
							[
								33971,
								33989
							],
							[
								34897,
								34926
							],
							[
								35146,
								35170
							],
							[
								35635,
								35657
							],
							[
								36840,
								36876
							],
							[
								38774,
								38802
							],
							[
								39561,
								39588
							],
							[
								40969,
								41011
							],
							[
								42206,
								42227
							],
							[
								44195,
								44205
							],
							[
								44511,
								44537
							],
							[
								45188,
								45248
							],
							[
								46058,
								46124
							],
							[
								46658,
								46736
							],
							[
								47062,
								47101
							],
							[
								50431,
								50467
							],
							[
								50671,
								50707
							],
							[
								50822,
								50858
							],
							[
								51451,
								51468
							],
							[
								51779,
								51834
							],
							[
								52336,
								52348
							],
							[
								53348,
								53361
							],
							[
								54848,
								54866
							],
							[
								55030,
								55049
							],
							[
								56799,
								56839
							],
							[
								57199,
								57239
							],
							[
								58296,
								58343
							],
							[
								58990,
								59039
							],
							[
								59449,
								59471
							],
							[
								59789,
								59813
							],
							[
								61754,
								61779
							],
							[
								62185,
								62211
							],
							[
								62486,
								62535
							],
							[
								63277,
								63312
							],
							[
								63747,
								63784
							],
							[
								64264,
								64297
							],
							[
								67106,
								67145
							],
							[
								67492,
								67528
							],
							[
								68015,
								68020
							],
							[
								68263,
								68313
							],
							[
								69413,
								69464
							],
							[
								69906,
								69927
							],
							[
								70109,
								70130
							],
							[
								70479,
								70503
							],
							[
								70749,
								70770
							],
							[
								71007,
								71029
							],
							[
								71391,
								71448
							],
							[
								75662,
								75690
							],
							[
								76596,
								76613
							],
							[
								76731,
								76763
							],
							[
								77858,
								77906
							],
							[
								78847,
								78927
							],
							[
								79327,
								79347
							],
							[
								79942,
								79956
							],
							[
								80847,
								80863
							],
							[
								81010,
								81029
							],
							[
								81099,
								81130
							],
							[
								81142,
								81146
							],
							[
								81217,
								81233
							],
							[
								81250,
								81254
							],
							[
								81272,
								81287
							],
							[
								81434,
								81449
							],
							[
								81456,
								81460
							],
							[
								81537,
								81552
							],
							[
								81583,
								81618
							],
							[
								81645,
								81653
							],
							[
								81867,
								81907
							],
							[
								82104,
								82161
							],
							[
								82230,
								82259
							],
							[
								82630,
								82636
							],
							[
								83483,
								83516
							],
							[
								83746,
								83752
							],
							[
								84013,
								84043
							],
							[
								84866,
								84870
							],
							[
								85317,
								85347
							],
							[
								85437,
								85444
							],
							[
								85487,
								85507
							],
							[
								85525,
								85541
							],
							[
								85696,
								85712
							],
							[
								85754,
								85769
							],
							[
								85784,
								85804
							],
							[
								85822,
								85827
							],
							[
								85851,
								85900
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAABYEQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1439,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12377,
								12398
							],
							[
								12594,
								12603
							],
							[
								12912,
								12919
							],
							[
								12990,
								13001
							],
							[
								13103,
								13114
							],
							[
								13507,
								13512
							],
							[
								13583,
								13587
							],
							[
								13793,
								13798
							],
							[
								14079,
								14099
							],
							[
								14226,
								14242
							],
							[
								14305,
								14327
							],
							[
								14637,
								14657
							],
							[
								14733,
								14761
							],
							[
								14963,
								14999
							],
							[
								15050,
								15067
							],
							[
								15549,
								15574
							],
							[
								15901,
								15917
							],
							[
								15971,
								16027
							],
							[
								16541,
								16565
							],
							[
								17202,
								17237
							],
							[
								17531,
								17535
							],
							[
								18111,
								18126
							],
							[
								19020,
								19038
							],
							[
								19223,
								19245
							],
							[
								22063,
								22086
							],
							[
								22553,
								22582
							],
							[
								22867,
								22922
							],
							[
								23151,
								23165
							],
							[
								23279,
								23301
							],
							[
								23458,
								23474
							],
							[
								23773,
								23797
							],
							[
								24042,
								24064
							],
							[
								24257,
								24284
							],
							[
								24484,
								24509
							],
							[
								24605,
								24611
							],
							[
								24861,
								24884
							],
							[
								25037,
								25066
							],
							[
								25233,
								25257
							],
							[
								28562,
								28578
							],
							[
								28682,
								28708
							],
							[
								29636,
								29674
							],
							[
								30930,
								30972
							],
							[
								31357,
								31363
							],
							[
								31521,
								31593
							],
							[
								32791,
								32868
							],
							[
								33957,
								33975
							],
							[
								34883,
								34912
							],
							[
								35132,
								35156
							],
							[
								35621,
								35643
							],
							[
								36826,
								36862
							],
							[
								38760,
								38788
							],
							[
								39547,
								39574
							],
							[
								40955,
								40997
							],
							[
								42192,
								42213
							],
							[
								44181,
								44191
							],
							[
								44497,
								44523
							],
							[
								45174,
								45234
							],
							[
								46044,
								46110
							],
							[
								46644,
								46722
							],
							[
								47048,
								47087
							],
							[
								50417,
								50453
							],
							[
								50657,
								50693
							],
							[
								50808,
								50844
							],
							[
								51437,
								51454
							],
							[
								51765,
								51820
							],
							[
								52322,
								52334
							],
							[
								53334,
								53347
							],
							[
								54834,
								54852
							],
							[
								55016,
								55035
							],
							[
								56785,
								56825
							],
							[
								57185,
								57225
							],
							[
								58282,
								58329
							],
							[
								58976,
								59025
							],
							[
								59435,
								59457
							],
							[
								59775,
								59799
							],
							[
								61740,
								61765
							],
							[
								62171,
								62197
							],
							[
								62472,
								62521
							],
							[
								63263,
								63298
							],
							[
								63733,
								63770
							],
							[
								64250,
								64283
							],
							[
								67092,
								67131
							],
							[
								67478,
								67514
							],
							[
								68001,
								68006
							],
							[
								68249,
								68299
							],
							[
								69399,
								69450
							],
							[
								69892,
								69913
							],
							[
								70095,
								70116
							],
							[
								70465,
								70489
							],
							[
								70735,
								70756
							],
							[
								70993,
								71015
							],
							[
								71377,
								71434
							],
							[
								75648,
								75676
							],
							[
								76582,
								76599
							],
							[
								76717,
								76749
							],
							[
								77844,
								77892
							],
							[
								78833,
								78913
							],
							[
								79313,
								79333
							],
							[
								79928,
								79942
							],
							[
								80833,
								80849
							],
							[
								80996,
								81015
							],
							[
								81085,
								81116
							],
							[
								81128,
								81132
							],
							[
								81203,
								81219
							],
							[
								81236,
								81240
							],
							[
								81258,
								81273
							],
							[
								81420,
								81435
							],
							[
								81442,
								81446
							],
							[
								81523,
								81538
							],
							[
								81569,
								81604
							],
							[
								81631,
								81639
							],
							[
								81853,
								81893
							],
							[
								82090,
								82147
							],
							[
								82216,
								82245
							],
							[
								82616,
								82622
							],
							[
								83469,
								83502
							],
							[
								83732,
								83738
							],
							[
								83999,
								84029
							],
							[
								84852,
								84856
							],
							[
								85303,
								85333
							],
							[
								85423,
								85430
							],
							[
								85473,
								85493
							],
							[
								85511,
								85527
							],
							[
								85682,
								85698
							],
							[
								85740,
								85755
							],
							[
								85770,
								85790
							],
							[
								85808,
								85813
							],
							[
								85837,
								85886
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAABYEQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1440,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12391,
								12412
							],
							[
								12608,
								12617
							],
							[
								12926,
								12933
							],
							[
								13004,
								13015
							],
							[
								13117,
								13128
							],
							[
								13521,
								13526
							],
							[
								13597,
								13601
							],
							[
								13807,
								13812
							],
							[
								14093,
								14113
							],
							[
								14240,
								14256
							],
							[
								14319,
								14341
							],
							[
								14651,
								14671
							],
							[
								14747,
								14775
							],
							[
								14977,
								15013
							],
							[
								15064,
								15081
							],
							[
								15563,
								15588
							],
							[
								15915,
								15931
							],
							[
								15985,
								16041
							],
							[
								16555,
								16579
							],
							[
								17216,
								17251
							],
							[
								17545,
								17549
							],
							[
								18125,
								18140
							],
							[
								19034,
								19052
							],
							[
								19237,
								19259
							],
							[
								22077,
								22100
							],
							[
								22567,
								22596
							],
							[
								22881,
								22936
							],
							[
								23165,
								23179
							],
							[
								23293,
								23315
							],
							[
								23472,
								23488
							],
							[
								23787,
								23811
							],
							[
								24056,
								24078
							],
							[
								24271,
								24298
							],
							[
								24498,
								24523
							],
							[
								24619,
								24625
							],
							[
								24875,
								24898
							],
							[
								25051,
								25080
							],
							[
								25247,
								25271
							],
							[
								28576,
								28592
							],
							[
								28696,
								28722
							],
							[
								29650,
								29688
							],
							[
								30944,
								30986
							],
							[
								31371,
								31377
							],
							[
								31535,
								31607
							],
							[
								32805,
								32882
							],
							[
								33971,
								33989
							],
							[
								34897,
								34926
							],
							[
								35146,
								35170
							],
							[
								35635,
								35657
							],
							[
								36840,
								36876
							],
							[
								38774,
								38802
							],
							[
								39561,
								39588
							],
							[
								40969,
								41011
							],
							[
								42206,
								42227
							],
							[
								44195,
								44205
							],
							[
								44511,
								44537
							],
							[
								45188,
								45248
							],
							[
								46058,
								46124
							],
							[
								46658,
								46736
							],
							[
								47062,
								47101
							],
							[
								50431,
								50467
							],
							[
								50671,
								50707
							],
							[
								50822,
								50858
							],
							[
								51451,
								51468
							],
							[
								51779,
								51834
							],
							[
								52336,
								52348
							],
							[
								53348,
								53361
							],
							[
								54848,
								54866
							],
							[
								55030,
								55049
							],
							[
								56799,
								56839
							],
							[
								57199,
								57239
							],
							[
								58296,
								58343
							],
							[
								58990,
								59039
							],
							[
								59449,
								59471
							],
							[
								59789,
								59813
							],
							[
								61754,
								61779
							],
							[
								62185,
								62211
							],
							[
								62486,
								62535
							],
							[
								63277,
								63312
							],
							[
								63747,
								63784
							],
							[
								64264,
								64297
							],
							[
								67106,
								67145
							],
							[
								67492,
								67528
							],
							[
								68015,
								68020
							],
							[
								68263,
								68313
							],
							[
								69413,
								69464
							],
							[
								69906,
								69927
							],
							[
								70109,
								70130
							],
							[
								70479,
								70503
							],
							[
								70749,
								70770
							],
							[
								71007,
								71029
							],
							[
								71391,
								71448
							],
							[
								75662,
								75690
							],
							[
								76596,
								76613
							],
							[
								76731,
								76763
							],
							[
								77858,
								77906
							],
							[
								78847,
								78927
							],
							[
								79327,
								79347
							],
							[
								79942,
								79956
							],
							[
								80847,
								80863
							],
							[
								81010,
								81029
							],
							[
								81099,
								81130
							],
							[
								81142,
								81146
							],
							[
								81217,
								81233
							],
							[
								81250,
								81254
							],
							[
								81272,
								81287
							],
							[
								81434,
								81449
							],
							[
								81456,
								81460
							],
							[
								81537,
								81552
							],
							[
								81583,
								81618
							],
							[
								81645,
								81653
							],
							[
								81867,
								81907
							],
							[
								82104,
								82161
							],
							[
								82230,
								82259
							],
							[
								82630,
								82636
							],
							[
								83483,
								83516
							],
							[
								83746,
								83752
							],
							[
								84013,
								84043
							],
							[
								84866,
								84870
							],
							[
								85317,
								85347
							],
							[
								85437,
								85444
							],
							[
								85487,
								85507
							],
							[
								85525,
								85541
							],
							[
								85696,
								85712
							],
							[
								85754,
								85769
							],
							[
								85784,
								85804
							],
							[
								85822,
								85827
							],
							[
								85851,
								85900
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1441,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1442,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12391,
								12412
							],
							[
								12608,
								12617
							],
							[
								12926,
								12933
							],
							[
								13004,
								13015
							],
							[
								13117,
								13128
							],
							[
								13521,
								13526
							],
							[
								13597,
								13601
							],
							[
								13807,
								13812
							],
							[
								14093,
								14113
							],
							[
								14240,
								14256
							],
							[
								14319,
								14341
							],
							[
								14651,
								14671
							],
							[
								14747,
								14775
							],
							[
								14977,
								15013
							],
							[
								15064,
								15081
							],
							[
								15563,
								15588
							],
							[
								15915,
								15931
							],
							[
								15985,
								16041
							],
							[
								16555,
								16579
							],
							[
								17216,
								17251
							],
							[
								17545,
								17549
							],
							[
								18125,
								18140
							],
							[
								19034,
								19052
							],
							[
								19237,
								19259
							],
							[
								22077,
								22100
							],
							[
								22567,
								22596
							],
							[
								22881,
								22936
							],
							[
								23165,
								23179
							],
							[
								23293,
								23315
							],
							[
								23472,
								23488
							],
							[
								23787,
								23811
							],
							[
								24056,
								24078
							],
							[
								24271,
								24298
							],
							[
								24498,
								24523
							],
							[
								24619,
								24625
							],
							[
								24875,
								24898
							],
							[
								25051,
								25080
							],
							[
								25247,
								25271
							],
							[
								28576,
								28592
							],
							[
								28696,
								28722
							],
							[
								29650,
								29688
							],
							[
								30944,
								30986
							],
							[
								31371,
								31377
							],
							[
								31535,
								31607
							],
							[
								32805,
								32882
							],
							[
								33971,
								33989
							],
							[
								34897,
								34926
							],
							[
								35146,
								35170
							],
							[
								35635,
								35657
							],
							[
								36840,
								36876
							],
							[
								38774,
								38802
							],
							[
								39561,
								39588
							],
							[
								40969,
								41011
							],
							[
								42206,
								42227
							],
							[
								44195,
								44205
							],
							[
								44511,
								44537
							],
							[
								45188,
								45248
							],
							[
								46058,
								46124
							],
							[
								46658,
								46736
							],
							[
								47062,
								47101
							],
							[
								50431,
								50467
							],
							[
								50671,
								50707
							],
							[
								50822,
								50858
							],
							[
								51451,
								51468
							],
							[
								51779,
								51834
							],
							[
								52336,
								52348
							],
							[
								53348,
								53361
							],
							[
								54848,
								54866
							],
							[
								55030,
								55049
							],
							[
								56799,
								56839
							],
							[
								57199,
								57239
							],
							[
								58296,
								58343
							],
							[
								58990,
								59039
							],
							[
								59449,
								59471
							],
							[
								59789,
								59813
							],
							[
								61754,
								61779
							],
							[
								62185,
								62211
							],
							[
								62486,
								62535
							],
							[
								63277,
								63312
							],
							[
								63747,
								63784
							],
							[
								64264,
								64297
							],
							[
								67106,
								67145
							],
							[
								67492,
								67528
							],
							[
								68015,
								68020
							],
							[
								68263,
								68313
							],
							[
								69413,
								69464
							],
							[
								69906,
								69927
							],
							[
								70109,
								70130
							],
							[
								70479,
								70503
							],
							[
								70749,
								70770
							],
							[
								71007,
								71029
							],
							[
								71391,
								71448
							],
							[
								75662,
								75690
							],
							[
								76596,
								76613
							],
							[
								76731,
								76763
							],
							[
								77858,
								77906
							],
							[
								78847,
								78927
							],
							[
								79327,
								79347
							],
							[
								79942,
								79956
							],
							[
								80847,
								80863
							],
							[
								81010,
								81029
							],
							[
								81099,
								81130
							],
							[
								81142,
								81146
							],
							[
								81217,
								81233
							],
							[
								81250,
								81254
							],
							[
								81272,
								81287
							],
							[
								81434,
								81449
							],
							[
								81456,
								81460
							],
							[
								81537,
								81552
							],
							[
								81583,
								81618
							],
							[
								81645,
								81653
							],
							[
								81867,
								81907
							],
							[
								82104,
								82161
							],
							[
								82230,
								82259
							],
							[
								82630,
								82636
							],
							[
								83483,
								83516
							],
							[
								83746,
								83752
							],
							[
								84013,
								84043
							],
							[
								84866,
								84870
							],
							[
								85317,
								85347
							],
							[
								85437,
								85444
							],
							[
								85487,
								85507
							],
							[
								85525,
								85541
							],
							[
								85696,
								85712
							],
							[
								85754,
								85769
							],
							[
								85784,
								85804
							],
							[
								85822,
								85827
							],
							[
								85851,
								85900
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"AQAAAAAAAAAAAAAAWBEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1443,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12391,
								12412
							],
							[
								12608,
								12617
							],
							[
								12926,
								12933
							],
							[
								13004,
								13015
							],
							[
								13117,
								13128
							],
							[
								13521,
								13526
							],
							[
								13597,
								13601
							],
							[
								13807,
								13812
							],
							[
								14093,
								14113
							],
							[
								14240,
								14256
							],
							[
								14319,
								14341
							],
							[
								14651,
								14671
							],
							[
								14747,
								14775
							],
							[
								14977,
								15013
							],
							[
								15064,
								15081
							],
							[
								15563,
								15588
							],
							[
								15915,
								15931
							],
							[
								15985,
								16041
							],
							[
								16555,
								16579
							],
							[
								17216,
								17251
							],
							[
								17545,
								17549
							],
							[
								18125,
								18140
							],
							[
								19034,
								19052
							],
							[
								19237,
								19259
							],
							[
								21696,
								21719
							],
							[
								22186,
								22215
							],
							[
								22500,
								22555
							],
							[
								22784,
								22798
							],
							[
								22912,
								22934
							],
							[
								23091,
								23107
							],
							[
								23406,
								23430
							],
							[
								23675,
								23697
							],
							[
								23890,
								23917
							],
							[
								24117,
								24142
							],
							[
								24238,
								24244
							],
							[
								24494,
								24517
							],
							[
								24670,
								24699
							],
							[
								24866,
								24890
							],
							[
								28195,
								28211
							],
							[
								28315,
								28341
							],
							[
								29269,
								29307
							],
							[
								30563,
								30605
							],
							[
								30990,
								30996
							],
							[
								31154,
								31226
							],
							[
								32424,
								32501
							],
							[
								33590,
								33608
							],
							[
								34516,
								34545
							],
							[
								34765,
								34789
							],
							[
								35254,
								35276
							],
							[
								36459,
								36495
							],
							[
								38393,
								38421
							],
							[
								39180,
								39207
							],
							[
								40588,
								40630
							],
							[
								41825,
								41846
							],
							[
								43814,
								43824
							],
							[
								44130,
								44156
							],
							[
								44807,
								44867
							],
							[
								45677,
								45743
							],
							[
								46277,
								46355
							],
							[
								46681,
								46720
							],
							[
								50050,
								50086
							],
							[
								50290,
								50326
							],
							[
								50441,
								50477
							],
							[
								51070,
								51087
							],
							[
								51398,
								51453
							],
							[
								51955,
								51967
							],
							[
								52967,
								52980
							],
							[
								54467,
								54485
							],
							[
								54649,
								54668
							],
							[
								56418,
								56458
							],
							[
								56818,
								56858
							],
							[
								57915,
								57962
							],
							[
								58609,
								58658
							],
							[
								59068,
								59090
							],
							[
								59408,
								59432
							],
							[
								61373,
								61398
							],
							[
								61804,
								61830
							],
							[
								62105,
								62154
							],
							[
								62896,
								62931
							],
							[
								63366,
								63403
							],
							[
								63883,
								63916
							],
							[
								66725,
								66764
							],
							[
								67111,
								67147
							],
							[
								67634,
								67639
							],
							[
								67882,
								67932
							],
							[
								69032,
								69083
							],
							[
								69525,
								69546
							],
							[
								69728,
								69749
							],
							[
								70098,
								70122
							],
							[
								70368,
								70389
							],
							[
								70626,
								70648
							],
							[
								71010,
								71067
							],
							[
								75281,
								75309
							],
							[
								76215,
								76232
							],
							[
								76350,
								76382
							],
							[
								77477,
								77525
							],
							[
								78466,
								78546
							],
							[
								78946,
								78966
							],
							[
								79561,
								79575
							],
							[
								80466,
								80482
							],
							[
								80629,
								80648
							],
							[
								80718,
								80749
							],
							[
								80761,
								80765
							],
							[
								80836,
								80852
							],
							[
								80869,
								80873
							],
							[
								80891,
								80906
							],
							[
								81053,
								81068
							],
							[
								81075,
								81079
							],
							[
								81156,
								81171
							],
							[
								81202,
								81237
							],
							[
								81264,
								81272
							],
							[
								81486,
								81526
							],
							[
								81723,
								81780
							],
							[
								81849,
								81878
							],
							[
								82249,
								82255
							],
							[
								83102,
								83135
							],
							[
								83365,
								83371
							],
							[
								83632,
								83662
							],
							[
								84485,
								84489
							],
							[
								84936,
								84966
							],
							[
								85056,
								85063
							],
							[
								85106,
								85126
							],
							[
								85144,
								85160
							],
							[
								85315,
								85331
							],
							[
								85373,
								85388
							],
							[
								85403,
								85423
							],
							[
								85441,
								85446
							],
							[
								85470,
								85519
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAABYEQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
						"symkeys":
						[
							[
								1965,
								1989
							],
							[
								2167,
								2177
							],
							[
								2196,
								2222
							],
							[
								2293,
								2339
							],
							[
								2434,
								2443
							],
							[
								2609,
								2617
							],
							[
								2802,
								2808
							],
							[
								2905,
								2911
							],
							[
								2945,
								2985
							],
							[
								3083,
								3096
							],
							[
								3411,
								3423
							],
							[
								3424,
								3449
							],
							[
								3611,
								3635
							],
							[
								3727,
								3759
							],
							[
								3989,
								3993
							],
							[
								4267,
								4273
							],
							[
								4615,
								4631
							],
							[
								4648,
								4665
							],
							[
								4670,
								4687
							],
							[
								4692,
								4724
							],
							[
								5340,
								5345
							],
							[
								5899,
								5905
							],
							[
								5910,
								5930
							],
							[
								6551,
								6575
							],
							[
								6587,
								6615
							],
							[
								6719,
								6753
							],
							[
								6987,
								6992
							],
							[
								7005,
								7036
							],
							[
								7410,
								7425
							],
							[
								7529,
								7566
							],
							[
								7751,
								7756
							],
							[
								8047,
								8052
							],
							[
								9010,
								9034
							],
							[
								9146,
								9151
							],
							[
								10032,
								10051
							],
							[
								10121,
								10126
							],
							[
								10254,
								10263
							],
							[
								10341,
								10349
							],
							[
								10438,
								10443
							],
							[
								10747,
								10753
							],
							[
								11094,
								11107
							],
							[
								11183,
								11193
							],
							[
								11325,
								11339
							],
							[
								11485,
								11501
							],
							[
								11629,
								11642
							],
							[
								12122,
								12133
							],
							[
								12391,
								12412
							],
							[
								12608,
								12617
							],
							[
								12926,
								12933
							],
							[
								13004,
								13015
							],
							[
								13117,
								13128
							],
							[
								13521,
								13526
							],
							[
								13597,
								13601
							],
							[
								13807,
								13812
							],
							[
								14093,
								14113
							],
							[
								14240,
								14256
							],
							[
								14319,
								14341
							],
							[
								14651,
								14671
							],
							[
								14747,
								14775
							],
							[
								14977,
								15013
							],
							[
								15064,
								15081
							],
							[
								15563,
								15588
							],
							[
								15915,
								15931
							],
							[
								15985,
								16041
							],
							[
								16555,
								16579
							],
							[
								17216,
								17251
							],
							[
								17545,
								17549
							],
							[
								18125,
								18140
							],
							[
								19034,
								19052
							],
							[
								19237,
								19259
							],
							[
								21696,
								21719
							],
							[
								22186,
								22215
							],
							[
								22500,
								22555
							],
							[
								22784,
								22798
							],
							[
								22912,
								22934
							],
							[
								23091,
								23107
							],
							[
								23406,
								23430
							],
							[
								23675,
								23697
							],
							[
								23890,
								23917
							],
							[
								24117,
								24142
							],
							[
								24238,
								24244
							],
							[
								24494,
								24517
							],
							[
								24670,
								24699
							],
							[
								24866,
								24890
							],
							[
								28195,
								28211
							],
							[
								28315,
								28341
							],
							[
								29269,
								29307
							],
							[
								30563,
								30605
							],
							[
								30990,
								30996
							],
							[
								31154,
								31226
							],
							[
								32424,
								32501
							],
							[
								33590,
								33608
							],
							[
								34516,
								34545
							],
							[
								34765,
								34789
							],
							[
								35254,
								35276
							],
							[
								36459,
								36495
							],
							[
								38393,
								38421
							],
							[
								39180,
								39207
							],
							[
								40588,
								40630
							],
							[
								41825,
								41846
							],
							[
								43814,
								43824
							],
							[
								44130,
								44156
							],
							[
								44807,
								44867
							],
							[
								45677,
								45743
							],
							[
								46277,
								46355
							],
							[
								46681,
								46720
							],
							[
								50050,
								50086
							],
							[
								50290,
								50326
							],
							[
								50441,
								50477
							],
							[
								51070,
								51087
							],
							[
								51398,
								51453
							],
							[
								51955,
								51967
							],
							[
								52967,
								52980
							],
							[
								54467,
								54485
							],
							[
								54649,
								54668
							],
							[
								56418,
								56458
							],
							[
								56818,
								56858
							],
							[
								57915,
								57962
							],
							[
								58609,
								58658
							],
							[
								59068,
								59090
							],
							[
								59408,
								59432
							],
							[
								61373,
								61398
							],
							[
								61804,
								61830
							],
							[
								62105,
								62154
							],
							[
								62896,
								62931
							],
							[
								63366,
								63403
							],
							[
								63883,
								63916
							],
							[
								66725,
								66764
							],
							[
								67111,
								67147
							],
							[
								67634,
								67639
							],
							[
								67882,
								67932
							],
							[
								69032,
								69083
							],
							[
								69525,
								69546
							],
							[
								69728,
								69749
							],
							[
								70098,
								70122
							],
							[
								70368,
								70389
							],
							[
								70626,
								70648
							],
							[
								71010,
								71067
							],
							[
								75281,
								75309
							],
							[
								76215,
								76232
							],
							[
								76350,
								76382
							],
							[
								77477,
								77525
							],
							[
								78466,
								78546
							],
							[
								78946,
								78966
							],
							[
								79561,
								79575
							],
							[
								80466,
								80482
							],
							[
								80629,
								80648
							],
							[
								80718,
								80749
							],
							[
								80761,
								80765
							],
							[
								80836,
								80852
							],
							[
								80869,
								80873
							],
							[
								80891,
								80906
							],
							[
								81053,
								81068
							],
							[
								81075,
								81079
							],
							[
								81156,
								81171
							],
							[
								81202,
								81237
							],
							[
								81264,
								81272
							],
							[
								81486,
								81526
							],
							[
								81723,
								81780
							],
							[
								81849,
								81878
							],
							[
								82249,
								82255
							],
							[
								83102,
								83135
							],
							[
								83365,
								83371
							],
							[
								83632,
								83662
							],
							[
								84485,
								84489
							],
							[
								84936,
								84966
							],
							[
								85056,
								85063
							],
							[
								85106,
								85126
							],
							[
								85144,
								85160
							],
							[
								85315,
								85331
							],
							[
								85373,
								85388
							],
							[
								85403,
								85423
							],
							[
								85441,
								85446
							],
							[
								85470,
								85519
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"ParseError",
							"constructor(msg, ast, loc)",
							"function GetStack(stack, cond, max = Infinity)",
							" frame =>",
							"frame =>",
							"Parser",
							" () =>",
							"constructor(sourceText, fileName, debug)",
							" (c, s, e) =>",
							" key =>",
							" function(...args)",
							".callback = (...args) =>",
							".trace = function debug(...args)",
							"p =>",
							"tok =>",
							"ECMAScriptParser",
							" () =>",
							" () =>",
							" (what, name, arg) =>",
							"fr =>",
							" () =>",
							" (tok, ...prefix) =>",
							" function debug(...args)",
							"error(errorMessage, astNode)",
							"handleComment(comment, start, end)",
							"() =>",
							" function(ctor, args, instance)",
							"onNewNode(node)",
							"onReturnNode(node, stackEntry, stack)",
							"() =>",
							"get()",
							"addCommentsToNodes(root)",
							" n =>",
							"tokensForNode(root)",
							" n =>",
							"(a, b) =>",
							"range =>",
							"lex()",
							"next()",
							"clearTokens()",
							"revert(to)",
							"setMode(flags)",
							"clearMode(flags)",
							"gettok(state)",
							" (fr, i) =>",
							"lookahead(offset = 0)",
							"consume()",
							"state()",
							" function()",
							"printtoks()",
							"log()",
							"a =>",
							"st =>",
							"position(tok = null)",
							"get tokenIndex()",
							"addNode(ctor, ...args)",
							"function getFn(name)",
							"function isLiteral({ type })",
							"function isTemplateLiteral({ type })",
							"function toStr(a)",
							"stackFunc = (name, fn) =>",
							"ECMAScriptParser",
							"expectIdentifier(no_keyword = false, private_id = false)",
							"expectKeywords(keywords)",
							"expectPunctuators(punctuators, ast)",
							"p =>",
							"expectLiteral()",
							"nullLiteral: () =>",
							"parseTemplateLiteral()",
							"matchKeywords(keywords)",
							"matchPunctuators(punctuators)",
							"matchIdentifier(no_keyword = false, private_id = false)",
							"matchLiteral()",
							"matchTemplateLiteral()",
							"matchStatement()",
							"matchPrimaryExpression()",
							"matchUnaryExpression()",
							"matchAssignmentExpression()",
							"matchFunctionExpression()",
							"tok =>",
							"matchMemberExpression()",
							"matchLeftHandSideExpression()",
							"parsePrimaryExpression()",
							"parseArguments()",
							" function checkRestOf()",
							"parseRemainingMemberExpression(object)",
							"parseArrowFunction(args, is_async = false)",
							"arg =>",
							"parseRemainingCallExpression(object, is_async = false, optional = false)",
							"parseNewOrCallOrMemberExpression(couldBeNewExpression, couldBeCallExpression)",
							".callback = lex =>",
							"parseLeftHandSideExpression()",
							"parsePostfixExpression()",
							"parseUnaryExpression()",
							"parseBinaryExpression(minPrecedence)",
							"parseConditionalExpression()",
							"parseAssignmentExpression()",
							"parseExpression(optional, sequence = true)",
							"parseBindingPattern()",
							"element =>",
							"parseVariableDeclaration()",
							"parseVariableDeclarationList(kind = 'var', exported = false)",
							"parseBlock(insideIteration, insideFunction, ctor = BlockStatement)",
							"parseList(insideIteration = false, insideFunction = false, check = p => false)",
							"parseObject(isClass = false, args = [])",
							"memberCtor = (id, value, _, kind) =>",
							"memberCtor = (id, value, element) =>",
							"memberCtor = (id, value, _, kind) =>",
							"([key, value]) =>",
							" function BindingProperty(property, id, initializer)",
							"parseArray()",
							"parseJSXTag()",
							"([name, value]) =>",
							"parseJSX(depth = 0)",
							"parseVariableStatement(exported = false)",
							"parseImportDeclaration(toplevel = false)",
							"parseImportSpecifier(default_specifier = false)",
							"parseModuleItems(method = 'parseImportSpecifier')",
							"parseExportSpecifier()",
							"parseExportDeclaration()",
							"parseDecoratorStatement()",
							"parseExpressionStatement()",
							"parseIfStatement(insideIteration, insideFunction)",
							"parseWhileStatement(insideFunction)",
							"parseDoWhileStatement(insideFunction)",
							"parseForStatement(insideFunction)",
							"parseIterationStatement(insideFunction)",
							"parseSwitchStatement(insideFunction)",
							" p =>",
							"parseTryStatement(insideIteration, insideFunction)",
							"parseWithStatement(insideIteration, insideFunction)",
							"parseThrowStatement()",
							"parseYieldStatement()",
							"parseContinueStatement()",
							"parseBreakStatement()",
							"parseReturnStatement()",
							"parseStatement(insideIteration, insideFunction, exported)",
							"parseClass(exported = false)",
							"parseParameters()",
							"checkRestOf = (parser, match) =>",
							"parseFunction(exported = false, isAsync = false)",
							"parseFunctionParametersAndBody(identifier, isAsync = false, isGenerator = false)",
							"parseSourceElement()",
							"parseProgram()",
							"ECMAScriptParser",
							"quoteArray = arr =>",
							"quoteList = (l, delim = ' ') =>",
							"t =>",
							"quoteToks = l =>",
							"t =>",
							"quoteObj = i =>",
							"quoteArg = a =>",
							"i =>",
							"quoteStr = s =>",
							"Parser.prototype.trace = function()",
							"frame =>",
							"Parser.prototype.onToken = function(tok)",
							"instrumentate = (methodName, fn = methods[methodName]) =>",
							"esfactory = function(...args)",
							" fr =>",
							" function Debug(position, end)",
							"arg =>",
							" function Object2Str(obj)",
							"t =>",
							"function instrumentateParser()",
							"name =>",
							"(acc, methodName) =>",
							"ECMAScriptParser",
							"ECMAScriptParser",
							"timeout = ms =>",
							"(resolve, reject) =>",
							"() =>",
							"Parser.parse = function parse(sourceText, prefix)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAABYEQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1445,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/create-tamper.js",
						"symkeys":
						[
							[
								1412,
								1421
							],
							[
								1446,
								1465
							],
							[
								1533,
								1548
							],
							[
								1553,
								1571
							],
							[
								1958,
								1973
							],
							[
								2031,
								2041
							],
							[
								2187,
								2202
							],
							[
								2302,
								2312
							],
							[
								2375,
								2385
							],
							[
								2625,
								2674
							],
							[
								2766,
								2773
							],
							[
								2789,
								2804
							],
							[
								2844,
								2874
							],
							[
								3078,
								3121
							],
							[
								3132,
								3158
							],
							[
								3193,
								3221
							],
							[
								3765,
								3771
							],
							[
								4493,
								4504
							],
							[
								5450,
								5454
							],
							[
								5907,
								5918
							],
							[
								5938,
								5965
							],
							[
								6147,
								6175
							],
							[
								6750,
								6765
							],
							[
								6790,
								6814
							],
							[
								6838,
								6907
							],
							[
								7756,
								7775
							],
							[
								7923,
								7944
							],
							[
								7995,
								8020
							],
							[
								8081,
								8090
							],
							[
								8199,
								8215
							],
							[
								8289,
								8309
							],
							[
								8391,
								8396
							],
							[
								8441,
								8460
							],
							[
								8521,
								8540
							],
							[
								8598,
								8603
							],
							[
								9022,
								9028
							],
							[
								9136,
								9164
							],
							[
								9213,
								9220
							],
							[
								9521,
								9527
							],
							[
								9601,
								9607
							],
							[
								9668,
								9681
							],
							[
								9706,
								9719
							],
							[
								9802,
								9820
							],
							[
								9878,
								9884
							],
							[
								9950,
								9966
							],
							[
								10033,
								10049
							],
							[
								10071,
								10077
							],
							[
								10343,
								10349
							],
							[
								10400,
								10406
							],
							[
								10482,
								10499
							],
							[
								10736,
								10750
							],
							[
								10968,
								10975
							],
							[
								11029,
								11036
							],
							[
								11124,
								11131
							],
							[
								11203,
								11210
							],
							[
								11291,
								11295
							],
							[
								11703,
								11728
							],
							[
								11760,
								11766
							],
							[
								11818,
								11826
							],
							[
								12187,
								12207
							],
							[
								12324,
								12328
							],
							[
								12802,
								12855
							],
							[
								12880,
								12894
							],
							[
								13436,
								13462
							],
							[
								13569,
								13597
							],
							[
								13959,
								13963
							],
							[
								14118,
								14158
							],
							[
								15135,
								15161
							]
						],
						"symlist":
						[
							"ES6Module",
							"static create(file)",
							"ES6ImportExport",
							"static create(obj)",
							"ES6ImportExport",
							"get from()",
							"set from(value)",
							"toSource()",
							"get code()",
							"function PrefixRemover(reOrStr, replacement = '')",
							" arg =>",
							"(acc, re, i) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"async function main(...args)",
							"arg =>",
							"(acc, p) =>",
							"p =>",
							"([k, v]) =>",
							" function removeFile(file)",
							" function processFile(file)",
							" node =>",
							" (path, value) =>",
							" function removeStatements(statements, predicate = stmt => true)",
							"VariableDeclaration",
							"getBase = filename =>",
							"getRelative = filename =>",
							"module =>",
							"([key, node]) =>",
							"([path, node], i) =>",
							"() =>",
							"getFromBase = () =>",
							"getFromPath = () =>",
							"() =>",
							"imp =>",
							"({ fromPath, ...module }) =>",
							"node =>",
							"imp =>",
							"imp =>",
							"(imp, idx) =>",
							"(imp, idx) =>",
							"(acc, [i, imp]) =>",
							"imp =>",
							"([idx, node]) =>",
							"([idx, node]) =>",
							"imp =>",
							"imp =>",
							"imp =>",
							"([key, value]) =>",
							"([p, stmt]) =>",
							"decl =>",
							"prop =>",
							"prop =>",
							"decl =>",
							"e =>",
							" function log(...args)",
							"arg =>",
							"assoc =>",
							"function finish(err)",
							"s =>",
							"function makeSearchPath(dirs, extra = 'node_modules')",
							"addPath = p =>",
							"function checkExists(path)",
							"function findModule(relpath)",
							"i =>",
							"function searchModuleInPath(name, _from)",
							"function makeNames(prefix)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYEQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KUGFyc2VFcnJvcgogIGNvbnN0cnVjdG9yKG1zZywgYXN0LCBsb2MpCkdldFN0YWNrKHN0YWNrLCBjb25kLCBtYXggPSBJbmZpbml0eSkKICBmcmFtZSA9PgogIGZyYW1lID0+ClBhcnNlcgogICgpID0+CiAgY29uc3RydWN0b3Ioc291cmNlVGV4dCwgZmlsZU5hbWUsIGRlYnVnKQogIChjLCBzLCBlKSA9PgogIGtleSA9PgogIGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLmNhbGxiYWNrID0gKC4uLmFyZ3MpID0+CiAgLnRyYWNlID0gZnVuY3Rpb24gZGVidWcoLi4uYXJncykKICBwID0+CiAgdG9rID0+CkVDTUFTY3JpcHRQYXJzZXIKICAoKSA9PgogICgpID0+CiAgKHdoYXQsIG5hbWUsIGFyZykgPT4KICBmciA9PgogICgpID0+CiAgKHRvaywgLi4ucHJlZml4KSA9PgogIGRlYnVnKC4uLmFyZ3MpCiAgZXJyb3IoZXJyb3JNZXNzYWdlLCBhc3ROb2RlKQogIGhhbmRsZUNvbW1lbnQoY29tbWVudCwgc3RhcnQsIGVuZCkKKCkgPT4KICBmdW5jdGlvbihjdG9yLCBhcmdzLCBpbnN0YW5jZSkKICBvbk5ld05vZGUobm9kZSkKICBvblJldHVybk5vZGUobm9kZSwgc3RhY2tFbnRyeSwgc3RhY2spCigpID0+CiAgZ2V0KCkKICBhZGRDb21tZW50c1RvTm9kZXMocm9vdCkKICBuID0+CiAgdG9rZW5zRm9yTm9kZShyb290KQogIG4gPT4KKGEsIGIpID0+CiAgcmFuZ2UgPT4KICBsZXgoKQogIG5leHQoKQogIGNsZWFyVG9rZW5zKCkKICByZXZlcnQodG8pCiAgc2V0TW9kZShmbGFncykKICBjbGVhck1vZGUoZmxhZ3MpCiAgZ2V0dG9rKHN0YXRlKQogIChmciwgaSkgPT4KICBsb29rYWhlYWQob2Zmc2V0ID0gMCkKICBjb25zdW1lKCkKICBzdGF0ZSgpCiAgZnVuY3Rpb24oKQogIHByaW50dG9rcygpCiAgbG9nKCkKICBhID0+CiAgc3QgPT4KICBwb3NpdGlvbih0b2sgPSBudWxsKQogIGdldCB0b2tlbkluZGV4KCkKICBhZGROb2RlKGN0b3IsIC4uLmFyZ3MpCiAgZ2V0Rm4obmFtZSkKICBpc0xpdGVyYWwoeyB0eXBlIH0pCiAgaXNUZW1wbGF0ZUxpdGVyYWwoeyB0eXBlIH0pCiAgdG9TdHIoYSkKICBzdGFja0Z1bmMgPSAobmFtZSwgZm4pID0+CkVDTUFTY3JpcHRQYXJzZXIKICBleHBlY3RJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIGV4cGVjdEtleXdvcmRzKGtleXdvcmRzKQogIGV4cGVjdFB1bmN0dWF0b3JzKHB1bmN0dWF0b3JzLCBhc3QpCiAgcCA9PgogIGV4cGVjdExpdGVyYWwoKQogIG51bGxMaXRlcmFsOiAoKSA9PgogIHBhcnNlVGVtcGxhdGVMaXRlcmFsKCkKICBtYXRjaEtleXdvcmRzKGtleXdvcmRzKQogIG1hdGNoUHVuY3R1YXRvcnMocHVuY3R1YXRvcnMpCiAgbWF0Y2hJZGVudGlmaWVyKG5vX2tleXdvcmQgPSBmYWxzZSwgcHJpdmF0ZV9pZCA9IGZhbHNlKQogIG1hdGNoTGl0ZXJhbCgpCiAgbWF0Y2hUZW1wbGF0ZUxpdGVyYWwoKQogIG1hdGNoU3RhdGVtZW50KCkKICBtYXRjaFByaW1hcnlFeHByZXNzaW9uKCkKICBtYXRjaFVuYXJ5RXhwcmVzc2lvbigpCiAgbWF0Y2hBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgbWF0Y2hGdW5jdGlvbkV4cHJlc3Npb24oKQogIHRvayA9PgogIG1hdGNoTWVtYmVyRXhwcmVzc2lvbigpCiAgbWF0Y2hMZWZ0SGFuZFNpZGVFeHByZXNzaW9uKCkKICBwYXJzZVByaW1hcnlFeHByZXNzaW9uKCkKICBwYXJzZUFyZ3VtZW50cygpCiAgY2hlY2tSZXN0T2YoKQogIHBhcnNlUmVtYWluaW5nTWVtYmVyRXhwcmVzc2lvbihvYmplY3QpCiAgcGFyc2VBcnJvd0Z1bmN0aW9uKGFyZ3MsIGlzXz0gZmFsc2UpCiAgYXJnID0+CiAgcGFyc2VSZW1haW5pbmdDYWxsRXhwcmVzc2lvbihvYmplY3QsIGlzXz0gZmFsc2UsIG9wdGlvbmFsID0gZmFsc2UpCiAgcGFyc2VOZXdPckNhbGxPck1lbWJlckV4cHJlc3Npb24oY291bGRCZU5ld0V4cHJlc3Npb24sIGNvdWxkQmVDYWxsRXhwcmVzc2lvbikKICAuY2FsbGJhY2sgPSBsZXggPT4KICBwYXJzZUxlZnRIYW5kU2lkZUV4cHJlc3Npb24oKQogIHBhcnNlUG9zdGZpeEV4cHJlc3Npb24oKQogIHBhcnNlVW5hcnlFeHByZXNzaW9uKCkKICBwYXJzZUJpbmFyeUV4cHJlc3Npb24obWluUHJlY2VkZW5jZSkKICBwYXJzZUNvbmRpdGlvbmFsRXhwcmVzc2lvbigpCiAgcGFyc2VBc3NpZ25tZW50RXhwcmVzc2lvbigpCiAgcGFyc2VFeHByZXNzaW9uKG9wdGlvbmFsLCBzZXF1ZW5jZSA9IHRydWUpCiAgcGFyc2VCaW5kaW5nUGF0dGVybigpCiAgZWxlbWVudCA9PgogIHBhcnNlVmFyaWFibGVEZWNsYXJhdGlvbigpCiAgcGFyc2VWYXJpYWJsZURlY2xhcmF0aW9uTGlzdChraW5kID0gJ3ZhcicsIGV4cG9ydGVkID0gZmFsc2UpCiAgcGFyc2VCbG9jayhpbnNpZGVJdGVyYXRpb24sIGluc2lkZUZ1bmN0aW9uLCBjdG9yID0gQmxvY2tTdGF0ZW1lbnQpCiAgcGFyc2VMaXN0KGluc2lkZUl0ZXJhdGlvbiA9IGZhbHNlLCBpbnNpZGVGdW5jdGlvbiA9IGZhbHNlLCBjaGVjayA9IHAgPT4gZmFsc2UpCiAgcGFyc2VPYmplY3QoaXNDbGFzcyA9IGZhbHNlLCBhcmdzID0gW10pCiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIGVsZW1lbnQpID0+CiAgbWVtYmVyQ3RvciA9IChpZCwgdmFsdWUsIF8sIGtpbmQpID0+Cihba2V5LCB2YWx1ZV0pID0+CkJpbmRpbmdQcm9wZXJ0eShwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyKQogIHBhcnNlQXJyYXkoKQogIHBhcnNlSlNYVGFnKCkKKFtuYW1lLCB2YWx1ZV0pID0+CiAgcGFyc2VKU1goZGVwdGggPSAwKQogIHBhcnNlVmFyaWFibGVTdGF0ZW1lbnQoZXhwb3J0ZWQgPSBmYWxzZSkKICBwYXJzZUltcG9ydERlY2xhcmF0aW9uKHRvcGxldmVsID0gZmFsc2UpCiAgcGFyc2VJbXBvcnRTcGVjaWZpZXIoZGVmYXVsdF9zcGVjaWZpZXIgPSBmYWxzZSkKICBwYXJzZU1vZHVsZUl0ZW1zKG1ldGhvZCA9ICdwYXJzZUltcG9ydFNwZWNpZmllcicpCiAgcGFyc2VFeHBvcnRTcGVjaWZpZXIoKQogIHBhcnNlRXhwb3J0RGVjbGFyYXRpb24oKQogIHBhcnNlRGVjb3JhdG9yU3RhdGVtZW50KCkKICBwYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQoKQogIHBhcnNlSWZTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdoaWxlU3RhdGVtZW50KGluc2lkZUZ1bmN0aW9uKQogIHBhcnNlRG9XaGlsZVN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUZvclN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZUl0ZXJhdGlvblN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwYXJzZVN3aXRjaFN0YXRlbWVudChpbnNpZGVGdW5jdGlvbikKICBwID0+CiAgcGFyc2VUcnlTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVdpdGhTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbikKICBwYXJzZVRocm93U3RhdGVtZW50KCkKICBwYXJzZVlpZWxkU3RhdGVtZW50KCkKICBwYXJzZUNvbnRpbnVlU3RhdGVtZW50KCkKICBwYXJzZUJyZWFrU3RhdGVtZW50KCkKICBwYXJzZVJldHVyblN0YXRlbWVudCgpCiAgcGFyc2VTdGF0ZW1lbnQoaW5zaWRlSXRlcmF0aW9uLCBpbnNpZGVGdW5jdGlvbiwgZXhwb3J0ZWQpCiAgcGFyc2VDbGFzcyhleHBvcnRlZCA9IGZhbHNlKQogIHBhcnNlUGFyYW1ldGVycygpCiAgY2hlY2tSZXN0T2YgPSAocGFyc2VyLCBtYXRjaCkgPT4KICBwYXJzZUZ1bmN0aW9uKGV4cG9ydGVkID0gZmFsc2UsIGlzQXN5bmMgPSBmYWxzZSkKICBwYXJzZUZ1bmN0aW9uUGFyYW1ldGVyc0FuZEJvZHkoaWRlbnRpZmllciwgaXNBc3luYyA9IGZhbHNlLCBpc0dlbmVyYXRvciA9IGZhbHNlKQogIHBhcnNlU291cmNlRWxlbWVudCgpCiAgcGFyc2VQcm9ncmFtKCkKRUNNQVNjcmlwdFBhcnNlcgogIHF1b3RlQXJyYXkgPSBhcnIgPT4KICBxdW90ZUxpc3QgPSAobCwgZGVsaW0gPSAnICcpID0+CiAgdCA9PgogIHF1b3RlVG9rcyA9IGwgPT4KICB0ID0+CiAgcXVvdGVPYmogPSBpID0+CiAgcXVvdGVBcmcgPSBhID0+CiAgaSA9PgogIHF1b3RlU3RyID0gcyA9PgpQYXJzZXIucHJvdG90eXBlLnRyYWNlID0gZnVuY3Rpb24oKQogIGZyYW1lID0+ClBhcnNlci5wcm90b3R5cGUub25Ub2tlbiA9IGZ1bmN0aW9uKHRvaykKICBpbnN0cnVtZW50YXRlID0gKG1ldGhvZE5hbWUsIGZuID0gbWV0aG9kc1ttZXRob2ROYW1lXSkgPT4KICBlc2ZhY3RvcnkgPSBmdW5jdGlvbiguLi5hcmdzKQogIGZyID0+CkRlYnVnKHBvc2l0aW9uLCBlbmQpCiAgYXJnID0+Ck9iamVjdDJTdHIob2JqKQogIHQgPT4KICBpbnN0cnVtZW50YXRlUGFyc2VyKCkKICBuYW1lID0+CihhY2MsIG1ldGhvZE5hbWUpID0+CkVDTUFTY3JpcHRQYXJzZXIKRUNNQVNjcmlwdFBhcnNlcgogIHRpbWVvdXQgPSBtcyA9PgoocmVzb2x2ZSwgcmVqZWN0KSA9PgooKSA9PgpQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiBwYXJzZShzb3VyY2VUZXh0LCBwcmVmaXgpAAAAAAAAAAByBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/misc.js",
						"symkeys":
						[
							[
								100,
								120
							],
							[
								340,
								356
							],
							[
								410,
								429
							],
							[
								464,
								480
							],
							[
								540,
								556
							],
							[
								619,
								653
							],
							[
								676,
								708
							],
							[
								731,
								774
							],
							[
								2603,
								2622
							],
							[
								2720,
								2736
							],
							[
								2798,
								2816
							],
							[
								2880,
								2899
							],
							[
								2964,
								2973
							],
							[
								3028,
								3045
							],
							[
								3108,
								3125
							],
							[
								3188,
								3202
							],
							[
								3262,
								3277
							],
							[
								3338,
								3353
							],
							[
								3414,
								3422
							],
							[
								3476,
								3488
							],
							[
								3546,
								3556
							],
							[
								3612,
								3623
							],
							[
								3680,
								3688
							],
							[
								3742,
								3764
							],
							[
								3832,
								3847
							],
							[
								3908,
								3930
							],
							[
								3998,
								4014
							],
							[
								4076,
								4092
							],
							[
								4154,
								4166
							],
							[
								4224,
								4236
							],
							[
								4294,
								4307
							],
							[
								4366,
								4384
							],
							[
								4442,
								4460
							],
							[
								4524,
								4546
							],
							[
								4614,
								4641
							],
							[
								4714,
								4731
							],
							[
								4788,
								4805
							],
							[
								4862,
								4879
							],
							[
								4926,
								4942
							],
							[
								5025,
								5041
							],
							[
								5113,
								5129
							],
							[
								5201,
								5218
							],
							[
								5275,
								5295
							],
							[
								5354,
								5374
							],
							[
								5533,
								5552
							],
							[
								5628,
								5635
							],
							[
								5664,
								5684
							],
							[
								5754,
								5769
							],
							[
								5830,
								5856
							],
							[
								5934,
								5957
							],
							[
								7671,
								7710
							],
							[
								8132,
								8144
							],
							[
								8178,
								8190
							],
							[
								8206,
								8219
							],
							[
								8400,
								8446
							],
							[
								8471,
								8481
							],
							[
								8531,
								8540
							],
							[
								8642,
								8649
							],
							[
								8698,
								8722
							],
							[
								8882,
								8901
							],
							[
								9015,
								9023
							],
							[
								9070,
								9089
							],
							[
								9185,
								9233
							],
							[
								11447,
								11495
							],
							[
								13032,
								13036
							],
							[
								13067,
								13076
							],
							[
								13214,
								13233
							],
							[
								13753,
								13772
							],
							[
								14442,
								14485
							],
							[
								14902,
								14935
							],
							[
								15213,
								15242
							],
							[
								15289,
								15310
							],
							[
								15339,
								15355
							],
							[
								15448,
								15483
							],
							[
								15523,
								15541
							],
							[
								15779,
								15790
							],
							[
								16041,
								16052
							],
							[
								16155,
								16166
							],
							[
								16317,
								16329
							],
							[
								16439,
								16459
							],
							[
								16557,
								16562
							],
							[
								16630,
								16651
							],
							[
								16675,
								16685
							],
							[
								16724,
								16754
							],
							[
								17080,
								17114
							],
							[
								17421,
								17455
							],
							[
								17675,
								17709
							],
							[
								17775,
								17811
							],
							[
								17886,
								17903
							],
							[
								18062,
								18099
							],
							[
								18100,
								18114
							],
							[
								18120,
								18124
							],
							[
								18199,
								18231
							],
							[
								18259,
								18285
							],
							[
								18610,
								18632
							],
							[
								18683,
								18699
							],
							[
								18714,
								18721
							],
							[
								18749,
								18765
							],
							[
								18806,
								18834
							],
							[
								19053,
								19070
							],
							[
								19071,
								19080
							],
							[
								19132,
								19149
							],
							[
								19150,
								19159
							],
							[
								19219,
								19236
							],
							[
								19237,
								19260
							],
							[
								19316,
								19340
							],
							[
								21967,
								21995
							],
							[
								22426,
								22430
							],
							[
								22558,
								22571
							],
							[
								22887,
								22899
							],
							[
								23162,
								23175
							],
							[
								23280,
								23294
							],
							[
								24187,
								24215
							],
							[
								24331,
								24344
							],
							[
								24456,
								24482
							],
							[
								24677,
								24725
							],
							[
								24773,
								24885
							],
							[
								24990,
								25013
							],
							[
								25157,
								25209
							],
							[
								25303,
								25319
							],
							[
								25403,
								25414
							],
							[
								25527,
								25531
							],
							[
								25810,
								25843
							],
							[
								25957,
								26009
							],
							[
								26183,
								26219
							],
							[
								26376,
								26392
							],
							[
								26410,
								26432
							],
							[
								26545,
								26551
							],
							[
								27913,
								27955
							],
							[
								28150,
								28181
							],
							[
								28231,
								28273
							],
							[
								28393,
								28417
							],
							[
								28637,
								28647
							],
							[
								28700,
								28704
							],
							[
								28743,
								28770
							],
							[
								28817,
								28829
							],
							[
								28899,
								28911
							],
							[
								28974,
								28999
							],
							[
								29044,
								29075
							],
							[
								29086,
								29103
							],
							[
								29244,
								29279
							],
							[
								29327,
								29354
							],
							[
								29445,
								29483
							],
							[
								29692,
								29750
							],
							[
								30016,
								30024
							],
							[
								30117,
								30189
							],
							[
								30318,
								30326
							],
							[
								30828,
								30836
							],
							[
								30865,
								30878
							],
							[
								30989,
								31038
							],
							[
								31140,
								31179
							],
							[
								31204,
								31212
							],
							[
								31244,
								31259
							],
							[
								31352,
								31360
							],
							[
								31414,
								31432
							],
							[
								31657,
								31665
							],
							[
								31703,
								31715
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(arg)",
							" function SyscallError(syscall, errnum)",
							"SyscallError",
							"SyscallError",
							"get message()",
							" function extendArray(proto = Array.prototype)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"pushUnique(...args)",
							" function toString(arrayBuf, encoding = 'utf-8')",
							" function toArrayBuffer(str, encoding = 'utf-8')",
							"a =>",
							"(c, i) =>",
							" function btoa(bin)",
							" function atob(asc)",
							" function assert(actual, expected, message)",
							" function escape(str, chars = [])",
							" function quote(str, q = '\"')",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							"callback =>",
							" function()",
							" function()",
							" function(e)",
							" function atexit(fn)",
							"() =>",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function Location(line, column, pos, file, freeze = true)",
							"Location",
							"Location.prototype.clone = function(freeze = false, withFilename = true)",
							"Location",
							"Location",
							" function* ()",
							"Location.prototype.toString = function(opts = {})",
							"Location.prototype.valueOf = function()",
							"Location",
							" function(hint)",
							"Location",
							" function(n, opts)",
							"Location",
							"get offset()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAByBAAARVM2TW9kdWxlCiAgc3RhdGljIGNyZWF0ZShmaWxlKQpFUzZJbXBvcnRFeHBvcnQKICBzdGF0aWMgY3JlYXRlKG9iaikKRVM2SW1wb3J0RXhwb3J0CiAgZ2V0IGZyb20oKQogIHNldCBmcm9tKHZhbHVlKQogIHRvU291cmNlKCkKICBnZXQgY29kZSgpClByZWZpeFJlbW92ZXIocmVPclN0ciwgcmVwbGFjZW1lbnQgPSAnJykKICBhcmcgPT4KKGFjYywgcmUsIGkpID0+CldyaXRlRmlsZShuYW1lLCBkYXRhKQogIHByaW50QXN0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKICBtYWluKC4uLmFyZ3MpCiAgYXJnID0+CihhY2MsIHApID0+CiAgcCA9PgooW2ssIHZdKSA9PgogIHJlbW92ZUZpbGUoZmlsZSkKICBwcm9jZXNzRmlsZShmaWxlKQogIG5vZGUgPT4KICAocGF0aCwgdmFsdWUpID0+CiAgcmVtb3ZlU3RhdGVtZW50cyhzdGF0ZW1lbnRzLCBwcmVkaWNhdGUgPSBzdG10ID0+IHRydWUpClZhcmlhYmxlRGVjbGFyYXRpb24KICBnZXRCYXNlID0gZmlsZW5hbWUgPT4KICBnZXRSZWxhdGl2ZSA9IGZpbGVuYW1lID0+CiAgbW9kdWxlID0+Cihba2V5LCBub2RlXSkgPT4KKFtwYXRoLCBub2RlXSwgaSkgPT4KKCkgPT4KICBnZXRGcm9tQmFzZSA9ICgpID0+CiAgZ2V0RnJvbVBhdGggPSAoKSA9PgooKSA9PgogIGltcCA9PgooeyBmcm9tUGF0aCwgLi4ubW9kdWxlIH0pID0+CiAgbm9kZSA9PgogIGltcCA9PgogIGltcCA9PgooaW1wLCBpZHgpID0+CihpbXAsIGlkeCkgPT4KKGFjYywgW2ksIGltcF0pID0+CiAgaW1wID0+CihbaWR4LCBub2RlXSkgPT4KKFtpZHgsIG5vZGVdKSA9PgogIGltcCA9PgogIGltcCA9PgogIGltcCA9PgooW2tleSwgdmFsdWVdKSA9PgooW3AsIHN0bXRdKSA9PgogIGRlY2wgPT4KICBwcm9wID0+CiAgcHJvcCA9PgogIGRlY2wgPT4KICBlID0+CiAgbG9nKC4uLmFyZ3MpCiAgYXJnID0+CiAgYXNzb2MgPT4KICBmaW5pc2goZXJyKQogIHMgPT4KICBtYWtlU2VhcmNoUGF0aChkaXJzLCBleHRyYSA9ICdub2RlX21vZHVsZXMnKQogIGFkZFBhdGggPSBwID0+CiAgY2hlY2tFeGlzdHMocGF0aCkKICBmaW5kTW9kdWxlKHJlbHBhdGgpCiAgaSA9PgogIHNlYXJjaE1vZHVsZUluUGF0aChuYW1lLCBfZnJvbSkKICBtYWtlTmFtZXMocHJlZml4KQAAAAAAAAAAzAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADMDAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KGFyZykKU3lzY2FsbEVycm9yKHN5c2NhbGwsIGVycm51bSkKU3lzY2FsbEVycm9yClN5c2NhbGxFcnJvcgogIGdldCBtZXNzYWdlKCkKICBleHRlbmRBcnJheShwcm90byA9IEFycmF5LnByb3RvdHlwZSkKICBnZXQgbGFzdCgpCiAgYXQoaW5kZXgpCiAgY2xlYXIoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICB1bmlxdWUoKQogIHB1c2hVbmlxdWUoLi4uYXJncykKICB0b1N0cmluZyhhcnJheUJ1ZiwgZW5jb2RpbmcgPSAndXRmLTgnKQogIHRvQXJyYXlCdWZmZXIoc3RyLCBlbmNvZGluZyA9ICd1dGYtOCcpCiAgYSA9PgooYywgaSkgPT4KICBidG9hKGJpbikKICBhdG9iKGFzYykKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBlc2NhcGUoc3RyLCBjaGFycyA9IFtdKQogIHF1b3RlKHN0ciwgcSA9ICciJykKICBtZW1vaXplKGZuKQogIChuLCAuLi5yZXN0KSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGNhbGxiYWNrID0+CiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICBmdW5jdGlvbihlKQogIGF0ZXhpdChmbikKKCkgPT4KICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCkxvY2F0aW9uKGxpbmUsIGNvbHVtbiwgcG9zLCBmaWxlLCBmcmVlemUgPSB0cnVlKQpMb2NhdGlvbgpMb2NhdGlvbi5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbihmcmVlemUgPSBmYWxzZSwgd2l0aEZpbGVuYW1lID0gdHJ1ZSkKTG9jYXRpb24KTG9jYXRpb24KKCkKTG9jYXRpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0cyA9IHt9KQpMb2NhdGlvbi5wcm90b3R5cGUudmFsdWVPZiA9IGZ1bmN0aW9uKCkKTG9jYXRpb24KICBmdW5jdGlvbihoaW50KQpMb2NhdGlvbgogIGZ1bmN0aW9uKG4sIG9wdHMpCkxvY2F0aW9uCiAgZ2V0IG9mZnNldCgpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/jack-session-client.c",
						"symkeys":
						[
							[
								829,
								836
							],
							[
								1105,
								1121
							],
							[
								1766,
								1779
							],
							[
								1811,
								1815
							]
						],
						"symlist":
						[
							"process",
							"session_callback",
							"jack_shutdown",
							"main"
						]
					},
					"AQAAAAAAAAAAAAAAMwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/mics.js",
						"symkeys":
						[
							[
								702,
								723
							],
							[
								1016,
								1042
							],
							[
								1067,
								1076
							],
							[
								1119,
								1147
							],
							[
								1581,
								1594
							],
							[
								1659,
								1663
							],
							[
								1895,
								1913
							],
							[
								1950,
								1955
							],
							[
								2165,
								2185
							],
							[
								2389,
								2398
							],
							[
								2751,
								2752
							],
							[
								3374,
								3396
							],
							[
								3505,
								3509
							],
							[
								3594,
								3595
							],
							[
								3652,
								3661
							],
							[
								3876,
								3904
							],
							[
								3947,
								3956
							],
							[
								4137,
								4169
							],
							[
								4277,
								4288
							],
							[
								4392,
								4403
							],
							[
								4440,
								4459
							],
							[
								4511,
								4530
							],
							[
								4719,
								4740
							],
							[
								4850,
								4856
							],
							[
								4867,
								4889
							]
						],
						"symlist":
						[
							"function mix(...args)",
							" org => superclass =>",
							"(s, m) =>",
							" function mixin(superclass)",
							" (...args) =>",
							"k =>",
							" x => () =>",
							"Class",
							"function is(x, type)",
							"(f, c) =>",
							"c",
							"function like(x, type)",
							"type",
							"x",
							"(f, k) =>",
							"function getInterface(proto)",
							"(o, k) =>",
							"function getPropertyNames(proto)",
							"(arr, k) =>",
							"constructor",
							"function isMixin(x)",
							"function isClass(x)",
							"function isFactory(x)",
							"Object",
							"derive = superclass =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAICBwcm9jZXNzCiAgc2Vzc2lvbl9jYWxsYmFjawogIGphY2tfc2h1dGRvd24KICBtYWluAAAAAAAAAABKAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAQAAICBtaXgoLi4uYXJncykKICBvcmcgPT4gc3VwZXJjbGFzcyA9PgoocywgbSkgPT4KICBtaXhpbihzdXBlcmNsYXNzKQogICguLi5hcmdzKSA9PgogIGsgPT4KICB4ID0+ICgpID0+CkNsYXNzCiAgaXMoeCwgdHlwZSkKKGYsIGMpID0+CiAgYwogIGxpa2UoeCwgdHlwZSkKICB0eXBlCiAgeAooZiwgaykgPT4KICBnZXRJbnRlcmZhY2UocHJvdG8pCihvLCBrKSA9PgogIGdldFByb3BlcnR5TmFtZXMocHJvdG8pCihhcnIsIGspID0+CiAgY29uc3RydWN0b3IKICBpc01peGluKHgpCiAgaXNDbGFzcyh4KQogIGlzRmFjdG9yeSh4KQpPYmplY3QKICBkZXJpdmUgPSBzdXBlcmNsYXNzID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/jack-session-client.c",
						"symkeys":
						[
							[
								829,
								836
							],
							[
								1105,
								1121
							],
							[
								1766,
								1779
							],
							[
								1811,
								1815
							]
						],
						"symlist":
						[
							"process",
							"session_callback",
							"jack_shutdown",
							"main"
						]
					},
					"AQAAAAAAAAAAAAAAMwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/misc.js",
						"symkeys":
						[
							[
								100,
								120
							],
							[
								340,
								356
							],
							[
								410,
								429
							],
							[
								464,
								480
							],
							[
								540,
								556
							],
							[
								619,
								653
							],
							[
								676,
								708
							],
							[
								731,
								774
							],
							[
								2603,
								2622
							],
							[
								2720,
								2736
							],
							[
								2798,
								2816
							],
							[
								2880,
								2899
							],
							[
								2964,
								2973
							],
							[
								3028,
								3045
							],
							[
								3108,
								3125
							],
							[
								3188,
								3202
							],
							[
								3262,
								3277
							],
							[
								3338,
								3353
							],
							[
								3414,
								3422
							],
							[
								3476,
								3488
							],
							[
								3546,
								3556
							],
							[
								3612,
								3623
							],
							[
								3680,
								3688
							],
							[
								3742,
								3764
							],
							[
								3832,
								3847
							],
							[
								3908,
								3930
							],
							[
								3998,
								4014
							],
							[
								4076,
								4092
							],
							[
								4154,
								4166
							],
							[
								4224,
								4236
							],
							[
								4294,
								4307
							],
							[
								4366,
								4384
							],
							[
								4442,
								4460
							],
							[
								4524,
								4546
							],
							[
								4614,
								4641
							],
							[
								4714,
								4731
							],
							[
								4788,
								4805
							],
							[
								4862,
								4879
							],
							[
								4926,
								4942
							],
							[
								5025,
								5041
							],
							[
								5113,
								5129
							],
							[
								5201,
								5218
							],
							[
								5275,
								5295
							],
							[
								5354,
								5374
							],
							[
								5533,
								5552
							],
							[
								5628,
								5635
							],
							[
								5664,
								5684
							],
							[
								5754,
								5769
							],
							[
								5830,
								5856
							],
							[
								5934,
								5957
							],
							[
								7671,
								7710
							],
							[
								8132,
								8144
							],
							[
								8178,
								8190
							],
							[
								8206,
								8219
							],
							[
								8400,
								8446
							],
							[
								8471,
								8481
							],
							[
								8531,
								8540
							],
							[
								8642,
								8649
							],
							[
								8698,
								8722
							],
							[
								8882,
								8901
							],
							[
								9015,
								9023
							],
							[
								9070,
								9089
							],
							[
								9185,
								9233
							],
							[
								11447,
								11495
							],
							[
								13032,
								13036
							],
							[
								13067,
								13076
							],
							[
								13214,
								13233
							],
							[
								13753,
								13772
							],
							[
								14442,
								14485
							],
							[
								14902,
								14935
							],
							[
								15213,
								15242
							],
							[
								15289,
								15310
							],
							[
								15339,
								15355
							],
							[
								15448,
								15483
							],
							[
								15523,
								15541
							],
							[
								15779,
								15790
							],
							[
								16041,
								16052
							],
							[
								16155,
								16166
							],
							[
								16317,
								16329
							],
							[
								16439,
								16459
							],
							[
								16557,
								16562
							],
							[
								16630,
								16651
							],
							[
								16675,
								16685
							],
							[
								16724,
								16754
							],
							[
								17080,
								17114
							],
							[
								17421,
								17455
							],
							[
								17675,
								17709
							],
							[
								17775,
								17811
							],
							[
								17886,
								17903
							],
							[
								18062,
								18099
							],
							[
								18100,
								18114
							],
							[
								18120,
								18124
							],
							[
								18199,
								18231
							],
							[
								18259,
								18285
							],
							[
								18610,
								18632
							],
							[
								18683,
								18699
							],
							[
								18714,
								18721
							],
							[
								18749,
								18765
							],
							[
								18806,
								18834
							],
							[
								19053,
								19070
							],
							[
								19071,
								19080
							],
							[
								19132,
								19149
							],
							[
								19150,
								19159
							],
							[
								19219,
								19236
							],
							[
								19237,
								19260
							],
							[
								19316,
								19340
							],
							[
								21967,
								21995
							],
							[
								22426,
								22430
							],
							[
								22558,
								22571
							],
							[
								22887,
								22899
							],
							[
								23162,
								23175
							],
							[
								23280,
								23294
							],
							[
								24187,
								24215
							],
							[
								24331,
								24344
							],
							[
								24456,
								24482
							],
							[
								24677,
								24725
							],
							[
								24773,
								24885
							],
							[
								24990,
								25013
							],
							[
								25157,
								25209
							],
							[
								25303,
								25319
							],
							[
								25403,
								25414
							],
							[
								25527,
								25531
							],
							[
								25810,
								25843
							],
							[
								25957,
								26009
							],
							[
								26183,
								26219
							],
							[
								26376,
								26392
							],
							[
								26410,
								26432
							],
							[
								26545,
								26551
							],
							[
								27913,
								27955
							],
							[
								28150,
								28181
							],
							[
								28231,
								28273
							],
							[
								28393,
								28417
							],
							[
								28637,
								28647
							],
							[
								28700,
								28704
							],
							[
								28743,
								28770
							],
							[
								28817,
								28829
							],
							[
								28899,
								28911
							],
							[
								28974,
								28999
							],
							[
								29044,
								29075
							],
							[
								29086,
								29103
							],
							[
								29244,
								29279
							],
							[
								29327,
								29354
							],
							[
								29445,
								29483
							],
							[
								29692,
								29750
							],
							[
								30016,
								30024
							],
							[
								30117,
								30189
							],
							[
								30318,
								30326
							],
							[
								30828,
								30836
							],
							[
								30865,
								30878
							],
							[
								30989,
								31038
							],
							[
								31140,
								31179
							],
							[
								31204,
								31212
							],
							[
								31244,
								31259
							],
							[
								31352,
								31360
							],
							[
								31414,
								31432
							],
							[
								31657,
								31665
							],
							[
								31703,
								31715
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(arg)",
							" function SyscallError(syscall, errnum)",
							"SyscallError",
							"SyscallError",
							"get message()",
							" function extendArray(proto = Array.prototype)",
							"get last()",
							"at(index)",
							"clear()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"unique()",
							"pushUnique(...args)",
							" function toString(arrayBuf, encoding = 'utf-8')",
							" function toArrayBuffer(str, encoding = 'utf-8')",
							"a =>",
							"(c, i) =>",
							" function btoa(bin)",
							" function atob(asc)",
							" function assert(actual, expected, message)",
							" function escape(str, chars = [])",
							" function quote(str, q = '\"')",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							"callback =>",
							" function()",
							" function()",
							" function(e)",
							" function atexit(fn)",
							"() =>",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function lazyProperty(obj, name, getter, opts = {})",
							"async function()",
							" function()",
							"v =>",
							" function replaceProperty(value)",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function repeater(n, what)",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function Location(line, column, pos, file, freeze = true)",
							"Location",
							"Location.prototype.clone = function(freeze = false, withFilename = true)",
							"Location",
							"Location",
							" function* ()",
							"Location.prototype.toString = function(opts = {})",
							"Location.prototype.valueOf = function()",
							"Location",
							" function(hint)",
							"Location",
							" function(n, opts)",
							"Location",
							"get offset()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAICBwcm9jZXNzCiAgc2Vzc2lvbl9jYWxsYmFjawogIGphY2tfc2h1dGRvd24KICBtYWluAAAAAAAAAADMDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/plot-cv.sublime-project",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADMDAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KGFyZykKU3lzY2FsbEVycm9yKHN5c2NhbGwsIGVycm51bSkKU3lzY2FsbEVycm9yClN5c2NhbGxFcnJvcgogIGdldCBtZXNzYWdlKCkKICBleHRlbmRBcnJheShwcm90byA9IEFycmF5LnByb3RvdHlwZSkKICBnZXQgbGFzdCgpCiAgYXQoaW5kZXgpCiAgY2xlYXIoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICB1bmlxdWUoKQogIHB1c2hVbmlxdWUoLi4uYXJncykKICB0b1N0cmluZyhhcnJheUJ1ZiwgZW5jb2RpbmcgPSAndXRmLTgnKQogIHRvQXJyYXlCdWZmZXIoc3RyLCBlbmNvZGluZyA9ICd1dGYtOCcpCiAgYSA9PgooYywgaSkgPT4KICBidG9hKGJpbikKICBhdG9iKGFzYykKICBhc3NlcnQoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkKICBlc2NhcGUoc3RyLCBjaGFycyA9IFtdKQogIHF1b3RlKHN0ciwgcSA9ICciJykKICBtZW1vaXplKGZuKQogIChuLCAuLi5yZXN0KSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIGNhbGxiYWNrID0+CiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICBmdW5jdGlvbihlKQogIGF0ZXhpdChmbikKKCkgPT4KICB3YWl0Rm9yKG1zKQogIHJlc29sdmUgPT4KICBkZWZpbmUob2JqLCAuLi5hcmdzKQogIHdlYWtBc3NpZ24ob2JqLCAuLi5hcmdzKQogIGdldENvbnN0cnVjdG9yQ2hhaW4ob2JqKQogIGhhc1Byb3RvdHlwZShvYmosIHByb3RvKQogIGZpbHRlcihzZXEsIHByZWQsIHRoaXNBcmcpCiAgcHJlZCA9IChlbCwgaSkgPT4KICAoZiwgYXJyID0gW10sIGxlbmd0aCA9IGYubGVuZ3RoKSA9PgogICguLi5hcmdzKSA9PgogIGEgPT4KICBzcGxpdChidWYsIC4uLnBvaW50cykKICBzcGxpdEF0ID0gKGIsIHBvcywgbGVuKSA9PgogIHVuaXF1ZSA9IChhcnIsIGNtcCkgPT4KICAoZWwsIGksIGFycikgPT4KICBpdGVtID0+CiAgKGVsLCBpLCBhcnIpID0+CiAgZ2V0RnVuY3Rpb25Bcmd1bWVudHMgPSBmbiA9PgogIChvZmZzZXQgPSAwKSA9PgogIGNvZGUgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgKHJlZCwgZ3JlZW4sIGJsdWUpID0+CiAgZ2V0QW5zaVN0eWxlcygpCiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGMgPT4KICB2YWx1ZTogaGV4ID0+CiAgY2hhcmFjdGVyID0+CiAgdmFsdWU6IGhleCA9PgogIHZhbHVlOiBjb2RlID0+CiAgdmFsdWU6IChyZWQsIGdyZWVuLCBibHVlKSA9PgogIHZhbHVlOiBoZXggPT4KICByYW5kSW50KC4uLmFyZ3MpCiAgcmFuZEZsb2F0KG1pbiwgbWF4LCBybmcgPSBNYXRoLnJhbmRvbSkKICByYW5kU3RyKG4sIHNldCA9ICdfMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLCBybmcgPSBNYXRoLnJhbmRvbSkKICB0b0JpZ0ludChhcmcpCiAgbGF6eVByb3BlcnR5KG9iaiwgbmFtZSwgZ2V0dGVyLCBvcHRzID0ge30pCiAgZnVuY3Rpb24oKQogIGZ1bmN0aW9uKCkKICB2ID0+CiAgcmVwbGFjZVByb3BlcnR5KHZhbHVlKQogIGxhenlQcm9wZXJ0aWVzKG9iaiwgZ2V0dGVyc09iaiwgb3B0cyA9IHt9KQogIGdldE9wdChvcHRpb25zID0ge30sIGFyZ3MpCiAgZmluZE9wdCA9IGFyZyA9PgooW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgb3B0ID0+CiAgdG9Vbml4VGltZShkYXRlT2JqLCB1dGMgPSBmYWxzZSkKICB1bml4VGltZSh1dGMgPSBmYWxzZSkKICBmcm9tVW5peFRpbWUoZXBvY2gsIHV0YyA9IGZhbHNlKQogIHJhbmdlKC4uLmFyZ3MpCiAgKHYsIGspID0+CiAgbiA9PgogIHJlcGVhdGVyKG4sIHdoYXQpCigpCigpCiAgcmVwZWF0KG4sIHdoYXQpCiAgY2h1bmtBcnJheShhcnIsIHNpemUpCiAgZm4gPSAoYSwgdiwgaSkgPT4KICBjYW1lbGl6ZShzdHIsIGRlbGltID0gJycpCiAgKG1hdGNoLCBwMSwgcDIsIG9mZnNldCkgPT4KICBkZWNhbWVsaXplKHN0ciwgZGVsaW0gPSAnLScpCkxvY2F0aW9uKGxpbmUsIGNvbHVtbiwgcG9zLCBmaWxlLCBmcmVlemUgPSB0cnVlKQpMb2NhdGlvbgpMb2NhdGlvbi5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbihmcmVlemUgPSBmYWxzZSwgd2l0aEZpbGVuYW1lID0gdHJ1ZSkKTG9jYXRpb24KTG9jYXRpb24KKCkKTG9jYXRpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0cyA9IHt9KQpMb2NhdGlvbi5wcm90b3R5cGUudmFsdWVPZiA9IGZ1bmN0aW9uKCkKTG9jYXRpb24KICBmdW5jdGlvbihoaW50KQpMb2NhdGlvbgogIGZ1bmN0aW9uKG4sIG9wdHMpCkxvY2F0aW9uCiAgZ2V0IG9mZnNldCgpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/plot-cv.sublime-project",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-diagram.js",
			"settings":
			{
				"buffer_size": 2660,
				"line_ending": "Unix",
				"name": "import { AxisPoints } from './diagram.js'"
			},
			"undo_stack":
			[
				[
					953,
					1,
					"left_delete",
					null,
					"AQAAAJgCAAAAAAAAmAIAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkCAAAAAAAAmQIAAAAAAAAAAAAAAADwvw"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "ma"
					},
					"AgAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACaAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgCAAAAAAAAmAIAAAAAAAAAAAAAAADwvw"
				],
				[
					955,
					2,
					"left_delete",
					null,
					"AgAAAJkCAAAAAAAAmQIAAAAAAAABAAAAYZgCAAAAAAAAmAIAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoCAAAAAAAAmgIAAAAAAAAAAAAAAADwvw"
				],
				[
					956,
					1,
					"insert",
					{
						"characters": "...mat.size"
					},
					"CwAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACaAgAAAAAAAAAAAACaAgAAAAAAAJsCAAAAAAAAAAAAAJsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACdAgAAAAAAAAAAAACdAgAAAAAAAJ4CAAAAAAAAAAAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACgAgAAAAAAAAAAAACgAgAAAAAAAKECAAAAAAAAAAAAAKECAAAAAAAAogIAAAAAAAAAAAAAogIAAAAAAACjAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgCAAAAAAAAmAIAAAAAAAAAAAAAAADwvw"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKQCAAAAAAAApQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQCAAAAAAAApAIAAAAAAAAAAAAAAADwvw"
				],
				[
					959,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKUCAAAAAAAApgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUCAAAAAAAApQIAAAAAAAAAAAAAAADwvw"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "rect.inse"
					},
					"CgAAAL4CAAAAAAAAvwIAAAAAAAAAAAAAvwIAAAAAAAC/AgAAAAAAACkAAABuZXcgUmVjdCgxMCwxMCwgbWF0LmNvbHMtMjAsIG1hdC5yb3dzLTIwKb8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAADBAgAAAAAAAMICAAAAAAAAAAAAAMICAAAAAAAAwwIAAAAAAAAAAAAAwwIAAAAAAADEAgAAAAAAAAAAAADEAgAAAAAAAMUCAAAAAAAAAAAAAMUCAAAAAAAAxgIAAAAAAAAAAAAAxgIAAAAAAADHAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4CAAAAAAAA5wIAAAAAAAAAAAAAAADwvw"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAMcCAAAAAAAAyAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcCAAAAAAAAxwIAAAAAAAAAAAAAAADwvw"
				],
				[
					966,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMgCAAAAAAAAygIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgCAAAAAAAAyAIAAAAAAAAAAAAAAADwvw"
				],
				[
					967,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkCAAAAAAAAyQIAAAAAAAAAAAAAAADwvw"
				],
				[
					972,
					1,
					"left_delete",
					null,
					"AQAAAMoCAAAAAAAAygIAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsCAAAAAAAAywIAAAAAAAAAAAAAAADwvw"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMoCAAAAAAAAywIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoCAAAAAAAAygIAAAAAAAAAAAAAAADwvw"
				],
				[
					974,
					2,
					"left_delete",
					null,
					"AgAAAMoCAAAAAAAAygIAAAAAAAABAAAAMskCAAAAAAAAyQIAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsCAAAAAAAAywIAAAAAAAAAAAAAAADwvw"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": "20"
					},
					"AgAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkCAAAAAAAAyQIAAAAAAAAAAAAAAADwvw"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGcEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABoBAAAAAAAAAQAAAAgLy8g",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsEAAAAAAAAZwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1002,
					1,
					"paste",
					null,
					"AgAAAHIEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAAB8BAAAAAAAAAMAAABtYXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIEAAAAAAAAdQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1011,
					1,
					"cut",
					null,
					"AQAAAGYEAAAAAAAAZgQAAAAAAAAhAAAAICBEcmF3Q3Jvc3MoZGlhZ3JhbU1hdCwgb3JpZ2luKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYEAAAAAAAAhwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABQEAAAAAAAAFQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAAAAA"
				],
				[
					1014,
					1,
					"paste",
					null,
					"AQAAABUEAAAAAAAANgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUEAAAAAAAAFQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": ",."
					},
					"AgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1020,
					1,
					"left_delete",
					null,
					"AQAAADEAAAAAAAAAMQAAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAADwvw"
				],
				[
					1021,
					1,
					"paste",
					null,
					"AQAAADEAAAAAAAAANQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwDAAAAAAAA7AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": "me"
					},
					"AgAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMDAAAAAAAA8wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1042,
					2,
					"left_delete",
					null,
					"AgAAAPQDAAAAAAAA9AMAAAAAAAABAAAAZfMDAAAAAAAA8wMAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUDAAAAAAAA9QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": ",end]"
					},
					"BQAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAD1AwAAAAAAAPYDAAAAAAAAAAAAAPYDAAAAAAAA9wMAAAAAAAAAAAAA9wMAAAAAAAD4AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMDAAAAAAAA8wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1044,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPgDAAAAAAAA+gMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgDAAAAAAAA+AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1045,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPgDAAAAAAAA+AMAAAAAAAABAAAAW/gDAAAAAAAA+AMAAAAAAAABAAAAXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkDAAAAAAAA+QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1048,
					1,
					"insert",
					{
						"characters": "Rect"
					},
					"BQAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD8AwAAAAAAAAYAAABPcmlnaW78AwAAAAAAAP0DAAAAAAAAAAAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA/gMAAAAAAAD/AwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsDAAAAAAAAAQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1055,
					1,
					"paste",
					null,
					"AgAAADEAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4AAAAAAAAAAQAAABSZWN0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEAAAAAAAAANQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1060,
					1,
					"paste",
					null,
					"AgAAAP4DAAAAAAAABQQAAAAAAAAAAAAABQQAAAAAAAAFBAAAAAAAAAQAAABSZWN0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4DAAAAAAAAAgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1080,
					1,
					"paste",
					null,
					"AQAAACMEAAAAAAAAQAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMEAAAAAAAAIwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA8AMAAAAAAADwAwAAAAAAAAwAAABbb3JpZ2luLGVuZF3wAwAAAAAAAPEDAAAAAAAAAAAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADzAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8DAAAAAAAA+wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1096,
					1,
					"insert",
					{
						"characters": "Origin/"
					},
					"CAAAAFEEAAAAAAAAUgQAAAAAAAAAAAAAUgQAAAAAAABSBAAAAAAAAAYAAABvcmlnaW5SBAAAAAAAAFMEAAAAAAAAAAAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAABVBAAAAAAAAFYEAAAAAAAAAAAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABYBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEEAAAAAAAAVwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1097,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgEAAAAAAAAWgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1098,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFkEAAAAAAAAWgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkEAAAAAAAAWQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1099,
					1,
					"left_delete",
					null,
					"AQAAAFkEAAAAAAAAWQQAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoEAAAAAAAAWgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1100,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFgEAAAAAAAAWAQAAAAAAAABAAAAKFgEAAAAAAAAWAQAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkEAAAAAAAAWQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1101,
					1,
					"left_delete",
					null,
					"AQAAAFcEAAAAAAAAVwQAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1102,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFcEAAAAAAAAWQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcEAAAAAAAAVwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1103,
					1,
					"insert",
					{
						"characters": "duia"
					},
					"BAAAAFgEAAAAAAAAWQQAAAAAAAAAAAAAWQQAAAAAAABaBAAAAAAAAAAAAABaBAAAAAAAAFsEAAAAAAAAAAAAAFsEAAAAAAAAXAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1104,
					3,
					"left_delete",
					null,
					"AwAAAFsEAAAAAAAAWwQAAAAAAAABAAAAYVoEAAAAAAAAWgQAAAAAAAABAAAAaVkEAAAAAAAAWQQAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1105,
					1,
					"insert",
					{
						"characters": "iagramMat,"
					},
					"CgAAAFkEAAAAAAAAWgQAAAAAAAAAAAAAWgQAAAAAAABbBAAAAAAAAAAAAABbBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAXQQAAAAAAAAAAAAAXQQAAAAAAABeBAAAAAAAAAAAAABeBAAAAAAAAF8EAAAAAAAAAAAAAF8EAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABhBAAAAAAAAAAAAABhBAAAAAAAAGIEAAAAAAAAAAAAAGIEAAAAAAAAYwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkEAAAAAAAAWQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": " axes.x,"
					},
					"CAAAAGMEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABlBAAAAAAAAAAAAABlBAAAAAAAAGYEAAAAAAAAAAAAAGYEAAAAAAAAZwQAAAAAAAAAAAAAZwQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGkEAAAAAAAAAAAAAGkEAAAAAAAAagQAAAAAAAAAAAAAagQAAAAAAABrBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMEAAAAAAAAYwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1107,
					1,
					"insert",
					{
						"characters": " axes.y"
					},
					"BwAAAGsEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABtBAAAAAAAAAAAAABtBAAAAAAAAG4EAAAAAAAAAAAAAG4EAAAAAAAAbwQAAAAAAAAAAAAAbwQAAAAAAABwBAAAAAAAAAAAAABwBAAAAAAAAHEEAAAAAAAAAAAAAHEEAAAAAAAAcgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsEAAAAAAAAawQAAAAAAAAAAAAAAADwvw"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAArBAAAAAAAAAQAAABheGVzKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoEAAAAAAAALgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1126,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAADEEAAAAAAAAMgQAAAAAAAAAAAAAMgQAAAAAAAAyBAAAAAAAAAQAAABheGVzMgQAAAAAAAAzBAAAAAAAAAAAAAAzBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAANQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEEAAAAAAAANQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1140,
					1,
					"cut",
					null,
					"AQAAAJMCAAAAAAAAkwIAAAAAAAAZAAAAbmV3IFJlY3QoMCwwLC4uLm1hdC5zaXplKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMCAAAAAAAArAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1145,
					1,
					"paste",
					null,
					"AgAAAK0CAAAAAAAAxgIAAAAAAAAAAAAAxgIAAAAAAADGAgAAAAAAAAQAAAByZWN0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0CAAAAAAAAsQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1160,
					1,
					"left_delete",
					null,
					"AQAAAIgCAAAAAAAAiAIAAAAAAAANAAAAbGV0IHJlY3QgPSA7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1173,
					1,
					"cut",
					null,
					"AQAAAEAEAAAAAAAAQAQAAAAAAAAiAAAAT3JpZ2luKGRpYWdyYW1NYXQsIGF4ZXMueCwgYXhlcy55KQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAEAAAAAAAAYgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": "origin"
					},
					"BgAAAEAEAAAAAAAAQQQAAAAAAAAAAAAAQQQAAAAAAABCBAAAAAAAAAAAAABCBAAAAAAAAEMEAAAAAAAAAAAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1176,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAACcEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAApBAAAAAAAAAAAAAApBAAAAAAAACoEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcEAAAAAAAAJwQAAAAAAAAAAAAAAMByQA"
				],
				[
					1177,
					1,
					"insert",
					{
						"characters": " origin"
					},
					"BwAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoEAAAAAAAAKgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1178,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADEEAAAAAAAAMgQAAAAAAAAAAAAAMgQAAAAAAAAzBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEEAAAAAAAAMQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMEAAAAAAAANAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMEAAAAAAAAMwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1180,
					1,
					"paste",
					null,
					"AQAAADQEAAAAAAAAVgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQEAAAAAAAANAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1181,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFYEAAAAAAAAVwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYEAAAAAAAAVgQAAAAAAAAAAAAAAADwvw"
				],
				[
					1183,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACYEAAAAAAAAJwQAAAAAAAAAAAAAJwQAAAAAAAApBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYEAAAAAAAAJgQAAAAAAAAAAAAAAAB+QA"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAKAQAAAAAAAAoBAAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYCAAAAAAAAxgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1203,
					1,
					"paste",
					null,
					"AQAAAMcCAAAAAAAA5AIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcCAAAAAAAAxwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1208,
					1,
					"cut",
					null,
					"AQAAAKACAAAAAAAAoAIAAAAAAAAjAAAAbmV3IFJlY3QoMCwwLC4uLm1hdC5zaXplKS5pbnNldCgyMCk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKACAAAAAAAAwwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1209,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKACAAAAAAAAoAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1210,
					1,
					"left_delete",
					null,
					"AQAAAKACAAAAAAAAoAIAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKECAAAAAAAAoQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1211,
					1,
					"insert",
					{
						"characters": "area"
					},
					"BAAAAKACAAAAAAAAoQIAAAAAAAAAAAAAoQIAAAAAAACiAgAAAAAAAAAAAACiAgAAAAAAAKMCAAAAAAAAAAAAAKMCAAAAAAAApAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKACAAAAAAAAoAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1213,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIgCAAAAAAAAiQIAAAAAAAAAAAAAiQIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgCAAAAAAAAiAIAAAAAAAAAAAAAAOBwQA"
				],
				[
					1214,
					1,
					"insert",
					{
						"characters": " area"
					},
					"BQAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsCAAAAAAAAiwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1215,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJACAAAAAAAAkQIAAAAAAAAAAAAAkQIAAAAAAACSAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1216,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJICAAAAAAAAkwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJICAAAAAAAAkgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1217,
					1,
					"paste",
					null,
					"AQAAAJMCAAAAAAAAtgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMCAAAAAAAAkwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1218,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALYCAAAAAAAAtwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYCAAAAAAAAtgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": "area"
					},
					"BQAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADnAgAAAAAAAAQAAABheGVz5wIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYCAAAAAAAA6gIAAAAAAAAAAAAAAADwvw"
				],
				[
					1232,
					1,
					"insert",
					{
						"characters": "area"
					},
					"BQAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADuAgAAAAAAAAQAAABheGVz7gIAAAAAAADvAgAAAAAAAAAAAADvAgAAAAAAAPACAAAAAAAAAAAAAPACAAAAAAAA8QIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0CAAAAAAAA8QIAAAAAAAAAAAAAAADwvw"
				],
				[
					1237,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTBQAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLEdldFJlY3QgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgRklMTEVEIH0gZnJvbSAnb3BlbmN2JzsKaW1wb3J0IHsgVGV4dFN0eWxlLCBEcmF3VGV4dCB9IGZyb20gJy4vcWpzLW9wZW5jdi9qcy9jdkhpZ2hHVUkuanMnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsgbWF4QXJyYXlMZW5ndGg6IDEwMCwgY29sb3JzOiB0cnVlLCBkZXB0aDogSW5maW5pdHksIGNvbXBhY3Q6IDEsIGN1c3RvbUluc3BlY3Q6IHRydWUgfQogIH0pOwoKICBsZXQgZm9udEZpbGUgPSAncWpzLW9wZW5jdi9NaXNjRml4ZWRTQzYxMy50dGYnLAogICAgZm9udFNpemUgPSAxMjsKCiAgbGV0IGZvbnQgPSBuZXcgVGV4dFN0eWxlKGZvbnRGaWxlLCBmb250U2l6ZSk7CgogIGxldCBzaXplID0gZm9udC5zaXplKCdYJyk7CgogIGxldCBtYXQgPSBuZXcgTWF0KDQ4MCwgNjQwLCBDVl84VUMzKTsKbGV0IGFyZWEgPSBuZXcgUmVjdCgwLDAsLi4ubWF0LnNpemUpLmluc2V0KDIwKTsKICBsZXQgZGlhZ3JhbU1hdCA9IG1hdChhcmVhKTsKCiAgY29uc29sZS5sb2coJ2FyZWEnLCBhcmVhKTsKCiAgICBEcmF3LnJlY3RhbmdsZShkaWFncmFtTWF0LCBuZXcgUG9pbnQoMCwgMCksIG5ldyBQb2ludCguLi5kaWFncmFtTWF0LnNpemUpLCBbMjU1LCAyNTUsIDI1NV0sIEZJTExFRCk7CgoKICBsZXQgYXhlcyA9IHsKICAgIHg6IEF4aXNQb2ludHMoMTAwLCAyMCwgZmFsc2UsIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSksCiAgICB5OiBBeGlzUG9pbnRzKDEwMCwgMjAsIHRydWUsIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSkKICB9OwoKCiAgY29uc29sZS5sb2coJ2F4ZXMnLCBheGVzKTsKCiAgbGV0IHJlY3QgPSBHZXRSZWN0KGRpYWdyYW1NYXQsIGF4ZXMueCwgYXhlcy55KTsKICBjb25zb2xlLmxvZygncmVjdCcsIHJlY3QpOwoKbGV0IG9yaWdpbiA9IE9yaWdpbihkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSk7CiAgRHJhd0Nyb3NzKGRpYWdyYW1NYXQsIG9yaWdpbik7CgogIERyYXdBeGlzKGRpYWdyYW1NYXQsIGF4ZXMueCwgb3JpZ2luKTsKICBEcmF3QXhpcyhkaWFncmFtTWF0LCBheGVzLnksIG9yaWdpbik7CgogIGNvbnNvbGUubG9nKCdvcmlnaW4nLCBvcmlnaW4pOwoKICBpbXdyaXRlKCdkaWFncmFtLnBuZycsIG1hdCk7Cn0KCm1haW4oLi4uc2NyaXB0QXJncyk7CgAAAAAAAAAAVgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8CAAAAAAAAXwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1241,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADkAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1242,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoAAAAAAAAAOwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoAAAAAAAAAOgAAAAAAAAAAAAAAAADwvw"
				],
				[
					1243,
					1,
					"paste",
					null,
					"AQAAADsAAAAAAAAAPgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAADwvw"
				],
				[
					1244,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD4AAAAAAAAAPwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAADwvw"
				],
				[
					1245,
					1,
					"insert",
					{
						"characters": " X,"
					},
					"AwAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8AAAAAAAAAPwAAAAAAAAAAAAAAAADwvw"
				],
				[
					1246,
					1,
					"insert",
					{
						"characters": " Y"
					},
					"AgAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAAQgAAAAAAAAAAAAAAAADwvw"
				],
				[
					1259,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AgAAAJcDAAAAAAAAmAMAAAAAAAAAAAAAmAMAAAAAAACYAwAAAAAAAAUAAABmYWxzZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcDAAAAAAAAnAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1264,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AgAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADOAwAAAAAAAAQAAAB0cnVl",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0DAAAAAAAA0QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1273,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC4AQAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcBAAAAAAAAuAEAAAAAAAAAAAAAAADwvw"
				],
				[
					1298,
					1,
					"insert",
					{
						"characters": "mst"
					},
					"AwAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADXBAAAAAAAAAAAAADXBAAAAAAAANgEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUEAAAAAAAA1QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1299,
					3,
					"left_delete",
					null,
					"AwAAANcEAAAAAAAA1wQAAAAAAAABAAAAdNYEAAAAAAAA1gQAAAAAAAABAAAAc9UEAAAAAAAA1QQAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAADwvw"
				],
				[
					1300,
					1,
					"insert",
					{
						"characters": ",style"
					},
					"BgAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADXBAAAAAAAAAAAAADXBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAADaBAAAAAAAANsEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUEAAAAAAAA1QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1304,
					1,
					"insert",
					{
						"characters": ",style"
					},
					"BgAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMFAAAAAAAAAwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1321,
					1,
					"insert",
					{
						"characters": "font"
					},
					"BQAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADXBAAAAAAAAAUAAABzdHlsZdcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAADZBAAAAAAAANoEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYEAAAAAAAA2wQAAAAAAAAAAAAAAADwvw"
				],
				[
					1333,
					1,
					"paste",
					null,
					"AgAAAAMFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAHBQAAAAAAAAUAAABzdHlsZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMFAAAAAAAACAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1336,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABkBQAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLCBHZXRSZWN0LCBNYXgsIFgsIFkgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgRklMTEVEIH0gZnJvbSAnb3BlbmN2JzsKaW1wb3J0IHsgVGV4dFN0eWxlLCBEcmF3VGV4dCB9IGZyb20gJy4vcWpzLW9wZW5jdi9qcy9jdkhpZ2hHVUkuanMnOwoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsgbWF4QXJyYXlMZW5ndGg6IDEwMCwgY29sb3JzOiB0cnVlLCBkZXB0aDogSW5maW5pdHksIGNvbXBhY3Q6IDAsIGN1c3RvbUluc3BlY3Q6IHRydWUgfQogIH0pOwoKICBsZXQgZm9udEZpbGUgPSAncWpzLW9wZW5jdi9NaXNjRml4ZWRTQzYxMy50dGYnLAogICAgZm9udFNpemUgPSAxMjsKCiAgbGV0IGZvbnQgPSBuZXcgVGV4dFN0eWxlKGZvbnRGaWxlLCBmb250U2l6ZSk7CgogIGxldCBzaXplID0gZm9udC5zaXplKCdYJyk7CgogIGxldCBtYXQgPSBuZXcgTWF0KDQ4MCwgNjQwLCBDVl84VUMzKTsKICBsZXQgYXJlYSA9IG5ldyBSZWN0KDAsIDAsIC4uLm1hdC5zaXplKS5pbnNldCgyMCk7CiAgbGV0IGRpYWdyYW1NYXQgPSBtYXQoYXJlYSk7CgogIGNvbnNvbGUubG9nKCdhcmVhJywgYXJlYSk7CgogIERyYXcucmVjdGFuZ2xlKGRpYWdyYW1NYXQsIG5ldyBQb2ludCgwLCAwKSwgbmV3IFBvaW50KC4uLmRpYWdyYW1NYXQuc2l6ZSksIFsyNTUsIDI1NSwgMjU1XSwgRklMTEVEKTsKCiAgbGV0IGF4ZXMgPSB7CiAgICB4OiBBeGlzUG9pbnRzKDEwMCwgMjAsIFgsIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSksCiAgICB5OiBBeGlzUG9pbnRzKDEwMCwgMjAsIFksIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSkKICB9OwoKICBjb25zb2xlLmxvZygnYXhlcycsIGF4ZXMpOwoKICBsZXQgcmVjdCA9IEdldFJlY3QoZGlhZ3JhbU1hdCwgYXhlcy54LCBheGVzLnkpOwogIGNvbnNvbGUubG9nKCdyZWN0JywgcmVjdCk7CgogIGxldCBvcmlnaW4gPSBPcmlnaW4oZGlhZ3JhbU1hdCwgYXhlcy54LCBheGVzLnkpOwogIERyYXdDcm9zcyhkaWFncmFtTWF0LCBvcmlnaW4pOwoKICBEcmF3QXhpcyhkaWFncmFtTWF0LCBheGVzLngsIG9yaWdpbixmb250KTsKICBEcmF3QXhpcyhkaWFncmFtTWF0LCBheGVzLnksIG9yaWdpbixmb250KTsKCiAgY29uc29sZS5sb2coJ29yaWdpbicsIG9yaWdpbik7CgogIGltd3JpdGUoJ2RpYWdyYW0ucG5nJywgbWF0KTsKfQoKbWFpbiguLi5zY3JpcHRBcmdzKTsKAAAAAAAAAABmBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcFAAAAAAAABwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1345,
					2,
					"left_delete",
					null,
					"AgAAAO0DAAAAAAAA7QMAAAAAAAAdAAAAICBjb25zb2xlLmxvZygnYXhlcycsIGF4ZXMpOwrsAwAAAAAAAOwDAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoEAAAAAAAA7QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1400,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABwEAAAAAAAAHQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1401,
					1,
					"insert",
					{
						"characters": " font"
					},
					"BQAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAfBAAAAAAAAAAAAAAfBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAIQQAAAAAAAAAAAAAIQQAAAAAAAAiBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0EAAAAAAAAHQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1408,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAALcEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC4BAAAAAAAAAYAAABvcmlnaW64BAAAAAAAALkEAAAAAAAAAAAAALkEAAAAAAAAugQAAAAAAAAAAAAAugQAAAAAAAC7BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcEAAAAAAAAvQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1415,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAOMEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADkBAAAAAAAAAYAAABvcmlnaW7kBAAAAAAAAOUEAAAAAAAAAAAAAOUEAAAAAAAA5gQAAAAAAAAAAAAA5gQAAAAAAADnBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMEAAAAAAAA6QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1420,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcEAAAAAAAAdwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": "\n\nDraw.rec"
					},
					"DQAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPUEAAAAAAAAAAAAAPUEAAAAAAAA9wQAAAAAAAAAAAAA8gQAAAAAAADyBAAAAAAAAAIAAAAgIPUEAAAAAAAA9gQAAAAAAAAAAAAA9gQAAAAAAAD3BAAAAAAAAAAAAAD3BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA+QQAAAAAAAAAAAAA+QQAAAAAAAD6BAAAAAAAAAAAAAD6BAAAAAAAAPsEAAAAAAAAAAAAAPsEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAD9BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEEAAAAAAAA8QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1428,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0EAAAAAAAA/QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1429,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP4EAAAAAAAAAAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4EAAAAAAAA/gQAAAAAAAAAAAAAAADwvw"
				],
				[
					1430,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAP4EAAAAAAAA/gQAAAAAAAABAAAAKP4EAAAAAAAA/gQAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8EAAAAAAAA/wQAAAAAAAAAAAAAAADwvw"
				],
				[
					1431,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAAP4EAAAAAAAA/wQAAAAAAAAAAAAA/wQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAEFAAAAAAAAAAAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4EAAAAAAAA/gQAAAAAAAAAAAAAAADwvw"
				],
				[
					1432,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAMFAAAAAAAABQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMFAAAAAAAAAwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1433,
					1,
					"insert",
					{
						"characters": "diagram"
					},
					"BwAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAcFAAAAAAAAAAAAAAcFAAAAAAAACAUAAAAAAAAAAAAACAUAAAAAAAAJBQAAAAAAAAAAAAAJBQAAAAAAAAoFAAAAAAAAAAAAAAoFAAAAAAAACwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQFAAAAAAAABAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1434,
					1,
					"insert",
					{
						"characters": "Mat"
					},
					"AwAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA4FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsFAAAAAAAACwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1435,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA4FAAAAAAAADwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4FAAAAAAAADgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1436,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8FAAAAAAAAEAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8FAAAAAAAADwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1437,
					1,
					"insert",
					{
						"characters": "rect.tl,"
					},
					"CAAAABAFAAAAAAAAEQUAAAAAAAAAAAAAEQUAAAAAAAASBQAAAAAAAAAAAAASBQAAAAAAABMFAAAAAAAAAAAAABMFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABYFAAAAAAAAAAAAABYFAAAAAAAAFwUAAAAAAAAAAAAAFwUAAAAAAAAYBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAFAAAAAAAAEAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1438,
					1,
					"insert",
					{
						"characters": " rect.br,"
					},
					"CQAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAHAUAAAAAAAAAAAAAHAUAAAAAAAAdBQAAAAAAAAAAAAAdBQAAAAAAAB4FAAAAAAAAAAAAAB4FAAAAAAAAHwUAAAAAAAAAAAAAHwUAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACEFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgFAAAAAAAAGAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1439,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACEFAAAAAAAAIgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEFAAAAAAAAIQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1440,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACIFAAAAAAAAJAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIFAAAAAAAAIgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1441,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1442,
					1,
					"left_delete",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1443,
					1,
					"insert",
					{
						"characters": "0,0,255"
					},
					"BwAAACMFAAAAAAAAJAUAAAAAAAAAAAAAJAUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACYFAAAAAAAAAAAAACYFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAoBQAAAAAAAAAAAAAoBQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMFAAAAAAAAIwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1445,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACsFAAAAAAAALAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsFAAAAAAAAKwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": " FILLED"
					},
					"BwAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC8FAAAAAAAAAAAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAAxBQAAAAAAADIFAAAAAAAAAAAAADIFAAAAAAAAMwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwFAAAAAAAALAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1447,
					1,
					"insert",
					{
						"characters": " ,LINE_AA"
					},
					"CQAAADMFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADYFAAAAAAAAAAAAADYFAAAAAAAANwUAAAAAAAAAAAAANwUAAAAAAAA4BQAAAAAAAAAAAAA4BQAAAAAAADkFAAAAAAAAAAAAADkFAAAAAAAAOgUAAAAAAAAAAAAAOgUAAAAAAAA7BQAAAAAAAAAAAAA7BQAAAAAAADwFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMFAAAAAAAAMwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1449,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD0FAAAAAAAAPgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0FAAAAAAAAPQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1453,
					7,
					"left_delete",
					null,
					"BwAAADsFAAAAAAAAOwUAAAAAAAABAAAAQToFAAAAAAAAOgUAAAAAAAABAAAAQTkFAAAAAAAAOQUAAAAAAAABAAAAXzgFAAAAAAAAOAUAAAAAAAABAAAARTcFAAAAAAAANwUAAAAAAAABAAAATjYFAAAAAAAANgUAAAAAAAABAAAASTUFAAAAAAAANQUAAAAAAAABAAAATA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwFAAAAAAAAPAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1454,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAADUFAAAAAAAANgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUFAAAAAAAANQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1501,
					1,
					"insert",
					{
						"characters": "CV_RGB(255,"
					},
					"CwAAACIFAAAAAAAAIwUAAAAAAAAAAAAAIwUAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACUFAAAAAAAAAAAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAtBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIFAAAAAAAAIgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1502,
					1,
					"insert",
					{
						"characters": "0,0)"
					},
					"BAAAAC0FAAAAAAAALgUAAAAAAAAAAAAALgUAAAAAAAAvBQAAAAAAAAAAAAAvBQAAAAAAADAFAAAAAAAAAAAAADAFAAAAAAAAMQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0FAAAAAAAALQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1503,
					9,
					"right_delete",
					null,
					"CQAAADEFAAAAAAAAMQUAAAAAAAABAAAAWzEFAAAAAAAAMQUAAAAAAAABAAAAMDEFAAAAAAAAMQUAAAAAAAABAAAALDEFAAAAAAAAMQUAAAAAAAABAAAAMDEFAAAAAAAAMQUAAAAAAAABAAAALDEFAAAAAAAAMQUAAAAAAAABAAAAMjEFAAAAAAAAMQUAAAAAAAABAAAANTEFAAAAAAAAMQUAAAAAAAABAAAANTEFAAAAAAAAMQUAAAAAAAABAAAAXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEFAAAAAAAAMQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1508,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8AAAAAAAAAzwAAAAAAAAAAAAAAAADwvw"
				],
				[
					1509,
					1,
					"insert",
					{
						"characters": " CV_RGB"
					},
					"BwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAADwvw"
				],
				[
					1573,
					1,
					"paste",
					null,
					"AQAAAPoEAAAAAAAAFwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoEAAAAAAAA+gQAAAAAAAAAAAAAAADwvw"
				],
				[
					1584,
					1,
					"insert",
					{
						"characters": "\n\nconst"
					},
					"CgAAAPkEAAAAAAAA+gQAAAAAAAAAAAAA+gQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/wQAAAAAAAAAAAAA+gQAAAAAAAD6BAAAAAAAAAIAAAAgIP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkEAAAAAAAA+QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1585,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIFAAAAAAAAAwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIFAAAAAAAAAgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1586,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAMFAAAAAAAABQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMFAAAAAAAAAwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1587,
					1,
					"insert",
					{
						"characters": "tl,br"
					},
					"BQAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAcFAAAAAAAAAAAAAAcFAAAAAAAACAUAAAAAAAAAAAAACAUAAAAAAAAJBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQFAAAAAAAABAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1589,
					1,
					"insert",
					{
						"characters": "=rect;"
					},
					"BgAAAAoFAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAAMBQAAAAAAAAAAAAAMBQAAAAAAAA0FAAAAAAAAAAAAAA0FAAAAAAAADgUAAAAAAAAAAAAADgUAAAAAAAAPBQAAAAAAAAAAAAAPBQAAAAAAABAFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoFAAAAAAAACgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1591,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACYFAAAAAAAAKAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYFAAAAAAAAJgUAAAAAAAAAAAAAAEBqQA"
				],
				[
					1592,
					1,
					"insert",
					{
						"characters": "tl,br"
					},
					"BQAAACcFAAAAAAAAKAUAAAAAAAAAAAAAKAUAAAAAAAApBQAAAAAAAAAAAAApBQAAAAAAACoFAAAAAAAAAAAAACoFAAAAAAAAKwUAAAAAAAAAAAAAKwUAAAAAAAAsBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcFAAAAAAAAJwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1594,
					5,
					"right_delete",
					null,
					"BQAAAC0FAAAAAAAALQUAAAAAAAABAAAAIC0FAAAAAAAALQUAAAAAAAABAAAAci0FAAAAAAAALQUAAAAAAAABAAAAZS0FAAAAAAAALQUAAAAAAAABAAAAYy0FAAAAAAAALQUAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0FAAAAAAAALQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1602,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAACcFAAAAAAAAKAUAAAAAAAAAAAAAKAUAAAAAAAApBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcFAAAAAAAAJwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1603,
					2,
					"left_delete",
					null,
					"AgAAACgFAAAAAAAAKAUAAAAAAAABAAAAZScFAAAAAAAAJwUAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkFAAAAAAAAKQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1607,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABAFAAAAAAAAEQUAAAAAAAAAAAAAEQUAAAAAAAATBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAFAAAAAAAAEAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1609,
					1,
					"cut",
					null,
					"AQAAAP0EAAAAAAAA/QQAAAAAAAAWAAAAY29uc3Qge3RsLGJyfT1yZWN0OwogIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMFAAAAAAAA/QQAAAAAAAAAAAAAAAA0QA"
				],
				[
					1610,
					2,
					"paste",
					null,
					"AgAAAP0EAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAApBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0EAAAAAAAA/QQAAAAAAAAAAAAAAADwvw"
				],
				[
					1613,
					2,
					"right_delete",
					null,
					"AwAAABoFAAAAAAAAGgUAAAAAAAABAAAAdCYFAAAAAAAAJgUAAAAAAAACAAAAICAaBQAAAAAAABoFAAAAAAAAAQAAAGw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1614,
					1,
					"insert",
					{
						"characters": "y1"
					},
					"AgAAABoFAAAAAAAAGwUAAAAAAAAAAAAAGwUAAAAAAAAcBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1616,
					2,
					"right_delete",
					null,
					"AgAAAB0FAAAAAAAAHQUAAAAAAAABAAAAYh0FAAAAAAAAHQUAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0FAAAAAAAAHQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1617,
					1,
					"insert",
					{
						"characters": "y2"
					},
					"AgAAAB0FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAfBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0FAAAAAAAAHQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1624,
					1,
					"cut",
					null,
					"AQAAACgFAAAAAAAAKAUAAAAAAAAfAAAAICBjb25zb2xlLmxvZygncmVjdCcse3RsLGJyfSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgFAAAAAAAARwUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1625,
					2,
					"paste",
					null,
					"AgAAACgFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABmBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgFAAAAAAAAKAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1627,
					5,
					"left_delete",
					null,
					"BQAAAGEFAAAAAAAAYQUAAAAAAAABAAAAcmAFAAAAAAAAYAUAAAAAAAABAAAAYl8FAAAAAAAAXwUAAAAAAAABAAAALF4FAAAAAAAAXgUAAAAAAAABAAAAbF0FAAAAAAAAXQUAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIFAAAAAAAAYgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1628,
					1,
					"insert",
					{
						"characters": "y1,y2"
					},
					"BQAAAF0FAAAAAAAAXgUAAAAAAAAAAAAAXgUAAAAAAABfBQAAAAAAAAAAAABfBQAAAAAAAGAFAAAAAAAAAAAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0FAAAAAAAAXQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1632,
					1,
					"cut",
					null,
					"AQAAACgFAAAAAAAAKAUAAAAAAAAfAAAAICBjb25zb2xlLmxvZygncmVjdCcse3RsLGJyfSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgFAAAAAAAARwUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1634,
					1,
					"paste",
					null,
					"AQAAABEFAAAAAAAAMAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEFAAAAAAAAEQUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1639,
					1,
					"insert",
					{
						"characters": "\n\nrect"
					},
					"CQAAAEUFAAAAAAAARgUAAAAAAAAAAAAARgUAAAAAAABIBQAAAAAAAAAAAABIBQAAAAAAAEkFAAAAAAAAAAAAAEkFAAAAAAAASwUAAAAAAAAAAAAARgUAAAAAAABGBQAAAAAAAAIAAAAgIEkFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABLBQAAAAAAAAAAAABLBQAAAAAAAEwFAAAAAAAAAAAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUFAAAAAAAARQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1640,
					1,
					"insert",
					{
						"characters": ".1"
					},
					"AgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0FAAAAAAAATQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1641,
					1,
					"left_delete",
					null,
					"AQAAAE4FAAAAAAAATgUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8FAAAAAAAATwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1642,
					1,
					"insert",
					{
						"characters": "y1"
					},
					"AgAAAE4FAAAAAAAATwUAAAAAAAAAAAAATwUAAAAAAABQBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4FAAAAAAAATgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFAFAAAAAAAAUQUAAAAAAAAAAAAAUQUAAAAAAABSBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAFAAAAAAAAUAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1644,
					1,
					"insert",
					{
						"characters": " dia"
					},
					"BAAAAFIFAAAAAAAAUwUAAAAAAAAAAAAAUwUAAAAAAABUBQAAAAAAAAAAAABUBQAAAAAAAFUFAAAAAAAAAAAAAFUFAAAAAAAAVgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIFAAAAAAAAUgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1645,
					1,
					"insert",
					{
						"characters": "gramMat.ro"
					},
					"CgAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYFAAAAAAAAVgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1646,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAFAAAAAAAAYAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1647,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIFAAAAAAAAYgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1648,
					1,
					"insert",
					{
						"characters": " rect.y1;"
					},
					"CQAAAGQFAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABmBQAAAAAAAAAAAABmBQAAAAAAAGcFAAAAAAAAAAAAAGcFAAAAAAAAaAUAAAAAAAAAAAAAaAUAAAAAAABpBQAAAAAAAAAAAABpBQAAAAAAAGoFAAAAAAAAAAAAAGoFAAAAAAAAawUAAAAAAAAAAAAAawUAAAAAAABsBQAAAAAAAAAAAABsBQAAAAAAAG0FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQFAAAAAAAAZAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1651,
					1,
					"cut",
					null,
					"AQAAAEcFAAAAAAAARwUAAAAAAAAnAAAAICByZWN0LnkxID0gZGlhZ3JhbU1hdC5yb3dzIC0gcmVjdC55MTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4FAAAAAAAARwUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1652,
					2,
					"paste",
					null,
					"AgAAAEcFAAAAAAAAbgUAAAAAAAAAAAAAbgUAAAAAAACVBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcFAAAAAAAARwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB3BQAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1658,
					1,
					"left_delete",
					null,
					"AQAAAHYFAAAAAAAAdgUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcFAAAAAAAAdwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAHYFAAAAAAAAdwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYFAAAAAAAAdgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACTBQAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1677,
					1,
					"cut",
					null,
					"AQAAADAFAAAAAAAAMAUAAAAAAAAWAAAAICBjb25zdCB7eTEseTJ9PXJlY3Q7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAFAAAAAAAARgUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1679,
					1,
					"paste",
					null,
					"AQAAAH8FAAAAAAAAlQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8FAAAAAAAAfwUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1680,
					1,
					"insert",
					{
						"characters": "SS"
					},
					"AgAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUFAAAAAAAAlQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1681,
					2,
					"left_delete",
					null,
					"AgAAAJYFAAAAAAAAlgUAAAAAAAABAAAAU5UFAAAAAAAAlQUAAAAAAAABAAAAUw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcFAAAAAAAAlwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1726,
					1,
					"insert",
					{
						"characters": "\nrect.x¬ß"
					},
					"CAAAADAFAAAAAAAAMQUAAAAAAAAAAAAAMQUAAAAAAAAyBQAAAAAAAAAAAAAyBQAAAAAAADMFAAAAAAAAAAAAADMFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADYFAAAAAAAAAAAAADYFAAAAAAAANwUAAAAAAAAAAAAANwUAAAAAAAA4BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAFAAAAAAAAMAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1727,
					1,
					"left_delete",
					null,
					"AQAAADcFAAAAAAAANwUAAAAAAAACAAAAwqc",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgFAAAAAAAAOAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1728,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADcFAAAAAAAAOAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcFAAAAAAAANwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAADgFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA6BQAAAAAAAAAAAAA6BQAAAAAAADsFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgFAAAAAAAAOAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1730,
					1,
					"insert",
					{
						"characters": " 1;"
					},
					"AwAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAAA9BQAAAAAAAAAAAAA9BQAAAAAAAD4FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsFAAAAAAAAOwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1733,
					1,
					"cut",
					null,
					"AQAAADEFAAAAAAAAMQUAAAAAAAAOAAAAcmVjdC54MSArPSAxOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8FAAAAAAAAMQUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1734,
					2,
					"paste",
					null,
					"AgAAADEFAAAAAAAAPwUAAAAAAAAAAAAAPwUAAAAAAABNBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEFAAAAAAAAMQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1736,
					1,
					"left_delete",
					null,
					"AQAAAEUFAAAAAAAARQUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYFAAAAAAAARgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1737,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEUFAAAAAAAARgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUFAAAAAAAARQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1743,
					1,
					"cut",
					null,
					"AQAAADEFAAAAAAAAMQUAAAAAAAAcAAAAcmVjdC54MSArPSAxOwpyZWN0LngyICs9IDE7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEFAAAAAAAATQUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1748,
					1,
					"paste",
					null,
					"AQAAADEFAAAAAAAATQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEFAAAAAAAAMQUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1751,
					2,
					"left_delete",
					null,
					"AgAAAEUFAAAAAAAARQUAAAAAAAABAAAAMkQFAAAAAAAARAUAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYFAAAAAAAARgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1752,
					1,
					"insert",
					{
						"characters": "y1"
					},
					"AgAAAEQFAAAAAAAARQUAAAAAAAAAAAAARQUAAAAAAABGBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQFAAAAAAAARAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1760,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwFAAAAAAAATAUAAAAAAAD////////vfw"
				],
				[
					1771,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1772,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUAAAAAAAAARgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUAAAAAAAAARQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1773,
					1,
					"paste",
					null,
					"AQAAAEYAAAAAAAAASgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAADwvw"
				],
				[
					1786,
					1,
					"insert",
					{
						"characters": "Flip("
					},
					"BQAAABEFAAAAAAAAEgUAAAAAAAAAAAAAEgUAAAAAAAATBQAAAAAAAAAAAAATBQAAAAAAABQFAAAAAAAAAAAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEFAAAAAAAAEQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1788,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABoFAAAAAAAAGwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1792,
					1,
					"left_delete",
					null,
					"AQAAAFoFAAAAAAAAWgUAAAAAAABOAAAAICByZWN0LnkxID0gZGlhZ3JhbU1hdC5yb3dzIC0gcmVjdC55MTsKICByZWN0LnkyID0gZGlhZ3JhbU1hdC5yb3dzIC0gcmVjdC55MjsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAqAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1794,
					1,
					"left_delete",
					null,
					"AQAAAFoFAAAAAAAAWgUAAAAAAAAWAAAAICBjb25zdCB7eTEseTJ9PXJlY3Q7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAcAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1796,
					1,
					"left_delete",
					null,
					"AQAAAFoFAAAAAAAAWgUAAAAAAAAgAAAACiAgY29uc29sZS5sb2coJ3JlY3QnLHt5MSx5Mn0pOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAegUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1802,
					1,
					"insert",
					{
						"characters": "diagramMat,"
					},
					"CwAAABYFAAAAAAAAFwUAAAAAAAAAAAAAFwUAAAAAAAAYBQAAAAAAAAAAAAAYBQAAAAAAABkFAAAAAAAAAAAAABkFAAAAAAAAGgUAAAAAAAAAAAAAGgUAAAAAAAAbBQAAAAAAAAAAAAAbBQAAAAAAABwFAAAAAAAAAAAAABwFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAeBQAAAAAAAAAAAAAeBQAAAAAAAB8FAAAAAAAAAAAAAB8FAAAAAAAAIAUAAAAAAAAAAAAAIAUAAAAAAAAhBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYFAAAAAAAAFgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1803,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACEFAAAAAAAAIgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEFAAAAAAAAIQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1816,
					2,
					"right_delete",
					null,
					"AgAAAIQFAAAAAAAAhAUAAAAAAAAEAAAAcmVjdIQFAAAAAAAAhAUAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQFAAAAAAAAiAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1821,
					2,
					"right_delete",
					null,
					"AgAAAIgFAAAAAAAAiAUAAAAAAAAEAAAAcmVjdIgFAAAAAAAAiAUAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgFAAAAAAAAjAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1835,
					1,
					"insert",
					{
						"characters": "tl"
					},
					"AwAAAEkFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABKBQAAAAAAAAQAAAByZWN0SgUAAAAAAABLBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkFAAAAAAAATQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1837,
					1,
					"left_delete",
					null,
					"AQAAAE0FAAAAAAAATQUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4FAAAAAAAATgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1840,
					1,
					"right_delete",
					null,
					"AQAAAFoFAAAAAAAAWgUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAWgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1843,
					4,
					"left_delete",
					null,
					"BAAAAFcFAAAAAAAAVwUAAAAAAAABAAAAdFYFAAAAAAAAVgUAAAAAAAABAAAAY1UFAAAAAAAAVQUAAAAAAAABAAAAZVQFAAAAAAAAVAUAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgFAAAAAAAAWAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1844,
					1,
					"insert",
					{
						"characters": "tl"
					},
					"AgAAAFQFAAAAAAAAVQUAAAAAAAAAAAAAVQUAAAAAAABWBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQFAAAAAAAAVAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1852,
					1,
					"left_delete",
					null,
					"AQAAAFkFAAAAAAAAWQUAAAAAAAABAAAAKw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAWgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1853,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAFkFAAAAAAAAWgUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkFAAAAAAAAWQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1859,
					1,
					"left_delete",
					null,
					"AQAAAF4FAAAAAAAAXgUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8FAAAAAAAAXwUAAAAAAAAAAAAAAABOQA"
				],
				[
					1866,
					1,
					"cut",
					null,
					"AQAAAAEFAAAAAAAAAQUAAAAAAAChAAAAICBjb25zdCB7dGwsYnJ9PUZsaXAoZGlhZ3JhbU1hdCwgcmVjdCk7CiAgY29uc29sZS5sb2coJ3JlY3QnLHt0bCxicn0pOwoKdGwueCArPSAxOwp0bC55IC09IDE7CgogIERyYXcucmVjdGFuZ2xlKGRpYWdyYW1NYXQsIHRsLCBiciwgQ1ZfUkdCKDI1NSwwLDApLCBGSUxMRUQgLDgpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEFAAAAAAAAogUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1869,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACpBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcEAAAAAAAApwQAAAAAAAAAAAAAAAAAAA"
				],
				[
					1871,
					1,
					"paste",
					null,
					"AQAAAKgEAAAAAAAASQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAAAAA"
				],
				[
					1878,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD+BQAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLCBHZXRSZWN0LCBNYXgsIFgsIFksIEZsaXAgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgRklMTEVELCBDVl9SR0IgfSBmcm9tICdvcGVuY3YnOwppbXBvcnQgeyBUZXh0U3R5bGUsIERyYXdUZXh0IH0gZnJvbSAnLi9xanMtb3BlbmN2L2pzL2N2SGlnaEdVSS5qcyc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogeyBtYXhBcnJheUxlbmd0aDogMTAwLCBjb2xvcnM6IHRydWUsIGRlcHRoOiBJbmZpbml0eSwgY29tcGFjdDogMCwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9CiAgfSk7CgogIGxldCBmb250RmlsZSA9ICdxanMtb3BlbmN2L01pc2NGaXhlZFNDNjEzLnR0ZicsCiAgICBmb250U2l6ZSA9IDEyOwoKICBsZXQgZm9udCA9IG5ldyBUZXh0U3R5bGUoZm9udEZpbGUsIGZvbnRTaXplKTsKCiAgbGV0IHNpemUgPSBmb250LnNpemUoJ1gnKTsKCiAgbGV0IG1hdCA9IG5ldyBNYXQoNDgwLCA2NDAsIENWXzhVQzMpOwogIGxldCBhcmVhID0gbmV3IFJlY3QoMCwgMCwgLi4ubWF0LnNpemUpLmluc2V0KDIwKTsKICBsZXQgZGlhZ3JhbU1hdCA9IG1hdChhcmVhKTsKCiAgY29uc29sZS5sb2coJ2FyZWEnLCBhcmVhKTsKCiAgRHJhdy5yZWN0YW5nbGUoZGlhZ3JhbU1hdCwgbmV3IFBvaW50KDAsIDApLCBuZXcgUG9pbnQoLi4uZGlhZ3JhbU1hdC5zaXplKSwgWzI1NSwgMjU1LCAyNTVdLCBGSUxMRUQpOwoKICBsZXQgYXhlcyA9IHsKICAgIHg6IEF4aXNQb2ludHMoMTAwLCAyMCwgWCwgZm9udCwgZGlhZ3JhbU1hdC5zaXplKSwKICAgIHk6IEF4aXNQb2ludHMoMTAwLCAyMCwgWSwgZm9udCwgZGlhZ3JhbU1hdC5zaXplKQogIH07CgogIGxldCByZWN0ID0gR2V0UmVjdChkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSwgZm9udCk7CiAgY29uc29sZS5sb2coJ3JlY3QnLCByZWN0KTsKCiAgbGV0IG9yaWdpbiA9IE9yaWdpbihkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSk7CiAvLyBEcmF3Q3Jvc3MoZGlhZ3JhbU1hdCwgb3JpZ2luKTsKCiAgY29uc3Qge3RsLGJyfT1GbGlwKGRpYWdyYW1NYXQsIHJlY3QpOwogIGNvbnNvbGUubG9nKCdyZWN0Jyx7dGwsYnJ9KTsKCnRsLnggKz0gMTsKdGwueSAtPSAxOwoKICBEcmF3LnJlY3RhbmdsZShkaWFncmFtTWF0LCB0bCwgYnIsIENWX1JHQigyNTUsMCwwKSwgRklMTEVEICw4KTsKCgogIERyYXdBeGlzKGRpYWdyYW1NYXQsIGF4ZXMueCwgcmVjdCwgZm9udCk7CiAgRHJhd0F4aXMoZGlhZ3JhbU1hdCwgYXhlcy55LCByZWN0LCBmb250KTsKCgogIGNvbnNvbGUubG9nKCdvcmlnaW4nLCBvcmlnaW4pOwoKICBpbXdyaXRlKCdkaWFncmFtLnBuZycsIG1hdCk7Cn0KCm1haW4oLi4uc2NyaXB0QXJncyk7CgAAAAAAAAAADAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkFAAAAAAAASQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1886,
					1,
					"insert",
					{
						"characters": "1'"
					},
					"AwAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACPAgAAAAAAAAIAAAA0OI8CAAAAAAAAkAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAjgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1887,
					1,
					"left_delete",
					null,
					"AQAAAI8CAAAAAAAAjwIAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJACAAAAAAAAkAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1888,
					1,
					"insert",
					{
						"characters": "024"
					},
					"AwAAAI8CAAAAAAAAkAIAAAAAAAAAAAAAkAIAAAAAAACRAgAAAAAAAAAAAACRAgAAAAAAAJICAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8CAAAAAAAAjwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1889,
					1,
					"right_delete",
					null,
					"AQAAAJICAAAAAAAAkgIAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJICAAAAAAAAkgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1891,
					3,
					"right_delete",
					null,
					"AwAAAJQCAAAAAAAAlAIAAAAAAAABAAAANpQCAAAAAAAAlAIAAAAAAAABAAAANJQCAAAAAAAAlAIAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1892,
					1,
					"insert",
					{
						"characters": "8700"
					},
					"BAAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAJcCAAAAAAAAmAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1893,
					3,
					"left_delete",
					null,
					"AwAAAJcCAAAAAAAAlwIAAAAAAAABAAAAMJYCAAAAAAAAlgIAAAAAAAABAAAAMJUCAAAAAAAAlQIAAAAAAAABAAAANw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgCAAAAAAAAmAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1894,
					1,
					"insert",
					{
						"characters": "00"
					},
					"AgAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACXAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1901,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAI4CAAAAAAAAjwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4CAAAAAAAAjgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1903,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAJgCAAAAAAAAmQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgCAAAAAAAAmAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1909,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABYDAAAAAAAAFwMAAAAAAAAAAAAAFwMAAAAAAAAYAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYDAAAAAAAAFgMAAAAAAAAAAAAAAAAAAA"
				],
				[
					1910,
					2,
					"left_delete",
					null,
					"AgAAABcDAAAAAAAAFwMAAAAAAAABAAAALxYDAAAAAAAAFgMAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgDAAAAAAAAGAMAAAAAAAAAAAAAAADwvw"
				],
				[
					1913,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgFAAAAAAAAGAUAAAAAAAAAAAAAAAAAAA"
				],
				[
					1914,
					2,
					"right_delete",
					null,
					"AgAAABoFAAAAAAAAGgUAAAAAAAABAAAAIBoFAAAAAAAAGgUAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1917,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPBgAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLCBHZXRSZWN0LCBNYXgsIFgsIFksIEZsaXAgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgRklMTEVELCBDVl9SR0IgfSBmcm9tICdvcGVuY3YnOwppbXBvcnQgeyBUZXh0U3R5bGUsIERyYXdUZXh0IH0gZnJvbSAnLi9xanMtb3BlbmN2L2pzL2N2SGlnaEdVSS5qcyc7CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogeyBtYXhBcnJheUxlbmd0aDogMTAwLCBjb2xvcnM6IHRydWUsIGRlcHRoOiBJbmZpbml0eSwgY29tcGFjdDogMCwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9CiAgfSk7CgogIGxldCBmb250RmlsZSA9ICdxanMtb3BlbmN2L01pc2NGaXhlZFNDNjEzLnR0ZicsCiAgICBmb250U2l6ZSA9IDEyOwoKICBsZXQgZm9udCA9IG5ldyBUZXh0U3R5bGUoZm9udEZpbGUsIGZvbnRTaXplKTsKCiAgbGV0IHNpemUgPSBmb250LnNpemUoJ1gnKTsKCiAgbGV0IG1hdCA9IG5ldyBNYXQoWzEwMjQsIDgwMF0sIENWXzhVQzMpOwogIGxldCBhcmVhID0gbmV3IFJlY3QoMCwgMCwgLi4ubWF0LnNpemUpLmluc2V0KDIwKTsKICBsZXQgZGlhZ3JhbU1hdCA9IG1hdChhcmVhKTsKCiAgY29uc29sZS5sb2coJ2FyZWEnLCBhcmVhKTsKCiAgRHJhdy5yZWN0YW5nbGUoZGlhZ3JhbU1hdCwgbmV3IFBvaW50KDAsIDApLCBuZXcgUG9pbnQoLi4uZGlhZ3JhbU1hdC5zaXplKSwgWzI1NSwgMjU1LCAyNTVdLCBGSUxMRUQpOwoKICBsZXQgYXhlcyA9IHsKICAgIHg6IEF4aXNQb2ludHMoMTAwLCAyMCwgWCwgZm9udCwgZGlhZ3JhbU1hdC5zaXplKSwKICAgIHk6IEF4aXNQb2ludHMoMTAwLCAyMCwgWSwgZm9udCwgZGlhZ3JhbU1hdC5zaXplKQogIH07CgogIGxldCByZWN0ID0gR2V0UmVjdChkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSwgZm9udCk7CiAgY29uc29sZS5sb2coJ3JlY3QnLCByZWN0KTsKCiAgbGV0IG9yaWdpbiA9IE9yaWdpbihkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSk7CiAgLy8gRHJhd0Nyb3NzKGRpYWdyYW1NYXQsIG9yaWdpbik7CgogIGNvbnN0IHsgdGwsIGJyIH0gPSBGbGlwKGRpYWdyYW1NYXQsIHJlY3QpOwogIGNvbnNvbGUubG9nKCdyZWN0JywgeyB0bCwgYnIgfSk7CgogIHRsLnggKz0gMTsKICB0bC55IC09IDE7CgovL0RyYXcucmVjdGFuZ2xlKGRpYWdyYW1NYXQsIHRsLCBiciwgQ1ZfUkdCKDI1NSwgMCwgMCksIEZJTExFRCwgOCk7CgogIERyYXdBeGlzKGRpYWdyYW1NYXQsIGF4ZXMueCwgcmVjdCwgZm9udCk7CiAgRHJhd0F4aXMoZGlhZ3JhbU1hdCwgYXhlcy55LCByZWN0LCBmb250KTsKCiAgY29uc29sZS5sb2coJ29yaWdpbicsIG9yaWdpbik7CgogIGltd3JpdGUoJ2RpYWdyYW0ucG5nJywgbWF0KTsKfQoKbWFpbiguLi5zY3JpcHRBcmdzKTsKAAAAAAAAAAARBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1931,
					1,
					"insert",
					{
						"characters": "&//"
					},
					"AwAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADsEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1932,
					3,
					"left_delete",
					null,
					"AwAAADoEAAAAAAAAOgQAAAAAAAABAAAALzkEAAAAAAAAOQQAAAAAAAABAAAALzgEAAAAAAAAOAQAAAAAAAABAAAAJg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsEAAAAAAAAOwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1933,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgEAAAAAAAAOAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1936,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAN0EAAAAAAAA3gQAAAAAAAAAAAAA3gQAAAAAAADfBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0EAAAAAAAA3QQAAAAAAAAAAAAAAAA0QA"
				],
				[
					1945,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AwAAAKQDAAAAAAAApQMAAAAAAAAAAAAApQMAAAAAAAClAwAAAAAAAAIAAAAyMKUDAAAAAAAApgMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQDAAAAAAAApgMAAAAAAAAAAAAAAADwvw"
				],
				[
					1948,
					1,
					"left_delete",
					null,
					"AQAAANoDAAAAAAAA2gMAAAAAAAABAAAAMg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsDAAAAAAAA2wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1949,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANoDAAAAAAAA2wMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoDAAAAAAAA2gMAAAAAAAAAAAAAAADwvw"
				],
				[
					1958,
					1,
					"insert",
					{
						"characters": "640"
					},
					"BAAAAI8CAAAAAAAAkAIAAAAAAAAAAAAAkAIAAAAAAACQAgAAAAAAAAQAAAAxMDI0kAIAAAAAAACRAgAAAAAAAAAAAACRAgAAAAAAAJICAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8CAAAAAAAAkwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1963,
					2,
					"right_delete",
					null,
					"AgAAAJQCAAAAAAAAlAIAAAAAAAABAAAAOJQCAAAAAAAAlAIAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1964,
					1,
					"insert",
					{
						"characters": "478"
					},
					"AwAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACWAgAAAAAAAAAAAACWAgAAAAAAAJcCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1965,
					2,
					"left_delete",
					null,
					"AgAAAJYCAAAAAAAAlgIAAAAAAAABAAAAOJUCAAAAAAAAlQIAAAAAAAABAAAANw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcCAAAAAAAAlwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1966,
					1,
					"insert",
					{
						"characters": "89"
					},
					"AgAAAJUCAAAAAAAAlgIAAAAAAAAAAAAAlgIAAAAAAACXAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1969,
					2,
					"left_delete",
					null,
					"AgAAAJYCAAAAAAAAlgIAAAAAAAABAAAAOZUCAAAAAAAAlQIAAAAAAAABAAAAOA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcCAAAAAAAAlwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1970,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAJUCAAAAAAAAlgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1977,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA3QAAAAAAAAAAAAAAAADwvw"
				],
				[
					1978,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4AAAAAAAAA3gAAAAAAAAAAAAAAAADwvw"
				],
				[
					1979,
					2,
					"left_delete",
					null,
					"AgAAAN4AAAAAAAAA3gAAAAAAAAABAAAAIN0AAAAAAAAA3QAAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8AAAAAAAAA3wAAAAAAAAAAAAAAAADwvw"
				],
				[
					1980,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA3QAAAAAAAAAAAAAAAADwvw"
				],
				[
					1981,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8AAAAAAAAA3wAAAAAAAAAAAAAAAADwvw"
				],
				[
					1982,
					2,
					"left_delete",
					null,
					"AgAAAN8AAAAAAAAA3wAAAAAAAAABAAAAIN4AAAAAAAAA3gAAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAADwvw"
				],
				[
					1983,
					1,
					"insert",
					{
						"characters": " LineIterator"
					},
					"DQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4AAAAAAAAA3gAAAAAAAAAAAAAAAADwvw"
				],
				[
					1997,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA6gUAAAAAAADsBQAAAAAAAAAAAADsBQAAAAAAAO0FAAAAAAAAAAAAAO0FAAAAAAAA7wUAAAAAAAAAAAAA6gUAAAAAAADqBQAAAAAAAAIAAAAgIO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADvBQAAAAAAAAAAAADvBQAAAAAAAPAFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkFAAAAAAAA6QUAAAAAAAAAAAAAAADwvw"
				],
				[
					1998,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAPAFAAAAAAAA8QUAAAAAAAAAAAAA8QUAAAAAAADyBQAAAAAAAAAAAADyBQAAAAAAAPMFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAFAAAAAAAA8AUAAAAAAAAAAAAAAADwvw"
				],
				[
					1999,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPMFAAAAAAAA9AUAAAAAAAAAAAAA9AUAAAAAAAD1BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMFAAAAAAAA8wUAAAAAAAAAAAAAAADwvw"
				],
				[
					2000,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUFAAAAAAAA9QUAAAAAAAAAAAAAAADwvw"
				],
				[
					2001,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkFAAAAAAAA+gUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkFAAAAAAAA+QUAAAAAAAAAAAAAAADwvw"
				],
				[
					2002,
					1,
					"paste",
					null,
					"AQAAAPoFAAAAAAAABgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoFAAAAAAAA+gUAAAAAAAAAAAAAAADwvw"
				],
				[
					2003,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAYGAAAAAAAACAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYGAAAAAAAABgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2004,
					1,
					"insert",
					{
						"characters": "mat,"
					},
					"BAAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAoGAAAAAAAAAAAAAAoGAAAAAAAACwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcGAAAAAAAABwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2005,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsGAAAAAAAADAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsGAAAAAAAACwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2010,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAAwGAAAAAAAADQYAAAAAAAAAAAAADQYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA8GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwGAAAAAAAADAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2011,
					1,
					"insert",
					{
						"characters": " Pouint"
					},
					"BwAAAA8GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABIGAAAAAAAAAAAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8GAAAAAAAADwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2012,
					4,
					"left_delete",
					null,
					"BAAAABUGAAAAAAAAFQYAAAAAAAABAAAAdBQGAAAAAAAAFAYAAAAAAAABAAAAbhMGAAAAAAAAEwYAAAAAAAABAAAAaRIGAAAAAAAAEgYAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2013,
					1,
					"insert",
					{
						"characters": "int"
					},
					"AwAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2014,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABUGAAAAAAAAFwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUGAAAAAAAAFQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2015,
					1,
					"insert",
					{
						"characters": "0,0,"
					},
					"BAAAABYGAAAAAAAAFwYAAAAAAAAAAAAAFwYAAAAAAAAYBgAAAAAAAAAAAAAYBgAAAAAAABkGAAAAAAAAAAAAABkGAAAAAAAAGgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYGAAAAAAAAFgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2016,
					1,
					"left_delete",
					null,
					"AQAAABkGAAAAAAAAGQYAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoGAAAAAAAAGgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2018,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAABoGAAAAAAAAGwYAAAAAAAAAAAAAGwYAAAAAAAAcBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoGAAAAAAAAGgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2019,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAABwGAAAAAAAAHQYAAAAAAAAAAAAAHQYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB8GAAAAAAAAAAAAAB8GAAAAAAAAIAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwGAAAAAAAAHAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2020,
					1,
					"insert",
					{
						"characters": " Point"
					},
					"BgAAACAGAAAAAAAAIQYAAAAAAAAAAAAAIQYAAAAAAAAiBgAAAAAAAAAAAAAiBgAAAAAAACMGAAAAAAAAAAAAACMGAAAAAAAAJAYAAAAAAAAAAAAAJAYAAAAAAAAlBgAAAAAAAAAAAAAlBgAAAAAAACYGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAGAAAAAAAAIAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2021,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACYGAAAAAAAAKAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYGAAAAAAAAJgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2022,
					1,
					"insert",
					{
						"characters": "mat.cols"
					},
					"CAAAACcGAAAAAAAAKAYAAAAAAAAAAAAAKAYAAAAAAAApBgAAAAAAAAAAAAApBgAAAAAAACoGAAAAAAAAAAAAACoGAAAAAAAAKwYAAAAAAAAAAAAAKwYAAAAAAAAsBgAAAAAAAAAAAAAsBgAAAAAAAC0GAAAAAAAAAAAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcGAAAAAAAAJwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2023,
					1,
					"insert",
					{
						"characters": "-1,"
					},
					"AwAAAC8GAAAAAAAAMAYAAAAAAAAAAAAAMAYAAAAAAAAxBgAAAAAAAAAAAAAxBgAAAAAAADIGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8GAAAAAAAALwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2024,
					1,
					"insert",
					{
						"characters": " mat.rows-1"
					},
					"CwAAADIGAAAAAAAAMwYAAAAAAAAAAAAAMwYAAAAAAAA0BgAAAAAAAAAAAAA0BgAAAAAAADUGAAAAAAAAAAAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADsGAAAAAAAAAAAAADsGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA9BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIGAAAAAAAAMgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2026,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD4GAAAAAAAAPwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4GAAAAAAAAPgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2027,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8GAAAAAAAAQAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8GAAAAAAAAPwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2032,
					2,
					"left_delete",
					null,
					"AgAAAD8GAAAAAAAAPwYAAAAAAAABAAAAID4GAAAAAAAAPgYAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAGAAAAAAAAQAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2034,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD8GAAAAAAAAQAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8GAAAAAAAAPwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2035,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAEAGAAAAAAAAQQYAAAAAAAAAAAAAQQYAAAAAAABDBgAAAAAAAAAAAABDBgAAAAAAAEQGAAAAAAAAAAAAAEQGAAAAAAAARgYAAAAAAAAAAAAAQQYAAAAAAABBBgAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAGAAAAAAAAQAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2054,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AgAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQwYAAAAAAABDBgAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEGAAAAAAAAQQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2055,
					1,
					"left_delete",
					null,
					"AQAAAEEGAAAAAAAAQQYAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIGAAAAAAAAQgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2056,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQgYAAAAAAABDBgAAAAAAAAAAAABDBgAAAAAAAEQGAAAAAAAAAAAAAEQGAAAAAAAARQYAAAAAAAAAAAAARQYAAAAAAABGBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEGAAAAAAAAQQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2057,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYGAAAAAAAARwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYGAAAAAAAARgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2058,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEcGAAAAAAAASQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcGAAAAAAAARwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2059,
					1,
					"paste",
					null,
					"AQAAAEgGAAAAAAAAvAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgGAAAAAAAASAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2060,
					1,
					"left_delete",
					null,
					"AQAAALsGAAAAAAAAuwYAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwGAAAAAAAAvAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2062,
					1,
					"insert",
					{
						"characters": "=li;"
					},
					"BAAAALwGAAAAAAAAvQYAAAAAAAAAAAAAvQYAAAAAAAC+BgAAAAAAAAAAAAC+BgAAAAAAAL8GAAAAAAAAAAAAAL8GAAAAAAAAwAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwGAAAAAAAAvAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2065,
					1,
					"insert",
					{
						"characters": "console"
					},
					"BwAAAMIGAAAAAAAAwwYAAAAAAAAAAAAAwwYAAAAAAADEBgAAAAAAAAAAAADEBgAAAAAAAMUGAAAAAAAAAAAAAMUGAAAAAAAAxgYAAAAAAAAAAAAAxgYAAAAAAADHBgAAAAAAAAAAAADHBgAAAAAAAMgGAAAAAAAAAAAAAMgGAAAAAAAAyQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIGAAAAAAAAwgYAAAAAAAAAAAAAAAAAAA"
				],
				[
					2066,
					2,
					"left_delete",
					null,
					"AgAAAMgGAAAAAAAAyAYAAAAAAAABAAAAZccGAAAAAAAAxwYAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkGAAAAAAAAyQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2067,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAMcGAAAAAAAAyAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcGAAAAAAAAxwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2068,
					1,
					"left_delete",
					null,
					"AQAAAMcGAAAAAAAAxwYAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgGAAAAAAAAyAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2069,
					1,
					"insert",
					{
						"characters": "le.log"
					},
					"BgAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAADMBgAAAAAAAM0GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcGAAAAAAAAxwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2070,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM0GAAAAAAAAzwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0GAAAAAAAAzQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2071,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAM4GAAAAAAAA0AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2072,
					1,
					"insert",
					{
						"characters": "li"
					},
					"AgAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8GAAAAAAAAzwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2073,
					2,
					"left_delete",
					null,
					"AgAAANAGAAAAAAAA0AYAAAAAAAABAAAAac8GAAAAAAAAzwYAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEGAAAAAAAA0QYAAAAAAAAAAAAAAADwvw"
				],
				[
					2074,
					1,
					"insert",
					{
						"characters": "LineIterator"
					},
					"DAAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAADRBgAAAAAAANIGAAAAAAAAAAAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAADUBgAAAAAAANUGAAAAAAAAAAAAANUGAAAAAAAA1gYAAAAAAAAAAAAA1gYAAAAAAADXBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAADaBgAAAAAAANsGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8GAAAAAAAAzwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2076,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANwGAAAAAAAA3QYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwGAAAAAAAA3AYAAAAAAAAAAAAAAADwvw"
				],
				[
					2077,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0GAAAAAAAA3gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0GAAAAAAAA3QYAAAAAAAAAAAAAAADwvw"
				],
				[
					2078,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAN4GAAAAAAAA4AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4GAAAAAAAA3gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2079,
					1,
					"paste",
					null,
					"AQAAAN8GAAAAAAAAUwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8GAAAAAAAA3wYAAAAAAAAAAAAAAADwvw"
				],
				[
					2083,
					1,
					"insert",
					{
						"characters": "\nli.preIncr"
					},
					"CwAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADDBgAAAAAAAAAAAADDBgAAAAAAAMQGAAAAAAAAAAAAAMQGAAAAAAAAxQYAAAAAAAAAAAAAxQYAAAAAAADGBgAAAAAAAAAAAADGBgAAAAAAAMcGAAAAAAAAAAAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEGAAAAAAAAwQYAAAAAAAAAAAAAAAAAAA"
				],
				[
					2084,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMwGAAAAAAAAzgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwGAAAAAAAAzAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2086,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM4GAAAAAAAAzwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2087,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8GAAAAAAAAzwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2089,
					1,
					"cut",
					null,
					"AQAAAMIGAAAAAAAAwgYAAAAAAAAOAAAAbGkucHJlSW5jcigpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAGAAAAAAAAwgYAAAAAAAAAAAAAAAAAAA"
				],
				[
					2090,
					4,
					"paste",
					null,
					"BAAAAMIGAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADeBgAAAAAAAAAAAADeBgAAAAAAAOwGAAAAAAAAAAAAAOwGAAAAAAAA+gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIGAAAAAAAAwgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2093,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGBwAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLCBHZXRSZWN0LCBNYXgsIFgsIFksIEZsaXAgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgRklMTEVELCBDVl9SR0IsIExpbmVJdGVyYXRvciB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IFRleHRTdHlsZSwgRHJhd1RleHQgfSBmcm9tICcuL3Fqcy1vcGVuY3YvanMvY3ZIaWdoR1VJLmpzJzsKCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7IG1heEFycmF5TGVuZ3RoOiAxMDAsIGNvbG9yczogdHJ1ZSwgZGVwdGg6IEluZmluaXR5LCBjb21wYWN0OiAwLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0KICB9KTsKCiAgbGV0IGZvbnRGaWxlID0gJ3Fqcy1vcGVuY3YvTWlzY0ZpeGVkU0M2MTMudHRmJywKICAgIGZvbnRTaXplID0gMTI7CgogIGxldCBmb250ID0gbmV3IFRleHRTdHlsZShmb250RmlsZSwgZm9udFNpemUpOwoKICBsZXQgc2l6ZSA9IGZvbnQuc2l6ZSgnWCcpOwoKICBsZXQgbWF0ID0gbmV3IE1hdChbNjQwLCA0ODBdLCBDVl84VUMzKTsKICBsZXQgYXJlYSA9IG5ldyBSZWN0KDAsIDAsIC4uLm1hdC5zaXplKS5pbnNldCgyMCk7CiAgbGV0IGRpYWdyYW1NYXQgPSBtYXQoYXJlYSk7CgogIGNvbnNvbGUubG9nKCdhcmVhJywgYXJlYSk7CgogIERyYXcucmVjdGFuZ2xlKGRpYWdyYW1NYXQsIG5ldyBQb2ludCgwLCAwKSwgbmV3IFBvaW50KC4uLmRpYWdyYW1NYXQuc2l6ZSksIFsyNTUsIDI1NSwgMjU1XSwgRklMTEVEKTsKCiAgbGV0IGF4ZXMgPSB7CiAgICB4OiBBeGlzUG9pbnRzKDEwMCwgMTAsIFgsIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSksCiAgICB5OiBBeGlzUG9pbnRzKDEwMCwgMTAsIFksIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSkKICB9OwoKICBsZXQgcmVjdCA9IEdldFJlY3QoZGlhZ3JhbU1hdCwgYXhlcy54LCBheGVzLnksIGZvbnQpOwogIC8vY29uc29sZS5sb2coJ3JlY3QnLCByZWN0KTsKCiAgbGV0IG9yaWdpbiA9IE9yaWdpbihkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSk7CiAgLy8gRHJhd0Nyb3NzKGRpYWdyYW1NYXQsIG9yaWdpbik7CgogIGNvbnN0IHsgdGwsIGJyIH0gPSBGbGlwKGRpYWdyYW1NYXQsIHJlY3QpOwogIC8vY29uc29sZS5sb2coJ3JlY3QnLCB7IHRsLCBiciB9KTsKCiAgdGwueCArPSAxOwogIHRsLnkgLT0gMTsKCiAgLy9EcmF3LnJlY3RhbmdsZShkaWFncmFtTWF0LCB0bCwgYnIsIENWX1JHQigyNTUsIDAsIDApLCBGSUxMRUQsIDgpOwoKICBEcmF3QXhpcyhkaWFncmFtTWF0LCBheGVzLngsIHJlY3QsIGZvbnQpOwogIERyYXdBeGlzKGRpYWdyYW1NYXQsIGF4ZXMueSwgcmVjdCwgZm9udCk7CgogIGNvbnNvbGUubG9nKCdvcmlnaW4nLCBvcmlnaW4pOwoKICBsZXQgbGkgPSBuZXcgTGluZUl0ZXJhdG9yKG1hdCwgbmV3IFBvaW50KDAsMCkgLCBuZXcgUG9pbnQobWF0LmNvbHMtMSwgbWF0LnJvd3MtMSkpOwpjb25zdCB7Y291bnQsIGVsZW1TaXplLCBlcnIsIG1pbnVzRGVsdGEsIG1pbnVzU2hpZnQsIG1pbnVzU3RlcCwgcCwgcGx1c0RlbHRhLCBwbHVzU2hpZnQsIHBsdXNTdGVwLCBwdG1vZGUsIHB0ciwgcHRyMCwgc3RlcH09bGk7CgpsaS5wcmVJbmNyKCk7CmxpLnByZUluY3IoKTsKbGkucHJlSW5jcigpOwpsaS5wcmVJbmNyKCk7Cgpjb25zb2xlLmxvZygnTGluZUl0ZXJhdG9yJywge2NvdW50LCBlbGVtU2l6ZSwgZXJyLCBtaW51c0RlbHRhLCBtaW51c1NoaWZ0LCBtaW51c1N0ZXAsIHAsIHBsdXNEZWx0YSwgcGx1c1NoaWZ0LCBwbHVzU3RlcCwgcHRtb2RlLCBwdHIsIHB0cjAsIHN0ZXAKfSkKICBpbXdyaXRlKCdkaWFncmFtLnBuZycsIG1hdCk7Cn0KCm1haW4oLi4uc2NyaXB0QXJncyk7CgAAAAAAAAAA3AcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoGAAAAAAAA+gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2100,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA6gUAAAAAAADsBQAAAAAAAAAAAADsBQAAAAAAAO0FAAAAAAAAAAAAAO0FAAAAAAAA7wUAAAAAAAAAAAAA6gUAAAAAAADqBQAAAAAAAAIAAAAgIO0FAAAAAAAA7gUAAAAAAAAAAAAA7gUAAAAAAADvBQAAAAAAAAAAAADvBQAAAAAAAPAFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkFAAAAAAAA6QUAAAAAAAAAAAAAAADwvw"
				],
				[
					2101,
					1,
					"insert",
					{
						"characters": " mat32"
					},
					"BgAAAPAFAAAAAAAA8QUAAAAAAAAAAAAA8QUAAAAAAADyBQAAAAAAAAAAAADyBQAAAAAAAPMFAAAAAAAAAAAAAPMFAAAAAAAA9AUAAAAAAAAAAAAA9AUAAAAAAAD1BQAAAAAAAAAAAAD1BQAAAAAAAPYFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAFAAAAAAAA8AUAAAAAAAAAAAAAAADwvw"
				],
				[
					2102,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPYFAAAAAAAA9wUAAAAAAAAAAAAA9wUAAAAAAAD4BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYFAAAAAAAA9gUAAAAAAAAAAAAAAADwvw"
				],
				[
					2103,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD6BQAAAAAAAAAAAAD6BQAAAAAAAPsFAAAAAAAAAAAAAPsFAAAAAAAA/AUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgFAAAAAAAA+AUAAAAAAAAAAAAAAADwvw"
				],
				[
					2104,
					1,
					"insert",
					{
						"characters": " Mat"
					},
					"BAAAAPwFAAAAAAAA/QUAAAAAAAAAAAAA/QUAAAAAAAD+BQAAAAAAAAAAAAD+BQAAAAAAAP8FAAAAAAAAAAAAAP8FAAAAAAAAAAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwFAAAAAAAA/AUAAAAAAAAAAAAAAADwvw"
				],
				[
					2105,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAAGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2106,
					1,
					"insert",
					{
						"characters": "mat.size,"
					},
					"CQAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAoGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEGAAAAAAAAAQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2107,
					1,
					"insert",
					{
						"characters": " CV_"
					},
					"BAAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoGAAAAAAAACgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2108,
					1,
					"insert",
					{
						"characters": "32UC1"
					},
					"BQAAAA4GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4GAAAAAAAADgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2110,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABQGAAAAAAAAFQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQGAAAAAAAAFAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2112,
					1,
					"left_delete",
					null,
					"AQAAABAGAAAAAAAAEAYAAAAAAAABAAAAVQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEGAAAAAAAAEQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2113,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAABAGAAAAAAAAEQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAGAAAAAAAAEAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2128,
					1,
					"paste",
					null,
					"AQAAAM8AAAAAAAAA1wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8AAAAAAAAAzwAAAAAAAAAAAAAAAADwvw"
				],
				[
					2129,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcAAAAAAAAA1wAAAAAAAAAAAAAAAADwvw"
				],
				[
					2130,
					1,
					"left_delete",
					null,
					"AQAAANcAAAAAAAAA1wAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					2131,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcAAAAAAAAA1wAAAAAAAAAAAAAAAADwvw"
				],
				[
					2132,
					1,
					"insert",
					{
						"characters": " CV_64FC1"
					},
					"CQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					2133,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					2134,
					1,
					"left_delete",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIAAAAAAAAA4gAAAAAAAAAAAAAAAADwvw"
				],
				[
					2135,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					2136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIAAAAAAAAA4gAAAAAAAAAAAAAAAADwvw"
				],
				[
					2153,
					1,
					"insert",
					{
						"characters": "CV_15"
					},
					"BQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8AAAAAAAAAzwAAAAAAAAAAAAAAAADwvw"
				],
				[
					2154,
					1,
					"left_delete",
					null,
					"AQAAANMAAAAAAAAA0wAAAAAAAAABAAAANQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					2155,
					1,
					"insert",
					{
						"characters": "6UC"
					},
					"AwAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					2156,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYAAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					2157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					2166,
					1,
					"cut",
					null,
					"AQAAAMYAAAAAAAAAxgAAAAAAAAAJAAAAQ1ZfOFVDMywg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYAAAAAAAAAzwAAAAAAAAAAAAAAAADwvw"
				],
				[
					2167,
					2,
					"paste",
					null,
					"AgAAAMYAAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADYAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYAAAAAAAAAxgAAAAAAAAAAAAAAAADwvw"
				],
				[
					2172,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADWAAAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUAAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					2183,
					1,
					"cut",
					null,
					"AQAAABIGAAAAAAAAEgYAAAAAAAArAAAAICBsZXQgbWF0MzIgPSBuZXcgTWF0KG1hdC5zaXplLCBDVl8zMkZDMSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAPQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2184,
					2,
					"paste",
					null,
					"AgAAABIGAAAAAAAAPQYAAAAAAAAAAAAAPQYAAAAAAABoBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2187,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAABsGAAAAAAAAHAYAAAAAAAAAAAAAHAYAAAAAAAAcBgAAAAAAAAMAAAAzMiA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsGAAAAAAAAHgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2194,
					5,
					"left_delete",
					null,
					"BQAAADcGAAAAAAAANwYAAAAAAAABAAAAMTYGAAAAAAAANgYAAAAAAAABAAAAQzUGAAAAAAAANQYAAAAAAAABAAAARjQGAAAAAAAANAYAAAAAAAABAAAAMjMGAAAAAAAAMwYAAAAAAAABAAAAMw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgGAAAAAAAAOAYAAAAAAAAAAAAAAMB3QA"
				],
				[
					2195,
					1,
					"insert",
					{
						"characters": "8UC1"
					},
					"BAAAADMGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA1BgAAAAAAAAAAAAA1BgAAAAAAADYGAAAAAAAAAAAAADYGAAAAAAAANwYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMGAAAAAAAAMwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2199,
					1,
					"cut",
					null,
					"AQAAABIGAAAAAAAAEgYAAAAAAAAoAAAAICBsZXQgbWF0OD0gbmV3IE1hdChtYXQuc2l6ZSwgQ1ZfOFVDMSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAOgYAAAAAAAAAAAAAAAAAAA"
				],
				[
					2200,
					2,
					"paste",
					null,
					"AgAAABIGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAABiBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIGAAAAAAAAEgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2203,
					1,
					"insert",
					{
						"characters": "17"
					},
					"AwAAAEMGAAAAAAAARAYAAAAAAAAAAAAARAYAAAAAAABEBgAAAAAAAAEAAAA4RAYAAAAAAABFBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMGAAAAAAAARAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2204,
					1,
					"left_delete",
					null,
					"AQAAAEQGAAAAAAAARAYAAAAAAAABAAAANw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUGAAAAAAAARQYAAAAAAAAAAAAAAADwvw"
				],
				[
					2205,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAEQGAAAAAAAARQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQGAAAAAAAARAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2208,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AwAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABdBgAAAAAAAAEAAAA4XQYAAAAAAABeBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0GAAAAAAAAXAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2225,
					1,
					"cut",
					null,
					"AQAAAGQGAAAAAAAAZAYAAAAAAAArAAAAICBsZXQgbWF0MzIgPSBuZXcgTWF0KG1hdC5zaXplLCBDVl8zMkZDMSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQGAAAAAAAAjwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2226,
					2,
					"paste",
					null,
					"AgAAAGQGAAAAAAAAjwYAAAAAAAAAAAAAjwYAAAAAAAC6BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQGAAAAAAAAZAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2229,
					1,
					"insert",
					{
						"characters": "64"
					},
					"AwAAAJgGAAAAAAAAmQYAAAAAAAAAAAAAmQYAAAAAAACZBgAAAAAAAAIAAAAzMpkGAAAAAAAAmgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgGAAAAAAAAmgYAAAAAAAAAAAAAAADwvw"
				],
				[
					2232,
					1,
					"insert",
					{
						"characters": "64"
					},
					"AwAAALIGAAAAAAAAswYAAAAAAAAAAAAAswYAAAAAAACzBgAAAAAAAAIAAAAzMrMGAAAAAAAAtAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIGAAAAAAAAtAYAAAAAAAAAAAAAAADwvw"
				],
				[
					2245,
					1,
					"insert",
					{
						"characters": "64"
					},
					"AgAAANoGAAAAAAAA2wYAAAAAAAAAAAAA2wYAAAAAAADcBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoGAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2264,
					1,
					"cut",
					null,
					"AQAAABcHAAAAAAAAFwcAAAAAAACGAAAAICBjb25zdCB7IGNvdW50LCBlbGVtU2l6ZSwgZXJyLCBtaW51c0RlbHRhLCBtaW51c1NoaWZ0LCBtaW51c1N0ZXAsIHAsIHBsdXNEZWx0YSwgcGx1c1NoaWZ0LCBwbHVzU3RlcCwgcHRtb2RlLCBwdHIsIHB0cjAsIHN0ZXAgfSA9IGxpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcHAAAAAAAAnQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2266,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFgHAAAAAAAAWQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2267,
					1,
					"paste",
					null,
					"AQAAAFkHAAAAAAAA3wcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkHAAAAAAAAWQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2299,
					1,
					"paste",
					null,
					"AQAAAFgHAAAAAAAA8AcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2304,
					1,
					"insert",
					{
						"characters": "li.postIncr()"
					},
					"DgAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABoBwAAAAAAAAwAAABMaW5lSXRlcmF0b3JoBwAAAAAAAGkHAAAAAAAAAAAAAGkHAAAAAAAAagcAAAAAAAAAAAAAagcAAAAAAABrBwAAAAAAAAAAAABrBwAAAAAAAGwHAAAAAAAAAAAAAGwHAAAAAAAAbQcAAAAAAAAAAAAAbQcAAAAAAABuBwAAAAAAAAAAAABuBwAAAAAAAG8HAAAAAAAAAAAAAG8HAAAAAAAAcAcAAAAAAAAAAAAAcAcAAAAAAABxBwAAAAAAAAAAAABxBwAAAAAAAHIHAAAAAAAAAAAAAHIHAAAAAAAAcwcAAAAAAAAAAAAAcwcAAAAAAAB0BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcHAAAAAAAAcwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2306,
					1,
					"insert",
					{
						"characters": "li,."
					},
					"BAAAAHcHAAAAAAAAeAcAAAAAAAAAAAAAeAcAAAAAAAB5BwAAAAAAAAAAAAB5BwAAAAAAAHoHAAAAAAAAAAAAAHoHAAAAAAAAewcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcHAAAAAAAAdwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2307,
					2,
					"left_delete",
					null,
					"AgAAAHoHAAAAAAAAegcAAAAAAAABAAAALnkHAAAAAAAAeQcAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsHAAAAAAAAewcAAAAAAAAAAAAAAADwvw"
				],
				[
					2308,
					1,
					"insert",
					{
						"characters": ".postIncr())"
					},
					"DAAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAB7BwAAAAAAAHwHAAAAAAAAAAAAAHwHAAAAAAAAfQcAAAAAAAAAAAAAfQcAAAAAAAB+BwAAAAAAAAAAAAB+BwAAAAAAAH8HAAAAAAAAAAAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACBBwAAAAAAAAAAAACBBwAAAAAAAIIHAAAAAAAAAAAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAACEBwAAAAAAAIUHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkHAAAAAAAAeQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2309,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUHAAAAAAAAhQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2311,
					1,
					"cut",
					null,
					"AQAAAIYHAAAAAAAAhgcAAAAAAAB5AAAAeyBjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwIH0pOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYHAAAAAAAA/wcAAAAAAAD////////vfw"
				],
				[
					2327,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIcHAAAAAAAAiQcAAAAAAAAAAAAAGAcAAAAAAAAaBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAGAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2348,
					1,
					"paste",
					null,
					"AQAAABcHAAAAAAAArwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcHAAAAAAAAFwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2351,
					1,
					"insert",
					{
						"characters": ".err"
					},
					"BAAAADIHAAAAAAAAMwcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAAA0BwAAAAAAADUHAAAAAAAAAAAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIHAAAAAAAAMgcAAAAAAAAAAAAAAADwvw"
				],
				[
					2355,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AwAAADgHAAAAAAAAOQcAAAAAAAAAAAAAOQcAAAAAAAA5BwAAAAAAAHgAAAAgeyBjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwIH05BwAAAAAAADoHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgHAAAAAAAAsAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2356,
					2,
					"left_delete",
					null,
					"AgAAADkHAAAAAAAAOQcAAAAAAAABAAAAcjgHAAAAAAAAOAcAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoHAAAAAAAAOgcAAAAAAAAAAAAAAADwvw"
				],
				[
					2357,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgHAAAAAAAAOQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgHAAAAAAAAOAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2358,
					1,
					"left_delete",
					null,
					"AQAAADgHAAAAAAAAOAcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkHAAAAAAAAOQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2359,
					1,
					"insert",
					{
						"characters": "li.err"
					},
					"BgAAADgHAAAAAAAAOQcAAAAAAAAAAAAAOQcAAAAAAAA6BwAAAAAAAAAAAAA6BwAAAAAAADsHAAAAAAAAAAAAADsHAAAAAAAAPAcAAAAAAAAAAAAAPAcAAAAAAAA9BwAAAAAAAAAAAAA9BwAAAAAAAD4HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgHAAAAAAAAOAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2366,
					2,
					"left_delete",
					null,
					"AgAAANsGAAAAAAAA2wYAAAAAAAABAAAANNoGAAAAAAAA2gYAAAAAAAABAAAANg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwGAAAAAAAA3AYAAAAAAAAAAAAAAADwvw"
				],
				[
					2373,
					2,
					"left_delete",
					null,
					"AgAAAEEHAAAAAAAAQQcAAAAAAAABAAAAKkAHAAAAAAAAQAcAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIHAAAAAAAAQgcAAAAAAAAAAAAAAADwvw"
				],
				[
					2375,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2381,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAANoGAAAAAAAA2wYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoGAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2384,
					4,
					"left_delete",
					null,
					"BAAAANoGAAAAAAAA2gYAAAAAAAABAAAAONkGAAAAAAAA2QYAAAAAAAABAAAAdNgGAAAAAAAA2AYAAAAAAAABAAAAYdcGAAAAAAAA1wYAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsGAAAAAAAA2wYAAAAAAAAAAAAAAADwvw"
				],
				[
					2385,
					1,
					"insert",
					{
						"characters": "mat.size"
					},
					"CAAAANcGAAAAAAAA2AYAAAAAAAAAAAAA2AYAAAAAAADZBgAAAAAAAAAAAADZBgAAAAAAANoGAAAAAAAAAAAAANoGAAAAAAAA2wYAAAAAAAAAAAAA2wYAAAAAAADcBgAAAAAAAAAAAADcBgAAAAAAAN0GAAAAAAAAAAAAAN0GAAAAAAAA3gYAAAAAAAAAAAAA3gYAAAAAAADfBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcGAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				],
				[
					2392,
					1,
					"cut",
					null,
					"AQAAANoGAAAAAAAA2gYAAAAAAAAFAAAALnNpemU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8GAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2393,
					1,
					"paste",
					null,
					"AQAAANoGAAAAAAAA3wYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoGAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2396,
					5,
					"left_delete",
					null,
					"BQAAAN4GAAAAAAAA3gYAAAAAAAABAAAAZd0GAAAAAAAA3QYAAAAAAAABAAAAetwGAAAAAAAA3AYAAAAAAAABAAAAadsGAAAAAAAA2wYAAAAAAAABAAAAc9oGAAAAAAAA2gYAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8GAAAAAAAA3wYAAAAAAAAAAAAAAADwvw"
				],
				[
					2405,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFAHAAAAAAAAUQcAAAAAAAAAAAAAUQcAAAAAAABSBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAHAAAAAAAAUAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2410,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEEHAAAAAAAAQgcAAAAAAAAAAAAAQgcAAAAAAABDBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEHAAAAAAAAQQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2413,
					2,
					"left_delete",
					null,
					"AgAAAEIHAAAAAAAAQgcAAAAAAAABAAAAL0EHAAAAAAAAQQcAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMHAAAAAAAAQwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2419,
					1,
					"right_delete",
					null,
					"AQAAAEcHAAAAAAAARwcAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcHAAAAAAAARwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2420,
					2,
					"left_delete",
					null,
					"AgAAAEYHAAAAAAAARgcAAAAAAAABAAAAckUHAAAAAAAARQcAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcHAAAAAAAARwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2421,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAEUHAAAAAAAARgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUHAAAAAAAARQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2422,
					1,
					"left_delete",
					null,
					"AQAAAEUHAAAAAAAARQcAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYHAAAAAAAARgcAAAAAAAAAAAAAAADwvw"
				],
				[
					2423,
					1,
					"insert",
					{
						"characters": "post"
					},
					"BAAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUHAAAAAAAARQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2437,
					1,
					"cut",
					null,
					"AQAAAD4IAAAAAAAAPggAAAAAAACYAAAAICBjb25zb2xlLmxvZygnTGluZUl0ZXJhdG9yJywgeyBjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwIH0pOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4IAAAAAAAA1ggAAAAAAAAAAAAAAADwvw"
				],
				[
					2438,
					1,
					"paste",
					null,
					"AQAAAD4IAAAAAAAA1ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4IAAAAAAAAPggAAAAAAAAAAAAAAADwvw"
				],
				[
					2441,
					1,
					"paste",
					null,
					"AQAAALkHAAAAAAAAUQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkHAAAAAAAAuQcAAAAAAAAAAAAAAADwvw"
				],
				[
					2445,
					1,
					"insert",
					{
						"characters": "-p√º"
					},
					"AwAAANQHAAAAAAAA1QcAAAAAAAAAAAAA1QcAAAAAAADWBwAAAAAAAAAAAADWBwAAAAAAANcHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQHAAAAAAAA1AcAAAAAAAAAAAAAAADwvw"
				],
				[
					2446,
					3,
					"left_delete",
					null,
					"AwAAANYHAAAAAAAA1gcAAAAAAAACAAAAw7zVBwAAAAAAANUHAAAAAAAAAQAAAHDUBwAAAAAAANQHAAAAAAAAAQAAAC0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcHAAAAAAAA1wcAAAAAAAAAAAAAAADwvw"
				],
				[
					2447,
					1,
					"insert",
					{
						"characters": ".pos()"
					},
					"BgAAANQHAAAAAAAA1QcAAAAAAAAAAAAA1QcAAAAAAADWBwAAAAAAAAAAAADWBwAAAAAAANcHAAAAAAAAAAAAANcHAAAAAAAA2AcAAAAAAAAAAAAA2AcAAAAAAADZBwAAAAAAAAAAAADZBwAAAAAAANoHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQHAAAAAAAA1AcAAAAAAAAAAAAAAADwvw"
				],
				[
					2451,
					1,
					"right_delete",
					null,
					"AQAAAN0HAAAAAAAA3QcAAAAAAAB3AAAAeyBjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwIH0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0HAAAAAAAAVAgAAAAAAAAAAAAAAADwvw"
				],
				[
					2452,
					1,
					"insert",
					{
						"characters": "li.pos"
					},
					"BgAAAN0HAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADfBwAAAAAAAAAAAADfBwAAAAAAAOAHAAAAAAAAAAAAAOAHAAAAAAAA4QcAAAAAAAAAAAAA4QcAAAAAAADiBwAAAAAAAAAAAADiBwAAAAAAAOMHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0HAAAAAAAA3QcAAAAAAAAAAAAAAADwvw"
				],
				[
					2453,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOMHAAAAAAAA5QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMHAAAAAAAA4wcAAAAAAAAAAAAAAADwvw"
				],
				[
					2460,
					1,
					"cut",
					null,
					"AQAAALcHAAAAAAAAtwcAAAAAAAAxAAAAICAgIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3IucG9zKCknLCBsaS5wb3MoKSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAA6AcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2461,
					1,
					"paste",
					null,
					"AQAAALcHAAAAAAAA6AcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAAtwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2464,
					1,
					"cut",
					null,
					"AQAAAEAHAAAAAAAAQAcAAAAAAAARAAAAICBsaS5wb3N0SW5jcigpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEHAAAAAAAAQAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2465,
					1,
					"paste",
					null,
					"AQAAAEAHAAAAAAAAUQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAHAAAAAAAAQAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2467,
					1,
					"paste",
					null,
					"AQAAAOgHAAAAAAAA+QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgHAAAAAAAA6AcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2470,
					1,
					"cut",
					null,
					"AQAAALcHAAAAAAAAtwcAAAAAAABCAAAAICAgIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3IucG9zKCknLCBsaS5wb3MoKSk7CiAgbGkucG9zdEluY3IoKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAA+QcAAAAAAAAAAAAAAAAAAA"
				],
				[
					2471,
					3,
					"paste",
					null,
					"AwAAALcHAAAAAAAA+QcAAAAAAAAAAAAA+QcAAAAAAAA7CAAAAAAAAAAAAAA7CAAAAAAAAH0IAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAAtwcAAAAAAAAAAAAAAADwvw"
				],
				[
					2501,
					1,
					"insert",
					{
						"characters": "\nfunction"
					},
					"CQAAALoGAAAAAAAAuwYAAAAAAAAAAAAAuwYAAAAAAAC8BgAAAAAAAAAAAAC8BgAAAAAAAL0GAAAAAAAAAAAAAL0GAAAAAAAAvgYAAAAAAAAAAAAAvgYAAAAAAAC/BgAAAAAAAAAAAAC/BgAAAAAAAMAGAAAAAAAAAAAAAMAGAAAAAAAAwQYAAAAAAAAAAAAAwQYAAAAAAADCBgAAAAAAAAAAAADCBgAAAAAAAMMGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoGAAAAAAAAugYAAAAAAAAAAAAAAADwvw"
				],
				[
					2502,
					1,
					"insert",
					{
						"characters": " MakeLineIterator"
					},
					"EQAAAMMGAAAAAAAAxAYAAAAAAAAAAAAAxAYAAAAAAADFBgAAAAAAAAAAAADFBgAAAAAAAMYGAAAAAAAAAAAAAMYGAAAAAAAAxwYAAAAAAAAAAAAAxwYAAAAAAADIBgAAAAAAAAAAAADIBgAAAAAAAMkGAAAAAAAAAAAAAMkGAAAAAAAAygYAAAAAAAAAAAAAygYAAAAAAADLBgAAAAAAAAAAAADLBgAAAAAAAMwGAAAAAAAAAAAAAMwGAAAAAAAAzQYAAAAAAAAAAAAAzQYAAAAAAADOBgAAAAAAAAAAAADOBgAAAAAAAM8GAAAAAAAAAAAAAM8GAAAAAAAA0AYAAAAAAAAAAAAA0AYAAAAAAADRBgAAAAAAAAAAAADRBgAAAAAAANIGAAAAAAAAAAAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMGAAAAAAAAwwYAAAAAAAAAAAAAAADwvw"
				],
				[
					2503,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANQGAAAAAAAA1gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQGAAAAAAAA1AYAAAAAAAAAAAAAAADwvw"
				],
				[
					2504,
					1,
					"insert",
					{
						"characters": "mat"
					},
					"AwAAANUGAAAAAAAA1gYAAAAAAAAAAAAA1gYAAAAAAADXBgAAAAAAAAAAAADXBgAAAAAAANgGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUGAAAAAAAA1QYAAAAAAAAAAAAAAADwvw"
				],
				[
					2506,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkGAAAAAAAA2gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkGAAAAAAAA2QYAAAAAAAAAAAAAAADwvw"
				],
				[
					2507,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANoGAAAAAAAA3AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoGAAAAAAAA2gYAAAAAAAAAAAAAAADwvw"
				],
				[
					2508,
					1,
					"right_delete",
					null,
					"AQAAANsGAAAAAAAA2wYAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsGAAAAAAAA2wYAAAAAAAAAAAAAAADwvw"
				],
				[
					2515,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAALoJAAAAAAAAuwkAAAAAAAAAAAAAuwkAAAAAAAC9CQAAAAAAAAAAAAC9CQAAAAAAAL4JAAAAAAAAAAAAALsJAAAAAAAAuwkAAAAAAAACAAAAICC7CQAAAAAAALsJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoJAAAAAAAAugkAAAAAAAD////////vfw"
				],
				[
					2516,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALwJAAAAAAAAvQkAAAAAAAAAAAAAvQkAAAAAAAC+CQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwJAAAAAAAAvAkAAAAAAAAAAAAAAADwvw"
				],
				[
					2518,
					1,
					"insert",
					{
						"characters": "\nMakeLineIt"
					},
					"CwAAAL0JAAAAAAAAvgkAAAAAAAAAAAAAvgkAAAAAAAC/CQAAAAAAAAAAAAC/CQAAAAAAAMAJAAAAAAAAAAAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAADCCQAAAAAAAMMJAAAAAAAAAAAAAMMJAAAAAAAAxAkAAAAAAAAAAAAAxAkAAAAAAADFCQAAAAAAAAAAAADFCQAAAAAAAMYJAAAAAAAAAAAAAMYJAAAAAAAAxwkAAAAAAAAAAAAAxwkAAAAAAADICQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0JAAAAAAAAvQkAAAAAAAAAAAAAAAAAAA"
				],
				[
					2519,
					1,
					"insert",
					{
						"characters": "erator"
					},
					"BgAAAMgJAAAAAAAAyQkAAAAAAAAAAAAAyQkAAAAAAADKCQAAAAAAAAAAAADKCQAAAAAAAMsJAAAAAAAAAAAAAMsJAAAAAAAAzAkAAAAAAAAAAAAAzAkAAAAAAADNCQAAAAAAAAAAAADNCQAAAAAAAM4JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgJAAAAAAAAyAkAAAAAAAAAAAAAAADwvw"
				],
				[
					2520,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM4JAAAAAAAA0AkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4JAAAAAAAAzgkAAAAAAAAAAAAAAADwvw"
				],
				[
					2521,
					1,
					"insert",
					{
						"characters": "mat8"
					},
					"BAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAADRCQAAAAAAANIJAAAAAAAAAAAAANIJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8JAAAAAAAAzwkAAAAAAAAAAAAAAADwvw"
				],
				[
					2523,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAANQJAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADWCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQJAAAAAAAA1AkAAAAAAAAAAAAAAADwvw"
				],
				[
					2524,
					1,
					"left_delete",
					null,
					"AQAAANUJAAAAAAAA1QkAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYJAAAAAAAA1gkAAAAAAAAAAAAAAADwvw"
				],
				[
					2526,
					1,
					"cut",
					null,
					"AQAAAL0JAAAAAAAAvQkAAAAAAAAYAAAACk1ha2VMaW5lSXRlcmF0b3IobWF0OCk7",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUJAAAAAAAAvQkAAAAAAAAAAAAAAMBsQA"
				],
				[
					2527,
					4,
					"paste",
					null,
					"BAAAAL0JAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADtCQAAAAAAAAAAAADtCQAAAAAAAAUKAAAAAAAAAAAAAAUKAAAAAAAAHQoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0JAAAAAAAAvQkAAAAAAAAAAAAAAADwvw"
				],
				[
					2530,
					1,
					"left_delete",
					null,
					"AQAAAOoJAAAAAAAA6gkAAAAAAAABAAAAOA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsJAAAAAAAA6wkAAAAAAAAAAAAAAADwvw"
				],
				[
					2531,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAOoJAAAAAAAA6wkAAAAAAAAAAAAA6wkAAAAAAADsCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoJAAAAAAAA6gkAAAAAAAAAAAAAAADwvw"
				],
				[
					2534,
					1,
					"left_delete",
					null,
					"AQAAAAMKAAAAAAAAAwoAAAAAAAABAAAAOA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQKAAAAAAAABAoAAAAAAAAAAAAAAADwvw"
				],
				[
					2535,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAAMKAAAAAAAABAoAAAAAAAAAAAAABAoAAAAAAAAFCgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMKAAAAAAAAAwoAAAAAAAAAAAAAAADwvw"
				],
				[
					2538,
					1,
					"left_delete",
					null,
					"AQAAABwKAAAAAAAAHAoAAAAAAAABAAAAOA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0KAAAAAAAAHQoAAAAAAAAAAAAAAADwvw"
				],
				[
					2539,
					1,
					"insert",
					{
						"characters": "643"
					},
					"AwAAABwKAAAAAAAAHQoAAAAAAAAAAAAAHQoAAAAAAAAeCgAAAAAAAAAAAAAeCgAAAAAAAB8KAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwKAAAAAAAAHAoAAAAAAAAAAAAAAADwvw"
				],
				[
					2540,
					1,
					"left_delete",
					null,
					"AQAAAB4KAAAAAAAAHgoAAAAAAAABAAAAMw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8KAAAAAAAAHwoAAAAAAAAAAAAAAADwvw"
				],
				[
					2546,
					1,
					"cut",
					null,
					"AQAAANgHAAAAAAAA2AcAAAAAAAAxAAAAICAgIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3IucG9zKCknLCBsaS5wb3MoKSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgHAAAAAAAACQgAAAAAAAAAAAAAAAAAAA"
				],
				[
					2549,
					1,
					"cut",
					null,
					"AQAAAOkHAAAAAAAA6QcAAAAAAAAxAAAAICAgIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3IucG9zKCknLCBsaS5wb3MoKSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkHAAAAAAAAGggAAAAAAAAAAAAAAAAAAA"
				],
				[
					2552,
					1,
					"cut",
					null,
					"AQAAAPoHAAAAAAAA+gcAAAAAAAAxAAAAICAgIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3IucG9zKCknLCBsaS5wb3MoKSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoHAAAAAAAAKwgAAAAAAAAAAAAAAAAAAA"
				],
				[
					2562,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACcJAAAAAAAAKAkAAAAAAAAAAAAAKAkAAAAAAAAqCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcJAAAAAAAAJwkAAAAAAAD////////vfw"
				],
				[
					2565,
					1,
					"cut",
					null,
					"AQAAAJIIAAAAAAAAkggAAAAAAACYAAAAY29uc29sZS5sb2coJ0xpbmVJdGVyYXRvcicsIHsgY291bnQsIGVsZW1TaXplLCBlcnIsIG1pbnVzRGVsdGEsIG1pbnVzU2hpZnQsIG1pbnVzU3RlcCwgcCwgcGx1c0RlbHRhLCBwbHVzU2hpZnQsIHBsdXNTdGVwLCBwdG1vZGUsIHB0ciwgcHRyMCwgc3RlcCB9KTsKICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIIAAAAAAAAKgkAAAAAAAAAAAAAAAA0QA"
				],
				[
					2566,
					2,
					"paste",
					null,
					"AgAAAJIIAAAAAAAAKgkAAAAAAAAAAAAAKgkAAAAAAADCCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIIAAAAAAAAkggAAAAAAAAAAAAAAADwvw"
				],
				[
					2572,
					1,
					"insert",
					{
						"characters": ",ma"
					},
					"BQAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA4CQAAAAAAAAwAAABMaW5lSXRlcmF0b3K1CQAAAAAAALUJAAAAAAAAAgAAACAgOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcJAAAAAAAAQwkAAAAAAAAAAAAAAADwvw"
				],
				[
					2573,
					3,
					"left_delete",
					null,
					"AwAAADkJAAAAAAAAOQkAAAAAAAABAAAAYTgJAAAAAAAAOAkAAAAAAAABAAAAbTcJAAAAAAAANwkAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoJAAAAAAAAOgkAAAAAAAAAAAAAAADwvw"
				],
				[
					2574,
					1,
					"insert",
					{
						"characters": "mat.ptr(0)"
					},
					"CgAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPgkAAAAAAAA/CQAAAAAAAAAAAAA/CQAAAAAAAEAJAAAAAAAAAAAAAEAJAAAAAAAAQQkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcJAAAAAAAANwkAAAAAAAAAAAAAAADwvw"
				],
				[
					2576,
					1,
					"insert",
					{
						"characters": "mat.ptr(0));"
					},
					"DAAAAEQJAAAAAAAARQkAAAAAAAAAAAAARQkAAAAAAABGCQAAAAAAAAAAAABGCQAAAAAAAEcJAAAAAAAAAAAAAEcJAAAAAAAASAkAAAAAAAAAAAAASAkAAAAAAABJCQAAAAAAAAAAAABJCQAAAAAAAEoJAAAAAAAAAAAAAEoJAAAAAAAASwkAAAAAAAAAAAAASwkAAAAAAABMCQAAAAAAAAAAAABMCQAAAAAAAE0JAAAAAAAAAAAAAE0JAAAAAAAATgkAAAAAAAAAAAAATgkAAAAAAABPCQAAAAAAAAAAAABPCQAAAAAAAFAJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQJAAAAAAAARAkAAAAAAAAAAAAAAADwvw"
				],
				[
					2578,
					1,
					"cut",
					null,
					"AQAAAFAJAAAAAAAAUAkAAAAAAAB5AAAAeyBjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwIH0pOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAJAAAAAAAAyQkAAAAAAAD////////vfw"
				],
				[
					2591,
					1,
					"cut",
					null,
					"AQAAACgJAAAAAAAAKAkAAAAAAAApAAAAICBjb25zb2xlLmxvZygnbWF0LnB0cigwKScsIG1hdC5wdHIoMCkpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgJAAAAAAAAUQkAAAAAAAAAAAAAAAAAAA"
				],
				[
					2592,
					2,
					"paste",
					null,
					"AgAAACgJAAAAAAAAUQkAAAAAAAAAAAAAUQkAAAAAAAB6CQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgJAAAAAAAAKAkAAAAAAAAAAAAAAADwvw"
				],
				[
					2600,
					1,
					"insert",
					{
						"characters": "li.ptr"
					},
					"BwAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA4CQAAAAAAAAoAAABtYXQucHRyKDApOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAAD0JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcJAAAAAAAAQQkAAAAAAAAAAAAAAADwvw"
				],
				[
					2601,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPgkAAAAAAAA/CQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0JAAAAAAAAPQkAAAAAAAAAAAAAAADwvw"
				],
				[
					2602,
					1,
					"insert",
					{
						"characters": " li.ptr0"
					},
					"CAAAAD8JAAAAAAAAQAkAAAAAAAAAAAAAQAkAAAAAAABBCQAAAAAAAAAAAABBCQAAAAAAAEIJAAAAAAAAAAAAAEIJAAAAAAAAQwkAAAAAAAAAAAAAQwkAAAAAAABECQAAAAAAAAAAAABECQAAAAAAAEUJAAAAAAAAAAAAAEUJAAAAAAAARgkAAAAAAAAAAAAARgkAAAAAAABHCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8JAAAAAAAAPwkAAAAAAAAAAAAAAADwvw"
				],
				[
					2607,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AgAAAEkJAAAAAAAASgkAAAAAAAAAAAAASgkAAAAAAABKCQAAAAAAAAsAAAAgbWF0LnB0cigwKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkJAAAAAAAAVAkAAAAAAAAAAAAAAADwvw"
				],
				[
					2608,
					1,
					"left_delete",
					null,
					"AQAAAEkJAAAAAAAASQkAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoJAAAAAAAASgkAAAAAAAAAAAAAAADwvw"
				],
				[
					2609,
					1,
					"insert",
					{
						"characters": "li.ptr"
					},
					"BgAAAEkJAAAAAAAASgkAAAAAAAAAAAAASgkAAAAAAABLCQAAAAAAAAAAAABLCQAAAAAAAEwJAAAAAAAAAAAAAEwJAAAAAAAATQkAAAAAAAAAAAAATQkAAAAAAABOCQAAAAAAAAAAAABOCQAAAAAAAE8JAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkJAAAAAAAASQkAAAAAAAAAAAAAAADwvw"
				],
				[
					2610,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAE8JAAAAAAAAUAkAAAAAAAAAAAAAUAkAAAAAAABRCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8JAAAAAAAATwkAAAAAAAAAAAAAAADwvw"
				],
				[
					2611,
					1,
					"insert",
					{
						"characters": " li.ptr0"
					},
					"CAAAAFEJAAAAAAAAUgkAAAAAAAAAAAAAUgkAAAAAAABTCQAAAAAAAAAAAABTCQAAAAAAAFQJAAAAAAAAAAAAAFQJAAAAAAAAVQkAAAAAAAAAAAAAVQkAAAAAAABWCQAAAAAAAAAAAABWCQAAAAAAAFcJAAAAAAAAAAAAAFcJAAAAAAAAWAkAAAAAAAAAAAAAWAkAAAAAAABZCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEJAAAAAAAAUQkAAAAAAAAAAAAAAADwvw"
				],
				[
					2627,
					1,
					"paste",
					null,
					"AQAAAGAHAAAAAAAA5AcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAADwvw"
				],
				[
					2632,
					1,
					"insert",
					{
						"characters": "ptr,ptr0"
					},
					"CQAAAGgHAAAAAAAAaQcAAAAAAAAAAAAAaQcAAAAAAABpBwAAAAAAAHMAAABjb3VudCwgZWxlbVNpemUsIGVyciwgbWludXNEZWx0YSwgbWludXNTaGlmdCwgbWludXNTdGVwLCBwLCBwbHVzRGVsdGEsIHBsdXNTaGlmdCwgcGx1c1N0ZXAsIHB0bW9kZSwgcHRyLCBwdHIwLCBzdGVwaQcAAAAAAABqBwAAAAAAAAAAAABqBwAAAAAAAGsHAAAAAAAAAAAAAGsHAAAAAAAAbAcAAAAAAAAAAAAAbAcAAAAAAABtBwAAAAAAAAAAAABtBwAAAAAAAG4HAAAAAAAAAAAAAG4HAAAAAAAAbwcAAAAAAAAAAAAAbwcAAAAAAABwBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgHAAAAAAAA2wcAAAAAAAAAAAAAAADwvw"
				],
				[
					2645,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACRCAAAAAAAAAsAAABwdHIsIHB0cjAsIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAIAAAAAAAAmwgAAAAAAAAAAAAAAADwvw"
				],
				[
					2677,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAzCgAAaW1wb3J0IHsgQXhpc1BvaW50cywgRHJhd0F4aXMsIE9yaWdpbiwgRHJhd0Nyb3NzLCBHZXRSZWN0LCBNYXgsIFgsIFksIEZsaXAgfSBmcm9tICcuL2RpYWdyYW0uanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IFBvaW50LCBTaXplLCBSZWN0LCBMaW5lLCBUaWNrTWV0ZXIsIE1hdCwgRHJhdywgaW13cml0ZSwgQ1ZfOFVDMywgQ1ZfOFVDMSwgQ1ZfMTZVQzEsIENWXzMyRkMxLCBDVl82NEZDMSwgRklMTEVELCBDVl9SR0IsIExpbmVJdGVyYXRvciB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IFRleHRTdHlsZSwgRHJhd1RleHQgfSBmcm9tICcuL3Fqcy1vcGVuY3YvanMvY3ZIaWdoR1VJLmpzJzsKCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7IG1heEFycmF5TGVuZ3RoOiAxMDAsIGNvbG9yczogdHJ1ZSwgZGVwdGg6IEluZmluaXR5LCBjb21wYWN0OiAwLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0KICB9KTsKCiAgbGV0IGZvbnRGaWxlID0gJ3Fqcy1vcGVuY3YvTWlzY0ZpeGVkU0M2MTMudHRmJywKICAgIGZvbnRTaXplID0gMTI7CgogIGxldCBmb250ID0gbmV3IFRleHRTdHlsZShmb250RmlsZSwgZm9udFNpemUpOwoKICBsZXQgc2l6ZSA9IGZvbnQuc2l6ZSgnWCcpOwoKICBsZXQgbWF0ID0gbmV3IE1hdChbNjQwLCA0ODBdLCBDVl84VUMzKTsKICBsZXQgYXJlYSA9IG5ldyBSZWN0KDAsIDAsIC4uLm1hdC5zaXplKS5pbnNldCgyMCk7CiAgbGV0IGRpYWdyYW1NYXQgPSBtYXQoYXJlYSk7CgogIGNvbnNvbGUubG9nKCdhcmVhJywgYXJlYSk7CgogIERyYXcucmVjdGFuZ2xlKGRpYWdyYW1NYXQsIG5ldyBQb2ludCgwLCAwKSwgbmV3IFBvaW50KC4uLmRpYWdyYW1NYXQuc2l6ZSksIFsyNTUsIDI1NSwgMjU1XSwgRklMTEVEKTsKCiAgbGV0IGF4ZXMgPSB7CiAgICB4OiBBeGlzUG9pbnRzKDEwMCwgMTAsIFgsIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSksCiAgICB5OiBBeGlzUG9pbnRzKDEwMCwgMTAsIFksIGZvbnQsIGRpYWdyYW1NYXQuc2l6ZSkKICB9OwoKICBsZXQgcmVjdCA9IEdldFJlY3QoZGlhZ3JhbU1hdCwgYXhlcy54LCBheGVzLnksIGZvbnQpOwogIC8vY29uc29sZS5sb2coJ3JlY3QnLCByZWN0KTsKCiAgbGV0IG9yaWdpbiA9IE9yaWdpbihkaWFncmFtTWF0LCBheGVzLngsIGF4ZXMueSk7CiAgLy8gRHJhd0Nyb3NzKGRpYWdyYW1NYXQsIG9yaWdpbik7CgogIGNvbnN0IHsgdGwsIGJyIH0gPSBGbGlwKGRpYWdyYW1NYXQsIHJlY3QpOwogIC8vY29uc29sZS5sb2coJ3JlY3QnLCB7IHRsLCBiciB9KTsKCiAgdGwueCArPSAxOwogIHRsLnkgLT0gMTsKCiAgLy9EcmF3LnJlY3RhbmdsZShkaWFncmFtTWF0LCB0bCwgYnIsIENWX1JHQigyNTUsIDAsIDApLCBGSUxMRUQsIDgpOwoKICBEcmF3QXhpcyhkaWFncmFtTWF0LCBheGVzLngsIHJlY3QsIGZvbnQpOwogIERyYXdBeGlzKGRpYWdyYW1NYXQsIGF4ZXMueSwgcmVjdCwgZm9udCk7CgogIGNvbnNvbGUubG9nKCdvcmlnaW4nLCBvcmlnaW4pOwoKICBsZXQgbWF0OD0gbmV3IE1hdChtYXQuc2l6ZSwgQ1ZfOFVDMSk7CiAgbGV0IG1hdDE2PSBuZXcgTWF0KG1hdC5zaXplLCBDVl8xNlVDMSk7CiAgbGV0IG1hdDMyID0gbmV3IE1hdChtYXQuc2l6ZSwgQ1ZfMzJGQzEpOwogIGxldCBtYXQ2NCA9IG5ldyBNYXQobWF0LnNpemUsIENWXzY0RkMxKTsKCmZ1bmN0aW9uIE1ha2VMaW5lSXRlcmF0b3IobWF0KSB7CiAgbGV0IGxpID0gbmV3IExpbmVJdGVyYXRvcihtYXQsIG5ldyBQb2ludCgwLCAwKSwgbmV3IFBvaW50KG1hdC5jb2xzIC0gMSwgbWF0LnJvd3MgLSAxKSk7CiAgY29uc29sZS5sb2coJ0xpbmVJdGVyYXRvci5lcnInLGxpLmVycik7CmNvbnN0IHsgcHRyLHB0cjAgfSA9IGxpOwoKICBsaS5wb3N0SW5jcigpOwovLyAgbGkucHJlSW5jcigpOwovKiAgbGkucHJlSW5jcigpOwogIGxpLnByZUluY3IoKTsKICBjb25zb2xlLmxvZygnbGkucG9zdEluY3IoKScsIGxpLnBvc3RJbmNyKCkpOwoqLwogIGxpLnBvc3RJbmNyKCk7CiAgbGkucG9zdEluY3IoKTsKICBsaS5wb3N0SW5jcigpOwpjb25zdCB7IGNvdW50LCBlbGVtU2l6ZSwgZXJyLCBtaW51c0RlbHRhLCBtaW51c1NoaWZ0LCBtaW51c1N0ZXAsIHAsIHBsdXNEZWx0YSwgcGx1c1NoaWZ0LCBwbHVzU3RlcCwgcHRtb2RlLCAgc3RlcCB9ID0gbGk7CgogIGNvbnNvbGUubG9nKCdMaW5lSXRlcmF0b3InLCB7IGNvdW50LCBlbGVtU2l6ZSwgZXJyLCBtaW51c0RlbHRhLCBtaW51c1NoaWZ0LCBtaW51c1N0ZXAsIHAsIHBsdXNEZWx0YSwgcGx1c1NoaWZ0LCBwbHVzU3RlcCwgcHRtb2RlLCBwdHIsIHB0cjAsIHN0ZXAgfSk7CiAgY29uc29sZS5sb2coJ2xpLnB0ciAtIGxpLnB0cjAnLGxpLnB0ciAtIGxpLnB0cjApOwogIGNvbnNvbGUubG9nKCdtYXQucHRyKDApJywgbWF0LnB0cigwKSk7Cgp9CgpNYWtlTGluZUl0ZXJhdG9yKG1hdDgpOwpNYWtlTGluZUl0ZXJhdG9yKG1hdDE2KTsKTWFrZUxpbmVJdGVyYXRvcihtYXQzMik7Ck1ha2VMaW5lSXRlcmF0b3IobWF0NjQpOwoKICBpbXdyaXRlKCdkaWFncmFtLnBuZycsIG1hdCk7Cn0KCm1haW4oLi4uc2NyaXB0QXJncyk7CgAAAAAAAAAAZAoAAAAAAAAAAAAAAAAAAAAAAABkCgAAAAAAAAAAAAAAAAAAAAAAAGQKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8HAAAAAAAAXwcAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 26646,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					18,
					1,
					"cut",
					null,
					"AQAAAFkcAAAAAAAAWRwAAAAAAAAIAAAAID8/IGJhc2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkcAAAAAAAAYRwAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAFkcAAAAAAAAYRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkcAAAAAAAAWRwAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAPAbAAAAAAAA8RsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAbAAAAAAAA8BsAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"paste",
					null,
					"AQAAAAQcAAAAAAAADBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQcAAAAAAAABBwAAAAAAAD////////vfw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAwcAAAAAAAADRwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwcAAAAAAAADBwAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAGMcAAAAAAAAYxwAAAAAAAAIAAAAID8/IGJhc2U",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMcAAAAAAAAaxwAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"paste",
					null,
					"AgAAAHAeAAAAAAAASB8AAAAAAAAAAAAASB8AAAAAAABIHwAAAAAAAC8AAAAgW21vZHVsZSA9PiByZXF1aXJlKG1vZHVsZSksICdpbXBvcnQgbW9kdWxlJ107Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAeAAAAAAAAnx4AAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoeAAAAAAAA2h4AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "create-tamper.js",
			"settings":
			{
				"buffer_size": 15280,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					121,
					1,
					"cut",
					null,
					"AQAAAF4SAAAAAAAAXhIAAAAAAAB5AAAAICAgICAgaWYoIWZpbGVzeXN0ZW0uZXhpc3RzU3luYyhtb2R1bGUpKSB0aHJvdyBuZXcgRXJyb3IoYE5vIHN1Y2ggbW9kdWxlIGFsaWFzIGZyb20gJyR7YWxpYXN9JyB0byAnJHthbGlhc2VzW2FsaWFzXX0nYCk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4SAAAAAAAA1xIAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					2,
					"paste",
					null,
					"AgAAAF4SAAAAAAAA1xIAAAAAAAAAAAAA1xIAAAAAAABQEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4SAAAAAAAAXhIAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGMSAAAAAAAAZBIAAAAAAAAAAAAAZBIAAAAAAABlEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMSAAAAAAAAYxIAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"left_delete",
					null,
					"AQAAAOISAAAAAAAA4hIAAAAAAAABAAAAIQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMSAAAAAAAA4xIAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAAETAAAAAAAAAhMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAETAAAAAAAAARMAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"cut",
					null,
					"AQAAAAITAAAAAAAAAhMAAAAAAABPAAAAdGhyb3cgbmV3IEVycm9yKGBObyBzdWNoIG1vZHVsZSBhbGlhcyBmcm9tICcke2FsaWFzfScgdG8gJyR7YWxpYXNlc1thbGlhc119J2ApOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAITAAAAAAAAURMAAAAAAAD////////vfw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAHATAAAAAAAAcRMAAAAAAAAAAAAAcRMAAAAAAAB3EwAAAAAAAAAAAAB3EwAAAAAAAHgTAAAAAAAAAAAAAHETAAAAAAAAcRMAAAAAAAAGAAAAICAgICAgcRMAAAAAAAB1EwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHATAAAAAAAAcBMAAAAAAAAAAAAAAKB5QA"
				],
				[
					141,
					1,
					"indent",
					null,
					"BAAAAAMTAAAAAAAABRMAAAAAAAAAAAAAKhMAAAAAAAAsEwAAAAAAAAAAAABZEwAAAAAAAFsTAAAAAAAAAAAAAHcTAAAAAAAAeRMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYTAAAAAAAACBMAAAAAAAAAAAAAAABJQA"
				],
				[
					144,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4TAAAAAAAAChMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "lib/mics.js",
			"settings":
			{
				"buffer_size": 4955,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/misc.js",
			"settings":
			{
				"buffer_size": 31753,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plot-cv.sublime-project",
			"settings":
			{
				"buffer_size": 3007,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "jack-session-client.c",
			"settings":
			{
				"buffer_size": 5184,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/ecmascript/printer.js",
			"settings":
			{
				"buffer_size": 32242,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgWAAAAAAAA+BYAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkWAAAAAAAA+hYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkWAAAAAAAA+RYAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					2,
					"left_delete",
					null,
					"AgAAAPkWAAAAAAAA+RYAAAAAAAABAAAAIPgWAAAAAAAA+BYAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoWAAAAAAAA+hYAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAPgWAAAAAAAA+RYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgWAAAAAAAA+BYAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\ns="
					},
					"BAAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAAA4YAAAAAAAADxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAIBhQA"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8YAAAAAAAAEBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8YAAAAAAAADxgAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAAA8YAAAAAAAADxgAAAAAAAABAAAAIA4YAAAAAAAADhgAAAAAAAABAAAAPQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "+="
					},
					"AgAAAA4YAAAAAAAADxgAAAAAAAAAAAAADxgAAAAAAAAQGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4YAAAAAAAADhgAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAABAYAAAAAAAAEhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAABAYAAAAAAAAEBgAAAAAAAABAAAAYA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEYAAAAAAAAERgAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAABAYAAAAAAAAERgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAABIYAAAAAAAAExgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIYAAAAAAAAEhgAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAABIYAAAAAAAAEhgAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMYAAAAAAAAExgAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABIYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIYAAAAAAAAEhgAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABMYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMYAAAAAAAAExgAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"right_delete",
					null,
					"AQAAABQYAAAAAAAAFBgAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9fQAAaW1wb3J0IHsgRVNOb2RlLCBMaXRlcmFsLCBGdW5jdGlvbkxpdGVyYWwsIFRlbXBsYXRlTGl0ZXJhbCwgUHJvcGVydHksIE1ldGhvZERlZmluaXRpb24sIEZ1bmN0aW9uRGVjbGFyYXRpb24sIEFycm93RnVuY3Rpb25FeHByZXNzaW9uLCBJZGVudGlmaWVyLCBDbGFzc0RlY2xhcmF0aW9uLCBPYmplY3RQYXR0ZXJuLCBTcHJlYWRFbGVtZW50LCBNZW1iZXJFeHByZXNzaW9uLCBTdGF0ZW1lbnQsIEltcG9ydERlY2xhcmF0aW9uLCBJbXBvcnRTcGVjaWZpZXIsIEJsb2NrU3RhdGVtZW50LCBJZlN0YXRlbWVudCB9IGZyb20gJy4vZXN0cmVlLmpzJzsKaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbC5qcyc7CmltcG9ydCAqIGFzIGRlZXAgZnJvbSAnLi4vZGVlcC5qcyc7Ci8vaW1wb3J0IHV0aWwgZnJvbSAndXRpbCc7Ci8vaW1wb3J0IHV0aWwgZnJvbSAndXRpbCc7CmNvbnN0IGxpbmVicmVhayA9IG5ldyBSZWdFeHAoJ1xccj9cXG4nLCAnZycpOwoKZXhwb3J0IGNsYXNzIFByaW50ZXIgewogIHN0YXRpYyBjb2xvcnMgPSB7CiAgICBrZXl3b3JkczogWzEsIDMxXSwKICAgIGlkZW50aWZpZXJzOiBbMSwgMzNdLAogICAgcHVuY3R1YXRvcnM6IFsxLCAzNl0sCiAgICBzdHJpbmdMaXRlcmFsczogWzEsIDM2XSwKICAgIG51bWJlckxpdGVyYWxzOiBbMSwgMzZdLAogICAgcmVnZXhwTGl0ZXJhbHM6IFsxLCAzNV0sCiAgICBjb21tZW50czogWzEsIDMyXSwKICAgIHRlbXBsYXRlczogWzEsIDM1XQogIH07CgogIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSwgY29tbWVudHMpIHsKICAgIGNvbnN0IHsgaW5kZW50ID0gMiwgY29sb3JzID0gZmFsc2UsIGZvcm1hdCA9IDEgfSA9IG9wdGlvbnM7CiAgICB0aGlzLmluZGVudCA9IGluZGVudCB8fCAyOwogICAgdGhpcy5jb21tZW50cyA9IGNvbW1lbnRzIHx8IFtdOwoKICAgIGxldCBjb2xvciA9IFV0aWwuY29sb3JpbmcoY29sb3JzKTsKCiAgICBVdGlsLmRlZmluZSh0aGlzLCB7CiAgICAgIGNvbG9yLAogICAgICBjb2xvclRleHQ6IE9iamVjdC5lbnRyaWVzKFByaW50ZXIuY29sb3JzKS5yZWR1Y2UoCiAgICAgICAgKGFjYywgW2tleSwgY29kZXNdKSA9PiAoewogICAgICAgICAgLi4uYWNjLAogICAgICAgICAgW2tleV06IHRleHQgPT4gY29sb3IudGV4dCh0ZXh0LCAuLi5jb2RlcykKICAgICAgICB9KSwKICAgICAgICB7fQogICAgICApLAogICAgICBjb2xvckNvZGU6IE9iamVjdC5lbnRyaWVzKFByaW50ZXIuY29sb3JzKS5yZWR1Y2UoCiAgICAgICAgKGFjYywgW2tleSwgY29kZXNdKSA9PiAoewogICAgICAgICAgLi4uYWNjLAogICAgICAgICAgW2tleV06IG91dHB1dCA9PiB7CiAgICAgICAgICAgIGlmKHR5cGVvZiBvdXRwdXQgPT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgICBpZihVdGlsLmVxdWFscyhVdGlsLmRlY29kZUFuc2kob3V0cHV0KS5zbGljZSgwLCAtMSksIGNvZGVzKSkgcmV0dXJuICcnOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBjb2xvci5jb2RlKC4uLmNvZGVzKTsKICAgICAgICAgIH0KICAgICAgICB9KSwKICAgICAgICB7fQogICAgICApCiAgICB9KTsKICAgIHRoaXMuZm9ybWF0ID0gZm9ybWF0OwogIH0KCiAgcHJpbnROb2RlKG5vZGUpIHsKICAgIGxldCBuYW1lLCBmbiwgY2xhc3NOYW1lOwogICAgdHJ5IHsKICAgICAgbmFtZSA9IChVdGlsLmlzT2JqZWN0KG5vZGUpICYmIG5vZGUgaW5zdGFuY2VvZiBFU05vZGUgJiYgVXRpbC5jbGFzc05hbWUobm9kZSkpIHx8IG5vZGUudHlwZTsKCiAgICAgIGZuID0KICAgICAgICB0aGlzWydwcmludCcgKyBuYW1lXSB8fAogICAgICAgIC8vKCgpID0+ICcnKSB8fAogICAgICAgIGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgICAgIGFyZ3MgPSBhcmdzLm1hcChhID0+IFV0aWwuY2xhc3NOYW1lKGEpKTsKICAgICAgICAgIGxldCBlcnIgPSBuZXcgRXJyb3IoYE5vbi1leGlzdGVudCBwcmludCR7bmFtZX0oJHthcmdzfSk6IGAgKyBVdGlsLmluc3BlY3Qobm9kZSkpOwogICAgICAgICAgZXJyLm5vZGUgPSBub2RlOwogICAgICAgICAgdGhyb3cgZXJyOwogICAgICAgIH07CiAgICB9IGNhdGNoKGVycikgewogICAgICAvL2NvbnNvbGUubG9nKCdlcnI6JywgZXJyKTsKICAgICAgdGhyb3cgZXJyOwogICAgICBwcm9jZXNzLmV4aXQoMCk7CiAgICB9CiAgICBsZXQgcmV0ID0gJyc7CiAgICAvLyAgICBjb25zb2xlLmxvZygibm9kZToiLG5vZGUpOwogICAgaWYobm9kZSBpbnN0YW5jZW9mIEVTTm9kZSkgewogICAgICBjb25zdCBhc3NvYyA9IEVTTm9kZS5hc3NvYyhub2RlKTsKICAgICAgY29uc3QgY29tbWVudHMgPSBhc3NvYy5jb21tZW50cyB8fCBbXTsKICAgICAgY29uc3QgcG9zaXRpb24gPSArYXNzb2MucG9zaXRpb247CiAgICAgIGlmKGNvbW1lbnRzICYmIGNvbW1lbnRzLmxlbmd0aCkgewogICAgICAgIGZvcihsZXQgY29tbWVudCBvZiBjb21tZW50cykgewogICAgICAgICAgLy9jb25zb2xlLmxvZygnY29tbWVudDonLCBVdGlsLmVzY2FwZShjb21tZW50LnZhbHVlKSk7CiAgICAgICAgICByZXQgKz0gY29tbWVudC52YWx1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIGxldCBjb2RlID0gZm4uY2FsbCh0aGlzLCBub2RlKTsKICAgIGlmKChub2RlIGluc3RhbmNlb2YgU3RhdGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBJbXBvcnREZWNsYXJhdGlvbikgJiYgIShub2RlIGluc3RhbmNlb2YgRnVuY3Rpb25EZWNsYXJhdGlvbiB8fCBub2RlIGluc3RhbmNlb2YgQmxvY2tTdGF0ZW1lbnQpKSBpZiAoIWNvZGUudHJpbUVuZCgpLmVuZHNXaXRoKCc7JykgJiYgIWNvZGUudHJpbUVuZCgpLmVuZHNXaXRoKCd9JykpIGNvZGUgKz0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoY29kZSkgKyAnOyc7CiAgICAvL2lmKHJldC5sZW5ndGgpIGNvbnNvbGUubG9nKCdjb2RlOicsIFV0aWwuZXNjYXBlKGNvZGUpKTsKICAgIHJldCArPSBjb2RlOwoKICAgIGlmKHJldC5pbmRleE9mKCdceDFiWycpICE9IC0xKSB7CiAgICAgIGxldCBhbnNpID0gVXRpbC5kZWNvZGVBbnNpKHJldCk7CiAgICAgIGlmKCFVdGlsLmVxdWFscyhhbnNpLCBbMCwgJ20nXSkpIHJldCArPSAnXHgxYlswbSc7CiAgICB9CiAgICByZXR1cm4gcmV0OwogIH0KCiAgcHJpbnQodHJlZSkgewogICAgbGV0IGl0ID0gZGVlcC5pdGVyYXRlKHRyZWUsIG5vZGUgPT4gVXRpbC5pc09iamVjdChub2RlKSAmJiAncG9zaXRpb24nIGluIG5vZGUsIGRlZXAuUkVUVVJOX1ZBTFVFX1BBVEgpOwogICAgdGhpcy5ub2RlcyA9IFsuLi5pdF0ubWFwKChbbm9kZSwgcGF0aF0pID0+IFtub2RlLnBvc2l0aW9uLCBwYXRoLmpvaW4oJy4nKSwgbm9kZV0pOwogICAgdGhpcy5hZGphY2VudCA9IHRoaXMuY29tbWVudHMubWFwKCh7IHRleHQsIHBvcywgbGVuIH0pID0+ICh7CiAgICAgIHN0YXJ0OiBwb3MsCiAgICAgIGVuZDogcG9zICsgbGVuLAogICAgICB0ZXh0LAogICAgICBub2RlczogdGhpcy5ub2Rlcy5zbGljZSh0aGlzLm5vZGVzLmZpbmRJbmRleCgoW3Bvc2l0aW9uLCBwYXRoXSkgPT4gcG9zaXRpb24gPiBwb3MgKyBsZW4pIC0gMSkuc2xpY2UoMCwgMikKICAgIH0pKTsKICAgIGxldCBvdXRwdXQgPSB0aGlzLnByaW50Tm9kZSh0cmVlKTsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludFByb2dyYW0ocHJvZ3JhbSkgewogICAgbGV0IG91dHB1dCA9ICcnOwogICAgZm9yKGxldCBzdGF0ZW1lbnQgb2YgcHJvZ3JhbS5ib2R5KSB7CiAgICAgIGxldCBsaW5lID0gdGhpcy5wcmludE5vZGUoc3RhdGVtZW50KTsKICAgICAgLy8gIGlmKGxpbmUgPT0gJycpIGNvbnRpbnVlOwogICAgICBpZihvdXRwdXQubGVuZ3RoIC8qJiYgb3V0cHV0LmVuZHNXaXRoKCc7JykqLykgewogICAgICAgIGlmKCEvXlxzKlwvW1wvKl0vLnRlc3QobGluZSkpIHsKICAgICAgICAgIG91dHB1dCArPSAnXG4nOwogICAgICAgICAgaWYobGluZS5pbmRleE9mKCdcbicpICE9IC0xICYmICFvdXRwdXQuZW5kc1dpdGgoJ1xuJykpIG91dHB1dCArPSAnXG4nOwogICAgICAgIH0KICAgICAgfQogICAgICBvdXRwdXQgKz0gbGluZTsKICAgIH0KICAgIC8vICAgaWYob3V0cHV0ICE9ICcnKSBvdXRwdXQgKz0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMob3V0cHV0KSArICc7JzsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludFN0cmluZyhzdHIpIHsKICAgIHJldHVybiB0aGlzLmNvbG9yVGV4dC5zdHJpbmdMaXRlcmFscyhgIiR7c3RyfSJgKTsKICB9CgogIC8qCiAgcHJpbnRFeHByZXNzaW9uKGV4cHJlc3Npb24pIHsKICB9Ki8KCiAgcHJpbnRGdW5jdGlvbkFyZ3VtZW50KGZ1bmN0aW9uX2FyZ3VtZW50KSB7CiAgICBjb25zdCB7IGFyZywgZGVmYXVsdFZhbHVlIH0gPSBmdW5jdGlvbl9hcmd1bWVudDsKCiAgICBsZXQgb3V0cHV0ID0gJyc7CiAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoYXJnKTsKCiAgICBpZihkZWZhdWx0VmFsdWUpIHsKICAgICAgb3V0cHV0ICs9ICcgPSAnOwogICAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoZGVmYXVsdFZhbHVlKTsKICAgIH0KICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludElkZW50aWZpZXIoaWRlbnRpZmllcikgewogICAgcmV0dXJuIHRoaXMuY29sb3JUZXh0LmlkZW50aWZpZXJzKGlkZW50aWZpZXIubmFtZSk7CiAgfQoKICBwcmludFN1cGVyKG5vZGUpIHsKICAgIHJldHVybiB0aGlzLmNvbG9yVGV4dC5rZXl3b3Jkcygnc3VwZXInKTsKICB9CgogIC8qcHJpbnRDb21wdXRlZFByb3BlcnR5TmFtZShjb21wdXRlZF9wcm9wZXJ0eV9uYW1lKSB7CiAgICBjb25zdCB7IGV4cHIgfSA9IGNvbXB1dGVkX3Byb3BlcnR5X25hbWU7CiAgICBsZXQgb3V0cHV0ID0gJ1snOwogICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGV4cHIpOwogICAgb3V0cHV0ICs9ICddJzsKICAgIHJldHVybiBvdXRwdXQ7CiAgfSovCgogIC8qcHJpbnRCaW5kaW5nUHJvcGVydHkoYmluZGluZ19wcm9wZXJ0eSkgewogICAgY29uc3QgeyBwcm9wZXJ0eSwgaWQsIGluaXRpYWxpemVyIH0gPSBiaW5kaW5nX3Byb3BlcnR5OwoKICAgIGxldCBvdXRwdXQgPSAnJzsKICAgIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShwcm9wZXJ0eSk7CgogICAgLy9jb25zb2xlLmxvZygncHJpbnRCaW5kaW5nUHJvcGVydHk6JywgdmFsdWUudmFsdWUsIGlkLnZhbHVlKTsKCiAgICBpZihbcHJvcGVydHksIGlkXS5ldmVyeShVdGlsLmlzT2JqZWN0KSAmJiBwcm9wZXJ0eS52YWx1ZSAhPSBpZC52YWx1ZSkKICAgICAgb3V0cHV0ICs9ICc6ICcgKyB0aGlzLnByaW50Tm9kZShpZCk7CiAgICBpZihpbml0aWFsaXplcikgb3V0cHV0ICs9ICcgPSAnICsgdGhpcy5wcmludE5vZGUoaW5pdGlhbGl6ZXIpOwogICAgcmV0dXJuIG91dHB1dDsKICB9Ki8KCiAgcHJpbnRMaXRlcmFsKGxpdGVyYWwpIHsKICAgIGxldCB7IHZhbHVlLCByYXcgfSA9IGxpdGVyYWw7CgogICAgaWYodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UobGluZWJyZWFrLCAnXFxuJyk7CgogICAgbGV0IHMgPSByYXcgPz8gdmFsdWU7CgogICAgcmV0dXJuIHRoaXMuY29sb3JUZXh0Lm51bWJlckxpdGVyYWxzKHMpOwogIH0KCiAgcHJpbnRSZWdFeHBMaXRlcmFsKHJlZ2V4cF9saXRlcmFsKSB7CiAgICAvL2NvbnNvbGUubG9nKCdwcmludFJlZ0V4cExpdGVyYWwnLCByZWdleHBfbGl0ZXJhbCk7CiAgICBsZXQgeyBwYXR0ZXJuLCBmbGFncyB9ID0gcmVnZXhwX2xpdGVyYWwucmVnZXg7CgogICAgcmV0dXJuIHRoaXMuY29sb3JUZXh0LnJlZ2V4cExpdGVyYWxzKGAvJHtwYXR0ZXJufS8ke2ZsYWdzIHx8ICcnfWApOwogIH0KCiAgcHJpbnRUZW1wbGF0ZUxpdGVyYWwodGVtcGxhdGVfbGl0ZXJhbCkgewogICAgY29uc3QgeyBxdWFzaXMsIGV4cHJlc3Npb25zIH0gPSB0ZW1wbGF0ZV9saXRlcmFsOwogICAgbGV0IHMgPSAnYCc7CiAgICAvL2NvbnNvbGUubG9nKCd0ZW1wbGF0ZV9saXRlcmFsOicsIHRlbXBsYXRlX2xpdGVyYWwpOwoKICAgIGZvcihsZXQgaSA9IDA7IGkgPCBxdWFzaXMubGVuZ3RoOyBpKyspIHsKICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gcXVhc2lzW2ldOwogICAgICBzICs9IHZhbHVlLnJhdzsgLy8ucmVwbGFjZSgvXFxuL2csICdcbicpOwoKICAgICAgaWYoZXhwcmVzc2lvbnNbaV0pIHMgKz0gJyR7JyArIHRoaXMucHJpbnROb2RlKGV4cHJlc3Npb25zW2ldKSArICd9JzsKICAgIH0KICAgIHMrPSdgJzsKICAgIHJldHVybiB0aGlzLmNvbG9yVGV4dC50ZW1wbGF0ZXMocyk7CiAgfQoKICBwcmludFRoaXNFeHByZXNzaW9uKHRoaXNfZXhwcmVzc2lvbikgewogICAgcmV0dXJuICd0aGlzJzsKICB9CgogIHByaW50U3ByZWFkRWxlbWVudChzcHJlYWRfZWxlbWVudCkgewogICAgY29uc3QgeyBhcmd1bWVudCB9ID0gc3ByZWFkX2VsZW1lbnQ7CiAgICByZXR1cm4gJy4uLicgKyB0aGlzLnByaW50Tm9kZShhcmd1bWVudCk7CiAgfQoKICBwcmludFVuYXJ5RXhwcmVzc2lvbih1bmFyeV9leHByZXNzaW9uKSB7CiAgICBjb25zdCB7IG9wZXJhdG9yLCBhcmd1bWVudCwgcHJlZml4IH0gPSB1bmFyeV9leHByZXNzaW9uOwogICAgbGV0IGlzQWxwaGEgPSAvW2Etel0kLy50ZXN0KG9wZXJhdG9yKTsKICAgIGxldCBvdXRwdXQgPSAnJzsKICAgIGxldCBhcmcgPSB0aGlzLnByaW50Tm9kZShhcmd1bWVudCk7CiAgICAvL2FyZyA9ICcoJyArIGFyZyArICcpJzsKICAgIGlmKHByZWZpeCAmJiBpc0FscGhhKSBhcmcgPSAnICcgKyBhcmc7CiAgICBpZighcHJlZml4KSBvdXRwdXQgKz0gYXJnOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlW2lzQWxwaGEgPyAna2V5d29yZHMnIDogJ3B1bmN0dWF0b3JzJ10oKSArIG9wZXJhdG9yOwogICAgaWYocHJlZml4KSBvdXRwdXQgKz0gYXJnOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50VXBkYXRlRXhwcmVzc2lvbih1cGRhdGVfZXhwcmVzc2lvbikgewogICAgcmV0dXJuIHRoaXMucHJpbnRVbmFyeUV4cHJlc3Npb24odXBkYXRlX2V4cHJlc3Npb24pOwogIH0KCiAgcHJpbnRCaW5hcnlFeHByZXNzaW9uKGJpbmFyeV9leHByZXNzaW9uKSB7CiAgICBjb25zdCB7IG9wZXJhdG9yLCBsZWZ0LCByaWdodCB9ID0gYmluYXJ5X2V4cHJlc3Npb247CgogICAgbGV0IGxocyA9IHRoaXMucHJpbnROb2RlKGxlZnQpLnJlcGxhY2UoL1tcc1w7XSokL2csICcnKTsKICAgIGxldCByaHMgPSB0aGlzLnByaW50Tm9kZShyaWdodCk7CiAgICBsZXQgb3V0cHV0ID0gbGhzICsgJyAnOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlWy9eW2Etel0vLnRlc3Qob3BlcmF0b3IpID8gJ2tleXdvcmRzJyA6ICdwdW5jdHVhdG9ycyddKG91dHB1dCkgKyBvcGVyYXRvcjsKICAgIG91dHB1dCArPSAnICcgKyByaHM7CgogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50QXNzaWdubWVudEV4cHJlc3Npb24oYXNzaWdubWVudF9leHByZXNzaW9uKSB7CiAgICBjb25zdCB7IG9wZXJhdG9yLCBsZWZ0LCByaWdodCB9ID0gYXNzaWdubWVudF9leHByZXNzaW9uOwogICAgbGV0IG91dHB1dCA9IHRoaXMucHJpbnROb2RlKGxlZnQpICsgJyAnOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKG91dHB1dCkgKyBvcGVyYXRvcjsKICAgIG91dHB1dCArPSAnICcgKyB0aGlzLnByaW50Tm9kZShyaWdodCk7CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRMb2dpY2FsRXhwcmVzc2lvbihsb2dpY2FsX2V4cHJlc3Npb24pIHsKICAgIGNvbnN0IHsgb3BlcmF0b3IsIGxlZnQsIHJpZ2h0IH0gPSBsb2dpY2FsX2V4cHJlc3Npb247CiAgICAvL2NvbnNvbGUubG9nKCdsb2dpY2FsX2V4cHJlc3Npb24nLCBsb2dpY2FsX2V4cHJlc3Npb24pOwogICAgbGV0IG91dHB1dCA9ICcnOwogICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGxlZnQpICsgJyAnOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlWy9eW2Etel0vLnRlc3Qob3BlcmF0b3IpID8gJ2tleXdvcmRzJyA6ICdwdW5jdHVhdG9ycyddKG91dHB1dCkgKyBvcGVyYXRvcjsKICAgIG91dHB1dCArPSAnICcgKyB0aGlzLnByaW50Tm9kZShyaWdodCk7CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRDaGFpbkV4cHJlc3Npb24oY2hhaW5fZXhwcmVzc2lvbikgewogICAgY29uc3QgeyBleHByZXNzaW9uIH0gPSBjaGFpbl9leHByZXNzaW9uOwoKICAgIHJldHVybiB0aGlzLnByaW50Tm9kZShleHByZXNzaW9uKTsKICB9CgogIHByaW50TWVtYmVyRXhwcmVzc2lvbihtZW1iZXJfZXhwcmVzc2lvbikgewogICAgY29uc3QgeyBvYmplY3QsIHByb3BlcnR5LCBjb21wdXRlZCwgb3B0aW9uYWwgfSA9IG1lbWJlcl9leHByZXNzaW9uOwogICAgY29uc3QgeyBjb2xvclRleHQsIGNvbG9yQ29kZSB9ID0gdGhpczsKICAgIGxldCBsZWZ0LCByaWdodDsKICAgIC8vY29uc29sZS5sb2coIm1lbWJlcl9leHByZXNzaW9uOiIsIG1lbWJlcl9leHByZXNzaW9uKTsKICAgIGxlZnQgPSB0aGlzLnByaW50Tm9kZShvYmplY3QpOwogICAgcmlnaHQgPSB0aGlzLnByaW50Tm9kZShwcm9wZXJ0eSk7CgogICAgLy9jb25zb2xlLmxvZygncHJpbnRNZW1iZXJFeHByZXNzaW9uJywgeyBvYmplY3QsIHByb3BlcnR5IH0pOwogICAgaWYoIShvYmplY3QgaW5zdGFuY2VvZiBJZGVudGlmaWVyKSAmJiAhKG9iamVjdCBpbnN0YW5jZW9mIExpdGVyYWwpICYmICEob2JqZWN0IGluc3RhbmNlb2YgTWVtYmVyRXhwcmVzc2lvbikpIGxlZnQgPSAnKCcgKyBsZWZ0ICsgJyknOwoKICAgIC8vL251bGwuKnsvLnRlc3QobGVmdCkgJiYgY29uc29sZS5sb2coIm9iamVjdDoiLCBvYmplY3QpOwogICAgY29uc3QgcHVuY3R1YXRvciA9IG9wdGlvbmFsID8gJz8uJyA6ICcuJzsKCiAgICBpZighY29tcHV0ZWQpIHJldHVybiBsZWZ0ICsgY29sb3JUZXh0LnB1bmN0dWF0b3JzKHB1bmN0dWF0b3IpICsgY29sb3JDb2RlLmlkZW50aWZpZXJzKCkgKyByaWdodDsKICAgIHJldHVybiBsZWZ0ICsgY29sb3JDb2RlLnB1bmN0dWF0b3JzKGxlZnQpICsgKG9wdGlvbmFsID8gJz8uJyA6ICcnKSArICdbJyArIHJpZ2h0ICsgY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyAnXSc7CiAgfQoKICBwcmludENvbmRpdGlvbmFsRXhwcmVzc2lvbihjb25kaXRpb25hbF9leHByZXNzaW9uKSB7CiAgICBjb25zdCB7IHRlc3QsIGNvbnNlcXVlbnQsIGFsdGVybmF0ZSB9ID0gY29uZGl0aW9uYWxfZXhwcmVzc2lvbjsKICAgIC8vY29uc29sZS5sb2coJ2NvbmRpdGlvbmFsX2V4cHJlc3Npb246JywgY29uZGl0aW9uYWxfZXhwcmVzc2lvbik7CgogICAgaWYoIXRlc3QpIHRocm93IG5ldyBFcnJvcignJyk7CgogICAgbGV0IGNvbmRpdGlvbiA9IHRoaXMucHJpbnROb2RlKHRlc3QpOwogICAgbGV0IGlmX3RydWUgPSB0aGlzLnByaW50Tm9kZShjb25zZXF1ZW50KTsKICAgIGxldCBpZl9mYWxzZSA9IHRoaXMucHJpbnROb2RlKGFsdGVybmF0ZSk7CiAgICByZXR1cm4gY29uZGl0aW9uICsgJyA/ICcgKyBpZl90cnVlICsgJyA6ICcgKyBpZl9mYWxzZTsKICB9CgogIHByaW50Q2FsbEV4cHJlc3Npb24oY2FsbF9leHByZXNzaW9uKSB7CiAgICBjb25zdCB7IGFyZ3VtZW50czogYXJncywgY2FsbGVlLCBvcHRpb25hbCA9IGZhbHNlIH0gPSBjYWxsX2V4cHJlc3Npb247CiAgICAvL2NvbnNvbGUubG9nKCJhcmdzOiIsIHV0aWwuaW5zcGVjdChhcmdzLCB7IGRlcHRoOiBJbmZpbml0eSwgYnJlYWtMZW5ndGg6IDEwMDAgfSkpOwoKICAgIGlmKGFyZ3MgaW5zdGFuY2VvZiBUZW1wbGF0ZUxpdGVyYWwpIHJldHVybiB0aGlzLnByaW50Tm9kZShjYWxsZWUpICsgdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArIHRoaXMucHJpbnROb2RlKGFyZ3MpOwogICAgbGV0IGZuID0gdGhpcy5wcmludE5vZGUoY2FsbGVlKTsKICAgIGlmKGNhbGxlZSBpbnN0YW5jZW9mIEFycm93RnVuY3Rpb25FeHByZXNzaW9uKSBmbiA9IGAoJHtmbn0pYDsKCiAgICByZXR1cm4gZm4gKyB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycyhmbikgKyAob3B0aW9uYWwgPyAnPy4nIDogJycpICsgJygnICsgYXJncy5tYXAoYXJnID0+IHRoaXMucHJpbnROb2RlKGFyZykpLmpvaW4odGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICcsICcpICsgdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICcpJzsKICB9CgogIHByaW50TmV3RXhwcmVzc2lvbihuZXdfZXhwcmVzc2lvbikgewogICAgcmV0dXJuIHRoaXMuY29sb3JDb2RlLmtleXdvcmRzKCkgKyAnbmV3ICcgKyB0aGlzLnByaW50Q2FsbEV4cHJlc3Npb24obmV3X2V4cHJlc3Npb24pOwogIH0KCiAgcHJpbnRTZXF1ZW5jZUV4cHJlc3Npb24oc2VxdWVuY2VfZXhwcmVzc2lvbikgewogICAgY29uc3QgeyBleHByZXNzaW9ucyB9ID0gc2VxdWVuY2VfZXhwcmVzc2lvbjsKCiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICcoJzsKICAgIC8vY29uc29sZS5sb2coJ2V4cHJlc3Npb25zOiAnLCBleHByZXNzaW9ucyk7CgogICAgb3V0cHV0ICs9IGV4cHJlc3Npb25zCiAgICAgIC5mbGF0KCkKICAgICAgLm1hcChleHByID0+IHsKICAgICAgICBsZXQgbm9kZSA9IHRoaXMucHJpbnROb2RlKGV4cHIpOwogICAgICAgIHJldHVybiBub2RlOwogICAgICB9KQogICAgICAuam9pbignLCAnKTsKICAgIG91dHB1dCArPSB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycyhvdXRwdXQpICsgJyknOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50TGFiZWxsZWRTdGF0ZW1lbnQobGFiZWxsZWRTdGF0ZW1lbnQpIHsKICAgIGNvbnN0IHsgbGFiZWwsIGJvZHkgfSA9IGxhYmVsbGVkU3RhdGVtZW50OwoKICAgIGxldCBvdXRwdXQgPSAnJzsKCiAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUobGFiZWwpOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKG91dHB1dCkgKyAnOic7CiAgICBvdXRwdXQgKz0gJ1xuJzsKICAgIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShib2R5KTsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludEJsb2NrU3RhdGVtZW50KGJsb2NrX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBib2R5IH0gPSBibG9ja19zdGF0ZW1lbnQ7CiAgICBsZXQgcyA9ICcnOwogICAgLyppZighYm9keSkgewogICAgICAvL2NvbnNvbGUubG9nKCJibG9ja19zdGF0ZW1lbnQ6IiwgYmxvY2tfc3RhdGVtZW50KTsKICAgICAgcHJvY2Vzcy5leGl0KCk7CiAgICB9Ki8KICAgIGlmKCdsZW5ndGgnIGluIGJvZHkpIHsKICAgICAgaWYoYm9keS5sZW5ndGggPT0gMCkgcmV0dXJuIHRoaXMuY29sb3JUZXh0LnB1bmN0dWF0b3JzKCd7fScpOwogICAgICBmb3IobGV0IHN0YXRlbWVudCBvZiBib2R5KSB7CiAgICAgICAgaWYoc3RhdGVtZW50ID09IG51bGwpIHsKICAgICAgICAgIC8vY29uc29sZS5sb2coInByaW50QmxvY2tTdGF0ZW1lbnQ6ICIsIGJvZHkpOwogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7CiAgICAgICAgfQogICAgICAgIGxldCBsaW5lID0gdGhpcy5wcmludE5vZGUoc3RhdGVtZW50KTsKCiAgICAgICAgbGV0IG11bHRpbGluZSA9IC9cbi8udGVzdChsaW5lKTsKICAgICAgICBzICs9IG11bHRpbGluZSAmJiBzLmxlbmd0aCA/IChsaW5lLmVuZHNXaXRoKCdcbicpID8gJ1xuJyA6ICdcblxuJykgOiBsaW5lLmVuZHNXaXRoKCdcbicpID8gJycgOiAnXG4nOwoKICAgICAgICBpZihzLmVuZHNXaXRoKCdcbicpKSBzICs9ICcgICc7CiAgICAgICAgbGV0IGVvbCA9ICgvKDt8XG58fSkkLy50ZXN0KGxpbmUudHJpbUVuZCgpKSA/ICcnIDogdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICc7JykgKyAobXVsdGlsaW5lID8gJ1xuJyA6ICcnKTsKICAgICAgICAvL2NvbnNvbGUubG9nKCJsaW5lOiIsIHsgbGluZSwgZW9sIH0pOwoKICAgICAgICBpZihsaW5lICE9ICcnKSBzICs9IGxpbmUucmVwbGFjZShsaW5lYnJlYWssICdcbiAgJykgKyBlb2w7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHMgKz0gdGhpcy5wcmludE5vZGUoYm9keSkucmVwbGFjZShsaW5lYnJlYWssICdcbiAgJyk7CiAgICB9CiAgICBzID0gcy50cmltRW5kKCk7CgogICAgcmV0dXJuIHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyAneycgKyBzICsgdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArIChuZXcgUmVnRXhwKCdbfTtcXG4gXSQnKS50ZXN0KHMudHJpbUVuZCgpKSA/ICdcbn0nIDogJztcbn0nKTsKICB9CgogIHByaW50U3RhdGVtZW50TGlzdChzdGF0ZW1lbnRfbGlzdCkgewogICAgY29uc3QgeyBib2R5IH0gPSBzdGF0ZW1lbnRfbGlzdDsKICAgIGxldCBzID0gJyc7CiAgICBmb3IobGV0IHN0YXRlbWVudCBvZiBib2R5KSB7CiAgICAgIGxldCBsaW5lID0gdGhpcy5wcmludE5vZGUoc3RhdGVtZW50KTsKICAgICAgbGV0IG11bHRpbGluZSA9IC9cbi8udGVzdChsaW5lKTsKICAgICAgcyArPSBtdWx0aWxpbmUgJiYgcy5sZW5ndGggPyAnXG5cbicgOiAnXG4nOwogICAgICBpZihsaW5lICE9ICcnKSBzICs9IGxpbmU7CgogICAgICBzICs9IChuZXcgUmVnRXhwKCcoO3xcXG58fXxcXHMpJCcpLnRlc3QobGluZS50cmltRW5kKCkpID8gJycgOiB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycyhzKSArICc7JykgKyAobXVsdGlsaW5lID8gJ1xuJyA6ICcnKTsKICAgIH0KICAgIHJldHVybiBzOwogIH0KCiAgcHJpbnRFbXB0eVN0YXRlbWVudChlbXB0eV9zdGF0ZW1lbnQpIHsKICAgIHJldHVybiAnJzsKICB9CgogIHByaW50RXhwcmVzc2lvblN0YXRlbWVudChleHByZXNzaW9uX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBleHByZXNzaW9uIH0gPSBleHByZXNzaW9uX3N0YXRlbWVudDsKICAgIHJldHVybiB0aGlzLnByaW50Tm9kZShleHByZXNzaW9uKTsKICB9CgogIHByaW50UmV0dXJuU3RhdGVtZW50KHJldHVybl9zdGF0ZW1lbnQpIHsKICAgIGNvbnN0IHsgYXJndW1lbnQgfSA9IHJldHVybl9zdGF0ZW1lbnQ7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvclRleHQua2V5d29yZHMoJ3JldHVybicpOwogICAgaWYoYXJndW1lbnQpIHsKICAgICAgb3V0cHV0ICs9ICcgJzsKICAgICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGFyZ3VtZW50KTsKICAgIH0KICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludENvbnRpbnVlU3RhdGVtZW50KGNvbnRpbnVlX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBsYWJlbCB9ID0gY29udGludWVfc3RhdGVtZW50OwoKICAgIGxldCBzID0gdGhpcy5jb2xvclRleHQua2V5d29yZHMoJ2NvbnRpbnVlJyk7CgogICAgaWYobGFiZWwpIHsKICAgICAgcyArPSAnICc7CiAgICAgIHMgKz0gdGhpcy5wcmludE5vZGUobGFiZWwpOwogICAgfQogICAgcmV0dXJuIHM7CiAgfQoKICBwcmludEJyZWFrU3RhdGVtZW50KGJyZWFrX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBsYWJlbCB9ID0gYnJlYWtfc3RhdGVtZW50OwogICAgbGV0IHMgPSB0aGlzLmNvbG9yVGV4dC5rZXl3b3JkcygnYnJlYWsnKTsKCiAgICBpZihsYWJlbCkgewogICAgICBzICs9ICcgJzsKICAgICAgcyArPSB0aGlzLnByaW50Tm9kZShsYWJlbCk7CiAgICB9CiAgICByZXR1cm4gczsKICB9CgogIHByaW50SWZTdGF0ZW1lbnQoaWZfc3RhdGVtZW50KSB7CiAgICBjb25zdCB7IHRlc3QsIGNvbnNlcXVlbnQsIGFsdGVybmF0ZSB9ID0gaWZfc3RhdGVtZW50OwogICAgbGV0IGNvbmRpdGlvbiA9IHRoaXMucHJpbnROb2RlKHRlc3QpOwogICAgbGV0IGlmX3RydWUgPSB0aGlzLnByaW50Tm9kZShjb25zZXF1ZW50KTsKICAgIGxldCBuZXdsaW5lID0gKHMsIHNwYWNlID0gJyAgJykgPT4gKHMuc3RhcnRzV2l0aCgneycpID8gJyAnIDogJ1xuJyArIHNwYWNlKTsKICAgIGxldCBvdXRwdXQgPSB0aGlzLmNvbG9yQ29kZS5rZXl3b3JkcygpICsgJ2lmJyArIHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyBgKCR7Y29uZGl0aW9ufSkke25ld2xpbmUoaWZfdHJ1ZSl9JHtpZl90cnVlfWA7CiAgICBpZihhbHRlcm5hdGUpIHsKICAgICAgbGV0IGlmX2ZhbHNlID0gdGhpcy5wcmludE5vZGUoYWx0ZXJuYXRlKTsKICAgICAgb3V0cHV0ICs9IChuZXcgUmVnRXhwKCdbO31cXG5dJCcpLnRlc3Qob3V0cHV0KSA/ICcnIDogdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMob3V0cHV0KSArICc7JykgKyB0aGlzLmNvbG9yQ29kZS5rZXl3b3JkcygpICsgYCR7bmV3bGluZShpZl90cnVlLCAnJyl9ZWxzZSR7YWx0ZXJuYXRlIGluc3RhbmNlb2YgSWZTdGF0ZW1lbnQgPyAnICcgOiBuZXdsaW5lKGlmX2ZhbHNlKX0ke2lmX2ZhbHNlfWA7CiAgICB9CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRTd2l0Y2hTdGF0ZW1lbnQoc3dpdGNoX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBkaXNjcmltaW5hbnQsIGNhc2VzIH0gPSBzd2l0Y2hfc3RhdGVtZW50OwogICAgbGV0IGNvbmRpdGlvbiA9IHRoaXMucHJpbnROb2RlKGRpc2NyaW1pbmFudCk7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvckNvZGUua2V5d29yZHMoKSArIGBzd2l0Y2hgICsgdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArIGAoJHtjb25kaXRpb259KSB7XG5gOwogICAgZm9yKGxldCBjYXNlX2NsYXVzZSBvZiBjYXNlcykgewogICAgICBjb25zdCB7IHRlc3QsIGNvbnNlcXVlbnQgfSA9IGNhc2VfY2xhdXNlOwogICAgICAvL2NvbnNvbGUubG9nKCdwcmludFN3aXRjaFN0YXRlbWVudCcsIHsgdGVzdCB9KTsKCiAgICAgIGlmKHRlc3QgPT0gbnVsbCkgb3V0cHV0ICs9ICcgIGRlZmF1bHQ6JzsKICAgICAgZWxzZSBpZih0ZXN0LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgICAgY29uc3QgeyByYXcsIHZhbHVlIH0gPSB0ZXN0OwogICAgICAgIG91dHB1dCArPSAnICBjYXNlICcgKyAocmF3ID8/IHZhbHVlKSArICc6JzsKICAgICAgfSBlbHNlIG91dHB1dCArPSAnICBjYXNlICcgKyB0aGlzLnByaW50Tm9kZSh0ZXN0KSArICc6JzsKICAgICAgbGV0IGNhc2VfYm9keSA9IHRoaXMucHJpbnROb2RlKGNvbnNlcXVlbnQpLnRyaW0oKTsKCiAgICAgIGNhc2VfYm9keSA9ICgvXltee10uKlxuLy50ZXN0KGNhc2VfYm9keSkgPyAnXG4nIDogJyAnKSArIGNhc2VfYm9keTsKICAgICAgY2FzZV9ib2R5ID0gY2FzZV9ib2R5LnJlcGxhY2UobGluZWJyZWFrLCAnXG4gICAgJyk7CiAgICAgIG91dHB1dCArPSBjYXNlX2JvZHkgKyAoL1xuLy50ZXN0KGNhc2VfYm9keSkgPyAnXG5cbicgOiAnXG4nKTsKICAgIH0KICAgIHJldHVybiBvdXRwdXQgKyBgfWA7CiAgfQoKICBwcmludFdoaWxlU3RhdGVtZW50KHdoaWxlX3N0YXRlbWVudCkgewogICAgY29uc3QgeyBib2R5LCB0ZXN0IH0gPSB3aGlsZV9zdGF0ZW1lbnQ7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvckNvZGUua2V5d29yZHMoKSArICd3aGlsZScgKyB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsgYChgICsgdGhpcy5wcmludE5vZGUodGVzdCkgKyB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsgJykgJzsKICAgIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShib2R5KTsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludERvV2hpbGVTdGF0ZW1lbnQoZG9fc3RhdGVtZW50KSB7CiAgICBjb25zdCB7IGJvZHksIHRlc3QgfSA9IGRvX3N0YXRlbWVudDsKICAgIGxldCBvdXRwdXQgPSBgZG8gYDsKICAgIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShib2R5KTsKICAgIG91dHB1dCArPSAnICcgKyB0aGlzLmNvbG9yQ29kZS5rZXl3b3JkcygpICsgJ3doaWxlJyArIHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyBgKGAgKyB0aGlzLnByaW50Tm9kZSh0ZXN0KSArIHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyAnKSc7CiAgICByZXR1cm4gb3V0cHV0OwogICAgLy9jb25zb2xlLmxvZyhhcmd1bWVudHNbMF0pOwogICAgLy9jb25zb2xlLmxvZyhPYmplY3Qua2V5cyhhcmd1bWVudHNbMF0pLmpvaW4oIiwgIikpOwogICAgdGhyb3cgbmV3IEVycm9yKGFyZ3VtZW50c1swXSk7CiAgfQoKICBwcmludEZvclN0YXRlbWVudChmb3Jfc3RhdGVtZW50KSB7CiAgICBjb25zdCB7IGluaXQsIHRlc3QsIHVwZGF0ZSwgYm9keSB9ID0gZm9yX3N0YXRlbWVudDsKICAgIGxldCBhc3NpZ24gPSBpbml0ID8gdGhpcy5wcmludE5vZGUoaW5pdCkucmVwbGFjZSgvOyQvLCAnJykgOiAnJzsKICAgIGxldCBjb25kaXRpb24gPSB0ZXN0ID8gJyAnICsgdGhpcy5wcmludE5vZGUodGVzdCkgOiAnJzsKICAgIGxldCBpdGVyYXRlID0gdXBkYXRlID8gJyAnICsgdGhpcy5wcmludE5vZGUodXBkYXRlKSA6ICcnOwogICAgbGV0IG91dHB1dCA9IGBmb3IoJHthc3NpZ259OyR7Y29uZGl0aW9ufTske2l0ZXJhdGV9KWA7CiAgICBsZXQgY29kZSA9IHRoaXMucHJpbnROb2RlKGJvZHkpOwoKICAgIG91dHB1dCArPSAvXG4vLnRlc3QoY29kZSkgPyAnICcgOiAnXG4gICc7CiAgICBvdXRwdXQgKz0gY29kZTsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludEZvckluU3RhdGVtZW50KGZvcl9pbl9zdGF0ZW1lbnQsIG9wZXJhdG9yID0gJ2luJykgewogICAgY29uc3QgeyBsZWZ0LCByaWdodCwgYm9keSB9ID0gZm9yX2luX3N0YXRlbWVudDsKCiAgICBsZXQga2V5ID0gdGhpcy5wcmludE5vZGUobGVmdCkucmVwbGFjZSgvOyQvLCAnJyk7CiAgICBsZXQgb2JqZWN0ID0gdGhpcy5wcmludE5vZGUocmlnaHQpOwogICAgY29uc3QgeyBjb2xvclRleHQsIGNvbG9yQ29kZSB9ID0gdGhpczsKCiAgICBsZXQgb3V0cHV0ID0gY29sb3JUZXh0LmtleXdvcmRzKGBmb3Ike2Zvcl9pbl9zdGF0ZW1lbnQuYXdhaXQgPyAnIGF3YWl0JyA6ICcnfWApOwoKICAgIG91dHB1dCArPSBjb2xvclRleHQucHVuY3R1YXRvcnMoJygnKSArIGAke2tleX0gJHtjb2xvclRleHQua2V5d29yZHMob3BlcmF0b3IpfSAke29iamVjdH1gICsgY29sb3JUZXh0LnB1bmN0dWF0b3JzKCcpJyk7CgogICAgbGV0IGNvZGUgPSB0aGlzLnByaW50Tm9kZShib2R5KTsKICAgIGlmKGNvZGVbMF0gIT0gJ3snKSBvdXRwdXQgKz0gJ1xuICAnOwogICAgZWxzZSBpZighL1xuLi8udGVzdChjb2RlKSkgb3V0cHV0ICs9ICcgJzsKICAgIGVsc2Ugb3V0cHV0ICs9ICdcbic7CgogICAgb3V0cHV0ICs9IGNvZGU7CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRGb3JPZlN0YXRlbWVudChmb3Jfb2Zfc3RhdGVtZW50KSB7CiAgICByZXR1cm4gdGhpcy5wcmludEZvckluU3RhdGVtZW50KGZvcl9vZl9zdGF0ZW1lbnQsICdvZicpOwogIH0KCiAgcHJpbnRXaXRoU3RhdGVtZW50KHdpdGhfc3RhdGVtZW50KSB7CiAgICBjb25zdCB7IG9iamVjdCwgYm9keSB9ID0gd2l0aF9zdGF0ZW1lbnQ7CgogICAgbGV0IG91dHB1dCA9IHRoaXMuY29sb3JDb2RlLmtleXdvcmRzKCkgKyAnd2l0aCcgKyB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsgJygnICsgdGhpcy5wcmludE5vZGUob2JqZWN0KSArIHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKCkgKyAnKSAnOwogICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGJvZHkpOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50VHJ5U3RhdGVtZW50KHRyeV9zdGF0ZW1lbnQpIHsKICAgIGNvbnN0IHsgYmxvY2ssIGhhbmRsZXIsIGZpbmFsaXplciB9ID0gdHJ5X3N0YXRlbWVudDsKICAgIC8vY29uc29sZS5sb2coJ3ByaW50VHJ5U3RhdGVtZW50JywgeyBibG9jaywgaGFuZGxlciwgZmluYWxpemVyIH0pOwogICAgbGV0IG91dHB1dCA9ICd0cnkgJzsKICAgIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShibG9jayk7CiAgICBpZihoYW5kbGVyKSB7CiAgICAgIGNvbnN0IHsgcGFyYW0sIGJvZHkgfSA9IGhhbmRsZXI7CiAgICAgIGlmKHBhcmFtKSBvdXRwdXQgKz0gYCBjYXRjaChgICsgdGhpcy5wcmludE5vZGUocGFyYW0pICsgJykgJzsKICAgICAgZWxzZSBvdXRwdXQgKz0gJyBjYXRjaCAnOwogICAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoYm9keSk7CiAgICB9CiAgICBpZihmaW5hbGl6ZXIpIHsKICAgICAgb3V0cHV0ICs9IGAgZmluYWxseSBgOwogICAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoZmluYWxpemVyKTsKICAgIH0KICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludEltcG9ydFNwZWNpZmllcihpbXBvcnRfc3BlY2lmaWVyKSB7CiAgICBjb25zdCB7IGxvY2FsLCBpbXBvcnRlZCB9ID0gaW1wb3J0X3NwZWNpZmllcjsKCiAgICBsZXQgZGVjbCA9IHRoaXMucHJpbnROb2RlKGxvY2FsKTsKICAgIGxldCBleHBvcnROYW1lID0gdGhpcy5wcmludE5vZGUoaW1wb3J0ZWQpOwoKICAgIGxldCBzID0gZXhwb3J0TmFtZTsKCiAgICBpZihkZWNsICE9IGV4cG9ydE5hbWUpIHMgKz0gJyBhcyAnICsgZGVjbDsKICAgIHJldHVybiBzOwogIH0KCiAgcHJpbnRJbXBvcnREZWZhdWx0U3BlY2lmaWVyKGltcG9ydF9kZWZhdWx0X3NwZWNpZmllcikgewogICAgY29uc3QgeyBsb2NhbCB9ID0gaW1wb3J0X2RlZmF1bHRfc3BlY2lmaWVyOwoKICAgIGxldCBkZWNsID0gdGhpcy5wcmludE5vZGUobG9jYWwpOwoKICAgIHJldHVybiBkZWNsOwogIH0KCiAgcHJpbnRJbXBvcnROYW1lc3BhY2VTcGVjaWZpZXIoaW1wb3J0X25hbWVzcGFjZV9zcGVjaWZpZXIpIHsKICAgIGNvbnN0IHsgbG9jYWwgfSA9IGltcG9ydF9uYW1lc3BhY2Vfc3BlY2lmaWVyOwogICAgbGV0IGRlY2wgPSB0aGlzLnByaW50Tm9kZShsb2NhbCk7CiAgICBsZXQgcyA9ICcqJzsKICAgIHMgKz0gJyBhcyAnICsgZGVjbDsKICAgIHJldHVybiBzOwogIH0KCiAgcHJpbnRJbXBvcnREZWNsYXJhdGlvbihpbXBvcnRfc3RhdGVtZW50KSB7CiAgICBjb25zdCB7IHNwZWNpZmllcnMsIHNvdXJjZSB9ID0gaW1wb3J0X3N0YXRlbWVudDsKICAgIC8vY29uc29sZS5sb2coJ3ByaW50SW1wb3J0RGVjbGFyYXRpb24nLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDEsIGRlcHRoOiBJbmZpbml0eSB9KSwgeyBzcGVjaWZpZXJzLCBzb3VyY2UgfSk7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvckNvZGUua2V5d29yZHMoKSArICdpbXBvcnQgJzsKCiAgICBjb25zdCBpc0ltcG9ydFNwZWNpZmllciA9IG5vZGUgPT4gVXRpbC5pc09iamVjdChub2RlKSAmJiBub2RlIGluc3RhbmNlb2YgSW1wb3J0U3BlY2lmaWVyOwoKICAgIGxldCBsaXN0ID0gc3BlY2lmaWVycy5yZWR1Y2UoKGFjYywgc3BlYywgaSkgPT4gWy4uLmFjYywgKGlzSW1wb3J0U3BlY2lmaWVyKHNwZWNpZmllcnNbaSAtIDFdKSBeIGlzSW1wb3J0U3BlY2lmaWVyKHNwZWMpID8gJ3sgJyA6ICcnKSArIHRoaXMucHJpbnROb2RlKHNwZWMpICsgKGlzSW1wb3J0U3BlY2lmaWVyKHNwZWNpZmllcnNbaSArIDFdKSBeIGlzSW1wb3J0U3BlY2lmaWVyKHNwZWMpID8gJyB9JyA6ICcnKV0sIFtdKTsKCiAgICBvdXRwdXQgKz0gbGlzdC5qb2luKCcsICcpOwogICAgb3V0cHV0ICs9ICcgZnJvbSAnOwogICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKHNvdXJjZSk7CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRFeHBvcnRTcGVjaWZpZXIoZXhwb3J0X3NwZWNpZmllcikgewogICAgY29uc3QgeyBsb2NhbCwgZXhwb3J0ZWQgfSA9IGV4cG9ydF9zcGVjaWZpZXI7CgogICAgbGV0IGlkID0gdGhpcy5wcmludE5vZGUobG9jYWwpOwogICAgbGV0IG5hbWUgPSB0aGlzLnByaW50Tm9kZShleHBvcnRlZCk7CgogICAgbGV0IHMgPSBpZDsKICAgIGlmKGlkICE9IG5hbWUpIHMgKz0gdGhpcy5jb2xvclRleHQua2V5d29yZHMoJyBhcyAnKSArIG5hbWU7CgogICAgcmV0dXJuIHM7CiAgfQoKICBwcmludEV4cG9ydE5hbWVkRGVjbGFyYXRpb24oZXhwb3J0X25hbWVkX2RlY2xhcmF0aW9uKSB7CiAgICBjb25zdCB7IGRlY2xhcmF0aW9uLCBzcGVjaWZpZXJzLCBzb3VyY2UgfSA9IGV4cG9ydF9uYW1lZF9kZWNsYXJhdGlvbjsKCiAgICAvL2NvbnNvbGUubG9nKCdwcmludEV4cG9ydE5hbWVkRGVjbGFyYXRpb24nLCB7IGRlY2xhcmF0aW9uLCBzcGVjaWZpZXJzLCBzb3VyY2UgfSk7CgogICAgbGV0IG91dHB1dCA9IHRoaXMuY29sb3JDb2RlLmtleXdvcmRzKCkgKyAnZXhwb3J0ICc7CgogICAgaWYoZGVjbGFyYXRpb24pIHsKICAgICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGRlY2xhcmF0aW9uKTsKICAgIH0gZWxzZSB7CiAgICAgIG91dHB1dCArPSAneyAnICsgc3BlY2lmaWVycy5tYXAoc3BlYyA9PiB0aGlzLnByaW50Tm9kZShzcGVjKSkuam9pbih0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsgJywgJykgKyAnIH0nOwoKICAgICAgLy8ucmVwbGFjZSgvOlwgL2csICcgYXMgJyk7CiAgICAgIGlmKHNvdXJjZSkgewogICAgICAgIG91dHB1dCArPSAnIGZyb20gJzsKICAgICAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoc291cmNlKTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBvdXRwdXQ7IC8vLnJlcGxhY2UoL1tcO1xuIF0qJC8sICcnKTsKICB9CgogIHByaW50RXhwb3J0RGVmYXVsdERlY2xhcmF0aW9uKGV4cG9ydF9kZWZhdWx0X2RlY2xhcmF0aW9uKSB7CiAgICBjb25zdCB7IGRlY2xhcmF0aW9uIH0gPSBleHBvcnRfZGVmYXVsdF9kZWNsYXJhdGlvbjsKICAgIC8vY29uc29sZS5sb2coJ3ByaW50RXhwb3J0RGVmYXVsdERlY2xhcmF0aW9uJywgeyBkZWNsYXJhdGlvbiB9KTsKICAgIGxldCBvdXRwdXQgPSB0aGlzLmNvbG9yVGV4dC5rZXl3b3JkcygnZXhwb3J0IGRlZmF1bHQgJyk7CgogICAgb3V0cHV0ICs9IHRoaXMucHJpbnROb2RlKGRlY2xhcmF0aW9uKTsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludFRocm93U3RhdGVtZW50KHRocm93X3N0YXRlbWVudCkgewogICAgbGV0IHsgYXJndW1lbnQgfSA9IHRocm93X3N0YXRlbWVudDsKCiAgICByZXR1cm4gJ3Rocm93ICcgKyB0aGlzLnByaW50Tm9kZShhcmd1bWVudCk7CiAgfQoKICBwcmludFlpZWxkRXhwcmVzc2lvbih5aWVsZF9leHByZXNzaW9uKSB7CiAgICBsZXQgeyBhcmd1bWVudCwgZGVsZWdhdGUgfSA9IHlpZWxkX2V4cHJlc3Npb247CiAgICBsZXQgb3V0cHV0ID0gJ3lpZWxkJzsKCiAgICBpZihkZWxlZ2F0ZSkgb3V0cHV0ICs9ICcqJzsKICAgIG91dHB1dCArPSAnICcgKyB0aGlzLnByaW50Tm9kZShhcmd1bWVudCk7CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRDbGFzc0RlY2xhcmF0aW9uKGNsYXNzX2RlY2xhcmF0aW9uKSB7CiAgICBjb25zdCB7IGlkLCBzdXBlckNsYXNzLCBib2R5IH0gPSBjbGFzc19kZWNsYXJhdGlvbjsKICAgIGNvbnN0IG1lbWJlcnMgPSBib2R5LmJvZHk7CiAgICAvL2NvbnNvbGUubG9nKCdwcmludENsYXNzRGVjbGFyYXRpb24nLCB7IGlkLCBzdXBlckNsYXNzLCBtZW1iZXJzIH0pOwogICAgbGV0IG91dHB1dCA9ICdjbGFzcyc7CiAgICBvdXRwdXQgPSB0aGlzLmNvbG9yVGV4dC5rZXl3b3JkcyhvdXRwdXQpOwoKICAgIGxldCBuYW1lID0gaWQgPyB0aGlzLnByaW50Tm9kZShpZCkgOiAnJzsKICAgIGlmKG5hbWUgIT0gJycpIG91dHB1dCArPSAnICcgKyB0aGlzLmNvbG9yVGV4dC5pZGVudGlmaWVycyhuYW1lKTsKICAgIGlmKHN1cGVyQ2xhc3MpIHsKICAgICAgb3V0cHV0ICs9IHRoaXMuY29sb3JUZXh0LmtleXdvcmRzKCcgZXh0ZW5kcyAnKSArIHRoaXMucHJpbnROb2RlKHN1cGVyQ2xhc3MpOwogICAgfQogICAgb3V0cHV0ICs9ICcgeyc7CiAgICBmb3IobGV0IG1lbWJlciBvZiBtZW1iZXJzKSB7CiAgICAgIGxldCBzID0gdGhpcy5wcmludE5vZGUobWVtYmVyKTsKICAgICAgaWYobWVtYmVyIGluc3RhbmNlb2YgRnVuY3Rpb25EZWNsYXJhdGlvbikgcyA9IHMucmVwbGFjZSgvZnVuY3Rpb25ccy8sICcnKTsKICAgICAgcyA9IHMucmVwbGFjZShsaW5lYnJlYWssICdcbiAgJyk7CiAgICAgIGlmKCFzLmVuZHNXaXRoKCd9JykpIHMgKz0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMocykgKyAnOyc7CiAgICAgIGlmKG91dHB1dC5lbmRzV2l0aCgnfScpIHx8IG1lbWJlciBpbnN0YW5jZW9mIEZ1bmN0aW9uRGVjbGFyYXRpb24pIG91dHB1dCArPSAnXG4nOwogICAgICBvdXRwdXQgKz0gJ1xuICAnICsgczsKICAgIH0KICAgIG91dHB1dCArPSAnXG59JzsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludEZ1bmN0aW9uQm9keShmdW5jdGlvbl9ib2R5KSB7CiAgICByZXR1cm4gdGhpcy5wcmludEJsb2NrU3RhdGVtZW50KGZ1bmN0aW9uX2JvZHkpOwogIH0KCiAgcHJpbnRGdW5jdGlvbkRlY2xhcmF0aW9uKGZ1bmN0aW9uX2RlY2xhcmF0aW9uKSB7CiAgICBjb25zdCB7IGlkLCBwYXJhbXMsIGJvZHksIC8qZXhwb3J0ZWQsKi8gZ2VuZXJhdG9yLCBhc3luYzogaXNfYXN5bmMgfSA9IGZ1bmN0aW9uX2RlY2xhcmF0aW9uOwogICAgbGV0IG91dHB1dCA9IHRoaXMuY29sb3JDb2RlLmtleXdvcmRzKCk7CiAgICAvLyBvdXRwdXQgKz0gZXhwb3J0ZWQgPyAnZXhwb3J0ICcgOiAnJzsKICAgIG91dHB1dCArPSBpc19hc3luYyA/ICdhc3luYyAnIDogJyc7CiAgICBvdXRwdXQgKz0gYGZ1bmN0aW9uIGA7CiAgICBpZihnZW5lcmF0b3IpIG91dHB1dCArPSAnKic7CiAgICBsZXQgbmFtZTsKICAgIGlmKGlkKSB7CiAgICAgIG5hbWUgPSB0aGlzLnByaW50Tm9kZShpZCk7CiAgICAgIGlmKGlkLnR5cGUgIT0gJ0lkZW50aWZpZXInKSBuYW1lID0gJ1snICsgbmFtZSArICddJzsKICAgIH0KICAgIGlmKG5hbWUgIT0gdW5kZWZpbmVkKSBvdXRwdXQgKz0gbmFtZTsKICAgIG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKC8gJC8sICcnKTsKICAgIG91dHB1dCArPSB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycyhvdXRwdXQpICsgJygnICsgKHBhcmFtcy5sZW5ndGggIT09IHVuZGVmaW5lZCA/IFsuLi5wYXJhbXNdLm1hcChwYXJhbSA9PiB0aGlzLnByaW50Tm9kZShwYXJhbSkpLmpvaW4oJywgJykgOiB0aGlzLnByaW50Tm9kZShwYXJhbXMpKTsKICAgIG91dHB1dCArPSB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycyhvdXRwdXQpICsgJykgJzsKICAgIG91dHB1dCArPSB0aGlzLnByaW50QmxvY2tTdGF0ZW1lbnQoYm9keSkgKyAnXG4nOwoKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludEFycm93RnVuY3Rpb25FeHByZXNzaW9uKGFycm93X2Z1bmN0aW9uKSB7CiAgICBjb25zdCB7IGlzX2FzeW5jLCBwYXJhbXMsIGJvZHkgfSA9IGFycm93X2Z1bmN0aW9uOwogICAgbGV0IG91dHB1dCA9IGlzX2FzeW5jID8gJ2FzeW5jICcgOiAnJzsKICAgIG91dHB1dCArPQogICAgICB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsKICAgICAgJygnICsKICAgICAgKHBhcmFtcy5sZW5ndGggIT09IHVuZGVmaW5lZAogICAgICAgID8gQXJyYXkuZnJvbShwYXJhbXMpCiAgICAgICAgICAgIC5tYXAocGFyYW0gPT4gdGhpcy5wcmludE5vZGUocGFyYW0pKQogICAgICAgICAgICAuam9pbignLCAnKQogICAgICAgIDogdGhpcy5wcmludE5vZGUocGFyYW1zKSkgKwogICAgICB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsKICAgICAgJyknOwogICAgb3V0cHV0ICs9ICcgPT4gJzsKICAgIGxldCBjb2RlOwogICAgewogICAgICBjb2RlID0gdGhpcy5wcmludE5vZGUoYm9keSk7CiAgICAgIGlmKFV0aWwuY2xhc3NOYW1lKGJvZHkpLnN0YXJ0c1dpdGgoJ09iamVjdCcpKSBjb2RlID0gJygnICsgY29kZSArICcpJzsKICAgIH0KICAgIG91dHB1dCArPSBjb2RlOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50VmFyaWFibGVEZWNsYXJhdGlvbih2YXJpYWJsZV9kZWNsYXJhdGlvbikgewogICAgY29uc3QgeyBraW5kLCBleHBvcnRlZCwgZGVjbGFyYXRpb25zIH0gPSB2YXJpYWJsZV9kZWNsYXJhdGlvbjsKICAgIGxldCBvdXRwdXQgPSBleHBvcnRlZCA/ICdleHBvcnQgJyA6ICcnOwoKICAgIG91dHB1dCArPSBraW5kICE9ICcnID8gdGhpcy5jb2xvclRleHQua2V5d29yZHMoa2luZCkgKyAnICcgOiAnJzsKICAgIG91dHB1dCArPSBkZWNsYXJhdGlvbnMubWFwKGRlY2wgPT4gdGhpcy5wcmludE5vZGUoZGVjbCkpLmpvaW4oJywgJyk7CiAgICBvdXRwdXQgKz0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMob3V0cHV0KSArICc7JzsKICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludFZhcmlhYmxlRGVjbGFyYXRvcih2YXJpYWJsZV9kZWNsYXJhdG9yKSB7CiAgICBjb25zdCB7IGlkLCBpbml0IH0gPSB2YXJpYWJsZV9kZWNsYXJhdG9yOwogICAgbGV0IG91dHB1dCA9IHRoaXMucHJpbnROb2RlKGlkKTsKICAgIGlmKGluaXQpIHsKICAgICAgb3V0cHV0ICs9ICcgJyArIHRoaXMuY29sb3JUZXh0LnB1bmN0dWF0b3JzKCc9JykgKyBgICR7dGhpcy5wcmludE5vZGUoaW5pdCl9YDsKICAgIH0KICAgIHJldHVybiBvdXRwdXQ7CiAgfQoKICBwcmludE9iamVjdEV4cHJlc3Npb24ob2JqZWN0X2xpdGVyYWwpIHsKICAgIGNvbnN0IHsgcHJvcGVydGllcyB9ID0gb2JqZWN0X2xpdGVyYWw7CiAgICBsZXQgb3V0cHV0ID0gJyc7CiAgICBsZXQgYSA9IFtdOwogICAgbGV0IGlzX211bHRpbGluZSA9IGZhbHNlLAogICAgICBpc19wcm90b3R5cGUgPSB0cnVlOwogICAgaWYocHJvcGVydGllcy5sZW5ndGggPT0gMCkgcmV0dXJuIHRoaXMuY29sb3JUZXh0LnB1bmN0dWF0b3JzKCd7fScpOwogICAgZm9yKGxldCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7CiAgICAgIGxldCBsaW5lID0gJyc7CgogICAgICBsZXQgbmFtZSwgdmFsdWU7CiAgICAgIGxldCBpc0Z1bmN0aW9uID0gZmFsc2U7CgogICAgICBpZihwcm9wZXJ0eSBpbnN0YW5jZW9mIEZ1bmN0aW9uRGVjbGFyYXRpb24pIHsKICAgICAgICAvL25hbWUgPSAgdGhpcy5wcmludE5vZGUocHJvcGVydHkuaWQpOwogICAgICAgIHZhbHVlID0gdGhpcy5wcmludE5vZGUocHJvcGVydHkpLnJlcGxhY2UoL2Z1bmN0aW9uIC8sICcnKTsKICAgICAgICBpc0Z1bmN0aW9uID0gdHJ1ZTsKICAgICAgfSBlbHNlIGlmKHByb3BlcnR5IGluc3RhbmNlb2YgUHJvcGVydHkgfHwgIXByb3BlcnR5LmtleSkgewogICAgICAgIHZhbHVlID0gdGhpcy5wcmludE5vZGUocHJvcGVydHkpOwogICAgICAgIC8vY29uc29sZS5kZWJ1ZygncHJpbnRPYmplY3RMaXRlcmFsOicsIHsgdmFsdWUgfSk7CiAgICAgICAgYS5wdXNoKHZhbHVlKTsKICAgICAgICBjb250aW51ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBuYW1lID0gdGhpcy5wcmludE5vZGUocHJvcGVydHkua2V5KTsKICAgICAgICB2YWx1ZSA9IHRoaXMucHJpbnROb2RlKHByb3BlcnR5LnZhbHVlKTsKICAgICAgfQoKICAgICAgaWYocHJvcGVydHkudmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbkRlY2xhcmF0aW9uKSB7CiAgICAgICAgLy9jb25zb2xlLmxvZygiZnVuY3Rpb24uaWQ6IiwgcHJvcGVydHkudmFsdWUuaWQpOwogICAgICAgIGxldCBmdW5jdGlvbk5hbWUgPSBwcm9wZXJ0eS52YWx1ZS5pZCA/IHRoaXMucHJpbnROb2RlKHByb3BlcnR5LnZhbHVlLmlkKSA6ICcnOwogICAgICAgIGlmKGZ1bmN0aW9uTmFtZSAhPSAnJykgewogICAgICAgICAgbmFtZSA9IGZ1bmN0aW9uTmFtZTsKICAgICAgICAgIC8vIGRlbGV0ZSBwcm9wZXJ0eS5rZXk7CiAgICAgICAgfSBlbHNlIGlmKGZ1bmN0aW9uTmFtZSkgewogICAgICAgICAgbmFtZSA9ICcnOwogICAgICAgIH0KICAgICAgICB2YWx1ZSA9IHRoaXMucHJpbnROb2RlKHByb3BlcnR5LnZhbHVlKTsKICAgICAgICBpZigvZnVuY3Rpb25ccy8udGVzdCh2YWx1ZSkpIHsKICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvZnVuY3Rpb25ccy8sICcnKTsKICAgICAgICAgIGlzRnVuY3Rpb24gPSB0cnVlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgbGluZSArPSB2YWx1ZS5yZXBsYWNlKGxpbmVicmVhaywgJ1xuICAnKTsKCiAgICAgIGlmKHByb3BlcnR5LmZsYWdzICYmICEocHJvcGVydHkgaW5zdGFuY2VvZiBCaW5kaW5nUHJvcGVydHkpICYmICEob2JqZWN0X2xpdGVyYWwgaW5zdGFuY2VvZiBPYmplY3RQYXR0ZXJuKSkgewogICAgICAgIGxpbmUgPSBuYW1lICsgJyA9ICcgKyBsaW5lOwogICAgICB9IGVsc2UgaWYobmFtZSAmJiBuYW1lICE9IGxpbmUpIHsKICAgICAgICBsaW5lID0gbmFtZSArICc6ICcgKyBsaW5lOwogICAgICAgIGlmKCFwcm9wZXJ0eS5mbGFncykgaXNfcHJvdG90eXBlID0gZmFsc2U7CiAgICAgIH0KICAgICAgaWYocHJvcGVydHkuZmxhZ3MgJiBQcm9wZXJ0eS5TVEFUSUMpIGxpbmUgPSAnc3RhdGljICcgKyBsaW5lOwogICAgICBsaW5lICs9IHByb3BlcnR5LmZsYWdzID8gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICc7JyA6ICcnOwogICAgICBpZigvXG4vLnRlc3QobGluZSkpIGxpbmUgPSAnXG4gICcgKyBsaW5lOwogICAgICBhLnB1c2gobGluZSk7CiAgICAgIGlmKCFpc19tdWx0aWxpbmUgJiYgL1xuLy50ZXN0KGxpbmUpKSBpc19tdWx0aWxpbmUgfD0gdHJ1ZTsKICAgIH0KCiAgICBpZihpc19tdWx0aWxpbmUpIHJldHVybiBge1xuICAke2Euam9pbihpc19wcm90b3R5cGUgPyAnXG4gICcgOiAnLFxuICAnKX1cbn1gOwoKICAgIG91dHB1dCArPSB0aGlzLmNvbG9yQ29kZS5wdW5jdHVhdG9ycygpICsgJ3sgJzsKICAgIG91dHB1dCArPSBhLmpvaW4odGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICcsICcpOwogICAgb3V0cHV0ICs9IHRoaXMuY29sb3JDb2RlLnB1bmN0dWF0b3JzKG91dHB1dCkgKyAnIH0nOwogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50UHJvcGVydHkocHJvcGVydHlfZGVmaW5pdGlvbikgewogICAgLy9jb25zb2xlLmRlYnVnKCdwcmludFByb3BlcnR5JywgcHJvcGVydHlfZGVmaW5pdGlvbiwgRVNOb2RlLmFzc29jKHByb3BlcnR5X2RlZmluaXRpb24pKTsKICAgIGNvbnN0IHsga2V5LCB2YWx1ZSwga2luZCwgc2hvcnRoYW5kIH0gPSBwcm9wZXJ0eV9kZWZpbml0aW9uOwogICAgbGV0IGNvbW1lbnRzID0gcHJvcGVydHlfZGVmaW5pdGlvbi5jb21tZW50cyB8fCAoa2V5ICYmIGtleS5jb21tZW50cyk7CiAgICBsZXQgcHJlZml4ID0gJyc7CiAgICBsZXQgcyA9IFsnaW5pdCcsICdtZXRob2QnXS5pbmRleE9mKGtpbmQpICE9IC0xID8gJycgOiB0aGlzLmNvbG9yVGV4dC5rZXl3b3JkcyhraW5kKSArICcgJzsKICAgIGlmKGNvbW1lbnRzKSBzID0gdGhpcy5wcmludENvbW1lbnRzKGNvbW1lbnRzKSArIHM7CiAgICBsZXQgbmFtZSA9IGtleSA/IHRoaXMucHJpbnROb2RlKGtleSkgOiAnJzsKICAgIGxldCBwcm9wLAogICAgICBpc0Z1bmN0aW9uID0gZmFsc2U7CiAgICBwcm9wID0gdmFsdWUgPyB0aGlzLnByaW50Tm9kZSh2YWx1ZSkgOiAnJzsKICAgIC8vY29uc29sZS5sb2coJ3ByaW50UHJvcGVydHknLCB7IHZhbHVlLCBwcm9wIH0pOwogICAgaWYodmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbkRlY2xhcmF0aW9uKQogICAgICBpZigvZnVuY3Rpb25bXHNcKF0vLnRlc3QocHJvcCkpIHsKICAgICAgICBwcm9wID0gcHJvcC5yZXBsYWNlKC9mdW5jdGlvblxzKi8sICcnKTsKICAgICAgICBpc0Z1bmN0aW9uID0gdHJ1ZTsKICAgICAgfQogICAgaWYocHJvcC5zdGFydHNXaXRoKCcqJykpIHsKICAgICAgcHJlZml4ID0gJyonOwogICAgICBwcm9wID0gcHJvcC5zdWJzdHJpbmcoMSk7CiAgICB9CiAgICAvLyBjb25zb2xlLmxvZygncHJpbnRQcm9wZXJ0eScsIHsga2V5LCBwcm9wLCBpc0Z1bmN0aW9uLCBzaG9ydGhhbmQgfSk7CiAgICBpZihrZXkgJiYgKCEoa2V5IGluc3RhbmNlb2YgSWRlbnRpZmllcikgfHwga2V5Py50eXBlICE9ICdJZGVudGlmaWVyJykpIG5hbWUgPSAnWycgKyBuYW1lICsgJ10nOwoKICAgIGlmKCFpc0Z1bmN0aW9uKSBzICs9IG5hbWU7CgogICAgaWYodmFsdWUudHlwZSA9PSAnQXNzaWdubWVudFBhdHRlcm4nKSB7CiAgICAgIHByb3AgPSBwcm9wLnJlcGxhY2UobmFtZSwgJycpOwogICAgICBzICs9IHByb3A7CiAgICB9IGVsc2UgaWYoIShzaG9ydGhhbmQgfHwgbmFtZSA9PSBwcm9wKSkgewogICAgICBpZihuYW1lICE9ICcnICYmIHMgIT0gJycpIHMgKz0gdGhpcy5jb2xvclRleHQucHVuY3R1YXRvcnMoJzogJyk7CiAgICAgIHMgKz0gcHJvcDsKICAgIH0KICAgIGlmKHByZWZpeCkgcyA9IHByZWZpeCArIHM7CiAgICAvL2NvbnNvbGUubG9nKCdwcmludFByb3BlcnR5Jywge3N9KTsKICAgIHJldHVybiBzOwogIH0KCiAgcHJpbnRBc3NpZ25tZW50UHJvcGVydHkoYXNzaWdubWVudF9wcm9wZXJ0eSkgewogICAgcmV0dXJuIHRoaXMucHJpbnRQcm9wZXJ0eShhc3NpZ25tZW50X3Byb3BlcnR5KTsKICB9CgogIHByaW50QXNzaWdubWVudFBhdHRlcm4oYXNzaWdubWVudF9wYXR0ZXJuKSB7CiAgICBjb25zdCB7IGxlZnQsIHJpZ2h0IH0gPSBhc3NpZ25tZW50X3BhdHRlcm47CgogICAgcmV0dXJuIHRoaXMucHJpbnROb2RlKGxlZnQpICsgdGhpcy5jb2xvclRleHQucHVuY3R1YXRvcnMoJyA9ICcpICsgdGhpcy5wcmludE5vZGUocmlnaHQpOwogIH0KCiAgcHJpbnRNZXRob2REZWZpbml0aW9uKG1ldGhvZF9kZWZpbml0aW9uKSB7CiAgICBjb25zdCB7IGtleSwgdmFsdWUsIGtpbmQsIGNvbXB1dGVkIH0gPSBtZXRob2RfZGVmaW5pdGlvbjsKICAgIGxldCBjb21tZW50cyA9IG1ldGhvZF9kZWZpbml0aW9uLmNvbW1lbnRzIHx8IChrZXkgJiYga2V5LmNvbW1lbnRzKTsKICAgIGxldCBzID0gJyc7CgogICAgaWYobWV0aG9kX2RlZmluaXRpb24uc3RhdGljKSBzID0gJ3N0YXRpYyAnICsgczsKICAgIGlmKGtpbmQgIT0gJ21ldGhvZCcgJiYga2luZCAhPSAnY29uc3RydWN0b3InKSBzICs9IGtpbmQgKyAnICc7CiAgICBpZihzICE9ICcnKSBzID0gdGhpcy5jb2xvclRleHQua2V5d29yZHMocyk7CiAgICBpZihjb21tZW50cykgewogICAgICBzID0gdGhpcy5wcmludENvbW1lbnRzKGNvbW1lbnRzKSArIHM7CiAgICB9CiAgICBzICs9IGtpbmQgPT0gJ2NvbnN0cnVjdG9yJyA/IGtpbmQgOiB0aGlzLnByaW50Tm9kZShrZXkpOwogICAgbGV0IGZuID0gdGhpcy5wcmludE5vZGUodmFsdWUpOwoKICAgIGlmKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb25MaXRlcmFsKSBzICs9IGZuLnN1YnN0cmluZyhmbi5pbmRleE9mKCcoJykpOwogICAgZWxzZSBzICs9ICcgPSAnICsgZm47CiAgICByZXR1cm4gczsKICB9CgogIHByaW50QXJyYXlFeHByZXNzaW9uKGFycmF5X2xpdGVyYWwpIHsKICAgIGNvbnN0IHsgZWxlbWVudHMgfSA9IGFycmF5X2xpdGVyYWw7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICdbICc7CgogICAgb3V0cHV0ICs9IGVsZW1lbnRzLm1hcChlbGVtID0+IChlbGVtID09PSBudWxsID8gJycgOiB0aGlzLnByaW50Tm9kZShlbGVtKSkpLmpvaW4oJywgJyk7CiAgICBvdXRwdXQgKz0gdGhpcy5jb2xvckNvZGUucHVuY3R1YXRvcnMob3V0cHV0KSArICcgXSc7CgogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50SlNYTGl0ZXJhbChqc3hfbGl0ZXJhbCkgewogICAgY29uc3QgeyB0YWcsIGF0dHJpYnV0ZXMsIGNsb3NpbmcsIHNlbGZDbG9zaW5nLCBjaGlsZHJlbiB9ID0ganN4X2xpdGVyYWw7CiAgICBsZXQgb3V0cHV0ID0gdGhpcy5mb3JtYXQgPyBgaCgke3RhZ1swXS50b1VwcGVyQ2FzZSgpID09IHRhZ1swXSA/IHRhZyA6ICInIiArIHRhZyArICInIn0sIHtgIDogYDwke2Nsb3NpbmcgPyAnLycgOiAnJ30ke3RhZ31gOwogICAgbGV0IGkgPSAwOwoKICAgIGZvcihsZXQgYXR0ciBpbiBhdHRyaWJ1dGVzKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlc1thdHRyXTsKCiAgICAgIGlmKHRoaXMuZm9ybWF0KSBvdXRwdXQgKz0gaSA+IDAgPyAnLFxuICAgJyA6ICdcbiAgICc7CgogICAgICBvdXRwdXQgKz0gYCAke2F0dHJ9YDsKCiAgICAgIGlmKCEodmFsdWUgaW5zdGFuY2VvZiBMaXRlcmFsICYmIHZhbHVlLnZhbHVlID09PSB0cnVlKSAmJiAhKHZhbHVlLnZhbHVlID09IGF0dHIgJiYgdGhpcy5mb3JtYXQpKSB7CiAgICAgICAgb3V0cHV0ICs9IHRoaXMuZm9ybWF0ID8gYDogYCA6IGA9YDsKICAgICAgICBpZih2YWx1ZSBpbnN0YW5jZW9mIExpdGVyYWwpIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZSh2YWx1ZSk7CiAgICAgICAgZWxzZSBvdXRwdXQgKz0gdGhpcy5mb3JtYXQgPyB0aGlzLnByaW50Tm9kZSh2YWx1ZSkgOiBgeyR7dGhpcy5wcmludE5vZGUodmFsdWUpfX1gOwogICAgICB9CiAgICAgIGkrKzsKICAgIH0KICAgIG91dHB1dCArPSB0aGlzLmZvcm1hdCA/IGBcbiAgfSwgW2AgOiBzZWxmQ2xvc2luZyA/ICcgLz4nIDogJz4nOwoKICAgIGlmKGNoaWxkcmVuIGluc3RhbmNlb2YgQXJyYXkgJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkgewogICAgICBpZihjaGlsZHJlbi5sZW5ndGggPT0gMSkgewogICAgICAgIGlmKGNoaWxkcmVuWzBdIGluc3RhbmNlb2YgTGl0ZXJhbCkgb3V0cHV0ICs9IGNoaWxkcmVuWzBdLnZhbHVlLnJlcGxhY2UoL1xcbi9nLCAnXG4nKTsKICAgICAgICBlbHNlIG91dHB1dCArPSB0aGlzLnByaW50Tm9kZShjaGlsZHJlblswXSk7CiAgICAgIH0gZWxzZSBvdXRwdXQgKz0gYFxuICAgIGAgKyBjaGlsZHJlbi5tYXAoY2hpbGQgPT4gdGhpcy5wcmludE5vZGUoY2hpbGQpLnJlcGxhY2UobGluZWJyZWFrLCAnXG4gICAgJykpLmpvaW4odGhpcy5mb3JtYXQgPyAnLFxuICAgICcgOiAnXG4gICAgJykgKyBgXG4gIGA7CgogICAgICBpZighdGhpcy5mb3JtYXQpIG91dHB1dCArPSBgPC8ke3RhZ30+YDsKICAgIH0KCiAgICBpZih0aGlzLmZvcm1hdCkgb3V0cHV0ICs9IGBdKWA7CgogICAgcmV0dXJuIG91dHB1dDsKICB9CgogIHByaW50QXJyYXlQYXR0ZXJuKGFycmF5X2JpbmRpbmdfcGF0dGVybikgewogICAgY29uc3QgeyBlbGVtZW50cyB9ID0gYXJyYXlfYmluZGluZ19wYXR0ZXJuOwogICAgY29uc3QgeyBjb2xvclRleHQsIGNvbG9yQ29kZSB9ID0gdGhpczsKCiAgICAvL2NvbnNvbGUubG9nKCdwcmludEFycmF5UGF0dGVybicsIHsgZWxlbWVudHMgfSk7CiAgICBsZXQgb3V0cHV0ID0gZWxlbWVudHMubWFwKGVsZW1lbnQgPT4gKGVsZW1lbnQgPyB0aGlzLnByaW50Tm9kZShlbGVtZW50KSA6ICcnKSkuam9pbihjb2xvckNvZGUucHVuY3R1YXRvcnMoKSArICcsICcpOwoKICAgIC8gYmxhaCAvOwoKICAgIHJldHVybiBjb2xvckNvZGUucHVuY3R1YXRvcnMoKSArIGBbICR7b3V0cHV0fSAke2NvbG9yQ29kZS5wdW5jdHVhdG9ycygpfV1gOwogIH0KCiAgcHJpbnRPYmplY3RQYXR0ZXJuKG9iamVjdF9iaW5kaW5nX3BhdHRlcm4pIHsKICAgIGNvbnN0IHsgdmFsdWUsIHByb3BlcnRpZXMgfSA9IG9iamVjdF9iaW5kaW5nX3BhdHRlcm47CiAgICAvL2NvbnNvbGUubG9nKCdwcmludE9iamVjdFBhdHRlcm46JywgeyB2YWx1ZSwgcHJvcGVydGllcyB9KTsKCiAgICBsZXQgb3V0cHV0ID0gJyc7CiAgICBmb3IobGV0IGJpbmRpbmdfcHJvcGVydHkgb2YgcHJvcGVydGllcykgewogICAgICBpZihvdXRwdXQgIT0gJycpIG91dHB1dCArPSAnLCAnOwogICAgICBvdXRwdXQgKz0gdGhpcy5wcmludE5vZGUoYmluZGluZ19wcm9wZXJ0eSk7CiAgICAgIC8vY29uc29sZS5sb2coJ3ByaW50T2JqZWN0UGF0dGVybjonLCB7IGJpbmRpbmdfcHJvcGVydHksIG91dHB1dH0pOwogICAgfQogICAgaWYoL1xuLy50ZXN0KG91dHB1dCkpIHJldHVybiB0aGlzLmNvbG9yVGV4dC5wdW5jdHVhdG9ycygneycpICsgYFxuICAke291dHB1dC5yZXBsYWNlKGxpbmVicmVhaywgJ1xuICAnKX1cbmAgKyB0aGlzLmNvbG9yVGV4dC5wdW5jdHVhdG9ycygnfScpOwogICAgcmV0dXJuIHRoaXMuY29sb3JUZXh0LnB1bmN0dWF0b3JzKCd7JykgKyBgICR7b3V0cHV0fSBgICsgdGhpcy5jb2xvclRleHQucHVuY3R1YXRvcnMoJ30nKTsKICB9CgogIHByaW50Q29tbWVudHMoY29tbWVudHMpIHsKICAgIGxldCBvdXRwdXQgPSAnJzsKICAgIGZvcihsZXQgY29tbWVudCBvZiBjb21tZW50cykgewogICAgICBvdXRwdXQgKz0gdGhpcy5jb2xvckNvZGUuY29tbWVudHMob3V0cHV0KSArIGNvbW1lbnQudmFsdWU7CiAgICB9CiAgICByZXR1cm4gb3V0cHV0OwogIH0KCiAgcHJpbnRBd2FpdEV4cHJlc3Npb24oYXdhaXRfZXhwcmVzc2lvbikgewogICAgY29uc3QgeyBhcmd1bWVudCB9ID0gYXdhaXRfZXhwcmVzc2lvbjsKICAgIHJldHVybiB0aGlzLmNvbG9yVGV4dC5rZXl3b3JkcygnYXdhaXQnKSArIGAgJHt0aGlzLnByaW50Tm9kZShhcmd1bWVudCl9YDsKICB9CgogIHByaW50UmVzdEVsZW1lbnQocmVzdF9lbGVtZW50KSB7CiAgICBjb25zdCB7IGFyZ3VtZW50IH0gPSByZXN0X2VsZW1lbnQ7CiAgICByZXR1cm4gYC4uLiR7dGhpcy5wcmludE5vZGUoYXJndW1lbnQpfWA7CiAgfQoKICBwcmludE1ldGFQcm9wZXJ0eShtZXRhX3Byb3BlcnR5KSB7CiAgICBjb25zdCB7IG1ldGEsIGlkZW50aWZpZXIgfSA9IG1ldGFfcHJvcGVydHk7CgogICAgcmV0dXJuIHRoaXMucHJpbnROb2RlKG1ldGEpICsgJy4nICsgdGhpcy5wcmludE5vZGUoaWRlbnRpZmllcik7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCBQcmludGVyOwoAAAAAAAAAAL99AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJRpAAAAAAAAlWkAAAAAAAAAAAAAlWkAAAAAAACVaQAAAAAAAAQAAAAgIC8v",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJhpAAAAAAAAlGkAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL9pAAAAAAAAwGkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL9pAAAAAAAAv2kAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAMBpAAAAAAAAwWkAAAAAAAAAAAAAwWkAAAAAAADCaQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMBpAAAAAAAAwGkAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "name,"
					},
					"BQAAALtpAAAAAAAAvGkAAAAAAAAAAAAAvGkAAAAAAAC9aQAAAAAAAAAAAAC9aQAAAAAAAL5pAAAAAAAAAAAAAL5pAAAAAAAAv2kAAAAAAAAAAAAAv2kAAAAAAADAaQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALtpAAAAAAAAu2kAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMBpAAAAAAAAwWkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMBpAAAAAAAAwGkAAAAAAAAAAAAAAADwvw"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "sgho"
					},
					"BAAAAMZpAAAAAAAAx2kAAAAAAAAAAAAAx2kAAAAAAADIaQAAAAAAAAAAAADIaQAAAAAAAMlpAAAAAAAAAAAAAMlpAAAAAAAAymkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMZpAAAAAAAAxmkAAAAAAAAAAAAAAADwvw"
				],
				[
					232,
					3,
					"left_delete",
					null,
					"AwAAAMlpAAAAAAAAyWkAAAAAAAABAAAAb8hpAAAAAAAAyGkAAAAAAAABAAAAaMdpAAAAAAAAx2kAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMppAAAAAAAAymkAAAAAAAAAAAAAAADwvw"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "horthand,"
					},
					"CQAAAMdpAAAAAAAAyGkAAAAAAAAAAAAAyGkAAAAAAADJaQAAAAAAAAAAAADJaQAAAAAAAMppAAAAAAAAAAAAAMppAAAAAAAAy2kAAAAAAAAAAAAAy2kAAAAAAADMaQAAAAAAAAAAAADMaQAAAAAAAM1pAAAAAAAAAAAAAM1pAAAAAAAAzmkAAAAAAAAAAAAAzmkAAAAAAADPaQAAAAAAAAAAAADPaQAAAAAAANBpAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMdpAAAAAAAAx2kAAAAAAAAAAAAAAADwvw"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAJFpAAAAAAAAkmkAAAAAAAAAAAAAkmkAAAAAAACWaQAAAAAAAAAAAACWaQAAAAAAAJdpAAAAAAAAAAAAAJdpAAAAAAAAmGkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJFpAAAAAAAAkWkAAAAAAAAAAAAAAGCDQA"
				],
				[
					242,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJhpAAAAAAAAmmkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJhpAAAAAAAAmGkAAAAAAAAAAAAAAADwvw"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": "kind"
					},
					"BAAAAJlpAAAAAAAAmmkAAAAAAAAAAAAAmmkAAAAAAACbaQAAAAAAAAAAAACbaQAAAAAAAJxpAAAAAAAAAAAAAJxpAAAAAAAAnWkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJlpAAAAAAAAmWkAAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJ1pAAAAAAAAnmkAAAAAAAAAAAAAnmkAAAAAAACfaQAAAAAAAAAAAACfaQAAAAAAAKBpAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ1pAAAAAAAAnWkAAAAAAAAAAAAAAADwvw"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKBpAAAAAAAAoWkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKBpAAAAAAAAoGkAAAAAAAAAAAAAAADwvw"
				],
				[
					246,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKFpAAAAAAAAo2kAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKFpAAAAAAAAoWkAAAAAAAAAAAAAAADwvw"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAKJpAAAAAAAAo2kAAAAAAAAAAAAAo2kAAAAAAACkaQAAAAAAAAAAAACkaQAAAAAAAKVpAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKJpAAAAAAAAomkAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAGxsAAAAAAAAbWwAAAAAAAAAAAAAbWwAAAAAAABubAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGxsAAAAAAAAbGwAAAAAAAAAAAAAAADwvw"
				],
				[
					296,
					1,
					"left_delete",
					null,
					"AQAAAG1sAAAAAAAAbWwAAAAAAAABAAAAJg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG5sAAAAAAAAbmwAAAAAAAAAAAAAAADwvw"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAG1sAAAAAAAAbmwAAAAAAAAAAAAAbmwAAAAAAABvbAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG1sAAAAAAAAbWwAAAAAAAAAAAAAAADwvw"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG9sAAAAAAAAcGwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9sAAAAAAAAb2wAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					3,
					"left_delete",
					null,
					"AwAAAG9sAAAAAAAAb2wAAAAAAAABAAAAIG5sAAAAAAAAbmwAAAAAAAABAAAAL21sAAAAAAAAbWwAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHBsAAAAAAAAcGwAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAG1sAAAAAAAAbmwAAAAAAAAAAAAAbmwAAAAAAABvbAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG1sAAAAAAAAbWwAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": " !isFunction"
					},
					"DAAAAG9sAAAAAAAAcGwAAAAAAAAAAAAAcGwAAAAAAABxbAAAAAAAAAAAAABxbAAAAAAAAHJsAAAAAAAAAAAAAHJsAAAAAAAAc2wAAAAAAAAAAAAAc2wAAAAAAAB0bAAAAAAAAAAAAAB0bAAAAAAAAHVsAAAAAAAAAAAAAHVsAAAAAAAAdmwAAAAAAAAAAAAAdmwAAAAAAAB3bAAAAAAAAAAAAAB3bAAAAAAAAHhsAAAAAAAAAAAAAHhsAAAAAAAAeWwAAAAAAAAAAAAAeWwAAAAAAAB6bAAAAAAAAAAAAAB6bAAAAAAAAHtsAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9sAAAAAAAAb2wAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHtsAAAAAAAAe2wAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 10381,
				"line_ending": "Unix"
			}
		},
		{
			"file": "diagram.js",
			"settings":
			{
				"buffer_size": 5129,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8480,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOsOAAAAAAAA7A4AAAAAAAAAAAAA7A4AAAAAAADuDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsOAAAAAAAA6w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8482,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOsOAAAAAAAA7A4AAAAAAAAAAAAA7A4AAAAAAADtDgAAAAAAAAAAAADtDgAAAAAAAO4OAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsOAAAAAAAA6w4AAAAAAAAAAAAAAAA0QA"
				],
				[
					8483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4OAAAAAAAA7w4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4OAAAAAAAA7g4AAAAAAAAAAAAAAADwvw"
				],
				[
					8484,
					4,
					"left_delete",
					null,
					"BAAAAO4OAAAAAAAA7g4AAAAAAAABAAAAIO0OAAAAAAAA7Q4AAAAAAAABAAAAdOwOAAAAAAAA7A4AAAAAAAABAAAAZesOAAAAAAAA6w4AAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8OAAAAAAAA7w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8489,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOsOAAAAAAAA7A4AAAAAAAAAAAAA7A4AAAAAAADtDgAAAAAAAAAAAADtDgAAAAAAAO4OAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsOAAAAAAAA6w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8490,
					1,
					"insert",
					{
						"characters": " ctor"
					},
					"BQAAAO4OAAAAAAAA7w4AAAAAAAAAAAAA7w4AAAAAAADwDgAAAAAAAAAAAADwDgAAAAAAAPEOAAAAAAAAAAAAAPEOAAAAAAAA8g4AAAAAAAAAAAAA8g4AAAAAAADzDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4OAAAAAAAA7g4AAAAAAAAAAAAAAADwvw"
				],
				[
					8491,
					1,
					"insert",
					{
						"characters": " )="
					},
					"AwAAAPMOAAAAAAAA9A4AAAAAAAAAAAAA9A4AAAAAAAD1DgAAAAAAAAAAAAD1DgAAAAAAAPYOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMOAAAAAAAA8w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8492,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPYOAAAAAAAA9w4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYOAAAAAAAA9g4AAAAAAAAAAAAAAADwvw"
				],
				[
					8493,
					3,
					"left_delete",
					null,
					"AwAAAPYOAAAAAAAA9g4AAAAAAAABAAAAIPUOAAAAAAAA9Q4AAAAAAAABAAAAPfQOAAAAAAAA9A4AAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcOAAAAAAAA9w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8494,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPQOAAAAAAAA9Q4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQOAAAAAAAA9A4AAAAAAAAAAAAAAADwvw"
				],
				[
					8495,
					1,
					"insert",
					{
						"characters": " geometry.s"
					},
					"CwAAAPUOAAAAAAAA9g4AAAAAAAAAAAAA9g4AAAAAAAD3DgAAAAAAAAAAAAD3DgAAAAAAAPgOAAAAAAAAAAAAAPgOAAAAAAAA+Q4AAAAAAAAAAAAA+Q4AAAAAAAD6DgAAAAAAAAAAAAD6DgAAAAAAAPsOAAAAAAAAAAAAAPsOAAAAAAAA/A4AAAAAAAAAAAAA/A4AAAAAAAD9DgAAAAAAAAAAAAD9DgAAAAAAAP4OAAAAAAAAAAAAAP4OAAAAAAAA/w4AAAAAAAAAAAAA/w4AAAAAAAAADwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUOAAAAAAAA9Q4AAAAAAAAAAAAAAADwvw"
				],
				[
					8496,
					1,
					"left_delete",
					null,
					"AQAAAP8OAAAAAAAA/w4AAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAADwvw"
				],
				[
					8497,
					1,
					"insert",
					{
						"characters": "costru"
					},
					"BgAAAP8OAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAABDwAAAAAAAAAAAAABDwAAAAAAAAIPAAAAAAAAAAAAAAIPAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAAEDwAAAAAAAAAAAAAEDwAAAAAAAAUPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8OAAAAAAAA/w4AAAAAAAAAAAAAAADwvw"
				],
				[
					8498,
					4,
					"left_delete",
					null,
					"BAAAAAQPAAAAAAAABA8AAAAAAAABAAAAdQMPAAAAAAAAAw8AAAAAAAABAAAAcgIPAAAAAAAAAg8AAAAAAAABAAAAdAEPAAAAAAAAAQ8AAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUPAAAAAAAABQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					8499,
					1,
					"insert",
					{
						"characters": "nstructor;"
					},
					"CgAAAAEPAAAAAAAAAg8AAAAAAAAAAAAAAg8AAAAAAAADDwAAAAAAAAAAAAADDwAAAAAAAAQPAAAAAAAAAAAAAAQPAAAAAAAABQ8AAAAAAAAAAAAABQ8AAAAAAAAGDwAAAAAAAAAAAAAGDwAAAAAAAAcPAAAAAAAAAAAAAAcPAAAAAAAACA8AAAAAAAAAAAAACA8AAAAAAAAJDwAAAAAAAAAAAAAJDwAAAAAAAAoPAAAAAAAAAAAAAAoPAAAAAAAACw8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEPAAAAAAAAAQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					8500,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAAsPAAAAAAAADA8AAAAAAAAAAAAADA8AAAAAAAAODwAAAAAAAAAAAAAODwAAAAAAAA8PAAAAAAAAAAAAAA8PAAAAAAAAEA8AAAAAAAAAAAAAEA8AAAAAAAARDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsPAAAAAAAACw8AAAAAAAAAAAAAAADwvw"
				],
				[
					8501,
					3,
					"left_delete",
					null,
					"AwAAABAPAAAAAAAAEA8AAAAAAAABAAAAdA8PAAAAAAAADw8AAAAAAAABAAAAZQ4PAAAAAAAADg8AAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEPAAAAAAAAEQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					8502,
					1,
					"insert",
					{
						"characters": "geometry"
					},
					"CAAAAA4PAAAAAAAADw8AAAAAAAAAAAAADw8AAAAAAAAQDwAAAAAAAAAAAAAQDwAAAAAAABEPAAAAAAAAAAAAABEPAAAAAAAAEg8AAAAAAAAAAAAAEg8AAAAAAAATDwAAAAAAAAAAAAATDwAAAAAAABQPAAAAAAAAAAAAABQPAAAAAAAAFQ8AAAAAAAAAAAAAFQ8AAAAAAAAWDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4PAAAAAAAADg8AAAAAAAAAAAAAAADwvw"
				],
				[
					8503,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABYPAAAAAAAAFw8AAAAAAAAAAAAAFw8AAAAAAAAYDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYPAAAAAAAAFg8AAAAAAAAAAAAAAADwvw"
				],
				[
					8504,
					1,
					"insert",
					{
						"characters": " geometry.clone"
					},
					"DwAAABgPAAAAAAAAGQ8AAAAAAAAAAAAAGQ8AAAAAAAAaDwAAAAAAAAAAAAAaDwAAAAAAABsPAAAAAAAAAAAAABsPAAAAAAAAHA8AAAAAAAAAAAAAHA8AAAAAAAAdDwAAAAAAAAAAAAAdDwAAAAAAAB4PAAAAAAAAAAAAAB4PAAAAAAAAHw8AAAAAAAAAAAAAHw8AAAAAAAAgDwAAAAAAAAAAAAAgDwAAAAAAACEPAAAAAAAAAAAAACEPAAAAAAAAIg8AAAAAAAAAAAAAIg8AAAAAAAAjDwAAAAAAAAAAAAAjDwAAAAAAACQPAAAAAAAAAAAAACQPAAAAAAAAJQ8AAAAAAAAAAAAAJQ8AAAAAAAAmDwAAAAAAAAAAAAAmDwAAAAAAACcPAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgPAAAAAAAAGA8AAAAAAAAAAAAAAADwvw"
				],
				[
					8505,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACcPAAAAAAAAKQ8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcPAAAAAAAAJw8AAAAAAAAAAAAAAADwvw"
				],
				[
					8507,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACkPAAAAAAAAKg8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkPAAAAAAAAKQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					8510,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAA8QAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAASEAAAAAAAAAAAAAASEAAAAAAAABMQAAAAAAAAAAAAABMQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAVEAAAAAAAAAAAAAAVEAAAAAAAABYQAAAAAAAAAAAAABYQAAAAAAAAFxAAAAAAAAAAAAAAFxAAAAAAAAAYEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8QAAAAAAAADxAAAAAAAAAAAAAAAMByQA"
				],
				[
					8511,
					1,
					"insert",
					{
						"characters": " geometrr"
					},
					"CQAAABgQAAAAAAAAGRAAAAAAAAAAAAAAGRAAAAAAAAAaEAAAAAAAAAAAAAAaEAAAAAAAABsQAAAAAAAAAAAAABsQAAAAAAAAHBAAAAAAAAAAAAAAHBAAAAAAAAAdEAAAAAAAAAAAAAAdEAAAAAAAAB4QAAAAAAAAAAAAAB4QAAAAAAAAHxAAAAAAAAAAAAAAHxAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAACEQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgQAAAAAAAAGBAAAAAAAAAAAAAAAADwvw"
				],
				[
					8512,
					1,
					"left_delete",
					null,
					"AQAAACAQAAAAAAAAIBAAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEQAAAAAAAAIRAAAAAAAAAAAAAAAADwvw"
				],
				[
					8513,
					1,
					"insert",
					{
						"characters": "y;"
					},
					"AgAAACAQAAAAAAAAIRAAAAAAAAAAAAAAIRAAAAAAAAAiEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAADwvw"
				],
				[
					8549,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3EQAAaW1wb3J0IHsgUG9pbnQsIFNpemUsIFJlY3QsIExpbmUsIFRpY2tNZXRlciwgTWF0LCBEcmF3LCBMSU5FX0FBLCBMSU5FXzgsIENWX1JHQiB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IHJhbmdlLCBtb2QgfSBmcm9tICd1dGlsJzsKCmV4cG9ydCBjb25zdCBYID0gU3ltYm9sLmZvcigneCcpOwpleHBvcnQgY29uc3QgWSA9IFN5bWJvbC5mb3IoJ3knKTsKCmNvbnN0IFBFUlAgPSB7IFtYXTogWSwgW1ldOiBYIH07CmNvbnN0IENPT1JEID0geyBbWF06ICd4JywgW1ldOiAneScgfTsKY29uc3QgU0laRSA9IHsgW1hdOiAnd2lkdGgnLCBbWV06ICdoZWlnaHQnIH07CgpleHBvcnQgZnVuY3Rpb24gTWF4KHN0b3BzLCBheGlzLCBzdHlsZSkgewogIGxldCB2YWx1ZXM7CiAgaWYoc3R5bGUpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkoc3RvcHNbMF0pKSBzdG9wcyA9IHN0b3BzLm1hcCgoW2xhYmVsXSkgPT4gbGFiZWwpOwoKICAgIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0eWxlLnNpemUoc3RvcClbU0laRVtheGlzXV0pOwogIGNvbnNvbGUubG9nKCdNYXgnLHZhbHVlcyk7CiAgfSBlbHNlIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0b3BbQ09PUkRbYXhpc11dKTsKCiAgcmV0dXJuIE1hdGgubWF4KC4uLnZhbHVlcyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBBeGlzUG9pbnRzKHN0b3BzLCBpbmMgPSAxMCwgYXhpcywgc3R5bGUsIHNpemUpIHsKICBpZih0eXBlb2Ygc3RvcHMgPT0gJ251bWJlcicpIHN0b3BzID0gcmFuZ2UoMCwgc3RvcHMsIGluYyk7CiAgbGV0IHBvc2l0aW9ucyA9IFtdOwogIGxldCBwb2ludHMgPSByYW5nZSgwLCBNYXRoLmFicyhzdG9wcy5sZW5ndGggLSAxKSk7CiAgbGV0IHNpemVzID0gW107CiAgbGV0IG4gPSBwb2ludHMubGVuZ3RoOwoKICBsZXQgbWF4ID0gTWF4KHN0b3BzLCBQRVJQW2F4aXNdLCBzdHlsZSk7CiAgbGV0IHBvcyA9IG1heCArIDIgKyAxMDsKICBjb25zb2xlLmxvZygnQXhpc1BvaW50cycsIHtheGlzLG1heCxwb3N9KTsKCiAgZm9yKGxldCBpID0gMDsgaSA8IG47IGkrKykgewogICAgbGV0IHBvaW50ID0gcG9pbnRzW2ldOwogICAgbGV0IHkgPSBheGlzID09IFkgPyBwb2ludCA6IHBvczsKICAgIGxldCB4ID0gYXhpcyA9PSBZID8gcG9zIDogcG9pbnQ7CgogICAgcG9zaXRpb25zLnB1c2goW3N0b3BzW2ldLCBuZXcgUG9pbnQoeCwgeSldKTsKICB9CgogIGNvbnNvbGUubG9nKCdzaXplcycsIHNpemVzKTsKICByZXR1cm4gcG9zaXRpb25zOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0xpbmUobWF0LCBzdGFydCwgZW5kLCBjb2xvciA9IENWX1JHQigwLCAwLCAwKSwgd2lkdGggPSAxLCBsaW5lVHlwZSA9IExJTkVfQUEpIHsKICBsZXQgcG9pbnRzID0gW3N0YXJ0LCBlbmRdLm1hcCgoeyB4LCB5IH0pID0+IFttb2QoeCwgbWF0LmNvbHMpLCBtYXQucm93cyAtIG1vZCh5LCBtYXQucm93cyldKTsKCiAgaWYobGluZVR5cGUgPT0gTElORV9BQSkgdGhyb3cgbmV3IEVycm9yKCdMSU5FX0FBJyk7CgogIC8vY29uc29sZS5sb2coJ0RyYXdMaW5lJywgaW5zcGVjdCh7IHBvaW50cywgd2lkdGgsIGxpbmVUeXBlIH0sIHsgY29tcGFjdDogMiB9KSk7CgogIERyYXcubGluZShtYXQsIC4uLnBvaW50cywgY29sb3IsIHdpZHRoLCBsaW5lVHlwZSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3VGV4dChtYXQsIHRleHQsIHBvcywgc3R5bGUsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApKSB7CiAgbGV0IHB0ID0gbmV3IFBvaW50KHBvcy54LCBtYXQucm93cyAtIHBvcy55KTsKCiAgc3R5bGUuZHJhdyhtYXQsIHRleHQsIHB0LCBjb2xvcik7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3QXhpcyhtYXQsIGF4aXMsIHJlY3QsIHN0eWxlKSB7CiAgIGxldCB7IHgxLCB5MSwgeDIsIHkyIH0gPSByZWN0OwogCiAgbGV0IHBvaW50cyA9IGF4aXMubWFwKChbbGFiZWwsIHBvaW50XSkgPT4gcG9pbnQpOwogIGxldCBkaWZmID0gUG9pbnQuZGlmZihwb2ludHNbMV0sIHBvaW50c1swXSk7CiAgbGV0IG5vcm0gPSBkaWZmLm5vcm0oKTsKICBsZXQgcHJvcCA9IG5vcm0ueCA/IFggOiBZOwogIGxldCBhZGQgPSBwcm9wID09IFggPyBuZXcgUG9pbnQoMCwgLTEwKSA6IG5ldyBQb2ludCgtMTAsIDApOwogIGxldCBvZmZzZXQgPSBwcm9wID09IFggPyBuZXcgUG9pbnQocmVjdC54LCAwKSA6IG5ldyBQb2ludCgwLCByZWN0LnkpOwoKICBsZXQgbWF4ID0gTWF4KHBvaW50cywgcHJvcCk7CgogIGxldCBtYXhDb29yZCA9IHJlY3RbU0laRVtwcm9wXV07CiAgbGV0IGZhY3RvciA9IG1heENvb3JkIC8gbWF4OwogIGxldCBtdWx0aXBsaWNhdG9yID0gcHJvcCA9PSBYID8gbmV3IFBvaW50KGZhY3RvciwgMSkgOiBuZXcgUG9pbnQoMSwgZmFjdG9yKTsKCiAgY29uc29sZS5sb2coJ0RyYXdBeGlzJywgeyBtYXgsIGZhY3RvciwgbXVsdGlwbGljYXRvciB9KTsKICBwb2ludHMgPSBwb2ludHMubWFwKHAgPT4gcC5wcm9kKG11bHRpcGxpY2F0b3IpLnJvdW5kKCkpOwogIHBvaW50cyA9IHBvaW50cy5tYXAocCA9PiBwLnN1bShvZmZzZXQpKTsKICBjb25zb2xlLmxvZygnRHJhd0F4aXMnLCB7IHBvaW50cyB9KTsKCiAgbGV0IGZpcnN0ID0gcG9pbnRzWzBdLAogICAgbGFzdCA9IHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV07CgogIGxldCBpID0gMDsKICBmb3IobGV0IHBvaW50IG9mIHBvaW50cykgewogICAgbGV0IHRleHQgPSBheGlzW2ldWzBdICsgJyc7CiAgICBsZXQgcG9pbnRzID0gW107CgogICAgbGV0IGRpbWVuc2lvbnMgPSBzdHlsZS5zaXplKHRleHQpOwogICAgbGV0IHBvaW50MiA9IHBvaW50LnN1bShhZGQpOwoKICAgIGxldCBkaXNwID0geyBbWF06IG5ldyBQb2ludCgtZGltZW5zaW9ucy53aWR0aCAvIDIgKyAxLCAwKSwgW1ldOiBuZXcgUG9pbnQoLWRpbWVuc2lvbnMud2lkdGgsIGRpbWVuc2lvbnMuaGVpZ2h0IC8gMiArIDIpIH1bcHJvcF07CiAgICBsZXQgdGV4dHBvcyA9IHBvaW50Mi5zdW0oZGlzcC5jZWlsKCkpOwoKICAgIERyYXdUZXh0KG1hdCwgdGV4dCwgdGV4dHBvcywgc3R5bGUsIENWX1JHQigwLCAwLCAwKSk7CgogICAgICBsZXQgcG9pbnQzPSB7IFtYXTogbmV3IFBvaW50KHBvaW50LngsIHJlY3QueTIpLCBbWV06IG5ldyBQb2ludChyZWN0LngyLHBvaW50LnkpIH1bcHJvcF07CiAgIC8vIGNvbnNvbGUubG9nKCdEcmF3QXhpcycscHJvcCwge3BvaW50LHBvaW50MiwgcG9pbnQzfSk7CgoKICAgIERyYXdMaW5lKG1hdCwgcG9pbnQsIHBvaW50MiwgQ1ZfUkdCKDAsIDAsIDApLCAxLCBMSU5FXzgpOwoKICAgIGlmKGkgPiAwKQogICAgRHJhd0xpbmUobWF0LHBvaW50MywgcG9pbnQsIENWX1JHQigyMDAsIDIwMCwgMjAwKSwgMSwgTElORV84KTsKCiAgKytpOwogIH0KCiAgICBEcmF3TGluZShtYXQsIGZpcnN0LCBsYXN0LCBDVl9SR0IoMCwgMCwgMCksIDEsIExJTkVfOCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3Q3Jvc3MobWF0LCBwb2ludCwgcmFkaXVzID0gMTApIHsKICBEcmF3TGluZShtYXQsIHBvaW50LnN1bShbLTEwLCAtMTBdKSwgcG9pbnQuc3VtKFsxMCwgMTBdKSwgWzAsIDAsIDI1NV0sIDIsIExJTkVfOCk7CiAgRHJhd0xpbmUobWF0LCBwb2ludC5zdW0oWzEwLCAtMTBdKSwgcG9pbnQuc3VtKFstMTAsIDEwXSksIFswLCAwLCAyNTVdLCAyLCBMSU5FXzgpOwp9CgpleHBvcnQgZnVuY3Rpb24gT3JpZ2luKG1hdCwgeEF4aXMsIHlBeGlzKSB7CiAgY29uc3QgeyBzaXplIH0gPSBtYXQ7CgogIGxldCB7IHggfSA9IHlBeGlzWzBdWzFdOwogIGxldCB7IHkgfSA9IHhBeGlzWzBdWzFdOwoKICByZXR1cm4gbmV3IFBvaW50KHgsIHkpOwp9CgpleHBvcnQgZnVuY3Rpb24gRmxpcChtYXQsIGdlb21ldHJ5KSB7CiAgbGV0IGN0b3IgPSBnZW9tZXRyeS5jb25zdHJ1Y3RvcjsKICBnZW9tZXRyeSA9IGdlb21ldHJ5LmNsb25lKCk7CiAgaWYoZ2VvbWV0cnkgaW5zdGFuY2VvZiBSZWN0IHx8IGdlb21ldHJ5IGluc3RhbmNlb2YgTGluZSkgewogICAgZ2VvbWV0cnkueTEgPSBtYXQucm93cyAtIGdlb21ldHJ5LnkxOwogICAgZ2VvbWV0cnkueTIgPSBtYXQucm93cyAtIGdlb21ldHJ5LnkyOwogIH1lbHNlIGlmKGdlb21ldHJ5IGluc3RhbmNlb2YgUG9pbnQpIHsKICAgIGdlb21ldHJ5LnkgPSBtYXQucm93cyAtIGdlb21ldHJ5Lnk7CiAgfQogIHJldHVybiBnZW9tZXRyeTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldFJlY3QobWF0LCB4QXhpcyx5QXhpcywgc3R5bGUpIHsKICBjb25zb2xlLmxvZygnR2V0UmVjdCcsIHhBeGlzLHlBeGlzKTsKICBsZXQgb3JpZ2luID0gLyphcmdzWzBdIGluc3RhbmNlb2YgUG9pbnQgPyBhcmdzWzBdIDogKi9PcmlnaW4obWF0LCB4QXhpcyx5QXhpcyk7CgogIGxldCBlbmQgPSBuZXcgUG9pbnQobWF0LmNvbHMgLSAxIC0gb3JpZ2luLngsIG1hdC5yb3dzIC0gMSAtIG9yaWdpbi55KTsKCmxldCB5QWRkID0gIE1hdGguZmxvb3IoTWF4KHlBeGlzLCBZLCBzdHlsZSkvIDIpOwpsZXQgeEFkZCA9IE1hdGguY2VpbChNYXgoeEF4aXMsIFgsIHN0eWxlKS8yICk7CgoKICByZXR1cm4gbmV3IFJlY3QoLi4ub3JpZ2luLCAuLi5lbmQuZGlmZih4QWRkLHlBZGQpKTsKfQoAAAAAAAAAAMMRAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcRAAAAAAAAtxEAAAAAAAAAAAAAAGBzQA"
				],
				[
					8600,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAL4DAAAAAAAAvwMAAAAAAAAAAAAAvwMAAAAAAADAAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4DAAAAAAAAvgMAAAAAAAAAAAAAAADwvw"
				],
				[
					8601,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMADAAAAAAAAwQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMADAAAAAAAAwAMAAAAAAAAAAAAAAADwvw"
				],
				[
					8602,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMEDAAAAAAAAwwMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEDAAAAAAAAwQMAAAAAAAAAAAAAAADwvw"
				],
				[
					8603,
					1,
					"insert",
					{
						"characters": "axis"
					},
					"BAAAAMIDAAAAAAAAwwMAAAAAAAAAAAAAwwMAAAAAAADEAwAAAAAAAAAAAADEAwAAAAAAAMUDAAAAAAAAAAAAAMUDAAAAAAAAxgMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIDAAAAAAAAwgMAAAAAAAAAAAAAAADwvw"
				],
				[
					8604,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAMYDAAAAAAAAxwMAAAAAAAAAAAAAxwMAAAAAAADIAwAAAAAAAAAAAADIAwAAAAAAAMkDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYDAAAAAAAAxgMAAAAAAAAAAAAAAADwvw"
				],
				[
					8605,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					8606,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMoDAAAAAAAAzAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					8607,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAAMsDAAAAAAAAzAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					8609,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0DAAAAAAAAzQMAAAAAAAAAAAAAAADwvw"
				],
				[
					8610,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8DAAAAAAAAzwMAAAAAAAAAAAAAAADwvw"
				],
				[
					8611,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAANEDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEDAAAAAAAA0QMAAAAAAAAAAAAAAADwvw"
				],
				[
					8612,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAANMDAAAAAAAA1AMAAAAAAAAAAAAA1AMAAAAAAADVAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMDAAAAAAAA0wMAAAAAAAAAAAAAAADwvw"
				],
				[
					8614,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANYDAAAAAAAA1wMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYDAAAAAAAA1gMAAAAAAAAAAAAAAADwvw"
				],
				[
					8615,
					1,
					"left_delete",
					null,
					"AQAAANYDAAAAAAAA1gMAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcDAAAAAAAA1wMAAAAAAAAAAAAAAADwvw"
				],
				[
					8619,
					1,
					"left_delete",
					null,
					"AQAAAMsDAAAAAAAAywMAAAAAAAABAAAAWA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwDAAAAAAAAzAMAAAAAAAAAAAAAAADwvw"
				],
				[
					8620,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMoDAAAAAAAAygMAAAAAAAABAAAAJ8oDAAAAAAAAygMAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					8621,
					1,
					"right_delete",
					null,
					"AQAAAMoDAAAAAAAAygMAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					8622,
					1,
					"insert",
					{
						"characters": "X"
					},
					"AQAAAMoDAAAAAAAAywMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					8623,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsDAAAAAAAAzAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					8665,
					1,
					"cut",
					null,
					"AQAAAPgEAAAAAAAA+AQAAAAAAACIAQAACmV4cG9ydCBmdW5jdGlvbiBEcmF3TGluZShtYXQsIHN0YXJ0LCBlbmQsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApLCB3aWR0aCA9IDEsIGxpbmVUeXBlID0gTElORV9BQSkgewogIGxldCBwb2ludHMgPSBbc3RhcnQsIGVuZF0ubWFwKCh7IHgsIHkgfSkgPT4gW21vZCh4LCBtYXQuY29scyksIG1hdC5yb3dzIC0gbW9kKHksIG1hdC5yb3dzKV0pOwoKICBpZihsaW5lVHlwZSA9PSBMSU5FX0FBKSB0aHJvdyBuZXcgRXJyb3IoJ0xJTkVfQUEnKTsKCiAgLy9jb25zb2xlLmxvZygnRHJhd0xpbmUnLCBpbnNwZWN0KHsgcG9pbnRzLCB3aWR0aCwgbGluZVR5cGUgfSwgeyBjb21wYWN0OiAyIH0pKTsKCiAgRHJhdy5saW5lKG1hdCwgLi4ucG9pbnRzLCBjb2xvciwgd2lkdGgsIGxpbmVUeXBlKTsKfQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgEAAAAAAAAgAYAAAAAAAAAAAAAAADwvw"
				],
				[
					8666,
					2,
					"paste",
					null,
					"AgAAAPgEAAAAAAAAgAYAAAAAAAAAAAAAgAYAAAAAAAAICAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAADwvw"
				],
				[
					8671,
					1,
					"insert",
					{
						"characters": "Dptt"
					},
					"BQAAAJUGAAAAAAAAlgYAAAAAAAAAAAAAlgYAAAAAAACWBgAAAAAAAAQAAABMaW5llgYAAAAAAACXBgAAAAAAAAAAAACXBgAAAAAAAJgGAAAAAAAAAAAAAJgGAAAAAAAAmQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUGAAAAAAAAmQYAAAAAAAAAAAAAAADwvw"
				],
				[
					8672,
					3,
					"left_delete",
					null,
					"AwAAAJgGAAAAAAAAmAYAAAAAAAABAAAAdJcGAAAAAAAAlwYAAAAAAAABAAAAdJYGAAAAAAAAlgYAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkGAAAAAAAAmQYAAAAAAAAAAAAAAADwvw"
				],
				[
					8673,
					1,
					"insert",
					{
						"characters": "ottedLine"
					},
					"CQAAAJYGAAAAAAAAlwYAAAAAAAAAAAAAlwYAAAAAAACYBgAAAAAAAAAAAACYBgAAAAAAAJkGAAAAAAAAAAAAAJkGAAAAAAAAmgYAAAAAAAAAAAAAmgYAAAAAAACbBgAAAAAAAAAAAACbBgAAAAAAAJwGAAAAAAAAAAAAAJwGAAAAAAAAnQYAAAAAAAAAAAAAnQYAAAAAAACeBgAAAAAAAAAAAACeBgAAAAAAAJ8GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYGAAAAAAAAlgYAAAAAAAAAAAAAAADwvw"
				],
				[
					8680,
					1,
					"left_delete",
					null,
					"AQAAAMgGAAAAAAAAyAYAAAAAAAAfAAAALCB3aWR0aCA9IDEsIGxpbmVUeXBlID0gTElORV9BQQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgGAAAAAAAA5wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8684,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADOBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsGAAAAAAAAywYAAAAAAAD////////vfw"
				],
				[
					8689,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
				],
				[
					8690,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANAGAAAAAAAA0gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAGAAAAAAAA0AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8691,
					1,
					"insert",
					{
						"characters": "start.x"
					},
					"BwAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAANQGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADWBgAAAAAAAAAAAADWBgAAAAAAANcGAAAAAAAAAAAAANcGAAAAAAAA2AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEGAAAAAAAA0QYAAAAAAAAAAAAAAADwvw"
				],
				[
					8692,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANgGAAAAAAAA2QYAAAAAAAAAAAAA2QYAAAAAAADaBgAAAAAAAAAAAADaBgAAAAAAANsGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgGAAAAAAAA2AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8693,
					1,
					"insert",
					{
						"characters": " end.yx"
					},
					"BwAAANsGAAAAAAAA3AYAAAAAAAAAAAAA3AYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAADgBgAAAAAAAOEGAAAAAAAAAAAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsGAAAAAAAA2wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8694,
					2,
					"left_delete",
					null,
					"AgAAAOEGAAAAAAAA4QYAAAAAAAABAAAAeOAGAAAAAAAA4AYAAAAAAAABAAAAeQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIGAAAAAAAA4gYAAAAAAAAAAAAAAADwvw"
				],
				[
					8695,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAOAGAAAAAAAA4QYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAGAAAAAAAA4AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8705,
					3,
					"right_delete",
					null,
					"AwAAAM4GAAAAAAAAzgYAAAAAAAABAAAAac4GAAAAAAAAzgYAAAAAAAABAAAAZs4GAAAAAAAAzgYAAAAAAAABAAAAKA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAAA0QA"
				],
				[
					8707,
					1,
					"left_delete",
					null,
					"AQAAAN4GAAAAAAAA3gYAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8GAAAAAAAA3wYAAAAAAAD////////vfw"
				],
				[
					8708,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4GAAAAAAAA3gYAAAAAAAAAAAAAAADwvw"
				],
				[
					8709,
					1,
					"insert",
					{
						"characters": " Y"
					},
					"AgAAAOAGAAAAAAAA4QYAAAAAAAAAAAAA4QYAAAAAAADiBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAGAAAAAAAA4AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8710,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA4wYAAAAAAADkBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIGAAAAAAAA4gYAAAAAAAAAAAAAAADwvw"
				],
				[
					8711,
					1,
					"insert",
					{
						"characters": " start.y"
					},
					"CAAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA5QYAAAAAAADmBgAAAAAAAAAAAADmBgAAAAAAAOcGAAAAAAAAAAAAAOcGAAAAAAAA6AYAAAAAAAAAAAAA6AYAAAAAAADpBgAAAAAAAAAAAADpBgAAAAAAAOoGAAAAAAAAAAAAAOoGAAAAAAAA6wYAAAAAAAAAAAAA6wYAAAAAAADsBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQGAAAAAAAA5AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8712,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAOwGAAAAAAAA7QYAAAAAAAAAAAAA7QYAAAAAAADuBgAAAAAAAAAAAADuBgAAAAAAAO8GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwGAAAAAAAA7AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8713,
					1,
					"insert",
					{
						"characters": " end.y"
					},
					"BgAAAO8GAAAAAAAA8AYAAAAAAAAAAAAA8AYAAAAAAADxBgAAAAAAAAAAAADxBgAAAAAAAPIGAAAAAAAAAAAAAPIGAAAAAAAA8wYAAAAAAAAAAAAA8wYAAAAAAAD0BgAAAAAAAAAAAAD0BgAAAAAAAPUGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8GAAAAAAAA7wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8714,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAPUGAAAAAAAA9gYAAAAAAAAAAAAA9gYAAAAAAAD3BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUGAAAAAAAA9QYAAAAAAAAAAAAAAADwvw"
				],
				[
					8715,
					1,
					"insert",
					{
						"characters": " X"
					},
					"AgAAAPcGAAAAAAAA+AYAAAAAAAAAAAAA+AYAAAAAAAD5BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcGAAAAAAAA9wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8716,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAPkGAAAAAAAA+gYAAAAAAAAAAAAA+gYAAAAAAAD7BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkGAAAAAAAA+QYAAAAAAAAAAAAAAADwvw"
				],
				[
					8717,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPsGAAAAAAAA/AYAAAAAAAAAAAAA/AYAAAAAAAD9BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsGAAAAAAAA+wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8718,
					1,
					"left_delete",
					null,
					"AQAAAPwGAAAAAAAA/AYAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0GAAAAAAAA/QYAAAAAAAAAAAAAAADwvw"
				],
				[
					8719,
					1,
					"insert",
					{
						"characters": "mn"
					},
					"AgAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwGAAAAAAAA/AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8720,
					2,
					"left_delete",
					null,
					"AgAAAP0GAAAAAAAA/QYAAAAAAAABAAAAbvwGAAAAAAAA/AYAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4GAAAAAAAA/gYAAAAAAAAAAAAAAADwvw"
				],
				[
					8721,
					1,
					"insert",
					{
						"characters": "null;"
					},
					"BQAAAPwGAAAAAAAA/QYAAAAAAAAAAAAA/QYAAAAAAAD+BgAAAAAAAAAAAAD+BgAAAAAAAP8GAAAAAAAAAAAAAP8GAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAABBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwGAAAAAAAA/AYAAAAAAAAAAAAAAADwvw"
				],
				[
					8723,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAAA0QA"
				],
				[
					8724,
					1,
					"insert",
					{
						"characters": " axis;"
					},
					"BgAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAANQGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADWBgAAAAAAAAAAAADWBgAAAAAAANcGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEGAAAAAAAA0QYAAAAAAAAAAAAAAADwvw"
				],
				[
					8725,
					1,
					"left_delete",
					null,
					"AQAAANYGAAAAAAAA1gYAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcGAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8726,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANYGAAAAAAAA1wYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYGAAAAAAAA1gYAAAAAAAAAAAAAAADwvw"
				],
				[
					8727,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcGAAAAAAAA2AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcGAAAAAAAA1wYAAAAAAAAAAAAAAADwvw"
				],
				[
					8729,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAsHAAAAAAAADAcAAAAAAAAAAAAADAcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA8HAAAAAAAAEQcAAAAAAAAAAAAADAcAAAAAAAAMBwAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsHAAAAAAAACwcAAAAAAAD////////vfw"
				],
				[
					8732,
					1,
					"insert",
					{
						"characters": "switch"
					},
					"BgAAAA8HAAAAAAAAEAcAAAAAAAAAAAAAEAcAAAAAAAARBwAAAAAAAAAAAAARBwAAAAAAABIHAAAAAAAAAAAAABIHAAAAAAAAEwcAAAAAAAAAAAAAEwcAAAAAAAAUBwAAAAAAAAAAAAAUBwAAAAAAABUHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8733,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABUHAAAAAAAAFwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUHAAAAAAAAFQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8734,
					1,
					"insert",
					{
						"characters": "axis"
					},
					"BAAAABYHAAAAAAAAFwcAAAAAAAAAAAAAFwcAAAAAAAAYBwAAAAAAAAAAAAAYBwAAAAAAABkHAAAAAAAAAAAAABkHAAAAAAAAGgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYHAAAAAAAAFgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8736,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsHAAAAAAAAHAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsHAAAAAAAAGwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8737,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABwHAAAAAAAAHgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwHAAAAAAAAHAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8738,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAB0HAAAAAAAAHgcAAAAAAAAAAAAAHgcAAAAAAAAgBwAAAAAAAAAAAAAgBwAAAAAAACEHAAAAAAAAAAAAACEHAAAAAAAAIwcAAAAAAAAAAAAAHgcAAAAAAAAeBwAAAAAAAAIAAAAgIB4HAAAAAAAAIgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0HAAAAAAAAHQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8739,
					1,
					"insert",
					{
						"characters": "case"
					},
					"BAAAACIHAAAAAAAAIwcAAAAAAAAAAAAAIwcAAAAAAAAkBwAAAAAAAAAAAAAkBwAAAAAAACUHAAAAAAAAAAAAACUHAAAAAAAAJgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIHAAAAAAAAIgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8740,
					1,
					"insert",
					{
						"characters": " X:"
					},
					"AwAAACYHAAAAAAAAJwcAAAAAAAAAAAAAJwcAAAAAAAAoBwAAAAAAAAAAAAAoBwAAAAAAACkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYHAAAAAAAAJgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8741,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkHAAAAAAAAKgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkHAAAAAAAAKQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8742,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACoHAAAAAAAALAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoHAAAAAAAAKgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8743,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACsHAAAAAAAALAcAAAAAAAAAAAAALAcAAAAAAAAwBwAAAAAAAAAAAAAwBwAAAAAAADEHAAAAAAAAAAAAADEHAAAAAAAANQcAAAAAAAAAAAAALAcAAAAAAAAsBwAAAAAAAAQAAAAgICAgLAcAAAAAAAAyBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsHAAAAAAAAKwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8744,
					1,
					"insert",
					{
						"characters": "brek;"
					},
					"BQAAADIHAAAAAAAAMwcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAAA0BwAAAAAAADUHAAAAAAAAAAAAADUHAAAAAAAANgcAAAAAAAAAAAAANgcAAAAAAAA3BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIHAAAAAAAAMgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8745,
					2,
					"left_delete",
					null,
					"AgAAADYHAAAAAAAANgcAAAAAAAABAAAAOzUHAAAAAAAANQcAAAAAAAABAAAAaw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8746,
					1,
					"insert",
					{
						"characters": "ak;"
					},
					"AwAAADUHAAAAAAAANgcAAAAAAAAAAAAANgcAAAAAAAA3BwAAAAAAAAAAAAA3BwAAAAAAADgHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUHAAAAAAAANQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8751,
					1,
					"cut",
					null,
					"AQAAACIHAAAAAAAAIgcAAAAAAAAcAAAAY2FzZSBYOiB7CiAgICAgIGJyZWFrOwogICAgfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIHAAAAAAAAPgcAAAAAAAD////////vfw"
				],
				[
					8752,
					2,
					"paste",
					null,
					"AgAAACIHAAAAAAAAPgcAAAAAAAAAAAAAPgcAAAAAAABaBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIHAAAAAAAAIgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8755,
					1,
					"right_delete",
					null,
					"AQAAAEMHAAAAAAAAQwcAAAAAAAABAAAAWA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMHAAAAAAAAQwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8756,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AQAAAEMHAAAAAAAARAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMHAAAAAAAAQwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8764,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAACsHAAAAAAAALAcAAAAAAAAAAAAALAcAAAAAAAAwBwAAAAAAAAAAAAAwBwAAAAAAADIHAAAAAAAAAAAAADIHAAAAAAAAMwcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAAA0BwAAAAAAADUHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsHAAAAAAAAKwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8765,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUHAAAAAAAANQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8766,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADYHAAAAAAAAOAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8767,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADYHAAAAAAAANgcAAAAAAAABAAAAWzYHAAAAAAAANgcAAAAAAAABAAAAXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8768,
					1,
					"insert",
					{
						"characters": "forem"
					},
					"BQAAADYHAAAAAAAANwcAAAAAAAAAAAAANwcAAAAAAAA4BwAAAAAAAAAAAAA4BwAAAAAAADkHAAAAAAAAAAAAADkHAAAAAAAAOgcAAAAAAAAAAAAAOgcAAAAAAAA7BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8769,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsHAAAAAAAAPAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsHAAAAAAAAOwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8770,
					5,
					"left_delete",
					null,
					"BQAAADsHAAAAAAAAOwcAAAAAAAABAAAAIDoHAAAAAAAAOgcAAAAAAAABAAAAbTkHAAAAAAAAOQcAAAAAAAABAAAAZTgHAAAAAAAAOAcAAAAAAAABAAAAcjcHAAAAAAAANwcAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8771,
					1,
					"insert",
					{
						"characters": "rom"
					},
					"AwAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA5BwAAAAAAADoHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8772,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADoHAAAAAAAAOwcAAAAAAAAAAAAAOwcAAAAAAAA8BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoHAAAAAAAAOgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8773,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwHAAAAAAAAPQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8774,
					7,
					"left_delete",
					null,
					"BwAAADwHAAAAAAAAPAcAAAAAAAABAAAAIDsHAAAAAAAAOwcAAAAAAAABAAAAPToHAAAAAAAAOgcAAAAAAAABAAAAIDkHAAAAAAAAOQcAAAAAAAABAAAAbTgHAAAAAAAAOAcAAAAAAAABAAAAbzcHAAAAAAAANwcAAAAAAAABAAAAcjYHAAAAAAAANgcAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0HAAAAAAAAPQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8775,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAADYHAAAAAAAANwcAAAAAAAAAAAAANwcAAAAAAAA4BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8776,
					2,
					"left_delete",
					null,
					"AgAAADcHAAAAAAAANwcAAAAAAAABAAAAdDYHAAAAAAAANgcAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgHAAAAAAAAOAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8777,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAADYHAAAAAAAANwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8778,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8779,
					1,
					"insert",
					{
						"characters": " start"
					},
					"BgAAADkHAAAAAAAAOgcAAAAAAAAAAAAAOgcAAAAAAAA7BwAAAAAAAAAAAAA7BwAAAAAAADwHAAAAAAAAAAAAADwHAAAAAAAAPQcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkHAAAAAAAAOQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8780,
					1,
					"insert",
					{
						"characters": ".x,"
					},
					"AwAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8HAAAAAAAAPwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8781,
					1,
					"insert",
					{
						"characters": " b=end.x;"
					},
					"CQAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEsHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIHAAAAAAAAQgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8784,
					1,
					"cut",
					null,
					"AQAAACwHAAAAAAAALAcAAAAAAAAgAAAAICAgICAgbGV0IGEgPSBzdGFydC54LCBiPWVuZC54Owo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwHAAAAAAAALAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					8785,
					1,
					"paste",
					null,
					"AQAAACwHAAAAAAAATAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwHAAAAAAAALAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8787,
					1,
					"paste",
					null,
					"AQAAAGgHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgHAAAAAAAAaAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					8794,
					1,
					"left_delete",
					null,
					"AQAAAHwHAAAAAAAAfAcAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0HAAAAAAAAfQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8795,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAHwHAAAAAAAAfQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwHAAAAAAAAfAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8798,
					1,
					"left_delete",
					null,
					"AQAAAIUHAAAAAAAAhQcAAAAAAAABAAAAeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYHAAAAAAAAhgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8799,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAIUHAAAAAAAAhgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUHAAAAAAAAhQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8805,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABjBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4HAAAAAAAAXgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8815,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABSBwAAAAAAAAAAAABSBwAAAAAAAFMHAAAAAAAAAAAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsHAAAAAAAASwcAAAAAAAD////////vfw"
				],
				[
					8816,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUHAAAAAAAAVgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUHAAAAAAAAVQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8817,
					1,
					"insert",
					{
						"characters": "row"
					},
					"AwAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABYBwAAAAAAAAAAAABYBwAAAAAAAFkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYHAAAAAAAAVgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8818,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFkHAAAAAAAAWgcAAAAAAAAAAAAAWgcAAAAAAABbBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkHAAAAAAAAWQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8819,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsHAAAAAAAAXAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsHAAAAAAAAWwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8820,
					1,
					"insert",
					{
						"characters": "mat.row"
					},
					"BwAAAFwHAAAAAAAAXQcAAAAAAAAAAAAAXQcAAAAAAABeBwAAAAAAAAAAAABeBwAAAAAAAF8HAAAAAAAAAAAAAF8HAAAAAAAAYAcAAAAAAAAAAAAAYAcAAAAAAABhBwAAAAAAAAAAAABhBwAAAAAAAGIHAAAAAAAAAAAAAGIHAAAAAAAAYwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwHAAAAAAAAXAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8821,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGMHAAAAAAAAZQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMHAAAAAAAAYwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8822,
					1,
					"insert",
					{
						"characters": "start.y"
					},
					"BwAAAGQHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABmBwAAAAAAAAAAAABmBwAAAAAAAGcHAAAAAAAAAAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABpBwAAAAAAAAAAAABpBwAAAAAAAGoHAAAAAAAAAAAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQHAAAAAAAAZAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8824,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwHAAAAAAAAbQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwHAAAAAAAAbAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8827,
					1,
					"cut",
					null,
					"AQAAAEwHAAAAAAAATAcAAAAAAAAiAAAAICAgICAgbGV0IHJvdyA9IG1hdC5yb3coc3RhcnQueSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4HAAAAAAAATAcAAAAAAAAAAAAAAAAAAA"
				],
				[
					8828,
					1,
					"paste",
					null,
					"AQAAAEwHAAAAAAAAbgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwHAAAAAAAATAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8830,
					1,
					"paste",
					null,
					"AQAAAK8HAAAAAAAA0QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8HAAAAAAAArwcAAAAAAAAAAAAAAAAAAA"
				],
				[
					8835,
					1,
					"left_delete",
					null,
					"AQAAAM0HAAAAAAAAzQcAAAAAAAABAAAAeQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4HAAAAAAAAzgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8836,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAM0HAAAAAAAAzgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0HAAAAAAAAzQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8840,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANAHAAAAAAAA0QcAAAAAAAAAAAAA0QcAAAAAAADXBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAHAAAAAAAA0AcAAAAAAAD////////vfw"
				],
				[
					8844,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHQHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAAB7BwAAAAAAAAAAAADYBwAAAAAAANgHAAAAAAAABgAAACAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQHAAAAAAAAdAcAAAAAAAAAAAAAAABOQA"
				],
				[
					8848,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHQHAAAAAAAAdQcAAAAAAAAAAAAAdQcAAAAAAAB7BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQHAAAAAAAAdAcAAAAAAAAAAAAAAABOQA"
				],
				[
					8851,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAHsHAAAAAAAAfAcAAAAAAAAAAAAAfAcAAAAAAAB9BwAAAAAAAAAAAAB9BwAAAAAAAH4HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsHAAAAAAAAewcAAAAAAAAAAAAAAADwvw"
				],
				[
					8852,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH4HAAAAAAAAgAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4HAAAAAAAAfgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8853,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACBBwAAAAAAAAAAAACBBwAAAAAAAIIHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8HAAAAAAAAfwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8854,
					1,
					"insert",
					{
						"characters": " pixel"
					},
					"BgAAAIIHAAAAAAAAgwcAAAAAAAAAAAAAgwcAAAAAAACEBwAAAAAAAAAAAACEBwAAAAAAAIUHAAAAAAAAAAAAAIUHAAAAAAAAhgcAAAAAAAAAAAAAhgcAAAAAAACHBwAAAAAAAAAAAACHBwAAAAAAAIgHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIHAAAAAAAAggcAAAAAAAAAAAAAAADwvw"
				],
				[
					8855,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgHAAAAAAAAiAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8856,
					1,
					"insert",
					{
						"characters": " row.colRange"
					},
					"DQAAAIsHAAAAAAAAjAcAAAAAAAAAAAAAjAcAAAAAAACNBwAAAAAAAAAAAACNBwAAAAAAAI4HAAAAAAAAAAAAAI4HAAAAAAAAjwcAAAAAAAAAAAAAjwcAAAAAAACQBwAAAAAAAAAAAACQBwAAAAAAAJEHAAAAAAAAAAAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAJcHAAAAAAAAmAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsHAAAAAAAAiwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8857,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJgHAAAAAAAAmgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgHAAAAAAAAmAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8858,
					1,
					"insert",
					{
						"characters": "a,"
					},
					"AgAAAJkHAAAAAAAAmgcAAAAAAAAAAAAAmgcAAAAAAACbBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkHAAAAAAAAmQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8859,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAJsHAAAAAAAAnAcAAAAAAAAAAAAAnAcAAAAAAACdBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsHAAAAAAAAmwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8861,
					1,
					"insert",
					{
						"characters": "\npixel"
					},
					"CQAAAJ8HAAAAAAAAoAcAAAAAAAAAAAAAoAcAAAAAAACmBwAAAAAAAAAAAACgBwAAAAAAAKAHAAAAAAAABgAAACAgICAgIKAHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACpBwAAAAAAAAAAAACpBwAAAAAAAKoHAAAAAAAAAAAAAKoHAAAAAAAAqwcAAAAAAAAAAAAAqwcAAAAAAACsBwAAAAAAAAAAAACsBwAAAAAAAK0HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8HAAAAAAAAnwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8862,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK0HAAAAAAAArgcAAAAAAAAAAAAArgcAAAAAAACvBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0HAAAAAAAArQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8863,
					7,
					"left_delete",
					null,
					"BwAAAK4HAAAAAAAArgcAAAAAAAABAAAAPa0HAAAAAAAArQcAAAAAAAABAAAAIKwHAAAAAAAArAcAAAAAAAABAAAAbKsHAAAAAAAAqwcAAAAAAAABAAAAZaoHAAAAAAAAqgcAAAAAAAABAAAAeKkHAAAAAAAAqQcAAAAAAAABAAAAaagHAAAAAAAAqAcAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8HAAAAAAAArwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8864,
					1,
					"insert",
					{
						"characters": "pixel"
					},
					"BQAAAKgHAAAAAAAAqQcAAAAAAAAAAAAAqQcAAAAAAACqBwAAAAAAAAAAAACqBwAAAAAAAKsHAAAAAAAAAAAAAKsHAAAAAAAArAcAAAAAAAAAAAAArAcAAAAAAACtBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgHAAAAAAAAqAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8865,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK0HAAAAAAAArwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0HAAAAAAAArQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8866,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAK0HAAAAAAAArQcAAAAAAAABAAAAW60HAAAAAAAArQcAAAAAAAABAAAAXQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4HAAAAAAAArgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8867,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAK0HAAAAAAAArgcAAAAAAAAAAAAArgcAAAAAAACvBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0HAAAAAAAArQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8868,
					2,
					"left_delete",
					null,
					"AgAAAK4HAAAAAAAArgcAAAAAAAABAAAAPa0HAAAAAAAArQcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8HAAAAAAAArwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8871,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ8HAAAAAAAAoAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8HAAAAAAAAnwcAAAAAAAD////////vfw"
				],
				[
					8872,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAKAHAAAAAAAAoQcAAAAAAAAAAAAAsAcAAAAAAAC4BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAHAAAAAAAAoAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8874,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK8HAAAAAAAAsQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8HAAAAAAAArwcAAAAAAAAAAAAAAIB7QA"
				],
				[
					8875,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALAHAAAAAAAAsQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAHAAAAAAAAsAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8877,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALIHAAAAAAAAswcAAAAAAAAAAAAAswcAAAAAAAC0BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIHAAAAAAAAsgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8878,
					1,
					"insert",
					{
						"characters": " co"
					},
					"AwAAALQHAAAAAAAAtQcAAAAAAAAAAAAAtQcAAAAAAAC2BwAAAAAAAAAAAAC2BwAAAAAAALcHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQHAAAAAAAAtAcAAAAAAAAAAAAAAADwvw"
				],
				[
					8879,
					1,
					"insert",
					{
						"characters": "lor"
					},
					"AwAAALcHAAAAAAAAuAcAAAAAAAAAAAAAuAcAAAAAAAC5BwAAAAAAAAAAAAC5BwAAAAAAALoHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAAtwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8880,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAALoHAAAAAAAAvAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoHAAAAAAAAugcAAAAAAAAAAAAAAADwvw"
				],
				[
					8881,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALsHAAAAAAAAvAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsHAAAAAAAAuwcAAAAAAAAAAAAAAADwvw"
				],
				[
					8883,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL0HAAAAAAAAvgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0HAAAAAAAAvQcAAAAAAAAAAAAAAADwvw"
				],
				[
					8886,
					1,
					"cut",
					null,
					"AQAAAKIHAAAAAAAAogcAAAAAAAAdAAAAICAgICAgICBwaXhlbFswXSA9IGNvbG9yWzBdOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8HAAAAAAAAogcAAAAAAAAAAAAAAAAAAA"
				],
				[
					8887,
					3,
					"paste",
					null,
					"AwAAAKIHAAAAAAAAvwcAAAAAAAAAAAAAvwcAAAAAAADcBwAAAAAAAAAAAADcBwAAAAAAAPkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIHAAAAAAAAogcAAAAAAAAAAAAAAADwvw"
				],
				[
					8892,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAM0HAAAAAAAAzgcAAAAAAAAAAAAAzgcAAAAAAADOBwAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0HAAAAAAAAzgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8897,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAOoHAAAAAAAA6wcAAAAAAAAAAAAA6wcAAAAAAADrBwAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoHAAAAAAAA6wcAAAAAAAAAAAAAAADwvw"
				],
				[
					8902,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANgHAAAAAAAA2QcAAAAAAAAAAAAA2QcAAAAAAADZBwAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgHAAAAAAAA2QcAAAAAAAAAAAAAAADwvw"
				],
				[
					8907,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAPUHAAAAAAAA9gcAAAAAAAAAAAAA9gcAAAAAAAD2BwAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUHAAAAAAAA9gcAAAAAAAAAAAAAAADwvw"
				],
				[
					8913,
					1,
					"paste",
					null,
					"AQAAAGQIAAAAAAAA8ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAADwvw"
				],
				[
					8918,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAH8IAAAAAAAAgAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8IAAAAAAAAfwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8919,
					2,
					"left_delete",
					null,
					"AgAAAH8IAAAAAAAAfwgAAAAAAAABAAAAY34IAAAAAAAAfggAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAADwvw"
				],
				[
					8920,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAAH4IAAAAAAAAfwgAAAAAAAAAAAAAfwgAAAAAAACACAAAAAAAAAAAAACACAAAAAAAAIEIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4IAAAAAAAAfggAAAAAAAAAAAAAAADwvw"
				],
				[
					8921,
					2,
					"right_delete",
					null,
					"AgAAAIEIAAAAAAAAgQgAAAAAAAABAAAAb4EIAAAAAAAAgQgAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEIAAAAAAAAgQgAAAAAAAAAAAAAAADwvw"
				],
				[
					8923,
					3,
					"right_delete",
					null,
					"AwAAAIIIAAAAAAAAgggAAAAAAAABAAAAY4IIAAAAAAAAgggAAAAAAAABAAAAb4IIAAAAAAAAgggAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIIAAAAAAAAgggAAAAAAAAAAAAAAADwvw"
				],
				[
					8924,
					1,
					"insert",
					{
						"characters": "row"
					},
					"AwAAAIIIAAAAAAAAgwgAAAAAAAAAAAAAgwgAAAAAAACECAAAAAAAAAAAAACECAAAAAAAAIUIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIIAAAAAAAAgggAAAAAAAAAAAAAAADwvw"
				],
				[
					8931,
					1,
					"left_delete",
					null,
					"AQAAAAoJAAAAAAAACgkAAAAAAAAhAQAAICBsZXQgcG9pbnRzID0gW3N0YXJ0LCBlbmRdLm1hcCgoeyB4LCB5IH0pID0+IFttb2QoeCwgbWF0LmNvbHMpLCBtYXQucm93cyAtIG1vZCh5LCBtYXQucm93cyldKTsKCiAgaWYobGluZVR5cGUgPT0gTElORV9BQSkgdGhyb3cgbmV3IEVycm9yKCdMSU5FX0FBJyk7CgogIC8vY29uc29sZS5sb2coJ0RyYXdMaW5lJywgaW5zcGVjdCh7IHBvaW50cywgd2lkdGgsIGxpbmVUeXBlIH0sIHsgY29tcGFjdDogMiB9KSk7CgogIERyYXcubGluZShtYXQsIC4uLnBvaW50cywgY29sb3IsIHdpZHRoLCBsaW5lVHlwZSk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoJAAAAAAAAKwoAAAAAAAAAAAAAAAAAAA"
				],
				[
					8947,
					1,
					"paste",
					null,
					"AgAAAGAPAAAAAAAAbg8AAAAAAAAAAAAAbg8AAAAAAABuDwAAAAAAAAgAAABEcmF3TGluZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAPAAAAAAAAaA8AAAAAAAAAAAAAAADwvw"
				],
				[
					8966,
					4,
					"left_delete",
					null,
					"BAAAAE4IAAAAAAAATggAAAAAAAABAAAAd00IAAAAAAAATQgAAAAAAAABAAAAb0wIAAAAAAAATAgAAAAAAAABAAAAcksIAAAAAAAASwgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8IAAAAAAAATwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8967,
					1,
					"insert",
					{
						"characters": "co"
					},
					"AgAAAEsIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABNCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsIAAAAAAAASwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8968,
					2,
					"left_delete",
					null,
					"AgAAAEwIAAAAAAAATAgAAAAAAAABAAAAb0sIAAAAAAAASwgAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0IAAAAAAAATQgAAAAAAAAAAAAAAADwvw"
				],
				[
					8969,
					1,
					"insert",
					{
						"characters": " col"
					},
					"BAAAAEsIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABNCAAAAAAAAAAAAABNCAAAAAAAAE4IAAAAAAAAAAAAAE4IAAAAAAAATwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsIAAAAAAAASwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8971,
					3,
					"right_delete",
					null,
					"AwAAAFYIAAAAAAAAVggAAAAAAAABAAAAclYIAAAAAAAAVggAAAAAAAABAAAAb1YIAAAAAAAAVggAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYIAAAAAAAAVggAAAAAAAAAAAAAAADwvw"
				],
				[
					8972,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAAFYIAAAAAAAAVwgAAAAAAAAAAAAAVwgAAAAAAABYCAAAAAAAAAAAAABYCAAAAAAAAFkIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYIAAAAAAAAVggAAAAAAAAAAAAAAADwvw"
				],
				[
					8983,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAGYIAAAAAAAAZwgAAAAAAAAAAAAAZwgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAGoIAAAAAAAAAAAAAGoIAAAAAAAAbAgAAAAAAAAAAAAAZwgAAAAAAABnCAAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYIAAAAAAAAZggAAAAAAAAAAAAAAMBsQA"
				],
				[
					8985,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"DAAAAGcIAAAAAAAAaAgAAAAAAAAAAAAAaQgAAAAAAABpCAAAAAAAAAIAAAAgIGgIAAAAAAAAaQgAAAAAAAAAAAAAaQgAAAAAAABqCAAAAAAAAAAAAABqCAAAAAAAAGsIAAAAAAAAAAAAAGsIAAAAAAAAbAgAAAAAAAAAAAAAbAgAAAAAAABtCAAAAAAAAAAAAABtCAAAAAAAAG4IAAAAAAAAAAAAAG4IAAAAAAAAbwgAAAAAAAAAAAAAbwgAAAAAAABwCAAAAAAAAAAAAABwCAAAAAAAAHEIAAAAAAAAAAAAAHEIAAAAAAAAcggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcIAAAAAAAAZwgAAAAAAAAAAAAAAAA0QA"
				],
				[
					8986,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHIIAAAAAAAAdAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIIAAAAAAAAcggAAAAAAAAAAAAAAADwvw"
				],
				[
					8987,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHMIAAAAAAAAdQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMIAAAAAAAAcwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8988,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHMIAAAAAAAAcwgAAAAAAAABAAAAJ3MIAAAAAAAAcwgAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQIAAAAAAAAdAgAAAAAAAAAAAAAAADwvw"
				],
				[
					8989,
					1,
					"insert",
					{
						"characters": "axis,"
					},
					"BQAAAHMIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB1CAAAAAAAAAAAAAB1CAAAAAAAAHYIAAAAAAAAAAAAAHYIAAAAAAAAdwgAAAAAAAAAAAAAdwgAAAAAAAB4CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMIAAAAAAAAcwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8990,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgIAAAAAAAAeQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgIAAAAAAAAeAgAAAAAAAAAAAAAAADwvw"
				],
				[
					8991,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHkIAAAAAAAAewgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkIAAAAAAAAeQgAAAAAAAAAAAAAAADwvw"
				],
				[
					8992,
					1,
					"insert",
					{
						"characters": "a,b"
					},
					"AwAAAHoIAAAAAAAAewgAAAAAAAAAAAAAewgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAH0IAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoIAAAAAAAAeggAAAAAAAAAAAAAAADwvw"
				],
				[
					8994,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH8IAAAAAAAAgAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8IAAAAAAAAfwgAAAAAAAAAAAAAAADwvw"
				],
				[
					8997,
					1,
					"cut",
					null,
					"AQAAAGcIAAAAAAAAZwgAAAAAAAAaAAAAY29uc29sZS5sb2coYXhpcywge2EsYn0pOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEIAAAAAAAAZwgAAAAAAAAAAAAAAAAAAA"
				],
				[
					8998,
					1,
					"paste",
					null,
					"AQAAAGcIAAAAAAAAgQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcIAAAAAAAAZwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9000,
					1,
					"paste",
					null,
					"AQAAAHUHAAAAAAAAjwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUHAAAAAAAAdQcAAAAAAAAAAAAAAAAAAA"
				],
				[
					9003,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI4HAAAAAAAAjwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4HAAAAAAAAjgcAAAAAAAD////////vfw"
				],
				[
					9012,
					1,
					"left_delete",
					null,
					"AQAAADYHAAAAAAAANgcAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9013,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAADYHAAAAAAAANwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9015,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAADoHAAAAAAAAOwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoHAAAAAAAAOgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9018,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAEsHAAAAAAAATAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsHAAAAAAAASwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9020,
					2,
					"left_delete",
					null,
					"AgAAAEUHAAAAAAAARQcAAAAAAAABAAAAPUQHAAAAAAAARAcAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYHAAAAAAAARgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9026,
					1,
					"left_delete",
					null,
					"AQAAAEcIAAAAAAAARwgAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgIAAAAAAAASAgAAAAAAAAAAAAAAIBbQA"
				],
				[
					9027,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAEcIAAAAAAAASAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcIAAAAAAAARwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9029,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAEsIAAAAAAAATAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsIAAAAAAAASwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9032,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAFwIAAAAAAAAXQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9034,
					2,
					"left_delete",
					null,
					"AgAAAFYIAAAAAAAAVggAAAAAAAABAAAAPVUIAAAAAAAAVQgAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcIAAAAAAAAVwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9038,
					4,
					"left_delete",
					null,
					"BAAAAMQIAAAAAAAAxAgAAAAAAAABAAAAYsMIAAAAAAAAwwgAAAAAAAABAAAAIMIIAAAAAAAAwggAAAAAAAABAAAALMEIAAAAAAAAwQgAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUIAAAAAAAAxQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9039,
					1,
					"insert",
					{
						"characters": "...r.sort"
					},
					"CQAAAMEIAAAAAAAAwggAAAAAAAAAAAAAwggAAAAAAADDCAAAAAAAAAAAAADDCAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAxQgAAAAAAAAAAAAAxQgAAAAAAADGCAAAAAAAAAAAAADGCAAAAAAAAMcIAAAAAAAAAAAAAMcIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADJCAAAAAAAAAAAAADJCAAAAAAAAMoIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEIAAAAAAAAwQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9040,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMoIAAAAAAAAzAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoIAAAAAAAAyggAAAAAAAAAAAAAAADwvw"
				],
				[
					9047,
					1,
					"paste",
					null,
					"AgAAALQHAAAAAAAAvwcAAAAAAAAAAAAAvwcAAAAAAAC/BwAAAAAAAAQAAABhLCBi",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQHAAAAAAAAuAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9054,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AgAAAJoIAAAAAAAAmwgAAAAAAAAAAAAAmwgAAAAAAACbCAAAAAAAAAYAAAAge2EsYn0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoIAAAAAAAAoAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9057,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AgAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACIBwAAAAAAAAUAAAB7YSxifQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9129,
					1,
					"paste",
					null,
					"AgAAAJEGAAAAAAAAnwYAAAAAAAAAAAAAnwYAAAAAAACfBgAAAAAAAA4AAABEcmF3RG90dGVkTGluZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEGAAAAAAAAnwYAAAAAAAAAAAAAAADwvw"
				],
				[
					9229,
					1,
					"insert",
					{
						"characters": "kl"
					},
					"AgAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwHAAAAAAAADAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9230,
					2,
					"left_delete",
					null,
					"AgAAAA0HAAAAAAAADQcAAAAAAAABAAAAbAwHAAAAAAAADAcAAAAAAAABAAAAaw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4HAAAAAAAADgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9231,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwHAAAAAAAADAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9232,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8HAAAAAAAAEAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9233,
					1,
					"insert",
					{
						"characters": "offset"
					},
					"BgAAABAHAAAAAAAAEQcAAAAAAAAAAAAAEQcAAAAAAAASBwAAAAAAAAAAAAASBwAAAAAAABMHAAAAAAAAAAAAABMHAAAAAAAAFAcAAAAAAAAAAAAAFAcAAAAAAAAVBwAAAAAAAAAAAAAVBwAAAAAAABYHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAHAAAAAAAAEAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9234,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABYHAAAAAAAAFwcAAAAAAAAAAAAAFwcAAAAAAAAYBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYHAAAAAAAAFgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9235,
					1,
					"insert",
					{
						"characters": " bew"
					},
					"BAAAABgHAAAAAAAAGQcAAAAAAAAAAAAAGQcAAAAAAAAaBwAAAAAAAAAAAAAaBwAAAAAAABsHAAAAAAAAAAAAABsHAAAAAAAAHAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgHAAAAAAAAGAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9236,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwHAAAAAAAAHQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwHAAAAAAAAHAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9237,
					4,
					"left_delete",
					null,
					"BAAAABwHAAAAAAAAHAcAAAAAAAABAAAAIBsHAAAAAAAAGwcAAAAAAAABAAAAdxoHAAAAAAAAGgcAAAAAAAABAAAAZRkHAAAAAAAAGQcAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0HAAAAAAAAHQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9238,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAABkHAAAAAAAAGgcAAAAAAAAAAAAAGgcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkHAAAAAAAAGQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9239,
					1,
					"insert",
					{
						"characters": " Point"
					},
					"BgAAABwHAAAAAAAAHQcAAAAAAAAAAAAAHQcAAAAAAAAeBwAAAAAAAAAAAAAeBwAAAAAAAB8HAAAAAAAAAAAAAB8HAAAAAAAAIAcAAAAAAAAAAAAAIAcAAAAAAAAhBwAAAAAAAAAAAAAhBwAAAAAAACIHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwHAAAAAAAAHAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9240,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACIHAAAAAAAAJAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIHAAAAAAAAIgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9242,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACQHAAAAAAAAJQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQHAAAAAAAAJAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9243,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAACUHAAAAAAAAJgcAAAAAAAAAAAAAJgcAAAAAAAAnBwAAAAAAAAAAAAAnBwAAAAAAACgHAAAAAAAAAAAAACgHAAAAAAAAKQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUHAAAAAAAAJQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9244,
					1,
					"insert",
					{
						"characters": " size"
					},
					"BQAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkHAAAAAAAAKQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9245,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAC4HAAAAAAAALwcAAAAAAAAAAAAALwcAAAAAAAAwBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4HAAAAAAAALgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9246,
					1,
					"insert",
					{
						"characters": " enw"
					},
					"BAAAADAHAAAAAAAAMQcAAAAAAAAAAAAAMQcAAAAAAAAyBwAAAAAAAAAAAAAyBwAAAAAAADMHAAAAAAAAAAAAADMHAAAAAAAANAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAHAAAAAAAAMAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9247,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQHAAAAAAAANQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQHAAAAAAAANAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9248,
					4,
					"left_delete",
					null,
					"BAAAADQHAAAAAAAANAcAAAAAAAABAAAAIDMHAAAAAAAAMwcAAAAAAAABAAAAdzIHAAAAAAAAMgcAAAAAAAABAAAAbjEHAAAAAAAAMQcAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUHAAAAAAAANQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9249,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAADEHAAAAAAAAMgcAAAAAAAAAAAAAMgcAAAAAAAAzBwAAAAAAAAAAAAAzBwAAAAAAADQHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEHAAAAAAAAMQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9250,
					1,
					"insert",
					{
						"characters": " Size"
					},
					"BQAAADQHAAAAAAAANQcAAAAAAAAAAAAANQcAAAAAAAA2BwAAAAAAAAAAAAA2BwAAAAAAADcHAAAAAAAAAAAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQHAAAAAAAANAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9251,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkHAAAAAAAAOwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkHAAAAAAAAOQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9253,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADsHAAAAAAAAPAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsHAAAAAAAAOwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9254,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADwHAAAAAAAAPQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9255,
					2,
					"left_delete",
					null,
					"AgAAADwHAAAAAAAAPAcAAAAAAAABAAAACjsHAAAAAAAAOwcAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0HAAAAAAAAPQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9256,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADsHAAAAAAAAPAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsHAAAAAAAAOwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9257,
					1,
					"insert",
					{
						"characters": "\n\nlocate"
					},
					"CAAAADwHAAAAAAAAPQcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9258,
					6,
					"left_delete",
					null,
					"BgAAAEMHAAAAAAAAQwcAAAAAAAABAAAAZUIHAAAAAAAAQgcAAAAAAAABAAAAdEEHAAAAAAAAQQcAAAAAAAABAAAAYUAHAAAAAAAAQAcAAAAAAAABAAAAYz8HAAAAAAAAPwcAAAAAAAABAAAAbz4HAAAAAAAAPgcAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQHAAAAAAAARAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9259,
					1,
					"insert",
					{
						"characters": "mat.locateROI"
					},
					"DQAAAD4HAAAAAAAAPwcAAAAAAAAAAAAAPwcAAAAAAABABwAAAAAAAAAAAABABwAAAAAAAEEHAAAAAAAAAAAAAEEHAAAAAAAAQgcAAAAAAAAAAAAAQgcAAAAAAABDBwAAAAAAAAAAAABDBwAAAAAAAEQHAAAAAAAAAAAAAEQHAAAAAAAARQcAAAAAAAAAAAAARQcAAAAAAABGBwAAAAAAAAAAAABGBwAAAAAAAEcHAAAAAAAAAAAAAEcHAAAAAAAASAcAAAAAAAAAAAAASAcAAAAAAABJBwAAAAAAAAAAAABJBwAAAAAAAEoHAAAAAAAAAAAAAEoHAAAAAAAASwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4HAAAAAAAAPgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9260,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsHAAAAAAAATQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsHAAAAAAAASwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9261,
					1,
					"insert",
					{
						"characters": "off"
					},
					"AwAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAABOBwAAAAAAAE8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwHAAAAAAAATAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9262,
					3,
					"left_delete",
					null,
					"AwAAAE4HAAAAAAAATgcAAAAAAAABAAAAZk0HAAAAAAAATQcAAAAAAAABAAAAZkwHAAAAAAAATAcAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8HAAAAAAAATwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9263,
					1,
					"insert",
					{
						"characters": "size,"
					},
					"BQAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAABOBwAAAAAAAE8HAAAAAAAAAAAAAE8HAAAAAAAAUAcAAAAAAAAAAAAAUAcAAAAAAABRBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwHAAAAAAAATAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9264,
					1,
					"insert",
					{
						"characters": " offset"
					},
					"BwAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAAVQcAAAAAAABWBwAAAAAAAAAAAABWBwAAAAAAAFcHAAAAAAAAAAAAAFcHAAAAAAAAWAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEHAAAAAAAAUQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9266,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFkHAAAAAAAAWgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkHAAAAAAAAWQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9267,
					1,
					"insert",
					{
						"characters": "\n\nconsole.log"
					},
					"DQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAAWwcAAAAAAABcBwAAAAAAAAAAAABcBwAAAAAAAF0HAAAAAAAAAAAAAF0HAAAAAAAAXgcAAAAAAAAAAAAAXgcAAAAAAABfBwAAAAAAAAAAAABfBwAAAAAAAGAHAAAAAAAAAAAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAABiBwAAAAAAAGMHAAAAAAAAAAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAABlBwAAAAAAAGYHAAAAAAAAAAAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoHAAAAAAAAWgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9268,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGcHAAAAAAAAaQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcHAAAAAAAAZwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9269,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGgHAAAAAAAAagcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgHAAAAAAAAaAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9270,
					1,
					"insert",
					{
						"characters": "ROI"
					},
					"AwAAAGkHAAAAAAAAagcAAAAAAAAAAAAAagcAAAAAAABrBwAAAAAAAAAAAABrBwAAAAAAAGwHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkHAAAAAAAAaQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9272,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0HAAAAAAAAbgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0HAAAAAAAAbQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9273,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4HAAAAAAAAbwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4HAAAAAAAAbgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9274,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG8HAAAAAAAAcQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8HAAAAAAAAbwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9275,
					1,
					"insert",
					{
						"characters": "offset,size"
					},
					"CwAAAHAHAAAAAAAAcQcAAAAAAAAAAAAAcQcAAAAAAAByBwAAAAAAAAAAAAByBwAAAAAAAHMHAAAAAAAAAAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAAdAcAAAAAAAB1BwAAAAAAAAAAAAB1BwAAAAAAAHYHAAAAAAAAAAAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAHAAAAAAAAcAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9277,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH0HAAAAAAAAfgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0HAAAAAAAAfQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9282,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAACMHAAAAAAAAJAcAAAAAAAAAAAAAJAcAAAAAAAAlBwAAAAAAAAAAAAAlBwAAAAAAACYHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMHAAAAAAAAIwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9286,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAAD0HAAAAAAAAPgcAAAAAAAAAAAAAPgcAAAAAAAA/BwAAAAAAAAAAAAA/BwAAAAAAAEAHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0HAAAAAAAAPQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9292,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAFIHAAAAAAAAUwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIHAAAAAAAAUgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9293,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAABVBwAAAAAAAFYHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMHAAAAAAAAUwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9294,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYHAAAAAAAAVwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYHAAAAAAAAVgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9296,
					1,
					"insert",
					{
						"characters": "=s"
					},
					"AgAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABdBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsHAAAAAAAAWwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9298,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAF8HAAAAAAAAYAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8HAAAAAAAAXwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9299,
					1,
					"left_delete",
					null,
					"AQAAAF8HAAAAAAAAXwcAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9300,
					1,
					"insert",
					{
						"characters": "o=>"
					},
					"AwAAAF8HAAAAAAAAYAcAAAAAAAAAAAAAYAcAAAAAAABhBwAAAAAAAAAAAABhBwAAAAAAAGIHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8HAAAAAAAAXwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9303,
					1,
					"insert",
					{
						"characters": "=0"
					},
					"AgAAAGgHAAAAAAAAaQcAAAAAAAAAAAAAaQcAAAAAAABqBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgHAAAAAAAAaAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9313,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAEUHAAAAAAAARgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIHAAAAAAAAQgcAAAAAAAAAAAAAAMB3QA"
				],
				[
					9314,
					1,
					"insert",
					{
						"characters": " submatrix"
					},
					"CgAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAASgcAAAAAAABLBwAAAAAAAAAAAABLBwAAAAAAAEwHAAAAAAAAAAAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAABOBwAAAAAAAE8HAAAAAAAAAAAAAE8HAAAAAAAAUAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYHAAAAAAAARgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9315,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAFAHAAAAAAAAUQcAAAAAAAAAAAAAUQcAAAAAAABSBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAHAAAAAAAAUAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9316,
					1,
					"left_delete",
					null,
					"AQAAAFEHAAAAAAAAUQcAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIHAAAAAAAAUgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9317,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFEHAAAAAAAAUgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEHAAAAAAAAUQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9318,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFIHAAAAAAAAUwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIHAAAAAAAAUgcAAAAAAAAAAAAAAADwvw"
				],
				[
					9319,
					1,
					"insert",
					{
						"characters": "mat;:"
					},
					"BQAAAFMHAAAAAAAAVAcAAAAAAAAAAAAAVAcAAAAAAABVBwAAAAAAAAAAAABVBwAAAAAAAFYHAAAAAAAAAAAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABYBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMHAAAAAAAAUwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9320,
					1,
					"left_delete",
					null,
					"AQAAAFcHAAAAAAAAVwcAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9323,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAEcHAAAAAAAASAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcHAAAAAAAARwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9326,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAFEHAAAAAAAAUgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEHAAAAAAAAUQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9330,
					1,
					"insert",
					{
						"characters": ",submatrix"
					},
					"CgAAAKQHAAAAAAAApQcAAAAAAAAAAAAApQcAAAAAAACmBwAAAAAAAAAAAACmBwAAAAAAAKcHAAAAAAAAAAAAAKcHAAAAAAAAqAcAAAAAAAAAAAAAqAcAAAAAAACpBwAAAAAAAAAAAACpBwAAAAAAAKoHAAAAAAAAAAAAAKoHAAAAAAAAqwcAAAAAAAAAAAAAqwcAAAAAAACsBwAAAAAAAAAAAACsBwAAAAAAAK0HAAAAAAAAAAAAAK0HAAAAAAAArgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQHAAAAAAAApAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9342,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALEHAAAAAAAAswcAAAAAAAAAAAAADAcAAAAAAAAOBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEHAAAAAAAADAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9354,
					1,
					"insert",
					{
						"characters": "mat.rows"
					},
					"CAAAAA0IAAAAAAAADggAAAAAAAAAAAAADggAAAAAAAAPCAAAAAAAAAAAAAAPCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAEQgAAAAAAAAAAAAAEQgAAAAAAAASCAAAAAAAAAAAAAASCAAAAAAAABMIAAAAAAAAAAAAABMIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAVCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0IAAAAAAAADQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9355,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABUIAAAAAAAAFggAAAAAAAAAAAAAFggAAAAAAAAXCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUIAAAAAAAAFQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9356,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcIAAAAAAAAGAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcIAAAAAAAAFwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9360,
					1,
					"left_delete",
					null,
					"AQAAACkIAAAAAAAAKQgAAAAAAAAWAAAAY29uc29sZS5sb2coYXhpcywgcik7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkIAAAAAAAAPwgAAAAAAAAAAAAAAAAAAA"
				],
				[
					9367,
					1,
					"insert",
					{
						"characters": "mat.rows-"
					},
					"CQAAAO0IAAAAAAAA7ggAAAAAAAAAAAAA7ggAAAAAAADvCAAAAAAAAAAAAADvCAAAAAAAAPAIAAAAAAAAAAAAAPAIAAAAAAAA8QgAAAAAAAAAAAAA8QgAAAAAAADyCAAAAAAAAAAAAADyCAAAAAAAAPMIAAAAAAAAAAAAAPMIAAAAAAAA9AgAAAAAAAAAAAAA9AgAAAAAAAD1CAAAAAAAAAAAAAD1CAAAAAAAAPYIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0IAAAAAAAA7QgAAAAAAAAAAAAAAADwvw"
				],
				[
					9369,
					1,
					"insert",
					{
						"characters": "matr"
					},
					"BAAAAP8IAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAABCQAAAAAAAAAAAAABCQAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAwkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8IAAAAAAAA/wgAAAAAAAAAAAAAAADwvw"
				],
				[
					9370,
					1,
					"left_delete",
					null,
					"AQAAAAIJAAAAAAAAAgkAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMJAAAAAAAAAwkAAAAAAAAAAAAAAADwvw"
				],
				[
					9371,
					1,
					"insert",
					{
						"characters": ".rows-"
					},
					"BgAAAAIJAAAAAAAAAwkAAAAAAAAAAAAAAwkAAAAAAAAECQAAAAAAAAAAAAAECQAAAAAAAAUJAAAAAAAAAAAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAgJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIJAAAAAAAAAgkAAAAAAAAAAAAAAADwvw"
				],
				[
					9381,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAANBwAAAAAAAKkAAAAvKmxldCBvZmZzZXQgPSBuZXcgUG9pbnQoMCwwKTsKbGV0IHNpemUgPSBuZXcgU2l6ZSgwLDApOwpsZXQge3N1Ym1hdHJpeH0gPSBtYXQ7CgptYXQubG9jYXRlUk9JKHMgPT4gc2l6ZT1zLCBvPT5vZmZzZXQ9MCk7Cgpjb25zb2xlLmxvZygnUk9JJywge29mZnNldCxzaXplLHN1Ym1hdHJpeH0pOyov",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUHAAAAAAAADAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9413,
					1,
					"left_delete",
					null,
					"AQAAAAwHAAAAAAAADAcAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0HAAAAAAAADQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9414,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwHAAAAAAAADAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9415,
					1,
					"insert",
					{
						"characters": " i=0;"
					},
					"BQAAAA8HAAAAAAAAEAcAAAAAAAAAAAAAEAcAAAAAAAARBwAAAAAAAAAAAAARBwAAAAAAABIHAAAAAAAAAAAAABIHAAAAAAAAEwcAAAAAAAAAAAAAEwcAAAAAAAAUBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8HAAAAAAAADwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9435,
					1,
					"insert",
					{
						"characters": "\ni++;"
					},
					"BgAAADQJAAAAAAAANQkAAAAAAAAAAAAANQkAAAAAAAA9CQAAAAAAAAAAAAA9CQAAAAAAAD4JAAAAAAAAAAAAAD4JAAAAAAAAPwkAAAAAAAAAAAAAPwkAAAAAAABACQAAAAAAAAAAAABACQAAAAAAAEEJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQJAAAAAAAANAkAAAAAAAAAAAAAAADwvw"
				],
				[
					9440,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOkIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYIAAAAAAAA5ggAAAAAAAAAAAAAAABUQA"
				],
				[
					9441,
					3,
					"left_delete",
					null,
					"AwAAAOgIAAAAAAAA6AgAAAAAAAABAAAAKOcIAAAAAAAA5wgAAAAAAAABAAAAZuYIAAAAAAAA5ggAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkIAAAAAAAA6QgAAAAAAAAAAAAAAADwvw"
				],
				[
					9442,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADvCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYIAAAAAAAA5ggAAAAAAAAAAAAAAADwvw"
				],
				[
					9444,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAOYIAAAAAAAA5wgAAAAAAAAAAAAA5wgAAAAAAADoCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYIAAAAAAAA5ggAAAAAAAAAAAAAAABUQA"
				],
				[
					9445,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOgIAAAAAAAA6ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgIAAAAAAAA6AgAAAAAAAAAAAAAAADwvw"
				],
				[
					9446,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAOkIAAAAAAAA6ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkIAAAAAAAA6QgAAAAAAAAAAAAAAADwvw"
				],
				[
					9447,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoIAAAAAAAA6ggAAAAAAAAAAAAAAADwvw"
				],
				[
					9448,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA7QgAAAAAAADuCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwIAAAAAAAA7AgAAAAAAAAAAAAAAADwvw"
				],
				[
					9450,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8IAAAAAAAA8AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8IAAAAAAAA7wgAAAAAAAAAAAAAAADwvw"
				],
				[
					9451,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPAIAAAAAAAA8ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAIAAAAAAAA8AgAAAAAAAAAAAAAAADwvw"
				],
				[
					9452,
					1,
					"right_delete",
					null,
					"AQAAAPEIAAAAAAAA8QgAAAAAAAABAAAAfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEIAAAAAAAA8QgAAAAAAAAAAAAAAADwvw"
				],
				[
					9455,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEgJAAAAAAAASQkAAAAAAAAAAAAASQkAAAAAAABRCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgJAAAAAAAASAkAAAAAAAD////////vfw"
				],
				[
					9456,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFEJAAAAAAAAUgkAAAAAAAAAAAAAUgkAAAAAAABTCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEJAAAAAAAAUQkAAAAAAAAAAAAAAADwvw"
				],
				[
					9460,
					1,
					"cut",
					null,
					"AQAAAOYIAAAAAAAA5ggAAAAAAAAUAAAAaWYoaSAmIDEpIHsKICAgICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYIAAAAAAAA+ggAAAAAAAAAAAAAAABUQA"
				],
				[
					9461,
					1,
					"paste",
					null,
					"AQAAAOYIAAAAAAAA+ggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYIAAAAAAAA5ggAAAAAAAAAAAAAAADwvw"
				],
				[
					9463,
					1,
					"paste",
					null,
					"AQAAAMUHAAAAAAAA2QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUHAAAAAAAAxQcAAAAAAAAAAAAAAABUQA"
				],
				[
					9466,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAACcIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAwCAAAAAAAAAAAAAAwCAAAAAAAADEIAAAAAAAAAAAAACgIAAAAAAAAKAgAAAAAAAAIAAAAICAgICAgICAoCAAAAAAAAC4IAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcIAAAAAAAAJwgAAAAAAAD////////vfw"
				],
				[
					9471,
					1,
					"insert",
					{
						"characters": "\ni++;"
					},
					"BgAAAC8IAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAA2CAAAAAAAAAAAAAA2CAAAAAAAADcIAAAAAAAAAAAAADcIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA5CAAAAAAAAAAAAAA5CAAAAAAAADoIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8IAAAAAAAALwgAAAAAAAAAAAAAAIBRQA"
				],
				[
					9474,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIFQAAaW1wb3J0IHsgUG9pbnQsIFNpemUsIFJlY3QsIExpbmUsIFRpY2tNZXRlciwgTWF0LCBEcmF3LCBMSU5FX0FBLCBMSU5FXzgsIENWX1JHQiB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IHJhbmdlLCBtb2QgfSBmcm9tICd1dGlsJzsKCmV4cG9ydCBjb25zdCBYID0gU3ltYm9sLmZvcigneCcpOwpleHBvcnQgY29uc3QgWSA9IFN5bWJvbC5mb3IoJ3knKTsKCmNvbnN0IFBFUlAgPSB7IFtYXTogWSwgW1ldOiBYIH07CmNvbnN0IENPT1JEID0geyBbWF06ICd4JywgW1ldOiAneScgfTsKY29uc3QgU0laRSA9IHsgW1hdOiAnd2lkdGgnLCBbWV06ICdoZWlnaHQnIH07CgpleHBvcnQgZnVuY3Rpb24gTWF4KHN0b3BzLCBheGlzLCBzdHlsZSkgewogIGxldCB2YWx1ZXM7CiAgaWYoc3R5bGUpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkoc3RvcHNbMF0pKSBzdG9wcyA9IHN0b3BzLm1hcCgoW2xhYmVsXSkgPT4gbGFiZWwpOwoKICAgIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0eWxlLnNpemUoc3RvcClbU0laRVtheGlzXV0pOwogICAgY29uc29sZS5sb2coJ01heCcsIHZhbHVlcyk7CiAgfSBlbHNlIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0b3BbQ09PUkRbYXhpc11dKTsKCiAgcmV0dXJuIE1hdGgubWF4KC4uLnZhbHVlcyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBBeGlzUG9pbnRzKHN0b3BzLCBpbmMgPSAxMCwgYXhpcywgc3R5bGUsIHNpemUpIHsKICBpZih0eXBlb2Ygc3RvcHMgPT0gJ251bWJlcicpIHN0b3BzID0gcmFuZ2UoMCwgc3RvcHMsIGluYyk7CiAgbGV0IHBvc2l0aW9ucyA9IFtdOwogIGxldCBwb2ludHMgPSByYW5nZSgwLCBNYXRoLmFicyhzdG9wcy5sZW5ndGggLSAxKSk7CiAgbGV0IHNpemVzID0gW107CiAgbGV0IG4gPSBwb2ludHMubGVuZ3RoOwoKICBsZXQgbWF4ID0gTWF4KHN0b3BzLCBQRVJQW2F4aXNdLCBzdHlsZSk7CiAgbGV0IHBvcyA9IG1heCArIDIgKyAxMCArIChheGlzID09IFggPyAxIDogMCk7CiAgY29uc29sZS5sb2coJ0F4aXNQb2ludHMnLCB7IGF4aXMsIG1heCwgcG9zIH0pOwoKICBmb3IobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICBsZXQgcG9pbnQgPSBwb2ludHNbaV07CiAgICBsZXQgeSA9IGF4aXMgPT0gWSA/IHBvaW50IDogcG9zOwogICAgbGV0IHggPSBheGlzID09IFkgPyBwb3MgOiBwb2ludDsKCiAgICBwb3NpdGlvbnMucHVzaChbc3RvcHNbaV0sIG5ldyBQb2ludCh4LCB5KV0pOwogIH0KCiAgY29uc29sZS5sb2coJ3NpemVzJywgc2l6ZXMpOwogIHJldHVybiBwb3NpdGlvbnM7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3TGluZShtYXQsIHN0YXJ0LCBlbmQsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApLCB3aWR0aCA9IDEsIGxpbmVUeXBlID0gTElORV9BQSkgewogIGxldCBwb2ludHMgPSBbc3RhcnQsIGVuZF0ubWFwKCh7IHgsIHkgfSkgPT4gW21vZCh4LCBtYXQuY29scyksIG1hdC5yb3dzIC0gbW9kKHksIG1hdC5yb3dzKV0pOwoKICBpZihsaW5lVHlwZSA9PSBMSU5FX0FBKSB0aHJvdyBuZXcgRXJyb3IoJ0xJTkVfQUEnKTsKCiAgLy9jb25zb2xlLmxvZygnRHJhd0xpbmUnLCBpbnNwZWN0KHsgcG9pbnRzLCB3aWR0aCwgbGluZVR5cGUgfSwgeyBjb21wYWN0OiAyIH0pKTsKCiAgRHJhdy5saW5lKG1hdCwgLi4ucG9pbnRzLCBjb2xvciwgd2lkdGgsIGxpbmVUeXBlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdEb3R0ZWRMaW5lKG1hdCwgc3RhcnQsIGVuZCwgY29sb3IgPSBDVl9SR0IoMCwgMCwgMCkpIHsKICBsZXQgYXhpcz0gc3RhcnQueCA9PSBlbmQueCA/IFkgOiBzdGFydC55ID09IGVuZC55ID8gWCA6IG51bGw7CmxldCBpPTA7CiAgc3dpdGNoKGF4aXMpIHsKICAgIGNhc2UgWDogewogICAgICBsZXQgciA9IFtzdGFydC54LCBlbmQueF07CiAgICAgIGxldCByb3cgPSBtYXQucm93KG1hdC5yb3dzIC0gc3RhcnQueSk7CiAgICAgIAoKICAgICAgZm9yKGxldCBwaXhlbCBvZiByb3cuY29sUmFuZ2UoLi4uci5zb3J0KCkpKSB7CiAgICAgICAgaWYoaSAmIDEpIHsKICAgICAgICBwaXhlbFswXSA9IGNvbG9yWzBdOwogICAgICAgIHBpeGVsWzFdID0gY29sb3JbMV07CiAgICAgICAgcGl4ZWxbMl0gPSBjb2xvclsyXTsKICAgICAgfQogICAgICBpKys7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFk6IHsKICAgICAgbGV0IHIgPSBbbWF0LnJvd3Mtc3RhcnQueSwgbWF0LnJvd3MtZW5kLnldOwogICAgICBsZXQgY29sID0gbWF0LmNvbChzdGFydC54KTsKICAKY29uc29sZS5sb2coYXhpcyxyKTsKCiAgICAgIGZvcihsZXQgcGl4ZWwgb2YgY29sLnJvd1JhbmdlKC4uLnIuc29ydCgpKSkgewogICAgICAgIGlmKGkgJiAxKSB7CiAgICAgICAgcGl4ZWxbMF0gPSBjb2xvclswXTsKICAgICAgICBwaXhlbFsxXSA9IGNvbG9yWzFdOwogICAgICAgIHBpeGVsWzJdID0gY29sb3JbMl07CiAgICAgICAgIH0KICAgICAgICBpKys7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd1RleHQobWF0LCB0ZXh0LCBwb3MsIHN0eWxlLCBjb2xvciA9IENWX1JHQigwLCAwLCAwKSkgewogIGxldCBwdCA9IG5ldyBQb2ludChwb3MueCwgbWF0LnJvd3MgLSBwb3MueSk7CgogIHN0eWxlLmRyYXcobWF0LCB0ZXh0LCBwdCwgY29sb3IpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0F4aXMobWF0LCBheGlzLCByZWN0LCBzdHlsZSkgewogIGxldCB7IHgxLCB5MSwgeDIsIHkyIH0gPSByZWN0OwoKICBsZXQgcG9pbnRzID0gYXhpcy5tYXAoKFtsYWJlbCwgcG9pbnRdKSA9PiBwb2ludCk7CiAgbGV0IGRpZmYgPSBQb2ludC5kaWZmKHBvaW50c1sxXSwgcG9pbnRzWzBdKTsKICBsZXQgbm9ybSA9IGRpZmYubm9ybSgpOwogIGxldCBwcm9wID0gbm9ybS54ID8gWCA6IFk7CiAgbGV0IGFkZCA9IHByb3AgPT0gWCA/IG5ldyBQb2ludCgwLCAtMTApIDogbmV3IFBvaW50KC0xMCwgMCk7CiAgbGV0IG9mZnNldCA9IHByb3AgPT0gWCA/IG5ldyBQb2ludChyZWN0LngsIDApIDogbmV3IFBvaW50KDAsIHJlY3QueSk7CgogIGxldCBtYXggPSBNYXgocG9pbnRzLCBwcm9wKTsKCiAgbGV0IG1heENvb3JkID0gcmVjdFtTSVpFW3Byb3BdXTsKICBsZXQgZmFjdG9yID0gbWF4Q29vcmQgLyBtYXg7CiAgbGV0IG11bHRpcGxpY2F0b3IgPSBwcm9wID09IFggPyBuZXcgUG9pbnQoZmFjdG9yLCAxKSA6IG5ldyBQb2ludCgxLCBmYWN0b3IpOwoKICBjb25zb2xlLmxvZygnRHJhd0F4aXMnLCB7IG1heCwgZmFjdG9yLCBtdWx0aXBsaWNhdG9yIH0pOwogIHBvaW50cyA9IHBvaW50cy5tYXAocCA9PiBwLnByb2QobXVsdGlwbGljYXRvcikucm91bmQoKSk7CiAgcG9pbnRzID0gcG9pbnRzLm1hcChwID0+IHAuc3VtKG9mZnNldCkpOwogIGNvbnNvbGUubG9nKCdEcmF3QXhpcycsIHsgcG9pbnRzIH0pOwoKICBsZXQgZmlyc3QgPSBwb2ludHNbMF0sCiAgICBsYXN0ID0gcG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXTsKCiAgbGV0IGkgPSAwOwogIGZvcihsZXQgcG9pbnQgb2YgcG9pbnRzKSB7CiAgICBsZXQgdGV4dCA9IGF4aXNbaV1bMF0gKyAnJzsKICAgIGxldCBwb2ludHMgPSBbXTsKCiAgICBsZXQgZGltZW5zaW9ucyA9IHN0eWxlLnNpemUodGV4dCk7CiAgICBsZXQgcG9pbnQyID0gcG9pbnQuc3VtKGFkZCk7CgogICAgbGV0IGRpc3AgPSB7IFtYXTogbmV3IFBvaW50KC1kaW1lbnNpb25zLndpZHRoIC8gMiArIDEsIDApLCBbWV06IG5ldyBQb2ludCgtZGltZW5zaW9ucy53aWR0aCwgZGltZW5zaW9ucy5oZWlnaHQgLyAyICsgMikgfVtwcm9wXTsKICAgIGxldCB0ZXh0cG9zID0gcG9pbnQyLnN1bShkaXNwLmNlaWwoKSk7CgogICAgRHJhd1RleHQobWF0LCB0ZXh0LCB0ZXh0cG9zLCBzdHlsZSwgQ1ZfUkdCKDAsIDAsIDApKTsKCiAgICBsZXQgcG9pbnQzID0geyBbWF06IG5ldyBQb2ludChwb2ludC54LCByZWN0LnkyKSwgW1ldOiBuZXcgUG9pbnQocmVjdC54MiwgcG9pbnQueSkgfVtwcm9wXTsKICAgIC8vIGNvbnNvbGUubG9nKCdEcmF3QXhpcycscHJvcCwge3BvaW50LHBvaW50MiwgcG9pbnQzfSk7CgogICAgRHJhd0xpbmUobWF0LCBwb2ludCwgcG9pbnQyLCBDVl9SR0IoMCwgMCwgMCksIDEsIExJTkVfOCk7CgogICAgaWYoaSA+IDApIERyYXdEb3R0ZWRMaW5lKG1hdCwgcG9pbnQzLCBwb2ludCwgQ1ZfUkdCKDIwMCwgMjAwLCAyMDApLCAxLCBMSU5FXzgpOwoKICAgICsraTsKICB9CgogIERyYXdMaW5lKG1hdCwgZmlyc3QsIGxhc3QsIENWX1JHQigwLCAwLCAwKSwgMSwgTElORV84KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdDcm9zcyhtYXQsIHBvaW50LCByYWRpdXMgPSAxMCkgewogIERyYXdMaW5lKG1hdCwgcG9pbnQuc3VtKFstMTAsIC0xMF0pLCBwb2ludC5zdW0oWzEwLCAxMF0pLCBbMCwgMCwgMjU1XSwgMiwgTElORV84KTsKICBEcmF3TGluZShtYXQsIHBvaW50LnN1bShbMTAsIC0xMF0pLCBwb2ludC5zdW0oWy0xMCwgMTBdKSwgWzAsIDAsIDI1NV0sIDIsIExJTkVfOCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBPcmlnaW4obWF0LCB4QXhpcywgeUF4aXMpIHsKICBjb25zdCB7IHNpemUgfSA9IG1hdDsKCiAgbGV0IHsgeCB9ID0geUF4aXNbMF1bMV07CiAgbGV0IHsgeSB9ID0geEF4aXNbMF1bMV07CgogIHJldHVybiBuZXcgUG9pbnQoeCwgeSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBGbGlwKG1hdCwgZ2VvbWV0cnkpIHsKICBsZXQgY3RvciA9IGdlb21ldHJ5LmNvbnN0cnVjdG9yOwogIGdlb21ldHJ5ID0gZ2VvbWV0cnkuY2xvbmUoKTsKICBpZihnZW9tZXRyeSBpbnN0YW5jZW9mIFJlY3QgfHwgZ2VvbWV0cnkgaW5zdGFuY2VvZiBMaW5lKSB7CiAgICBnZW9tZXRyeS55MSA9IG1hdC5yb3dzIC0gZ2VvbWV0cnkueTE7CiAgICBnZW9tZXRyeS55MiA9IG1hdC5yb3dzIC0gZ2VvbWV0cnkueTI7CiAgfSBlbHNlIGlmKGdlb21ldHJ5IGluc3RhbmNlb2YgUG9pbnQpIHsKICAgIGdlb21ldHJ5LnkgPSBtYXQucm93cyAtIGdlb21ldHJ5Lnk7CiAgfQogIHJldHVybiBnZW9tZXRyeTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEdldFJlY3QobWF0LCB4QXhpcywgeUF4aXMsIHN0eWxlKSB7CiAgY29uc29sZS5sb2coJ0dldFJlY3QnLCB4QXhpcywgeUF4aXMpOwogIGxldCBvcmlnaW4gPSAvKmFyZ3NbMF0gaW5zdGFuY2VvZiBQb2ludCA/IGFyZ3NbMF0gOiAqLyBPcmlnaW4obWF0LCB4QXhpcywgeUF4aXMpOwoKICBsZXQgZW5kID0gbmV3IFBvaW50KG1hdC5jb2xzIC0gMSAtIG9yaWdpbi54LCBtYXQucm93cyAtIDEgLSBvcmlnaW4ueSk7CgogIGxldCB5QWRkID0gTWF0aC5mbG9vcihNYXgoeUF4aXMsIFksIHN0eWxlKSAvIDIpOwogIGxldCB4QWRkID0gTWF0aC5jZWlsKE1heCh4QXhpcywgWCwgc3R5bGUpIC8gMik7CgogIHJldHVybiBuZXcgUmVjdCguLi5vcmlnaW4sIC4uLmVuZC5kaWZmKHhBZGQsIHlBZGQpKTsKfQoAAAAAAAAAAB8VAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoIAAAAAAAAOggAAAAAAAAAAAAAAADwvw"
				],
				[
					9485,
					1,
					"paste",
					null,
					"AgAAAIEGAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACDCQAAAAAAAD4DAABleHBvcnQgZnVuY3Rpb24gRHJhd0RvdHRlZExpbmUobWF0LCBzdGFydCwgZW5kLCBjb2xvciA9IENWX1JHQigwLCAwLCAwKSkgewogIGxldCBheGlzID0gc3RhcnQueCA9PSBlbmQueCA/IFkgOiBzdGFydC55ID09IGVuZC55ID8gWCA6IG51bGw7CiAgbGV0IGkgPSAwOwogIHN3aXRjaCAoYXhpcykgewogICAgY2FzZSBYOiB7CiAgICAgIGxldCByID0gW3N0YXJ0LngsIGVuZC54XTsKICAgICAgbGV0IHJvdyA9IG1hdC5yb3cobWF0LnJvd3MgLSBzdGFydC55KTsKCiAgICAgIGZvcihsZXQgcGl4ZWwgb2Ygcm93LmNvbFJhbmdlKC4uLnIuc29ydCgpKSkgewogICAgICAgIGlmKGkgJiAxKSB7CiAgICAgICAgICBwaXhlbFswXSA9IGNvbG9yWzBdOwogICAgICAgICAgcGl4ZWxbMV0gPSBjb2xvclsxXTsKICAgICAgICAgIHBpeGVsWzJdID0gY29sb3JbMl07CiAgICAgICAgfQogICAgICAgIGkrKzsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgWTogewogICAgICBsZXQgciA9IFttYXQucm93cyAtIHN0YXJ0LnksIG1hdC5yb3dzIC0gZW5kLnldOwogICAgICBsZXQgY29sID0gbWF0LmNvbChzdGFydC54KTsKCiAgICAgIGNvbnNvbGUubG9nKGF4aXMsIHIpOwoKICAgICAgZm9yKGxldCBwaXhlbCBvZiBjb2wucm93UmFuZ2UoLi4uci5zb3J0KCkpKSB7CiAgICAgICAgaWYoaSAmIDEpIHsKICAgICAgICAgIHBpeGVsWzBdID0gY29sb3JbMF07CiAgICAgICAgICBwaXhlbFsxXSA9IGNvbG9yWzFdOwogICAgICAgICAgcGl4ZWxbMl0gPSBjb2xvclsyXTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogIH0KfQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEGAAAAAAAAvwkAAAAAAAAAAAAAAADwvw"
				],
				[
					9488,
					2,
					"delete_blank_lines",
					{
						"surplus": true
					},
					"AgAAAFoIAAAAAAAAagkAAAAAAAAQAQAAIFttYXQucm93cyAtIHN0YXJ0LnksIG1hdC5yb3dzIC0gZW5kLnldOwogICAgICBsZXQgY29sID0gbWF0LmNvbChzdGFydC54KTsKCiAgICAgIGNvbnNvbGUubG9nKGF4aXMsIHIpOwoKICAgICAgZm9yKGxldCBwIG9mIGNvbC5yb3dSYW5nZSguLi5yLnNvcnQoKSkpIHsKICAgICAgICBpZihpICYgMSkgewogICAgICAgICAgcFswXSA9IGNbMF07CiAgICAgICAgICBwWzFdID0gY1sxXTsKICAgICAgICAgIHBbMl0gPSBjWzJdOwogICAgICAgIH0KICAgICAgICBpKys7CiAgICAgIH1aCAAAAAAAAGoJAAAAAAAAEAEAACBbbWF0LnJvd3MgLSBzdGFydC55LCBtYXQucm93cyAtIGVuZC55XTsKICAgICAgbGV0IGNvbCA9IG1hdC5jb2woc3RhcnQueCk7CgogICAgICBjb25zb2xlLmxvZyhheGlzLCByKTsKCiAgICAgIGZvcihsZXQgcCBvZiBjb2wucm93UmFuZ2UoLi4uci5zb3J0KCkpKSB7CiAgICAgICAgaWYoaSAmIDEpIHsKICAgICAgICAgIHBbMF0gPSBjWzBdOwogICAgICAgICAgcFsxXSA9IGNbMV07CiAgICAgICAgICBwWzJdID0gY1syXTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgICB9",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoIAAAAAAAAagkAAAAAAAAAAAAAAADwvw"
				],
				[
					9489,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAAFoIAAAAAAAAaAkAAAAAAAAQAQAAIFttYXQucm93cyAtIHN0YXJ0LnksIG1hdC5yb3dzIC0gZW5kLnldOwogICAgICBsZXQgY29sID0gbWF0LmNvbChzdGFydC54KTsKCiAgICAgIGNvbnNvbGUubG9nKGF4aXMsIHIpOwoKICAgICAgZm9yKGxldCBwIG9mIGNvbC5yb3dSYW5nZSguLi5yLnNvcnQoKSkpIHsKICAgICAgICBpZihpICYgMSkgewogICAgICAgICAgcFswXSA9IGNbMF07CiAgICAgICAgICBwWzFdID0gY1sxXTsKICAgICAgICAgIHBbMl0gPSBjWzJdOwogICAgICAgIH0KICAgICAgICBpKys7CiAgICAgIH0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoIAAAAAAAAagkAAAAAAAAAAAAAAADwvw"
				],
				[
					9495,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKUIAAAAAAAApggAAAAAAAAAAAAApggAAAAAAACmCAAAAAAAABwAAAAgICAgICBjb25zb2xlLmxvZyhheGlzLCByKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUIAAAAAAAAwQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9500,
					2,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AgAAAEEHAAAAAAAANwgAAAAAAAD3AAAAID0gW3N0YXJ0LngsIGVuZC54XTsKICAgICAgbGV0IHJvdyA9IG1hdC5yb3cobWF0LnJvd3MgLSBzdGFydC55KTsKCiAgICAgIGZvcihsZXQgcCBvZiByb3cuY29sUmFuZ2UoLi4uci5zb3J0KCkpKSB7CiAgICAgICAgaWYoaSAmIDEpIHsKICAgICAgICAgIHBbMF0gPSBjWzBdOwogICAgICAgICAgcFsxXSA9IGNbMV07CiAgICAgICAgICBwWzJdID0gY1syXTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgICB9CiAgICAgIGJyZWFrO0EHAAAAAAAANwgAAAAAAAD2AAAAID0gW3N0YXJ0LngsIGVuZC54XTsKICAgICAgbGV0IHJvdyA9IG1hdC5yb3cobWF0LnJvd3MgLSBzdGFydC55KTsKICAgICAgZm9yKGxldCBwIG9mIHJvdy5jb2xSYW5nZSguLi5yLnNvcnQoKSkpIHsKICAgICAgICBpZihpICYgMSkgewogICAgICAgICAgcFswXSA9IGNbMF07CiAgICAgICAgICBwWzFdID0gY1sxXTsKICAgICAgICAgIHBbMl0gPSBjWzJdOwogICAgICAgIH0KICAgICAgICBpKys7CiAgICAgIH0KICAgICAgYnJlYWs7",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEHAAAAAAAAOAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9524,
					1,
					"cut",
					null,
					"AQAAAA4HAAAAAAAADgcAAAAAAAAGAAAAIGkgPSAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4HAAAAAAAAFAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9531,
					1,
					"paste",
					null,
					"AQAAAM4GAAAAAAAA1AYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
				],
				[
					9532,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANQGAAAAAAAA1QYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQGAAAAAAAA1AYAAAAAAAAAAAAAAADwvw"
				],
				[
					9533,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANUGAAAAAAAA1gYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUGAAAAAAAA1QYAAAAAAAAAAAAAAADwvw"
				],
				[
					9537,
					1,
					"left_delete",
					null,
					"AQAAABMHAAAAAAAAEwcAAAAAAAAHAAAAbGV0OwogIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMHAAAAAAAAGgcAAAAAAAAAAAAAAAA0QA"
				],
				[
					9567,
					1,
					"insert",
					{
						"characters": "a,l"
					},
					"AwAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4GAAAAAAAAzgYAAAAAAAAAAAAAAADwvw"
				],
				[
					9568,
					1,
					"left_delete",
					null,
					"AQAAANAGAAAAAAAA0AYAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEGAAAAAAAA0QYAAAAAAAAAAAAAAADwvw"
				],
				[
					9575,
					1,
					"cut",
					null,
					"AQAAAJMHAAAAAAAAkwcAAAAAAAAZAAAAcm93LmNvbFJhbmdlKC4uLnIuc29ydCgpKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMHAAAAAAAArAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9578,
					1,
					"insert",
					{
						"characters": "\na="
					},
					"BAAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACGBwAAAAAAAAAAAACGBwAAAAAAAIcHAAAAAAAAAAAAAIcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8HAAAAAAAAfwcAAAAAAAD////////vfw"
				],
				[
					9579,
					1,
					"paste",
					null,
					"AQAAAIgHAAAAAAAAoQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgHAAAAAAAAiAcAAAAAAAAAAAAAAADwvw"
				],
				[
					9580,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKEHAAAAAAAAogcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEHAAAAAAAAoQcAAAAAAAAAAAAAAADwvw"
				],
				[
					9583,
					1,
					"cut",
					null,
					"AQAAAKMHAAAAAAAAowcAAAAAAACPAAAAICAgICAgZm9yKGxldCBwIG9mICkgewogICAgICAgIGlmKGkgJiAxKSB7CiAgICAgICAgICBwWzBdID0gY1swXTsKICAgICAgICAgIHBbMV0gPSBjWzFdOwogICAgICAgICAgcFsyXSA9IGNbMl07CiAgICAgICAgfQogICAgICAgIGkrKzsKICAgICAgfQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMHAAAAAAAAMggAAAAAAAAAAAAAAAAAAA"
				],
				[
					9585,
					1,
					"paste",
					null,
					"AQAAANwIAAAAAAAAawkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAAAAA"
				],
				[
					9589,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAACIIAAAAAAAAIwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIIAAAAAAAAIggAAAAAAAAAAAAAAABOQA"
				],
				[
					9591,
					1,
					"insert",
					{
						"characters": "="
					},
					"AgAAACMIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAkCAAAAAAAAA4AAAAgZm9yKGxldCBwIG9mIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMIAAAAAAAAMQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9592,
					1,
					"right_delete",
					null,
					"AQAAACQIAAAAAAAAJAgAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9593,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAACQIAAAAAAAAJQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9595,
					3,
					"left_delete",
					null,
					"AwAAAD8IAAAAAAAAPwgAAAAAAAABAAAAez4IAAAAAAAAPggAAAAAAAABAAAAID0IAAAAAAAAPQgAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAIAAAAAAAAQAgAAAAAAAD////////vfw"
				],
				[
					9596,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD0IAAAAAAAAPggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0IAAAAAAAAPQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9599,
					1,
					"left_delete",
					null,
					"AQAAAD8IAAAAAAAAPwgAAAAAAAB4AAAAICAgICAgICBpZihpICYgMSkgewogICAgICAgICAgcFswXSA9IGNbMF07CiAgICAgICAgICBwWzFdID0gY1sxXTsKICAgICAgICAgIHBbMl0gPSBjWzJdOwogICAgICAgIH0KICAgICAgICBpKys7CiAgICAgIH0K",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8IAAAAAAAAtwgAAAAAAAAAAAAAAAAAAA"
				],
				[
					9607,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAGkIAAAAAAAAaggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkIAAAAAAAAaQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9610,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHFAAAaW1wb3J0IHsgUG9pbnQsIFNpemUsIFJlY3QsIExpbmUsIFRpY2tNZXRlciwgTWF0LCBEcmF3LCBMSU5FX0FBLCBMSU5FXzgsIENWX1JHQiB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IHJhbmdlLCBtb2QgfSBmcm9tICd1dGlsJzsKCmV4cG9ydCBjb25zdCBYID0gU3ltYm9sLmZvcigneCcpOwpleHBvcnQgY29uc3QgWSA9IFN5bWJvbC5mb3IoJ3knKTsKCmNvbnN0IFBFUlAgPSB7IFtYXTogWSwgW1ldOiBYIH07CmNvbnN0IENPT1JEID0geyBbWF06ICd4JywgW1ldOiAneScgfTsKY29uc3QgU0laRSA9IHsgW1hdOiAnd2lkdGgnLCBbWV06ICdoZWlnaHQnIH07CgpleHBvcnQgZnVuY3Rpb24gTWF4KHN0b3BzLCBheGlzLCBzdHlsZSkgewogIGxldCB2YWx1ZXM7CiAgaWYoc3R5bGUpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkoc3RvcHNbMF0pKSBzdG9wcyA9IHN0b3BzLm1hcCgoW2xhYmVsXSkgPT4gbGFiZWwpOwoKICAgIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0eWxlLnNpemUoc3RvcClbU0laRVtheGlzXV0pOwogICAgY29uc29sZS5sb2coJ01heCcsIHZhbHVlcyk7CiAgfSBlbHNlIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0b3BbQ09PUkRbYXhpc11dKTsKCiAgcmV0dXJuIE1hdGgubWF4KC4uLnZhbHVlcyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBBeGlzUG9pbnRzKHN0b3BzLCBpbmMgPSAxMCwgYXhpcywgc3R5bGUsIHNpemUpIHsKICBpZih0eXBlb2Ygc3RvcHMgPT0gJ251bWJlcicpIHN0b3BzID0gcmFuZ2UoMCwgc3RvcHMsIGluYyk7CiAgbGV0IHBvc2l0aW9ucyA9IFtdOwogIGxldCBwb2ludHMgPSByYW5nZSgwLCBNYXRoLmFicyhzdG9wcy5sZW5ndGggLSAxKSk7CiAgbGV0IHNpemVzID0gW107CiAgbGV0IG4gPSBwb2ludHMubGVuZ3RoOwoKICBsZXQgbWF4ID0gTWF4KHN0b3BzLCBQRVJQW2F4aXNdLCBzdHlsZSk7CiAgbGV0IHBvcyA9IG1heCArIDIgKyAxMCArIChheGlzID09IFggPyAxIDogMCk7CiAgY29uc29sZS5sb2coJ0F4aXNQb2ludHMnLCB7IGF4aXMsIG1heCwgcG9zIH0pOwoKICBmb3IobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICBsZXQgcG9pbnQgPSBwb2ludHNbaV07CiAgICBsZXQgeSA9IGF4aXMgPT0gWSA/IHBvaW50IDogcG9zOwogICAgbGV0IHggPSBheGlzID09IFkgPyBwb3MgOiBwb2ludDsKCiAgICBwb3NpdGlvbnMucHVzaChbc3RvcHNbaV0sIG5ldyBQb2ludCh4LCB5KV0pOwogIH0KCiAgY29uc29sZS5sb2coJ3NpemVzJywgc2l6ZXMpOwogIHJldHVybiBwb3NpdGlvbnM7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3TGluZShtYXQsIHN0YXJ0LCBlbmQsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApLCB3aWR0aCA9IDEsIGxpbmVUeXBlID0gTElORV9BQSkgewogIGxldCBwb2ludHMgPSBbc3RhcnQsIGVuZF0ubWFwKCh7IHgsIHkgfSkgPT4gW21vZCh4LCBtYXQuY29scyksIG1hdC5yb3dzIC0gbW9kKHksIG1hdC5yb3dzKV0pOwoKICBpZihsaW5lVHlwZSA9PSBMSU5FX0FBKSB0aHJvdyBuZXcgRXJyb3IoJ0xJTkVfQUEnKTsKCiAgLy9jb25zb2xlLmxvZygnRHJhd0xpbmUnLCBpbnNwZWN0KHsgcG9pbnRzLCB3aWR0aCwgbGluZVR5cGUgfSwgeyBjb21wYWN0OiAyIH0pKTsKCiAgRHJhdy5saW5lKG1hdCwgLi4ucG9pbnRzLCBjb2xvciwgd2lkdGgsIGxpbmVUeXBlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdEb3R0ZWRMaW5lKG1hdCwgc3RhcnQsIGVuZCwgYyA9IENWX1JHQigwLCAwLCAwKSkgewogIGxldCBhLCBpID0gMCwgYXhpcyA9IHN0YXJ0LnggPT0gZW5kLnggPyBZIDogc3RhcnQueSA9PSBlbmQueSA/IFggOiBudWxsOwogIHN3aXRjaCAoYXhpcykgewogICAgY2FzZSBYOiB7CiAgICAgIGxldCByID0gW3N0YXJ0LngsIGVuZC54XTsKICAgICAgbGV0IHJvdyA9IG1hdC5yb3cobWF0LnJvd3MgLSBzdGFydC55KTsKICAgICAgYT1yb3cuY29sUmFuZ2UoLi4uci5zb3J0KCkpOwogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgWTogewogICAgICBsZXQgciA9IFttYXQucm93cyAtIHN0YXJ0LnksIG1hdC5yb3dzIC0gZW5kLnldOwogICAgICBsZXQgY29sID0gbWF0LmNvbChzdGFydC54KTsKICAgICAgYT1jb2wucm93UmFuZ2UoLi4uci5zb3J0KCkpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgICAgIGZvcihsZXQgcCBvZiBhKSB7CiAgICAgICAgaWYoaSAmIDEpIHsKICAgICAgICAgIHBbMF0gPSBjWzBdOwogICAgICAgICAgcFsxXSA9IGNbMV07CiAgICAgICAgICBwWzJdID0gY1syXTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3VGV4dChtYXQsIHRleHQsIHBvcywgc3R5bGUsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApKSB7CiAgbGV0IHB0ID0gbmV3IFBvaW50KHBvcy54LCBtYXQucm93cyAtIHBvcy55KTsKCiAgc3R5bGUuZHJhdyhtYXQsIHRleHQsIHB0LCBjb2xvcik7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3QXhpcyhtYXQsIGF4aXMsIHJlY3QsIHN0eWxlKSB7CiAgbGV0IHsgeDEsIHkxLCB4MiwgeTIgfSA9IHJlY3Q7CgogIGxldCBwb2ludHMgPSBheGlzLm1hcCgoW2xhYmVsLCBwb2ludF0pID0+IHBvaW50KTsKICBsZXQgZGlmZiA9IFBvaW50LmRpZmYocG9pbnRzWzFdLCBwb2ludHNbMF0pOwogIGxldCBub3JtID0gZGlmZi5ub3JtKCk7CiAgbGV0IHByb3AgPSBub3JtLnggPyBYIDogWTsKICBsZXQgYWRkID0gcHJvcCA9PSBYID8gbmV3IFBvaW50KDAsIC0xMCkgOiBuZXcgUG9pbnQoLTEwLCAwKTsKICBsZXQgb2Zmc2V0ID0gcHJvcCA9PSBYID8gbmV3IFBvaW50KHJlY3QueCwgMCkgOiBuZXcgUG9pbnQoMCwgcmVjdC55KTsKCiAgbGV0IG1heCA9IE1heChwb2ludHMsIHByb3ApOwoKICBsZXQgbWF4Q29vcmQgPSByZWN0W1NJWkVbcHJvcF1dOwogIGxldCBmYWN0b3IgPSBtYXhDb29yZCAvIG1heDsKICBsZXQgbXVsdGlwbGljYXRvciA9IHByb3AgPT0gWCA/IG5ldyBQb2ludChmYWN0b3IsIDEpIDogbmV3IFBvaW50KDEsIGZhY3Rvcik7CgogIGNvbnNvbGUubG9nKCdEcmF3QXhpcycsIHsgbWF4LCBmYWN0b3IsIG11bHRpcGxpY2F0b3IgfSk7CiAgcG9pbnRzID0gcG9pbnRzLm1hcChwID0+IHAucHJvZChtdWx0aXBsaWNhdG9yKS5yb3VuZCgpKTsKICBwb2ludHMgPSBwb2ludHMubWFwKHAgPT4gcC5zdW0ob2Zmc2V0KSk7CiAgY29uc29sZS5sb2coJ0RyYXdBeGlzJywgeyBwb2ludHMgfSk7CgogIGxldCBmaXJzdCA9IHBvaW50c1swXSwKICAgIGxhc3QgPSBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdOwoKICBsZXQgaSA9IDA7CiAgZm9yKGxldCBwb2ludCBvZiBwb2ludHMpIHsKICAgIGxldCB0ZXh0ID0gYXhpc1tpXVswXSArICcnOwogICAgbGV0IHBvaW50cyA9IFtdOwoKICAgIGxldCBkaW1lbnNpb25zID0gc3R5bGUuc2l6ZSh0ZXh0KTsKICAgIGxldCBwb2ludDIgPSBwb2ludC5zdW0oYWRkKTsKCiAgICBsZXQgZGlzcCA9IHsgW1hdOiBuZXcgUG9pbnQoLWRpbWVuc2lvbnMud2lkdGggLyAyICsgMSwgMCksIFtZXTogbmV3IFBvaW50KC1kaW1lbnNpb25zLndpZHRoLCBkaW1lbnNpb25zLmhlaWdodCAvIDIgKyAyKSB9W3Byb3BdOwogICAgbGV0IHRleHRwb3MgPSBwb2ludDIuc3VtKGRpc3AuY2VpbCgpKTsKCiAgICBEcmF3VGV4dChtYXQsIHRleHQsIHRleHRwb3MsIHN0eWxlLCBDVl9SR0IoMCwgMCwgMCkpOwoKICAgIGxldCBwb2ludDMgPSB7IFtYXTogbmV3IFBvaW50KHBvaW50LngsIHJlY3QueTIpLCBbWV06IG5ldyBQb2ludChyZWN0LngyLCBwb2ludC55KSB9W3Byb3BdOwogICAgLy8gY29uc29sZS5sb2coJ0RyYXdBeGlzJyxwcm9wLCB7cG9pbnQscG9pbnQyLCBwb2ludDN9KTsKCiAgICBEcmF3TGluZShtYXQsIHBvaW50LCBwb2ludDIsIENWX1JHQigwLCAwLCAwKSwgMSwgTElORV84KTsKCiAgICBpZihpID4gMCkgRHJhd0RvdHRlZExpbmUobWF0LCBwb2ludDMsIHBvaW50LCBDVl9SR0IoMjAwLCAyMDAsIDIwMCksIDEsIExJTkVfOCk7CgogICAgKytpOwogIH0KCiAgRHJhd0xpbmUobWF0LCBmaXJzdCwgbGFzdCwgQ1ZfUkdCKDAsIDAsIDApLCAxLCBMSU5FXzgpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0Nyb3NzKG1hdCwgcG9pbnQsIHJhZGl1cyA9IDEwKSB7CiAgRHJhd0xpbmUobWF0LCBwb2ludC5zdW0oWy0xMCwgLTEwXSksIHBvaW50LnN1bShbMTAsIDEwXSksIFswLCAwLCAyNTVdLCAyLCBMSU5FXzgpOwogIERyYXdMaW5lKG1hdCwgcG9pbnQuc3VtKFsxMCwgLTEwXSksIHBvaW50LnN1bShbLTEwLCAxMF0pLCBbMCwgMCwgMjU1XSwgMiwgTElORV84KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIE9yaWdpbihtYXQsIHhBeGlzLCB5QXhpcykgewogIGNvbnN0IHsgc2l6ZSB9ID0gbWF0OwoKICBsZXQgeyB4IH0gPSB5QXhpc1swXVsxXTsKICBsZXQgeyB5IH0gPSB4QXhpc1swXVsxXTsKCiAgcmV0dXJuIG5ldyBQb2ludCh4LCB5KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEZsaXAobWF0LCBnZW9tZXRyeSkgewogIGxldCBjdG9yID0gZ2VvbWV0cnkuY29uc3RydWN0b3I7CiAgZ2VvbWV0cnkgPSBnZW9tZXRyeS5jbG9uZSgpOwogIGlmKGdlb21ldHJ5IGluc3RhbmNlb2YgUmVjdCB8fCBnZW9tZXRyeSBpbnN0YW5jZW9mIExpbmUpIHsKICAgIGdlb21ldHJ5LnkxID0gbWF0LnJvd3MgLSBnZW9tZXRyeS55MTsKICAgIGdlb21ldHJ5LnkyID0gbWF0LnJvd3MgLSBnZW9tZXRyeS55MjsKICB9IGVsc2UgaWYoZ2VvbWV0cnkgaW5zdGFuY2VvZiBQb2ludCkgewogICAgZ2VvbWV0cnkueSA9IG1hdC5yb3dzIC0gZ2VvbWV0cnkueTsKICB9CiAgcmV0dXJuIGdlb21ldHJ5Owp9CgpleHBvcnQgZnVuY3Rpb24gR2V0UmVjdChtYXQsIHhBeGlzLCB5QXhpcywgc3R5bGUpIHsKICBjb25zb2xlLmxvZygnR2V0UmVjdCcsIHhBeGlzLCB5QXhpcyk7CiAgbGV0IG9yaWdpbiA9IC8qYXJnc1swXSBpbnN0YW5jZW9mIFBvaW50ID8gYXJnc1swXSA6ICovIE9yaWdpbihtYXQsIHhBeGlzLCB5QXhpcyk7CgogIGxldCBlbmQgPSBuZXcgUG9pbnQobWF0LmNvbHMgLSAxIC0gb3JpZ2luLngsIG1hdC5yb3dzIC0gMSAtIG9yaWdpbi55KTsKCiAgbGV0IHlBZGQgPSBNYXRoLmZsb29yKE1heCh5QXhpcywgWSwgc3R5bGUpIC8gMik7CiAgbGV0IHhBZGQgPSBNYXRoLmNlaWwoTWF4KHhBeGlzLCBYLCBzdHlsZSkgLyAyKTsKCiAgcmV0dXJuIG5ldyBSZWN0KC4uLm9yaWdpbiwgLi4uZW5kLmRpZmYoeEFkZCwgeUFkZCkpOwp9CgAAAAAAAAAAMxQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoIAAAAAAAAaggAAAAAAAAAAAAAAADwvw"
				],
				[
					9622,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANgDAAAAAAAA2QMAAAAAAAAAAAAA2QMAAAAAAADaAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgDAAAAAAAA2AMAAAAAAAAAAAAAAADwvw"
				],
				[
					9625,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABACAAAAAAAAEQIAAAAAAAAAAAAAEQIAAAAAAAASAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABACAAAAAAAAEAIAAAAAAAAAAAAAAADwvw"
				],
				[
					9628,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMkEAAAAAAAAygQAAAAAAAAAAAAAygQAAAAAAADLBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkEAAAAAAAAyQQAAAAAAAAAAAAAAADwvw"
				],
				[
					9651,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKgLAAAAAAAAqQsAAAAAAAAAAAAAqQsAAAAAAACqCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgLAAAAAAAAqAsAAAAAAAAAAAAAAADwvw"
				],
				[
					9654,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEsMAAAAAAAATAwAAAAAAAAAAAAATAwAAAAAAABNDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsMAAAAAAAASwwAAAAAAAAAAAAAAADwvw"
				],
				[
					9674,
					1,
					"left_delete",
					null,
					"AQAAANcSAAAAAAAA1xIAAAAAAAAoAAAAICBjb25zb2xlLmxvZygnR2V0UmVjdCcsIHhBeGlzLCB5QXhpcyk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcSAAAAAAAA/xIAAAAAAAAAAAAAAADwvw"
				],
				[
					9680,
					2,
					"left_delete",
					null,
					"AgAAAOYSAAAAAAAA5hIAAAAAAAApAAAALyphcmdzWzBdIGluc3RhbmNlb2YgUG9pbnQgPyBhcmdzWzBdIDogKi/lEgAAAAAAAOUSAAAAAAAAAQAAACA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYSAAAAAAAADxMAAAAAAAAAAAAAAADwvw"
				],
				[
					9714,
					1,
					"insert",
					{
						"characters": ".diff(add)"
					},
					"CgAAAPwOAAAAAAAA/Q4AAAAAAAAAAAAA/Q4AAAAAAAD+DgAAAAAAAAAAAAD+DgAAAAAAAP8OAAAAAAAAAAAAAP8OAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAABDwAAAAAAAAAAAAABDwAAAAAAAAIPAAAAAAAAAAAAAAIPAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAAEDwAAAAAAAAAAAAAEDwAAAAAAAAUPAAAAAAAAAAAAAAUPAAAAAAAABg8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwOAAAAAAAA/A4AAAAAAAAAAAAAAADwvw"
				],
				[
					9725,
					1,
					"cut",
					null,
					"AQAAAOUOAAAAAAAA5Q4AAAAAAABIAAAAICAgIERyYXdMaW5lKG1hdCwgcG9pbnQuZGlmZihhZGQpLCBwb2ludDIsIENWX1JHQigwLCAwLCAwKSwgMSwgTElORV84KTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUOAAAAAAAALQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					9727,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADoPAAAAAAAAOw8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoPAAAAAAAAOg8AAAAAAAAAAAAAAAAAAA"
				],
				[
					9728,
					1,
					"paste",
					null,
					"AQAAADsPAAAAAAAAgw8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsPAAAAAAAAOw8AAAAAAAAAAAAAAADwvw"
				],
				[
					9730,
					1,
					"left_delete",
					null,
					"AQAAAOQOAAAAAAAA5A4AAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUOAAAAAAAA5Q4AAAAAAAAAAAAAAAAAAA"
				],
				[
					9735,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAACsIAAAAAAAALAgAAAAAAAAAAAAALAgAAAAAAAAyCAAAAAAAAAAAAAAyCAAAAAAAADMIAAAAAAAAAAAAADMIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA1CAAAAAAAAAAAAAA1CAAAAAAAADYIAAAAAAAAAAAAADYIAAAAAAAANwgAAAAAAAAAAAAANwgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADkIAAAAAAAAAAAAADkIAAAAAAAAOggAAAAAAAAAAAAAOggAAAAAAAA7CAAAAAAAAAAAAAA7CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAPQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsIAAAAAAAAKwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9736,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD0IAAAAAAAAPwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0IAAAAAAAAPQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9737,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD4IAAAAAAAAQAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4IAAAAAAAAPggAAAAAAAAAAAAAAADwvw"
				],
				[
					9738,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAD8IAAAAAAAAQAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8IAAAAAAAAPwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9740,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEEIAAAAAAAAQggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEIAAAAAAAAQQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9741,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAEIIAAAAAAAAQwgAAAAAAAAAAAAAQwgAAAAAAABECAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIIAAAAAAAAQggAAAAAAAAAAAAAAADwvw"
				],
				[
					9743,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEUIAAAAAAAARggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUIAAAAAAAARQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9749,
					1,
					"insert",
					{
						"characters": ".sort"
					},
					"BQAAAAgIAAAAAAAACQgAAAAAAAAAAAAACQgAAAAAAAAKCAAAAAAAAAAAAAAKCAAAAAAAAAsIAAAAAAAAAAAAAAsIAAAAAAAADAgAAAAAAAAAAAAADAgAAAAAAAANCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9750,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA0IAAAAAAAADwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0IAAAAAAAADQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9756,
					1,
					"left_delete",
					null,
					"AQAAAG8IAAAAAAAAbwgAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAIAAAAAAAAcAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9757,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAG4IAAAAAAAAbggAAAAAAAABAAAAKG4IAAAAAAAAbggAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8IAAAAAAAAbwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9758,
					5,
					"left_delete",
					null,
					"BQAAAG0IAAAAAAAAbQgAAAAAAAABAAAAdGwIAAAAAAAAbAgAAAAAAAABAAAAcmsIAAAAAAAAawgAAAAAAAABAAAAb2oIAAAAAAAAaggAAAAAAAABAAAAc2kIAAAAAAAAaQgAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4IAAAAAAAAbggAAAAAAAAAAAAAAADwvw"
				],
				[
					9763,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGkIAAAAAAAAaggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkIAAAAAAAAaQgAAAAAAAAAAAAAAADwvw"
				],
				[
					9772,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA4IAAAAAAAAEAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4IAAAAAAAADggAAAAAAAAAAAAAAADwvw"
				],
				[
					9773,
					1,
					"insert",
					{
						"characters": "a,b"
					},
					"AwAAAA8IAAAAAAAAEAgAAAAAAAAAAAAAEAgAAAAAAAARCAAAAAAAAAAAAAARCAAAAAAAABIIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8IAAAAAAAADwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9775,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABMIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAVCAAAAAAAAAAAAAAVCAAAAAAAABYIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMIAAAAAAAAEwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9776,
					1,
					"insert",
					{
						"characters": " a-b"
					},
					"BAAAABYIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAYCAAAAAAAAAAAAAAYCAAAAAAAABkIAAAAAAAAAAAAABkIAAAAAAAAGggAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYIAAAAAAAAFggAAAAAAAAAAAAAAADwvw"
				],
				[
					9783,
					1,
					"left_delete",
					null,
					"AQAAAD8IAAAAAAAAPwgAAAAAAAAbAAAAICAgICAgY29uc29sZS5sb2coJ3InLCByKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8IAAAAAAAAWggAAAAAAAAAAAAAAAAAAA"
				],
				[
					9788,
					1,
					"cut",
					null,
					"AQAAAAgIAAAAAAAACAgAAAAAAAATAAAALnNvcnQoKGEsYikgPT4gYS1iKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgIAAAAAAAAGwgAAAAAAAAAAAAAAADwvw"
				],
				[
					9789,
					1,
					"paste",
					null,
					"AQAAAAgIAAAAAAAAGwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAADwvw"
				],
				[
					9792,
					1,
					"paste",
					null,
					"AQAAAF8HAAAAAAAAcgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8HAAAAAAAAXwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9796,
					2,
					"left_delete",
					null,
					"AgAAAL0HAAAAAAAAvQcAAAAAAAAGAAAAc29ydCgpvAcAAAAAAAC8BwAAAAAAAAEAAAAu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0HAAAAAAAAwwcAAAAAAAAAAAAAAADwvw"
				],
				[
					9808,
					7,
					"left_delete",
					null,
					"BwAAAGoPAAAAAAAAag8AAAAAAAAEAAAAZGlmZmkPAAAAAAAAaQ8AAAAAAAABAAAALmgPAAAAAAAAaA8AAAAAAAABAAAAdGcPAAAAAAAAZw8AAAAAAAABAAAAbmYPAAAAAAAAZg8AAAAAAAABAAAAaWUPAAAAAAAAZQ8AAAAAAAABAAAAb2QPAAAAAAAAZA8AAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoPAAAAAAAAbg8AAAAAAAAAAAAAAADwvw"
				],
				[
					9813,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAADFAAAaW1wb3J0IHsgUG9pbnQsIFNpemUsIFJlY3QsIExpbmUsIFRpY2tNZXRlciwgTWF0LCBEcmF3LCBMSU5FX0FBLCBMSU5FXzgsIENWX1JHQiB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IHJhbmdlLCBtb2QgfSBmcm9tICd1dGlsJzsKCmV4cG9ydCBjb25zdCBYID0gU3ltYm9sLmZvcigneCcpOwpleHBvcnQgY29uc3QgWSA9IFN5bWJvbC5mb3IoJ3knKTsKCmNvbnN0IFBFUlAgPSB7IFtYXTogWSwgW1ldOiBYIH07CmNvbnN0IENPT1JEID0geyBbWF06ICd4JywgW1ldOiAneScgfTsKY29uc3QgU0laRSA9IHsgW1hdOiAnd2lkdGgnLCBbWV06ICdoZWlnaHQnIH07CgpleHBvcnQgZnVuY3Rpb24gTWF4KHN0b3BzLCBheGlzLCBzdHlsZSkgewogIGxldCB2YWx1ZXM7CiAgaWYoc3R5bGUpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkoc3RvcHNbMF0pKSBzdG9wcyA9IHN0b3BzLm1hcCgoW2xhYmVsXSkgPT4gbGFiZWwpOwoKICAgIHZhbHVlcyA9IHN0b3BzLm1hcChzdG9wID0+IHN0eWxlLnNpemUoc3RvcClbU0laRVtheGlzXV0pOwogICAgLy9jb25zb2xlLmxvZygnTWF4JywgdmFsdWVzKTsKICB9IGVsc2UgdmFsdWVzID0gc3RvcHMubWFwKHN0b3AgPT4gc3RvcFtDT09SRFtheGlzXV0pOwoKICByZXR1cm4gTWF0aC5tYXgoLi4udmFsdWVzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIEF4aXNQb2ludHMoc3RvcHMsIGluYyA9IDEwLCBheGlzLCBzdHlsZSwgc2l6ZSkgewogIGlmKHR5cGVvZiBzdG9wcyA9PSAnbnVtYmVyJykgc3RvcHMgPSByYW5nZSgwLCBzdG9wcywgaW5jKTsKICBsZXQgcG9zaXRpb25zID0gW107CiAgbGV0IHBvaW50cyA9IHJhbmdlKDAsIE1hdGguYWJzKHN0b3BzLmxlbmd0aCAtIDEpKTsKICBsZXQgc2l6ZXMgPSBbXTsKICBsZXQgbiA9IHBvaW50cy5sZW5ndGg7CgogIGxldCBtYXggPSBNYXgoc3RvcHMsIFBFUlBbYXhpc10sIHN0eWxlKTsKICBsZXQgcG9zID0gbWF4ICsgMiArIDEwICsgKGF4aXMgPT0gWCA/IDEgOiAwKTsKICAvL2NvbnNvbGUubG9nKCdBeGlzUG9pbnRzJywgeyBheGlzLCBtYXgsIHBvcyB9KTsKCiAgZm9yKGxldCBpID0gMDsgaSA8IG47IGkrKykgewogICAgbGV0IHBvaW50ID0gcG9pbnRzW2ldOwogICAgbGV0IHkgPSBheGlzID09IFkgPyBwb2ludCA6IHBvczsKICAgIGxldCB4ID0gYXhpcyA9PSBZID8gcG9zIDogcG9pbnQ7CgogICAgcG9zaXRpb25zLnB1c2goW3N0b3BzW2ldLCBuZXcgUG9pbnQoeCwgeSldKTsKICB9CgogIC8vY29uc29sZS5sb2coJ3NpemVzJywgc2l6ZXMpOwogIHJldHVybiBwb3NpdGlvbnM7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3TGluZShtYXQsIHN0YXJ0LCBlbmQsIGNvbG9yID0gQ1ZfUkdCKDAsIDAsIDApLCB3aWR0aCA9IDEsIGxpbmVUeXBlID0gTElORV9BQSkgewogIGxldCBwb2ludHMgPSBbc3RhcnQsIGVuZF0ubWFwKCh7IHgsIHkgfSkgPT4gW21vZCh4LCBtYXQuY29scyksIG1hdC5yb3dzIC0gbW9kKHksIG1hdC5yb3dzKV0pOwoKICBpZihsaW5lVHlwZSA9PSBMSU5FX0FBKSB0aHJvdyBuZXcgRXJyb3IoJ0xJTkVfQUEnKTsKCiAgLy9jb25zb2xlLmxvZygnRHJhd0xpbmUnLCBpbnNwZWN0KHsgcG9pbnRzLCB3aWR0aCwgbGluZVR5cGUgfSwgeyBjb21wYWN0OiAyIH0pKTsKCiAgRHJhdy5saW5lKG1hdCwgLi4ucG9pbnRzLCBjb2xvciwgd2lkdGgsIGxpbmVUeXBlKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdEb3R0ZWRMaW5lKG1hdCwgc3RhcnQsIGVuZCwgYyA9IENWX1JHQigwLCAwLCAwKSkgewogIGxldCBhLAogICAgaSA9IDAsCiAgICBheGlzID0gc3RhcnQueCA9PSBlbmQueCA/IFkgOiBzdGFydC55ID09IGVuZC55ID8gWCA6IG51bGw7CiAgc3dpdGNoIChheGlzKSB7CiAgICBjYXNlIFg6IHsKICAgICAgbGV0IHIgPSBbc3RhcnQueCwgZW5kLnhdLnNvcnQoKGEsYikgPT4gYS1iKTsKICAgICAgbGV0IHJvdyA9IG1hdC5yb3cobWF0LnJvd3MgLSBzdGFydC55KTsKICAgICAgYSA9IHJvdy5jb2xSYW5nZSguLi5yKTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlIFk6IHsKICAgICAgbGV0IHIgPSBbbWF0LnJvd3MgLSBzdGFydC55LCBtYXQucm93cyAtIGVuZC55XS5zb3J0KChhLGIpID0+IGEtYik7CiAgICAgIGxldCBjb2wgPSBtYXQuY29sKHN0YXJ0LngpOwogICAgICBhID0gY29sLnJvd1JhbmdlKC4uLnIpOwogICAgICBicmVhazsKICAgIH0KICB9CiAgZm9yKGxldCBwIG9mIGEpIHsKICAgIGlmKGkgJiAxKSB7CiAgICAgIHBbMF0gPSBjWzBdOwogICAgICBwWzFdID0gY1sxXTsKICAgICAgcFsyXSA9IGNbMl07CiAgICB9CiAgICBpKys7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd1RleHQobWF0LCB0ZXh0LCBwb3MsIHN0eWxlLCBjb2xvciA9IENWX1JHQigwLCAwLCAwKSkgewogIGxldCBwdCA9IG5ldyBQb2ludChwb3MueCwgbWF0LnJvd3MgLSBwb3MueSk7CgogIHN0eWxlLmRyYXcobWF0LCB0ZXh0LCBwdCwgY29sb3IpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0F4aXMobWF0LCBheGlzLCByZWN0LCBzdHlsZSkgewogIGxldCB7IHgxLCB5MSwgeDIsIHkyIH0gPSByZWN0OwoKICBsZXQgcG9pbnRzID0gYXhpcy5tYXAoKFtsYWJlbCwgcG9pbnRdKSA9PiBwb2ludCk7CiAgbGV0IGRpZmYgPSBQb2ludC5kaWZmKHBvaW50c1sxXSwgcG9pbnRzWzBdKTsKICBsZXQgbm9ybSA9IGRpZmYubm9ybSgpOwogIGxldCBwcm9wID0gbm9ybS54ID8gWCA6IFk7CiAgbGV0IGFkZCA9IHByb3AgPT0gWCA/IG5ldyBQb2ludCgwLCAtMTApIDogbmV3IFBvaW50KC0xMCwgMCk7CiAgbGV0IG9mZnNldCA9IHByb3AgPT0gWCA/IG5ldyBQb2ludChyZWN0LngsIDApIDogbmV3IFBvaW50KDAsIHJlY3QueSk7CgogIGxldCBtYXggPSBNYXgocG9pbnRzLCBwcm9wKTsKCiAgbGV0IG1heENvb3JkID0gcmVjdFtTSVpFW3Byb3BdXTsKICBsZXQgZmFjdG9yID0gbWF4Q29vcmQgLyBtYXg7CiAgbGV0IG11bHRpcGxpY2F0b3IgPSBwcm9wID09IFggPyBuZXcgUG9pbnQoZmFjdG9yLCAxKSA6IG5ldyBQb2ludCgxLCBmYWN0b3IpOwoKICAvL2NvbnNvbGUubG9nKCdEcmF3QXhpcycsIHsgbWF4LCBmYWN0b3IsIG11bHRpcGxpY2F0b3IgfSk7CiAgcG9pbnRzID0gcG9pbnRzLm1hcChwID0+IHAucHJvZChtdWx0aXBsaWNhdG9yKS5yb3VuZCgpKTsKICBwb2ludHMgPSBwb2ludHMubWFwKHAgPT4gcC5zdW0ob2Zmc2V0KSk7CiAgLy9jb25zb2xlLmxvZygnRHJhd0F4aXMnLCB7IHBvaW50cyB9KTsKCiAgbGV0IGZpcnN0ID0gcG9pbnRzWzBdLAogICAgbGFzdCA9IHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV07CgogIGxldCBpID0gMDsKICBmb3IobGV0IHBvaW50IG9mIHBvaW50cykgewogICAgbGV0IHRleHQgPSBheGlzW2ldWzBdICsgJyc7CiAgICBsZXQgcG9pbnRzID0gW107CgogICAgbGV0IGRpbWVuc2lvbnMgPSBzdHlsZS5zaXplKHRleHQpOwogICAgbGV0IHBvaW50MiA9IHBvaW50LnN1bShhZGQpOwoKICAgIGxldCBkaXNwID0geyBbWF06IG5ldyBQb2ludCgtZGltZW5zaW9ucy53aWR0aCAvIDIgKyAxLCAwKSwgW1ldOiBuZXcgUG9pbnQoLWRpbWVuc2lvbnMud2lkdGgsIGRpbWVuc2lvbnMuaGVpZ2h0IC8gMiArIDIpIH1bcHJvcF07CiAgICBsZXQgdGV4dHBvcyA9IHBvaW50Mi5zdW0oZGlzcC5jZWlsKCkpOwoKICAgIERyYXdUZXh0KG1hdCwgdGV4dCwgdGV4dHBvcywgc3R5bGUsIENWX1JHQigwLCAwLCAwKSk7CgogICAgbGV0IHBvaW50MyA9IHsgW1hdOiBuZXcgUG9pbnQocG9pbnQueCwgcmVjdC55MiksIFtZXTogbmV3IFBvaW50KHJlY3QueDIsIHBvaW50LnkpIH1bcHJvcF07CiAgICAvLyBjb25zb2xlLmxvZygnRHJhd0F4aXMnLHByb3AsIHtwb2ludCxwb2ludDIsIHBvaW50M30pOwoKICAgIGlmKGkgPiAwKSBEcmF3RG90dGVkTGluZShtYXQsIHBvaW50MywgcG9pbnQsIENWX1JHQigyMDAsIDIwMCwgMjAwKSwgMSwgTElORV84KTsKCiAgICBEcmF3TGluZShtYXQsIChhZGQpLCBwb2ludDIsIENWX1JHQigwLCAwLCAwKSwgMSwgTElORV84KTsKCiAgICArK2k7CiAgfQoKICBEcmF3TGluZShtYXQsIGZpcnN0LCBsYXN0LCBDVl9SR0IoMCwgMCwgMCksIDEsIExJTkVfOCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBEcmF3Q3Jvc3MobWF0LCBwb2ludCwgcmFkaXVzID0gMTApIHsKICBEcmF3TGluZShtYXQsIHBvaW50LnN1bShbLTEwLCAtMTBdKSwgcG9pbnQuc3VtKFsxMCwgMTBdKSwgWzAsIDAsIDI1NV0sIDIsIExJTkVfOCk7CiAgRHJhd0xpbmUobWF0LCBwb2ludC5zdW0oWzEwLCAtMTBdKSwgcG9pbnQuc3VtKFstMTAsIDEwXSksIFswLCAwLCAyNTVdLCAyLCBMSU5FXzgpOwp9CgpleHBvcnQgZnVuY3Rpb24gT3JpZ2luKG1hdCwgeEF4aXMsIHlBeGlzKSB7CiAgY29uc3QgeyBzaXplIH0gPSBtYXQ7CgogIGxldCB7IHggfSA9IHlBeGlzWzBdWzFdOwogIGxldCB7IHkgfSA9IHhBeGlzWzBdWzFdOwoKICByZXR1cm4gbmV3IFBvaW50KHgsIHkpOwp9CgpleHBvcnQgZnVuY3Rpb24gRmxpcChtYXQsIGdlb21ldHJ5KSB7CiAgbGV0IGN0b3IgPSBnZW9tZXRyeS5jb25zdHJ1Y3RvcjsKICBnZW9tZXRyeSA9IGdlb21ldHJ5LmNsb25lKCk7CiAgaWYoZ2VvbWV0cnkgaW5zdGFuY2VvZiBSZWN0IHx8IGdlb21ldHJ5IGluc3RhbmNlb2YgTGluZSkgewogICAgZ2VvbWV0cnkueTEgPSBtYXQucm93cyAtIGdlb21ldHJ5LnkxOwogICAgZ2VvbWV0cnkueTIgPSBtYXQucm93cyAtIGdlb21ldHJ5LnkyOwogIH0gZWxzZSBpZihnZW9tZXRyeSBpbnN0YW5jZW9mIFBvaW50KSB7CiAgICBnZW9tZXRyeS55ID0gbWF0LnJvd3MgLSBnZW9tZXRyeS55OwogIH0KICByZXR1cm4gZ2VvbWV0cnk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBHZXRSZWN0KG1hdCwgeEF4aXMsIHlBeGlzLCBzdHlsZSkgewogIGxldCBvcmlnaW4gPSBPcmlnaW4obWF0LCB4QXhpcywgeUF4aXMpOwoKICBsZXQgZW5kID0gbmV3IFBvaW50KG1hdC5jb2xzIC0gMSAtIG9yaWdpbi54LCBtYXQucm93cyAtIDEgLSBvcmlnaW4ueSk7CgogIGxldCB5QWRkID0gTWF0aC5mbG9vcihNYXgoeUF4aXMsIFksIHN0eWxlKSAvIDIpOwogIGxldCB4QWRkID0gTWF0aC5jZWlsKE1heCh4QXhpcywgWCwgc3R5bGUpIC8gMik7CgogIHJldHVybiBuZXcgUmVjdCguLi5vcmlnaW4sIC4uLmVuZC5kaWZmKHhBZGQsIHlBZGQpKTsKfQoAAAAAAAAAAAcUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQPAAAAAAAAZA8AAAAAAAAAAAAAAADwvw"
				],
				[
					9815,
					4,
					"left_delete",
					null,
					"BAAAAG0PAAAAAAAAbQ8AAAAAAAABAAAALGwPAAAAAAAAbA8AAAAAAAABAAAAZGsPAAAAAAAAaw8AAAAAAAABAAAAZGoPAAAAAAAAag8AAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4PAAAAAAAAbg8AAAAAAAAAAAAAAADwvw"
				],
				[
					9816,
					1,
					"insert",
					{
						"characters": "pop"
					},
					"AwAAAGoPAAAAAAAAaw8AAAAAAAAAAAAAaw8AAAAAAABsDwAAAAAAAAAAAABsDwAAAAAAAG0PAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoPAAAAAAAAag8AAAAAAAAAAAAAAADwvw"
				],
				[
					9817,
					1,
					"left_delete",
					null,
					"AQAAAGwPAAAAAAAAbA8AAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0PAAAAAAAAbQ8AAAAAAAAAAAAAAADwvw"
				],
				[
					9818,
					1,
					"insert",
					{
						"characters": "int,"
					},
					"BAAAAGwPAAAAAAAAbQ8AAAAAAAAAAAAAbQ8AAAAAAABuDwAAAAAAAAAAAABuDwAAAAAAAG8PAAAAAAAAAAAAAG8PAAAAAAAAcA8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwPAAAAAAAAbA8AAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "qjs-opencv/js/cvHighGUI.js",
			"settings":
			{
				"buffer_size": 4769,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					73,
					1,
					"cut",
					null,
					"AQAAAGULAAAAAAAAZQsAAAAAAAB2AAAAbWF0LCB0ZXh0LCBwb3MsIGZvbnRGYWNlLCBmb250U2NhbGUsIGNvbG9yID8/IFsyNTUsIDI1NSwgMjU1LCAyNTVdLCBsaW5lVGhpY2tuZXNzID8/IHRoaWNrbmVzcywgbGluZVR5cGUgPz8gY3YuTElORV9BQQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGULAAAAAAAA2wsAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"paste",
					null,
					"AQAAAO4LAAAAAAAAZAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4LAAAAAAAA7gsAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAAGQMAAAAAAAAZAwAAAAAAAAHAAAALi4uYXJncw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQMAAAAAAAAawwAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAAGgLAAAAAAAAaAsAAAAAAAB4AAAAICAgIC8vY29uc29sZS5sb2coJ1RleHRTdHlsZSBkcmF3KCcsIC4uLmFyZ3MucmVkdWNlKChhY2MsIGFyZykgPT4gKGFjYy5sZW5ndGggPyBbLi4uYWNjLCAnLCcsIGFyZ10gOiBbYXJnXSksIFtdKSwgJyknKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgLAAAAAAAA4AsAAAAAAAAAAAAAAAAAAA"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAFMLAAAAAAAAUwsAAAAAAAAVAAAAICAgIGNvbnN0IGFyZ3MgPSBbXTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgLAAAAAAAAUwsAAAAAAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": ")="
					},
					"AgAAABALAAAAAAAAEQsAAAAAAAAAAAAAEQsAAAAAAAASCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABALAAAAAAAAEAsAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAABELAAAAAAAAEQsAAAAAAAABAAAAPRALAAAAAAAAEAsAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABILAAAAAAAAEgsAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " FILLED"
					},
					"BwAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABgLAAAAAAAAGQsAAAAAAAAAAAAAGQsAAAAAAAAaCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgLAAAAAAAAGAsAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " FILLED"
					},
					"BwAAABoLAAAAAAAAGwsAAAAAAAAAAAAAGwsAAAAAAAAcCwAAAAAAAAAAAAAcCwAAAAAAAB0LAAAAAAAAAAAAAB0LAAAAAAAAHgsAAAAAAAAAAAAAHgsAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAACALAAAAAAAAAAAAACALAAAAAAAAIQsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoLAAAAAAAAGgsAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACsLAAAAAAAALAsAAAAAAAAAAAAALAsAAAAAAAAtCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsLAAAAAAAAKwsAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " LINE_AA"
					},
					"CAAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAADALAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAyCwAAAAAAAAAAAAAyCwAAAAAAADMLAAAAAAAAAAAAADMLAAAAAAAANAsAAAAAAAAAAAAANAsAAAAAAAA1CwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0LAAAAAAAALQsAAAAAAAAAAAAAAADwvw"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAAQgAAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					2,
					"left_delete",
					null,
					"AgAAAEIAAAAAAAAAQgAAAAAAAAABAAAAIEEAAAAAAAAAQQAAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMAAAAAAAAAQwAAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " LINE_AA"
					},
					"CAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEAAAAAAAAAQQAAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"paste",
					null,
					"AQAAAE0AAAAAAAAAGAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0AAAAAAAAATQAAAAAAAAAAAAAAAADwvw"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAABcBAAAAAAAAFwEAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgBAAAAAAAAGAEAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcBAAAAAAAAGAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcBAAAAAAAAFwEAAAAAAAAAAAAAAADwvw"
				],
				[
					188,
					2,
					"right_delete",
					null,
					"AgAAAEQAAAAAAAAARAAAAAAAAAAHAAAATElORV9BQUQAAAAAAAAARAAAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				],
				[
					200,
					1,
					"",
					null,
					"AQAAAL4EAAAAAAAAvgQAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4EAAAAAAAAwQQAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"",
					null,
					"AQAAAA4FAAAAAAAADgUAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4FAAAAAAAAEQUAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"",
					null,
					"AQAAAFIFAAAAAAAAUgUAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIFAAAAAAAAVQUAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"",
					null,
					"AQAAALMFAAAAAAAAswUAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMFAAAAAAAAtgUAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"",
					null,
					"AQAAAEQGAAAAAAAARAYAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQGAAAAAAAARwYAAAAAAAAAAAAAAADwvw"
				],
				[
					205,
					1,
					"",
					null,
					"AQAAAIEHAAAAAAAAgQcAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIEHAAAAAAAAhAcAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"",
					null,
					"AQAAAMAHAAAAAAAAwAcAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAHAAAAAAAAwwcAAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"",
					null,
					"AQAAAAUIAAAAAAAABQgAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUIAAAAAAAACAgAAAAAAAAAAAAAAADwvw"
				],
				[
					208,
					1,
					"",
					null,
					"AQAAAGcIAAAAAAAAZwgAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcIAAAAAAAAaggAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					1,
					"",
					null,
					"AQAAANsIAAAAAAAA2wgAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsIAAAAAAAA3ggAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"",
					null,
					"AQAAAJIJAAAAAAAAkgkAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIJAAAAAAAAlQkAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					1,
					"",
					null,
					"AQAAAP8JAAAAAAAA/wkAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8JAAAAAAAAAgoAAAAAAAAAAAAAAADwvw"
				],
				[
					212,
					1,
					"",
					null,
					"AQAAAJQMAAAAAAAAlAwAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQMAAAAAAAAlwwAAAAAAAAAAAAAAADwvw"
				],
				[
					213,
					1,
					"",
					null,
					"AQAAAO8RAAAAAAAA7xEAAAAAAAADAAAAY3Yu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8RAAAAAAAA8hEAAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8BAAAAAAAADwEAAAAAAAAAAAAAAADwvw"
				],
				[
					249,
					1,
					"paste",
					null,
					"AQAAABABAAAAAAAAaAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABABAAAAAAAAEAEAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"paste",
					null,
					"AgAAAKcCAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACvBAAAAAAAACwCAAAKZXhwb3J0IGNvbnN0IE1vdXNlRXZlbnRzID0gWydFVkVOVF9NT1VTRU1PVkUnLCAnRVZFTlRfTEJVVFRPTkRPV04nLCAnRVZFTlRfUkJVVFRPTkRPV04nLCAnRVZFTlRfTUJVVFRPTkRPV04nLCAnRVZFTlRfTEJVVFRPTlVQJywgJ0VWRU5UX1JCVVRUT05VUCcsICdFVkVOVF9NQlVUVE9OVVAnLCAnRVZFTlRfTEJVVFRPTkRCTENMSycsICdFVkVOVF9SQlVUVE9OREJMQ0xLJywgJ0VWRU5UX01CVVRUT05EQkxDTEsnLCAnRVZFTlRfTU9VU0VXSEVFTCcsICdFVkVOVF9NT1VTRUhXSEVFTCddLnJlZHVjZSgoYWNjLCBuYW1lKSA9PiAoeyAuLi5hY2MsIFtjdltuYW1lXV06IG5hbWUgfSksIHt9KTsKCmV4cG9ydCBjb25zdCBNb3VzZUZsYWdzID0gWydFVkVOVF9GTEFHX0xCVVRUT04nLCAnRVZFTlRfRkxBR19SQlVUVE9OJywgJ0VWRU5UX0ZMQUdfTUJVVFRPTicsICdFVkVOVF9GTEFHX0NUUkxLRVknLCAnRVZFTlRfRkxBR19TSElGVEtFWScsICdFVkVOVF9GTEFHX0FMVEtFWSddLnJlZHVjZSgoYWNjLCBuYW1lKSA9PiAoeyAuLi5hY2MsIFtuYW1lXTogY3ZbbmFtZV0gfSksIHt9KTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcCAAAAAAAA0wQAAAAAAAAAAAAAAAAAAA"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAAKQDAAAAAAAApQMAAAAAAAAAAAAApQMAAAAAAAClAwAAAAAAADsAAAAucmVkdWNlKChhY2MsIG5hbWUpID0+ICh7IC4uLmFjYywge2N2e25hbWV9fTogbmFtZSB9KSwge30pOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQDAAAAAAAA3wMAAAAAAAD////////vfw"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAADkEAAAAAAAAOgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkEAAAAAAAAOQQAAAAAAAAAAAAAAADwvw"
				],
				[
					272,
					1,
					"left_delete",
					null,
					"AQAAADkEAAAAAAAAOQQAAAAAAAABAAAATQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAOgQAAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADkEAAAAAAAAOgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkEAAAAAAAAOQQAAAAAAAAAAAAAAADwvw"
				],
				[
					275,
					1,
					"cut",
					null,
					"AQAAADoEAAAAAAAAOgQAAAAAAAA7AAAALnJlZHVjZSgoYWNjLCBuYW1lKSA9PiAoeyAuLi5hY2MsIHtuYW1lfTogY3Z7bmFtZX0gfSksIHt9KTs",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoEAAAAAAAAdQQAAAAAAAD////////vfw"
				],
				[
					277,
					1,
					"left_delete",
					null,
					"AQAAAKUDAAAAAAAApQMAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYDAAAAAAAApgMAAAAAAAAAAAAAAPiWQA"
				],
				[
					292,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADYEgAALy9pbXBvcnQgKiBhcyBjdiBmcm9tICdvcGVuY3YnOwppbXBvcnQgeyBTaXplLCBQb2ludCwgRHJhdywgRklMTEVELCAgRk9OVF9IRVJTSEVZX1BMQUlOLCBnZXRTY3JlZW5SZXNvbHV0aW9uLCBnZXRXaW5kb3dJbWFnZVJlY3QsIGdldFdpbmRvd1Byb3BlcnR5LCBpbXNob3csIExJTkVfQUEsIG1vdmVXaW5kb3csIG5hbWVkV2luZG93LCByZXNpemVXaW5kb3csIHNldE1vdXNlQ2FsbGJhY2ssIHNldFdpbmRvd1Byb3BlcnR5LCBzZXRXaW5kb3dUaXRsZSwgV0lORE9XX05PUk1BTCxFVkVOVF9NT1VTRU1PVkUsIEVWRU5UX0xCVVRUT05ET1dOLCBFVkVOVF9SQlVUVE9ORE9XTiwgRVZFTlRfTUJVVFRPTkRPV04sIEVWRU5UX0xCVVRUT05VUCwgRVZFTlRfUkJVVFRPTlVQLCBFVkVOVF9NQlVUVE9OVVAsIEVWRU5UX0xCVVRUT05EQkxDTEssIEVWRU5UX1JCVVRUT05EQkxDTEssIEVWRU5UX01CVVRUT05EQkxDTEssIEVWRU5UX01PVVNFV0hFRUwsIEVWRU5UX01PVVNFSFdIRUVMLCBFVkVOVF9GTEFHX0xCVVRUT04sIEVWRU5UX0ZMQUdfUkJVVFRPTiwgRVZFTlRfRkxBR19NQlVUVE9OLCBFVkVOVF9GTEFHX0NUUkxLRVksIEVWRU5UX0ZMQUdfU0hJRlRLRVksIEVWRU5UX0ZMQUdfQUxUS0VZCiAgfSBmcm9tICdvcGVuY3YnOwppbXBvcnQgeyBCaXRzVG9OYW1lcyB9IGZyb20gJy4vY3ZVdGlscy5qcyc7CgpleHBvcnQgY29uc3QgTW91c2VFdmVudHMgPSB7RVZFTlRfTU9VU0VNT1ZFLCBFVkVOVF9MQlVUVE9ORE9XTiwgRVZFTlRfUkJVVFRPTkRPV04sIEVWRU5UX01CVVRUT05ET1dOLCBFVkVOVF9MQlVUVE9OVVAsIEVWRU5UX1JCVVRUT05VUCwgRVZFTlRfTUJVVFRPTlVQLCBFVkVOVF9MQlVUVE9OREJMQ0xLLCBFVkVOVF9SQlVUVE9OREJMQ0xLLCBFVkVOVF9NQlVUVE9OREJMQ0xLLCBFVkVOVF9NT1VTRVdIRUVMLCBFVkVOVF9NT1VTRUhXSEVFTH07CmV4cG9ydCBjb25zdCBNb3VzZUZsYWdzID0ge0VWRU5UX0ZMQUdfTEJVVFRPTiwgRVZFTlRfRkxBR19SQlVUVE9OLCBFVkVOVF9GTEFHX01CVVRUT04sIEVWRU5UX0ZMQUdfQ1RSTEtFWSwgRVZFTlRfRkxBR19TSElGVEtFWSwgRVZFTlRfRkxBR19BTFRLRVl9OwoKZXhwb3J0IGNvbnN0IE1vdXNlID0gewogIHByaW50RXZlbnQ6ICgoKSA9PiB7CiAgICByZXR1cm4gZXZlbnQgPT4gTW91c2VFdmVudHNbZXZlbnRdLnJlcGxhY2UoL0VWRU5UXy8sICcnKTsKICB9KSgpLAogIHByaW50RmxhZ3M6ICgoKSA9PiB7CiAgICBjb25zdCB0b2tzID0gQml0c1RvTmFtZXMoTW91c2VGbGFncywgbmFtZSA9PiBuYW1lLnJlcGxhY2UoL0VWRU5UX0ZMQUdfLywgJycpKTsKCiAgICByZXR1cm4gZmxhZ3MgPT4gWy4uLnRva3MoZmxhZ3MpXTsKICB9KSgpCn07CgpleHBvcnQgY2xhc3MgU2NyZWVuIHsKICBzdGF0aWMgc2l6ZSgpIHsKICAgIHJldHVybiBnZXRTY3JlZW5SZXNvbHV0aW9uKCk7CiAgfQp9CgpleHBvcnQgY2xhc3MgV2luZG93IHsKICBjb25zdHJ1Y3RvcihuYW1lLCBmbGFncyA9IFdJTkRPV19OT1JNQUwpIHsKICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB0aGlzLmZsYWdzID0gZmxhZ3M7CgogICAgbmFtZWRXaW5kb3codGhpcy5uYW1lLCB0aGlzLmZsYWdzKTsKICB9CgogIG1vdmUoLi4uYXJncykgewogICAgbGV0IHBvcyA9IG5ldyBQb2ludCguLi5hcmdzKTsKICAgIG1vdmVXaW5kb3codGhpcy5uYW1lLCBwb3MueCwgcG9zLnkpOwogIH0KCiAgcmVzaXplKC4uLmFyZ3MpIHsKICAgIC8vY29uc29sZS5sb2coIldpbmRvdy5yZXNpemUiLCAuLi5hcmdzKTsKICAgIGxldCBzaXplID0gbmV3IFNpemUoLi4uYXJncyk7CiAgICByZXNpemVXaW5kb3codGhpcy5uYW1lLCAuLi5zaXplKTsKICAgIHJldHVybiBzaXplOwogIH0KCiAgYWxpZ24obiA9IDApIHsKICAgIGxldCBzID0gU2NyZWVuLnNpemUoKTsKICAgIGxldCByZWN0ID0gdGhpcy5pbWFnZVJlY3Q7CiAgICBsZXQgZGltID0gbmV3IFNpemUocmVjdCk7CiAgICBsZXQgeyB4LCB5IH0gPSBkaW0uYWxpZ24ocywgbik7CiAgICBjb25zb2xlLmxvZygncG9zJywgeyB4LCB5IH0pOwogICAgcmV0dXJuIHRoaXMubW92ZSh4LCB5KTsKICB9CgogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgaW1hZ2VSZWN0KCkgewogICAgcmV0dXJuIGdldFdpbmRvd0ltYWdlUmVjdCh0aGlzLm5hbWUpOwogIH0KCiAgZ2V0KHByb3BJZCkgewogICAgcmV0dXJuIGdldFdpbmRvd1Byb3BlcnR5KHRoaXMubmFtZSwgcHJvcElkKTsKICB9CiAgc2V0KHByb3BJZCwgdmFsdWUpIHsKICAgIHNldFdpbmRvd1Byb3BlcnR5KHRoaXMubmFtZSwgcHJvcElkLCB2YWx1ZSk7CiAgfQoKICBzZXRUaXRsZSh0aXRsZSkgewogICAgdGhpcy50aXRsZSA9IHRpdGxlOwogICAgc2V0V2luZG93VGl0bGUodGhpcy5uYW1lLCB0aXRsZSk7CiAgfQoKICBzZXRNb3VzZUNhbGxiYWNrKGZuKSB7CiAgICBjb25zb2xlLmxvZygnV2luZG93LnNldE1vdXNlQ2FsbGJhY2snLCBmbik7CiAgICBzZXRNb3VzZUNhbGxiYWNrKHRoaXMubmFtZSwgKGV2ZW50LCB4LCB5LCBmbGFncykgPT4gewogICAgICAvL2NvbnNvbGUubG9nKCJNb3VzZUNhbGxiYWNrIiwge2V2ZW50LHgseSxmbGFnc30pOwogICAgICBmbi5jYWxsKHRoaXMsIGV2ZW50LCB4LCB5LCBmbGFncyk7CiAgICB9KTsKICB9CgogIHNob3cobWF0KSB7CiAgICBpbXNob3codGhpcy5uYW1lLCBtYXQpOwogIH0KCiAgdmFsdWVPZigpIHsKICAgIHJldHVybiB0aGlzLm5hbWU7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gVGV4dFN0eWxlKGZvbnRGYWNlID0gRk9OVF9IRVJTSEVZX1BMQUlOLCBmb250U2NhbGUgPSAxLjAsIHRoaWNrbmVzcyA9IC0xKSB7CiAgT2JqZWN0LmFzc2lnbih0aGlzLCB7IGZvbnRGYWNlLCBmb250U2NhbGUsIHRoaWNrbmVzcyB9KTsKfQoKT2JqZWN0LmFzc2lnbihUZXh0U3R5bGUucHJvdG90eXBlLCB7CiAgc2l6ZSh0ZXh0LCBmbiA9IHkgPT4ge30pIHsKICAgIGNvbnN0IHsgZm9udEZhY2UsIGZvbnRTY2FsZSwgdGhpY2tuZXNzIH0gPSB0aGlzOwogICAgbGV0IGJhc2VZOwogICAgbGV0IHNpemUgPSBuZXcgU2l6ZSguLi5EcmF3LnRleHRTaXplKHRleHQsIGZvbnRGYWNlLCBmb250U2NhbGUsIHRoaWNrbmVzcywgeSA9PiAoYmFzZVkgPSB5KSkpOwoKICAgIGZuKGJhc2VZKTsKCiAgICBzaXplLnkgPSBiYXNlWTsKICAgIHJldHVybiBzaXplOwogIH0sCgogIGRyYXcobWF0LCB0ZXh0LCBwb3MsIGNvbG9yLCBsaW5lVGhpY2tuZXNzID0gRklMTEVELCBsaW5lVHlwZSA9IExJTkVfQUEpIHsKICAgIGNvbnN0IHsgZm9udEZhY2UsIGZvbnRTY2FsZSwgdGhpY2tuZXNzIH0gPSB0aGlzOwogICAgRHJhdy50ZXh0KG1hdCwgdGV4dCwgcG9zLCBmb250RmFjZSwgZm9udFNjYWxlLCBjb2xvciA/PyBbMjU1LCAyNTUsIDI1NSwgMjU1XSwgbGluZVRoaWNrbmVzcyA/PyB0aGlja25lc3MsIGxpbmVUeXBlID8/IExJTkVfQUEpOwogIH0KfSk7Cgpjb25zdCBwYWxldHRlMTYgPSBbMHgwMDAwMDAsIDB4YTAwMDAwLCAweDAwYTAwMCwgMHhhMGEwMDAsIDB4MDAwMGEwLCAweGEwMDBhMCwgMHgwMGEwYTAsIDB4YzBjMGMwLCAweGEwYTBhMCwgMHhmZjAwMDAsIDB4MDBmZjAwLCAweGZmZmYwMCwgMHgwMDAwZmYsIDB4ZmYwMGZmLCAweDAwZmZmZiwgMHhmZmZmZmZdOwoKZXhwb3J0IGZ1bmN0aW9uIERyYXdUZXh0KGRzdCwgdGV4dCwgY29sb3IsIGZvbnRGYWNlLCBmb250U2l6ZSA9IDEzKSB7CiAgbGV0IGMgPSBjb2xvcjsKICBsZXQgZm9udCA9IHR5cGVvZiBmb250RmFjZSA9PSAnb2JqZWN0JyAmJiBmb250RmFjZSAhPSBudWxsICYmIGZvbnRGYWNlIGluc3RhbmNlb2YgVGV4dFN0eWxlID8gZm9udEZhY2UgOiBuZXcgVGV4dFN0eWxlKGZvbnRGYWNlLCBmb250U2l6ZSwgLTEpOwogIGxldCBsaW5lcyA9IFsuLi50ZXh0Lm1hdGNoQWxsKC8oXHgxYlteYS16XSpbYS16XXxcbnxbXlx4MWJcbl0qKS9nKV0ubWFwKG0gPT4gbVswXSk7CiAgbGV0IGJhc2VZOwogIGxldCBzaXplID0gZm9udC5zaXplKCd5UCcsIHkgPT4gKGJhc2VZID0geSkpOwogIGxldCBzdGFydCA9IG5ldyBQb2ludChzaXplLndpZHRoIC8gdGV4dC5sZW5ndGgsIGJhc2VZIC0gMyk7CiAgbGV0IHBvcyA9IG5ldyBQb2ludChzdGFydCk7CiAgbGV0IGluY1kgPSAoYmFzZVkgfHwgMikgKyBzaXplLmhlaWdodCArIDM7CgogIGZvcihsZXQgbGluZSBvZiBsaW5lcykgewogICAgaWYobGluZSA9PSAnXG4nKSB7CiAgICAgIHBvcy55ICs9IGluY1k7CiAgICAgIHBvcy54ID0gc3RhcnQueDsKICAgICAgY29udGludWU7CiAgICB9IGVsc2UgaWYobGluZS5zdGFydHNXaXRoKCdceDFiJykpIHsKICAgICAgbGV0IGFuc2kgPSBbLi4ubGluZS5tYXRjaEFsbCgvKFswLTldK3xbYS16XSkvZyldLm1hcChtID0+IChpc05hTigrbVswXSkgPyBtWzBdIDogK21bMF0pKTsKICAgICAgaWYoYW5zaVthbnNpLmxlbmd0aCAtIDFdID09ICdtJykgewogICAgICAgIGxldCBuOwogICAgICAgIGZvcihsZXQgY29kZSBvZiBhbnNpLnNsaWNlKDAsIC0xKSkgewogICAgICAgICAgaWYoY29kZSA9PSAwKSBjb250aW51ZTsKICAgICAgICAgIGlmKGNvZGUgPT0gMSkgbiA9IChuIHwgMCkgKyA4OwogICAgICAgICAgZWxzZSBpZihjb2RlID49IDMwKSBuID0gbiB8IDAgfCAoY29kZSAtIDMwKTsKICAgICAgICB9CiAgICAgICAgaWYobiA9PT0gdW5kZWZpbmVkKSBjID0gY29sb3I7CiAgICAgICAgZWxzZSBjID0gcGFsZXR0ZTE2W25dOwogICAgICB9CiAgICAgIGNvbnRpbnVlOwogICAgfQogICAgc2l6ZSA9IGZvbnQuc2l6ZShsaW5lKTsKICAgIGZvbnQuZHJhdyhkc3QsIGxpbmUsIHBvcywgYywgLTEsIExJTkVfQUEpOwogICAgcG9zLnggKz0gc2l6ZS53aWR0aDsKICB9Cn0KAAAAAAAAAADaEgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgCAAAAAAAAaAIAAAAAAAAAAAAAAAAAAA"
				],
				[
					299,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAgAAAALy9pbXBvcnQgKiBhcyBjdiBmcm9tICdvcGVuY3YnOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					4,
					"left_delete",
					null,
					"BAAAAB8NAAAAAAAAHw0AAAAAAAAJAAAAdGhpY2tuZXNzHg0AAAAAAAAeDQAAAAAAAAEAAAAgHQ0AAAAAAAAdDQAAAAAAAAEAAAA/HA0AAAAAAAAcDQAAAAAAAAEAAAA/",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8NAAAAAAAAKA0AAAAAAAAAAAAAAADwvw"
				],
				[
					318,
					10,
					"left_delete",
					null,
					"CgAAADANAAAAAAAAMA0AAAAAAAABAAAAQS8NAAAAAAAALw0AAAAAAAABAAAAQS4NAAAAAAAALg0AAAAAAAABAAAAXy0NAAAAAAAALQ0AAAAAAAABAAAARSwNAAAAAAAALA0AAAAAAAABAAAATisNAAAAAAAAKw0AAAAAAAABAAAASSoNAAAAAAAAKg0AAAAAAAABAAAATCkNAAAAAAAAKQ0AAAAAAAABAAAAICgNAAAAAAAAKA0AAAAAAAABAAAAPycNAAAAAAAAJw0AAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADENAAAAAAAAMQ0AAAAAAAAAAAAAAADwvw"
				],
				[
					329,
					1,
					"cut",
					null,
					"AQAAAPcMAAAAAAAA9wwAAAAAAAAVAAAAIFsyNTUsIDI1NSwgMjU1LCAyNTVd",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAADA0AAAAAAAAAAAAAAADwvw"
				],
				[
					330,
					2,
					"left_delete",
					null,
					"AgAAAPYMAAAAAAAA9gwAAAAAAAABAAAAP/UMAAAAAAAA9QwAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " ?="
					},
					"AwAAAFcMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABZDAAAAAAAAAAAAABZDAAAAAAAAFoMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcMAAAAAAAAVwwAAAAAAAAAAAAAAADwvw"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoMAAAAAAAAWwwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoMAAAAAAAAWgwAAAAAAAAAAAAAAADwvw"
				],
				[
					335,
					3,
					"left_delete",
					null,
					"AwAAAFoMAAAAAAAAWgwAAAAAAAABAAAAIFkMAAAAAAAAWQwAAAAAAAABAAAAPVgMAAAAAAAAWAwAAAAAAAABAAAAPw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsMAAAAAAAAWwwAAAAAAAAAAAAAAADwvw"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFgMAAAAAAAAWQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgMAAAAAAAAWAwAAAAAAAAAAAAAAADwvw"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkMAAAAAAAAWgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkMAAAAAAAAWQwAAAAAAAAAAAAAAADwvw"
				],
				[
					338,
					1,
					"paste",
					null,
					"AQAAAFoMAAAAAAAAbwwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoMAAAAAAAAWgwAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAClEgAAaW1wb3J0IHsgU2l6ZSwgUG9pbnQsIERyYXcsIEZJTExFRCwgRk9OVF9IRVJTSEVZX1BMQUlOLCBnZXRTY3JlZW5SZXNvbHV0aW9uLCBnZXRXaW5kb3dJbWFnZVJlY3QsIGdldFdpbmRvd1Byb3BlcnR5LCBpbXNob3csIExJTkVfQUEsIG1vdmVXaW5kb3csIG5hbWVkV2luZG93LCByZXNpemVXaW5kb3csIHNldE1vdXNlQ2FsbGJhY2ssIHNldFdpbmRvd1Byb3BlcnR5LCBzZXRXaW5kb3dUaXRsZSwgV0lORE9XX05PUk1BTCwgRVZFTlRfTU9VU0VNT1ZFLCBFVkVOVF9MQlVUVE9ORE9XTiwgRVZFTlRfUkJVVFRPTkRPV04sIEVWRU5UX01CVVRUT05ET1dOLCBFVkVOVF9MQlVUVE9OVVAsIEVWRU5UX1JCVVRUT05VUCwgRVZFTlRfTUJVVFRPTlVQLCBFVkVOVF9MQlVUVE9OREJMQ0xLLCBFVkVOVF9SQlVUVE9OREJMQ0xLLCBFVkVOVF9NQlVUVE9OREJMQ0xLLCBFVkVOVF9NT1VTRVdIRUVMLCBFVkVOVF9NT1VTRUhXSEVFTCwgRVZFTlRfRkxBR19MQlVUVE9OLCBFVkVOVF9GTEFHX1JCVVRUT04sIEVWRU5UX0ZMQUdfTUJVVFRPTiwgRVZFTlRfRkxBR19DVFJMS0VZLCBFVkVOVF9GTEFHX1NISUZUS0VZLCBFVkVOVF9GTEFHX0FMVEtFWSB9IGZyb20gJ29wZW5jdic7CmltcG9ydCB7IEJpdHNUb05hbWVzIH0gZnJvbSAnLi9jdlV0aWxzLmpzJzsKCmV4cG9ydCBjb25zdCBNb3VzZUV2ZW50cyA9IHsgRVZFTlRfTU9VU0VNT1ZFLCBFVkVOVF9MQlVUVE9ORE9XTiwgRVZFTlRfUkJVVFRPTkRPV04sIEVWRU5UX01CVVRUT05ET1dOLCBFVkVOVF9MQlVUVE9OVVAsIEVWRU5UX1JCVVRUT05VUCwgRVZFTlRfTUJVVFRPTlVQLCBFVkVOVF9MQlVUVE9OREJMQ0xLLCBFVkVOVF9SQlVUVE9OREJMQ0xLLCBFVkVOVF9NQlVUVE9OREJMQ0xLLCBFVkVOVF9NT1VTRVdIRUVMLCBFVkVOVF9NT1VTRUhXSEVFTCB9OwpleHBvcnQgY29uc3QgTW91c2VGbGFncyA9IHsgRVZFTlRfRkxBR19MQlVUVE9OLCBFVkVOVF9GTEFHX1JCVVRUT04sIEVWRU5UX0ZMQUdfTUJVVFRPTiwgRVZFTlRfRkxBR19DVFJMS0VZLCBFVkVOVF9GTEFHX1NISUZUS0VZLCBFVkVOVF9GTEFHX0FMVEtFWSB9OwoKZXhwb3J0IGNvbnN0IE1vdXNlID0gewogIHByaW50RXZlbnQ6ICgoKSA9PiB7CiAgICByZXR1cm4gZXZlbnQgPT4gTW91c2VFdmVudHNbZXZlbnRdLnJlcGxhY2UoL0VWRU5UXy8sICcnKTsKICB9KSgpLAogIHByaW50RmxhZ3M6ICgoKSA9PiB7CiAgICBjb25zdCB0b2tzID0gQml0c1RvTmFtZXMoTW91c2VGbGFncywgbmFtZSA9PiBuYW1lLnJlcGxhY2UoL0VWRU5UX0ZMQUdfLywgJycpKTsKCiAgICByZXR1cm4gZmxhZ3MgPT4gWy4uLnRva3MoZmxhZ3MpXTsKICB9KSgpCn07CgpleHBvcnQgY2xhc3MgU2NyZWVuIHsKICBzdGF0aWMgc2l6ZSgpIHsKICAgIHJldHVybiBnZXRTY3JlZW5SZXNvbHV0aW9uKCk7CiAgfQp9CgpleHBvcnQgY2xhc3MgV2luZG93IHsKICBjb25zdHJ1Y3RvcihuYW1lLCBmbGFncyA9IFdJTkRPV19OT1JNQUwpIHsKICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB0aGlzLmZsYWdzID0gZmxhZ3M7CgogICAgbmFtZWRXaW5kb3codGhpcy5uYW1lLCB0aGlzLmZsYWdzKTsKICB9CgogIG1vdmUoLi4uYXJncykgewogICAgbGV0IHBvcyA9IG5ldyBQb2ludCguLi5hcmdzKTsKICAgIG1vdmVXaW5kb3codGhpcy5uYW1lLCBwb3MueCwgcG9zLnkpOwogIH0KCiAgcmVzaXplKC4uLmFyZ3MpIHsKICAgIC8vY29uc29sZS5sb2coIldpbmRvdy5yZXNpemUiLCAuLi5hcmdzKTsKICAgIGxldCBzaXplID0gbmV3IFNpemUoLi4uYXJncyk7CiAgICByZXNpemVXaW5kb3codGhpcy5uYW1lLCAuLi5zaXplKTsKICAgIHJldHVybiBzaXplOwogIH0KCiAgYWxpZ24obiA9IDApIHsKICAgIGxldCBzID0gU2NyZWVuLnNpemUoKTsKICAgIGxldCByZWN0ID0gdGhpcy5pbWFnZVJlY3Q7CiAgICBsZXQgZGltID0gbmV3IFNpemUocmVjdCk7CiAgICBsZXQgeyB4LCB5IH0gPSBkaW0uYWxpZ24ocywgbik7CiAgICBjb25zb2xlLmxvZygncG9zJywgeyB4LCB5IH0pOwogICAgcmV0dXJuIHRoaXMubW92ZSh4LCB5KTsKICB9CgogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgaW1hZ2VSZWN0KCkgewogICAgcmV0dXJuIGdldFdpbmRvd0ltYWdlUmVjdCh0aGlzLm5hbWUpOwogIH0KCiAgZ2V0KHByb3BJZCkgewogICAgcmV0dXJuIGdldFdpbmRvd1Byb3BlcnR5KHRoaXMubmFtZSwgcHJvcElkKTsKICB9CiAgc2V0KHByb3BJZCwgdmFsdWUpIHsKICAgIHNldFdpbmRvd1Byb3BlcnR5KHRoaXMubmFtZSwgcHJvcElkLCB2YWx1ZSk7CiAgfQoKICBzZXRUaXRsZSh0aXRsZSkgewogICAgdGhpcy50aXRsZSA9IHRpdGxlOwogICAgc2V0V2luZG93VGl0bGUodGhpcy5uYW1lLCB0aXRsZSk7CiAgfQoKICBzZXRNb3VzZUNhbGxiYWNrKGZuKSB7CiAgICBjb25zb2xlLmxvZygnV2luZG93LnNldE1vdXNlQ2FsbGJhY2snLCBmbik7CiAgICBzZXRNb3VzZUNhbGxiYWNrKHRoaXMubmFtZSwgKGV2ZW50LCB4LCB5LCBmbGFncykgPT4gewogICAgICAvL2NvbnNvbGUubG9nKCJNb3VzZUNhbGxiYWNrIiwge2V2ZW50LHgseSxmbGFnc30pOwogICAgICBmbi5jYWxsKHRoaXMsIGV2ZW50LCB4LCB5LCBmbGFncyk7CiAgICB9KTsKICB9CgogIHNob3cobWF0KSB7CiAgICBpbXNob3codGhpcy5uYW1lLCBtYXQpOwogIH0KCiAgdmFsdWVPZigpIHsKICAgIHJldHVybiB0aGlzLm5hbWU7CiAgfQp9CgpleHBvcnQgZnVuY3Rpb24gVGV4dFN0eWxlKGZvbnRGYWNlID0gRk9OVF9IRVJTSEVZX1BMQUlOLCBmb250U2NhbGUgPSAxLjAsIHRoaWNrbmVzcyA9IC0xKSB7CiAgT2JqZWN0LmFzc2lnbih0aGlzLCB7IGZvbnRGYWNlLCBmb250U2NhbGUsIHRoaWNrbmVzcyB9KTsKfQoKT2JqZWN0LmFzc2lnbihUZXh0U3R5bGUucHJvdG90eXBlLCB7CiAgc2l6ZSh0ZXh0LCBmbiA9IHkgPT4ge30pIHsKICAgIGNvbnN0IHsgZm9udEZhY2UsIGZvbnRTY2FsZSwgdGhpY2tuZXNzIH0gPSB0aGlzOwogICAgbGV0IGJhc2VZOwogICAgbGV0IHNpemUgPSBuZXcgU2l6ZSguLi5EcmF3LnRleHRTaXplKHRleHQsIGZvbnRGYWNlLCBmb250U2NhbGUsIHRoaWNrbmVzcywgeSA9PiAoYmFzZVkgPSB5KSkpOwoKICAgIGZuKGJhc2VZKTsKCiAgICBzaXplLnkgPSBiYXNlWTsKICAgIHJldHVybiBzaXplOwogIH0sCgogIGRyYXcobWF0LCB0ZXh0LCBwb3MsIGNvbG9yID0gIFsyNTUsIDI1NSwgMjU1LCAyNTVdLCBsaW5lVGhpY2tuZXNzID0gRklMTEVELCBsaW5lVHlwZSA9IExJTkVfQUEpIHsKICAgIGNvbnN0IHsgZm9udEZhY2UsIGZvbnRTY2FsZSwgdGhpY2tuZXNzIH0gPSB0aGlzOwogICAgRHJhdy50ZXh0KG1hdCwgdGV4dCwgcG9zLCBmb250RmFjZSwgZm9udFNjYWxlLCBjb2xvciAsIGxpbmVUaGlja25lc3MgLCBsaW5lVHlwZSApOwogIH0KfSk7Cgpjb25zdCBwYWxldHRlMTYgPSBbMHgwMDAwMDAsIDB4YTAwMDAwLCAweDAwYTAwMCwgMHhhMGEwMDAsIDB4MDAwMGEwLCAweGEwMDBhMCwgMHgwMGEwYTAsIDB4YzBjMGMwLCAweGEwYTBhMCwgMHhmZjAwMDAsIDB4MDBmZjAwLCAweGZmZmYwMCwgMHgwMDAwZmYsIDB4ZmYwMGZmLCAweDAwZmZmZiwgMHhmZmZmZmZdOwoKZXhwb3J0IGZ1bmN0aW9uIERyYXdUZXh0KGRzdCwgdGV4dCwgY29sb3IsIGZvbnRGYWNlLCBmb250U2l6ZSA9IDEzKSB7CiAgbGV0IGMgPSBjb2xvcjsKICBsZXQgZm9udCA9IHR5cGVvZiBmb250RmFjZSA9PSAnb2JqZWN0JyAmJiBmb250RmFjZSAhPSBudWxsICYmIGZvbnRGYWNlIGluc3RhbmNlb2YgVGV4dFN0eWxlID8gZm9udEZhY2UgOiBuZXcgVGV4dFN0eWxlKGZvbnRGYWNlLCBmb250U2l6ZSwgLTEpOwogIGxldCBsaW5lcyA9IFsuLi50ZXh0Lm1hdGNoQWxsKC8oXHgxYlteYS16XSpbYS16XXxcbnxbXlx4MWJcbl0qKS9nKV0ubWFwKG0gPT4gbVswXSk7CiAgbGV0IGJhc2VZOwogIGxldCBzaXplID0gZm9udC5zaXplKCd5UCcsIHkgPT4gKGJhc2VZID0geSkpOwogIGxldCBzdGFydCA9IG5ldyBQb2ludChzaXplLndpZHRoIC8gdGV4dC5sZW5ndGgsIGJhc2VZIC0gMyk7CiAgbGV0IHBvcyA9IG5ldyBQb2ludChzdGFydCk7CiAgbGV0IGluY1kgPSAoYmFzZVkgfHwgMikgKyBzaXplLmhlaWdodCArIDM7CgogIGZvcihsZXQgbGluZSBvZiBsaW5lcykgewogICAgaWYobGluZSA9PSAnXG4nKSB7CiAgICAgIHBvcy55ICs9IGluY1k7CiAgICAgIHBvcy54ID0gc3RhcnQueDsKICAgICAgY29udGludWU7CiAgICB9IGVsc2UgaWYobGluZS5zdGFydHNXaXRoKCdceDFiJykpIHsKICAgICAgbGV0IGFuc2kgPSBbLi4ubGluZS5tYXRjaEFsbCgvKFswLTldK3xbYS16XSkvZyldLm1hcChtID0+IChpc05hTigrbVswXSkgPyBtWzBdIDogK21bMF0pKTsKICAgICAgaWYoYW5zaVthbnNpLmxlbmd0aCAtIDFdID09ICdtJykgewogICAgICAgIGxldCBuOwogICAgICAgIGZvcihsZXQgY29kZSBvZiBhbnNpLnNsaWNlKDAsIC0xKSkgewogICAgICAgICAgaWYoY29kZSA9PSAwKSBjb250aW51ZTsKICAgICAgICAgIGlmKGNvZGUgPT0gMSkgbiA9IChuIHwgMCkgKyA4OwogICAgICAgICAgZWxzZSBpZihjb2RlID49IDMwKSBuID0gbiB8IDAgfCAoY29kZSAtIDMwKTsKICAgICAgICB9CiAgICAgICAgaWYobiA9PT0gdW5kZWZpbmVkKSBjID0gY29sb3I7CiAgICAgICAgZWxzZSBjID0gcGFsZXR0ZTE2W25dOwogICAgICB9CiAgICAgIGNvbnRpbnVlOwogICAgfQogICAgc2l6ZSA9IGZvbnQuc2l6ZShsaW5lKTsKICAgIGZvbnQuZHJhdyhkc3QsIGxpbmUsIHBvcywgYywgLTEsIExJTkVfQUEpOwogICAgcG9zLnggKz0gc2l6ZS53aWR0aDsKICB9Cn0KAAAAAAAAAAChEgAAAAAAAAAAAAAAAAAAAAAAAKESAAAAAAAAAAAAAAAAAAAAAAAAoRIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUQAAAAAAAANRAAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/CMakeFiles",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/qjs-opencv",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/time-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Projects/plot-cv/diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/date-helpers.js",
		"/home/roman/Projects/plot-cv/scripts/collapse-imports.sh",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/eda/circuitjs.js",
		"/home/roman/Projects/plot-cv/lib/eda/values.js",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/an-tronics/eagle/Headphone-Amplifier-ClassAB-alt.sch",
		"/home/roman/Projects/plot-cv/lib/json/path.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/deep.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/json/diff.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/lib/grammars/CSV.g4",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/defs.cmake",
		"/home/roman/Projects/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger-transport-win.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/contours-802.json",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger-transport-unix.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/lib/build/compileCommand.js",
		"/home/roman/Projects/plot-cv/compile_commands.js",
		"/home/roman/Projects/plot-cv/contours-801.json",
		"/home/roman/Projects/plot-cv/lib/dom/xpath.js",
		"/home/roman/Projects/plot-cv/lib/compileCommand.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/test-css3.js",
		"/home/roman/Projects/plot-cv/lib/parse/grammar.js",
		"/home/roman/Projects/plot-cv/list-exports.js",
		"/home/roman/Projects/plot-cv/test-parse.js",
		"/home/roman/Projects/plot-cv/lib/grammars/xpath.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/ini-grammar.js",
		"/home/roman/Projects/plot-cv/test-ini.js",
		"/home/roman/Projects/plot-cv/lib/parse/fn.js",
		"/home/roman/Projects/plot-cv/grammar-css3.js",
		"/home/roman/Projects/plot-cv/test-childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test-css3.js",
		"/home/roman/Projects/plot-cv/lib/xml/parse.js",
		"/home/roman/Projects/plot-cv/lib/xml/util.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/cmake/imgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/cmake/highgui-viewer.cmake",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript.js",
		"/home/roman/Projects/plot-cv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/lib/parse/lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/fontsample.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/cmake/OpenCV.cmake",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/image-helpers.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.js",
		"/home/roman/Projects/plot-cv/test-line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/lib/pointer.js",
		"/home/roman/Projects/plot-cv/lib/preact.m.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/circuitjs1-1.2.2/modified_files/CirSim.java",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/config.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/lib/iterable.js",
		"/home/roman/Projects/plot-cv/lib/iterator.js",
		"/home/roman/Projects/plot-cv/test-mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/eagle-commands.js",
		"/home/roman/Projects/plot-cv/clang-list.js"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"gettok",
			" matchStatement",
			"'eof'",
			" parseTempl",
			"gettok",
			"revert",
			"isTemplateLiteral",
			"matchTemplateLiteral",
			"gettok",
			"\\.lex\\(",
			"this.lexer",
			"Lexer",
			"lexer",
			"gett",
			"Unexpected tok",
			"\\.lex\\(",
			"kind",
			"printObject",
			"ge",
			"get",
			"'get'",
			"printTemplate",
			"WriteFile",
			"'rect",
			"DrawDottedLine",
			"\\[0, 0, 0\\]",
			" \n",
			"GetRect",
			"cv",
			"cv\\.",
			"yAxis",
			"yAxxis",
			", \\[0, 0, 0\\], 1, LINE_AA",
			"rect",
			"_",
			"offset",
			"point_read",
			"js_point_arith",
			"\\*s",
			"POINT_ARITH_ADD",
			"make_shared_module",
			"make_shared",
			"POINT_ARITH_ADD:",
			"POINT_ARITH_ADD",
			"style",
			"Font",
			"Console",
			"main",
			"getDirect",
			"hasDirect",
			"directives",
			"new REPL",
			"directives",
			"help\\(",
			"importModule",
			"new REPL",
			"REPL",
			"ReadBJ",
			"io-help",
			"BJSON",
			"import express from 'express';\nimport * as path from 'path';\nimport * as util from 'util';\nimport Util from './lib/util.js';\nimport bodyParser from 'body-parser';\nimport expressWs from 'express-ws';\nimport { Alea } from './lib/alea.js';\nimport crypto from 'crypto';\nimport fetch from 'isomorphic-fetch';\nimport { exec } from 'promisify-child-process';\nimport * as fs from 'fs';\nimport { promises as fsPromises } from 'fs';\nimport { IfDebug, LogIfDebug, ReadFile, LoadHistory, ReadJSON, MapFile,  WriteFile, WriteJSON,  DirIterator, RecursiveDirIterator, ReadDirRecursive, Filter, FilterImages, SortFiles, StatFiles } from './io-helpers.js';\nimport { Console } from 'console';\nimport SerialPort from 'serialport';\nimport SerialStream from '@serialport/stream';\n//import SerialBinding from '@serialport/bindings';\nimport Socket from './webSocket.js';\nimport WebSocket from 'ws';\nimport PortableFileSystem from './lib/filesystem.js';\nimport PortableChildProcess, { SIGTERM, SIGKILL, SIGSTOP, SIGCONT } from './lib/childProcess.js';\nimport { Repeater } from './lib/repeater/repeater.js';\nimport { Message } from './message.js';\n\n//SerialStream.Binding = SerialBinding;\nlet names = [],\n  dirs = {};\n\nlet filesystem, childProcess;\nconst port = process.env.PORT || 3000;\n\nconst files = new Set();\nconst hash = crypto.createHash('sha1');\n\nconst prng = new Alea();\nprng.seed(Date.now());\nconsole.log('random:', prng.uint32());\nconsole.log('randStr:', Util.randStr(8, null, prng));\n\nlet app = express();\nexpressWs(app, null, { perMessageDeflate: false });\nconst p = path.join(path.dirname(process.argv[1]), '.');\n\nlet mountDirs = ['data', '../an-tronics/eagle', '../insider/eagle', '../lc-meter/eagle', '../pictest/eagle'];\nlet tmpDir = './tmp';\n\nasync function waitChild(proc) {\n  const { pid, stdout, stderr, wait } = proc;\n  console.log('Process ID =', pid);\n  let ret = await wait();\n  console.log('wait() =', ret);\n  return ret;\n}\n\nasync function runMount(dirsIterator) {\n  for await(let dirs of await dirsIterator) {\n    console.log(`runMount`, dirs);\n    console.debug(`Mount ${dirs} to tmp/`);\n\n    let proc = childProcess('./mount-tmp.sh', ['-f', ...Util.unique(dirs || [])], {\n      env: { OPTS: 'auto_unmount,atomic_o_trunc,big_writes,kernel_cache' }\n    });\n    async function readData(output, callback = d => {}) {\n      try {\n        for await(let data of new Repeater((push, stop) => {\n          output.on('data', chunk => push(chunk.toString()));\n          proc.on('exit', stop);\n          //          output.on('close', () => push(null));\n        })) {\n          if(data === null) {\n            console.log('output EOF');\n            //return;\n          }\n          if(typeof data == 'string') data.split(/\\n/g).forEach(line => callback(line));\n        }\n      } catch(e) {\n        return e;\n      }\n    }\n    readData(proc.stdout);\n    readData(proc.stderr, data => console.log('stderr data:', Util.abbreviate(Util.escape(data), Util.getEnv('COLUMNS') || 120)));\n    let exitCode = await waitChild(proc);\n    console.log('exitCode:', exitCode);\n    return exitCode;\n  }\n}\n\nasync function RequestContours(req, res) {\n  const { body } = req;\n  const { contours, frame, width, height } = body;\n  console.log(`${req.url}`, { contours, frame, width, height });\n\n  res.status(200).send('OK');\n\n  Socket.sendAll({ type: 'CONTOURS', origin: '*', recipient: '*', body });\n\n  //  res.json({ status: 'OK' });\n}\n\n//console.log('Serving from', p);\n\nasync function main() {\n  const { stdout, stderr } = process;\n  globalThis.console = new Console({\n    stdout,\n    stderr,\n    inspectOptions: {\n      breakLength: 120,\n      maxStringLength: Infinity,\n      maxArrayLength: 30,\n      compact: 2\n    }\n  });\n  await PortableChildProcess(cp => (childProcess = cp));\n\n  Socket.timeoutCycler();\n\n  /*  let mounter = runMount(\n    new Repeater(async (push, stop) => {\n      while(true) await push(mountDirs);\n    })\n  ).then(exitCode => {\n    console.log('runMount', { exitCode });\n    if(exitCode == 127) {\n      Util.exit(127);\n    }\n    return exitCode;\n  });*/\n  console.log('mountDirs', { mountDirs });\n\n  app.use((req, res, next) => {\n    //    console.log(\"req\", req.url, req.method);\n    next();\n  });\n  app.use(express.text({ type: 'application/xml', limit: '16384kb' }));\n\n  app.use(bodyParser.json({ limit: '200mb' }));\n  app.use(bodyParser.raw({ type: 'text/plain;charset=UTF-8', limit: '524288kb' }));\n  app.use(bodyParser.raw({ type: 'text/plain', limit: '524288kb' }));\n  app.use(bodyParser.raw({ type: 'application/octet-stream', limit: '524288kb' }));\n  app.use(bodyParser.raw({ type: 'multipart/mixed', limit: '16384kb' }));\n\n  app.use((req, res, next) => {\n    res.append('Access-Control-Allow-Origin', `https://api.github.com, http://127.0.0.1:${port}`);\n    res.append('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n    res.append('Access-Control-Allow-Headers', 'Content-Type, Accept, Authorization');\n    res.append('Access-Control-Allow-Credentials', 'true');\n    next();\n  });\n\n  function SendRaw(res, file, data, type = 'application/octet-stream') {\n    res.setHeader('Content-Disposition', `attachment; filename=\"${path.basename(file)}\"`);\n\n    if(type) res.setHeader('Content-Type', type);\n    if(data) return res.send(data);\n    else if(file && typeof file == 'string') {\n      console.log('sendFile', { file });\n      return res.sendFile(file, { root: process.cwd() });\n    }\n  }\n\n  const convertToGerber = async (boardFile, opts = {}) => {\n    console.log('convertToGerber', { boardFile, opts });\n    let { layers = opts.side == 'outline' ? ['Measures'] : opts.drill ? ['Drills', 'Holes'] : [opts.front ? 'Top' : 'Bottom', 'Pads', 'Vias'], format = opts.drill ? 'EXCELLON' : 'GERBER_RS274X', data, fetch = false, front, back } = opts;\n    const base = path.basename(boardFile, '.brd');\n    const formatToExt = (layers, format) => {\n      if(opts.drill || format.startsWith('EXCELLON') || layers.indexOf('Drills') != -1 || layers.indexOf('Holes') != -1) return 'TXT';\n      if(layers.indexOf('Bottom') != -1 || format.startsWith('GERBER')) return opts.side == 'outline' ? 'GKO' : front ? 'GTL' : 'GBL';\n\n      return 'rs274x';\n    };\n    const gerberFile = `./tmp/${base}.${formatToExt(layers, format)}`;\n    const cmd = `eagle -X -d ${format} -o \"${gerberFile}\" \"${boardFile}\" ${layers.join(' ')}`;\n    console.log(`executing '${cmd}'`);\n    const child = exec(`${cmd} 2>&1 0</dev/null`, {});\n    // do whatever you want with `child` here - it's a ChildProcess instance just\n    // with promise-friendly `.then()` & `.catch()` functions added to it!\n    let output = '';\n    child.stdout.on('data', data => (output += data));\n    child.stderr.on('data', data => (output += data));\n    const { stdout, stderr, code, signal } = await child;\n    console.log(`code: ${code}`);\n    //  console.log(`output: ${output}`);\n    if(code !== 0) throw new Error(output);\n    if(output) output = output.replace(/\\s*\\r*\\n/g, '\\n');\n    let result = { code, output };\n    if(opts.fetch) result.data = await (await fsPromises.readFile(GetVFSPath(gerberFile))).toString();\n    result.file = gerberFile;\n    console.log('convertToGerber result =', result);\n    return result;\n  };\n\n  const gerberEndpoint = async (req, res) => {\n    const { body } = req;\n    let { board, save, file: filename, raw, ...opts } = body;\n    let result;\n    console.log('Request /gerber', { board, save, opts });\n    try {\n      result = await convertToGerber(board, opts);\n      if(save) {\n        filename = filename || typeof save == 'string' ? save : null;\n        filename = `tmp/` + filename.replace(/.*\\/([^\\/])*\\.[^\\/.]*$/g, '$1');\n        await fsPromises.writeFile(filename, result.data).then(res => console.log('Wrote file:', res));\n      }\n    } catch(error) {\n      result = { error };\n    }\n    console.log('Response /gerber', Util.filterOutKeys(result, /(output|data)/));\n\n    if(/get/i.test(req.method) || raw) {\n      const { file } = result;\n      return SendRaw(res, file, result.data);\n    }\n    res.json(result);\n  };\n\n  app.get(/^\\/gerber/, gerberEndpoint);\n  app.post(/^\\/gerber/, gerberEndpoint);\n\n  const gerberToGcode = async (gerberFile, allOpts = {}) => {\n    const basename = gerberFile.replace(/.*\\//g, '').replace(/\\.[^.]*$/, '');\n    let { fetch, data, raw, ...opts } = allOpts;\n    opts = {\n      basename,\n      zsafe: '1mm',\n      zchange: '2mm',\n      zwork: '-1mm',\n      zdrill: '-2mm',\n      zcut: '-2mm',\n      'cutter-diameter': '1mm',\n      'drill-feed': 1000,\n      'drill-speed': 10000,\n      'mill-feed': 600,\n      'mill-speed': 16000,\n      'cut-feed': 200,\n      'cut-speed': 10000,\n      'cut-infeed': '1mm',\n\n      'output-dir': './tmp/',\n      ...opts\n    };\n    if(opts.front == undefined && opts.back == undefined && opts.drill == undefined) opts.back = gerberFile;\n    let sides = [];\n\n    for(let side of ['front', 'back', 'drill', 'outline'])\n      if(side in opts) {\n        if(typeof opts[side] != 'string') opts[side] = gerberFile;\n        sides.push(side);\n      }\n\n    if(opts.voronoi && !opts.vectorial) opts.vectorial = 1;\n\n    console.debug(`gerberToGcode`, opts);\n    function makePath(ext, side, base = basename) {\n      return path.join(opts['output-dir'], `${base}_${side}.${ext}`);\n    }\n\n    const params = [...Object.entries(opts)].filter(([k, v]) => typeof v == 'string' || typeof v == 'number' || (typeof v == 'boolean' && v === true)).map(([k, v]) => `--${k}${typeof v != 'boolean' && v != '' ? '=' + v : ''}`);\n    console.log('Request /gcode', { gerberFile, fetch, raw });\n    //console.warn(`gerberToGcode`, Util.abbreviate(gerberFile), { gcodeFile, opts });\n\n    let wait;\n    try {\n      const cmd = `pcb2gcode ${params.join(' ')} 2>&1`;\n      console.warn(`executing '${cmd}'`);\n      const child = exec(cmd, {});\n      // do whatever you want with `child` here - it's a ChildProcess instance just\n      // with promise-friendly `.then()` & `.catch()` functions added to it!\n      let output = '';\n      child.stdout.on('data', data => (output += data));\n      child.stderr.on('data', data => (output += data));\n      wait = await child.catch(error => ({ code: -1, error }));\n\n      const { stdout, stderr, code, signal } = wait;\n      if(output) output = Util.abbreviate(output.replace(/\\s*\\r*\\n/g, '\\n'), 200);\n      console.log('Response /gcode', { stdout, output, sides });\n\n      //   if(code !== 0) throw new Error(output);\n\n      const gcodeFile = makePath('ngc', sides[0]);\n      const svgFile = makePath('svg', sides[0], 'processed');\n\n      for(let [file, to] of sides.map(side => [makePath('svg', side, 'processed'), makePath('svg', side)])) if(fs.existsSync(file)) fs.renameSync(file, to);\n\n      let files = sides.map(side => [side, makePath('ngc', side)]).filter(([side, file]) => fs.existsSync(file));\n      console.log('Response /gcode', { files });\n\n      let result = { code, output, cmd };\n      if(fetch) {\n        for(let [side, file] of files) result[side] = await (await fsPromises.readFile(GetVFSPath(file))).toString();\n      }\n      if(/*/get/i.test(req.method) || */ raw) {\n        const { file } = result;\n        return SendRaw(res, file, result.data);\n      }\n      result.files = Object.fromEntries(files);\n      console.log('Response /gcode', Util.filterOutKeys(result, /(Xoutput|data)/));\n      return result;\n    } catch(error) {\n      Util.putError(error);\n    }\n  };\n\n  let gcodeEndpoint = async (req, res) => {\n    const { body } = req;\n    let { file, ...opts } = body;\n    let result;\n\n    try {\n      result = await gerberToGcode(file, opts).catch(error => ({ error }));\n    } catch(error) {\n      result = { error };\n    } finally {\n      res.json(result);\n    }\n  };\n  app.post(/^\\/gcode/, gcodeEndpoint);\n  app.get(/^\\/gcode/, gcodeEndpoint);\n\n  const GithubListContents = async (owner, repo, dir, filter) => {\n    const url = `https://api.github.com/repos/${owner}/${repo}/contents/${dir}`;\n    console.log(`GITHUB list`, { owner, repo, dir, filter });\n    let response = await fetch(url);\n    let result = JSON.parse(await response.text());\n    console.log('result', result);\n    if(filter) {\n      const re = new RegExp(filter, 'g');\n      result = result.filter(({ name }) => re.test(name));\n    }\n    return result;\n  };\n\n  app.use(async (req, res, next) => {\n    if(!/overrides\\//.test(req.path)) {\n      let relativePath = path.join('.', req.path);\n      let overridePath = path.join('overrides', req.path);\n      let isFile = false;\n\n      await fsPromises\n        .stat(GetVFSPath(relativePath))\n        .then(st => (isFile = st.isFile()))\n        .catch(err => {});\n\n      let override = false;\n\n      if(isFile)\n        await fsPromises\n          .access(GetVFSPath(overridePath), fs.constants.F_OK)\n          .then(() => (override = true))\n          .catch(err => {});\n\n      if(override) {\n        console.log('Static request:', { overridePath, override, res });\n\n        return res.redirect('/' + overridePath);\n      }\n    }\n    if(/lib\\/preact.js/.test(req.url)) req.url = '/lib/preact.mjs';\n\n    if(!/lib\\//.test(req.url)) {\n      const { path, url, method, headers, query, body } = req;\n      false &&\n        console.log(\n          'Static request:',\n          { path, url, method, headers, query, body } /* Object.keys(req), */,\n          ...Util.if(\n            Util.filterOutKeys(req.headers, /(^sec|^accept|^cache|^dnt|-length|^host$|^if-|^connect|^user-agent|-type$|^origin$|^referer$)/),\n            () => [],\n            value => ['headers: ', value],\n            Util.isEmpty\n          )\n        );\n    }\n\n    next();\n  });\n\n  /*  app.use((req, res, next) => {\n    let file = req.url.replace(/^\\/?/, '');\n\n    if(/(data|tmp)/.test(req.url)) {\n      console.log(`Data file '${file}'`);\n      file = file.replace(/^\\/?(data\\/|tmp\\/|)/, '');\n      let dir = dirs[file];\n      if(dir) {\n        console.log('Data file ' + file + ' was requested.');\n      }\n    }\n    next();\n  });*/\n\n  /* app.use((req, res, next) => {\n    console.log('Request', req.url);\n    next();\n  });*/\n\n  let logfile;\n\n  app.use((req, res, next) => {\n    let file = req.url.replace(/^\\/?/, '');\n\n    logfile ??= fs.openSync('server.log', 'a+', 0o644);\n    let str;\n    let now = new Date();\n    str = `${now.toISOString().slice(0, 10).replace(/-/g, '')} ${now.toTimeString().slice(0, 8)} ${req.method.padEnd(4)} ${file}\\n`;\n\n    let written = fs.writeSync(logfile, str, 0, str.length);\n\n    console.log('Request: ' + file, `(${written} bytes written)`);\n\n    if(fs.existsSync(file)) {\n      const re = /[^\\n]*'util'[^\\n]*/g;\n      /*let m,\n        data = fs.readFileSync(file, 'utf-8');\n      if((m = re.exec(data))) {\n        console.log('The file ' + file + ` was requested. (${data.length})`, `match @ ${m.index}: ${m[0]}`);\n      }*/\n\n      files.add(file);\n    }\n    next();\n  });\n  app.use('/static', express.static(path.join(p, 'static')));\n  app.use('/modules', express.static(path.join(p, 'node_modules')));\n  app.use('/htm', express.static(path.join(p, 'htm')));\n  app.use('/node_modules', express.static(path.join(p, 'node_modules')));\n  app.use('/overrides', express.static(path.join(p, 'overrides')));\n  app.use('/components', express.static(path.join(p, 'components')));\n  app.use('/lib', express.static(path.join(p, 'lib')));\n  app.use('/tmp', express.static(path.join(p, 'tmp')));\n\n  app.use('/', express.static(p));\n\n  function FindFile(relative) {\n    for(let mnt of mountDirs) {\n      let file = path.join(mnt, relative);\n      const exists = fs.existsSync(file);\n      //console.log('FILE', file,exists);\n\n      if(exists) return mnt;\n    }\n  }\n\n  app.get(/^\\/?(data|tmp|vfs)\\//, async (req, res) => {\n    const file = req.url.replace(/^\\/?(data|tmp|vfs)\\//, '');\n    const dir = dirs[file] ?? FindFile(file);\n    const p = path.resolve(dir, file);\n    console.log('DATA', file, dir, p);\n    let data = await fsPromises.readFile(p, 'utf-8');\n    return res.type('application/json').status(200).send(data);\n\n    //   return res.sendFile(p);\n  });\n\n  app.get('/favicon.ico', (req, res) =>\n    res.sendFile(path.join(p, 'lib/eagle/icon/eagleicon.ico'), {\n      headers: {\n        'Content-Type': 'image/x-icon'\n      }\n    })\n  );\n  app.get(/\\/[^\\/]*\\.js$/, async (req, res) => res.sendFile(path.join(p, req.path)));\n\n  //app.get('/components.js', async (req, res) => res.sendFile(path.join(p, 'components.js')));\n\n  app.get(/\\/[^\\/]*\\.css$/, async (req, res) =>\n    res.sendFile(path.join(p, 'style.css'), {\n      headers: { 'Content-Type': 'text/css', cacheControl: false }\n    })\n  );\n\n  function GetVFSPath(file) {\n    let dir = dirs[file];\n    let ret = file;\n    if(dir) ret = path.join(dir, file);\n\n    // if(ret != file) console.log('GetVFSPath', dir, file);\n    return ret;\n  }\n\n  async function getDescription(file) {\n    // console.log('getDescription()', { file});\n    let str = await fsPromises.readFile(GetVFSPath(file)).then(r => r.toString());\n    let r = [...Util.matchAll('<(/)?(board|schematic|library)[ >]', str)]\n      .map(m => m.index)\n      .sort((a, b) => a - b)\n      .slice(0, 2);\n    let chunk = str.substring(...r);\n    let a = ['<description>', '</description>'];\n    let indexes = a\n      .map(s => new RegExp(s))\n      .map(re => re.exec(chunk))\n      .map(m => m && m.index);\n    let d = chunk.substring(...indexes);\n    if(d.startsWith('<description')) return Util.decodeHTMLEntities(d.substring(a[0].length));\n    return '';\n  }\n\n  const descMap = Util.weakMapper(getDescription, new Map());\n\n  async function GetFilesList(dir = './tmp', opts = {}) {\n    let { filter = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$', descriptions = false, names } = opts;\n    const re = new RegExp(filter, 'i');\n    const f = ent => re.test(ent);\n\n    console.log('GetFilesList()', { filter, descriptions }, ...(names ? [names.length] : []));\n\n    let dirmap = {};\n\n    //    if(!names) names = [...(await fsPromises.readdir(dir))].filter(f);\n    dirmap = mountDirs.reduce((acc, dir) => {\n      console.log('ReadDirRecursive', dir);\n      for(let entry of ReadDirRecursive(dir)) {\n        if(entry.endsWith('/')) continue;\n        if(!f(entry)) continue;\n        let relative = entry.startsWith(dir + '/') ? entry.slice(dir.length + 1) : entry;\n        acc[relative] = dir;\n        dirs[relative] = dir;\n      }\n      return acc;\n    }, {});\n\n    //   console.log('dirmap', dirmap);\n    if(!names) names = Object.keys(dirmap);\n    console.log('names', names.length);\n    return Promise.all(\n      names\n        //.map(entry => dirs[entry] +'/'+entry)\n        .reduce((acc, file) => {\n          let dir = dirs[file];\n          let abs = dir + '/' + file;\n          let description = descriptions ? descMap(file) : descMap.get(file);\n          //   console.log('descMap:', util.inspect(descMap, { depth: 1 }));\n          let obj = {\n            name: file,\n            //file,\n            dir: dirs[file]\n          };\n          if(typeof description == 'string') obj.description = description;\n          acc.push(\n            fsPromises\n              .stat(abs)\n              .then(({ ctime, mtime, mode, size }) =>\n                Object.assign(obj, {\n                  mtime: Util.toUnixTime(mtime),\n                  time: Util.toUnixTime(ctime),\n                  mode: `0${(mode & 0x09ff).toString(8)}`,\n                  size\n                })\n              )\n              .catch(err => {})\n          );\n          return acc;\n        }, [])\n    ).then(a => a.filter(i => i != null));\n  }\n\n  function FilesURLs(list) {\n    const base_url = list[0].replace(/\\/[^\\/]*$/, '');\n    const files = list.map(url => url.replace(/.*\\//g, ''));\n    return { base_url, files };\n  }\n  //app.use(\"/serialport\", remoteSerialPort.http({ verbose: true }));\n\n  app.get(/\\/list-serial/, async (req, res) => {\n    const list = await SerialPort.list();\n\n    res.json(list.filter(port => ['manufacturer', 'pnpId', 'vendorId', 'productId'].some(key => port[key])));\n  });\n\n  app.ws('/serial', async (ws, req) => {\n    const { port } = req.body;\n    console.debug('Object.keys(req)', Object.keys(req));\n\n    const duplex = WebSocket.createWebSocketStream(ws, { encoding: 'utf8' });\n\n    let serial = new SerialStream(port || '/dev/tnt1');\n\n    duplex.on('data', async data => {\n      data = data + '' + '\\r\\n';\n\n      console.debug('ws -> serial:', escape(data));\n\n      serial.write(data);\n      serial.flush();\n    });\n\n    serial.on('data', async data => {\n      data = (data + '').replace(/\\r?\\n?$/, '');\n\n      console.debug('serial -> ws:', escape(data));\n      duplex.write(data);\n    });\n\n    console.debug('websocket:', Util.getMethods(ws, Infinity, 0));\n  });\n\n  app.post(/\\/serial/, async (req, res) => {\n    const { body } = req;\n    const { port } = body;\n  });\n  const configFile = 'config.json';\n  const safeStat = Util.tryFunction(\n    f => filesystem.stat(f),\n    st => st,\n    () => {}\n  );\n\n  app.get(/\\/config/, async (req, res) => {\n    let str = '',\n      data = {},\n      time = 0;\n    Util.tryCatch(\n      () => filesystem.readFile(configFile),\n      c => {\n        str = c;\n        let stat = safeStat(configFile);\n        console.log('stat:', stat);\n        if(Util.isObject(stat.mtime)) time = stat.mtime.getTime();\n      },\n      () => (str = '{}')\n    );\n    let config = Util.tryCatch(\n      () => JSON.parse(str),\n      o => o,\n      () => ({})\n    );\n    console.log('config:', config);\n\n    res.json({ config, time, hash: Util.hashString(str) });\n  });\n  app.post(/\\/config/, async (req, res) => {\n    const { body } = req;\n    let text = body.toString();\n    console.log('text:', text);\n    let ret = filesystem.writeFile(configFile, text);\n    console.log('ret:', ret);\n    let stat = safeStat(configFile);\n    res.json({\n      size: ret,\n      time: stat.mtime.getTime(),\n      hash: Util.hashString(text)\n    });\n  });\n\n  app.get(/\\/github/, async (req, res) => {\n    Util.tryCatch(\n      async () => {\n        const { body } = req;\n        const url = Util.parseURL(req.url);\n        const { location, query } = url;\n        let args = location.split(/\\//g).filter(p => !/(^github$|^$)/.test(p));\n        let options = { ...query, ...body };\n\n        if(args.length > 0) {\n          const [owner, repo, dir, filter] = args;\n          Util.weakAssign(options, { owner, repo, dir, filter });\n        }\n\n        console.log(`GET ${location}`, { args, query, options });\n\n        let result;\n        const { owner, repo, dir, filter, tab, after } = options;\n\n        if(owner && repo && dir) result = await GithubListContents(owner, repo, dir, filter && new RegExp(filter, 'g'));\n        /*if(owner && (tab || after))*/ else {\n          let proxyUrl = Util.makeURL({\n            ...url,\n            protocol: 'https',\n            host: 'github.com',\n            location: ['', ...args].join('/')\n          });\n          console.log(`PROXY ${proxyUrl}`);\n\n          let response = await fetch(proxyUrl);\n          let type = response.headers['content-type'];\n\n          console.log(`RESPONSE`, response.url, type);\n          let data = await response.text();\n          res.send(data);\n          //, 200, { headers: { 'content-type': type }});\n          return;\n        }\n\n        res.json(FilesURLs(result.map(file => file.download_url)));\n      },\n      () => {},\n      Util.putError\n    );\n  });\n\n  app.post(/\\/github.*/, async (req, res) => {\n    const { body } = req;\n    let result;\n    const { owner, repo, dir, filter } = body;\n    console.log('POST github', { owner, repo, dir, filter });\n\n    res.json(\n      await GithubListContents(owner, repo, dir, filter && new RegExp(filter, 'g'))\n        .then(result => FilesURLs(result.map(file => file.download_url)))\n        .catch(error => ({ error }))\n    );\n  });\n\n  app.get(/^\\/!urls/, async (req, res) => res.json({ files: [...files].sort() }));\n  app.get(/^\\/files/, async (req, res) => res.json({ files: await GetFilesList() }));\n  app.post(/^\\/(files|list)(.html|)/, async (req, res) => {\n    const { body } = req;\n    let { filter = '.*', descriptions, names } = body;\n    let opts = { filter };\n    if(descriptions) opts.descriptions = descriptions;\n\n    if(names !== undefined) {\n      if(typeof names == 'string') names = names.split(/\\n/g);\n      if(Util.isArray(names)) names = names.map(name => name.replace(/.*\\//g, ''));\n      opts.names = names;\n    }\n    let files = await GetFilesList('tmp', opts);\n    console.log('POST files', util.inspect(files, { breakLength: Infinity, colors: true, maxArrayLength: 10, compact: 1 }));\n    res.json({\n      files\n    });\n  });\n\n  app.get('/index.html', async (req, res) => {\n    let data = await fsPromises.readFile(path.join(p, 'index.html'));\n    res.send(data.toString().replace(/<TS>/g, Util.unixTime() + ''));\n  });\n  app.get('/contours', RequestContours);\n  app.post('/contours', RequestContours);\n\n  app.post('/save', async (req, res, next) => {\n    //   const filename = (req.headers['content-disposition']||'').replace(new RegExp('.*\"([^\"]*)\".*','g'), '$1') || 'output.svg';\n    /*    const filename = path.join(process.cwd(), 'tmp', 'upload-' + Util.toUnixTime(Date.now()) + '.txt');\n    let output = fs.createWriteStream(filename, { autoClose: true, emitClose: true });\n    let s = req.pipe(output);\n    console.log('s', Util.className(s));\n    let data;\n    s.on('close', () => Util.waitFor(1000).then(() => end()));\n\n    //  req.on('end', () => Util.waitFor(500).then(() => end()));\n\n    function end() {\n      data = fs.readFileSync(filename).toString();\n      console.log('req end', { data });\n      res.end(data + '\\n\\nUpload complete');\n      next();\n    }\n*/\n\n    const { body } = req;\n    console.log('req.headers:', req.headers);\n    console.log('body:', Util.abbreviate(body), Util.className(body), Util.inspect(body));\n    console.log('save body:', typeof body == 'string' ? Util.abbreviate(body, 100) : body);\n    let st,\n      err,\n      filename = (req.headers['content-disposition'] || '').replace(new RegExp('.*\"([^\"]*)\".*', 'g'), '$1') || 'output.svg';\n    filename = 'tmp/' + filename.replace(/^tmp\\//, '');\n    await fsPromises\n      .writeFile(filename, body, { mode: 0x0180, flag: 'w' })\n      .then(() => (st = fs.statSync(filename)))\n      .catch(error => (err = error));\n\n    if(err) {\n      console.log('save error:', err);\n      res.json(err);\n    } else {\n      console.log('saved:', filename, `${st.size} bytes`);\n      res.json({ size: st.size, filename });\n    }\n  });\n\n  app.ws('/ws', Socket.endpoint);\n  app.ws('/.websocket', Socket.endpoint);\n  app.ws('/ws/.websocket', Socket.endpoint);\n\n  app.get('/', (req, res) => {\n    res.redirect(302, '/index.html');\n  });\n\n  app.listen(port, () => {\n    console.log(`Ready at http://127.0.0.1:${port}`);\n  });\n}\n/*\ntry {\n  await main();\n} catch(err) {\n  Util.putError(err);\n}*/\nUtil.callMain(main, true);\n",
			"input",
			"ImagePipeline",
			"\"jsm_module_loader",
			"getDirect",
			"directives",
			"\"jsm_mo",
			"\\\\h",
			"historySave",
			"RPATH",
			"RPATH ",
			"pkgcfg_lib_CURL_curl",
			"CURL",
			"link_dir",
			"cmdStart",
			"new REPL",
			"Not an",
			"history",
			"\\[\\^0-9\\]",
			"\\[0-9\\]",
			"isPointer",
			"zlib\\.",
			"\\.log",
			"console.*equest",
			"equest",
			"ListFiles",
			"files[^a-z]",
			"files",
			"inspect\\(",
			"main",
			"DebugFlag",
			"require\\(",
			"app\\.",
			"EagleElement.get",
			"getAll",
			" getAll",
			"getAll",
			"<instance",
			"EagleReference",
			"\\.apply",
			"class extends base",
			"Util\\.",
			" apply",
			"'instances'",
			"'sheet'",
			"GetSheets",
			"getRaw",
			"newProj",
			"lazyProp",
			"newProject",
			"printStatus",
			"printStat",
			"new REPL",
			"Loading",
			"ValueToNumber",
			"await",
			"main",
			"handleKey",
			"WriteJSON",
			"IfDebug",
			"getContextObject",
			"CircuitJS",
			"Wire",
			"Wire\n",
			"CircuitJS",
			"isalnum",
			"isspace",
			"js_debugger_check\\("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"CV_RGB(0, 0, 0)",
			"",
			"point",
			"\\\\D",
			"\\\\d",
			"\\.deref",
			"is_alphanumeric_char",
			"is_whitespace_char",
			"length",
			"{ const",
			"{ return",
			"const  {flags}=this;\\nreturn flags",
			"defines",
			"",
			"fs.\\1Sync",
			"define",
			",",
			"file",
			"target_compile_definitions",
			"msg",
			"PmDeviceInfo",
			"export function",
			"libportmidi",
			"\\1//\\2",
			"text",
			"\\1",
			"export function",
			"export &",
			"fs.",
			"array",
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/plot-cv.sublime-project",
							"function_name_status_row": 39,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642740244.43,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-diagram.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2660,
						"regions":
						{
						},
						"selection":
						[
							[
								1887,
								1887
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"auto_name": "import { AxisPoints } from './diagram.js'",
							"function_name_status_row": 56,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642727082.08,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								11,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 733.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26646,
						"regions":
						{
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										7368,
										7381
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										7302,
										7302
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										7344,
										7358
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										7302,
										7302
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								7866,
								7898
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 283,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642727160.76,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5066.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "create-tamper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15280,
						"regions":
						{
						},
						"selection":
						[
							[
								5505,
								5505
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 166,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642902542.92,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 50.0,
						"translation.y": 2466.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/mics.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4955,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642953330.03,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/misc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31753,
						"regions":
						{
						},
						"selection":
						[
							[
								443,
								443
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643064636.5,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "plot-cv.sublime-project",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3007,
						"regions":
						{
						},
						"selection":
						[
							[
								2010,
								2657
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1643065553.95,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "jack-session-client.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5184,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642953330.54,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/ecmascript/printer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32242,
						"regions":
						{
						},
						"selection":
						[
							[
								27771,
								27771
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 838,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642731331.7,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16146.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10381,
						"regions":
						{
						},
						"selection":
						[
							[
								3383,
								3599
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 94,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642727133.58,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1466.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "diagram.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5129,
						"regions":
						{
						},
						"selection":
						[
							[
								3952,
								3952
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 131,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642723991.66,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2433.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "qjs-opencv/js/cvHighGUI.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4769,
						"regions":
						{
						},
						"selection":
						[
							[
								4149,
								4149
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 122,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1642720403.93,
							"tabs_extra_last_activated_sheet_index": 2,
							"tabs_extra_moving":
							[
								11,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1200.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.798319483226,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"js",
				"jack-session-client.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"diagram",
				"diagram.js"
			],
			[
				"point.hpp",
				"qjs-opencv/js_point.hpp"
			],
			[
				"jsbind",
				"qjs-opencv/jsbindings.hpp"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"help",
				"time-helpers.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"image",
				"imagePipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"minnet-http",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"minnet-server",
				"quickjs/qjs-net/minnet-server.c"
			],
			[
				"minnet.c",
				"quickjs/qjs-net/minnet.c"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"time-help",
				"time-helpers.js"
			],
			[
				"io-helpers",
				"io-helpers.js"
			],
			[
				"test-bjson",
				"test-bjson.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"commands.j",
				"commands.js"
			],
			[
				"render",
				"lib/eagle/renderer.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"diff.js",
				"lib/json/diff.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"repl",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"circuit",
				"lib/eda/circuitjs.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-shell.js",
				"cv-shell.js"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"queue.h",
				"quickjs/qjs-modules/queue.h"
			],
			[
				"queue.c",
				"quickjs/qjs-modules/queue.c"
			],
			[
				"char-utils",
				"quickjs/qjs-modules/char-utils.h"
			],
			[
				"quickjs-misc.",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"predicate.c",
				"quickjs/qjs-modules/predicate.c"
			],
			[
				"debugger-tran",
				"quickjs/quickjs-debugger-transport-win.c"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger-transport-unix.c"
			],
			[
				"defs",
				"quickjs/defs.cmake"
			],
			[
				"quickjs/CMakeLi",
				"quickjs/CMakeLists.txt"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-pred",
				"quickjs/qjs-modules/quickjs-predicate.c"
			],
			[
				"package",
				"package.json"
			],
			[
				"xpath.js",
				"lib/dom/xpath.js"
			],
			[
				"compileComm",
				"lib/build/compileCommand.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"compile_com",
				"compile_commands.js"
			],
			[
				"quickjs-pat",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"test-child",
				"test-childprocess.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"test-ini",
				"test-ini.js"
			],
			[
				"fn.js",
				"lib/parse/fn.js"
			],
			[
				"test-css",
				"test-css3.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"grammar-css3",
				"grammar-css3.js"
			],
			[
				"css3",
				"lib/grammars/css3.g4"
			],
			[
				"grammar.js",
				"lib/parse/grammar.js"
			],
			[
				"test-parse",
				"test-parse.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"lexer",
				"lib/parse/lexer.js"
			],
			[
				"ecmascript.js",
				"lib/ecmascript.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"imgui",
				"cmake/imgui-viewer.cmake"
			],
			[
				"high",
				"cmake/highgui-viewer.cmake"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"circui",
				"lib/eda/circuitjs.js"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"deep.c",
				"quickjs/qjs-modules/quickjs-deep.c"
			],
			[
				"test_xml",
				"quickjs/qjs-modules/tests/test_xml.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"highgui",
				"cmake/highgui-viewer.cmake"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"projec",
				"lib/eagle/project.js"
			],
			[
				"agle-she",
				"eagle-shell.js"
			],
			[
				"point",
				"lib/geom/point.js"
			],
			[
				"path.c",
				"quickjs/qjs-modules/path.c"
			],
			[
				"element.",
				"lib/dom/element.js"
			],
			[
				"quickjs-pa",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"lib/u til",
				"lib/util.js"
			],
			[
				"jslex",
				"quickjs/qjs-modules/lib/jslexer.js"
			],
			[
				"preact.m.",
				"lib/preact.m.js"
			],
			[
				"location.c",
				"quickjs/qjs-modules/location.c"
			],
			[
				"location.h",
				"quickjs/qjs-modules/location.h"
			],
			[
				"lexer.h",
				"quickjs/qjs-modules/lexer.h"
			],
			[
				"lexer.c",
				"quickjs/qjs-modules/lexer.c"
			],
			[
				"quickjs-lexe",
				"quickjs/qjs-modules/quickjs-lexer.c"
			],
			[
				" circui",
				"lib/eda/circuitjs.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"eagle-s",
				"eagle-shell.js"
			],
			[
				"Rect",
				"lib/geom/rect.js"
			],
			[
				"-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"image-he",
				"image-helpers.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-mma",
				"test-mmap.js"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"portmi",
				"portmidi-testio.c"
			],
			[
				"portmidi-",
				"portmidi-testio.c"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"test_mmap",
				"quickjs/qjs-modules/tests/test_mmap.js"
			],
			[
				"quickjs-op",
				"quickjs/quickjs-opcode.h"
			],
			[
				"eagle-comm",
				"eagle-commands.js"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"eagle-",
				"eagle-commands.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"clang-li",
				"clang-list.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"eagle-com",
				"eagle-commands.js"
			],
			[
				"ser",
				"server.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"main.js",
				"main.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 245.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
