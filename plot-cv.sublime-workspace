{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PaStream",
				"PaStreamParameters"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"PaE",
				"PaHostErrorInfo"
			],
			[
				"hostApi",
				"hostApiSpecificStreamInfo"
			],
			[
				"host",
				"hostApiType"
			],
			[
				"defaultHi",
				"defaultHighOutputLatency"
			],
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  decorate(decorators, obj, ...args)\n  scriptName = (arg = scriptArgs[0]) =>\n() =>\n  signalName = n =>\n  checkChildExited(child)\nGetLoc(node)\nLoadAST(source)\nStartREPL(prefix = \n, suffix = '')\n  .show = arg =>\n  k =>\n  k =>\n  item =>\n(acc, keys, i) =>\nStartDebugger(args, connect, address)\nConnectDebugger(address, skipToMain = true, callback)\n  process(callback)\n  sendMessage(msg)\nLaunchDebugger(dbg, skipToMain = true)\n(...args) =>\n() =>\nDebuggerDispatcher\n  value(name)\n  v =>\nPrintStackFrame(frame)\n  f =>\nPrintStack(stack)\n(member, obj, prop) =>\n  breakpoints(...args)\n  b =>\n  stackTrace(frame)\n  frame =>\n  scopes(n)\n  waitRun()\n  variables(n, depth = 0)\n  add = item =>\n  toString()\nDebuggerDispatcher\n(port = 8777) =>\n() =>\nNewDebugger(args, skipToMain = false, address)\n  kill: () =>\nOnStopped(msg)\nURLWorker(script)\n  dataURL = s =>\n(push, stop) =>\n  postMessage: msg =>\n  main(...args)\n(a, v) =>\n(v, pv, o) =>\n(v, pv, o) =>\n  createWS(url, callbacks, listen)\n() =>\n(level, str) =>\n  config(req, res)\n  files(req, res)\n  f =>\n  onConnect(ws, req)\n  value: function sendMessage(msg)\n  onClose(ws)\n  onError(ws)\n  onRequest(req, resp)\n(match, p1, p0, p2, p3, offset) =>\n  onMessage(ws, data)\n  handleCommand(ws, data)\n  forward = (fd, name) =>\nbuf =>\n() =>\n(dbg, sock) =>\n() =>\n  showSessions()\n  get connections()\n  ws =>\n  get socklist()\n  get file()\n(file, source) =>\n() =>\ns =>\n() =>\n  m =>\n  line(i, j)\n  match(re)\n  fns =>\n({ name }) =>\n  functions()\n([name, loc, params, expression, path]) =>\n  repeat(cond, fn, ...args)\n  cond = (r, i) =>\n  quit(why)",
			"settings":
			{
				"buffer_size": 1568,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					746,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					747,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					748,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					749,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					750,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					751,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					752,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					753,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					754,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					755,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					756,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					757,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					762,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								3376,
								3394
							],
							[
								3478,
								3484
							],
							[
								3519,
								3543
							],
							[
								3589,
								3606
							],
							[
								3719,
								3731
							],
							[
								4975,
								4979
							],
							[
								5110,
								5114
							],
							[
								5518,
								5532
							],
							[
								5612,
								5627
							],
							[
								5708,
								5720
							],
							[
								5798,
								5814
							],
							[
								5897,
								5912
							],
							[
								6233,
								6240
							],
							[
								6288,
								6327
							],
							[
								6412,
								6442
							],
							[
								6556,
								6560
							],
							[
								6756,
								6791
							],
							[
								6880,
								6929
							],
							[
								7175,
								7196
							],
							[
								7271,
								7289
							],
							[
								7374,
								7389
							],
							[
								7460,
								7470
							],
							[
								7491,
								7498
							],
							[
								7537,
								7601
							],
							[
								7719,
								7745
							],
							[
								7785,
								7797
							],
							[
								7915,
								7933
							],
							[
								8016,
								8034
							],
							[
								9565,
								9594
							],
							[
								9933,
								9966
							],
							[
								10037,
								10041
							],
							[
								10043,
								10047
							],
							[
								10170,
								10176
							],
							[
								10178,
								10182
							],
							[
								10282,
								10286
							],
							[
								10288,
								10292
							],
							[
								10343,
								10347
							],
							[
								10382,
								10386
							],
							[
								10777,
								10806
							],
							[
								10888,
								10893
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAANkCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					764,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					765,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					766,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22539,
								22554
							],
							[
								26679,
								26685
							],
							[
								27090,
								27115
							],
							[
								27438,
								27455
							],
							[
								27499,
								27504
							],
							[
								27529,
								27543
							],
							[
								27889,
								27899
							],
							[
								28023,
								28040
							],
							[
								28072,
								28087
							],
							[
								28130,
								28144
							],
							[
								28148,
								28163
							],
							[
								28306,
								28310
							],
							[
								28387,
								28397
							],
							[
								28885,
								28894
							],
							[
								29010,
								29016
							],
							[
								29074,
								29087
							],
							[
								29302,
								29319
							],
							[
								29436,
								29478
							],
							[
								29843,
								29874
							],
							[
								29956,
								29972
							],
							[
								30155,
								30175
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAIAYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					767,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					768,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					769,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					770,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					771,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					772,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					773,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26700,
								26706
							],
							[
								27111,
								27136
							],
							[
								27459,
								27476
							],
							[
								27520,
								27525
							],
							[
								27550,
								27564
							],
							[
								27910,
								27920
							],
							[
								28044,
								28061
							],
							[
								28093,
								28108
							],
							[
								28151,
								28165
							],
							[
								28169,
								28184
							],
							[
								28327,
								28331
							],
							[
								28408,
								28418
							],
							[
								28906,
								28915
							],
							[
								29031,
								29037
							],
							[
								29095,
								29108
							],
							[
								29323,
								29340
							],
							[
								29457,
								29499
							],
							[
								29864,
								29895
							],
							[
								29977,
								29993
							],
							[
								30176,
								30196
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					774,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1602,
								1645
							],
							[
								1994,
								2031
							],
							[
								2098,
								2103
							],
							[
								2391,
								2408
							],
							[
								2804,
								2836
							],
							[
								2999,
								3020
							],
							[
								3213,
								3243
							],
							[
								3614,
								3642
							],
							[
								3654,
								3668
							],
							[
								3927,
								3941
							],
							[
								4423,
								4427
							],
							[
								4474,
								4478
							],
							[
								4675,
								4682
							],
							[
								4709,
								4726
							],
							[
								5000,
								5047
							],
							[
								5550,
								5618
							],
							[
								6188,
								6211
							],
							[
								7292,
								7314
							],
							[
								7736,
								7783
							],
							[
								7926,
								7944
							],
							[
								8440,
								8451
							],
							[
								8775,
								8793
							],
							[
								8894,
								8911
							],
							[
								9085,
								9089
							],
							[
								9164,
								9201
							],
							[
								9361,
								9365
							],
							[
								9710,
								9742
							],
							[
								9911,
								9935
							],
							[
								9949,
								9975
							],
							[
								10282,
								10286
							],
							[
								10416,
								10439
							],
							[
								10494,
								10502
							],
							[
								10620,
								10635
							],
							[
								10999,
								11014
							],
							[
								11398,
								11427
							],
							[
								11517,
								11530
							],
							[
								12231,
								12241
							],
							[
								12384,
								12402
							],
							[
								12434,
								12452
							],
							[
								12453,
								12460
							],
							[
								12493,
								12554
							],
							[
								12821,
								12832
							],
							[
								12981,
								13010
							],
							[
								13228,
								13254
							],
							[
								13265,
								13279
							],
							[
								13496,
								13511
							],
							[
								13541,
								13560
							],
							[
								13589,
								13611
							],
							[
								13924,
								13934
							],
							[
								14142,
								14156
							],
							[
								14210,
								14224
							],
							[
								15317,
								15360
							],
							[
								15554,
								15560
							],
							[
								15573,
								15589
							],
							[
								17163,
								17199
							],
							[
								17387,
								17422
							],
							[
								17562,
								17566
							],
							[
								17693,
								17711
							],
							[
								17865,
								17903
							],
							[
								18290,
								18301
							],
							[
								18456,
								18467
							],
							[
								18527,
								18547
							],
							[
								19136,
								19171
							],
							[
								19574,
								19593
							],
							[
								19701,
								19739
							],
							[
								20691,
								20714
							],
							[
								20752,
								20759
							],
							[
								21339,
								21344
							],
							[
								22560,
								22575
							],
							[
								26715,
								26721
							],
							[
								27126,
								27151
							],
							[
								27474,
								27491
							],
							[
								27535,
								27540
							],
							[
								27565,
								27579
							],
							[
								27925,
								27935
							],
							[
								28059,
								28076
							],
							[
								28108,
								28123
							],
							[
								28166,
								28180
							],
							[
								28184,
								28199
							],
							[
								28342,
								28346
							],
							[
								28423,
								28433
							],
							[
								28921,
								28930
							],
							[
								29046,
								29052
							],
							[
								29110,
								29123
							],
							[
								29338,
								29355
							],
							[
								29472,
								29514
							],
							[
								29879,
								29910
							],
							[
								29992,
								30008
							],
							[
								30191,
								30211
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 30538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					47,
					1,
					"cut",
					null,
					"AQAAAH45AAAAAAAAfjkAAAAAAABAAAAAICBsZXQgd3MyZGJnID0gKGdsb2JhbFRoaXMud3MyZGJnID0gbWFwV3JhcHBlcihuZXcgV2Vha01hcCgpKSk7Cg",
					"AQAAAAAAAAABAAAAfjkAAAAAAAC+OQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					2,
					"paste",
					null,
					"AgAAAH45AAAAAAAAvjkAAAAAAAAAAAAAvjkAAAAAAAD+OQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfjkAAAAAAAB+OQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "dbg2ws"
					},
					"BwAAAMQ5AAAAAAAAxTkAAAAAAAAAAAAAxTkAAAAAAADFOQAAAAAAAAYAAAB3czJkYmfFOQAAAAAAAMY5AAAAAAAAAAAAAMY5AAAAAAAAxzkAAAAAAAAAAAAAxzkAAAAAAADIOQAAAAAAAAAAAADIOQAAAAAAAMk5AAAAAAAAAAAAAMk5AAAAAAAAyjkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxDkAAAAAAADKOQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"paste",
					null,
					"AgAAANk5AAAAAAAA3zkAAAAAAAAAAAAA3zkAAAAAAADfOQAAAAAAAAYAAAB3czJkYmc",
					"AQAAAAAAAAABAAAA2TkAAAAAAADfOQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "\ndbg2ws"
					},
					"CAAAAIhNAAAAAAAAiU0AAAAAAAAAAAAAiU0AAAAAAACZTQAAAAAAAAAAAACZTQAAAAAAAJpNAAAAAAAAAAAAAJpNAAAAAAAAm00AAAAAAAAAAAAAm00AAAAAAACcTQAAAAAAAAAAAACcTQAAAAAAAJ1NAAAAAAAAAAAAAJ1NAAAAAAAAnk0AAAAAAAAAAAAAnk0AAAAAAACfTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiE0AAAAAAACITQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ9NAAAAAAAAoU0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn00AAAAAAACfTQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "dbg,ws"
					},
					"BgAAAKBNAAAAAAAAoU0AAAAAAAAAAAAAoU0AAAAAAACiTQAAAAAAAAAAAACiTQAAAAAAAKNNAAAAAAAAAAAAAKNNAAAAAAAApE0AAAAAAAAAAAAApE0AAAAAAAClTQAAAAAAAAAAAAClTQAAAAAAAKZNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoE0AAAAAAACgTQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKdNAAAAAAAAqE0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp00AAAAAAACnTQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"cut",
					null,
					"AQAAAPxWAAAAAAAA/FYAAAAAAAAhAAAAICAgICAgICAgICAgICAgIHdzMmRiZyh3cywgZGJnKTsK",
					"AQAAAAAAAAABAAAA/FYAAAAAAAAdVwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					2,
					"paste",
					null,
					"AgAAAPxWAAAAAAAAHVcAAAAAAAAAAAAAHVcAAAAAAAA+VwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/FYAAAAAAAD8VgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "dbg2ws"
					},
					"BwAAAC1XAAAAAAAALlcAAAAAAAAAAAAALlcAAAAAAAAuVwAAAAAAAAYAAAB3czJkYmcuVwAAAAAAAC9XAAAAAAAAAAAAAC9XAAAAAAAAMFcAAAAAAAAAAAAAMFcAAAAAAAAxVwAAAAAAAAAAAAAxVwAAAAAAADJXAAAAAAAAAAAAADJXAAAAAAAAM1cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALVcAAAAAAAAzVwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					3,
					"right_delete",
					null,
					"AwAAADRXAAAAAAAANFcAAAAAAAABAAAAdzRXAAAAAAAANFcAAAAAAAABAAAAczRXAAAAAAAANFcAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAANFcAAAAAAAA0VwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ",ws"
					},
					"AwAAADhXAAAAAAAAOVcAAAAAAAAAAAAAOVcAAAAAAAA6VwAAAAAAAAAAAAA6VwAAAAAAADtXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOFcAAAAAAAA4VwAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAABWAAAAAAAAAVYAAAAAAAAAAAAAAVYAAAAAAAAPVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DwAAAH4XAAAAAAAAfxcAAAAAAAAAAAAAfxcAAAAAAACDFwAAAAAAAAAAAACDFwAAAAAAAIUXAAAAAAAAAAAAAAhWAAAAAAAACFYAAAAAAAAOAAAAICAgICAgICAgICAgICCFFwAAAAAAAIYXAAAAAAAAAAAAAIYXAAAAAAAAhxcAAAAAAAAAAAAAhxcAAAAAAACIFwAAAAAAAAAAAACIFwAAAAAAAIkXAAAAAAAAAAAAAIkXAAAAAAAAihcAAAAAAAAAAAAAihcAAAAAAACLFwAAAAAAAAAAAACLFwAAAAAAAIwXAAAAAAAAAAAAAIwXAAAAAAAAjRcAAAAAAAAAAAAAjRcAAAAAAACOFwAAAAAAAAAAAACOFwAAAAAAAI8XAAAAAAAAAAAAAI8XAAAAAAAAkBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhcAAAAAAAB+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJAXAAAAAAAAkhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBcAAAAAAACQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJEXAAAAAAAAkxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkRcAAAAAAACRFwAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "Debugger"
					},
					"CAAAAJIXAAAAAAAAkxcAAAAAAAAAAAAAkxcAAAAAAACUFwAAAAAAAAAAAACUFwAAAAAAAJUXAAAAAAAAAAAAAJUXAAAAAAAAlhcAAAAAAAAAAAAAlhcAAAAAAACXFwAAAAAAAAAAAACXFwAAAAAAAJgXAAAAAAAAAAAAAJgXAAAAAAAAmRcAAAAAAAAAAAAAmRcAAAAAAACaFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhcAAAAAAACSFwAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": " process()"
					},
					"CgAAAJoXAAAAAAAAmxcAAAAAAAAAAAAAmxcAAAAAAACcFwAAAAAAAAAAAACcFwAAAAAAAJ0XAAAAAAAAAAAAAJ0XAAAAAAAAnhcAAAAAAAAAAAAAnhcAAAAAAACfFwAAAAAAAAAAAACfFwAAAAAAAKAXAAAAAAAAAAAAAKAXAAAAAAAAoRcAAAAAAAAAAAAAoRcAAAAAAACiFwAAAAAAAAAAAACiFwAAAAAAAKMXAAAAAAAAAAAAAKMXAAAAAAAApBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhcAAAAAAACaFwAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQXAAAAAAAApRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBcAAAAAAACkFwAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"left_delete",
					null,
					"AQAAAKQXAAAAAAAApBcAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAApRcAAAAAAAClFwAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKUXAAAAAAAAphcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRcAAAAAAAClFwAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " callback"
					},
					"CQAAAKYXAAAAAAAApxcAAAAAAAAAAAAApxcAAAAAAACoFwAAAAAAAAAAAACoFwAAAAAAAKkXAAAAAAAAAAAAAKkXAAAAAAAAqhcAAAAAAAAAAAAAqhcAAAAAAACrFwAAAAAAAAAAAACrFwAAAAAAAKwXAAAAAAAAAAAAAKwXAAAAAAAArRcAAAAAAAAAAAAArRcAAAAAAACuFwAAAAAAAAAAAACuFwAAAAAAAK8XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphcAAAAAAACmFwAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALAXAAAAAAAAsRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBcAAAAAAACwFwAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALEXAAAAAAAAshcAAAAAAAAAAAAAshcAAAAAAAC4FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRcAAAAAAACxFwAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAIkaAAAAAAAAihoAAAAAAAAAAAAAshcAAAAAAACyFwAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAiRoAAAAAAACJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": " obj"
					},
					"BAAAAIQaAAAAAAAAhRoAAAAAAAAAAAAAhRoAAAAAAACGGgAAAAAAAAAAAACGGgAAAAAAAIcaAAAAAAAAAAAAAIcaAAAAAAAAiBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBoAAAAAAACEGgAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADEcAAAAAAAAMhwAAAAAAAAAAAAAMhwAAAAAAAA4HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRwAAAAAAAAxHAAAAAAAAAAAAAAA0I1A"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKMcAAAAAAAApBwAAAAAAAAAAAAApBwAAAAAAACqHAAAAAAAAAAAAAAyHAAAAAAAADIcAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAAoxwAAAAAAACjHAAAAAAAAP///////+9/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAOobAAAAAAAA6xsAAAAAAAAAAAAA6xsAAAAAAADrGwAAAAAAAAUAAABhd2FpdJocAAAAAAAAmhwAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAA6hsAAAAAAADvGwAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKoaAAAAAAAAqxoAAAAAAAAAAAAAqxoAAAAAAAC1GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhoAAAAAAACqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"paste",
					null,
					"AgAAAAcdAAAAAAAAFR0AAAAAAAAAAAAAFR0AAAAAAAAVHQAAAAAAAA4AAABMYXVuY2hEZWJ1Z2dlcg",
					"AQAAAAAAAAABAAAABx0AAAAAAAAVHQAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "throw"
					},
					"BQAAALIXAAAAAAAAsxcAAAAAAAAAAAAAsxcAAAAAAAC0FwAAAAAAAAAAAAC0FwAAAAAAALUXAAAAAAAAAAAAALUXAAAAAAAAthcAAAAAAAAAAAAAthcAAAAAAAC3FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshcAAAAAAACyFwAAAAAAAAAAAAAAAAAA"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAALcXAAAAAAAAuBcAAAAAAAAAAAAAuBcAAAAAAAC5FwAAAAAAAAAAAAC5FwAAAAAAALoXAAAAAAAAAAAAALoXAAAAAAAAuxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxcAAAAAAAC3FwAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": " EW"
					},
					"AwAAALsXAAAAAAAAvBcAAAAAAAAAAAAAvBcAAAAAAAC9FwAAAAAAAAAAAAC9FwAAAAAAAL4XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxcAAAAAAAC7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"left_delete",
					null,
					"AQAAAL0XAAAAAAAAvRcAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAvhcAAAAAAAC+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": "rror"
					},
					"BAAAAL0XAAAAAAAAvhcAAAAAAAAAAAAAvhcAAAAAAAC/FwAAAAAAAAAAAAC/FwAAAAAAAMAXAAAAAAAAAAAAAMAXAAAAAAAAwRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRcAAAAAAAC9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMEXAAAAAAAAwxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRcAAAAAAADBFwAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMMXAAAAAAAAxRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxcAAAAAAADDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMMXAAAAAAAAwxcAAAAAAAABAAAAJ8MXAAAAAAAAwxcAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAxBcAAAAAAADEFwAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"left_delete",
					null,
					"AQAAAMIXAAAAAAAAwhcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAwxcAAAAAAADDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMIXAAAAAAAAxBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhcAAAAAAADCFwAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "process"
					},
					"BwAAAMMXAAAAAAAAxBcAAAAAAAAAAAAAxBcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAMYXAAAAAAAAxxcAAAAAAAAAAAAAxxcAAAAAAADIFwAAAAAAAAAAAADIFwAAAAAAAMkXAAAAAAAAAAAAAMkXAAAAAAAAyhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxcAAAAAAADDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAMsXAAAAAAAAzBcAAAAAAAAAAAAAzBcAAAAAAADNFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxcAAAAAAADLFwAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM0XAAAAAAAAzhcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRcAAAAAAADNFwAAAAAAAAAAAAAAYG5A"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAMoXAAAAAAAAyxcAAAAAAAAAAAAAyxcAAAAAAADMFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyhcAAAAAAADKFwAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": " exception"
					},
					"CgAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAADOFwAAAAAAAM8XAAAAAAAAAAAAAM8XAAAAAAAA0BcAAAAAAAAAAAAA0BcAAAAAAADRFwAAAAAAAAAAAADRFwAAAAAAANIXAAAAAAAAAAAAANIXAAAAAAAA0xcAAAAAAAAAAAAA0xcAAAAAAADUFwAAAAAAAAAAAADUFwAAAAAAANUXAAAAAAAAAAAAANUXAAAAAAAA1hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBcAAAAAAADMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALIXAAAAAAAAsxcAAAAAAAAAAAAAsxcAAAAAAAC0FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshcAAAAAAACyFwAAAAAAAAAAAAAAAAAA"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALQXAAAAAAAAthcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBcAAAAAAAC0FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAthcAAAAAAAC2FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAK4VAAAAAAAArxUAAAAAAAAAAAAArxUAAAAAAACwFQAAAAAAAAAAAACwFQAAAAAAALEVAAAAAAAAAAAAALEVAAAAAAAAshUAAAAAAAAAAAAAshUAAAAAAACzFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhUAAAAAAACuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALMVAAAAAAAAtBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxUAAAAAAACzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": "awa"
					},
					"AwAAAIQWAAAAAAAAhRYAAAAAAAAAAAAAhRYAAAAAAACGFgAAAAAAAAAAAACGFgAAAAAAAIcWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBYAAAAAAACEFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcWAAAAAAAAiBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxYAAAAAAACHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1116,
					1,
					"left_delete",
					null,
					"AQAAAIcWAAAAAAAAhxYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiBYAAAAAAACIFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert",
					{
						"characters": "ut"
					},
					"AgAAAIcWAAAAAAAAiBYAAAAAAAAAAAAAiBYAAAAAAACJFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxYAAAAAAACHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkWAAAAAAAAihYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRYAAAAAAACJFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					3,
					"left_delete",
					null,
					"AwAAAIkWAAAAAAAAiRYAAAAAAAABAAAAIIgWAAAAAAAAiBYAAAAAAAABAAAAdIcWAAAAAAAAhxYAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAihYAAAAAAACKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AgAAAIcWAAAAAAAAiBYAAAAAAAAAAAAAiBYAAAAAAACJFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxYAAAAAAACHFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIkWAAAAAAAAihYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRYAAAAAAACJFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFcXAAAAAAAAWBcAAAAAAAAAAAAAWBcAAAAAAABZFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxcAAAAAAABXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "asym"
					},
					"BAAAAKswAAAAAAAArDAAAAAAAAAAAAAArDAAAAAAAACtMAAAAAAAAAAAAACtMAAAAAAAAK4wAAAAAAAAAAAAAK4wAAAAAAAArzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqzAAAAAAAACrMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1186,
					1,
					"left_delete",
					null,
					"AQAAAK4wAAAAAAAArjAAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAArzAAAAAAAACvMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1187,
					1,
					"insert",
					{
						"characters": "nvc"
					},
					"AwAAAK4wAAAAAAAArzAAAAAAAAAAAAAArzAAAAAAAACwMAAAAAAAAAAAAACwMAAAAAAAALEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArjAAAAAAAACuMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1188,
					2,
					"left_delete",
					null,
					"AgAAALAwAAAAAAAAsDAAAAAAAAABAAAAY68wAAAAAAAArzAAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAsTAAAAAAAACxMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAK8wAAAAAAAAsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArzAAAAAAAACvMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1190,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAwAAAAAAAAsTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDAAAAAAAACwMAAAAAAAAAAAAAAAAPC/"
				],
				[
					1193,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAD4yAAAAAAAAPzIAAAAAAAAAAAAAPzIAAAAAAABAMgAAAAAAAAAAAABAMgAAAAAAAEEyAAAAAAAAAAAAAEEyAAAAAAAAQjIAAAAAAAAAAAAAQjIAAAAAAABDMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjIAAAAAAAA+MgAAAAAAAAAAAAAAADJA"
				],
				[
					1194,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMyAAAAAAAARDIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQzIAAAAAAABDMgAAAAAAAAAAAAAAAPC/"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADsyAAAAAAAAPDIAAAAAAAAAAAAAPDIAAAAAAAA+MgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOzIAAAAAAAA7MgAAAAAAAAAAAAAAAFJA"
				],
				[
					1249,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJcjAAAAAAAAmSMAAAAAAAAAAAAArSEAAAAAAACvIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArSEAAAAAAACXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1355,
					1,
					"insert",
					{
						"characters": "\nrewt"
					},
					"BwAAAI8dAAAAAAAAkB0AAAAAAAAAAAAAkB0AAAAAAACWHQAAAAAAAAAAAABHMgAAAAAAAEcyAAAAAAAAAgAAACAglh0AAAAAAACXHQAAAAAAAAAAAACXHQAAAAAAAJgdAAAAAAAAAAAAAJgdAAAAAAAAmR0AAAAAAAAAAAAAmR0AAAAAAACaHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjx0AAAAAAACPHQAAAAAAAP///////+9/"
				],
				[
					1356,
					2,
					"left_delete",
					null,
					"AgAAAJkdAAAAAAAAmR0AAAAAAAABAAAAdJgdAAAAAAAAmB0AAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAmh0AAAAAAACaHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1357,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAJgdAAAAAAAAmR0AAAAAAAAAAAAAmR0AAAAAAACaHQAAAAAAAAAAAACaHQAAAAAAAJsdAAAAAAAAAAAAAJsdAAAAAAAAnB0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmB0AAAAAAACYHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1358,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAJwdAAAAAAAAnR0AAAAAAAAAAAAAnR0AAAAAAACeHQAAAAAAAAAAAACeHQAAAAAAAJ8dAAAAAAAAAAAAAJ8dAAAAAAAAoB0AAAAAAAAAAAAAoB0AAAAAAAChHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnB0AAAAAAACcHQAAAAAAAAAAAAAAAPC/"
				],
				[
					1365,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI8dAAAAAAAAkB0AAAAAAAAAAAAAkB0AAAAAAACWHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjx0AAAAAAACPHQAAAAAAAP///////+9/"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAMQhAAAAAAAAxSEAAAAAAAAAAAAAxSEAAAAAAADFIQAAAAAAAAQAAAAKIC8qkB0AAAAAAACQHQAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAyCEAAAAAAADEIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"left_delete",
					null,
					"AQAAAKojAAAAAAAAqiMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAqyMAAAAAAACrIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKojAAAAAAAAqyMAAAAAAAAAAAAAqyMAAAAAAACtIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqiMAAAAAAACqIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					3,
					"left_delete",
					null,
					"AwAAAKsjAAAAAAAAqyMAAAAAAAACAAAAICCqIwAAAAAAAKojAAAAAAAAAQAAAAqpIwAAAAAAAKkjAAAAAAAAAQAAACo",
					"AQAAAAAAAAABAAAArSMAAAAAAACtIwAAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"cut",
					null,
					"AQAAAKUXAAAAAAAApRcAAAAAAAAXAAAAICAgIHNvY2tldHMuYWRkKHNvY2spOwo",
					"AQAAAAAAAAABAAAApRcAAAAAAAC8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1439,
					1,
					"paste",
					null,
					"AQAAAKUXAAAAAAAAvBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRcAAAAAAAClFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1500,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANROAAAAAAAA1U4AAAAAAAAAAAAA1U4AAAAAAADlTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1E4AAAAAAADUTgAAAAAAAAAAAAAAAPC/"
				],
				[
					1525,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BgAAANhMAAAAAAAA2UwAAAAAAAAAAAAA1k4AAAAAAADWTgAAAAAAABAAAAAgICAgICAgICAgICAgICAg2UwAAAAAAADaTAAAAAAAAAAAAADaTAAAAAAAANtMAAAAAAAAAAAAANtMAAAAAAAA3EwAAAAAAAAAAAAA3EwAAAAAAADdTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2EwAAAAAAADYTAAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAL1XAAAAAAAAvlcAAAAAAAAAAAAAvlcAAAAAAAC/VwAAAAAAAAAAAAC/VwAAAAAAAMBXAAAAAAAAAAAAAMBXAAAAAAAAwVcAAAAAAAAAAAAAwVcAAAAAAADCVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvVcAAAAAAAC9VwAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMJXAAAAAAAAw1cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwlcAAAAAAADCVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1536,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHZYAAAAAAAAd1gAAAAAAAAAAAAAd1gAAAAAAACHWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdlgAAAAAAAB2WAAAAAAAAAAAAAAAUHlA"
				],
				[
					1568,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BgAAANxXAAAAAAAA3VcAAAAAAAAAAAAAeFgAAAAAAAB4WAAAAAAAABAAAAAgICAgICAgICAgICAgICAg3VcAAAAAAADeVwAAAAAAAAAAAADeVwAAAAAAAN9XAAAAAAAAAAAAAN9XAAAAAAAA4FcAAAAAAAAAAAAA4FcAAAAAAADhVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3FcAAAAAAADcVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1569,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAOFXAAAAAAAA4lcAAAAAAAAAAAAA4lcAAAAAAADjVwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4VcAAAAAAADhVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1570,
					2,
					"left_delete",
					null,
					"AgAAAOJXAAAAAAAA4lcAAAAAAAABAAAALOFXAAAAAAAA4VcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA41cAAAAAAADjVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOFXAAAAAAAA4lcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4VcAAAAAAADhVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1572,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOJXAAAAAAAA41cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4lcAAAAAAADiVwAAAAAAAAAAAAAAAPC/"
				],
				[
					1588,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMFYAAAAAAAAwlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwVgAAAAAAADBWAAAAAAAAAAAAAAAAAAA"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPdeAAAAAAAA+F4AAAAAAAAAAAAA+F4AAAAAAAAIXwAAAAAAAAAAAAAIXwAAAAAAAAlfAAAAAAAAAAAAAAlfAAAAAAAAGV8AAAAAAAAAAAAA+F4AAAAAAAD4XgAAAAAAABAAAAAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAA914AAAAAAAD3XgAAAAAAAAAAAAAAAPC/"
				],
				[
					1687,
					1,
					"insert",
					{
						"characters": "awauit"
					},
					"BwAAAIJZAAAAAAAAg1kAAAAAAAAAAAAA+l4AAAAAAAD6XgAAAAAAABAAAAAgICAgICAgICAgICAgICAgg1kAAAAAAACEWQAAAAAAAAAAAACEWQAAAAAAAIVZAAAAAAAAAAAAAIVZAAAAAAAAhlkAAAAAAAAAAAAAhlkAAAAAAACHWQAAAAAAAAAAAACHWQAAAAAAAIhZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAglkAAAAAAACCWQAAAAAAAAAAAAAAAPC/"
				],
				[
					1688,
					3,
					"left_delete",
					null,
					"AwAAAIdZAAAAAAAAh1kAAAAAAAABAAAAdIZZAAAAAAAAhlkAAAAAAAABAAAAaYVZAAAAAAAAhVkAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAiFkAAAAAAACIWQAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					1,
					"insert",
					{
						"characters": "it"
					},
					"AgAAAIVZAAAAAAAAhlkAAAAAAAAAAAAAhlkAAAAAAACHWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhVkAAAAAAACFWQAAAAAAAAAAAAAAAPC/"
				],
				[
					1690,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIdZAAAAAAAAiFkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh1kAAAAAAACHWQAAAAAAAAAAAAAAAPC/"
				],
				[
					1763,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAP5eAAAAAAAAAF8AAAAAAAAAAAAAgFkAAAAAAACCWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgFkAAAAAAAD+XgAAAAAAAAAAAAAAAPC/"
				],
				[
					1802,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABRkAAAAAAAAFWQAAAAAAAAAAAAAFWQAAAAAAAAjZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFGQAAAAAAAAUZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1810,
					1,
					"cut",
					null,
					"AQAAAJ5kAAAAAAAAnmQAAAAAAAA7AAAAICBjb25zb2xlLmxvZygnc2VuZCB0byBkZWJ1Z2dlcicsIHsgcGlkLCBjb21tYW5kLCBkYXRhIH0pOwo",
					"AQAAAAAAAAABAAAAnmQAAAAAAADZZAAAAAAAAAAAAAAAgF9A"
				],
				[
					1811,
					1,
					"paste",
					null,
					"AQAAAJ5kAAAAAAAA2WQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnmQAAAAAAACeZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1815,
					1,
					"paste",
					null,
					"AQAAAD1kAAAAAAAAeGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPWQAAAAAAAA9ZAAAAAAAAAAAAAAAAAAA"
				],
				[
					1820,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"BQAAAGFkAAAAAAAAYmQAAAAAAAAAAAAAYmQAAAAAAABiZAAAAAAAABIAAABwaWQsIGNvbW1hbmQsIGRhdGEVZAAAAAAAABVkAAAAAAAADgAAACAgICAgICAgICAgICAgVGQAAAAAAABVZAAAAAAAAAAAAABVZAAAAAAAAFZkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYWQAAAAAAABzZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1841,
					1,
					"cut",
					null,
					"AQAAAPhkAAAAAAAA+GQAAAAAAAAnAAAAICAgICAgICAgICAgICAgIGRiZy5zZW5kTWVzc2FnZShkYXRhKTsK",
					"AQAAAAAAAAABAAAA+GQAAAAAAAAfZQAAAAAAAAAAAAAAAAAA"
				],
				[
					1842,
					1,
					"paste",
					null,
					"AQAAAPhkAAAAAAAAH2UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+GQAAAAAAAD4ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1844,
					1,
					"paste",
					null,
					"AQAAAFtkAAAAAAAAgmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW2QAAAAAAABbZAAAAAAAAAAAAAAAAAAA"
				],
				[
					1846,
					4,
					"left_delete",
					null,
					"BAAAAH5kAAAAAAAAfmQAAAAAAAABAAAAYX1kAAAAAAAAfWQAAAAAAAABAAAAdHxkAAAAAAAAfGQAAAAAAAABAAAAYXtkAAAAAAAAe2QAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAf2QAAAAAAAB/ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1847,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"AwAAAHtkAAAAAAAAfGQAAAAAAAAAAAAAfGQAAAAAAAB9ZAAAAAAAAAAAAAB9ZAAAAAAAAH5kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe2QAAAAAAAB7ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1853,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAERlAAAAAAAARmUAAAAAAAAAAAAAgmQAAAAAAACEZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgmQAAAAAAABEZQAAAAAAAAAAAAAAAPC/"
				],
				[
					1948,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAM8hAAAAAAAA0CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzyEAAAAAAADPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1949,
					1,
					"left_delete",
					null,
					"AQAAAM8hAAAAAAAAzyEAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA0CEAAAAAAADQIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1957,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAQiAAAAAAAABSIAAAAAAAAAAAAABSIAAAAAAAAGIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABCIAAAAAAAAEIgAAAAAAAAAAAAAAIGNA"
				],
				[
					1959,
					1,
					"insert",
					{
						"characters": "dbg.dispatch?="
					},
					"DgAAAAUiAAAAAAAABiIAAAAAAAAAAAAABiIAAAAAAAAHIgAAAAAAAAAAAAAHIgAAAAAAAAgiAAAAAAAAAAAAAAgiAAAAAAAACSIAAAAAAAAAAAAACSIAAAAAAAAKIgAAAAAAAAAAAAAKIgAAAAAAAAsiAAAAAAAAAAAAAAsiAAAAAAAADCIAAAAAAAAAAAAADCIAAAAAAAANIgAAAAAAAAAAAAANIgAAAAAAAA4iAAAAAAAAAAAAAA4iAAAAAAAADyIAAAAAAAAAAAAADyIAAAAAAAAQIgAAAAAAAAAAAAAQIgAAAAAAABEiAAAAAAAAAAAAABEiAAAAAAAAEiIAAAAAAAAAAAAAEiIAAAAAAAATIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSIAAAAAAAAFIgAAAAAAAAAAAAAAAAAA"
				],
				[
					1960,
					2,
					"left_delete",
					null,
					"AgAAABIiAAAAAAAAEiIAAAAAAAABAAAAPREiAAAAAAAAESIAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAEyIAAAAAAAATIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1961,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAABEiAAAAAAAAEiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAESIAAAAAAAARIgAAAAAAAAAAAAAAAPC/"
				],
				[
					1963,
					1,
					"cut",
					null,
					"AQAAAAUiAAAAAAAABSIAAAAAAAANAAAAZGJnLmRpc3BhdGNoPQ",
					"AQAAAAAAAAABAAAAEiIAAAAAAAAFIgAAAAAAAAAAAAAAAAAA"
				],
				[
					1966,
					1,
					"paste",
					null,
					"AQAAAM8hAAAAAAAA3CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzyEAAAAAAADPIQAAAAAAAAAAAAAAAPC/"
				],
				[
					1970,
					2,
					"left_delete",
					null,
					"AgAAABEiAAAAAAAAESIAAAAAAAABAAAAChAiAAAAAAAAECIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAEiIAAAAAAAASIgAAAAAAAAAAAAAA4HBA"
				],
				[
					1986,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAGdkAAAAAAAAaGQAAAAAAAAAAAAAaGQAAAAAAABqZAAAAAAAAAAAAABqZAAAAAAAAGtkAAAAAAAAAAAAAGtkAAAAAAAAbWQAAAAAAAAAAAAAaGQAAAAAAABoZAAAAAAAAAIAAAAgIGtkAAAAAAAAbGQAAAAAAAAAAAAAbGQAAAAAAABuZAAAAAAAAAAAAABpZAAAAAAAAGlkAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAZ2QAAAAAAABnZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1994,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAACJkAAAAAAAAI2QAAAAAAAAAAAAAa2QAAAAAAABrZAAAAAAAAAIAAAAgICNkAAAAAAAAJGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAImQAAAAAAAAiZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1996,
					1,
					"insert",
					{
						"characters": "case"
					},
					"BAAAACNkAAAAAAAAJGQAAAAAAAAAAAAAJGQAAAAAAAAlZAAAAAAAAAAAAAAlZAAAAAAAACZkAAAAAAAAAAAAACZkAAAAAAAAJ2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAI2QAAAAAAAAjZAAAAAAAAAAAAAAAAAAA"
				],
				[
					1997,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACdkAAAAAAAAKGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ2QAAAAAAAAnZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1998,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAChkAAAAAAAAKmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKGQAAAAAAAAoZAAAAAAAAAAAAAAAAPC/"
				],
				[
					1999,
					1,
					"insert",
					{
						"characters": "ty"
					},
					"AgAAAClkAAAAAAAAKmQAAAAAAAAAAAAAKmQAAAAAAAArZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKWQAAAAAAAApZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2000,
					2,
					"left_delete",
					null,
					"AgAAACpkAAAAAAAAKmQAAAAAAAABAAAAeSlkAAAAAAAAKWQAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAK2QAAAAAAAArZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2001,
					1,
					"insert",
					{
						"characters": "request"
					},
					"BwAAAClkAAAAAAAAKmQAAAAAAAAAAAAAKmQAAAAAAAArZAAAAAAAAAAAAAArZAAAAAAAACxkAAAAAAAAAAAAACxkAAAAAAAALWQAAAAAAAAAAAAALWQAAAAAAAAuZAAAAAAAAAAAAAAuZAAAAAAAAC9kAAAAAAAAAAAAAC9kAAAAAAAAMGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKWQAAAAAAAApZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2003,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADFkAAAAAAAAMmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMWQAAAAAAAAxZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2004,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADJkAAAAAAAAM2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMmQAAAAAAAAyZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2005,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADNkAAAAAAAANWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM2QAAAAAAAAzZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2006,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAADRkAAAAAAAANWQAAAAAAAAAAAAANWQAAAAAAAA2ZAAAAAAAAAAAAAA1ZAAAAAAAADdkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANGQAAAAAAAA0ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2007,
					1,
					"insert",
					{
						"characters": "break;"
					},
					"BgAAADdkAAAAAAAAOGQAAAAAAAAAAAAAOGQAAAAAAAA5ZAAAAAAAAAAAAAA5ZAAAAAAAADpkAAAAAAAAAAAAADpkAAAAAAAAO2QAAAAAAAAAAAAAO2QAAAAAAAA8ZAAAAAAAAAAAAAA8ZAAAAAAAAD1kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN2QAAAAAAAA3ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2010,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADRkAAAAAAAANWQAAAAAAAAAAAAANWQAAAAAAAA3ZAAAAAAAAAAAAAA3ZAAAAAAAADhkAAAAAAAAAAAAADhkAAAAAAAAOWQAAAAAAAAAAAAAOWQAAAAAAAA6ZAAAAAAAAAAAAAA6ZAAAAAAAADtkAAAAAAAAAAAAADtkAAAAAAAAPGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANGQAAAAAAAA0ZAAAAAAAAP///////+9/"
				],
				[
					2011,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADxkAAAAAAAAPWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPGQAAAAAAAA8ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2012,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD1kAAAAAAAAP2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPWQAAAAAAAA9ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2013,
					1,
					"insert",
					{
						"characters": "request"
					},
					"BwAAAD5kAAAAAAAAP2QAAAAAAAAAAAAAP2QAAAAAAABAZAAAAAAAAAAAAABAZAAAAAAAAEFkAAAAAAAAAAAAAEFkAAAAAAAAQmQAAAAAAAAAAAAAQmQAAAAAAABDZAAAAAAAAAAAAABDZAAAAAAAAERkAAAAAAAAAAAAAERkAAAAAAAARWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPmQAAAAAAAA+ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2014,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEVkAAAAAAAARmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARWQAAAAAAABFZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2016,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEdkAAAAAAAASGQAAAAAAAAAAAAASGQAAAAAAABJZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR2QAAAAAAABHZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2017,
					1,
					"insert",
					{
						"characters": "  obj;"
					},
					"BgAAAElkAAAAAAAASmQAAAAAAAAAAAAASmQAAAAAAABLZAAAAAAAAAAAAABLZAAAAAAAAExkAAAAAAAAAAAAAExkAAAAAAAATWQAAAAAAAAAAAAATWQAAAAAAABOZAAAAAAAAAAAAABOZAAAAAAAAE9kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASWQAAAAAAABJZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2018,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE9kAAAAAAAAUGQAAAAAAAAAAAAAUGQAAAAAAABSZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT2QAAAAAAABPZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2021,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAFJkAAAAAAAAU2QAAAAAAAAAAAAAU2QAAAAAAABUZAAAAAAAAAAAAABUZAAAAAAAAFVkAAAAAAAAAAAAAFVkAAAAAAAAVmQAAAAAAAAAAAAAVmQAAAAAAABXZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUmQAAAAAAABSZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2022,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFdkAAAAAAAAWGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV2QAAAAAAABXZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2023,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFhkAAAAAAAAWmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWGQAAAAAAABYZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2024,
					1,
					"insert",
					{
						"characters": "request_se"
					},
					"CgAAAFlkAAAAAAAAWmQAAAAAAAAAAAAAWmQAAAAAAABbZAAAAAAAAAAAAABbZAAAAAAAAFxkAAAAAAAAAAAAAFxkAAAAAAAAXWQAAAAAAAAAAAAAXWQAAAAAAABeZAAAAAAAAAAAAABeZAAAAAAAAF9kAAAAAAAAAAAAAF9kAAAAAAAAYGQAAAAAAAAAAAAAYGQAAAAAAABhZAAAAAAAAAAAAABhZAAAAAAAAGJkAAAAAAAAAAAAAGJkAAAAAAAAY2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWWQAAAAAAABZZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2025,
					1,
					"left_delete",
					null,
					"AQAAAGJkAAAAAAAAYmQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAY2QAAAAAAABjZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2026,
					1,
					"insert",
					{
						"characters": "wq"
					},
					"AgAAAGJkAAAAAAAAY2QAAAAAAAAAAAAAY2QAAAAAAABkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYmQAAAAAAABiZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2027,
					2,
					"left_delete",
					null,
					"AgAAAGNkAAAAAAAAY2QAAAAAAAABAAAAcWJkAAAAAAAAYmQAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAZGQAAAAAAABkZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2028,
					1,
					"insert",
					{
						"characters": "eq"
					},
					"AgAAAGJkAAAAAAAAY2QAAAAAAAAAAAAAY2QAAAAAAABkZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYmQAAAAAAABiZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2029,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGRkAAAAAAAAZWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZGQAAAAAAABkZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2030,
					1,
					"left_delete",
					null,
					"AQAAAGRkAAAAAAAAZGQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAZWQAAAAAAABlZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2033,
					9,
					"left_delete",
					null,
					"CQAAAGNkAAAAAAAAY2QAAAAAAAABAAAAcWJkAAAAAAAAYmQAAAAAAAABAAAAZWFkAAAAAAAAYWQAAAAAAAABAAAAc2BkAAAAAAAAYGQAAAAAAAABAAAAX19kAAAAAAAAX2QAAAAAAAABAAAAdF5kAAAAAAAAXmQAAAAAAAABAAAAc11kAAAAAAAAXWQAAAAAAAABAAAAZVxkAAAAAAAAXGQAAAAAAAABAAAAdVtkAAAAAAAAW2QAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAAZGQAAAAAAABkZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2034,
					1,
					"insert",
					{
						"characters": "qu"
					},
					"AgAAAFtkAAAAAAAAXGQAAAAAAAAAAAAAXGQAAAAAAABdZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW2QAAAAAAABbZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2035,
					1,
					"left_delete",
					null,
					"AQAAAFxkAAAAAAAAXGQAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAXWQAAAAAAABdZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2036,
					1,
					"insert",
					{
						"characters": "uest_seq,"
					},
					"CQAAAFxkAAAAAAAAXWQAAAAAAAAAAAAAXWQAAAAAAABeZAAAAAAAAAAAAABeZAAAAAAAAF9kAAAAAAAAAAAAAF9kAAAAAAAAYGQAAAAAAAAAAAAAYGQAAAAAAABhZAAAAAAAAAAAAABhZAAAAAAAAGJkAAAAAAAAAAAAAGJkAAAAAAAAY2QAAAAAAAAAAAAAY2QAAAAAAABkZAAAAAAAAAAAAABkZAAAAAAAAGVkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXGQAAAAAAABcZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2037,
					1,
					"insert",
					{
						"characters": "commm"
					},
					"BQAAAGVkAAAAAAAAZmQAAAAAAAAAAAAAZmQAAAAAAABnZAAAAAAAAAAAAABnZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAaWQAAAAAAAAAAAAAaWQAAAAAAABqZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZWQAAAAAAABlZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2038,
					1,
					"left_delete",
					null,
					"AQAAAGlkAAAAAAAAaWQAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAamQAAAAAAABqZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2039,
					1,
					"insert",
					{
						"characters": "and,arg"
					},
					"BwAAAGlkAAAAAAAAamQAAAAAAAAAAAAAamQAAAAAAABrZAAAAAAAAAAAAABrZAAAAAAAAGxkAAAAAAAAAAAAAGxkAAAAAAAAbWQAAAAAAAAAAAAAbWQAAAAAAABuZAAAAAAAAAAAAABuZAAAAAAAAG9kAAAAAAAAAAAAAG9kAAAAAAAAcGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaWQAAAAAAABpZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2040,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHBkAAAAAAAAcWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcGQAAAAAAABwZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2042,
					1,
					"insert",
					{
						"characters": "=request;"
					},
					"CQAAAHJkAAAAAAAAc2QAAAAAAAAAAAAAc2QAAAAAAAB0ZAAAAAAAAAAAAAB0ZAAAAAAAAHVkAAAAAAAAAAAAAHVkAAAAAAAAdmQAAAAAAAAAAAAAdmQAAAAAAAB3ZAAAAAAAAAAAAAB3ZAAAAAAAAHhkAAAAAAAAAAAAAHhkAAAAAAAAeWQAAAAAAAAAAAAAeWQAAAAAAAB6ZAAAAAAAAAAAAAB6ZAAAAAAAAHtkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcmQAAAAAAAByZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2043,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAHtkAAAAAAAAfGQAAAAAAAAAAAAAfGQAAAAAAAB+ZAAAAAAAAAAAAAB+ZAAAAAAAAH9kAAAAAAAAAAAAAH9kAAAAAAAAgWQAAAAAAAAAAAAAfGQAAAAAAAB8ZAAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAe2QAAAAAAAB7ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2044,
					1,
					"paste",
					null,
					"AQAAAH9kAAAAAAAAimQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf2QAAAAAAAB/ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2046,
					1,
					"insert",
					{
						"characters": "dbg.dispatch."
					},
					"DQAAAH9kAAAAAAAAgGQAAAAAAAAAAAAAgGQAAAAAAACBZAAAAAAAAAAAAACBZAAAAAAAAIJkAAAAAAAAAAAAAIJkAAAAAAAAg2QAAAAAAAAAAAAAg2QAAAAAAACEZAAAAAAAAAAAAACEZAAAAAAAAIVkAAAAAAAAAAAAAIVkAAAAAAAAhmQAAAAAAAAAAAAAhmQAAAAAAACHZAAAAAAAAAAAAACHZAAAAAAAAIhkAAAAAAAAAAAAAIhkAAAAAAAAiWQAAAAAAAAAAAAAiWQAAAAAAACKZAAAAAAAAAAAAACKZAAAAAAAAItkAAAAAAAAAAAAAItkAAAAAAAAjGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf2QAAAAAAAB/ZAAAAAAAAAAAAAAAADJA"
				],
				[
					2048,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAJdkAAAAAAAAmGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAl2QAAAAAAACXZAAAAAAAAP///////+9/"
				],
				[
					2049,
					1,
					"left_delete",
					null,
					"AQAAAJdkAAAAAAAAl2QAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAmGQAAAAAAACYZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2050,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJdkAAAAAAAAmWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAl2QAAAAAAACXZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2051,
					1,
					"insert",
					{
						"characters": "command,"
					},
					"CAAAAJhkAAAAAAAAmWQAAAAAAAAAAAAAmWQAAAAAAACaZAAAAAAAAAAAAACaZAAAAAAAAJtkAAAAAAAAAAAAAJtkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACdZAAAAAAAAAAAAACdZAAAAAAAAJ5kAAAAAAAAAAAAAJ5kAAAAAAAAn2QAAAAAAAAAAAAAn2QAAAAAAACgZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmGQAAAAAAACYZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2052,
					1,
					"insert",
					{
						"characters": " args"
					},
					"BQAAAKBkAAAAAAAAoWQAAAAAAAAAAAAAoWQAAAAAAACiZAAAAAAAAAAAAACiZAAAAAAAAKNkAAAAAAAAAAAAAKNkAAAAAAAApGQAAAAAAAAAAAAApGQAAAAAAAClZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoGQAAAAAAACgZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2054,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKZkAAAAAAAAp2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApmQAAAAAAACmZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2058,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKVkAAAAAAAApmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApWQAAAAAAAClZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2059,
					1,
					"insert",
					{
						"characters": " request_seq"
					},
					"DAAAAKZkAAAAAAAAp2QAAAAAAAAAAAAAp2QAAAAAAACoZAAAAAAAAAAAAACoZAAAAAAAAKlkAAAAAAAAAAAAAKlkAAAAAAAAqmQAAAAAAAAAAAAAqmQAAAAAAACrZAAAAAAAAAAAAACrZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAArWQAAAAAAAAAAAAArWQAAAAAAACuZAAAAAAAAAAAAACuZAAAAAAAAK9kAAAAAAAAAAAAAK9kAAAAAAAAsGQAAAAAAAAAAAAAsGQAAAAAAACxZAAAAAAAAAAAAACxZAAAAAAAALJkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApmQAAAAAAACmZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2073,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAH9kAAAAAAAAgGQAAAAAAAAAAAAAgGQAAAAAAACBZAAAAAAAAAAAAACBZAAAAAAAAIJkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf2QAAAAAAAB/ZAAAAAAAAAAAAAAAADJA"
				],
				[
					2074,
					1,
					"insert",
					{
						"characters": " response="
					},
					"CgAAAIJkAAAAAAAAg2QAAAAAAAAAAAAAg2QAAAAAAACEZAAAAAAAAAAAAACEZAAAAAAAAIVkAAAAAAAAAAAAAIVkAAAAAAAAhmQAAAAAAAAAAAAAhmQAAAAAAACHZAAAAAAAAAAAAACHZAAAAAAAAIhkAAAAAAAAAAAAAIhkAAAAAAAAiWQAAAAAAAAAAAAAiWQAAAAAAACKZAAAAAAAAAAAAACKZAAAAAAAAItkAAAAAAAAAAAAAItkAAAAAAAAjGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgmQAAAAAAACCZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2075,
					1,
					"insert",
					{
						"characters": " await"
					},
					"BgAAAIxkAAAAAAAAjWQAAAAAAAAAAAAAjWQAAAAAAACOZAAAAAAAAAAAAACOZAAAAAAAAI9kAAAAAAAAAAAAAI9kAAAAAAAAkGQAAAAAAAAAAAAAkGQAAAAAAACRZAAAAAAAAAAAAACRZAAAAAAAAJJkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjGQAAAAAAACMZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2076,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJJkAAAAAAAAk2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkmQAAAAAAACSZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2078,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAMhkAAAAAAAAyWQAAAAAAAAAAAAAyWQAAAAAAADLZAAAAAAAAAAAAADLZAAAAAAAAMxkAAAAAAAAAAAAAMxkAAAAAAAAzmQAAAAAAAAAAAAAyWQAAAAAAADJZAAAAAAAAAIAAAAgIMxkAAAAAAAAzWQAAAAAAAAAAAAAzWQAAAAAAADPZAAAAAAAAAAAAADKZAAAAAAAAMpkAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAyGQAAAAAAADIZAAAAAAAAP///////+9/"
				],
				[
					2086,
					1,
					"paste",
					null,
					"AQAAAMpkAAAAAAAA2WQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAymQAAAAAAADKZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2087,
					1,
					"insert",
					{
						"characters": "response);"
					},
					"CwAAANlkAAAAAAAA2mQAAAAAAAAAAAAA22QAAAAAAADbZAAAAAAAAAIAAAAgINpkAAAAAAAA22QAAAAAAAAAAAAA22QAAAAAAADcZAAAAAAAAAAAAADcZAAAAAAAAN1kAAAAAAAAAAAAAN1kAAAAAAAA3mQAAAAAAAAAAAAA3mQAAAAAAADfZAAAAAAAAAAAAADfZAAAAAAAAOBkAAAAAAAAAAAAAOBkAAAAAAAA4WQAAAAAAAAAAAAA4WQAAAAAAADiZAAAAAAAAAAAAADiZAAAAAAAAONkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2WQAAAAAAADZZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2089,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAMlkAAAAAAAAymQAAAAAAAAAAAAAymQAAAAAAADLZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyWQAAAAAAADJZAAAAAAAAAAAAAAAIGxA"
				],
				[
					2091,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAMpkAAAAAAAAy2QAAAAAAAAAAAAAy2QAAAAAAADMZAAAAAAAAAAAAADMZAAAAAAAAM1kAAAAAAAAAAAAAM1kAAAAAAAAzmQAAAAAAAAAAAAAzmQAAAAAAADPZAAAAAAAAAAAAADPZAAAAAAAANBkAAAAAAAAAAAAANBkAAAAAAAA0WQAAAAAAAAAAAAA0WQAAAAAAADSZAAAAAAAAAAAAADSZAAAAAAAANNkAAAAAAAAAAAAANNkAAAAAAAA1GQAAAAAAAAAAAAA1GQAAAAAAADVZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAymQAAAAAAADKZAAAAAAAAAAAAAAAAAAA"
				],
				[
					2092,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANVkAAAAAAAA12QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1WQAAAAAAADVZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2093,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANZkAAAAAAAA2GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1mQAAAAAAADWZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2094,
					1,
					"insert",
					{
						"characters": "RE"
					},
					"AgAAANdkAAAAAAAA2GQAAAAAAAAAAAAA2GQAAAAAAADZZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA12QAAAAAAADXZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2095,
					1,
					"left_delete",
					null,
					"AQAAANhkAAAAAAAA2GQAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAA2WQAAAAAAADZZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2096,
					1,
					"insert",
					{
						"characters": "equest"
					},
					"BgAAANhkAAAAAAAA2WQAAAAAAAAAAAAA2WQAAAAAAADaZAAAAAAAAAAAAADaZAAAAAAAANtkAAAAAAAAAAAAANtkAAAAAAAA3GQAAAAAAAAAAAAA3GQAAAAAAADdZAAAAAAAAAAAAADdZAAAAAAAAN5kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2GQAAAAAAADYZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2098,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN9kAAAAAAAA4GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA32QAAAAAAADfZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2099,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOBkAAAAAAAA4mQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4GQAAAAAAADgZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2100,
					1,
					"insert",
					{
						"characters": "resöon"
					},
					"BgAAAOFkAAAAAAAA4mQAAAAAAAAAAAAA4mQAAAAAAADjZAAAAAAAAAAAAADjZAAAAAAAAORkAAAAAAAAAAAAAORkAAAAAAAA5WQAAAAAAAAAAAAA5WQAAAAAAADmZAAAAAAAAAAAAADmZAAAAAAAAOdkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4WQAAAAAAADhZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2101,
					3,
					"left_delete",
					null,
					"AwAAAOZkAAAAAAAA5mQAAAAAAAABAAAAbuVkAAAAAAAA5WQAAAAAAAABAAAAb+RkAAAAAAAA5GQAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAA52QAAAAAAADnZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2102,
					1,
					"insert",
					{
						"characters": "ponse"
					},
					"BQAAAORkAAAAAAAA5WQAAAAAAAAAAAAA5WQAAAAAAADmZAAAAAAAAAAAAADmZAAAAAAAAOdkAAAAAAAAAAAAAOdkAAAAAAAA6GQAAAAAAAAAAAAA6GQAAAAAAADpZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5GQAAAAAAADkZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2104,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOtkAAAAAAAA7GQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA62QAAAAAAADrZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2108,
					1,
					"insert",
					{
						"characters": "request,"
					},
					"CAAAAOFkAAAAAAAA4mQAAAAAAAAAAAAA4mQAAAAAAADjZAAAAAAAAAAAAADjZAAAAAAAAORkAAAAAAAAAAAAAORkAAAAAAAA5WQAAAAAAAAAAAAA5WQAAAAAAADmZAAAAAAAAAAAAADmZAAAAAAAAOdkAAAAAAAAAAAAAOdkAAAAAAAA6GQAAAAAAAAAAAAA6GQAAAAAAADpZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4WQAAAAAAADhZAAAAAAAAAAAAAAAAPC/"
				],
				[
					2116,
					1,
					"left_delete",
					null,
					"AQAAAGJlAAAAAAAAYmUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAY2UAAAAAAABjZQAAAAAAAAAAAAAAAAAA"
				],
				[
					2121,
					2,
					"left_delete",
					null,
					"AgAAAGFlAAAAAAAAYWUAAAAAAAABAAAACmBlAAAAAAAAYGUAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAYmUAAAAAAABiZQAAAAAAAAAAAAAAAPC/"
				],
				[
					2122,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGBlAAAAAAAAYWUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYGUAAAAAAABgZQAAAAAAAAAAAAAAAPC/"
				],
				[
					2124,
					1,
					"left_delete",
					null,
					"AQAAAGFlAAAAAAAAYWUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYmUAAAAAAABiZQAAAAAAAAAAAAAAMHhA"
				],
				[
					2129,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIdlAAAAAAAAiWUAAAAAAAAAAAAANmUAAAAAAAA4ZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANmUAAAAAAACHZQAAAAAAAAAAAAAAAPC/"
				],
				[
					2132,
					2,
					"right_delete",
					null,
					"AgAAAI1lAAAAAAAAjWUAAAAAAAABAAAAL41lAAAAAAAAjWUAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAjWUAAAAAAACNZQAAAAAAAAAAAAAAACJA"
				],
				[
					2137,
					2,
					"left_delete",
					null,
					"AgAAAFBmAAAAAAAAUGYAAAAAAAABAAAAL09mAAAAAAAAT2YAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAUWYAAAAAAABRZgAAAAAAAAAAAAAAAPC/"
				],
				[
					2146,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAsmUAAAAAAACyZQAAAAAAAAAAAAAAYHVA"
				],
				[
					2168,
					1,
					"insert",
					{
						"characters": "typüe"
					},
					"BQAAAGlOAAAAAAAAak4AAAAAAAAAAAAAak4AAAAAAABrTgAAAAAAAAAAAABrTgAAAAAAAGxOAAAAAAAAAAAAAGxOAAAAAAAAbU4AAAAAAAAAAAAAbU4AAAAAAABuTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaU4AAAAAAABpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2169,
					5,
					"left_delete",
					null,
					"BQAAAG1OAAAAAAAAbU4AAAAAAAABAAAAZWxOAAAAAAAAbE4AAAAAAAACAAAAw7xrTgAAAAAAAGtOAAAAAAAAAQAAAHBqTgAAAAAAAGpOAAAAAAAAAQAAAHlpTgAAAAAAAGlOAAAAAAAAAQAAAHQ",
					"AQAAAAAAAAABAAAAbk4AAAAAAABuTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2170,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAGlOAAAAAAAAak4AAAAAAAAAAAAAak4AAAAAAABrTgAAAAAAAAAAAABrTgAAAAAAAGxOAAAAAAAAAAAAAGxOAAAAAAAAbU4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaU4AAAAAAABpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2171,
					4,
					"left_delete",
					null,
					"BAAAAGxOAAAAAAAAbE4AAAAAAAABAAAAZWtOAAAAAAAAa04AAAAAAAABAAAAcGpOAAAAAAAAak4AAAAAAAABAAAAeWlOAAAAAAAAaU4AAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAbU4AAAAAAABtTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2172,
					1,
					"insert",
					{
						"characters": "obj.type"
					},
					"CAAAAGlOAAAAAAAAak4AAAAAAAAAAAAAak4AAAAAAABrTgAAAAAAAAAAAABrTgAAAAAAAGxOAAAAAAAAAAAAAGxOAAAAAAAAbU4AAAAAAAAAAAAAbU4AAAAAAABuTgAAAAAAAAAAAABuTgAAAAAAAG9OAAAAAAAAAAAAAG9OAAAAAAAAcE4AAAAAAAAAAAAAcE4AAAAAAABxTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaU4AAAAAAABpTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2173,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAHFOAAAAAAAAck4AAAAAAAAAAAAAck4AAAAAAABzTgAAAAAAAAAAAABzTgAAAAAAAHROAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcU4AAAAAAABxTgAAAAAAAAAAAAAAAPC/"
				],
				[
					2174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHROAAAAAAAAdU4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdE4AAAAAAAB0TgAAAAAAAAAAAAAAAPC/"
				],
				[
					2214,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAG9GAAAAAAAAcEYAAAAAAAAAAAAAcEYAAAAAAABwRgAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAAb0YAAAAAAABwRgAAAAAAAAAAAAAAAPC/"
				],
				[
					2269,
					1,
					"insert",
					{
						"characters": "asyncv"
					},
					"BgAAANBFAAAAAAAA0UUAAAAAAAAAAAAA0UUAAAAAAADSRQAAAAAAAAAAAADSRQAAAAAAANNFAAAAAAAAAAAAANNFAAAAAAAA1EUAAAAAAAAAAAAA1EUAAAAAAADVRQAAAAAAAAAAAADVRQAAAAAAANZFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0EUAAAAAAADQRQAAAAAAAAAAAAAAAPC/"
				],
				[
					2281,
					1,
					"left_delete",
					null,
					"AQAAANVFAAAAAAAA1UUAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAA1kUAAAAAAADWRQAAAAAAAAAAAAAAAPC/"
				],
				[
					2282,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANVFAAAAAAAA1kUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1UUAAAAAAADVRQAAAAAAAAAAAAAAAPC/"
				],
				[
					2285,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAAxGAAAAAAAADUYAAAAAAAAAAAAADUYAAAAAAAAORgAAAAAAAAAAAAAORgAAAAAAAA9GAAAAAAAAAAAAAA9GAAAAAAAAEEYAAAAAAAAAAAAAEEYAAAAAAAARRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADEYAAAAAAAAMRgAAAAAAAAAAAAAAAPC/"
				],
				[
					2286,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABFGAAAAAAAAEkYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEUYAAAAAAAARRgAAAAAAAAAAAAAAAPC/"
				],
				[
					2441,
					1,
					"insert",
					{
						"characters": ".call"
					},
					"BQAAAPtXAAAAAAAA/FcAAAAAAAAAAAAA/FcAAAAAAAD9VwAAAAAAAAAAAAD9VwAAAAAAAP5XAAAAAAAAAAAAAP5XAAAAAAAA/1cAAAAAAAAAAAAA/1cAAAAAAAAAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+1cAAAAAAAD7VwAAAAAAAAAAAAAAAPC/"
				],
				[
					2443,
					1,
					"insert",
					{
						"characters": "glö"
					},
					"AwAAAAFYAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAARYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAPC/"
				],
				[
					2444,
					2,
					"left_delete",
					null,
					"AgAAAANYAAAAAAAAA1gAAAAAAAACAAAAw7YCWAAAAAAAAAJYAAAAAAAAAQAAAGw",
					"AQAAAAAAAAABAAAABFgAAAAAAAAEWAAAAAAAAAAAAAAAAPC/"
				],
				[
					2445,
					1,
					"insert",
					{
						"characters": "lobalThis."
					},
					"CgAAAAJYAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAAEWAAAAAAAAAAAAAAEWAAAAAAAAAVYAAAAAAAAAAAAAAVYAAAAAAAABlgAAAAAAAAAAAAABlgAAAAAAAAHWAAAAAAAAAAAAAAHWAAAAAAAAAhYAAAAAAAAAAAAAAhYAAAAAAAACVgAAAAAAAAAAAAACVgAAAAAAAAKWAAAAAAAAAAAAAAKWAAAAAAAAAtYAAAAAAAAAAAAAAtYAAAAAAAADFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAPC/"
				],
				[
					2446,
					1,
					"insert",
					{
						"characters": "dbg,"
					},
					"BAAAAAxYAAAAAAAADVgAAAAAAAAAAAAADVgAAAAAAAAOWAAAAAAAAAAAAAAOWAAAAAAAAA9YAAAAAAAAAAAAAA9YAAAAAAAAEFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADFgAAAAAAAAMWAAAAAAAAAAAAAAAAPC/"
				],
				[
					2447,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABBYAAAAAAAAEVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEFgAAAAAAAAQWAAAAAAAAAAAAAAAAPC/"
				],
				[
					2507,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJNfAAAAAAAAlF8AAAAAAAAAAAAAlF8AAAAAAACiXwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAk18AAAAAAACTXwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/quickjs-sockets.c",
			"settings":
			{
				"buffer_size": 65964,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					141,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFJ2AAAAAAAAU3YAAAAAAAAAAAAAU3YAAAAAAABVdgAAAAAAAAAAAABVdgAAAAAAAFZ2AAAAAAAAAAAAAFZ2AAAAAAAAWHYAAAAAAAAAAAAAU3YAAAAAAABTdgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAUnYAAAAAAABSdgAAAAAAAP///////+9/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "87"
					},
					"BAAAAFx5AAAAAAAAXXkAAAAAAAAAAAAAXXkAAAAAAABdeQAAAAAAAAEAAAA3VHYAAAAAAABUdgAAAAAAAAIAAAAgIFt5AAAAAAAAXHkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXHkAAAAAAABdeQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAFt5AAAAAAAAW3kAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAXHkAAAAAAABceQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJt7AAAAAAAAm3sAAAAAAAAgAAAAICBkYXRhWzFdID0gcmVzb2x2aW5nX2Z1bmNzWzBdOwo",
					"AQAAAAAAAAABAAAAm3sAAAAAAAC7ewAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					2,
					"paste",
					null,
					"AgAAAJt7AAAAAAAAu3sAAAAAAAAAAAAAu3sAAAAAAADbewAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAm3sAAAAAAACbewAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAMJ7AAAAAAAAw3sAAAAAAAAAAAAAw3sAAAAAAADDewAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAwnsAAAAAAADDewAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANd7AAAAAAAA2HsAAAAAAAAAAAAA2HsAAAAAAADYewAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAA13sAAAAAAADYewAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAOJ7AAAAAAAA43sAAAAAAAAAAAAA43sAAAAAAADjewAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAA4nsAAAAAAADjewAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAAF8AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACfAAAAAAAAAEAAAAz",
					"AQAAAAAAAAABAAAAAXwAAAAAAAACfAAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAADV2AAAAAAAANnYAAAAAAAAAAAAANnYAAAAAAAA2dgAAAAAAAAEAAAAz",
					"AQAAAAAAAAABAAAANXYAAAAAAAA2dgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAANZ2AAAAAAAA13YAAAAAAAAAAAAA13YAAAAAAADXdgAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAA1nYAAAAAAADXdgAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAh4AAAAAAAACXgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACHgAAAAAAAAIeAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "JS_IsException"
					},
					"DgAAAAh4AAAAAAAACXgAAAAAAAAAAAAACXgAAAAAAAAKeAAAAAAAAAAAAAAKeAAAAAAAAAt4AAAAAAAAAAAAAAt4AAAAAAAADHgAAAAAAAAAAAAADHgAAAAAAAANeAAAAAAAAAAAAAANeAAAAAAAAA54AAAAAAAAAAAAAA54AAAAAAAAD3gAAAAAAAAAAAAAD3gAAAAAAAAQeAAAAAAAAAAAAAAQeAAAAAAAABF4AAAAAAAAAAAAABF4AAAAAAAAEngAAAAAAAAAAAAAEngAAAAAAAATeAAAAAAAAAAAAAATeAAAAAAAABR4AAAAAAAAAAAAABR4AAAAAAAAFXgAAAAAAAAAAAAAFXgAAAAAAAAWeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACHgAAAAAAAAIeAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABZ4AAAAAAAAGHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFngAAAAAAAAWeAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAABd4AAAAAAAAGHgAAAAAAAAAAAAAGHgAAAAAAAAZeAAAAAAAAAAAAAAZeAAAAAAAABp4AAAAAAAAAAAAABp4AAAAAAAAG3gAAAAAAAAAAAAAG3gAAAAAAAAceAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF3gAAAAAAAAXeAAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAB14AAAAAAAAHngAAAAAAAAAAAAAHngAAAAAAAAfeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHXgAAAAAAAAdeAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAB94AAAAAAAAIHgAAAAAAAAAAAAAIHgAAAAAAAAheAAAAAAAAAAAAAAheAAAAAAAACJ4AAAAAAAAAAAAACJ4AAAAAAAAI3gAAAAAAAAAAAAAI3gAAAAAAAAkeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAH3gAAAAAAAAfeAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACR4AAAAAAAAJngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJHgAAAAAAAAkeAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAACV4AAAAAAAAJngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJXgAAAAAAAAleAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACd4AAAAAAAAKHgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ3gAAAAAAAAneAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					3,
					"left_delete",
					null,
					"AwAAACd4AAAAAAAAJ3gAAAAAAAABAAAAICZ4AAAAAAAAJngAAAAAAAABAAAAXSV4AAAAAAAAJXgAAAAAAAABAAAAQA",
					"AQAAAAAAAAABAAAAKHgAAAAAAAAoeAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "2]"
					},
					"AgAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJXgAAAAAAAAleAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAACd4AAAAAAAAKHgAAAAAAAAAAAAAKHgAAAAAAAApeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ3gAAAAAAAAneAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAAFN2AAAAAAAAU3YAAAAAAAABAAAAClJ2AAAAAAAAUnYAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAVHYAAAAAAABUdgAAAAAAAAAAAAAAAAAA"
				],
				[
					434,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAADHgAAAAAAAAMeAAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AQAAAAAAAAABAAAA93cAAAAAAABLeAAAAAAAAAAAAAAAAPC/"
				],
				[
					531,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPZ3AAAAAAAA93cAAAAAAAAAAAAA93cAAAAAAAD4dwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9ncAAAAAAAD2dwAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "iu"
					},
					"AgAAAPd3AAAAAAAA+HcAAAAAAAAAAAAA+HcAAAAAAAD5dwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA93cAAAAAAAD3dwAAAAAAAAAAAAAAAAAA"
				],
				[
					560,
					1,
					"left_delete",
					null,
					"AQAAAPh3AAAAAAAA+HcAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA+XcAAAAAAAD5dwAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAPh3AAAAAAAA+XcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+HcAAAAAAAD4dwAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPl3AAAAAAAA+3cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+XcAAAAAAAD5dwAAAAAAAAAAAAAAAPC/"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "JS_Is"
					},
					"BQAAAPp3AAAAAAAA+3cAAAAAAAAAAAAA+3cAAAAAAAD8dwAAAAAAAAAAAAD8dwAAAAAAAP13AAAAAAAAAAAAAP13AAAAAAAA/ncAAAAAAAAAAAAA/ncAAAAAAAD/dwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+ncAAAAAAAD6dwAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"insert_completion",
					{
						"completion": "JS_IsException",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_IsException"
					},
					"AgAAAPp3AAAAAAAA+ncAAAAAAAAFAAAASlNfSXP6dwAAAAAAAAh4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/3cAAAAAAAD/dwAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAh4AAAAAAAACngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACHgAAAAAAAAIeAAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "vlae"
					},
					"BAAAAAl4AAAAAAAACngAAAAAAAAAAAAACngAAAAAAAALeAAAAAAAAAAAAAALeAAAAAAAAAx4AAAAAAAAAAAAAAx4AAAAAAAADXgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACXgAAAAAAAAJeAAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					3,
					"left_delete",
					null,
					"AwAAAAx4AAAAAAAADHgAAAAAAAABAAAAZQt4AAAAAAAAC3gAAAAAAAABAAAAYQp4AAAAAAAACngAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAADXgAAAAAAAANeAAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "alue"
					},
					"BAAAAAp4AAAAAAAAC3gAAAAAAAAAAAAAC3gAAAAAAAAMeAAAAAAAAAAAAAAMeAAAAAAAAA14AAAAAAAAAAAAAA14AAAAAAAADngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACngAAAAAAAAKeAAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABB4AAAAAAAAEXgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEHgAAAAAAAAQeAAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABF4AAAAAAAAE3gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEXgAAAAAAAAReAAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABJ4AAAAAAAAE3gAAAAAAAAAAAAAE3gAAAAAAAAUeAAAAAAAAAAAAAATeAAAAAAAABV4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEngAAAAAAAASeAAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "JS_GetEx"
					},
					"CAAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAABt4AAAAAAAAHHgAAAAAAAAAAAAAHHgAAAAAAAAdeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFXgAAAAAAAAVeAAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"paste",
					null,
					"AgAAABV4AAAAAAAAJHgAAAAAAAAAAAAAJHgAAAAAAAAkeAAAAAAAAAgAAABKU19HZXRFeA",
					"AQAAAAAAAAABAAAAFXgAAAAAAAAdeAAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACR4AAAAAAAAJngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJHgAAAAAAAAkeAAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"left_delete",
					null,
					"AQAAACV4AAAAAAAAJXgAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAJngAAAAAAAAmeAAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "ctx);"
					},
					"BQAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAAneAAAAAAAACh4AAAAAAAAAAAAACh4AAAAAAAAKXgAAAAAAAAAAAAAKXgAAAAAAAAqeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJXgAAAAAAAAleAAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABV4AAAAAAAAFngAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFXgAAAAAAAAVeAAAAAAAAAAAAAAAADJA"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "value="
					},
					"BgAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFXgAAAAAAAAVeAAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "={0,-1}"
					},
					"BwAAADSLAAAAAAAANYsAAAAAAAAAAAAANYsAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAOIsAAAAAAAAAAAAAOIsAAAAAAAA5iwAAAAAAAAAAAAA5iwAAAAAAADqLAAAAAAAAAAAAADqLAAAAAAAAO4sAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANIsAAAAAAAA0iwAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2zAAAAAAAAXrMAAAAAAAAAAAAAXrMAAAAAAABfswAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXbMAAAAAAABdswAAAAAAAAAAAAAAAEJA"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKzAAAAAAAAk7MAAAAAAAAAAAAAk7MAAAAAAACUswAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkrMAAAAAAACSswAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2rAAAAAAAAXqsAAAAAAAAAAAAAXqsAAAAAAABfqwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXasAAAAAAABdqwAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKrAAAAAAAAk6sAAAAAAAAAAAAAk6sAAAAAAACUqwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkqsAAAAAAACSqwAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAAAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "\n\nuif"
					},
					"CAAAAImKAAAAAAAAiooAAAAAAAAAAAAAiooAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAl4oAAAAAAAAAAAAAiooAAAAAAACKigAAAAAAAAYAAAAgICAgICCRigAAAAAAAJKKAAAAAAAAAAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiYoAAAAAAACJigAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					3,
					"left_delete",
					null,
					"AwAAAJOKAAAAAAAAk4oAAAAAAAABAAAAZpKKAAAAAAAAkooAAAAAAAABAAAAaZGKAAAAAAAAkYoAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAlIoAAAAAAACUigAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkYoAAAAAAACRigAAAAAAAAAAAAAAAPC/"
				],
				[
					967,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJOKAAAAAAAAlYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAk4oAAAAAAACTigAAAAAAAAAAAAAAAPC/"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": "JS_IsNumberr"
					},
					"DAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAACZigAAAAAAAJqKAAAAAAAAAAAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAJ2KAAAAAAAAnooAAAAAAAAAAAAAnooAAAAAAACfigAAAAAAAAAAAACfigAAAAAAAKCKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlIoAAAAAAACUigAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoIoAAAAAAACgigAAAAAAAAAAAAAAAPC/"
				],
				[
					970,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKCKAAAAAAAAoIoAAAAAAAABAAAAKKCKAAAAAAAAoIoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAoYoAAAAAAAChigAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					1,
					"left_delete",
					null,
					"AQAAAJ+KAAAAAAAAn4oAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAoIoAAAAAAACgigAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ+KAAAAAAAAoYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn4oAAAAAAACfigAAAAAAAAAAAAAAAPC/"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAKCKAAAAAAAAoYoAAAAAAAAAAAAAoYoAAAAAAACiigAAAAAAAAAAAACiigAAAAAAAKOKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoIoAAAAAAACgigAAAAAAAAAAAAAAAPC/"
				],
				[
					975,
					1,
					"left_delete",
					null,
					"AQAAAKSKAAAAAAAApIoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAApYoAAAAAAACligAAAAAAAAAAAAAAAPC/"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAKSKAAAAAAAApYoAAAAAAAAAAAAApYoAAAAAAACmigAAAAAAAAAAAACmigAAAAAAAKeKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApIoAAAAAAACkigAAAAAAAAAAAAAAAPC/"
				],
				[
					977,
					1,
					"insert",
					{
						"characters": " JS_ToInt32"
					},
					"CwAAAKeKAAAAAAAAqIoAAAAAAAAAAAAAqIoAAAAAAACpigAAAAAAAAAAAACpigAAAAAAAKqKAAAAAAAAAAAAAKqKAAAAAAAAq4oAAAAAAAAAAAAAq4oAAAAAAACsigAAAAAAAAAAAACsigAAAAAAAK2KAAAAAAAAAAAAAK2KAAAAAAAArooAAAAAAAAAAAAArooAAAAAAACvigAAAAAAAAAAAACvigAAAAAAALCKAAAAAAAAAAAAALCKAAAAAAAAsYoAAAAAAAAAAAAAsYoAAAAAAACyigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp4oAAAAAAACnigAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALKKAAAAAAAAtIoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsooAAAAAAACyigAAAAAAAAAAAAAAAPC/"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAALOKAAAAAAAAtIoAAAAAAAAAAAAAtIoAAAAAAAC1igAAAAAAAAAAAAC1igAAAAAAALaKAAAAAAAAAAAAALaKAAAAAAAAt4oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAs4oAAAAAAACzigAAAAAAAAAAAAAAAPC/"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAALeKAAAAAAAAuIoAAAAAAAAAAAAAuIoAAAAAAAC5igAAAAAAAAAAAAC5igAAAAAAALqKAAAAAAAAAAAAALqKAAAAAAAAu4oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAt4oAAAAAAAC3igAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALyKAAAAAAAAvYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvIoAAAAAAAC8igAAAAAAAAAAAAAAAPC/"
				],
				[
					983,
					5,
					"left_delete",
					null,
					"BQAAALyKAAAAAAAAvIoAAAAAAAABAAAAKbuKAAAAAAAAu4oAAAAAAAABAAAAKbqKAAAAAAAAuooAAAAAAAABAAAAdLmKAAAAAAAAuYoAAAAAAAABAAAAZbiKAAAAAAAAuIoAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAvYoAAAAAAAC9igAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "\nn"
					},
					"AgAAAIqKAAAAAAAAi4oAAAAAAAAAAAAAi4oAAAAAAACMigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiooAAAAAAACKigAAAAAAAAAAAAAAUHlA"
				],
				[
					986,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAjIoAAAAAAACMigAAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "int32_t"
					},
					"BwAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAACNigAAAAAAAI6KAAAAAAAAAAAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi4oAAAAAAACLigAAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": " res"
					},
					"BAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAACUigAAAAAAAJWKAAAAAAAAAAAAAJWKAAAAAAAAlooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkooAAAAAAACSigAAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"left_delete",
					null,
					"AQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAlooAAAAAAACWigAAAAAAAAAAAAAAAPC/"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": "sult;"
					},
					"BQAAAJWKAAAAAAAAlooAAAAAAAAAAAAAlooAAAAAAACXigAAAAAAAAAAAACXigAAAAAAAJiKAAAAAAAAAAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlYoAAAAAAACVigAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"left_delete",
					null,
					"AQAAAJmKAAAAAAAAmYoAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAmooAAAAAAACaigAAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					1,
					"insert",
					{
						"characters": "=-1;"
					},
					"BAAAAJmKAAAAAAAAmooAAAAAAAAAAAAAmooAAAAAAACbigAAAAAAAAAAAACbigAAAAAAAJyKAAAAAAAAAAAAAJyKAAAAAAAAnYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmYoAAAAAAACZigAAAAAAAAAAAAAAAPC/"
				],
				[
					993,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnYoAAAAAAACdigAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "&result,"
					},
					"CAAAAMuKAAAAAAAAzIoAAAAAAAAAAAAAzIoAAAAAAADNigAAAAAAAAAAAADNigAAAAAAAM6KAAAAAAAAAAAAAM6KAAAAAAAAz4oAAAAAAAAAAAAAz4oAAAAAAADQigAAAAAAAAAAAADQigAAAAAAANGKAAAAAAAAAAAAANGKAAAAAAAA0ooAAAAAAAAAAAAA0ooAAAAAAADTigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAy4oAAAAAAADLigAAAAAAAAAAAAAAAPC/"
				],
				[
					998,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAANOKAAAAAAAA1IoAAAAAAAAAAAAA1IoAAAAAAADVigAAAAAAAAAAAADVigAAAAAAANaKAAAAAAAAAAAAANaKAAAAAAAA14oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA04oAAAAAAADTigAAAAAAAAAAAAAAAPC/"
				],
				[
					999,
					3,
					"left_delete",
					null,
					"AwAAANaKAAAAAAAA1ooAAAAAAAABAAAAZdWKAAAAAAAA1YoAAAAAAAABAAAActSKAAAAAAAA1IoAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA14oAAAAAAADXigAAAAAAAAAAAAAAAPC/"
				],
				[
					1000,
					1,
					"insert",
					{
						"characters": "ret))"
					},
					"BQAAANSKAAAAAAAA1YoAAAAAAAAAAAAA1YoAAAAAAADWigAAAAAAAAAAAADWigAAAAAAANeKAAAAAAAAAAAAANeKAAAAAAAA2IoAAAAAAAAAAAAA2IoAAAAAAADZigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1IoAAAAAAADUigAAAAAAAAAAAAAAAPC/"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANmKAAAAAAAA2ooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2YoAAAAAAADZigAAAAAAAAAAAAAAAPC/"
				],
				[
					1002,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANqKAAAAAAAA3IoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2ooAAAAAAADaigAAAAAAAAAAAAAAAPC/"
				],
				[
					1003,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANuKAAAAAAAA3IoAAAAAAAAAAAAA3IoAAAAAAADiigAAAAAAAAAAAADiigAAAAAAAOOKAAAAAAAAAAAAAOOKAAAAAAAA6YoAAAAAAAAAAAAA3IoAAAAAAADcigAAAAAAAAYAAAAgICAgICDcigAAAAAAAOSKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA24oAAAAAAADbigAAAAAAAAAAAAAAAPC/"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5IoAAAAAAADkigAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					1,
					"left_delete",
					null,
					"AQAAAOSKAAAAAAAA5IoAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA5YoAAAAAAADligAAAAAAAAAAAAAAAPC/"
				],
				[
					1015,
					1,
					"cut",
					null,
					"AQAAALyKAAAAAAAAvIoAAAAAAAAcAAAASlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KQ",
					"AQAAAAAAAAABAAAAvIoAAAAAAADYigAAAAAAAAAAAAAAAPC/"
				],
				[
					1016,
					4,
					"left_delete",
					null,
					"BQAAALuKAAAAAAAAu4oAAAAAAAABAAAAIL+KAAAAAAAAv4oAAAAAAAAIAAAAICAgICAgICC6igAAAAAAALqKAAAAAAAAAQAAACa5igAAAAAAALmKAAAAAAAAAQAAACa4igAAAAAAALiKAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAvIoAAAAAAAC8igAAAAAAAAAAAAAAAPC/"
				],
				[
					1018,
					1,
					"paste",
					null,
					"AQAAALyKAAAAAAAA2IoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvIoAAAAAAAC8igAAAAAAAAAAAAAAIGxA"
				],
				[
					1022,
					1,
					"cut",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAATAAAAaW50MzJfdCByZXN1bHQ9LTE7Cg",
					"AQAAAAAAAAABAAAAi4oAAAAAAACeigAAAAAAAAAAAAAAAAAA"
				],
				[
					1024,
					1,
					"paste",
					null,
					"AQAAAKmKAAAAAAAAvIoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqYoAAAAAAACpigAAAAAAAAAAAAAAAAAA"
				],
				[
					1029,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANiKAAAAAAAA2YoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2IoAAAAAAADYigAAAAAAAP///////+9/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAANmKAAAAAAAA2ooAAAAAAAAAAAAA2ooAAAAAAADbigAAAAAAAAAAAADbigAAAAAAANyKAAAAAAAAAAAAANyKAAAAAAAA3YoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2YoAAAAAAADZigAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN2KAAAAAAAA34oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3YoAAAAAAADdigAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": "result==0"
					},
					"CQAAAN6KAAAAAAAA34oAAAAAAAAAAAAA34oAAAAAAADgigAAAAAAAAAAAADgigAAAAAAAOGKAAAAAAAAAAAAAOGKAAAAAAAA4ooAAAAAAAAAAAAA4ooAAAAAAADjigAAAAAAAAAAAADjigAAAAAAAOSKAAAAAAAAAAAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA5YoAAAAAAADmigAAAAAAAAAAAADmigAAAAAAAOeKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3ooAAAAAAADeigAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOiKAAAAAAAA6YoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6IoAAAAAAADoigAAAAAAAAAAAAAAAPC/"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOmKAAAAAAAA6ooAAAAAAAAAAAAA6ooAAAAAAADsigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6YoAAAAAAADpigAAAAAAAAAAAAAAAPC/"
				],
				[
					1038,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOyKAAAAAAAA7YoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7IoAAAAAAADsigAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACMigAAAAAAAGsAAAAKICAgICAgaWYoSlNfSXNOdW1iZXIocmV0KSkgewppbnQzMl90IHJlc3VsdD0tMTsKSlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KTsKCmlmKHJlc3VsdD09MCkgCiAgIAogICAgICB9IA",
					"AQAAAAAAAAABAAAAi4oAAAAAAAD2igAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjIoAAAAAAACMigAAAAAAAAAAAAAAQI1A"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi4oAAAAAAACLigAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI2KAAAAAAAAj4oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjYoAAAAAAACNigAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "JS_IsNumber"
					},
					"CwAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjooAAAAAAACOigAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJmKAAAAAAAAm4oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmYoAAAAAAACZigAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmooAAAAAAACaigAAAAAAAAAAAAAAAPC/"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ+KAAAAAAAAoIoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn4oAAAAAAACfigAAAAAAAAAAAAAAAPC/"
				],
				[
					1088,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoIoAAAAAAACgigAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKGKAAAAAAAAoooAAAAAAAAAAAAAoooAAAAAAACjigAAAAAAAAAAAACiigAAAAAAAKSKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoYoAAAAAAAChigAAAAAAAAAAAAAAAPC/"
				],
				[
					1144,
					1,
					"left_delete",
					null,
					"AgAAAHqrAAAAAAAAeqsAAAAAAAABAAAAL6KKAAAAAAAAoooAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAe6sAAAAAAAB7qwAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"right_delete",
					null,
					"AQAAAHirAAAAAAAAeKsAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAeKsAAAAAAAB4qwAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"left_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAArKsAAAAAAACsqwAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"right_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAq6sAAAAAAACrqwAAAAAAAAAAAAAAAPC/"
				],
				[
					1152,
					3,
					"right_delete",
					null,
					"AwAAAHezAAAAAAAAd7MAAAAAAAABAAAAIHezAAAAAAAAd7MAAAAAAAABAAAAL3ezAAAAAAAAd7MAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAd7MAAAAAAAB3swAAAAAAAAAAAAAAAPC/"
				],
				[
					1155,
					2,
					"left_delete",
					null,
					"AgAAAKuzAAAAAAAAq7MAAAAAAAABAAAAL6qzAAAAAAAAqrMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAArLMAAAAAAACsswAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": "s->sysno"
					},
					"CQAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACPigAAAAAAABAAAABKU19Jc051bWJlcihyZXQpj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjooAAAAAAACeigAAAAAAAAAAAAAAAPC/"
				],
				[
					1172,
					5,
					"left_delete",
					null,
					"BQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAb5SKAAAAAAAAlIoAAAAAAAABAAAAbpOKAAAAAAAAk4oAAAAAAAABAAAAc5KKAAAAAAAAkooAAAAAAAABAAAAeZGKAAAAAAAAkYoAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAlooAAAAAAACWigAAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkYoAAAAAAACRigAAAAAAAAAAAAAAAPC/"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlIoAAAAAAACUigAAAAAAAAAAAAAAAPC/"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAl4oAAAAAAACXigAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnYoAAAAAAACdigAAAAAAAP///////+9/"
				],
				[
					1181,
					1,
					"left_delete",
					null,
					"AQAAAJ2KAAAAAAAAnYoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAnooAAAAAAACeigAAAAAAAAAAAAAAAPC/"
				],
				[
					1186,
					1,
					"paste",
					null,
					"AQAAAI+KAAAAAAAAmYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAj4oAAAAAAACPigAAAAAAAAAAAAAAAPC/"
				],
				[
					1189,
					1,
					"left_delete",
					null,
					"AQAAAI6KAAAAAAAAjooAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAj4oAAAAAAACPigAAAAAAAAAAAAAAAPC/"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": "(*s)"
					},
					"BAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAACaigAAAAAAAJuKAAAAAAAAAAAAAJuKAAAAAAAAnIoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmIoAAAAAAACYigAAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"right_delete",
					null,
					"AQAAAJyKAAAAAAAAnIoAAAAAAAAKAAAALT5yZXQgPT0gMA",
					"AQAAAAAAAAABAAAAnIoAAAAAAACmigAAAAAAAAAAAAAAAPC/"
				],
				[
					1215,
					2,
					"left_delete",
					null,
					"AgAAAIqKAAAAAAAAiooAAAAAAAAYAAAACmlmKHNvY2tldF9lb2YoKnMpKSB7Cgp9iYoAAAAAAACJigAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAiooAAAAAAACiigAAAAAAAAAAAAAAAPC/"
				],
				[
					1220,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAChAQEAI2luY2x1ZGUgImRlZmluZXMuaCIKI2luY2x1ZGUgInF1aWNranMtc29ja2V0cy5oIgojaW5jbHVkZSAicXVpY2tqcy1zeXNjYWxsZXJyb3IuaCIKI2luY2x1ZGUgInV0aWxzLmgiCiNpbmNsdWRlICJidWZmZXItdXRpbHMuaCIKI2luY2x1ZGUgImRlYnVnLmgiCgojaWYgZGVmaW5lZChfV0lOMzIpICYmICFkZWZpbmVkKF9fTVNZU19fKSAmJiAhZGVmaW5lZChfX0NZR1dJTl9fKQppbnQgc29ja2V0cGFpcihpbnQsIGludCwgaW50LCBTT0NLRVRbMl0pOwoKI2RlZmluZSBzb2NrZXRfaGFuZGxlKHNvY2spICgoU09DS0VUKV9nZXRfb3NmaGFuZGxlKHNvY2tldF9mZChzb2NrKSkpCiNlbHNlCnR5cGVkZWYgaW50IFNPQ0tFVDsKI2RlZmluZSBzb2NrZXRfaGFuZGxlKHNvY2spIHNvY2tldF9mZChzb2NrKQojZGVmaW5lIGNsb3Nlc29ja2V0KHNvY2spIGNsb3NlKHNvY2spCiNpbmNsdWRlIDxzeXMvc2VsZWN0Lmg+Ci8qI2luY2x1ZGUgPHN5cy9zeXNjYWxsLmg+Ki8KI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4KI2luY2x1ZGUgPGFycGEvaW5ldC5oPgojaW5jbHVkZSA8cG9sbC5oPgojaW5jbHVkZSA8dW5pc3RkLmg+CiNlbmRpZgoKI2luY2x1ZGUgPGZjbnRsLmg+CiNpbmNsdWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGVycm5vLmg+CgovKioKICogXGFkZHRvZ3JvdXAgcXVpY2tqcy1zb2NrZXRzCiAqIEB7CiAqLwoKc3RhdGljIGludCBqc19zb2NrZXRzX2luaXQoSlNDb250ZXh0KiwgSlNNb2R1bGVEZWYqKTsKc3RhdGljIEpTVmFsdWUganNfc29ja2V0X21ldGhvZChKU0NvbnRleHQqLCBKU1ZhbHVlQ29uc3QsIGludCwgSlNWYWx1ZUNvbnN0W10sIGludCk7CgojZGVmaW5lIEpTX1NPQ0tFVENBTEwoc3lzY2FsbF9ubywgc29jaywgcmVzdWx0KSBKU19TT0NLRVRDQUxMX1JFVFVSTihzeXNjYWxsX25vLCBzb2NrLCByZXN1bHQsIEpTX05ld0ludDMyKGN0eCwgKHNvY2spLT5yZXQpLCBqc19zb2NrZXRfZXJyb3IoY3R4LCAqKHNvY2spKSkKCiNkZWZpbmUgSlNfU09DS0VUQ0FMTF9GQUlMKHN5c2NhbGxfbm8sIHNvY2ssIG9uX2ZhaWwpIEpTX1NPQ0tFVENBTExfUkVUVVJOKHN5c2NhbGxfbm8sIHNvY2ssIHJlc3VsdCwgSlNfTmV3SW50MzIoY3R4LCAoc29jayktPnJldCksIG9uX2ZhaWwpCgojZGVmaW5lIEpTX1NPQ0tFVENBTExfUkVUVVJOKHN5c2NhbGxfbm8sIHNvY2ssIHJlc3VsdCwgb25fc3VjY2Vzcywgb25fZmFpbCkgXAogIGRvIHsgXAogICAgc3lzY2FsbF9yZXR1cm4oKHNvY2spLCAoc3lzY2FsbF9ubyksIChyZXN1bHQpKTsgXAogICAgcmV0ID0gKHNvY2spLT5yZXQgPCAwID8gKG9uX2ZhaWwpIDogKG9uX3N1Y2Nlc3MpOyBcCiAgfSB3aGlsZSgwKQoKVklTSUJMRSBKU0NsYXNzSUQganNfc29ja2FkZHJfY2xhc3NfaWQgPSAwLCBqc19zb2NrZXRfY2xhc3NfaWQgPSAwLCBqc19hc3luY3NvY2tldF9jbGFzc19pZCA9IDA7ClZJU0lCTEUgSlNWYWx1ZSBzb2NrYWRkcl9wcm90byA9IHt7MH0sIEpTX1RBR19VTkRFRklORUR9LCBzb2NrYWRkcl9jdG9yID0ge3swfSwgSlNfVEFHX1VOREVGSU5FRH0sIHNvY2tldF9wcm90byA9IHt7MH0sIEpTX1RBR19VTkRFRklORUR9LAogICAgICAgICAgICAgICAgYXN5bmNzb2NrZXRfcHJvdG8gPSB7ezB9LCBKU19UQUdfVU5ERUZJTkVEfSwgc29ja2V0X2N0b3IgPSB7ezB9LCBKU19UQUdfVU5ERUZJTkVEfSwgYXN5bmNzb2NrZXRfY3RvciA9IHt7MH0sIEpTX1RBR19VTkRFRklORUR9OwoKU29ja0FkZHIqCmpzX3NvY2thZGRyX2RhdGEoSlNWYWx1ZUNvbnN0IHZhbHVlKSB7CiAgcmV0dXJuIEpTX0dldE9wYXF1ZSh2YWx1ZSwganNfc29ja2FkZHJfY2xhc3NfaWQpOwp9CgpTb2NrQWRkcioKanNfc29ja2FkZHJfZGF0YTIoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIHJldHVybiBKU19HZXRPcGFxdWUyKGN0eCwgdmFsdWUsIGpzX3NvY2thZGRyX2NsYXNzX2lkKTsKfQoKc3RhdGljIGNvbnN0IGNoYXIqIHN5c2NhbGxfbmFtZXNbXSA9IHsKICAgICJzb2NrZXQiLAogICAgImdldHNvY2tuYW1lIiwKICAgICJnZXRwZWVybmFtZSIsCiNpZmRlZiBfV0lOMzIKICAgICJpb2N0bHNvY2tldCIsCiNlbHNlCiAgICAiZmNudGwiLAojZW5kaWYKICAgICJiaW5kIiwKICAgICJhY2NlcHQiLAogICAgImNvbm5lY3QiLAogICAgImxpc3RlbiIsCiAgICAicmVjdiIsCiAgICAicmVjdmZyb20iLAogICAgInNlbmQiLAogICAgInNlbmR0byIsCiAgICAic2h1dGRvd24iLAogICAgImNsb3NlIiwKICAgICJnZXRzb2Nrb3B0IiwKICAgICJzZXRzb2Nrb3B0IiwKfTsKCnN0YXRpYyBjb25zdCBjaGFyKgpzeXNjYWxsX25hbWUoaW50IHN5c2NhbGxfbnVtYmVyKSB7CiAgYXNzZXJ0KHN5c2NhbGxfbnVtYmVyID49IDApOwogIGFzc2VydChzeXNjYWxsX251bWJlciA8IChpbnQpY291bnRvZihzeXNjYWxsX25hbWVzKSk7CgogIHJldHVybiBzeXNjYWxsX25hbWVzW3N5c2NhbGxfbnVtYmVyXTsKfQoKc3RhdGljIHZvaWQKc3lzY2FsbF9yZXR1cm4oU29ja2V0KiBzb2NrLCBpbnQgc3lzbm8sIGludCByZXR2YWwpIHsKICAoc29jayktPnN5c25vID0gc3lzbm87CiAgKHNvY2spLT5yZXQgPSByZXR2YWw7CiAgKHNvY2spLT5lcnJvciA9IHJldHZhbCA8IDAgPwojaWYgZGVmaW5lZChfV0lOMzIpICYmICFkZWZpbmVkKF9fTVNZU19fKSAmJiAhZGVmaW5lZChfX0NZR1dJTl9fKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdTQUdldExhc3RFcnJvcigpIC0gV1NBQkFTRUVSUgojZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm5vCiNlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogMDsKCiNpZmRlZiBERUJVR19PVVRQVVQKICBwcmludGYoInN5c2NhbGwgJXMgcmV0dXJuZWQgJWQgKCVkKVxuIiwgKHNvY2spLT5zeXNubyA/IHN5c2NhbGxfbmFtZSgoc29jayktPnN5c25vKSA6ICIwIiwgKHNvY2spLT5yZXQsIChzb2NrKS0+ZXJyb3IpOwojZW5kaWYKfQoKc3RhdGljIGludApqc19zb2NrdHlwZShKU0NvbnRleHQqIGN0eCwgU29ja1R5cGUqIHN0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIGludCBpbmRleCA9IDA7CgogIHN0LT5mYW1pbHkgPSBBRl9VTlNQRUM7CiAgc3QtPnR5cGUgPSBTT0NLX1NUUkVBTTsKICBzdC0+cHJvdG9jb2wgPSBJUFBST1RPX0lQOwoKICBpZihhcmdjID4gaW5kZXgpIHsKICAgIGlmKCFKU19Jc051bWJlcihhcmd2W2luZGV4XSkgfHwgSlNfVG9JbnQzMihjdHgsICZzdC0+ZmFtaWx5LCBhcmd2W2luZGV4XSkpCiAgICAgIHJldHVybiBpbmRleDsKCiAgICBpZihhcmdjID4gKytpbmRleCkgewogICAgICBpZighSlNfSXNOdW1iZXIoYXJndltpbmRleF0pIHx8IEpTX1RvSW50MzIoY3R4LCAmc3QtPnR5cGUsIGFyZ3ZbaW5kZXhdKSkKICAgICAgICByZXR1cm4gaW5kZXg7CgogICAgICBpZihhcmdjID4gKytpbmRleCkgewogICAgICAgIGlmKCFKU19Jc051bWJlcihhcmd2W2luZGV4XSkgfHwgSlNfVG9JbnQzMihjdHgsICZzdC0+cHJvdG9jb2wsIGFyZ3ZbaW5kZXhdKSkKICAgICAgICAgIHJldHVybiBpbmRleDsKCiAgICAgICAgKytpbmRleDsKICAgICAgfQogICAgfQogIH0KCiAgcmV0dXJuIGluZGV4Owp9CgpzdGF0aWMgdm9pZApqc19zb2NrYWRkcl9mcmVlX2J1ZmZlcihKU1J1bnRpbWUqIHJ0LCB2b2lkKiBvcGFxdWUsIHZvaWQqIHB0cikgewogIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBKU19NS1BUUihKU19UQUdfT0JKRUNULCBvcGFxdWUpKTsKfQoKc3RhdGljIEpTVmFsdWUKanNfc29ja2FkZHJfd3JhcChKU0NvbnRleHQqIGN0eCwgU29ja0FkZHIqIGEpIHsKICBKU1ZhbHVlIG9iajsKCiAgaWYoanNfc29ja2FkZHJfY2xhc3NfaWQgPT0gMCAmJiBqc19zb2NrZXRfY2xhc3NfaWQgPT0gMCAmJiBqc19hc3luY3NvY2tldF9jbGFzc19pZCA9PSAwKQogICAganNfc29ja2V0c19pbml0KGN0eCwgMCk7CgogIG9iaiA9IEpTX05ld09iamVjdFByb3RvQ2xhc3MoY3R4LCBzb2NrYWRkcl9wcm90bywganNfc29ja2FkZHJfY2xhc3NfaWQpOwogIEpTX1NldE9wYXF1ZShvYmosIGEpOwoKICByZXR1cm4gb2JqOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrYWRkcl9uZXcoSlNDb250ZXh0KiBjdHgsIGludCBmYW1pbHkpIHsKICBTb2NrQWRkciogYTsKCiAgaWYoIShhID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihTb2NrQWRkcikpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIGEtPmZhbWlseSA9IGZhbWlseTsKCiAgcmV0dXJuIGpzX3NvY2thZGRyX3dyYXAoY3R4LCBhKTsKfQoKc3RhdGljIEJPT0wKanNfc29ja2FkZHJfaW5pdChKU0NvbnRleHQqIGN0eCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIFNvY2tBZGRyKiBhKSB7CiAgaWYoYXJnYyA9PSAxICYmIGpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJndlswXSkpIHsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpCiAgICAgIGlmKGxlbiA+IDApCiAgICAgICAgbWVtY3B5KGEsIGRhdGEsIE1JTl9OVU0obGVuLCBzaXplb2YoU29ja0FkZHIpKSk7CgogICAgcmV0dXJuIFRSVUU7CiAgfQoKICBpZihhcmdjID49IDEgJiYgSlNfSXNOdW1iZXIoYXJndlswXSkpIHsKICAgIGludDMyX3QgZmFtaWx5OwoKICAgIEpTX1RvSW50MzIoY3R4LCAmZmFtaWx5LCBhcmd2WzBdKTsKICAgIGEtPmZhbWlseSA9IGZhbWlseTsKCiAgICBhcmdjLS07CiAgICBhcmd2Kys7CiAgfQoKICBpZihhcmdjID49IDEpIHsKICAgIGNvbnN0IGNoYXIqIHN0cjsKCiAgICBpZigoc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgYXJndlswXSkpKSB7CiAgICAgIGlmKGEtPmZhbWlseSA9PSAwKSB7CiAgICAgICAgaWYoaW5ldF9wdG9uKEFGX0lORVQsIHN0ciwgJmEtPmlwNC5zaW5fYWRkcikgPiAwKQogICAgICAgICAgYS0+ZmFtaWx5ID0gQUZfSU5FVDsKICAgICAgICBlbHNlIGlmKGluZXRfcHRvbihBRl9JTkVUNiwgc3RyLCAmYS0+aXA2LnNpbjZfYWRkcikgPiAwKQogICAgICAgICAgYS0+ZmFtaWx5ID0gQUZfSU5FVDY7CgojaWZkZWYgSEFWRV9BRl9VTklYCiAgICAgIH0gZWxzZSBpZihhLT5mYW1pbHkgPT0gQUZfVU5JWCkgewogICAgICAgIHN0cm5jcHkoYS0+dW4uc3VuX3BhdGgsIHN0ciwgc2l6ZW9mKGEtPnVuLnN1bl9wYXRoKSk7CiNlbmRpZgogICAgICB9IGVsc2UgaWYoIWluZXRfcHRvbihhLT5mYW1pbHksIHN0ciwgc29ja2FkZHJfYWRkcihhKSkgJiYgYS0+ZmFtaWx5ID09IEFGX0lORVQ2KSB7CiAgICAgICAgc3RydWN0IGluX2FkZHIgaW47CgogICAgICAgIGlmKGluZXRfcHRvbihBRl9JTkVULCBzdHIsICZpbikpIHsKICAgICAgICAgIHN0cnVjdCBpbjZfYWRkciogaW42cCA9ICZhLT5pcDYuc2luNl9hZGRyOwoKICAgICAgICAgIGlmKGluLnNfYWRkciA9PSAwKSB7CiAgICAgICAgICAgIC8qIElONkFERFJfQU5ZX0lOSVQgKi8KICAgICAgICAgICAgbWVtc2V0KGluNnAsIDAsIHNpemVvZihzdHJ1Y3QgaW42X2FkZHIpKTsKICAgICAgICAgIH0gZWxzZSBpZihpbi5zX2FkZHIgPT0gaHRvbmwoSU5BRERSX0xPT1BCQUNLKSkgewogICAgICAgICAgICAvKiBJTjZBRERSX0xPT1BCQUNLX0lOSVQgKi8KICAgICAgICAgICAgbWVtc2V0KGluNnAsIDAsIHNpemVvZihzdHJ1Y3QgaW42X2FkZHIpKTsKICAgICAgICAgICAgKChjaGFyKilpbjZwKVtzaXplb2Yoc3RydWN0IGluNl9hZGRyKSAtIDFdID0gMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHVpbnQzMl90KiBhZGRyMzIgPSAodWludDMyX3QqKWluNnA7CgogICAgICAgICAgICBhZGRyMzJbMF0gPSAwOwogICAgICAgICAgICBhZGRyMzJbMV0gPSAwOwogICAgICAgICAgICBhZGRyMzJbMl0gPSBodG9ubCgweGZmZmYpOwogICAgICAgICAgICBhZGRyMzJbM10gPSBpbi5zX2FkZHI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICB9CgogICAgYXJnYy0tOwogICAgYXJndisrOwogIH0KCiAgaWYoYXJnYyA+PSAxKSB7CiAgICB1aW50MzJfdCBwb3J0OwoKICAgIEpTX1RvVWludDMyKGN0eCwgJnBvcnQsIGFyZ3ZbMF0pOwoKICAgIGlmKGEtPmZhbWlseSA9PSBBRl9JTkVUKQogICAgICBhLT5pcDQuc2luX3BvcnQgPSBodG9ucyhwb3J0KTsKICAgIGVsc2UgaWYoYS0+ZmFtaWx5ID09IEFGX0lORVQ2KQogICAgICBhLT5pcDYuc2luNl9wb3J0ID0gaHRvbnMocG9ydCk7CiAgfQoKICByZXR1cm4gVFJVRTsKfQoKc3RhdGljIEpTVmFsdWUKanNfc29ja2FkZHJfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcHJvdG8sIG9iaiA9IEpTX1VOREVGSU5FRDsKICBTb2NrQWRkciAqYSwgKm90aGVyOwoKICBpZihqc19zb2NrYWRkcl9jbGFzc19pZCA9PSAwICYmIGpzX3NvY2tldF9jbGFzc19pZCA9PSAwICYmIGpzX2FzeW5jc29ja2V0X2NsYXNzX2lkID09IDApCiAgICBqc19zb2NrZXRzX2luaXQoY3R4LCAwKTsKCiAgaWYoIShhID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihTb2NrQWRkcikpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwoKICBvYmogPSBKU19OZXdPYmplY3RQcm90b0NsYXNzKGN0eCwgcHJvdG8sIGpzX3NvY2thZGRyX2NsYXNzX2lkKTsKICBKU19GcmVlVmFsdWUoY3R4LCBwcm90byk7CgogIGlmKGFyZ2MgPj0gMSAmJiAob3RoZXIgPSBqc19zb2NrYWRkcl9kYXRhKGFyZ3ZbMF0pKSkgewogICAgKmEgPSAqb3RoZXI7CiAgfSBlbHNlIGlmKCFqc19zb2NrYWRkcl9pbml0KGN0eCwgYXJnYywgYXJndiwgYSkpIHsKICAgIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJTb2NrQWRkciBpbml0KCkgZmFpbGVkIik7CiAgICBnb3RvIGZhaWw7CiAgfQoKICBKU19TZXRPcGFxdWUob2JqLCBhKTsKICByZXR1cm4gb2JqOwoKZmFpbDoKICBqc19mcmVlKGN0eCwgYSk7CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgplbnVtIHsKICBTT0NLQUREUl9DTE9ORSwKICBTT0NLQUREUl9UT1NUUklORywKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2thZGRyX21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CiAgU29ja0FkZHIqIGE7CgogIGlmKCEoYSA9IGpzX3NvY2thZGRyX2RhdGEyKGN0eCwgdGhpc192YWwpKSkKICAgIHJldHVybiBKU19FWENFUFRJT047CgogIHN3aXRjaChtYWdpYykgewogICAgY2FzZSBTT0NLQUREUl9DTE9ORTogewogICAgICBTb2NrQWRkciogb3RoZXI7CgogICAgICBpZigob3RoZXIgPSBqc19tYWxsb2MoY3R4LCBzaXplb2YoU29ja0FkZHIpKSkpIHsKICAgICAgICBtZW1jcHkob3RoZXIsIGEsIHNpemVvZihTb2NrQWRkcikpOwogICAgICAgIHJldCA9IGpzX3NvY2thZGRyX3dyYXAoY3R4LCBvdGhlcik7CiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgU09DS0FERFJfVE9TVFJJTkc6IHsKICAgICAgY2hhciBwb3J0W0ZNVF9VTE9OR107CiAgICAgIER5bkJ1ZiBkYnVmOwoKI2lmZGVmIEhBVkVfQUZfVU5JWAogICAgICBpZihhLT5mYW1pbHkgPT0gQUZfVU5JWCkgewogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGEtPnVuLnN1bl9wYXRoKTsKICAgICAgfSBlbHNlCiNlbmRpZgoKICAgICAgICBqc19kYnVmX2luaXQoY3R4LCAmZGJ1Zik7CiAgICAgIGRidWZfcmVhbGxvYygmZGJ1ZiwgSU5FVDZfQUREUlNUUkxFTik7CiAgICAgIGluZXRfbnRvcChhLT5mYW1pbHksIHNvY2thZGRyX2FkZHIoYSksIChjaGFyKilkYnVmLmJ1ZiwgSU5FVDZfQUREUlNUUkxFTik7CiAgICAgIGRidWYuc2l6ZSA9IHN0cmxlbigoY29uc3QgY2hhciopZGJ1Zi5idWYpOwogICAgICBkYnVmX3B1dGMoJmRidWYsICc6Jyk7CiAgICAgIGRidWZfcHV0KCZkYnVmLCAoY29uc3QgdWludDhfdCopcG9ydCwgZm10X3Vsb25nKHBvcnQsIHNvY2thZGRyX3BvcnQoYSkpKTsKICAgICAgcmV0ID0gSlNfTmV3U3RyaW5nTGVuKGN0eCwgKGNvbnN0IGNoYXIqKWRidWYuYnVmLCBkYnVmLnNpemUpOwogICAgICBkYnVmX2ZyZWUoJmRidWYpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIFNPQ0tBRERSX0ZBTUlMWSwKICBTT0NLQUREUl9BRERSLAogIFNPQ0tBRERSX1BPUlQsCiAgU09DS0FERFJfUEFUSCwKICBTT0NLQUREUl9CWVRFTEVOR1RILAogIFNPQ0tBRERSX0JVRkZFUiwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2thZGRyX2dldChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgbWFnaWMpIHsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBTb2NrQWRkciogYTsKCiAgaWYoIShhID0ganNfc29ja2FkZHJfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFNPQ0tBRERSX0ZBTUlMWTogewogICAgICByZXQgPSBKU19OZXdVaW50MzIoY3R4LCBhLT5mYW1pbHkpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFNPQ0tBRERSX0FERFI6IHsKICAgICAgaWYoYS0+ZmFtaWx5ID09IEFGX0lORVQgfHwgYS0+ZmFtaWx5ID09IEFGX0lORVQ2KSB7CiAgICAgICAgY2hhciBidWZbSU5FVDZfQUREUlNUUkxFTl0gPSB7MH07CgogICAgICAgIGluZXRfbnRvcChhLT5mYW1pbHksIHNvY2thZGRyX2FkZHIoYSksIGJ1Ziwgc2l6ZW9mKGJ1ZikpOwogICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIGJ1Zik7CiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgU09DS0FERFJfUE9SVDogewogICAgICBpZihhLT5mYW1pbHkgPT0gQUZfSU5FVCB8fCBhLT5mYW1pbHkgPT0gQUZfSU5FVDYpCiAgICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgc29ja2FkZHJfcG9ydChhKSk7CgogICAgICBicmVhazsKICAgIH0KCiNpZmRlZiBIQVZFX0FGX1VOSVgKICAgIGNhc2UgU09DS0FERFJfUEFUSDogewogICAgICBpZihhLT5mYW1pbHkgPT0gQUZfVU5JWCkKICAgICAgICByZXQgPSBKU19OZXdTdHJpbmcoY3R4LCBhLT51bi5zdW5fcGF0aCk7CgogICAgICBicmVhazsKICAgIH0KI2VuZGlmCgogICAgY2FzZSBTT0NLQUREUl9CWVRFTEVOR1RIOiB7CiAgICAgIHNpemVfdCBsZW47CgogICAgICBpZigobGVuID0gc29ja2FkZHJfc2l6ZShhKSkpCiAgICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgbGVuKTsKCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgU09DS0FERFJfQlVGRkVSOiB7CiAgICAgIEpTT2JqZWN0KiBvYmogPSBKU19WQUxVRV9HRVRfT0JKKEpTX0R1cFZhbHVlKGN0eCwgdGhpc192YWwpKTsKCiAgICAgIHJldCA9IEpTX05ld0FycmF5QnVmZmVyKGN0eCwgKHVpbnQ4X3QqKWEsIHNpemVvZihTb2NrQWRkciksIGpzX3NvY2thZGRyX2ZyZWVfYnVmZmVyLCBvYmosIEZBTFNFKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrYWRkcl9zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBTb2NrQWRkciogYTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgaWYoIShhID0ganNfc29ja2FkZHJfZGF0YTIoY3R4LCB0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFNPQ0tBRERSX0ZBTUlMWTogewogICAgICBpbnQzMl90IG5ld2Y7CgogICAgICBKU19Ub0ludDMyKGN0eCwgJm5ld2YsIHZhbHVlKTsKCiAgICAgIGlmKGEtPmZhbWlseSAhPSBuZXdmKSB7CiAgICAgICAgU29ja0FkZHIgb2xkID0gKmE7CiAgICAgICAgdWludDMyX3QqIGluYWRkcjsKCiAgICAgICAgbWVtc2V0KGEsIDAsIHNpemVvZihTb2NrQWRkcikpOwogICAgICAgIGEtPmZhbWlseSA9IG5ld2Y7CgogICAgICAgIGlmKChpbmFkZHIgPSBzb2NrYWRkcl9hZGRyKGEpKSkgewoKICAgICAgICAgIGlmKG9sZC5mYW1pbHkgPT0gQUZfSU5FVDYgJiYgbmV3ZiA9PSBBRl9JTkVUKSB7CiAgICAgICAgICAgIHVpbnQzMl90KiBhZGRyNiA9IHNvY2thZGRyX2FkZHIoJm9sZCk7CgogICAgICAgICAgICBpZigoSU42X0lTX0FERFJfVjRNQVBQRUQoKHN0cnVjdCBpbjZfYWRkciopYWRkcjYpIHx8IElONl9JU19BRERSX1Y0Q09NUEFUKChzdHJ1Y3QgaW42X2FkZHIqKWFkZHI2KSkpCiAgICAgICAgICAgICAgKmluYWRkciA9IGFkZHI2WzNdOwogICAgICAgICAgICBlbHNlIGlmKElONl9JU19BRERSX0xPT1BCQUNLKChzdHJ1Y3QgaW42X2FkZHIqKWFkZHI2KSkKICAgICAgICAgICAgICAqaW5hZGRyID0gaHRvbmwoSU5BRERSX0xPT1BCQUNLKTsKICAgICAgICAgICAgZWxzZSBpZihJTjZfSVNfQUREUl9VTlNQRUNJRklFRCgoc3RydWN0IGluNl9hZGRyKilhZGRyNikpCiAgICAgICAgICAgICAgKmluYWRkciA9IDA7CgogICAgICAgICAgfSBlbHNlIGlmKG9sZC5mYW1pbHkgPT0gQUZfSU5FVCAmJiBuZXdmID09IEFGX0lORVQ2KSB7CiAgICAgICAgICAgIGluYWRkclswXSA9IDA7CiAgICAgICAgICAgIGluYWRkclsxXSA9IDA7CiAgICAgICAgICAgIGluYWRkclsyXSA9IGh0b25sKDB4ZmZmZik7CiAgICAgICAgICAgIGluYWRkclszXSA9ICoodWludDMyX3QqKXNvY2thZGRyX2FkZHIoJm9sZCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpbnQgcG9ydCA9IHNvY2thZGRyX3BvcnQoJm9sZCk7CgogICAgICAgIGlmKHBvcnQgIT0gLTEpCiAgICAgICAgICBzb2NrYWRkcl9zZXRwb3J0KGEsIHBvcnQpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFNPQ0tBRERSX0FERFI6IHsKICAgICAgaWYoYS0+ZmFtaWx5ID09IEFGX0lORVQgfHwgYS0+ZmFtaWx5ID09IEFGX0lORVQ2KSB7CiAgICAgICAgY29uc3QgY2hhciogc3RyID0gSlNfVG9DU3RyaW5nKGN0eCwgdmFsdWUpOwoKICAgICAgICBpbmV0X3B0b24oYS0+ZmFtaWx5LCBzdHIsIHNvY2thZGRyX2FkZHIoYSkpOwogICAgICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgc3RyKTsKICAgICAgfQoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBTT0NLQUREUl9QT1JUOiB7CiAgICAgIGlmKGEtPmZhbWlseSA9PSBBRl9JTkVUIHx8IGEtPmZhbWlseSA9PSBBRl9JTkVUNikgewogICAgICAgIHVpbnQzMl90IHBvcnQ7CgogICAgICAgIEpTX1RvVWludDMyKGN0eCwgJnBvcnQsIHZhbHVlKTsKICAgICAgICBzb2NrYWRkcl9zZXRwb3J0KGEsIHBvcnQpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KCiNpZmRlZiBIQVZFX0FGX1VOSVgKICAgIGNhc2UgU09DS0FERFJfUEFUSDogewogICAgICBpZihhLT5mYW1pbHkgPT0gQUZfVU5JWCkgewogICAgICAgIGNvbnN0IGNoYXIqIHN0cjsKCiAgICAgICAgaWYoKHN0ciA9IEpTX1RvQ1N0cmluZyhjdHgsIHZhbHVlKSkpIHsKICAgICAgICAgIHN0cm5jcHkoYS0+dW4uc3VuX3BhdGgsIHN0ciwgc2l6ZW9mKGEtPnVuLnN1bl9wYXRoKSk7CiAgICAgICAgICBKU19GcmVlQ1N0cmluZyhjdHgsIHN0cik7CiAgICAgICAgfQogICAgICB9CgogICAgICBicmVhazsKICAgIH0KI2VuZGlmCiAgfQoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgdm9pZApqc19zb2NrYWRkcl9maW5hbGl6ZXIoSlNSdW50aW1lKiBydCwgSlNWYWx1ZSB2YWwpIHsKICBTb2NrQWRkciogYTsKCiAgaWYoKGEgPSBqc19zb2NrYWRkcl9kYXRhKHZhbCkpKQogICAganNfZnJlZV9ydChydCwgYSk7Cn0KCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zb2NrYWRkcl9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImZhbWlseSIsIGpzX3NvY2thZGRyX2dldCwganNfc29ja2FkZHJfc2V0LCBTT0NLQUREUl9GQU1JTFksIEpTX1BST1BfRU5VTUVSQUJMRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0ZMQUdTX0RFRigiYWRkciIsIGpzX3NvY2thZGRyX2dldCwganNfc29ja2FkZHJfc2V0LCBTT0NLQUREUl9BRERSLCBKU19QUk9QX1dSSVRBQkxFIHwgSlNfUFJPUF9FTlVNRVJBQkxFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJwb3J0IiwganNfc29ja2FkZHJfZ2V0LCBqc19zb2NrYWRkcl9zZXQsIFNPQ0tBRERSX1BPUlQsIEpTX1BST1BfV1JJVEFCTEUgfCBKU19QUk9QX0VOVU1FUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInBhdGgiLCBqc19zb2NrYWRkcl9nZXQsIGpzX3NvY2thZGRyX3NldCwgU09DS0FERFJfUEFUSCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiYnVmZmVyIiwganNfc29ja2FkZHJfZ2V0LCAwLCBTT0NLQUREUl9CVUZGRVIpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImJ5dGVMZW5ndGgiLCBqc19zb2NrYWRkcl9nZXQsIDAsIFNPQ0tBRERSX0JZVEVMRU5HVEgpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjbG9uZSIsIDAsIGpzX3NvY2thZGRyX21ldGhvZCwgU09DS0FERFJfQ0xPTkUpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJ0b1N0cmluZyIsIDAsIGpzX3NvY2thZGRyX21ldGhvZCwgU09DS0FERFJfVE9TVFJJTkcpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJTb2NrQWRkciIsIDApLAp9OwoKc3RhdGljIEpTQ2xhc3NEZWYganNfc29ja2FkZHJfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJTb2NrQWRkciIsCiAgICAuZmluYWxpemVyID0ganNfc29ja2FkZHJfZmluYWxpemVyLAp9OwoKc3RhdGljIEJPT0wKdGltZXZhbF9yZWFkKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgYXJnLCBzdHJ1Y3QgdGltZXZhbCogdHYpIHsKICBpZihKU19Jc051bWJlcihhcmcpKSB7CiAgICBkb3VibGUgbXNlY3MgPSAwOwoKICAgIEpTX1RvRmxvYXQ2NChjdHgsICZtc2VjcywgYXJnKTsKICAgIHR2LT50dl9zZWMgPSBtc2VjcyAvIDEwMDA7CiAgICBtc2VjcyAtPSB0di0+dHZfc2VjICogMTAwMDsKICAgIHR2LT50dl91c2VjID0gbXNlY3MgKiAxMDAwOwoKICAgIHJldHVybiBUUlVFOwogIH0KCiAgaWYoanNfaXNfYXJyYXkoY3R4LCBhcmcpICYmIGpzX2FycmF5X2xlbmd0aChjdHgsIGFyZykgPj0gMikgewogICAgaW50NjRfdCBzZWMgPSAwLCB1c2VjID0gMDsKICAgIEpTVmFsdWUgbWVtYmVyID0gSlNfR2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmcsIDApOwoKICAgIEpTX1RvSW50NjQoY3R4LCAmc2VjLCBtZW1iZXIpOwogICAgSlNfRnJlZVZhbHVlKGN0eCwgbWVtYmVyKTsKICAgIG1lbWJlciA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJnLCAxKTsKICAgIEpTX1RvSW50NjQoY3R4LCAmdXNlYywgbWVtYmVyKTsKICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG1lbWJlcik7CiAgICB0di0+dHZfc2VjID0gc2VjOwogICAgdHYtPnR2X3VzZWMgPSB1c2VjOwoKICAgIHJldHVybiBUUlVFOwogIH0KCiAgaWYoanNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmcpKSB7CiAgICB1aW50OF90KiBkYXRhOwogICAgc2l6ZV90IGxlbjsKCiAgICBpZigoZGF0YSA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJnKSkpIHsKICAgICAgaWYobGVuID49IHNpemVvZihzdHJ1Y3QgdGltZXZhbCkpIHsKICAgICAgICBtZW1jcHkodHYsIGRhdGEsIHNpemVvZihzdHJ1Y3QgdGltZXZhbCkpOwogICAgICAgIHJldHVybiBUUlVFOwogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBCT09MCnRpbWV2YWxfd3JpdGUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IHN0cnVjdCB0aW1ldmFsKiB0diwgSlNWYWx1ZUNvbnN0IGFyZykgewogIGlmKEpTX0lzTnVtYmVyKGFyZykpCiAgICByZXR1cm4gRkFMU0U7CgogIGlmKGpzX2lzX2FycmF5KGN0eCwgYXJnKSkgewogICAganNfYXJyYXlfY2xlYXIoY3R4LCBhcmcpOwogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmcsIDAsIEpTX05ld1VpbnQzMihjdHgsIHR2LT50dl9zZWMpKTsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgYXJnLCAxLCBKU19OZXdVaW50MzIoY3R4LCB0di0+dHZfdXNlYykpOwogICAgcmV0dXJuIFRSVUU7CiAgfQoKICBpZihqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZykpIHsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmcpKSkgewogICAgICBpZihsZW4gPj0gc2l6ZW9mKHN0cnVjdCB0aW1ldmFsKSkgewogICAgICAgIG1lbWNweShkYXRhLCB0diwgc2l6ZW9mKHN0cnVjdCB0aW1ldmFsKSk7CiAgICAgICAgcmV0dXJuIFRSVUU7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIEJPT0wKZmRzZXRfcmVhZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGFyZywgZmRfc2V0KiBzZXQpIHsKICBpZihqc19pc19hcnJheShjdHgsIGFyZykpIHsKICAgIHNpemVfdCBsZW4gPSBqc19hcnJheV9sZW5ndGgoY3R4LCBhcmcpOwoKICAgIGZvcihzaXplX3QgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICB1aW50MzJfdCBmZDsKICAgICAgSlNWYWx1ZSBtZW1iZXIgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZywgaSk7CgogICAgICBpZighSlNfVG9VaW50MzIoY3R4LCAmZmQsIG1lbWJlcikpCiAgICAgICAgRkRfU0VUKGZkLCBzZXQpOwoKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbWVtYmVyKTsKICAgIH0KCiAgICByZXR1cm4gVFJVRTsKICB9CgogIGlmKGpzX2lzX2FycmF5YnVmZmVyKGN0eCwgYXJnKSkgewogICAgdWludDhfdCogZGF0YTsKICAgIHNpemVfdCBsZW47CgogICAgaWYoKGRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZykpKSB7CiAgICAgIG1lbWNweShzZXQsIGRhdGEsIE1JTl9OVU0obGVuLCBzaXplb2YoZmRfc2V0KSkpOwogICAgICByZXR1cm4gVFJVRTsKICAgIH0KICB9CgogIHJldHVybiBGQUxTRTsKfQoKc3RhdGljIEJPT0wKZmRzZXRfd3JpdGUoSlNDb250ZXh0KiBjdHgsIGNvbnN0IGZkX3NldCogc2V0LCBKU1ZhbHVlQ29uc3QgYXJnKSB7CiAgaWYoanNfaXNfYXJyYXkoY3R4LCBhcmcpKSB7CiAgICBqc19hcnJheV9jbGVhcihjdHgsIGFyZyk7CgogICAgZm9yKGludCBmZCA9IDA7IGZkIDwgRkRfU0VUU0laRTsgZmQrKykKICAgICAgaWYoRkRfSVNTRVQoZmQsIHNldCkpCiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmcsIGZkLCBKU19OZXdVaW50MzIoY3R4LCBmZCkpOwoKICAgIHJldHVybiBUUlVFOwogIH0KCiAgaWYoanNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmcpKSB7CiAgICB1aW50OF90KiBkYXRhOwogICAgc2l6ZV90IGxlbjsKCiAgICBpZigoZGF0YSA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJnKSkpIHsKICAgICAgbWVtY3B5KGRhdGEsIHNldCwgTUlOX05VTShsZW4sIHNpemVvZihmZF9zZXQpKSk7CiAgICAgIHJldHVybiBUUlVFOwogICAgfQogIH0KCiAgcmV0dXJuIEZBTFNFOwp9CgpzdGF0aWMgSlNWYWx1ZQpmZHNldF90b2FycmF5KEpTQ29udGV4dCogY3R4LCBjb25zdCBmZF9zZXQqIHNldCkgewogIEpTVmFsdWUgcmV0ID0gSlNfTmV3QXJyYXkoY3R4KTsKCiAgZm9yKGludCBmZCA9IDA7IGZkIDwgRkRfU0VUU0laRTsgKytmZCkKICAgIGlmKEZEX0lTU0VUKGZkLCBzZXQpKQogICAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIHJldCwgZmQsIEpTX05ld0ludDY0KGN0eCwgZmQpKTsKCiAgcmV0dXJuIHJldDsKfQoKI2lmbmRlZiBfV0lOMzIKc3RhdGljIEJPT0wKcG9sbGZkX3JlYWQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBhcmcsIHN0cnVjdCBwb2xsZmQqIHBmZCkgewogIGlmKGpzX2lzX2FycmF5KGN0eCwgYXJnKSAmJiBqc19hcnJheV9sZW5ndGgoY3R4LCBhcmcpID49IDIpIHsKICAgIHBmZC0+ZmQgPSBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIoY3R4LCBhcmcsIDApOwogICAgcGZkLT5ldmVudHMgPSBqc19nZXRfcHJvcGVydHlpbnRfaW50MzIoY3R4LCBhcmcsIDEpOwogICAgcGZkLT5yZXZlbnRzID0ganNfZ2V0X3Byb3BlcnR5aW50X2ludDMyKGN0eCwgYXJnLCAyKTsKCiAgICByZXR1cm4gVFJVRTsKICB9CgogIGlmKEpTX0lzT2JqZWN0KGFyZykgJiYgIUpTX0lzTnVsbChhcmcpKSB7CiAgICBwZmQtPmZkID0ganNfZ2V0X3Byb3BlcnR5c3RyX2ludDMyKGN0eCwgYXJnLCAiZmQiKTsKICAgIHBmZC0+ZXZlbnRzID0ganNfZ2V0X3Byb3BlcnR5c3RyX2ludDMyKGN0eCwgYXJnLCAiZXZlbnRzIik7CiAgICBwZmQtPnJldmVudHMgPSBqc19nZXRfcHJvcGVydHlzdHJfaW50MzIoY3R4LCBhcmcsICJyZXZlbnRzIik7CgogICAgcmV0dXJuIFRSVUU7CiAgfQoKICBpZihqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZykpIHsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmcpKSkgewogICAgICBpZihsZW4gPj0gc2l6ZW9mKHN0cnVjdCBwb2xsZmQpKSB7CiAgICAgICAgbWVtY3B5KHBmZCwgZGF0YSwgTUlOX05VTShsZW4sIHNpemVvZihzdHJ1Y3QgcG9sbGZkKSkpOwogICAgICAgIHJldHVybiBUUlVFOwogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gRkFMU0U7Cn0KCnN0YXRpYyBCT09MCnBvbGxmZF93cml0ZShKU0NvbnRleHQqIGN0eCwgY29uc3Qgc3RydWN0IHBvbGxmZCogcGZkLCBKU1ZhbHVlQ29uc3QgYXJnKSB7CiAgaWYoanNfaXNfYXJyYXkoY3R4LCBhcmcpKSB7CiAgICBqc19hcnJheV9jbGVhcihjdHgsIGFyZyk7CiAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZywgMCwgSlNfTmV3SW50MzIoY3R4LCBwZmQtPmZkKSk7CiAgICBKU19TZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZywgMSwgSlNfTmV3SW50MzIoY3R4LCBwZmQtPmV2ZW50cykpOwogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmcsIDIsIEpTX05ld0ludDMyKGN0eCwgcGZkLT5yZXZlbnRzKSk7CgogICAgcmV0dXJuIFRSVUU7CiAgfQoKICBpZihKU19Jc09iamVjdChhcmcpICYmICFKU19Jc051bGwoYXJnKSkgewogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBhcmcsICJmZCIsIEpTX05ld0ludDMyKGN0eCwgcGZkLT5mZCkpOwogICAgSlNfU2V0UHJvcGVydHlTdHIoY3R4LCBhcmcsICJldmVudHMiLCBKU19OZXdJbnQzMihjdHgsIHBmZC0+ZXZlbnRzKSk7CiAgICBKU19TZXRQcm9wZXJ0eVN0cihjdHgsIGFyZywgInJldmVudHMiLCBKU19OZXdJbnQzMihjdHgsIHBmZC0+cmV2ZW50cykpOwoKICAgIHJldHVybiBUUlVFOwogIH0KCiAgaWYoanNfaXNfYXJyYXlidWZmZXIoY3R4LCBhcmcpKSB7CiAgICB1aW50OF90KiBkYXRhOwogICAgc2l6ZV90IGxlbjsKCiAgICBpZigoZGF0YSA9IEpTX0dldEFycmF5QnVmZmVyKGN0eCwgJmxlbiwgYXJnKSkpIHsKICAgICAgaWYobGVuID49IHNpemVvZihzdHJ1Y3QgcG9sbGZkKSkgewogICAgICAgIG1lbWNweShkYXRhLCBwZmQsIE1JTl9OVU0obGVuLCBzaXplb2Yoc3RydWN0IHBvbGxmZCkpKTsKICAgICAgICByZXR1cm4gVFJVRTsKICAgICAgfQogICAgfQogIH0KCiAgcmV0dXJuIEZBTFNFOwp9CiNlbmRpZgoKdm9pZCoKb3B0dmFsX2J1ZihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IGFyZywgaW50MzJfdCoqIHRtcF9wdHIsIHNvY2tsZW5fdCogbGVucCkgewogIHVpbnQzMl90IGxlbjsKICB1aW50OF90KiBidWY7CgogIGlmKEpTX0lzQXJyYXkoY3R4LCBhcmcpKSB7CiAgICBpbnQgaSwgbiA9IE1BWF9OVU0oMSwgTUlOX05VTShqc19hcnJheV9sZW5ndGgoY3R4LCBhcmcpLCAxKSk7CgogICAgbGVuID0gbiAqIHNpemVvZihpbnQzMl90KTsKICAgICp0bXBfcHRyID0gKGludDMyX3QqKShidWYgPSBqc19tYWxsb2N6KGN0eCwgbGVuKSk7CgogICAgZm9yKGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICAgIEpTVmFsdWUgZWwgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZywgaSk7CgogICAgICBKU19Ub0ludDMyKGN0eCwgJigqdG1wX3B0cilbaV0sIGVsKTsKICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgZWwpOwogICAgfQogIH0gZWxzZSB7CiAgICBJbnB1dEJ1ZmZlciBvcHR2YWwgPSBqc19pbnB1dF9idWZmZXIoY3R4LCBhcmcpOwogICAgYnVmID0gb3B0dmFsLmRhdGE7CiAgICBsZW4gPSBvcHR2YWwuc2l6ZTsKICB9CgogIGlmKGxlbnApCiAgICAqbGVucCA9IGxlbjsKCiAgcmV0dXJuIGJ1ZjsKfQoKc3RhdGljIEpTVmFsdWUKanNfc29ja2V0cGFpcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIFNvY2tUeXBlIHN0ID0ge0FGX1VOU1BFQywgU09DS19TVFJFQU0sIElQUFJPVE9fSVB9OwogIGludCByZXN1bHQ7CiAgU09DS0VUIHNbMl07CgogIHN3aXRjaChqc19zb2NrdHlwZShjdHgsICZzdCwgYXJnYywgYXJndikpIHsKICAgIGNhc2UgMDogcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDEgbXVzdCBiZSBhZGRyZXNzIGZhbWlseSIpOwogICAgY2FzZSAxOiByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMiBtdXN0IGJlIHNvY2tldCB0eXBlIik7CiAgICAvKmNhc2UgMjogcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDMgbXVzdCBiZSBwcm90b2NvbCIpOyovCiAgICBkZWZhdWx0OiBicmVhazsKICB9CgogIGlmKGFyZ2MgPCA0ICYmICFKU19Jc0FycmF5KGN0eCwgYXJndlszXSkpCiAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgNCBtdXN0IGJlIGFycmF5Iik7CgogIGlmKChyZXN1bHQgPSBzb2NrZXRwYWlyKHN0LmZhbWlseSwgc3QudHlwZSwgc3QucHJvdG9jb2wsIHMpKSAhPSAtMSkgewogICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzNdLCAwLCBKU19OZXdJbnQ2NChjdHgsIHNbMF0pKTsKICAgIEpTX1NldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlszXSwgMSwgSlNfTmV3SW50NjQoY3R4LCBzWzFdKSk7CiAgfQoKICByZXR1cm4gSlNfTmV3SW50NjQoY3R4LCByZXN1bHQpOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zZWxlY3QoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10pIHsKICB1aW50NjRfdCBuOwogIGZkX3NldCByZmRzLCB3ZmRzLCBlZmRzLCAqcnNldCA9IDAsICp3c2V0ID0gMCwgKmVzZXQgPSAwOwogIGludCByZXQ7CiAgc3RydWN0IHRpbWV2YWwgdHYgPSB7MCwgMH0sICp0aW1lb3V0ID0gMDsKCiAgSlNfVG9JbmRleChjdHgsICZuLCBhcmd2WzBdKTsKICBGRF9aRVJPKCZyZmRzKTsKICBGRF9aRVJPKCZ3ZmRzKTsKICBGRF9aRVJPKCZlZmRzKTsKCiAgaWYoYXJnYyA+PSAyKQogICAgaWYoZmRzZXRfcmVhZChjdHgsIGFyZ3ZbMV0sICZyZmRzKSkKICAgICAgcnNldCA9ICZyZmRzOwoKICBpZihhcmdjID49IDMpCiAgICBpZihmZHNldF9yZWFkKGN0eCwgYXJndlsyXSwgJndmZHMpKQogICAgICB3c2V0ID0gJndmZHM7CgogIGlmKGFyZ2MgPj0gNCkKICAgIGlmKGZkc2V0X3JlYWQoY3R4LCBhcmd2WzNdLCAmZWZkcykpCiAgICAgIGVzZXQgPSAmZWZkczsKCiAgaWYoYXJnYyA+PSA1KQogICAgaWYodGltZXZhbF9yZWFkKGN0eCwgYXJndls0XSwgJnR2KSkKICAgICAgdGltZW91dCA9ICZ0djsKCiAgcmV0ID0gc2VsZWN0KG4sIHJzZXQsIHdzZXQsIGVzZXQsIHRpbWVvdXQpOwoKICAvLyBpZihyZXQgPT0gLTEpIHJldHVybiBqc19zeXNjYWxsZXJyb3JfbmV3KGN0eCwgInNlbGVjdCIsIGVycm5vKTsKCiAgaWYocnNldCkKICAgIGZkc2V0X3dyaXRlKGN0eCwgcnNldCwgYXJndlsxXSk7CgogIGlmKHdzZXQpCiAgICBmZHNldF93cml0ZShjdHgsIHdzZXQsIGFyZ3ZbMl0pOwoKICBpZihlc2V0KQogICAgZmRzZXRfd3JpdGUoY3R4LCBlc2V0LCBhcmd2WzNdKTsKCiAgaWYodGltZW91dCkKICAgIHRpbWV2YWxfd3JpdGUoY3R4LCB0aW1lb3V0LCBhcmd2WzRdKTsKCiAgcmV0dXJuIEpTX05ld0ludDY0KGN0eCwgcmV0KTsKfQoKI2lmbmRlZiBfV0lOMzIKc3RhdGljIEpTVmFsdWUKanNfcG9sbChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwogIGludCByZXN1bHQ7CiAgdWludDMyX3QgbmZkcyA9IDA7CiAgaW50MzJfdCB0aW1lb3V0ID0gLTE7CiAgc3RydWN0IHBvbGxmZCogcGZkczsKICBCT09MIGlzX2FycmF5ID0ganNfaXNfYXJyYXkoY3R4LCBhcmd2WzBdKSwgaXNfYXJyYXlidWZmZXIgPSBqc19pc19hcnJheWJ1ZmZlcihjdHgsIGFyZ3ZbMF0pOwoKICBpZihhcmdjID49IDIgJiYgSlNfSXNOdW1iZXIoYXJndlsxXSkpCiAgICBKU19Ub1VpbnQzMihjdHgsICZuZmRzLCBhcmd2WzFdKTsKCiAgaWYoYXJnYyA+PSAzICYmIEpTX0lzTnVtYmVyKGFyZ3ZbMl0pKQogICAgSlNfVG9JbnQzMihjdHgsICZ0aW1lb3V0LCBhcmd2WzJdKTsKCiAgaWYobmZkcyA9PSAwKSB7CiAgICBpZihpc19hcnJheSkKICAgICAgbmZkcyA9IGpzX2FycmF5X2xlbmd0aChjdHgsIGFyZ3ZbMF0pOwogICAgZWxzZSBpZihpc19hcnJheWJ1ZmZlcikKICAgICAgbmZkcyA9IGpzX2FycmF5YnVmZmVyX2J5dGVsZW5ndGgoY3R4LCBhcmd2WzBdKSAvIHNpemVvZihzdHJ1Y3QgcG9sbGZkKTsKICB9CgogIGFzc2VydChuZmRzKTsKICBwZmRzID0gY2FsbG9jKHNpemVvZihzdHJ1Y3QgcG9sbGZkKSwgbmZkcyk7CgogIGlmKGlzX2FycmF5KSB7CiAgICB1aW50MzJfdCBpOwoKICAgIGZvcihpID0gMDsgaSA8IG5mZHM7IGkrKykgewogICAgICBKU1ZhbHVlIG1lbWJlciA9IEpTX0dldFByb3BlcnR5VWludDMyKGN0eCwgYXJndlswXSwgaSk7CgogICAgICBpZighcG9sbGZkX3JlYWQoY3R4LCBtZW1iZXIsICZwZmRzW2ldKSkgewogICAgICAgIEpTX0ZyZWVWYWx1ZShjdHgsIG1lbWJlcik7CiAgICAgICAgcmV0ID0gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgInBmZHNbJWldIG5vdCB2YWxpZCIsIGkpOwogICAgICAgIGdvdG8gZW5kOwogICAgICB9CgogICAgICBKU19GcmVlVmFsdWUoY3R4LCBtZW1iZXIpOwogICAgfQogIH0gZWxzZSBpZihpc19hcnJheWJ1ZmZlcikgewogICAgdWludDhfdCogZGF0YTsKICAgIHNpemVfdCBsZW47CgogICAgaWYoKGRhdGEgPSBKU19HZXRBcnJheUJ1ZmZlcihjdHgsICZsZW4sIGFyZ3ZbMF0pKSkgewogICAgICBpZihsZW4gPiAwICYmIChsZW4gJSBzaXplb2Yoc3RydWN0IHBvbGxmZCkpID09IDApIHsKICAgICAgICBtZW1jcHkocGZkcywgZGF0YSwgTUlOX05VTShsZW4sIHNpemVvZihzdHJ1Y3QgcG9sbGZkKSAqIG5mZHMpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAicGZkc1tdIGxlbmd0aCA9ICV6dSIsIGxlbik7CiAgICAgICAgZ290byBlbmQ7CiAgICAgIH0KICAgIH0KICB9CgogIHJlc3VsdCA9IHBvbGwocGZkcywgbmZkcywgdGltZW91dCk7CgogIGlmKGlzX2FycmF5KSB7CiAgICBmb3IodWludDMyX3QgaSA9IDA7IGkgPCBuZmRzOyBpKyspIHsKICAgICAgSlNWYWx1ZSBtZW1iZXIgPSBKU19HZXRQcm9wZXJ0eVVpbnQzMihjdHgsIGFyZ3ZbMF0sIGkpOwoKICAgICAgaWYoIXBvbGxmZF93cml0ZShjdHgsICZwZmRzW2ldLCBtZW1iZXIpKSB7CiAgICAgICAgSlNfRnJlZVZhbHVlKGN0eCwgbWVtYmVyKTsKICAgICAgICByZXQgPSBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAid3JpdGluZyBwZmRzWyVpXSIsIGkpOwogICAgICAgIGdvdG8gZW5kOwogICAgICB9CgogICAgICBKU19GcmVlVmFsdWUoY3R4LCBtZW1iZXIpOwogICAgfQoKICB9IGVsc2UgaWYoaXNfYXJyYXlidWZmZXIpIHsKICAgIHVpbnQ4X3QqIGRhdGE7CiAgICBzaXplX3QgbGVuOwoKICAgIGlmKChkYXRhID0gSlNfR2V0QXJyYXlCdWZmZXIoY3R4LCAmbGVuLCBhcmd2WzBdKSkpIHsKICAgICAgaWYobGVuID4gMCAmJiAobGVuICUgc2l6ZW9mKHN0cnVjdCBwb2xsZmQpKSA9PSAwKSB7CiAgICAgICAgbWVtY3B5KGRhdGEsIHBmZHMsIE1JTl9OVU0obGVuLCBzaXplb2Yoc3RydWN0IHBvbGxmZCkgKiBuZmRzKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0ID0gSlNfVGhyb3dJbnRlcm5hbEVycm9yKGN0eCwgInBmZHNbXSBsZW5ndGggPSAlenUiLCBsZW4pOwogICAgICAgIGdvdG8gZW5kOwogICAgICB9CiAgICB9CiAgfQoKICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHJlc3VsdCk7CgplbmQ6CiAgZnJlZShwZmRzKTsKICByZXR1cm4gcmV0Owp9CiNlbmRpZgoKc3RhdGljIEJPT0wKc29ja2V0X25vbmJsb2NraW5nKFNvY2tldCogcywgQk9PTCBub25ibG9jaykgewojaWZkZWYgX1dJTjMyCiAgVUxPTkcgbW9kZSA9IG5vbmJsb2NrOwogIHN5c2NhbGxfcmV0dXJuKHMsIFNZU0NBTExfRkNOVEwsIGlvY3Rsc29ja2V0KHNvY2tldF9oYW5kbGUoKnMpLCBGSU9OQklPLCAmbW9kZSkpOwojZWxzZQogIGludCBvbGRmbGFncywgbmV3ZmxhZ3M7CgogIG9sZGZsYWdzID0gZmNudGwocy0+ZmQsIEZfR0VURkwpOwogIG5ld2ZsYWdzID0gbm9uYmxvY2sgPyBvbGRmbGFncyB8IE9fTk9OQkxPQ0sgOiBvbGRmbGFncyAmICh+T19OT05CTE9DSyk7CgogIGlmKG9sZGZsYWdzICE9IG5ld2ZsYWdzKQogICAgc3lzY2FsbF9yZXR1cm4ocywgU1lTQ0FMTF9GQ05UTCwgZmNudGwocy0+ZmQsIEZfU0VURkwsIG5ld2ZsYWdzKSk7CiNlbmRpZgoKICByZXR1cm4gcy0+cmV0ID09IDA7Cn0KCnN0YXRpYyBjb25zdCBjaGFyKgpzb2NrZXRfbWV0aG9kKGludCBtYWdpYykgewogIHN0YXRpYyBjb25zdCBjaGFyKiBjb25zdCBtZXRob2RzW10gPSB7CiAgICAgICJuZGVsYXkiLAogICAgICAiYmluZCIsCiAgICAgICJhY2NlcHQiLAogICAgICAiY29ubmVjdCIsCiAgICAgICJsaXN0ZW4iLAogICAgICAwLAogICAgICAwLAogICAgICAwLAogICAgICAicmVjdiIsCiAgICAgICJzZW5kIiwKICAgICAgInJlY3Zmcm9tIiwKICAgICAgInNlbmR0byIsCiAgICAgICJnZXRzb2Nrb3B0IiwKICAgICAgInNldHNvY2tvcHQiLAogICAgICAic2h1dGRvd24iLAogICAgICAiY2xvc2UiLAogIH07CiAgcmV0dXJuIG1ldGhvZHNbbWFnaWMgJiAweDBmXTsKfQoKU29ja2V0CmpzX3NvY2tldF9kYXRhKEpTVmFsdWVDb25zdCB2YWx1ZSkgewogIEpTQ2xhc3NJRCBpZCA9IEpTX0dldENsYXNzSUQodmFsdWUpOwogIFNvY2tldCBzb2NrID0gU09DS0VUX0lOSVQoKTsKCiAgaWYoKGlkID0gSlNfR2V0Q2xhc3NJRCh2YWx1ZSkpID4gMCkgewogICAgdm9pZCogb3BhcXVlID0gSlNfR2V0T3BhcXVlKHZhbHVlLCBpZCk7CgogICAgaWYoaWQgPT0ganNfc29ja2V0X2NsYXNzX2lkKQogICAgICBzb2NrID0gKihTb2NrZXQqKSZvcGFxdWU7CiAgICBlbHNlIGlmKGlkID09IGpzX2FzeW5jc29ja2V0X2NsYXNzX2lkKQogICAgICBzb2NrID0gKihTb2NrZXQqKW9wYXF1ZTsKICB9CgogIHJldHVybiBzb2NrOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrZXRfZXJyb3IoSlNDb250ZXh0KiBjdHgsIFNvY2tldCBzb2NrKSB7CiAgSlNWYWx1ZSByZXQgPSBKU19OZXdJbnQzMihjdHgsIHNvY2tldF9yZXR2YWwoc29jaykpOwogIGludCBlcnI7CgogIGlmKChlcnIgPSBzb2NrZXRfZXJyb3Ioc29jaykpKQogICAgaWYoIShzb2NrLm5vbmJsb2NrICYmCiAgICAgICAgICgoc29jay5zeXNubyA9PSBTWVNDQUxMX1JFQ1YgJiYgZXJyID09IEVBR0FJTikgfHwgKHNvY2suc3lzbm8gPT0gU1lTQ0FMTF9TRU5EICYmIGVyciA9PSBFV09VTERCTE9DSykgfHwgKHNvY2suc3lzbm8gPT0gU1lTQ0FMTF9DT05ORUNUICYmIGVyciA9PSBFSU5QUk9HUkVTUykpKSkKICAgICAgcmV0ID0gSlNfVGhyb3coY3R4LCBqc19zeXNjYWxsZXJyb3JfbmV3KGN0eCwgc29ja2V0X3N5c2NhbGwoc29jayksIGVycikpOwoKICByZXR1cm4gcmV0Owp9CgpzdGF0aWMgQk9PTApqc19zb2NrZXRfY2hlY2tfb3BlbihKU0NvbnRleHQqIGN0eCwgU29ja2V0IHNvY2spIHsKICBpZihzb2NrZXRfY2xvc2VkKHNvY2spKSB7CiAgICBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiU29ja2V0ICMlZCBoYXMgYWxyZWFkeSBiZWVuIGNsb3NlZCIsIHNvY2suZmQpOwogICAgcmV0dXJuIEZBTFNFOwogIH0KCiAgaWYoIXNvY2tldF9vcGVuKHNvY2spKSB7CiAgICBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiU29ja2V0ICMlZCBpcyBub3QgeWV0IG9wZW4iLCBzb2NrLmZkKTsKICAgIHJldHVybiBGQUxTRTsKICB9CgogIHJldHVybiBUUlVFOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrZXRfbmV3X3Byb3RvKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgcHJvdG8sIGludCBmZCwgQk9PTCBhc3luYywgQk9PTCBvd25lcikgewogIEpTVmFsdWUgb2JqOwogIFNvY2tldCogczsKCiAgaWYoanNfc29ja2FkZHJfY2xhc3NfaWQgPT0gMCAmJiBqc19zb2NrZXRfY2xhc3NfaWQgPT0gMCAmJiBqc19hc3luY3NvY2tldF9jbGFzc19pZCA9PSAwKQogICAganNfc29ja2V0c19pbml0KGN0eCwgMCk7CgogIGlmKGpzX2lzX251bGxpc2goY3R4LCBwcm90bykpCiAgICBwcm90byA9IGFzeW5jID8gYXN5bmNzb2NrZXRfcHJvdG8gOiBzb2NrZXRfcHJvdG87CgogIGlmKGFzeW5jICYmIGpzX29iamVjdF9zYW1lKHByb3RvLCBzb2NrZXRfcHJvdG8pKQogICAgcHJvdG8gPSBhc3luY3NvY2tldF9wcm90bzsKCiAgb2JqID0gSlNfTmV3T2JqZWN0UHJvdG9DbGFzcyhjdHgsIHByb3RvLCBhc3luYyA/IGpzX2FzeW5jc29ja2V0X2NsYXNzX2lkIDoganNfc29ja2V0X2NsYXNzX2lkKTsKICBpZihKU19Jc0V4Y2VwdGlvbihvYmopKQogICAgZ290byBmYWlsOwoKICBpZihhc3luYykgewogICAgQXN5bmNTb2NrZXQqIGFzb2NrOwoKICAgIGlmKCEoYXNvY2sgPSBqc19tYWxsb2N6KGN0eCwgc2l6ZW9mKEFzeW5jU29ja2V0KSkpKQogICAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICAgIEpTX1NldE9wYXF1ZShvYmosIGFzb2NrKTsKICAgIHMgPSAoU29ja2V0Kilhc29jazsKCiAgICBzLT5mZCA9IGZkOwogICAgcy0+bm9uYmxvY2sgPSBUUlVFOwoKICAgIHNvY2tldF9ub25ibG9ja2luZyhzLCBUUlVFKTsKCiAgfSBlbHNlIHsKICAgIFNvY2tldCBzb2NrID0gU09DS0VUKGZkLCAwLCAtMSwgRkFMU0UsIEZBTFNFLCBvd25lcik7CiAgICBhc3NlcnQoc2l6ZW9mKFNvY2tldCkgPT0gc2l6ZW9mKHNvY2sucHRyKSk7CgogICAgSlNfU2V0T3BhcXVlKG9iaiwgc29jay5wdHIpOwogIH0KCiAgcmV0dXJuIG9iajsKCmZhaWw6CiAgSlNfRnJlZVZhbHVlKGN0eCwgb2JqKTsKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgplbnVtIHsKICBQUk9QX0ZELAogIFBST1BfT1BFTiwKICBQUk9QX0VPRiwKICBQUk9QX1JFVCwKICBQUk9QX01PREUsCiAgUFJPUF9TWVNDQUxMLAogIFBST1BfRVJSTk8sCiAgUFJPUF9FUlJPUiwKICBQUk9QX0xPQ0FMLAogIFBST1BfUkVNT1RFLAogIFBST1BfTk9OQkxPQ0ssCn07CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrZXRfZ2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBtYWdpYykgewogIFNvY2tldCBzID0ganNfc29ja2V0X2RhdGEodGhpc192YWwpOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVEOwoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgUFJPUF9GRDogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIChpbnQxNl90KXMuZmQpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfT1BFTjogewogICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgc29ja2V0X29wZW4ocykpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfRU9GOiB7CiAgICAgIHJldCA9IEpTX05ld0Jvb2woY3R4LCBzb2NrZXRfZW9mKHMpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX1JFVDogewogICAgICByZXQgPSBKU19OZXdJbnQzMihjdHgsIHMucmV0KTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX01PREU6IHsKI2lmZGVmIF9XSU4zMgojZWxzZQogICAgICBpbnQgZmwgPSBmY250bChzLmZkLCBGX0dFVEZMKTsKICAgICAgcmV0ID0gSlNfTmV3SW50MzIoY3R4LCBmbCk7CiNlbmRpZgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfU1lTQ0FMTDogewogICAgICBpZihzLnN5c25vID4gMCkgewogICAgICAgIGNvbnN0IGNoYXIqIG5hbWU7CgogICAgICAgIGlmKChuYW1lID0gc3lzY2FsbF9uYW1lKHMuc3lzbm8pKSkKICAgICAgICAgIHJldCA9IEpTX05ld1N0cmluZyhjdHgsIG5hbWUpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfRVJSTk86IHsKICAgICAgcmV0ID0gSlNfTmV3VWludDMyKGN0eCwgc29ja2V0X2Vycm9yKHMpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX0VSUk9SOiB7CiAgICAgIGlmKHMuZXJyb3IpCiAgICAgICAgcmV0ID0ganNfc3lzY2FsbGVycm9yX25ldyhjdHgsIHNvY2tldF9zeXNjYWxsKHMpLCBzLmVycm9yKTsKCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJPUF9MT0NBTDogewogICAgICBTb2NrQWRkciogYSA9IGpzX21hbGxvY3ooY3R4LCBzaXplb2YoU29ja0FkZHIpKTsKICAgICAgc29ja2xlbl90IGxlbiA9IHNpemVvZihTb2NrQWRkcik7CgogICAgICBKU19TT0NLRVRDQUxMX1JFVFVSTihTWVNDQUxMX0dFVFNPQ0tOQU1FLCAmcywgZ2V0c29ja25hbWUoc29ja2V0X2hhbmRsZShzKSwgKHN0cnVjdCBzb2NrYWRkciopYSwgJmxlbiksIGpzX3NvY2thZGRyX3dyYXAoY3R4LCBhKSwgSlNfTlVMTCk7CgogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIFBST1BfUkVNT1RFOiB7CiAgICAgIFNvY2tBZGRyKiBhID0ganNfbWFsbG9jeihjdHgsIHNpemVvZihTb2NrQWRkcikpOwogICAgICBzb2NrbGVuX3QgbGVuID0gc2l6ZW9mKFNvY2tBZGRyKTsKCiAgICAgIEpTX1NPQ0tFVENBTExfUkVUVVJOKFNZU0NBTExfR0VUUEVFUk5BTUUsICZzLCBnZXRwZWVybmFtZShzb2NrZXRfaGFuZGxlKHMpLCAoc3RydWN0IHNvY2thZGRyKilhLCAmbGVuKSwganNfc29ja2FkZHJfd3JhcChjdHgsIGEpLCBKU19OVUxMKTsKCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJPUF9OT05CTE9DSzogewogICAgICByZXQgPSBKU19OZXdCb29sKGN0eCwgcy5ub25ibG9jayk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfYXN5bmNzb2NrZXRfc2V0KEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIEpTVmFsdWVDb25zdCB2YWx1ZSwgaW50IG1hZ2ljKSB7CiAgQXN5bmNTb2NrZXQqIHM7CiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7CgogIGlmKCEocyA9IGpzX2FzeW5jc29ja2V0X3B0cih0aGlzX3ZhbCkpKQogICAgcmV0dXJuIEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFBST1BfTU9ERTogewojaWZkZWYgX1dJTjMyCiAgICAgIFVMT05HIG1vZGUgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgaW9jdGxzb2NrZXQoc29ja2V0X2hhbmRsZSgqcyksIEZJT05CSU8sICZtb2RlKSk7CiNlbHNlCiAgICAgIHVpbnQzMl90IG1vZGUgPSAwOwogICAgICBKU19Ub1VpbnQzMihjdHgsICZtb2RlLCB2YWx1ZSk7CiAgICAgIEpTX1NPQ0tFVENBTExfUkVUVVJOKFNZU0NBTExfRkNOVEwsIChTb2NrZXQqKXMsIGZjbnRsKHMtPmZkLCBGX1NFVEZMLCBtb2RlKSwgSlNfTmV3SW50MzIoY3R4LCBzLT5yZXQpLCBKU19VTkRFRklORUQpOwojZW5kaWYKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBQUk9QX05PTkJMT0NLOiB7CiAgICAgIHMtPm5vbmJsb2NrID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiByZXQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2tldF9zZXQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgSlNWYWx1ZUNvbnN0IHZhbHVlLCBpbnQgbWFnaWMpIHsKICBTb2NrZXQgcyA9IGpzX3NvY2tldF9kYXRhKHRoaXNfdmFsKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKCiAgc3dpdGNoKG1hZ2ljKSB7CiAgICBjYXNlIFBST1BfTU9ERTogewojaWZkZWYgX1dJTjMyCiAgICAgIFVMT05HIG1vZGUgPSBKU19Ub0Jvb2woY3R4LCB2YWx1ZSk7CiAgICAgIHJldCA9IEpTX05ld0ludDMyKGN0eCwgaW9jdGxzb2NrZXQoc29ja2V0X2hhbmRsZShzKSwgRklPTkJJTywgJm1vZGUpKTsKI2Vsc2UKICAgICAgdWludDMyX3QgbW9kZSA9IDA7CiAgICAgIEpTX1RvVWludDMyKGN0eCwgJm1vZGUsIHZhbHVlKTsKICAgICAgSlNfU09DS0VUQ0FMTF9SRVRVUk4oU1lTQ0FMTF9GQ05UTCwgJnMsIGZjbnRsKHMuZmQsIEZfU0VURkwsIG1vZGUpLCBKU19OZXdJbnQzMihjdHgsIHMucmV0KSwgSlNfVU5ERUZJTkVEKTsKI2VuZGlmCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgUFJPUF9OT05CTE9DSzogewogICAgICBzLm5vbmJsb2NrID0gSlNfVG9Cb29sKGN0eCwgdmFsdWUpOwogICAgICBicmVhazsKICAgIH0KICB9CgogIEpTX1NldE9wYXF1ZSh0aGlzX3ZhbCwgcy5wdHIpOwogIHJldHVybiByZXQ7Cn0KCmVudW0gewogIE1FVEhPRF9OREVMQVkgPSAweDAwLAogIE1FVEhPRF9CSU5EID0gMHgwMSwKICBNRVRIT0RfQUNDRVBUID0gMHgwMiwKICBNRVRIT0RfQ09OTkVDVCA9IDB4MDMsCiAgTUVUSE9EX0xJU1RFTiA9IDB4MDQsCiAgTUVUSE9EX1JFQ1YgPSAweDA4LAogIE1FVEhPRF9TRU5EID0gMHgwOSwKICBNRVRIT0RfUkVDVkZST00gPSAweDBhLAogIE1FVEhPRF9TRU5EVE8gPSAweDBiLAogIE1FVEhPRF9HRVRTT0NLT1BULAogIE1FVEhPRF9TRVRTT0NLT1BULAogIE1FVEhPRF9TSFVURE9XTiwKICBNRVRIT0RfQ0xPU0UsCn07CgplbnVtIHsKICBBU1lOQ19SRUFEWSA9IDEgPDwgMTYsCiAgQVNZTkNfV0FJVE9OTFkgPSAxIDw8IDE3LAp9OwoKLyoqCiAqICAgZGF0YVswXSAgIFNvY2tldAogKiAgIGRhdGFbMV0gICByZXNvbHZlIGZ1bmN0aW9uCiAqICAgZGF0YVsyXSAgIG9zLnNldChSZWFkfFdyaXRlKUhhbmRsZXIgZnVuY3Rpb24KICogICBkYXRhWzNdICAgYnVmCiAqICAgZGF0YVs0XSAgIGxlbgogKiAgIGRhdGFbNV0gICBmbGFncwogKiAgIGRhdGFbNl0gICBkZXN0X2FkZHIKICogICBkYXRhWzddICAgYWRkcmxlbgogKi8Kc3RhdGljIEpTVmFsdWUKanNfYXN5bmNzb2NrZXRfcmVzb2x2ZShKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljLCBKU1ZhbHVlIGRhdGFbXSkgewogIEFzeW5jU29ja2V0KiBhc29jayA9IGpzX2FzeW5jc29ja2V0X3B0cihkYXRhWzBdKTsKICBKU1ZhbHVlQ29uc3QgdmFsdWUgPSBkYXRhWzBdOwoKICBhc3NlcnQoSlNfVkFMVUVfR0VUX1RBRyhkYXRhWzFdKSA9PSBKU19UQUdfT0JKRUNUKTsKICBhc3NlcnQoSlNfVkFMVUVfR0VUX09CSihkYXRhWzFdKSk7CgogIGlmKChtYWdpYyAmIDB4MGYpID09IE1FVEhPRF9DT05ORUNUKSB7CiAgICBpbnQgZXJyID0gMDsKICAgIHNvY2tsZW5fdCBvcHRsZW4gPSBzaXplb2YoZXJyKTsKCiAgICBpZihnZXRzb2Nrb3B0KHNvY2tldF9oYW5kbGUoKmFzb2NrKSwgU09MX1NPQ0tFVCwgU09fRVJST1IsICh2b2lkKikmZXJyLCAmb3B0bGVuKSAhPSAwKSB7CiAgICAgIGFzb2NrLT5yZXQgPSAtMTsKICAgICAgYXNvY2stPnN5c25vID0gU1lTQ0FMTF9HRVRTT0NLT1BUOwogICAgICBlcnIgPSBlcnJubzsKICAgIH0KCiAgICBhc29jay0+ZXJyb3IgPSBlcnI7CgogICAgdmFsdWUgPSBKU19OZXdJbnQzMihjdHgsIGVyciA/IC0xIDogMCk7CiAgfSBlbHNlIHsKICAgIHZhbHVlID0ganNfc29ja2V0X21ldGhvZChjdHgsIGRhdGFbMF0sIChtYWdpYyAmIDB4MDgpID8gKChtYWdpYyAmIDB4MDIpID8gNSA6IDQpIDogMSwgJmRhdGFbNF0sIG1hZ2ljIHwgQVNZTkNfUkVBRFkpOwogIH0KCiAgaWYoanNfb2JqZWN0X3NhbWUoZGF0YVsxXSwgYXNvY2stPnBlbmRpbmdbbWFnaWMgJiAxXSkpIHsKICAgIEpTVmFsdWVDb25zdCBhcmdzWzJdID0ge2RhdGFbMF0sIEpTX05VTEx9OwogICAgSlNfQ2FsbChjdHgsIGRhdGFbM10sIEpTX1VOREVGSU5FRCwgMiwgYXJncyk7CgojaWZkZWYgREVCVUdfT1VUUFVUCiAgICBwcmludGYoIlslcF0gc2V0JXNIYW5kbGVyKCVkLCBudWxsKVxuIiwgSlNfVkFMVUVfR0VUX09CSihkYXRhWzFdKSwgbWFnaWMgJiAxID8gIldyaXRlIiA6ICJSZWFkIiwgYXNvY2stPmZkKTsKI2VuZGlmCgogICAgLyogZnJlZSBvdXJzZWx2ZXMgKi8KICAgIEpTX0ZyZWVWYWx1ZShjdHgsIGFzb2NrLT5wZW5kaW5nW21hZ2ljICYgMV0pOwogICAgYXNvY2stPnBlbmRpbmdbbWFnaWMgJiAxXSA9IEpTX05VTEw7CiAgfQoKaWYoSlNfSXNFeGNlcHRpb24odmFsdWUpKSB7CiAgdmFsdWU9IEpTX0dldEV4Y2VwdGlvbihjdHgpOwp9CgogIEpTX0NhbGwoY3R4LCBKU19Jc0V4Y2VwdGlvbih2YWx1ZSkgPyBkYXRhWzJdIDogZGF0YVsxXSwgSlNfVU5ERUZJTkVELCAxLCAmdmFsdWUpOwoKICAvKiAgSlNfRnJlZVZhbHVlKGN0eCwgZGF0YVsxXSk7CiAgICBkYXRhWzFdID0gSlNfVU5ERUZJTkVEOyovCgogIHJldHVybiBKU19VTkRFRklORUQ7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX2FzeW5jc29ja2V0X21ldGhvZChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSwgaW50IG1hZ2ljKSB7CiAgQXN5bmNTb2NrZXQqIHM7CiAgaW50IGRhdGFfbGVuOwogIEpTVmFsdWUgcmV0ID0gSlNfVU5ERUZJTkVELCBzZXRfaGFuZGxlciwgYXJnc1syXSwgZGF0YVs4XSwgcHJvbWlzZSwgcmVzb2x2aW5nX2Z1bmNzWzJdOwoKICBpZighKHMgPSBqc19hc3luY3NvY2tldF9wdHIodGhpc192YWwpKSkKICAgIHJldHVybiBKU19UaHJvd0ludGVybmFsRXJyb3IoY3R4LCAiTXVzdCBiZSBhbiBBc3luY1NvY2tldCIpOwoKICBpZighanNfc29ja2V0X2NoZWNrX29wZW4oY3R4LCAqKFNvY2tldCopcykpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihKU19Jc0V4Y2VwdGlvbigoc2V0X2hhbmRsZXIgPSBqc19pb2hhbmRsZXJfZm4oY3R4LCBtYWdpYyAmIDEpKSkpCiAgICByZXR1cm4gSlNfRVhDRVBUSU9OOwoKICBpZihKU19Jc09iamVjdChzLT5wZW5kaW5nW21hZ2ljICYgMV0pKQogICAgcmV0dXJuIEpTX1Rocm93SW50ZXJuYWxFcnJvcihjdHgsICJBbHJlYWR5IGEgcGVuZGluZyAlcyIsIG1hZ2ljICYgMSA/ICJ3cml0ZSIgOiAicmVhZCIpOwoKICBwcm9taXNlID0gSlNfTmV3UHJvbWlzZUNhcGFiaWxpdHkoY3R4LCByZXNvbHZpbmdfZnVuY3MpOwogIGlmKEpTX0lzRXhjZXB0aW9uKHByb21pc2UpKQogICAgcmV0dXJuIHByb21pc2U7CgogIGRhdGFbMF0gPSB0aGlzX3ZhbDsKICBkYXRhWzFdID0gcmVzb2x2aW5nX2Z1bmNzWzBdOwogIGRhdGFbMl0gPSByZXNvbHZpbmdfZnVuY3NbMV07CiAgZGF0YVszXSA9IHNldF9oYW5kbGVyOwogIGRhdGFfbGVuID0gNDsKCiAgaWYobWFnaWMgPj0gMikgewogICAgaW50IG4gPSAobWFnaWMgJiAweDA4KSA/ICgobWFnaWMgJiAweDAyKSA/IDUgOiA0KSA6IDE7CgogICAgZm9yKGludCBpID0gMDsgaSA8IG47IGkrKykKICAgICAgZGF0YVtkYXRhX2xlbisrXSA9IGkgPCBhcmdjID8gYXJndltpXSA6IEpTX1VOREVGSU5FRDsKICB9CgogIGFyZ3NbMF0gPSBKU19OZXdJbnQzMihjdHgsIHNvY2tldF9mZCgqcykpOwogIGFyZ3NbMV0gPSBKU19OZXdDRnVuY3Rpb25EYXRhKGN0eCwganNfYXN5bmNzb2NrZXRfcmVzb2x2ZSwgMCwgbWFnaWMsIGRhdGFfbGVuLCBkYXRhKTsKCiNpZmRlZiBERUJVR19PVVRQVVQKICBwcmludGYoInNldCVzSGFuZGxlciglZCwgJXApXG4iLCBtYWdpYyAmIDEgPyAiV3JpdGUiIDogIlJlYWQiLCBzb2NrZXRfZmQoKnMpLCBKU19WQUxVRV9HRVRfT0JKKGRhdGFbMV0pKTsKI2VuZGlmCgogIHMtPnBlbmRpbmdbbWFnaWMgJiAxXSA9IEpTX0R1cFZhbHVlKGN0eCwgcmVzb2x2aW5nX2Z1bmNzWzBdKTsKCiAgcmV0ID0gSlNfQ2FsbChjdHgsIHNldF9oYW5kbGVyLCBKU19VTkRFRklORUQsIDIsIGFyZ3MpOwoKICBKU19GcmVlVmFsdWUoY3R4LCByZXQpOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHNldF9oYW5kbGVyKTsKICBKU19GcmVlVmFsdWUoY3R4LCByZXNvbHZpbmdfZnVuY3NbMF0pOwogIEpTX0ZyZWVWYWx1ZShjdHgsIHJlc29sdmluZ19mdW5jc1sxXSk7CgogIHJldHVybiBwcm9taXNlOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19zb2NrZXRfbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHsKICBTb2NrZXQgc29jayA9IGpzX3NvY2tldF9kYXRhKHRoaXNfdmFsKTsKICBKU1ZhbHVlIHJldCA9IEpTX1VOREVGSU5FRDsKICBTb2NrQWRkciogYSA9IDA7CiAgc29ja2xlbl90IGFsZW4gPSAwOwogIEFzeW5jU29ja2V0KiBhc29jayA9IGpzX2FzeW5jc29ja2V0X3B0cih0aGlzX3ZhbCk7CiAgU29ja2V0KiBzID0gYXNvY2sgPyAoU29ja2V0Kilhc29jayA6ICZzb2NrOwogIEJPT0wgd2FpdCA9IHMtPm5vbmJsb2NrICYmICEobWFnaWMgJiBBU1lOQ19SRUFEWSk7CgogIG1hZ2ljICY9IChBU1lOQ19SRUFEWSAtIDEpOwoKICBpZihtYWdpYyA+PSBNRVRIT0RfQklORCAmJiBtYWdpYyA8PSBNRVRIT0RfQ09OTkVDVCkKICAgIGlmKCEoYSA9IGpzX3NvY2thZGRyX2RhdGEoYXJndlswXSkpKQogICAgICByZXR1cm4gSlNfVGhyb3dUeXBlRXJyb3IoY3R4LCAiYXJndW1lbnQgMSBtdXN0IGJlIG9mIHR5cGUgU29ja0FkZHIiKTsKCiAgaWYoIWpzX3NvY2tldF9jaGVja19vcGVuKGN0eCwgKnMpKQogICAgcmV0dXJuIEpTX0VYQ0VQVElPTjsKCiAgaWYod2FpdCkgewogICAgc3dpdGNoKG1hZ2ljKSB7CiAgICAgIGNhc2UgTUVUSE9EX0FDQ0VQVDoKICAgICAgY2FzZSBNRVRIT0RfUkVDVjoKICAgICAgY2FzZSBNRVRIT0RfUkVDVkZST006CiAgICAgIGNhc2UgTUVUSE9EX1NFTkQ6CiAgICAgIGNhc2UgTUVUSE9EX1NFTkRUTzogewogICAgICAgIGFzc2VydCgwKTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgZGVmYXVsdDogYnJlYWs7CiAgICB9CiAgfQoKICBzd2l0Y2gobWFnaWMpIHsKICAgIGNhc2UgTUVUSE9EX05ERUxBWTogewogICAgICBCT09MIG5vbmJsb2NrID0gVFJVRTsKCiAgICAgIGlmKGFyZ2MgPj0gMSkKICAgICAgICBub25ibG9jayA9IEpTX1RvQm9vbChjdHgsIGFyZ3ZbMF0pOwoKICAgICAgaWYobm9uYmxvY2sgIT0gcy0+bm9uYmxvY2spIHsKICAgICAgICBzb2NrZXRfbm9uYmxvY2tpbmcocywgbm9uYmxvY2spOwogICAgICAgIHMtPm5vbmJsb2NrID0gbm9uYmxvY2s7CiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTUVUSE9EX0JJTkQ6IHsKICAgICAgSlNfU09DS0VUQ0FMTChTWVNDQUxMX0JJTkQsIHMsIGJpbmQoc29ja2V0X2hhbmRsZSgqcyksIChzdHJ1Y3Qgc29ja2FkZHIqKWEsIHNvY2thZGRyX3NpemUoYSkpKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfQUNDRVBUOiB7CiAgICAgIHNvY2tsZW5fdCBhZGRybGVuID0gc2l6ZW9mKFNvY2tBZGRyKTsKCiAgICAgIEpTX1NPQ0tFVENBTEwoU1lTQ0FMTF9BQ0NFUFQsIHMsIGFjY2VwdChzb2NrZXRfaGFuZGxlKCpzKSwgKHN0cnVjdCBzb2NrYWRkciopYSwgJmFkZHJsZW4pKTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfQ09OTkVDVDogewogICAgICBKU19TT0NLRVRDQUxMKFNZU0NBTExfQ09OTkVDVCwgcywgY29ubmVjdChzb2NrZXRfaGFuZGxlKCpzKSwgKHN0cnVjdCBzb2NrYWRkciopYSwgc29ja2FkZHJfc2l6ZShhKSkpOwoKICAgICAgaWYod2FpdCkKICAgICAgICByZXQgPSBqc19hc3luY3NvY2tldF9tZXRob2QoY3R4LCB0aGlzX3ZhbCwgYXJnYywgYXJndiwgbWFnaWMpOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfTElTVEVOOiB7CiAgICAgIGludDMyX3QgYmFja2xvZyA9IDU7CgogICAgICBpZihhcmdjID49IDEpCiAgICAgICAgSlNfVG9JbnQzMihjdHgsICZiYWNrbG9nLCBhcmd2WzBdKTsKCiAgICAgIEpTX1NPQ0tFVENBTEwoU1lTQ0FMTF9MSVNURU4sIHMsIGxpc3Rlbihzb2NrZXRfaGFuZGxlKCpzKSwgYmFja2xvZykpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIE1FVEhPRF9SRUNWOgogICAgY2FzZSBNRVRIT0RfUkVDVkZST006IHsKICAgICAgaW50MzJfdCBmbGFncyA9IDA7CiAgICAgIElucHV0QnVmZmVyIGJ1ZiA9IGpzX2lucHV0X2J1ZmZlcihjdHgsIGFyZ3ZbMF0pOwogICAgICBPZmZzZXRMZW5ndGggb2ZmID0gezAsIC0xfTsKCiAgICAgIGpzX29mZnNldF9sZW5ndGgoY3R4LCBidWYuc2l6ZSwgYXJnYyAtIDEsIGFyZ3YgKyAxLCAmb2ZmKTsKCiNpZmRlZiBERUJVR19PVVRQVVQKICAgICAgcHJpbnRmKCJyZWN2KCVkLCAlenUsICV6dSwgJXp1KVxuIiwgcy0+ZmQsIG9mZi5vZmZzZXQsIG9mZi5sZW5ndGgsIG9mZnNldF9zaXplKCZvZmYsIGJ1Zi5zaXplKSk7CiNlbmRpZgoKICAgICAgaWYoYXJnYyA+PSA0KQogICAgICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbM10pOwoKICAgICAgaWYobWFnaWMgPT0gTUVUSE9EX1JFQ1ZGUk9NKSB7CiAgICAgICAgaWYoKGEgPSBhcmdjID49IDUgPyBqc19zb2NrYWRkcl9kYXRhKGFyZ3ZbNF0pIDogMCkpCiAgICAgICAgICBhbGVuID0gc2l6ZW9mKFNvY2tBZGRyKTsKCiAgICAgICAgSlNfU09DS0VUQ0FMTChTWVNDQUxMX1JFQ1ZGUk9NLAogICAgICAgICAgICAgICAgICAgICAgcywKICAgICAgICAgICAgICAgICAgICAgIHJlY3Zmcm9tKHNvY2tldF9oYW5kbGUoKnMpLCAodm9pZCopKGJ1Zi5kYXRhICsgb2ZmLm9mZnNldCksIG9mZnNldF9zaXplKCZvZmYsIGJ1Zi5zaXplKSwgZmxhZ3MsIGEgPyAmYS0+cyA6IE5VTEwsIGEgPyAmYWxlbiA6IE5VTEwpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBKU19TT0NLRVRDQUxMKFNZU0NBTExfUkVDViwgcywgcmVjdihzb2NrZXRfaGFuZGxlKCpzKSwgKHZvaWQqKShidWYuZGF0YSArIG9mZi5vZmZzZXQpLCBvZmZzZXRfc2l6ZSgmb2ZmLCBidWYuc2l6ZSksIGZsYWdzKSk7CiAgICAgIH0KCiAgICAgIGJyZWFrOwogICAgfQoKICAgIGNhc2UgTUVUSE9EX1NFTkQ6CiAgICBjYXNlIE1FVEhPRF9TRU5EVE86IHsKICAgICAgaW50MzJfdCBmbGFncyA9IDA7CiAgICAgIElucHV0QnVmZmVyIGJ1ZiA9IGpzX2lucHV0X2NoYXJzKGN0eCwgYXJndlswXSk7CiAgICAgIE9mZnNldExlbmd0aCBvZmY9ezAsLTF9OwoKICAgICAganNfb2Zmc2V0X2xlbmd0aChjdHgsIGJ1Zi5zaXplLCBhcmdjIC0gMSwgYXJndiArIDEsICZvZmYpOwoKICAgICAgaWYoYXJnYyA+PSA0KQogICAgICAgIEpTX1RvSW50MzIoY3R4LCAmZmxhZ3MsIGFyZ3ZbM10pOwoKICAgICAgaWYobWFnaWMgPT0gTUVUSE9EX1NFTkRUTykgewogICAgICAgIGlmKChhID0gYXJnYyA+PSA1ID8ganNfc29ja2FkZHJfZGF0YShhcmd2WzRdKSA6IDApKQogICAgICAgICAgYWxlbiA9IHNvY2thZGRyX3NpemUoYSk7CgogICAgICAgIEpTX1NPQ0tFVENBTEwoU1lTQ0FMTF9TRU5EVE8sCiAgICAgICAgICAgICAgICAgICAgICBzLAogICAgICAgICAgICAgICAgICAgICAgc2VuZHRvKHNvY2tldF9oYW5kbGUoKnMpLCAoY29uc3Qgdm9pZCopKGJ1Zi5kYXRhICsgb2ZmLm9mZnNldCksIG9mZnNldF9zaXplKCZvZmYsIGJ1Zi5zaXplKSwgZmxhZ3MsIGEgPyAmYS0+cyA6IE5VTEwsIGEgPyBhbGVuIDogMCkpOwogICAgICB9IGVsc2UgewogICAgICAgIEpTX1NPQ0tFVENBTEwoU1lTQ0FMTF9TRU5ELCBzLCBzZW5kKHNvY2tldF9oYW5kbGUoKnMpLCAoY29uc3Qgdm9pZCopKGJ1Zi5kYXRhICsgb2ZmLm9mZnNldCksIG9mZnNldF9zaXplKCZvZmYsIGJ1Zi5zaXplKSwgZmxhZ3MpKTsKICAgICAgfQoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfR0VUU09DS09QVDogewogICAgICBpbnQzMl90IGxldmVsLCBvcHRuYW1lOwogICAgICB1aW50MzJfdCBvcHRsZW4gPSBzaXplb2YoaW50KTsKICAgICAgdWludDhfdCogYnVmOwogICAgICBpbnQzMl90IHZhbCA9IC0xLCAqdG1wID0gMDsKICAgICAgc29ja2xlbl90IGxlbjsKCiAgICAgIEpTX1RvSW50MzIoY3R4LCAmbGV2ZWwsIGFyZ3ZbMF0pOwogICAgICBKU19Ub0ludDMyKGN0eCwgJm9wdG5hbWUsIGFyZ3ZbMV0pOwoKICAgICAgaWYoYXJnYyA+PSA0KQogICAgICAgIEpTX1RvVWludDMyKGN0eCwgJm9wdGxlbiwgYXJndlszXSk7CgogICAgICBKU19Ub0ludDMyKGN0eCwgJm9wdG5hbWUsIGFyZ3ZbMV0pOwoKICAgICAgYnVmID0gb3B0dmFsX2J1ZihjdHgsIGFyZ3ZbMl0sICZ0bXAsICZsZW4pOwoKICAgICAgSlNfU09DS0VUQ0FMTChTWVNDQUxMX0dFVFNPQ0tPUFQsIHMsIGdldHNvY2tvcHQoc29ja2V0X2hhbmRsZSgqcyksIGxldmVsLCBvcHRuYW1lLCAodm9pZCopYnVmLCAmbGVuKSk7CiAgICAgIGlmKHRtcCkgewogICAgICAgIGpzX2FycmF5X2NsZWFyKGN0eCwgYXJndlsyXSk7CiAgICAgICAgSlNfU2V0UHJvcGVydHlVaW50MzIoY3R4LCBhcmd2WzJdLCAwLCBKU19OZXdJbnQzMihjdHgsICooaW50MzJfdCopYnVmKSk7CiAgICAgIH0KCiAgICAgIGlmKHRtcCkKICAgICAgICBqc19mcmVlKGN0eCwgdG1wKTsKCiNpZmRlZiBERUJVR19PVVRQVVQKICAgICAgcHJpbnRmKCJTWVNDQUxMX0dFVFNPQ0tPUFQoJWQsICVkLCAlZCAoJWQpLCAlbHUpID0gJWRcbiIsIHNvY2tldF9mZCgqcyksIGxldmVsLCBvcHRuYW1lLCB2YWwsICh1bnNpZ25lZCBsb25nIGludClsZW4sIHMtPnJldCk7CiNlbmRpZgoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfU0VUU09DS09QVDogewogICAgICBpbnQzMl90IGxldmVsLCBvcHRuYW1lLCBudW0gPSAwLCAqdG1wID0gMDsKICAgICAgc29ja2xlbl90IGxlbiA9IDA7CiAgICAgIHVpbnQ4X3QqIGJ1ZiA9IDA7CgogICAgICBpZihhcmdjID49IDMpCiAgICAgICAgYnVmID0gb3B0dmFsX2J1ZihjdHgsIGFyZ3ZbMl0sICZ0bXAsICZsZW4pOwoKICAgICAgaWYoIWJ1ZikgewogICAgICAgIGJ1ZiA9ICh1aW50OF90KikmbnVtOwogICAgICAgIGxlbiA9IHNpemVvZihudW0pOwogICAgICB9CgogICAgICBKU19Ub0ludDMyKGN0eCwgJmxldmVsLCBhcmd2WzBdKTsKICAgICAgSlNfVG9JbnQzMihjdHgsICZvcHRuYW1lLCBhcmd2WzFdKTsKCiAgICAgIGlmKGFyZ2MgPj0gNCkgewogICAgICAgIHVpbnQzMl90IG5ld2xlbiA9IDA7CgogICAgICAgIGlmKCFKU19Ub1VpbnQzMihjdHgsICZuZXdsZW4sIGFyZ3ZbM10pKSB7CiAgICAgICAgICBuZXdsZW4gPSBNSU5fTlVNKG5ld2xlbiwgbGVuKTsKCiAgICAgICAgICBpZihuZXdsZW4pCiAgICAgICAgICAgIGxlbiA9IG5ld2xlbjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHN5c2NhbGxfcmV0dXJuKHMsIFNZU0NBTExfU0VUU09DS09QVCwgc2V0c29ja29wdChzb2NrZXRfaGFuZGxlKCpzKSwgbGV2ZWwsIG9wdG5hbWUsIChjb25zdCB2b2lkKilidWYsIGxlbikpOwoKI2lmZGVmIERFQlVHX09VVFBVVAogICAgICBwcmludGYoIlNZU0NBTExfU0VUU09DS09QVCglZCwgJWQsICVkLCAlaSAoJXApLCAlbHUpID0gJWRcbiIsIHNvY2tldF9mZCgqcyksIGxldmVsLCBvcHRuYW1lLCAqKGludCopYnVmLCBidWYsICh1bnNpZ25lZCBsb25nIGludClsZW4sIHMtPnJldCk7CiNlbmRpZgoKICAgICAgaWYodG1wKQogICAgICAgIGpzX2ZyZWUoY3R4LCB0bXApOwoKICAgICAgYnJlYWs7CiAgICB9CgogICAgY2FzZSBNRVRIT0RfU0hVVERPV046IHsKICAgICAgaW50MzJfdCBob3c7CgogICAgICBKU19Ub0ludDMyKGN0eCwgJmhvdywgYXJndlswXSk7CiAgICAgIEpTX1NPQ0tFVENBTEwoU1lTQ0FMTF9TSFVURE9XTiwgcywgc2h1dGRvd24oc29ja2V0X2hhbmRsZSgqcyksIGhvdykpOwogICAgICBicmVhazsKICAgIH0KCiAgICBjYXNlIE1FVEhPRF9DTE9TRTogewogICAgICBKU19TT0NLRVRDQUxMKFNZU0NBTExfQ0xPU0UsIHMsIGNsb3Nlc29ja2V0KHNvY2tldF9mZCgqcykpKTsKCiAgICAgIGlmKHNvY2tldF9yZXR2YWwoKnMpID09IDApCiAgICAgICAgcy0+ZmQgPSBVSU5UMTZfTUFYOwoKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICBpZihqc19hc3luY3NvY2tldF9wdHIodGhpc192YWwpID09IE5VTEwpCiAgICBKU19TZXRPcGFxdWUodGhpc192YWwsIHNvY2sucHRyKTsKCiAgcmV0dXJuIHJldDsKfQoKc3RhdGljIEpTVmFsdWUKanNfc29ja2V0X2NvbnN0cnVjdG9yKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgbmV3X3RhcmdldCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBhc3luYykgewogIEpTVmFsdWUgcHJvdG87CiAgU29ja1R5cGUgc3QgPSB7QUZfVU5TUEVDLCBTT0NLX1NUUkVBTSwgSVBQUk9UT19JUH07CiAgaW50IGZkID0gLTE7CgogIHByb3RvID0gSlNfR2V0UHJvcGVydHlTdHIoY3R4LCBuZXdfdGFyZ2V0LCAicHJvdG90eXBlIik7CiAgaWYoSlNfSXNFeGNlcHRpb24ocHJvdG8pKQogICAgZ290byBmYWlsOwoKICBzd2l0Y2goanNfc29ja3R5cGUoY3R4LCAmc3QsIGFyZ2MsIGFyZ3YpKSB7CiAgICBjYXNlIDA6IHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAxIG11c3QgYmUgYWRkcmVzcyBmYW1pbHkiKTsKICAgIGNhc2UgMTogcmV0dXJuIEpTX1Rocm93VHlwZUVycm9yKGN0eCwgImFyZ3VtZW50IDIgbXVzdCBiZSBzb2NrZXQgdHlwZSIpOwogICAgLypjYXNlIDI6IHJldHVybiBKU19UaHJvd1R5cGVFcnJvcihjdHgsICJhcmd1bWVudCAzIG11c3QgYmUgcHJvdG9jb2wiKTsqLwogICAgZGVmYXVsdDogYnJlYWs7CiAgfQoKICBmb3IoOzspIHsKI2lmIGRlZmluZWQoX1dJTjMyKSAmJiAhZGVmaW5lZChfX01TWVNfXykgJiYgIWRlZmluZWQoX19DWUdXSU5fXykKICAgIFNPQ0tFVCBoID0gc29ja2V0KHN0LmZhbWlseSwgc3QudHlwZSwgc3QucHJvdG9jb2wpOwoKICAgIGZkID0gaCA9PSBJTlZBTElEX1NPQ0tFVCA/IC0xIDogX29wZW5fb3NmaGFuZGxlKGgsIDApOwojZWxzZQogICAgZmQgPSBzb2NrZXQoc3QuZmFtaWx5LCBzdC50eXBlLCBzdC5wcm90b2NvbCk7CiNlbmRpZgoKICAgIGlmKGZkID09IC0xKSB7CiNpZiBkZWZpbmVkKF9XSU4zMikgJiYgIWRlZmluZWQoX19NU1lTX18pICYmICFkZWZpbmVkKF9fQ1lHV0lOX18pCiAgICAgIHN0YXRpYyBCT09MIGluaXRpYWxpemVkOwogICAgICBpbnQgZXJyOwogICAgICBXU0FEQVRBIGQ7CgogICAgICBpZighaW5pdGlhbGl6ZWQpIHsKICAgICAgICBpbml0aWFsaXplZCsrOwogICAgICAgIGlmKChlcnIgPSBXU0FTdGFydHVwKE1BS0VXT1JEKDIsIDMpLCAmZCkpKQogICAgICAgICAgcmV0dXJuIEpTX1Rocm93KGN0eCwganNfc3lzY2FsbGVycm9yX25ldyhjdHgsICJXU0FTdGFydHVwIiwgZXJyKSk7CgogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICByZXR1cm4gSlNfVGhyb3coY3R4LCBqc19zeXNjYWxsZXJyb3JfbmV3KGN0eCwgInNvY2tldCIsIFdTQUdldExhc3RFcnJvcigpKSk7CiNlbHNlCiAgICAgIHJldHVybiBKU19UaHJvdyhjdHgsIGpzX3N5c2NhbGxlcnJvcl9uZXcoY3R4LCAic29ja2V0IiwgZXJybm8pKTsKI2VuZGlmCiAgICB9CgogICAgYnJlYWs7CiAgfQoKICByZXR1cm4ganNfc29ja2V0X25ld19wcm90byhjdHgsIHByb3RvLCBmZCwgYXN5bmMsIFRSVUUpOwoKZmFpbDoKICByZXR1cm4gSlNfRVhDRVBUSU9OOwp9CgpzdGF0aWMgSlNWYWx1ZQpqc19hc3luY3NvY2tldF9jb25zdHJ1Y3RvcihKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IG5ld190YXJnZXQsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgcmV0dXJuIGpzX3NvY2tldF9jb25zdHJ1Y3RvcihjdHgsIG5ld190YXJnZXQsIGFyZ2MsIGFyZ3YsIFRSVUUpOwp9CnN0YXRpYyBKU1ZhbHVlCmpzX3N5bmNzb2NrZXRfY29uc3RydWN0b3IoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCBuZXdfdGFyZ2V0LCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIHJldHVybiBqc19zb2NrZXRfY29uc3RydWN0b3IoY3R4LCBuZXdfdGFyZ2V0LCBhcmdjLCBhcmd2LCBGQUxTRSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2tldF92YWx1ZW9mKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdKSB7CiAgU29ja2V0IHMgPSBqc19zb2NrZXRfZGF0YSh0aGlzX3ZhbCk7CgogIHJldHVybiBKU19OZXdJbnQzMihjdHgsIHNvY2tldF9mZChzKSk7Cn0KCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2tldF9hZG9wdChKU0NvbnRleHQqIGN0eCwgSlNWYWx1ZUNvbnN0IHRoaXNfdmFsLCBpbnQgYXJnYywgSlNWYWx1ZUNvbnN0IGFyZ3ZbXSkgewogIGludDMyX3QgZmQgPSAtMTsKCiAgSlNfVG9JbnQzMihjdHgsICZmZCwgYXJndlswXSk7CgogIHJldHVybiBqc19zb2NrZXRfbmV3X3Byb3RvKGN0eCwgc29ja2V0X3Byb3RvLCBmZCwgRkFMU0UsIEZBTFNFKTsKfQoKc3RhdGljIHZvaWQKanNfc29ja2V0X2ZpbmFsaXplcihKU1J1bnRpbWUqIHJ0LCBKU1ZhbHVlIHZhbCkgewogIFNvY2tldCBzb2NrID0ganNfc29ja2V0X2RhdGEodmFsKTsKICBBc3luY1NvY2tldCogYXNvY2s7CgogIGlmKCFzb2NrZXRfYWRvcHRlZChzb2NrKSkKICAgIGlmKHNvY2tldF9vcGVuKHNvY2spKQogICAgICBjbG9zZShzb2NrZXRfZmQoc29jaykpOwoKICBpZigoYXNvY2sgPSBqc19hc3luY3NvY2tldF9wdHIodmFsKSkpIHsKICAgIEpTX0ZyZWVWYWx1ZVJUKHJ0LCBhc29jay0+cGVuZGluZ1swXSk7CiAgICBKU19GcmVlVmFsdWVSVChydCwgYXNvY2stPnBlbmRpbmdbMV0pOwogICAganNfZnJlZV9ydChydCwgYXNvY2spOwogIH0KfQoKc3RhdGljIEpTQ2xhc3NEZWYganNfc29ja2V0X2NsYXNzID0gewogICAgLmNsYXNzX25hbWUgPSAiU29ja2V0IiwKICAgIC5maW5hbGl6ZXIgPSBqc19zb2NrZXRfZmluYWxpemVyLAp9OwoKc3RhdGljIEpTQ2xhc3NEZWYganNfYXN5bmNzb2NrZXRfY2xhc3MgPSB7CiAgICAuY2xhc3NfbmFtZSA9ICJBc3luY1NvY2tldCIsCiAgICAuZmluYWxpemVyID0ganNfc29ja2V0X2ZpbmFsaXplciwKfTsKCnN0YXRpYyBKU1ZhbHVlCmpzX3NvY2tvcHQoSlNDb250ZXh0KiBjdHgsIEpTVmFsdWVDb25zdCB0aGlzX3ZhbCwgaW50IGFyZ2MsIEpTVmFsdWVDb25zdCBhcmd2W10sIGludCBtYWdpYykgewogIHJldHVybiBqc19zb2NrZXRfbWV0aG9kKGN0eCwgYXJndlswXSwgYXJnYyAtIDEsIGFyZ3YgKyAxLCBtYWdpYyk7Cn0KCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zb2NrZXRzX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19ERUYoInNvY2tldHBhaXIiLCA0LCBqc19zb2NrZXRwYWlyKSwKICAgIEpTX0NGVU5DX0RFRigic2VsZWN0IiwgMSwganNfc2VsZWN0KSwKI2lmbmRlZiBfV0lOMzIKICAgIEpTX0NGVU5DX0RFRigicG9sbCIsIDEsIGpzX3BvbGwpLAojZW5kaWYKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiZ2V0c29ja29wdCIsIDQsIGpzX3NvY2tvcHQsIE1FVEhPRF9HRVRTT0NLT1BUKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2V0c29ja29wdCIsIDQsIGpzX3NvY2tvcHQsIE1FVEhPRF9TRVRTT0NLT1BUKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zb2NrZXRfcHJvdG9fZnVuY3NbXSA9IHsKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJmZCIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfRkQsIEpTX1BST1BfQ19XX0UpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImVycm5vIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9FUlJOTyksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigic3lzY2FsbCIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfU1lTQ0FMTCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZXJyb3IiLCBqc19zb2NrZXRfZ2V0LCAwLCBQUk9QX0VSUk9SKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJlcnJubyIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfRVJSTk8pLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImxvY2FsIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9MT0NBTCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigicmVtb3RlIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9SRU1PVEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIm9wZW4iLCBqc19zb2NrZXRfZ2V0LCAwLCBQUk9QX09QRU4pLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImVvZiIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfRU9GKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJtb2RlIiwganNfc29ja2V0X2dldCwganNfc29ja2V0X3NldCwgUFJPUF9NT0RFKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfRkxBR1NfREVGKCJyZXQiLCBqc19zb2NrZXRfZ2V0LCBqc19zb2NrZXRfc2V0LCBQUk9QX1JFVCwgSlNfUFJPUF9DT05GSUdVUkFCTEUpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIm5vbmJsb2NrIiwganNfc29ja2V0X2dldCwganNfc29ja2V0X3NldCwgUFJPUF9OT05CTE9DSyksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoIm5kZWxheSIsIDAsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9OREVMQVkpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJiaW5kIiwgMSwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX0JJTkQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjb25uZWN0IiwgMSwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX0NPTk5FQ1QpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJsaXN0ZW4iLCAwLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfTElTVEVOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYWNjZXB0IiwgMCwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX0FDQ0VQVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNlbmQiLCAxLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfU0VORCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNlbmR0byIsIDIsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9TRU5EVE8pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZWN2IiwgMSwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX1JFQ1YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZWN2ZnJvbSIsIDIsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9SRUNWRlJPTSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNodXRkb3duIiwgMSwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX1NIVVRET1dOKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY2xvc2UiLCAwLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfQ0xPU0UpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJnZXRzb2Nrb3B0IiwgMywganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX0dFVFNPQ0tPUFQpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJzZXRzb2Nrb3B0IiwgMywganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX1NFVFNPQ0tPUFQpLAogICAgSlNfQ0ZVTkNfREVGKCJ2YWx1ZU9mIiwgMCwganNfc29ja2V0X3ZhbHVlb2YpLAogICAgSlNfQUxJQVNfREVGKCJbU3ltYm9sLnRvUHJpbWl0aXZlXSIsICJ2YWx1ZU9mIiksCiAgICBKU19QUk9QX1NUUklOR19ERUYoIltTeW1ib2wudG9TdHJpbmdUYWddIiwgIlNvY2tldCIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19hc3luY3NvY2tldF9wcm90b19mdW5jc1tdID0gewogICAgSlNfQ0dFVFNFVF9NQUdJQ19GTEFHU19ERUYoImZkIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9GRCwgSlNfUFJPUF9DX1dfRSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZXJybm8iLCBqc19zb2NrZXRfZ2V0LCAwLCBQUk9QX0VSUk5PKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJzeXNjYWxsIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9TWVNDQUxMKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJlcnJvciIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfRVJST1IpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoImVycm5vIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9FUlJOTyksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigibG9jYWwiLCBqc19zb2NrZXRfZ2V0LCAwLCBQUk9QX0xPQ0FMKSwKICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJyZW1vdGUiLCBqc19zb2NrZXRfZ2V0LCAwLCBQUk9QX1JFTU9URSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigib3BlbiIsIGpzX3NvY2tldF9nZXQsIDAsIFBST1BfT1BFTiksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigiZW9mIiwganNfc29ja2V0X2dldCwgMCwgUFJPUF9FT0YpLAogICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoIm1vZGUiLCBqc19zb2NrZXRfZ2V0LCBqc19hc3luY3NvY2tldF9zZXQsIFBST1BfTU9ERSksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigicmV0IiwganNfc29ja2V0X2dldCwganNfYXN5bmNzb2NrZXRfc2V0LCBQUk9QX1JFVCksCiAgICBKU19DR0VUU0VUX01BR0lDX0RFRigibm9uYmxvY2siLCBqc19zb2NrZXRfZ2V0LCBqc19hc3luY3NvY2tldF9zZXQsIFBST1BfTk9OQkxPQ0spLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJuZGVsYXkiLCAwLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfTkRFTEFZKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiYmluZCIsIDEsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9CSU5EKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigiY29ubmVjdCIsIDEsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9DT05ORUNUKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigibGlzdGVuIiwgMCwganNfc29ja2V0X21ldGhvZCwgTUVUSE9EX0xJU1RFTiksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImFjY2VwdCIsIDAsIGpzX2FzeW5jc29ja2V0X21ldGhvZCwgTUVUSE9EX0FDQ0VQVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNlbmQiLCAxLCBqc19hc3luY3NvY2tldF9tZXRob2QsIE1FVEhPRF9TRU5EKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2VuZHRvIiwgMiwganNfYXN5bmNzb2NrZXRfbWV0aG9kLCBNRVRIT0RfU0VORFRPKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigicmVjdiIsIDEsIGpzX2FzeW5jc29ja2V0X21ldGhvZCwgTUVUSE9EX1JFQ1YpLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJyZWN2ZnJvbSIsIDIsIGpzX2FzeW5jc29ja2V0X21ldGhvZCwgTUVUSE9EX1JFQ1ZGUk9NKSwKICAgIEpTX0NGVU5DX01BR0lDX0RFRigic2h1dGRvd24iLCAxLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfU0hVVERPV04pLAogICAgSlNfQ0ZVTkNfTUFHSUNfREVGKCJjbG9zZSIsIDAsIGpzX3NvY2tldF9tZXRob2QsIE1FVEhPRF9DTE9TRSksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoImdldHNvY2tvcHQiLCAzLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfR0VUU09DS09QVCksCiAgICBKU19DRlVOQ19NQUdJQ19ERUYoInNldHNvY2tvcHQiLCAzLCBqc19zb2NrZXRfbWV0aG9kLCBNRVRIT0RfU0VUU09DS09QVCksCiAgIEpTX0NGVU5DX0RFRigidmFsdWVPZiIsIDAsIGpzX3NvY2tldF92YWx1ZW9mKSwKICAgIEpTX0FMSUFTX0RFRigiW1N5bWJvbC50b1ByaW1pdGl2ZV0iLCAidmFsdWVPZiIpLAogICAgSlNfUFJPUF9TVFJJTkdfREVGKCJbU3ltYm9sLnRvU3RyaW5nVGFnXSIsICJBc3luY1NvY2tldCIsIEpTX1BST1BfQ09ORklHVVJBQkxFKSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zb2NrZXRfc3RhdGljX2Z1bmNzW10gPSB7CiAgICBKU19DRlVOQ19ERUYoImFkb3B0IiwgMSwganNfc29ja2V0X2Fkb3B0KSwKfTsKCnN0YXRpYyBjb25zdCBKU0NGdW5jdGlvbkxpc3RFbnRyeSBqc19zb2NrZXRzX2Vycm5vc1tdID0gewojaWZkZWYgRVBFUk0KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRVBFUk0pLAojZW5kaWYKI2lmZGVmIEVOT0VOVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFTk9FTlQpLAojZW5kaWYKI2lmZGVmIEVJTlRSCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVJTlRSKSwKI2VuZGlmCiNpZmRlZiBFSU8KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRUlPKSwKI2VuZGlmCiNpZmRlZiBFQkFERgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFQkFERiksCiNlbmRpZgojaWZkZWYgRUFHQUlOCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVBR0FJTiksCiNlbmRpZgojaWZkZWYgRVdPVUxEQkxPQ0sKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRVdPVUxEQkxPQ0spLAojZW5kaWYKI2lmZGVmIEVOT01FTQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFTk9NRU0pLAojZW5kaWYKI2lmZGVmIEVBQ0NFUwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFQUNDRVMpLAojZW5kaWYKI2lmZGVmIEVGQVVMVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFRkFVTFQpLAojZW5kaWYKI2lmZGVmIEVOT1RESVIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRU5PVERJUiksCiNlbmRpZgojaWZkZWYgRUlTRElSCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVJU0RJUiksCiNlbmRpZgojaWZkZWYgRUlOVkFMCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVJTlZBTCksCiNlbmRpZgojaWZkZWYgRU5GSUxFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVORklMRSksCiNlbmRpZgojaWZkZWYgRU1GSUxFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVNRklMRSksCiNlbmRpZgojaWZkZWYgRU5PU1BDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVOT1NQQyksCiNlbmRpZgojaWZkZWYgRVJPRlMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRVJPRlMpLAojZW5kaWYKI2lmZGVmIEVQSVBFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVQSVBFKSwKI2VuZGlmCiNpZmRlZiBFTkFNRVRPT0xPTkcKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRU5BTUVUT09MT05HKSwKI2VuZGlmCiNpZmRlZiBFTk9MSU5LCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVOT0xJTkspLAojZW5kaWYKI2lmZGVmIEVQUk9UTwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFUFJPVE8pLAojZW5kaWYKI2lmZGVmIEVOT1RTT0NLCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVOT1RTT0NLKSwKI2VuZGlmCiNpZmRlZiBFREVTVEFERFJSRVEKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRURFU1RBRERSUkVRKSwKI2VuZGlmCiNpZmRlZiBFTVNHU0laRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFTVNHU0laRSksCiNlbmRpZgojaWZkZWYgRVBST1RPVFlQRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFUFJPVE9UWVBFKSwKI2VuZGlmCiNpZmRlZiBFTk9QUk9UT09QVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFTk9QUk9UT09QVCksCiNlbmRpZgojaWZkZWYgRVBST1RPTk9TVVBQT1JUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVQUk9UT05PU1VQUE9SVCksCiNlbmRpZgojaWZkZWYgRU9QTk9UU1VQUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFT1BOT1RTVVBQKSwKI2VuZGlmCiNpZmRlZiBFQUZOT1NVUFBPUlQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRUFGTk9TVVBQT1JUKSwKI2VuZGlmCiNpZmRlZiBFQUREUklOVVNFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVBRERSSU5VU0UpLAojZW5kaWYKI2lmZGVmIEVBRERSTk9UQVZBSUwKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRUFERFJOT1RBVkFJTCksCiNlbmRpZgojaWZkZWYgRU5FVERPV04KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRU5FVERPV04pLAojZW5kaWYKI2lmZGVmIEVORVRVTlJFQUNICiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVORVRVTlJFQUNIKSwKI2VuZGlmCiNpZmRlZiBFQ09OTkFCT1JURUQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRUNPTk5BQk9SVEVEKSwKI2VuZGlmCiNpZmRlZiBFQ09OTlJFU0VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVDT05OUkVTRVQpLAojZW5kaWYKI2lmZGVmIEVOT0JVRlMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRU5PQlVGUyksCiNlbmRpZgojaWZkZWYgRUlTQ09OTgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFSVNDT05OKSwKI2VuZGlmCiNpZmRlZiBFTk9UQ09OTgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShFTk9UQ09OTiksCiNlbmRpZgojaWZkZWYgRVRJTUVET1VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVUSU1FRE9VVCksCiNlbmRpZgojaWZkZWYgRUNPTk5SRUZVU0VECiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVDT05OUkVGVVNFRCksCiNlbmRpZgojaWZkZWYgRUhPU1RVTlJFQUNICiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVIT1NUVU5SRUFDSCksCiNlbmRpZgojaWZkZWYgRUFMUkVBRFkKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoRUFMUkVBRFkpLAojZW5kaWYKI2lmZGVmIEVJTlBST0dSRVNTCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEVJTlBST0dSRVNTKSwKI2VuZGlmCn07CgpzdGF0aWMgY29uc3QgSlNDRnVuY3Rpb25MaXN0RW50cnkganNfc29ja2V0c19kZWZpbmVzW10gPSB7CiNpZmRlZiBBRl9VTlNQRUMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfVU5TUEVDKSwKI2VuZGlmCiNpZmRlZiBBRl9MT0NBTAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9MT0NBTCksCiNlbmRpZgojaWZkZWYgQUZfVU5JWAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9VTklYKSwKI2VuZGlmCiNpZmRlZiBBRl9JTkVUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0lORVQpLAojZW5kaWYKI2lmZGVmIEFGX0FYMjUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfQVgyNSksCiNlbmRpZgojaWZkZWYgQUZfSVBYCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0lQWCksCiNlbmRpZgojaWZkZWYgQUZfQVBQTEVUQUxLCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0FQUExFVEFMSyksCiNlbmRpZgojaWZkZWYgQUZfTkVUUk9NCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX05FVFJPTSksCiNlbmRpZgojaWZkZWYgQUZfQlJJREdFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0JSSURHRSksCiNlbmRpZgojaWZkZWYgQUZfQVRNUFZDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0FUTVBWQyksCiNlbmRpZgojaWZkZWYgQUZfWDI1CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1gyNSksCiNlbmRpZgojaWZkZWYgQUZfSU5FVDYKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfSU5FVDYpLAojZW5kaWYKI2lmZGVmIEFGX1JPU0UKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfUk9TRSksCiNlbmRpZgojaWZkZWYgQUZfREVDbmV0CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0RFQ25ldCksCiNlbmRpZgojaWZkZWYgQUZfTkVUQkVVSQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9ORVRCRVVJKSwKI2VuZGlmCiNpZmRlZiBBRl9TRUNVUklUWQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9TRUNVUklUWSksCiNlbmRpZgojaWZkZWYgQUZfS0VZCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0tFWSksCiNlbmRpZgojaWZkZWYgQUZfTkVUTElOSwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9ORVRMSU5LKSwKI2VuZGlmCiNpZmRlZiBBRl9ST1VURQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9ST1VURSksCiNlbmRpZgojaWZkZWYgQUZfUEFDS0VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1BBQ0tFVCksCiNlbmRpZgojaWZkZWYgQUZfQVNICiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0FTSCksCiNlbmRpZgojaWZkZWYgQUZfRUNPTkVUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0VDT05FVCksCiNlbmRpZgojaWZkZWYgQUZfQVRNU1ZDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0FUTVNWQyksCiNlbmRpZgojaWZkZWYgQUZfU05BCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1NOQSksCiNlbmRpZgojaWZkZWYgQUZfSVJEQQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9JUkRBKSwKI2VuZGlmCiNpZmRlZiBBRl9QUFBPWAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9QUFBPWCksCiNlbmRpZgojaWZkZWYgQUZfV0FOUElQRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9XQU5QSVBFKSwKI2VuZGlmCiNpZmRlZiBBRl9MTEMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfTExDKSwKI2VuZGlmCiNpZmRlZiBBRl9JQgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9JQiksCiNlbmRpZgojaWZkZWYgQUZfTVBMUwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9NUExTKSwKI2VuZGlmCiNpZmRlZiBBRl9DQU4KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfQ0FOKSwKI2VuZGlmCiNpZmRlZiBBRl9USVBDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1RJUEMpLAojZW5kaWYKI2lmZGVmIEFGX0JMVUVUT09USAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9CTFVFVE9PVEgpLAojZW5kaWYKI2lmZGVmIEFGX0lVQ1YKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfSVVDViksCiNlbmRpZgojaWZkZWYgQUZfUlhSUEMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfUlhSUEMpLAojZW5kaWYKI2lmZGVmIEFGX0lTRE4KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfSVNETiksCiNlbmRpZgojaWZkZWYgQUZfUEhPTkVUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1BIT05FVCksCiNlbmRpZgojaWZkZWYgQUZfSUVFRTgwMjE1NAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9JRUVFODAyMTU0KSwKI2VuZGlmCiNpZmRlZiBBRl9DQUlGCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX0NBSUYpLAojZW5kaWYKI2lmZGVmIEFGX0FMRwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9BTEcpLAojZW5kaWYKI2lmZGVmIEFGX05GQwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShBRl9ORkMpLAojZW5kaWYKI2lmZGVmIEFGX1ZTT0NLCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKEFGX1ZTT0NLKSwKI2VuZGlmCiNpZmRlZiBBRl9NQVgKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoQUZfTUFYKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0hPUE9QVFMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19IT1BPUFRTKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0lQCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fSVApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fSUNNUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0lDTVApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fSUdNUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0lHTVApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fSVBJUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0lQSVApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fVENQCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fVENQKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0VHUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0VHUCksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19QVVAKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19QVVApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fVURQCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fVURQKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0lEUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0lEUCksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19JUFY2CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fSVBWNiksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19ST1VUSU5HCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fUk9VVElORyksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19GUkFHTUVOVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0ZSQUdNRU5UKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX1JTVlAKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19SU1ZQKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0dSRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0dSRSksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19FU1AKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19FU1ApLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fQUgKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19BSCksCiNlbmRpZgojaWZkZWYgSVBQUk9UT19JQ01QVjYKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19JQ01QVjYpLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fTk9ORQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX05PTkUpLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fRFNUT1BUUwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX0RTVE9QVFMpLAojZW5kaWYKI2lmZGVmIElQUFJPVE9fUElNCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKElQUFJPVE9fUElNKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX0NPTVAKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19DT01QKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX1NDVFAKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19TQ1RQKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX1VEUExJVEUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoSVBQUk9UT19VRFBMSVRFKSwKI2VuZGlmCiNpZmRlZiBJUFBST1RPX1JBVwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShJUFBST1RPX1JBVyksCiNlbmRpZgojaWZkZWYgUEZfVU5TUEVDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX1VOU1BFQyksCiNlbmRpZgojaWZkZWYgUEZfTE9DQUwKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfTE9DQUwpLAojZW5kaWYKI2lmZGVmIFBGX1VOSVgKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfVU5JWCksCiNlbmRpZgojaWZkZWYgUEZfSU5FVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9JTkVUKSwKI2VuZGlmCiNpZmRlZiBQRl9BWDI1CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0FYMjUpLAojZW5kaWYKI2lmZGVmIFBGX0lQWAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9JUFgpLAojZW5kaWYKI2lmZGVmIFBGX0FQUExFVEFMSwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9BUFBMRVRBTEspLAojZW5kaWYKI2lmZGVmIFBGX05FVFJPTQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9ORVRST00pLAojZW5kaWYKI2lmZGVmIFBGX0JSSURHRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9CUklER0UpLAojZW5kaWYKI2lmZGVmIFBGX0FUTVBWQwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9BVE1QVkMpLAojZW5kaWYKI2lmZGVmIFBGX1gyNQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9YMjUpLAojZW5kaWYKI2lmZGVmIFBGX0lORVQ2CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0lORVQ2KSwKI2VuZGlmCiNpZmRlZiBQRl9ST1NFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX1JPU0UpLAojZW5kaWYKI2lmZGVmIFBGX0RFQ25ldAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9ERUNuZXQpLAojZW5kaWYKI2lmZGVmIFBGX05FVEJFVUkKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfTkVUQkVVSSksCiNlbmRpZgojaWZkZWYgUEZfU0VDVVJJVFkKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfU0VDVVJJVFkpLAojZW5kaWYKI2lmZGVmIFBGX0tFWQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9LRVkpLAojZW5kaWYKI2lmZGVmIFBGX05FVExJTksKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfTkVUTElOSyksCiNlbmRpZgojaWZkZWYgUEZfUk9VVEUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfUk9VVEUpLAojZW5kaWYKI2lmZGVmIFBGX1BBQ0tFVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9QQUNLRVQpLAojZW5kaWYKI2lmZGVmIFBGX0FTSAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9BU0gpLAojZW5kaWYKI2lmZGVmIFBGX0VDT05FVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9FQ09ORVQpLAojZW5kaWYKI2lmZGVmIFBGX0FUTVNWQwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9BVE1TVkMpLAojZW5kaWYKI2lmZGVmIFBGX1NOQQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9TTkEpLAojZW5kaWYKI2lmZGVmIFBGX0lSREEKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfSVJEQSksCiNlbmRpZgojaWZkZWYgUEZfUFBQT1gKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfUFBQT1gpLAojZW5kaWYKI2lmZGVmIFBGX1dBTlBJUEUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfV0FOUElQRSksCiNlbmRpZgojaWZkZWYgUEZfTExDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0xMQyksCiNlbmRpZgojaWZkZWYgUEZfSUIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfSUIpLAojZW5kaWYKI2lmZGVmIFBGX01QTFMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfTVBMUyksCiNlbmRpZgojaWZkZWYgUEZfQ0FOCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0NBTiksCiNlbmRpZgojaWZkZWYgUEZfVElQQwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9USVBDKSwKI2VuZGlmCiNpZmRlZiBQRl9CTFVFVE9PVEgKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfQkxVRVRPT1RIKSwKI2VuZGlmCiNpZmRlZiBQRl9JVUNWCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0lVQ1YpLAojZW5kaWYKI2lmZGVmIFBGX1JYUlBDCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX1JYUlBDKSwKI2VuZGlmCiNpZmRlZiBQRl9JU0ROCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX0lTRE4pLAojZW5kaWYKI2lmZGVmIFBGX1BIT05FVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9QSE9ORVQpLAojZW5kaWYKI2lmZGVmIFBGX0lFRUU4MDIxNTQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfSUVFRTgwMjE1NCksCiNlbmRpZgojaWZkZWYgUEZfQ0FJRgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9DQUlGKSwKI2VuZGlmCiNpZmRlZiBQRl9BTEcKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfQUxHKSwKI2VuZGlmCiNpZmRlZiBQRl9ORkMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUEZfTkZDKSwKI2VuZGlmCiNpZmRlZiBQRl9WU09DSwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQRl9WU09DSyksCiNlbmRpZgojaWZkZWYgUEZfTUFYCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBGX01BWCksCiNlbmRpZgojaWZkZWYgUE9MTElOCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBPTExJTiksCiNlbmRpZgojaWZkZWYgUE9MTFBSSQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQT0xMUFJJKSwKI2VuZGlmCiNpZmRlZiBQT0xMT1VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBPTExPVVQpLAojZW5kaWYKI2lmZGVmIFBPTExFUlIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUE9MTEVSUiksCiNlbmRpZgojaWZkZWYgUE9MTEhVUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQT0xMSFVQKSwKI2VuZGlmCiNpZmRlZiBQT0xMTlZBTAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQT0xMTlZBTCksCiNlbmRpZgojaWZkZWYgUE9MTFJETk9STQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQT0xMUkROT1JNKSwKI2VuZGlmCiNpZmRlZiBQT0xMUkRCQU5ECiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFBPTExSREJBTkQpLAojZW5kaWYKI2lmZGVmIFBPTExXUk5PUk0KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoUE9MTFdSTk9STSksCiNlbmRpZgojaWZkZWYgUE9MTFdSQkFORAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShQT0xMV1JCQU5EKSwKI2VuZGlmCiNpZmRlZiBTSFVUX1dSCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNIVVRfV1IpLAojZW5kaWYKI2lmZGVmIFNIVVRfUkRXUgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTSFVUX1JEV1IpLAojZW5kaWYKI2lmZGVmIFNPX0RFQlVHCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0RFQlVHKSwKI2VuZGlmCiNpZmRlZiBTT19SRVVTRUFERFIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUkVVU0VBRERSKSwKI2VuZGlmCiNpZmRlZiBTT19FUlJPUgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19FUlJPUiksCiNlbmRpZgojaWZkZWYgU09fRE9OVFJPVVRFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0RPTlRST1VURSksCiNlbmRpZgojaWZkZWYgU09fQlJPQURDQVNUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0JST0FEQ0FTVCksCiNlbmRpZgojaWZkZWYgU09fU05EQlVGCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1NOREJVRiksCiNlbmRpZgojaWZkZWYgU09fUkNWQlVGCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1JDVkJVRiksCiNlbmRpZgojaWZkZWYgU09fS0VFUEFMSVZFCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0tFRVBBTElWRSksCiNlbmRpZgojaWZkZWYgU09fT09CSU5MSU5FCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX09PQklOTElORSksCiNlbmRpZgojaWZkZWYgU09fTk9fQ0hFQ0sKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fTk9fQ0hFQ0spLAojZW5kaWYKI2lmZGVmIFNPX1BSSU9SSVRZCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1BSSU9SSVRZKSwKI2VuZGlmCiNpZmRlZiBTT19CU0RDT01QQVQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fQlNEQ09NUEFUKSwKI2VuZGlmCiNpZmRlZiBTT19SRVVTRVBPUlQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUkVVU0VQT1JUKSwKI2VuZGlmCiNpZmRlZiBTT19QQVNTQ1JFRAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19QQVNTQ1JFRCksCiNlbmRpZgojaWZkZWYgU09fUEVFUkNSRUQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUEVFUkNSRUQpLAojZW5kaWYKI2lmZGVmIFNPX1JDVkxPV0FUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1JDVkxPV0FUKSwKI2VuZGlmCiNpZmRlZiBTT19TTkRMT1dBVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19TTkRMT1dBVCksCiNlbmRpZgojaWZkZWYgU09fUkNWVElNRU8KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUkNWVElNRU8pLAojZW5kaWYKI2lmZGVmIFNPX1NORFRJTUVPCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1NORFRJTUVPKSwKI2VuZGlmCiNpZmRlZiBTT19TRUNVUklUWV9BVVRIRU5USUNBVElPTgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19TRUNVUklUWV9BVVRIRU5USUNBVElPTiksCiNlbmRpZgojaWZkZWYgU09fU0VDVVJJVFlfRU5DUllQVElPTl9UUkFOU1BPUlQKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fU0VDVVJJVFlfRU5DUllQVElPTl9UUkFOU1BPUlQpLAojZW5kaWYKI2lmZGVmIFNPX1NFQ1VSSVRZX0VOQ1JZUFRJT05fTkVUV09SSwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19TRUNVUklUWV9FTkNSWVBUSU9OX05FVFdPUkspLAojZW5kaWYKI2lmZGVmIFNPX0JJTkRUT0RFVklDRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19CSU5EVE9ERVZJQ0UpLAojZW5kaWYKI2lmZGVmIFNPX0FUVEFDSF9GSUxURVIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fQVRUQUNIX0ZJTFRFUiksCiNlbmRpZgojaWZkZWYgU09fR0VUX0ZJTFRFUgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19HRVRfRklMVEVSKSwKI2VuZGlmCiNpZmRlZiBTT19ERVRBQ0hfQlBGCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0RFVEFDSF9CUEYpLAojZW5kaWYKI2lmZGVmIFNPX0RFVEFDSF9GSUxURVIKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fREVUQUNIX0ZJTFRFUiksCiNlbmRpZgojaWZkZWYgU09fUEVFUk5BTUUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUEVFUk5BTUUpLAojZW5kaWYKI2lmZGVmIFNPX1RJTUVTVEFNUAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19USU1FU1RBTVApLAojZW5kaWYKI2lmZGVmIFNPX0FDQ0VQVENPTk4KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fQUNDRVBUQ09OTiksCiNlbmRpZgojaWZkZWYgU09fUEVFUlNFQwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19QRUVSU0VDKSwKI2VuZGlmCiNpZmRlZiBTT19TTkRCVUZGT1JDRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19TTkRCVUZGT1JDRSksCiNlbmRpZgojaWZkZWYgU09fUkNWQlVGRk9SQ0UKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUkNWQlVGRk9SQ0UpLAojZW5kaWYKI2lmZGVmIFNPX1BBU1NTRUMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUEFTU1NFQyksCiNlbmRpZgojaWZkZWYgU09fVElNRVNUQU1QTlMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fVElNRVNUQU1QTlMpLAojZW5kaWYKI2lmZGVmIFNPX01BUksKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fTUFSSyksCiNlbmRpZgojaWZkZWYgU09fVElNRVNUQU1QSU5HCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1RJTUVTVEFNUElORyksCiNlbmRpZgojaWZkZWYgU09fUFJPVE9DT0wKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUFJPVE9DT0wpLAojZW5kaWYKI2lmZGVmIFNPX0RPTUFJTgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19ET01BSU4pLAojZW5kaWYKI2lmZGVmIFNPX1JYUV9PVkZMCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX1JYUV9PVkZMKSwKI2VuZGlmCiNpZmRlZiBTT19XSUZJX1NUQVRVUwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19XSUZJX1NUQVRVUyksCiNlbmRpZgojaWZkZWYgU09fUEVFS19PRkYKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fUEVFS19PRkYpLAojZW5kaWYKI2lmZGVmIFNPX05PRkNTCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX05PRkNTKSwKI2VuZGlmCiNpZmRlZiBTT19MT0NLX0ZJTFRFUgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19MT0NLX0ZJTFRFUiksCiNlbmRpZgojaWZkZWYgU09fU0VMRUNUX0VSUl9RVUVVRQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19TRUxFQ1RfRVJSX1FVRVVFKSwKI2VuZGlmCiNpZmRlZiBTT19CVVNZX1BPTEwKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fQlVTWV9QT0xMKSwKI2VuZGlmCiNpZmRlZiBTT19NQVhfUEFDSU5HX1JBVEUKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09fTUFYX1BBQ0lOR19SQVRFKSwKI2VuZGlmCiNpZmRlZiBTT19CUEZfRVhURU5TSU9OUwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19CUEZfRVhURU5TSU9OUyksCiNlbmRpZgojaWZkZWYgU09fSU5DT01JTkdfQ1BVCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPX0lOQ09NSU5HX0NQVSksCiNlbmRpZgojaWZkZWYgU09fQVRUQUNIX0JQRgogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT19BVFRBQ0hfQlBGKSwKI2VuZGlmCiNpZmRlZiBTT0NLX1NUUkVBTQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0NLX1NUUkVBTSksCiNlbmRpZgojaWZkZWYgU09DS19ER1JBTQogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0NLX0RHUkFNKSwKI2VuZGlmCiNpZmRlZiBTT0NLX1JBVwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0NLX1JBVyksCiNlbmRpZgojaWZkZWYgU09DS19SRE0KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09DS19SRE0pLAojZW5kaWYKI2lmZGVmIFNPQ0tfU0VRUEFDS0VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPQ0tfU0VRUEFDS0VUKSwKI2VuZGlmCiNpZmRlZiBTT0NLX0RDQ1AKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09DS19EQ0NQKSwKI2VuZGlmCiNpZmRlZiBTT0NLX1BBQ0tFVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0NLX1BBQ0tFVCksCiNlbmRpZgojaWZkZWYgU09DS19OT05CTE9DSwogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0NLX05PTkJMT0NLKSwKI2VuZGlmCiNpZmRlZiBTT0NLX0NMT0VYRUMKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09DS19DTE9FWEVDKSwKI2VuZGlmCiNpZmRlZiBTT0xfU09DS0VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPTF9TT0NLRVQpLAojZW5kaWYKI2lmZGVmIFNPTF9JUFY2CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPTF9JUFY2KSwKI2VuZGlmCiNpZmRlZiBTT0xfSUNNUFY2CiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPTF9JQ01QVjYpLAojZW5kaWYKI2lmZGVmIFNPTF9SQVcKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09MX1JBVyksCiNlbmRpZgojaWZkZWYgU09MX0RFQ05FVAogICAgSlNfQ09OU1RBTlRfTk9ORU5VTUVSQUJMRShTT0xfREVDTkVUKSwKI2VuZGlmCiNpZmRlZiBTT0xfUEFDS0VUCiAgICBKU19DT05TVEFOVF9OT05FTlVNRVJBQkxFKFNPTF9QQUNLRVQpLAojZW5kaWYKI2lmZGVmIFNPTF9BVE0KICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09MX0FUTSksCiNlbmRpZgojaWZkZWYgU09MX0lSREEKICAgIEpTX0NPTlNUQU5UX05PTkVOVU1FUkFCTEUoU09MX0lSREEpLAojZW5kaWYKfTsKCnN0YXRpYyBpbnQKanNfc29ja2V0c19pbml0KEpTQ29udGV4dCogY3R4LCBKU01vZHVsZURlZiogbSkgewogIGpzX3N5c2NhbGxlcnJvcl9pbml0KGN0eCwgbSk7CgogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfc29ja2FkZHJfY2xhc3NfaWQsICZqc19zb2NrYWRkcl9jbGFzcyk7CgogIHNvY2thZGRyX2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfc29ja2FkZHJfY29uc3RydWN0b3IsICJTb2NrQWRkciIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICBzb2NrYWRkcl9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHNvY2thZGRyX3Byb3RvLCBqc19zb2NrYWRkcl9wcm90b19mdW5jcywgY291bnRvZihqc19zb2NrYWRkcl9wcm90b19mdW5jcykpOwoKICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfc29ja2FkZHJfY2xhc3NfaWQsIHNvY2thZGRyX3Byb3RvKTsKICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIHNvY2thZGRyX2N0b3IsIHNvY2thZGRyX3Byb3RvKTsKCiAgSlNfTmV3Q2xhc3NJRCgmanNfc29ja2V0X2NsYXNzX2lkKTsKICBKU19OZXdDbGFzcyhKU19HZXRSdW50aW1lKGN0eCksIGpzX3NvY2tldF9jbGFzc19pZCwgJmpzX3NvY2tldF9jbGFzcyk7CgogIHNvY2tldF9jdG9yID0gSlNfTmV3Q0Z1bmN0aW9uMihjdHgsIGpzX3N5bmNzb2NrZXRfY29uc3RydWN0b3IsICJTb2NrZXQiLCAxLCBKU19DRlVOQ19jb25zdHJ1Y3RvciwgMCk7CiAgc29ja2V0X3Byb3RvID0gSlNfTmV3T2JqZWN0KGN0eCk7CgogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgc29ja2V0X3Byb3RvLCBqc19zb2NrZXRfcHJvdG9fZnVuY3MsIGNvdW50b2YoanNfc29ja2V0X3Byb3RvX2Z1bmNzKSk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBzb2NrZXRfY3RvciwganNfc29ja2V0X3N0YXRpY19mdW5jcywgY291bnRvZihqc19zb2NrZXRfc3RhdGljX2Z1bmNzKSk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBzb2NrZXRfY3RvciwganNfc29ja2V0c19lcnJub3MsIGNvdW50b2YoanNfc29ja2V0c19lcnJub3MpKTsKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIHNvY2tldF9jdG9yLCBqc19zb2NrZXRzX2RlZmluZXMsIGNvdW50b2YoanNfc29ja2V0c19kZWZpbmVzKSk7CgogIEpTX1NldENsYXNzUHJvdG8oY3R4LCBqc19zb2NrZXRfY2xhc3NfaWQsIHNvY2tldF9wcm90byk7CiAgSlNfU2V0Q29uc3RydWN0b3IoY3R4LCBzb2NrZXRfY3Rvciwgc29ja2V0X3Byb3RvKTsKCiAgSlNfTmV3Q2xhc3NJRCgmanNfYXN5bmNzb2NrZXRfY2xhc3NfaWQpOwogIEpTX05ld0NsYXNzKEpTX0dldFJ1bnRpbWUoY3R4KSwganNfYXN5bmNzb2NrZXRfY2xhc3NfaWQsICZqc19hc3luY3NvY2tldF9jbGFzcyk7CgogIGFzeW5jc29ja2V0X2N0b3IgPSBKU19OZXdDRnVuY3Rpb24yKGN0eCwganNfYXN5bmNzb2NrZXRfY29uc3RydWN0b3IsICJBc3luY1NvY2tldCIsIDEsIEpTX0NGVU5DX2NvbnN0cnVjdG9yLCAwKTsKICBhc3luY3NvY2tldF9wcm90byA9IEpTX05ld09iamVjdChjdHgpOwoKICBKU19TZXRQcm9wZXJ0eUZ1bmN0aW9uTGlzdChjdHgsIGFzeW5jc29ja2V0X3Byb3RvLCBqc19hc3luY3NvY2tldF9wcm90b19mdW5jcywgY291bnRvZihqc19hc3luY3NvY2tldF9wcm90b19mdW5jcykpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgYXN5bmNzb2NrZXRfY3RvciwganNfc29ja2V0X3N0YXRpY19mdW5jcywgY291bnRvZihqc19zb2NrZXRfc3RhdGljX2Z1bmNzKSk7CiAgSlNfU2V0UHJvcGVydHlGdW5jdGlvbkxpc3QoY3R4LCBhc3luY3NvY2tldF9jdG9yLCBqc19zb2NrZXRzX2Vycm5vcywgY291bnRvZihqc19zb2NrZXRzX2Vycm5vcykpOwogIEpTX1NldFByb3BlcnR5RnVuY3Rpb25MaXN0KGN0eCwgYXN5bmNzb2NrZXRfY3RvciwganNfc29ja2V0c19kZWZpbmVzLCBjb3VudG9mKGpzX3NvY2tldHNfZGVmaW5lcykpOwoKICBKU19TZXRDbGFzc1Byb3RvKGN0eCwganNfYXN5bmNzb2NrZXRfY2xhc3NfaWQsIGFzeW5jc29ja2V0X3Byb3RvKTsKICBKU19TZXRDb25zdHJ1Y3RvcihjdHgsIGFzeW5jc29ja2V0X2N0b3IsIGFzeW5jc29ja2V0X3Byb3RvKTsKCiAgaWYobSkgewogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIlNvY2tBZGRyIiwgc29ja2FkZHJfY3Rvcik7CiAgICBKU19TZXRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiU29ja2V0Iiwgc29ja2V0X2N0b3IpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0KGN0eCwgbSwgIkFzeW5jU29ja2V0IiwgYXN5bmNzb2NrZXRfY3Rvcik7CgogICAgY29uc3QgY2hhciogbW9kdWxlX25hbWUgPSBtb2R1bGVfbmFtZWNzdHIoY3R4LCBtKTsKCiAgICBpZighc3RyY21wKG1vZHVsZV9uYW1lLCAic29ja2V0IikpCiAgICAgIEpTX1NldE1vZHVsZUV4cG9ydChjdHgsIG0sICJkZWZhdWx0Iiwgc29ja2V0X2N0b3IpOwoKICAgIEpTX0ZyZWVDU3RyaW5nKGN0eCwgbW9kdWxlX25hbWUpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX3NvY2tldHNfZnVuY3MsIGNvdW50b2YoanNfc29ja2V0c19mdW5jcykpOwogICAgSlNfU2V0TW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX3NvY2tldHNfZGVmaW5lcywgY291bnRvZihqc19zb2NrZXRzX2RlZmluZXMpKTsKICAgIEpTX1NldE1vZHVsZUV4cG9ydExpc3QoY3R4LCBtLCBqc19zb2NrZXRzX2Vycm5vcywgY291bnRvZihqc19zb2NrZXRzX2Vycm5vcykpOwogIH0KCiAgcmV0dXJuIDA7Cn0KCiNpZmRlZiBKU19TT0NLRVRTX01PRFVMRQojZGVmaW5lIEpTX0lOSVRfTU9EVUxFIGpzX2luaXRfbW9kdWxlCiNlbHNlCiNkZWZpbmUgSlNfSU5JVF9NT0RVTEUganNfaW5pdF9tb2R1bGVfc29ja2V0cwojZW5kaWYKClZJU0lCTEUgSlNNb2R1bGVEZWYqCkpTX0lOSVRfTU9EVUxFKEpTQ29udGV4dCogY3R4LCBjb25zdCBjaGFyKiBtb2R1bGVfbmFtZSkgewogIEpTTW9kdWxlRGVmKiBtOwoKICBpZigobSA9IEpTX05ld0NNb2R1bGUoY3R4LCBtb2R1bGVfbmFtZSwganNfc29ja2V0c19pbml0KSkpIHsKICAgIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJTeXNjYWxsRXJyb3IiKTsKICAgIEpTX0FkZE1vZHVsZUV4cG9ydChjdHgsIG0sICJTb2NrQWRkciIpOwogICAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIlNvY2tldCIpOwogICAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgIkFzeW5jU29ja2V0Iik7CiAgICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAiZmRfc2V0Iik7CiAgICBKU19BZGRNb2R1bGVFeHBvcnQoY3R4LCBtLCAic29ja2xlbl90Iik7CgogICAgc2l6ZV90IG4gPSBzdHJfcmNocihtb2R1bGVfbmFtZSwgJy8nKTsKCiAgICBpZihtb2R1bGVfbmFtZVtuXSkKICAgICAgKytuOwoKICAgIHNpemVfdCBsZW4gPSBzdHJfcmNocigmbW9kdWxlX25hbWVbbl0sICcuJyk7CgogICAgaWYoIXN0cm5jbXAoJm1vZHVsZV9uYW1lW25dLCAic29ja2V0cyIsIGxlbikpIHsKICAgICAgSlNfQWRkTW9kdWxlRXhwb3J0KGN0eCwgbSwgImRlZmF1bHQiKTsKICAgICAgSlNfQWRkTW9kdWxlRXhwb3J0TGlzdChjdHgsIG0sIGpzX3NvY2tldHNfZnVuY3MsIGNvdW50b2YoanNfc29ja2V0c19mdW5jcykpOwogICAgICBKU19BZGRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfc29ja2V0c19kZWZpbmVzLCBjb3VudG9mKGpzX3NvY2tldHNfZGVmaW5lcykpOwogICAgICBKU19BZGRNb2R1bGVFeHBvcnRMaXN0KGN0eCwgbSwganNfc29ja2V0c19lcnJub3MsIGNvdW50b2YoanNfc29ja2V0c19lcnJub3MpKTsKICAgIH0KICB9CgogIHJldHVybiBtOwp9CgovKioKICogQH0KICovCgAAAAAAAAAArAEBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiYoAAAAAAACJigAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/include/utils.h",
			"settings":
			{
				"buffer_size": 38325,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/quickjs.h",
			"settings":
			{
				"buffer_size": 40037,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 11494,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					90,
					1,
					"insert",
					{
						"characters": ".cath"
					},
					"BQAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAAkEwAAAAAAACUTAAAAAAAAAAAAACUTAAAAAAAAJhMAAAAAAAAAAAAAJhMAAAAAAAAnEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhMAAAAAAAAiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAACYTAAAAAAAAJhMAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAJxMAAAAAAAAnEwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAACYTAAAAAAAAJxMAAAAAAAAAAAAAJxMAAAAAAAAoEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhMAAAAAAAAmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgTAAAAAAAAKhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBMAAAAAAAAoEwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACkTAAAAAAAAKhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRMAAAAAAAApEwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAsEwAAAAAAAAAAAAAsEwAAAAAAAC0TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhMAAAAAAAAqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " console.lo"
					},
					"CwAAAC0TAAAAAAAALhMAAAAAAAAAAAAALhMAAAAAAAAvEwAAAAAAAAAAAAAvEwAAAAAAADATAAAAAAAAAAAAADATAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAyEwAAAAAAAAAAAAAyEwAAAAAAADMTAAAAAAAAAAAAADMTAAAAAAAANBMAAAAAAAAAAAAANBMAAAAAAAA1EwAAAAAAAAAAAAA1EwAAAAAAADYTAAAAAAAAAAAAADYTAAAAAAAANxMAAAAAAAAAAAAANxMAAAAAAAA4EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRMAAAAAAAAtEwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADgTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBMAAAAAAAA4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADgTAAAAAAAAOBMAAAAAAAABAAAAKDgTAAAAAAAAOBMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAORMAAAAAAAA5EwAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADgTAAAAAAAAORMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBMAAAAAAAA4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkTAAAAAAAAOxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORMAAAAAAAA5EwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "proces"
					},
					"BgAAADoTAAAAAAAAOxMAAAAAAAAAAAAAOxMAAAAAAAA8EwAAAAAAAAAAAAA8EwAAAAAAAD0TAAAAAAAAAAAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAAA/EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhMAAAAAAAA6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					6,
					"left_delete",
					null,
					"BgAAAD8TAAAAAAAAPxMAAAAAAAABAAAAcz4TAAAAAAAAPhMAAAAAAAABAAAAZT0TAAAAAAAAPRMAAAAAAAABAAAAYzwTAAAAAAAAPBMAAAAAAAABAAAAbzsTAAAAAAAAOxMAAAAAAAABAAAAcjoTAAAAAAAAOhMAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAQBMAAAAAAABAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADoTAAAAAAAAPBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhMAAAAAAAA6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAADsTAAAAAAAAPBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxMAAAAAAAA7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAADsTAAAAAAAAOxMAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAPBMAAAAAAAA8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "process()"
					},
					"CQAAADsTAAAAAAAAPBMAAAAAAAAAAAAAPBMAAAAAAAA9EwAAAAAAAAAAAAA9EwAAAAAAAD4TAAAAAAAAAAAAAD4TAAAAAAAAPxMAAAAAAAAAAAAAPxMAAAAAAABAEwAAAAAAAAAAAABAEwAAAAAAAEETAAAAAAAAAAAAAEETAAAAAAAAQhMAAAAAAAAAAAAAQhMAAAAAAABDEwAAAAAAAAAAAABDEwAAAAAAAEQTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxMAAAAAAAA7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " exc"
					},
					"BAAAAEQTAAAAAAAARRMAAAAAAAAAAAAARRMAAAAAAABGEwAAAAAAAAAAAABGEwAAAAAAAEcTAAAAAAAAAAAAAEcTAAAAAAAASBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBMAAAAAAABEEwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAEcTAAAAAAAARxMAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAASBMAAAAAAABIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "ception:"
					},
					"CAAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABPEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxMAAAAAAABHEwAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFATAAAAAAAAURMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBMAAAAAAABQEwAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAFETAAAAAAAAUhMAAAAAAAAAAAAAUhMAAAAAAABTEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURMAAAAAAABREwAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABdEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhMAAAAAAABWEwAAAAAAAP///////+9/"
				],
				[
					150,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAIw0AAAAAAAAjDQAAAAAAAAAAAAAAAAAA"
				],
				[
					168,
					10,
					"right_delete",
					null,
					"CgAAAHUOAAAAAAAAdQ4AAAAAAAABAAAACnUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAdQ4AAAAAAAB1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHUOAAAAAAAAdg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQ4AAAAAAAB1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJodAAAAAAAAmh0AAAAAAAAZAAAAcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcQ",
					"AQAAAAAAAAABAAAAmh0AAAAAAACzHQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIwdAAAAAAAAjR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjB0AAAAAAACMHQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0dAAAAAAAAjh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjR0AAAAAAACNHQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAI4dAAAAAAAApx0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjh0AAAAAAACOHQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"right_delete",
					null,
					"AQAAAKsdAAAAAAAAqx0AAAAAAAAMAAAAICAgIGNvbnN0IDsK",
					"AQAAAAAAAAABAAAAqx0AAAAAAAC3HQAAAAAAAAAAAAAAAAAA"
				],
				[
					223,
					1,
					"left_delete",
					null,
					"AQAAAKodAAAAAAAAqh0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAqx0AAAAAAACrHQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAqh0AAAAAAACqHQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 12667,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"right",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/test-alea.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/bin/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/repredator/pre8.png",
		"/home/roman/Projects/plot-cv/repredator/pre7.png",
		"/home/roman/Projects/plot-cv/repredator/pre2.png",
		"/home/roman/Projects/plot-cv/repredator/pre1.png",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/portaudio2.js",
		"/usr/include/portaudio.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/portaudio.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/usr/include/portmidi.h",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/out.tmp",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.jsx,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.jsx,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ConnectDebugger",
			"StartDebugger",
			"'start'",
			"dbg",
			"ws.sendMessa",
			"DebuggerDis",
			"SendRequest",
			"dispatch =",
			"default:",
			"StepIn",
			"Dispatcher",
			"'onMessage",
			"DebuggerDispatcher",
			"LaunchDebugger",
			"ConnectDebu",
			"StartDebugger",
			"'start'",
			"AsyncSocket",
			"AsyncSocket;",
			"AsyncSocket",
			"_RECV:",
			"SendRequest",
			"Continue",
			"_SEND:",
			"sendMessage",
			"NewDebugger",
			"dbg =",
			"globalThis.dbg ",
			"NewDebugger",
			"DebuggerDis",
			"recv\\(",
			"recv",
			"RECEIVE",
			"ConnectDebugger.call",
			"ConnectDebugger",
			"connect\\(",
			"throw new",
			"ConnectDebugger",
			"NewDebugger",
			"DebuggerDispatch",
			"process.handler",
			"process\\(",
			"process",
			"LaunchDebugger",
			"ConnectDebugger",
			"NewDebugger",
			"\\bprocess\\b",
			"process\\(",
			"js_asyncsocket_resolve",
			"METHOD_CONNECT",
			"_CONNECT:",
			"_ptr",
			"js_object",
			"METHOD_SEND",
			"SEND:",
			"resolving_funcs",
			"js_asyncsocket_method",
			"js_asyncsocket_resolve",
			"js_socket_error",
			"JS_SOCKETCALL",
			"_SEND:",
			"js_socket_method",
			"JS_SOCKETCALL\\b",
			"JS_SOCKETCALL",
			"SEND:",
			"sendMessage",
			"stepIn",
			"\\bstepIn\\b",
			"stepIn",
			"ConnectDebugger",
			"process\\(",
			"NewDebugger",
			"process\\(",
			"process\\b",
			"\\bprocess\\b",
			"ConnectDebugger",
			"StartDebugger",
			"Initiate",
			"\\bStart\\b",
			"ws2dbg",
			"'connect'",
			"ws2dbg",
			"'start'",
			"\\bStart\\b",
			"Start\\b",
			"Compact",
			"console.config",
			"\\bIMPORTED\\b",
			"(define|get|set)(|_target)_property",
			"get_target_property",
			"ExternalProject_Add_Step",
			"get_property",
			"ExternalProject_Get_property",
			"SOURCE_DIR",
			"^\\s*ExternalProject_",
			"BUILD_COMMAND",
			"^\\s*ExternalProject_",
			"ExternalProject_",
			"main",
			"getIterators",
			"race",
			"createIteration",
			"wrap",
			"\\bresolve\\b",
			"resolve",
			"\\bpush\\(",
			"DUMP_LEAKS",
			"rt->gc_obj_list",
			"console\\.",
			"stop\\(",
			"setLog\\(",
			"setLog",
			"endRequest",
			"SendReq",
			"sendRequest",
			"'stackTrace'",
			"sendMessage",
			"toHex",
			"sendMessage",
			"'request'",
			"process\\b",
			"sockets.add",
			"ConnectDebugger",
			"ws2dbg",
			"StartDeb",
			"ConnectDebugger",
			"reader",
			"ws2dbg"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"import",
			"",
			"{ArrayBuffer}   buffer",
			"{ArrayBuffer}      buffer",
			"{Object|null}   outputDriverInfo",
			"{ArrayBuffer}   stream",
			", ",
			"m",
			"{ ",
			"export const ",
			"nameKey",
			", GetStream(stream)",
			"GetStream",
			"DereferenceStream",
			"export ",
			"export class ",
			"export class",
			"}\\n\n  get ",
			"); /**",
			"",
			"export const \\1 = ",
			"export function ",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1568,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-server.js",
							"function_name_status_row": 15,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1602,
									1645
								],
								[
									1994,
									2031
								],
								[
									2098,
									2103
								],
								[
									2391,
									2408
								],
								[
									2804,
									2836
								],
								[
									2999,
									3020
								],
								[
									3213,
									3243
								],
								[
									3614,
									3642
								],
								[
									3654,
									3668
								],
								[
									3927,
									3941
								],
								[
									4423,
									4427
								],
								[
									4474,
									4478
								],
								[
									4675,
									4682
								],
								[
									4709,
									4726
								],
								[
									5000,
									5047
								],
								[
									5550,
									5618
								],
								[
									6188,
									6211
								],
								[
									7292,
									7314
								],
								[
									7736,
									7783
								],
								[
									7926,
									7944
								],
								[
									8440,
									8451
								],
								[
									8775,
									8793
								],
								[
									8894,
									8911
								],
								[
									9085,
									9089
								],
								[
									9164,
									9201
								],
								[
									9361,
									9365
								],
								[
									9710,
									9742
								],
								[
									9911,
									9935
								],
								[
									9949,
									9975
								],
								[
									10282,
									10286
								],
								[
									10416,
									10439
								],
								[
									10494,
									10502
								],
								[
									10620,
									10635
								],
								[
									10999,
									11014
								],
								[
									11398,
									11427
								],
								[
									11517,
									11530
								],
								[
									12231,
									12241
								],
								[
									12384,
									12402
								],
								[
									12434,
									12452
								],
								[
									12453,
									12460
								],
								[
									12493,
									12554
								],
								[
									12821,
									12832
								],
								[
									12981,
									13010
								],
								[
									13228,
									13254
								],
								[
									13265,
									13279
								],
								[
									13496,
									13511
								],
								[
									13541,
									13560
								],
								[
									13589,
									13611
								],
								[
									13924,
									13934
								],
								[
									14142,
									14156
								],
								[
									14210,
									14224
								],
								[
									15317,
									15360
								],
								[
									15554,
									15560
								],
								[
									15573,
									15589
								],
								[
									17163,
									17199
								],
								[
									17387,
									17422
								],
								[
									17562,
									17566
								],
								[
									17693,
									17711
								],
								[
									17865,
									17903
								],
								[
									18290,
									18301
								],
								[
									18456,
									18467
								],
								[
									18527,
									18547
								],
								[
									19136,
									19171
								],
								[
									19574,
									19593
								],
								[
									19701,
									19739
								],
								[
									20691,
									20714
								],
								[
									20752,
									20759
								],
								[
									21339,
									21344
								],
								[
									22560,
									22575
								],
								[
									26715,
									26721
								],
								[
									27126,
									27151
								],
								[
									27474,
									27491
								],
								[
									27535,
									27540
								],
								[
									27565,
									27579
								],
								[
									27925,
									27935
								],
								[
									28059,
									28076
								],
								[
									28108,
									28123
								],
								[
									28166,
									28180
								],
								[
									28184,
									28199
								],
								[
									28342,
									28346
								],
								[
									28423,
									28433
								],
								[
									28921,
									28930
								],
								[
									29046,
									29052
								],
								[
									29110,
									29123
								],
								[
									29338,
									29355
								],
								[
									29472,
									29514
								],
								[
									29879,
									29910
								],
								[
									29992,
									30008
								],
								[
									30191,
									30211
								]
							],
							"symlist":
							[
								"  decorate(decorators, obj, ...args)",
								"  scriptName = (arg = scriptArgs[0]) =>",
								"() =>",
								"  signalName = n =>",
								"  checkChildExited(child)",
								"GetLoc(node)",
								"LoadAST(source)",
								"StartREPL(prefix = ",
								", suffix = '')",
								"  .show = arg =>",
								"  k =>",
								"  k =>",
								"  item =>",
								"(acc, keys, i) =>",
								"StartDebugger(args, connect, address)",
								"ConnectDebugger(address, skipToMain = true, callback)",
								"  process(callback)",
								"  sendMessage(msg)",
								"LaunchDebugger(dbg, skipToMain = true)",
								"(...args) =>",
								"() =>",
								"DebuggerDispatcher",
								"  value(name)",
								"  v =>",
								"PrintStackFrame(frame)",
								"  f =>",
								"PrintStack(stack)",
								"(member, obj, prop) =>",
								"  breakpoints(...args)",
								"  b =>",
								"  stackTrace(frame)",
								"  frame =>",
								"  scopes(n)",
								"  waitRun()",
								"  variables(n, depth = 0)",
								"  add = item =>",
								"  toString()",
								"DebuggerDispatcher",
								"(port = 8777) =>",
								"() =>",
								"NewDebugger(args, skipToMain = false, address)",
								"  kill: () =>",
								"OnStopped(msg)",
								"URLWorker(script)",
								"  dataURL = s =>",
								"(push, stop) =>",
								"  postMessage: msg =>",
								"  main(...args)",
								"(a, v) =>",
								"(v, pv, o) =>",
								"(v, pv, o) =>",
								"  createWS(url, callbacks, listen)",
								"() =>",
								"(level, str) =>",
								"  config(req, res)",
								"  files(req, res)",
								"  f =>",
								"  onConnect(ws, req)",
								"  value: function sendMessage(msg)",
								"  onClose(ws)",
								"  onError(ws)",
								"  onRequest(req, resp)",
								"(match, p1, p0, p2, p3, offset) =>",
								"  onMessage(ws, data)",
								"  handleCommand(ws, data)",
								"  forward = (fd, name) =>",
								"buf =>",
								"() =>",
								"(dbg, sock) =>",
								"() =>",
								"  showSessions()",
								"  get connections()",
								"  ws =>",
								"  get socklist()",
								"  get file()",
								"(file, source) =>",
								"() =>",
								"s =>",
								"() =>",
								"  m =>",
								"  line(i, j)",
								"  match(re)",
								"  fns =>",
								"({ name }) =>",
								"  functions()",
								"([name, loc, params, expression, path]) =>",
								"  repeat(cond, fn, ...args)",
								"  cond = (r, i) =>",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372816.85,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30538,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										7503,
										7516
									],
									[
										18618,
										18631
									],
									[
										18842,
										18855
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										7462,
										7462
									],
									[
										18593,
										18593
									],
									[
										18819,
										18819
									]
								],
								"scope": "col_gutter"
							},
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3718,
										3731
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										3671,
										3671
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										3694,
										3708
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										3671,
										3671
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6999,
										7013
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										6964,
										6964
									]
								],
								"scope": "col_gutter"
							},
							"col_FF8700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6933,
										6947
									]
								],
								"scope": "col_FF8700FF"
							},
							"col_FF8700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF8700FF_circle.png",
								"regions":
								[
									[
										6905,
										6905
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								26037,
								26037
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 838,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740373098.94,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16758.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "quickjs/qjs-modules/quickjs-sockets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65964,
						"regions":
						{
						},
						"selection":
						[
							[
								35465,
								35465
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1442,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372324.73,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24827.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/qjs-modules/include/utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38325,
						"regions":
						{
						},
						"selection":
						[
							[
								12055,
								12059
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 431,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372168.41,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7334.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs/quickjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40037,
						"regions":
						{
						},
						"selection":
						[
							[
								34160,
								34179
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 886,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372168.77,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15528.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11494,
						"regions":
						{
						},
						"selection":
						[
							[
								7594,
								7594
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 227,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372829.08,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3498.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12667,
						"regions":
						{
						},
						"selection":
						[
							[
								9351,
								9362
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 321,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740372338.1,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5113.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/include/utils.h"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"test-nanovg",
				"test-nanovg.js"
			],
			[
				"repeater",
				"lib/repeater/repeater.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"test-alea",
				"test-alea.js"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"test-repea",
				"test-repeater.js"
			],
			[
				"debugger.htm",
				"debugger.html"
			],
			[
				"debugger",
				"debuggerprotocol.js"
			],
			[
				"portmidi",
				"/usr/include/portmidi.h"
			],
			[
				"portmidi.js",
				"portmidi.js"
			],
			[
				"portmidi.h",
				"/usr/include/portmidi.h"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-helpers",
				"os-helpers.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"portaudio.h",
				"/usr/include/portaudio.h"
			],
			[
				"portaudio",
				"portaudio.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"portaudio.js",
				"portaudio.js"
			],
			[
				"portaudio2.js",
				"portaudio2.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
