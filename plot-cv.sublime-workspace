{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15568,
								15579
							],
							[
								15870,
								15875
							],
							[
								16344,
								16348
							],
							[
								16382,
								16395
							],
							[
								16527,
								16558
							],
							[
								16599,
								16609
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15568,
								15579
							],
							[
								15870,
								15875
							],
							[
								16344,
								16348
							],
							[
								16382,
								16395
							],
							[
								16527,
								16558
							],
							[
								16599,
								16609
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								533,
								576
							],
							[
								1450,
								1465
							],
							[
								1515,
								1540
							],
							[
								1600,
								1626
							],
							[
								1680,
								1708
							],
							[
								1766,
								1786
							],
							[
								1841,
								1865
							],
							[
								1924,
								1960
							],
							[
								2033,
								2072
							],
							[
								2146,
								2167
							],
							[
								2223,
								2245
							],
							[
								2302,
								2332
							],
							[
								2397,
								2435
							],
							[
								2508,
								2521
							],
							[
								2569,
								2592
							],
							[
								2650,
								2672
							],
							[
								2754,
								2758
							],
							[
								2786,
								2791
							],
							[
								2854,
								2859
							],
							[
								2927,
								2932
							],
							[
								3007,
								3011
							],
							[
								3035,
								3048
							],
							[
								3132,
								3147
							],
							[
								3223,
								3238
							],
							[
								3647,
								3652
							],
							[
								3729,
								3738
							],
							[
								3928,
								3952
							],
							[
								4363,
								4394
							],
							[
								4630,
								4733
							],
							[
								4929,
								4998
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle([x, y], radius, strokeWidth = 5, stroke = [255, 255, 255], fill = [255, 0, 0, 96])",
							" function DrawLine(p1, p2, strokeWidth = 5, stroke = [255, 255, 255])"
						]
					},
					"AQAAAAAAAAAAAAAA9QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/server.js",
						"symkeys":
						[
							[
								1072,
								1094
							],
							[
								1218,
								1244
							],
							[
								1414,
								1471
							],
							[
								1723,
								1756
							],
							[
								1985,
								2004
							],
							[
								2036,
								2065
							],
							[
								2171,
								2179
							],
							[
								2897,
								2979
							],
							[
								3290,
								3303
							],
							[
								3385,
								3398
							],
							[
								3673,
								3703
							],
							[
								3863,
								3900
							],
							[
								4195,
								4246
							],
							[
								4304,
								4319
							],
							[
								4349,
								4358
							],
							[
								4658,
								4665
							],
							[
								4796,
								4804
							],
							[
								5002,
								5042
							],
							[
								5365,
								5386
							],
							[
								5673,
								5678
							],
							[
								6054,
								6073
							],
							[
								6589,
								6608
							],
							[
								6955,
								7025
							],
							[
								7371,
								7420
							],
							[
								7819,
								7852
							],
							[
								8621,
								8629
							],
							[
								8676,
								8684
							],
							[
								9195,
								9231
							],
							[
								9687,
								9693
							],
							[
								9856,
								9861
							],
							[
								10138,
								10189
							],
							[
								11137,
								11186
							],
							[
								11325,
								11336
							],
							[
								11435,
								11446
							],
							[
								12024,
								12032
							],
							[
								12081,
								12089
							],
							[
								12140,
								12148
							],
							[
								12575,
								12582
							],
							[
								12723,
								12730
							],
							[
								12769,
								12786
							],
							[
								13302,
								13307
							],
							[
								13483,
								13518
							],
							[
								13661,
								13669
							],
							[
								13868,
								13924
							],
							[
								14287,
								14300
							],
							[
								14358,
								14383
							],
							[
								14640,
								14645
							],
							[
								14685,
								14691
							],
							[
								14848,
								14853
							],
							[
								14890,
								14896
							],
							[
								15406,
								15411
							],
							[
								16029,
								16048
							],
							[
								17551,
								17570
							],
							[
								18415,
								18444
							],
							[
								18667,
								18686
							],
							[
								19033,
								19052
							],
							[
								19425,
								19439
							],
							[
								19796,
								19815
							],
							[
								19942,
								19969
							],
							[
								20143,
								20178
							],
							[
								20293,
								20297
							],
							[
								20393,
								20397
							],
							[
								20419,
								20428
							],
							[
								20573,
								20577
							],
							[
								20604,
								20609
							],
							[
								20637,
								20641
							],
							[
								20868,
								20921
							],
							[
								21282,
								21286
							],
							[
								21439,
								21453
							],
							[
								21833,
								21866
							],
							[
								22113,
								22119
							],
							[
								22179,
								22183
							],
							[
								22193,
								22197
							],
							[
								22216,
								22242
							],
							[
								22366,
								22372
							],
							[
								22534,
								22553
							],
							[
								22624,
								22631
							],
							[
								22688,
								22694
							],
							[
								22736,
								22754
							],
							[
								23004,
								23017
							],
							[
								23186,
								23199
							],
							[
								23431,
								23450
							],
							[
								23580,
								23588
							],
							[
								23601,
								23610
							],
							[
								23615,
								23624
							],
							[
								23656,
								23675
							],
							[
								23743,
								23754
							],
							[
								23784,
								23794
							],
							[
								23962,
								23973
							],
							[
								24021,
								24032
							],
							[
								24050,
								24060
							],
							[
								24064,
								24075
							],
							[
								24210,
								24229
							],
							[
								24567,
								24586
							],
							[
								24609,
								24620
							],
							[
								24858,
								24862
							],
							[
								25941,
								25948
							],
							[
								25980,
								25991
							],
							[
								25996,
								26010
							],
							[
								26112,
								26131
							],
							[
								26398,
								26407
							],
							[
								26429,
								26436
							],
							[
								26473,
								26481
							],
							[
								26531,
								26550
							],
							[
								26614,
								26633
							],
							[
								26716,
								26735
							],
							[
								27051,
								27058
							],
							[
								27344,
								27363
							],
							[
								27611,
								27636
							],
							[
								28873,
								28878
							],
							[
								28922,
								28930
							],
							[
								29288,
								29302
							],
							[
								29368,
								29374
							]
						],
						"symlist":
						[
							"rotateLeft = n => x =>",
							"function GetMimeType(file)",
							"function hashString(string, bits = 32, mask = 0xffffffff)",
							"function decodeHTMLEntities(text)",
							" (match, entity) =>",
							"async function MimeType(path)",
							" data =>",
							"function GetDirMap(dirs = mountDirs, pred = '.*\\\\.(brd|sch|lbr|GBL|GTL|GKO|ngc)$')",
							"pred = ent =>",
							"(acc, dir) =>",
							"async function waitChild(proc)",
							"async function runMount(dirsIterator)",
							"async function readData(output, callback = d => {})",
							"(push, stop) =>",
							" chunk =>",
							"line =>",
							" data =>",
							"async function RequestContours(req, res)",
							"async function main()",
							"cp =>",
							"(req, res, next) =>",
							"(req, res, next) =>",
							" function SendRaw(res, file, data, type = 'application/octet-stream')",
							"convertToGerber = async (boardFile, opts = {}) =>",
							"formatToExt = (layers, format) =>",
							" data =>",
							" data =>",
							"gerberEndpoint = async (req, res) =>",
							"res =>",
							" k =>",
							"gerberToGcode = async (gerberFile, allOpts = {}) =>",
							" function makePath(ext, side, base = basename)",
							"([k, v]) =>",
							"([k, v]) =>",
							" data =>",
							" data =>",
							"error =>",
							"side =>",
							"side =>",
							"([side, file]) =>",
							" k =>",
							"gcodeEndpoint = async (req, res) =>",
							"error =>",
							"GithubListContents = async (owner, repo, dir, filter) =>",
							"({ name }) =>",
							"async (req, res, next) =>",
							"st =>",
							"err =>",
							"() =>",
							"err =>",
							" k =>",
							"(req, res, next) =>",
							"async (req, res) =>",
							" function FindFile(relative)",
							"async (req, res) =>",
							"async (req, res) =>",
							" (req, res) =>",
							"async (req, res) =>",
							" function GetVFSPath(file)",
							"async function getDescription(file)",
							"r =>",
							"m =>",
							"(a, b) =>",
							"s =>",
							"re =>",
							"m =>",
							"async function GetFilesList(dir = './tmp', opts = {})",
							"n =>",
							"(acc, file) =>",
							"({ ctime, mtime, mode, size }) =>",
							"err =>",
							"a =>",
							"i =>",
							" function FilesURLs(list)",
							"url =>",
							"async (req, res) =>",
							"port =>",
							"key =>",
							"async (ws, req) =>",
							"async data =>",
							"async data =>",
							"async (req, res) =>",
							" f =>",
							" st =>",
							" () =>",
							"async (req, res) =>",
							" () =>",
							" c =>",
							" () =>",
							" () =>",
							" o =>",
							" () =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async () =>",
							"p =>",
							"file =>",
							" () =>",
							" error =>",
							"async (req, res) =>",
							"result =>",
							"file =>",
							"error =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"async (req, res) =>",
							"name =>",
							"async (req, res) =>",
							"async (req, res, next) =>",
							"() =>",
							"error =>",
							" (req, res) =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD1AgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoW3gsIHldLCByYWRpdXMsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdLCBmaWxsID0gWzI1NSwgMCwgMCwgOTZdKQpEcmF3TGluZShwMSwgcDIsIHN0cm9rZVdpZHRoID0gNSwgc3Ryb2tlID0gWzI1NSwgMjU1LCAyNTVdKQAAAAAAAAAA0AYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								1802,
								1822
							],
							[
								2052,
								2057
							],
							[
								2062,
								2082
							],
							[
								2120,
								2127
							],
							[
								2164,
								2171
							],
							[
								2494,
								2502
							],
							[
								2518,
								2538
							],
							[
								3068,
								3101
							],
							[
								3191,
								3213
							],
							[
								3427,
								3468
							],
							[
								3479,
								3492
							],
							[
								3559,
								3594
							],
							[
								3639,
								3657
							],
							[
								3693,
								3735
							],
							[
								3801,
								3834
							],
							[
								3856,
								3860
							],
							[
								4249,
								4254
							],
							[
								4304,
								4308
							],
							[
								4335,
								4339
							],
							[
								4367,
								4371
							],
							[
								4394,
								4414
							],
							[
								4493,
								4497
							],
							[
								4567,
								4589
							],
							[
								4704,
								4709
							],
							[
								4742,
								4764
							],
							[
								4958,
								4980
							],
							[
								5403,
								5469
							],
							[
								5815,
								5824
							],
							[
								5929,
								5959
							],
							[
								6320,
								6355
							],
							[
								6387,
								6428
							],
							[
								6460,
								6526
							],
							[
								6559,
								6593
							],
							[
								6659,
								6706
							],
							[
								7242,
								7278
							],
							[
								7391,
								7400
							],
							[
								7636,
								7644
							],
							[
								7750,
								7757
							],
							[
								7807,
								7831
							],
							[
								8103,
								8114
							],
							[
								8204,
								8215
							],
							[
								8279,
								8290
							],
							[
								8344,
								8353
							],
							[
								8391,
								8402
							],
							[
								8490,
								8517
							],
							[
								8649,
								8653
							],
							[
								8677,
								8684
							],
							[
								8717,
								8733
							],
							[
								8862,
								8907
							],
							[
								9146,
								9204
							],
							[
								9533,
								9555
							],
							[
								9928,
								9938
							],
							[
								10182,
								10196
							],
							[
								11131,
								11155
							],
							[
								11281,
								11285
							],
							[
								11377,
								11391
							],
							[
								11481,
								11497
							],
							[
								11929,
								11942
							],
							[
								11960,
								11965
							],
							[
								12047,
								12054
							],
							[
								12082,
								12087
							],
							[
								12232,
								12257
							],
							[
								12432,
								12463
							],
							[
								12540,
								12551
							],
							[
								14134,
								14165
							],
							[
								14695,
								14728
							],
							[
								15000,
								15035
							],
							[
								15120,
								15153
							],
							[
								16084,
								16090
							],
							[
								17205,
								17209
							],
							[
								18105,
								18112
							],
							[
								19411,
								19443
							],
							[
								19824,
								19828
							],
							[
								20507,
								20542
							],
							[
								21304,
								21309
							],
							[
								22036,
								22040
							],
							[
								22134,
								22138
							],
							[
								22258,
								22267
							],
							[
								22397,
								22404
							],
							[
								22685,
								22692
							],
							[
								22773,
								22780
							],
							[
								22844,
								22860
							],
							[
								22925,
								22945
							],
							[
								23644,
								23656
							],
							[
								23755,
								23767
							],
							[
								23969,
								23985
							],
							[
								24079,
								24092
							],
							[
								24503,
								24521
							],
							[
								24703,
								24720
							],
							[
								25146,
								25165
							],
							[
								25263,
								25283
							],
							[
								26501,
								26523
							],
							[
								26996,
								27017
							],
							[
								27568,
								27587
							],
							[
								28021,
								28029
							],
							[
								28468,
								28477
							],
							[
								30944,
								30956
							],
							[
								32868,
								32903
							],
							[
								33401,
								33420
							],
							[
								33614,
								33631
							],
							[
								33676,
								33689
							],
							[
								33725,
								33735
							],
							[
								35383,
								35399
							],
							[
								35531,
								35550
							],
							[
								35561,
								35586
							],
							[
								36010,
								36030
							]
						],
						"symlist":
						[
							"isin = (other, p) =>",
							"Match",
							"constructor(pattern)",
							"apply()",
							"name =>",
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"dir =>",
							"x =>",
							"file =>",
							"async function* files(req, resp)",
							"n =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							"sendCommand(data)",
							"onClose(ws, reason)",
							"onRequest(req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"result =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"async onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQBgAAICByb3RhdGVMZWZ0ID0gbiA9PiB4ID0+CkdldE1pbWVUeXBlKGZpbGUpCiAgaGFzaFN0cmluZyhzdHJpbmcsIGJpdHMgPSAzMiwgbWFzayA9IDB4ZmZmZmZmZmYpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgpNaW1lVHlwZShwYXRoKQpkYXRhID0+CkdldERpck1hcChkaXJzID0gbW91bnREaXJzLCBwcmVkID0gJy4qXFwuKGJyZHxzY2h8bGJyfEdCTHxHVEx8R0tPfG5nYykkJykKICBwcmVkID0gZW50ID0+CihhY2MsIGRpcikgPT4KICB3YWl0Q2hpbGQocHJvYykKICBydW5Nb3VudChkaXJzSXRlcmF0b3IpCiAgcmVhZERhdGEob3V0cHV0LCBjYWxsYmFjayA9IGQgPT4ge30pCihwdXNoLCBzdG9wKSA9PgpjaHVuayA9PgogIGxpbmUgPT4KZGF0YSA9PgpSZXF1ZXN0Q29udG91cnMocmVxLCByZXMpCiAgbWFpbigpCiAgY3AgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMsIG5leHQpID0+ClNlbmRSYXcocmVzLCBmaWxlLCBkYXRhLCB0eXBlID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpCiAgY29udmVydFRvR2VyYmVyID0gKGJvYXJkRmlsZSwgb3B0cyA9IHt9KSA9PgogIGZvcm1hdFRvRXh0ID0gKGxheWVycywgZm9ybWF0KSA9PgpkYXRhID0+CmRhdGEgPT4KICBnZXJiZXJFbmRwb2ludCA9IChyZXEsIHJlcykgPT4KICByZXMgPT4KayA9PgogIGdlcmJlclRvR2NvZGUgPSAoZ2VyYmVyRmlsZSwgYWxsT3B0cyA9IHt9KSA9PgogIG1ha2VQYXRoKGV4dCwgc2lkZSwgYmFzZSA9IGJhc2VuYW1lKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpkYXRhID0+CmRhdGEgPT4KICBlcnJvciA9PgogIHNpZGUgPT4KICBzaWRlID0+Cihbc2lkZSwgZmlsZV0pID0+CmsgPT4KICBnY29kZUVuZHBvaW50ID0gKHJlcSwgcmVzKSA9PgogIGVycm9yID0+CkdpdGh1Ykxpc3RDb250ZW50cyA9IChvd25lciwgcmVwbywgZGlyLCBmaWx0ZXIpID0+Cih7IG5hbWUgfSkgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgogIHN0ID0+CiAgZXJyID0+CigpID0+CiAgZXJyID0+CmsgPT4KKHJlcSwgcmVzLCBuZXh0KSA9PgoocmVxLCByZXMpID0+CkZpbmRGaWxlKHJlbGF0aXZlKQoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CkdldFZGU1BhdGgoZmlsZSkKICBnZXREZXNjcmlwdGlvbihmaWxlKQogIHIgPT4KICBtID0+CihhLCBiKSA9PgogIHMgPT4KICByZSA9PgogIG0gPT4KR2V0RmlsZXNMaXN0KGRpciA9ICcuL3RtcCcsIG9wdHMgPSB7fSkKICBuID0+CihhY2MsIGZpbGUpID0+Cih7IGN0aW1lLCBtdGltZSwgbW9kZSwgc2l6ZSB9KSA9PgogIGVyciA9PgogIGEgPT4KICBpID0+CkZpbGVzVVJMcyhsaXN0KQogIHVybCA9PgoocmVxLCByZXMpID0+CiAgcG9ydCA9PgogIGtleSA9Pgood3MsIHJlcSkgPT4KICBkYXRhID0+CiAgZGF0YSA9PgoocmVxLCByZXMpID0+CmYgPT4Kc3QgPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgpjID0+CigpID0+CigpID0+Cm8gPT4KKCkgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMpID0+CigpID0+CiAgcCA9PgogIGZpbGUgPT4KKCkgPT4KZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgogIHJlc3VsdCA9PgogIGZpbGUgPT4KICBlcnJvciA9PgoocmVxLCByZXMpID0+CihyZXEsIHJlcykgPT4KKHJlcSwgcmVzKSA9PgogIG5hbWUgPT4KKHJlcSwgcmVzKSA9PgoocmVxLCByZXMsIG5leHQpID0+CigpID0+CiAgZXJyb3IgPT4KKHJlcSwgcmVzKSA9PgooKSA9PgAAAAAAAAAAbgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15568,
								15579
							],
							[
								15870,
								15875
							],
							[
								16344,
								16348
							],
							[
								16382,
								16395
							],
							[
								16527,
								16558
							],
							[
								16599,
								16609
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuBwAAICBpc2luID0gKG90aGVyLCBwKSA9PgpNYXRjaAogIGNvbnN0cnVjdG9yKHBhdHRlcm4pCiAgYXBwbHkoKQogIG5hbWUgPT4KICB2YWx1ZSA9PgoobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpHZXRNaW1lKGZpbGUpCk1hdGNoZXIocGF0dGVybiwgdCA9IGFyZyA9PiBhcmcpCiguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQooW2tleSwgdmFsdWVdKSA9PgpHZXRSb290RGlyZWN0b3JpZXMocGF0dGVybiA9ICcqJykKTWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIGRkID0+CiAgZCA9PgogIGQgPT4KICBkID0+CkdldERpcihkaXIpCiAgbiA9PgpEaXJOYW1lKG5hbWUpCiAgaXQgPT4KRGF0ZVN0cihkYXRlKQpNb2RlU3RyKG1vZGUpCkhUTUxQYWdlID0gKHsgdGl0bGUsIHN0eWxlLCBzY3JpcHRzID0gW10sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIHNjcmlwdCA9PgpGaWx0ZXJGb3JtID0gKHsgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlID0gKHsgcm93cywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlUm93ID0gKHsgY29sdW1ucywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlQ29sdW1uID0gKHsgY29sdW1ucywgY2hpbGRyZW4sIHRhZyA9ICd0ZCcsIC4uLnByb3BzIH0pID0+CkZpbGVMaW5rID0gKHsgZmlsZSwgLi4ucHJvcHMgfSkgPT4KRmlsZU9iamVjdCA9ICh7IGZpbGUsIHN0YXQgPSB7fSwgLi4ucHJvcHMgfSkgPT4KRmlsZVRhYmxlID0gKHsgZmlsZXMsIC4uLnByb3BzIH0pID0+CihhLCBiKSA9PgogIGZpZWxkID0+CiAgZmlsZSA9PgpSZWFkRXhpdjIoZmlsZSkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKGEsIGIpID0+Cihbaywgdl0pID0+ClJlYWRFeGlmdG9vbChmaWxlKQogIGwgPT4KICBsaW5lID0+CihbbGluZSwgaWR4XSkgPT4KSGVpZkNvbnZlcnQoc3JjLCBkc3QsIHF1YWxpdHkgPSAxMDApCk1hZ2lja1Jlc2l6ZShzcmMsIGRzdCwgcm90YXRlID0gMCwgd2lkdGgsIGhlaWdodCkKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cihtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICBwdXRzKHMpCigpID0+ClBhcnNlQm9keShnZW4pCiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCiAgZGlyID0+CiAgeCA9PgogIGZpbGUgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgogIGZpbGVzMihyZXEsIHJlc3ApCm4gPT4KICBuID0+CiAgbiA9PgooYSwgYikgPT4KICBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KKFtmaWxlLCByZWxdKSA9PgooYWNjLCBbZmlsZSwgc3RdKSA9PgogIHN0cmluZyhhLCBiKQogIG51bWJlcihhLCBiKQooW25hbWUsIG9ial0pID0+Cih7IG5hbWUgfSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBzZW5kQ29tbWFuZChkYXRhKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvblJlcXVlc3QocmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICByZXN1bHQgPT4KICBvbkZpbmFsaXplKCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBAAAAAAAABkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15568,
								15579
							],
							[
								15870,
								15875
							],
							[
								16344,
								16348
							],
							[
								16382,
								16395
							],
							[
								16527,
								16558
							],
							[
								16599,
								16609
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15570,
								15581
							],
							[
								15872,
								15877
							],
							[
								16346,
								16350
							],
							[
								16384,
								16397
							],
							[
								16529,
								16560
							],
							[
								16601,
								16611
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIFAABSKHMgPSAwLCBpbmMgPSAxLCBlKQpVcChlLCBrID0gJ3BhcmVudE5vZGUnKQpMb2coLi4uYXJncykKICBpc0NvbXBvbmVudChvYmopClN0b3JhZ2UoKQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQogIG93bktleXModGFyZ2V0KQpXYWxrVXAoZWxlbSkKSXRlcmF0ZVNvbWUoaXRlciwgcHJlZCA9IGVsZW0gPT4gZmFsc2UpCkdldEFsbFByb3BlcnR5TmFtZXMob2JqKQpDbG9uZU9iamVjdChvYmosIHByZWQgPSAoa2V5LCB2YWx1ZSkgPT4gdHJ1ZSkKICB2YWx1ZSA9ICguLi5hcmdzKSA9PgpUYWJsZSA9IHByb3BzID0+CiAgcm93ID0+CiAgY2VsbCA9PgpPYnNlcnZhYmxlKG9iaiwgY2hhbmdlID0gKHByb3AsIHZhbHVlKSA9PiB7fSkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKVHJhY2tlZChvYmopCihwcm9wLCB2YWx1ZSkgPT4KQW5jaG9yUG9pbnRzID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgoocHQsIGkpID0+ClBhdGggPSAoeyBwb2ludHMsIGxpbmVDb21tYW5kID0gJ0wnLCAuLi5wcm9wcyB9KSA9PgooYWNjLCBwdCkgPT4KRWxsaXB0aWNBcmMgPSAoeyBkYXRhLCAuLi5wcm9wcyB9KSA9PgpBZGRQb2ludChwdCkKR2V0RWxlbWVudFNpZ25hbChlbGVtKQpHZXRFbGVtZW50c0J5U2lnbmFsKHNpZ25hbE5hbWUpCkdldENpcmNsZVBvc2l0aW9uKGVsZW1lbnQpCkZpbmRQb2ludChwb3MsIGYgPSAoaSwgZCwgcCkgPT4gcCkKUG9pbnRMaXN0CihpLCBkLCBwKSA9PgpNb3VzZUV2ZW50cyhlbGVtZW50KQplID0+CmUgPT4KVG91Y2hFdmVudHMoZWxlbWVudCkKR2V0U2lnbmFsTmFtZXMoKQogIGUgPT4KKGEsIGIpID0+CkdldFNpZ25hbENvbG9yKHNpZ25hbE5hbWUpCkdldFNpZ25hbEVudHJpZXMoKQpDb2xvclNpZ25hbHMoKQpSZW5kZXJQYWxldHRlKHByb3BzKQooY29sb3IsIGkpID0+CkNvbG9yU2lnbmFsKHNpZ25hbE5hbWUsIGNvbG9yKQpab29tSGFuZGxlcihlKQogIGdldCB6b29tRmFjdG9yKCkKTG9hZFNWRyhmaWxlbmFtZSkKTW92ZUhhbmRsZXIoZSkKTWFrZVBhbGV0dGUyKG51bSkKKCkKTWFrZVBhbGV0dGUobnVtKQpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQooKSA9PgooeyBkYXRhIH0pID0+CiAgLnNlbmRNZXNzYWdlID0gbXNnID0+CiAgZ2V0IHBvaW50cygpCiAgZ2V0IGxpbmVzKCkKZXZlbnQgPT4KICBlID0+CiAgdmFsdWUgPT4KZXYgPT4KICBmdW5jdGlvbigpCihpLCBkLCBwdCkgPT4KTW92ZVBvaW50KGluZGV4LCBwKQooKSA9PgplID0+CiAgZSA9PgooW2UsIHNpZ10pID0+CklzU1ZHRWxlbWVudChlbGVtKQooZSwgaSkgPT4AAAAAAAAAAFIFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15570,
								15581
							],
							[
								15881,
								15886
							],
							[
								16355,
								16359
							],
							[
								16393,
								16406
							],
							[
								16538,
								16569
							],
							[
								16610,
								16620
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10260,
								10286
							],
							[
								10365,
								10376
							],
							[
								10483,
								10508
							],
							[
								10876,
								10913
							],
							[
								11041,
								11049
							],
							[
								11148,
								11156
							],
							[
								11259,
								11265
							],
							[
								11324,
								11338
							],
							[
								11387,
								11408
							],
							[
								12246,
								12258
							],
							[
								12310,
								12321
							],
							[
								12402,
								12411
							],
							[
								12470,
								12480
							],
							[
								12640,
								12648
							],
							[
								12985,
								12991
							],
							[
								13050,
								13066
							],
							[
								13548,
								13562
							],
							[
								14311,
								14345
							],
							[
								15570,
								15581
							],
							[
								15872,
								15877
							],
							[
								16346,
								16350
							],
							[
								16384,
								16397
							],
							[
								16529,
								16560
							],
							[
								16601,
								16611
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10287,
								10313
							],
							[
								10392,
								10403
							],
							[
								10510,
								10535
							],
							[
								10903,
								10940
							],
							[
								11068,
								11076
							],
							[
								11175,
								11183
							],
							[
								11286,
								11292
							],
							[
								11351,
								11365
							],
							[
								11414,
								11435
							],
							[
								12273,
								12285
							],
							[
								12337,
								12348
							],
							[
								12429,
								12438
							],
							[
								12497,
								12507
							],
							[
								12667,
								12675
							],
							[
								13012,
								13018
							],
							[
								13077,
								13093
							],
							[
								13575,
								13589
							],
							[
								14338,
								14372
							],
							[
								15597,
								15608
							],
							[
								15899,
								15904
							],
							[
								16373,
								16377
							],
							[
								16411,
								16424
							],
							[
								16556,
								16587
							],
							[
								16628,
								16638
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10261,
								10287
							],
							[
								10366,
								10377
							],
							[
								10484,
								10509
							],
							[
								10877,
								10914
							],
							[
								11042,
								11050
							],
							[
								11149,
								11157
							],
							[
								11260,
								11266
							],
							[
								11325,
								11339
							],
							[
								11388,
								11409
							],
							[
								12247,
								12259
							],
							[
								12311,
								12322
							],
							[
								12403,
								12412
							],
							[
								12471,
								12481
							],
							[
								12641,
								12649
							],
							[
								12986,
								12992
							],
							[
								13051,
								13067
							],
							[
								13549,
								13563
							],
							[
								14312,
								14346
							],
							[
								15571,
								15582
							],
							[
								15873,
								15878
							],
							[
								16347,
								16351
							],
							[
								16385,
								16398
							],
							[
								16530,
								16561
							],
							[
								16602,
								16612
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10335,
								10361
							],
							[
								10440,
								10451
							],
							[
								10558,
								10583
							],
							[
								10951,
								10988
							],
							[
								11116,
								11124
							],
							[
								11223,
								11231
							],
							[
								11334,
								11340
							],
							[
								11399,
								11413
							],
							[
								11462,
								11483
							],
							[
								12321,
								12333
							],
							[
								12385,
								12396
							],
							[
								12477,
								12486
							],
							[
								12545,
								12555
							],
							[
								12715,
								12723
							],
							[
								13060,
								13066
							],
							[
								13125,
								13141
							],
							[
								13623,
								13637
							],
							[
								14386,
								14420
							],
							[
								15645,
								15656
							],
							[
								15947,
								15952
							],
							[
								16421,
								16425
							],
							[
								16459,
								16472
							],
							[
								16604,
								16635
							],
							[
								16676,
								16686
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10337,
								10363
							],
							[
								10442,
								10453
							],
							[
								10560,
								10585
							],
							[
								10953,
								10990
							],
							[
								11118,
								11126
							],
							[
								11225,
								11233
							],
							[
								11336,
								11342
							],
							[
								11401,
								11415
							],
							[
								11464,
								11485
							],
							[
								12323,
								12335
							],
							[
								12387,
								12398
							],
							[
								12479,
								12488
							],
							[
								12547,
								12557
							],
							[
								12717,
								12725
							],
							[
								13062,
								13068
							],
							[
								13127,
								13143
							],
							[
								13625,
								13639
							],
							[
								14388,
								14422
							],
							[
								15647,
								15658
							],
							[
								15949,
								15954
							],
							[
								16423,
								16427
							],
							[
								16461,
								16474
							],
							[
								16606,
								16637
							],
							[
								16678,
								16688
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10337,
								10363
							],
							[
								10442,
								10453
							],
							[
								10560,
								10585
							],
							[
								10953,
								10990
							],
							[
								11118,
								11126
							],
							[
								11225,
								11233
							],
							[
								11336,
								11342
							],
							[
								11401,
								11415
							],
							[
								11464,
								11485
							],
							[
								12323,
								12335
							],
							[
								12387,
								12398
							],
							[
								12479,
								12488
							],
							[
								12547,
								12557
							],
							[
								12717,
								12725
							],
							[
								13062,
								13068
							],
							[
								13127,
								13143
							],
							[
								13625,
								13639
							],
							[
								14388,
								14422
							],
							[
								15647,
								15658
							],
							[
								15949,
								15954
							],
							[
								16423,
								16427
							],
							[
								16461,
								16474
							],
							[
								16606,
								16637
							],
							[
								16678,
								16688
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10335,
								10361
							],
							[
								10440,
								10451
							],
							[
								10558,
								10583
							],
							[
								10951,
								10988
							],
							[
								11116,
								11124
							],
							[
								11223,
								11231
							],
							[
								11334,
								11340
							],
							[
								11399,
								11413
							],
							[
								11462,
								11483
							],
							[
								12321,
								12333
							],
							[
								12385,
								12396
							],
							[
								12477,
								12486
							],
							[
								12545,
								12555
							],
							[
								12715,
								12723
							],
							[
								13060,
								13066
							],
							[
								13125,
								13141
							],
							[
								13623,
								13637
							],
							[
								14386,
								14420
							],
							[
								15645,
								15656
							],
							[
								15947,
								15952
							],
							[
								16421,
								16425
							],
							[
								16459,
								16472
							],
							[
								16604,
								16635
							],
							[
								16676,
								16686
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10337,
								10363
							],
							[
								10442,
								10453
							],
							[
								10560,
								10585
							],
							[
								10953,
								10990
							],
							[
								11118,
								11126
							],
							[
								11225,
								11233
							],
							[
								11336,
								11342
							],
							[
								11401,
								11415
							],
							[
								11464,
								11485
							],
							[
								12323,
								12335
							],
							[
								12387,
								12398
							],
							[
								12479,
								12488
							],
							[
								12547,
								12557
							],
							[
								12717,
								12725
							],
							[
								13062,
								13068
							],
							[
								13127,
								13143
							],
							[
								13625,
								13639
							],
							[
								14388,
								14422
							],
							[
								15647,
								15658
							],
							[
								15949,
								15954
							],
							[
								16423,
								16427
							],
							[
								16461,
								16474
							],
							[
								16606,
								16637
							],
							[
								16678,
								16688
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10334,
								10360
							],
							[
								10439,
								10450
							],
							[
								10557,
								10582
							],
							[
								10950,
								10987
							],
							[
								11115,
								11123
							],
							[
								11222,
								11230
							],
							[
								11333,
								11339
							],
							[
								11398,
								11412
							],
							[
								11461,
								11482
							],
							[
								12320,
								12332
							],
							[
								12384,
								12395
							],
							[
								12476,
								12485
							],
							[
								12544,
								12554
							],
							[
								12714,
								12722
							],
							[
								13059,
								13065
							],
							[
								13124,
								13140
							],
							[
								13622,
								13636
							],
							[
								14385,
								14419
							],
							[
								15644,
								15655
							],
							[
								15946,
								15951
							],
							[
								16420,
								16424
							],
							[
								16458,
								16471
							],
							[
								16603,
								16634
							],
							[
								16675,
								16685
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAFIocyA9IDAsIGluYyA9IDEsIGUpClVwKGUsIGsgPSAncGFyZW50Tm9kZScpCkxvZyguLi5hcmdzKQogIGlzQ29tcG9uZW50KG9iaikKU3RvcmFnZSgpCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpCiAgb3duS2V5cyh0YXJnZXQpCldhbGtVcChlbGVtKQpJdGVyYXRlU29tZShpdGVyLCBwcmVkID0gZWxlbSA9PiBmYWxzZSkKR2V0QWxsUHJvcGVydHlOYW1lcyhvYmopCkNsb25lT2JqZWN0KG9iaiwgcHJlZCA9IChrZXksIHZhbHVlKSA9PiB0cnVlKQogIHZhbHVlID0gKC4uLmFyZ3MpID0+ClRhYmxlID0gcHJvcHMgPT4KICByb3cgPT4KICBjZWxsID0+Ck9ic2VydmFibGUob2JqLCBjaGFuZ2UgPSAocHJvcCwgdmFsdWUpID0+IHt9KQogIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKQogIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKQpUcmFja2VkKG9iaikKKHByb3AsIHZhbHVlKSA9PgpBbmNob3JQb2ludHMgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CihwdCwgaSkgPT4KUGF0aCA9ICh7IHBvaW50cywgbGluZUNvbW1hbmQgPSAnTCcsIC4uLnByb3BzIH0pID0+CihhY2MsIHB0KSA9PgpFbGxpcHRpY0FyYyA9ICh7IGRhdGEsIC4uLnByb3BzIH0pID0+CkFkZFBvaW50KHB0KQpHZXRFbGVtZW50U2lnbmFsKGVsZW0pCkdldEVsZW1lbnRzQnlTaWduYWwoc2lnbmFsTmFtZSkKR2V0Q2lyY2xlUG9zaXRpb24oZWxlbWVudCkKRmluZFBvaW50KHBvcywgZiA9IChpLCBkLCBwKSA9PiBwKQpQb2ludExpc3QKKGksIGQsIHApID0+Ck1vdXNlRXZlbnRzKGVsZW1lbnQpCmUgPT4KZSA9PgpUb3VjaEV2ZW50cyhlbGVtZW50KQpHZXRTaWduYWxOYW1lcygpCiAgZSA9PgooYSwgYikgPT4KR2V0U2lnbmFsQ29sb3Ioc2lnbmFsTmFtZSkKR2V0U2lnbmFsRW50cmllcygpCkNvbG9yU2lnbmFscygpClJlbmRlclBhbGV0dGUocHJvcHMpCihjb2xvciwgaSkgPT4KQ29sb3JTaWduYWwoc2lnbmFsTmFtZSwgY29sb3IpClpvb21IYW5kbGVyKGUpCiAgZ2V0IHpvb21GYWN0b3IoKQpMb2FkU1ZHKGZpbGVuYW1lKQpNb3ZlSGFuZGxlcihlKQpNYWtlUGFsZXR0ZTIobnVtKQooKQpNYWtlUGFsZXR0ZShudW0pCkNyZWF0ZVNvY2tldChlbmRwb2ludCkKICBvbk9wZW4oKQogIGdldCB3cygpCigpID0+Cih7IGRhdGEgfSkgPT4KICAuc2VuZE1lc3NhZ2UgPSBtc2cgPT4KICBnZXQgcG9pbnRzKCkKICBnZXQgbGluZXMoKQpldmVudCA9PgogIGUgPT4KICB2YWx1ZSA9PgpldiA9PgogIGZ1bmN0aW9uKCkKKGksIGQsIHB0KSA9PgpNb3ZlUG9pbnQoaW5kZXgsIHApCigpID0+CmUgPT4KICBlID0+CihbZSwgc2lnXSkgPT4KSXNTVkdFbGVtZW50KGVsZW0pCihlLCBpKSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10334,
								10360
							],
							[
								10439,
								10450
							],
							[
								10557,
								10582
							],
							[
								10950,
								10987
							],
							[
								11115,
								11123
							],
							[
								11222,
								11230
							],
							[
								11333,
								11339
							],
							[
								11398,
								11412
							],
							[
								11461,
								11482
							],
							[
								12320,
								12332
							],
							[
								12384,
								12395
							],
							[
								12476,
								12485
							],
							[
								12544,
								12554
							],
							[
								12714,
								12722
							],
							[
								13059,
								13065
							],
							[
								13124,
								13140
							],
							[
								13622,
								13636
							],
							[
								14385,
								14419
							],
							[
								15644,
								15655
							],
							[
								15946,
								15951
							],
							[
								16420,
								16424
							],
							[
								16458,
								16471
							],
							[
								16603,
								16634
							],
							[
								16675,
								16685
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					44,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					46,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10334,
								10360
							],
							[
								10439,
								10450
							],
							[
								10557,
								10582
							],
							[
								10950,
								10987
							],
							[
								11115,
								11123
							],
							[
								11222,
								11230
							],
							[
								11333,
								11339
							],
							[
								11398,
								11412
							],
							[
								11461,
								11482
							],
							[
								12320,
								12332
							],
							[
								12384,
								12395
							],
							[
								12476,
								12485
							],
							[
								12544,
								12554
							],
							[
								12714,
								12722
							],
							[
								13059,
								13065
							],
							[
								13124,
								13140
							],
							[
								13622,
								13636
							],
							[
								14385,
								14419
							],
							[
								15644,
								15655
							],
							[
								15946,
								15951
							],
							[
								16420,
								16424
							],
							[
								16458,
								16471
							],
							[
								16603,
								16634
							],
							[
								16675,
								16685
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10334,
								10360
							],
							[
								10439,
								10450
							],
							[
								10557,
								10582
							],
							[
								10950,
								10987
							],
							[
								11115,
								11123
							],
							[
								11222,
								11230
							],
							[
								11333,
								11339
							],
							[
								11398,
								11412
							],
							[
								11461,
								11482
							],
							[
								12320,
								12332
							],
							[
								12384,
								12395
							],
							[
								12476,
								12485
							],
							[
								12544,
								12554
							],
							[
								12714,
								12722
							],
							[
								13059,
								13065
							],
							[
								13124,
								13140
							],
							[
								13622,
								13636
							],
							[
								14385,
								14419
							],
							[
								15644,
								15655
							],
							[
								15946,
								15951
							],
							[
								16420,
								16424
							],
							[
								16458,
								16471
							],
							[
								16603,
								16634
							],
							[
								16675,
								16685
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw.js",
						"symkeys":
						[
							[
								1306,
								1336
							],
							[
								1385,
								1418
							],
							[
								1551,
								1572
							],
							[
								1682,
								1707
							],
							[
								1781,
								1799
							],
							[
								1867,
								1894
							],
							[
								2065,
								2089
							],
							[
								2184,
								2199
							],
							[
								2339,
								2361
							],
							[
								2430,
								2478
							],
							[
								2584,
								2617
							],
							[
								2831,
								2885
							],
							[
								3100,
								3120
							],
							[
								3197,
								3213
							],
							[
								3320,
								3326
							],
							[
								3419,
								3426
							],
							[
								3518,
								3572
							],
							[
								3605,
								3632
							],
							[
								3736,
								3760
							],
							[
								3912,
								3933
							],
							[
								3979,
								3996
							],
							[
								4065,
								4105
							],
							[
								4180,
								4190
							],
							[
								4572,
								4623
							],
							[
								4742,
								4754
							],
							[
								4943,
								4980
							],
							[
								5204,
								5225
							],
							[
								5409,
								5440
							],
							[
								5489,
								5529
							],
							[
								6364,
								6399
							],
							[
								6509,
								6552
							],
							[
								6574,
								6583
							],
							[
								6627,
								6640
							],
							[
								6678,
								6707
							],
							[
								6856,
								6861
							],
							[
								6887,
								6892
							],
							[
								6921,
								6957
							],
							[
								7394,
								7419
							],
							[
								7476,
								7480
							],
							[
								7518,
								7527
							],
							[
								7614,
								7649
							],
							[
								7834,
								7862
							],
							[
								7940,
								7963
							],
							[
								8200,
								8229
							],
							[
								8350,
								8363
							],
							[
								8457,
								8496
							],
							[
								8645,
								8668
							],
							[
								8984,
								9000
							],
							[
								9072,
								9104
							],
							[
								9542,
								9571
							],
							[
								10334,
								10360
							],
							[
								10439,
								10450
							],
							[
								10557,
								10582
							],
							[
								10950,
								10987
							],
							[
								11115,
								11123
							],
							[
								11222,
								11230
							],
							[
								11333,
								11339
							],
							[
								11398,
								11412
							],
							[
								11461,
								11482
							],
							[
								12320,
								12332
							],
							[
								12384,
								12395
							],
							[
								12476,
								12485
							],
							[
								12544,
								12554
							],
							[
								12714,
								12722
							],
							[
								13059,
								13065
							],
							[
								13124,
								13140
							],
							[
								13622,
								13636
							],
							[
								14385,
								14419
							],
							[
								15644,
								15655
							],
							[
								15946,
								15951
							],
							[
								16420,
								16424
							],
							[
								16458,
								16471
							],
							[
								16603,
								16634
							],
							[
								16675,
								16685
							]
						],
						"symlist":
						[
							"function* R(s = 0, inc = 1, e)",
							"function* Up(e, k = 'parentNode')",
							"function Log(...args)",
							"function isComponent(obj)",
							"function Storage()",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"ownKeys(target)",
							"function* WalkUp(elem)",
							"function IterateSome(iter, pred = elem => false)",
							"function GetAllPropertyNames(obj)",
							"function CloneObject(obj, pred = (key, value) => true)",
							"value = (...args) =>",
							"Table = props =>",
							"row =>",
							"cell =>",
							"function Observable(obj, change = (prop, value) => {})",
							"get(target, prop, receiver)",
							"set(target, prop, value)",
							"function Tracked(obj)",
							" (prop, value) =>",
							"AnchorPoints = ({ points, ...props }) =>",
							"(pt, i) =>",
							"Path = ({ points, lineCommand = 'L', ...props }) =>",
							"(acc, pt) =>",
							"EllipticArc = ({ data, ...props }) =>",
							"function AddPoint(pt)",
							"function GetElementSignal(elem)",
							"function GetElementsBySignal(signalName)",
							"function GetCirclePosition(element)",
							"function FindPoint(pos, f = (i, d, p) => p)",
							"PointList",
							" (i, d, p) =>",
							"function MouseEvents(element)",
							" e =>",
							" e =>",
							"async function* TouchEvents(element)",
							"function GetSignalNames()",
							"e =>",
							"(a, b) =>",
							"function GetSignalColor(signalName)",
							"function* GetSignalEntries()",
							"function ColorSignals()",
							"function RenderPalette(props)",
							"(color, i) =>",
							"function ColorSignal(signalName, color)",
							"function ZoomHandler(e)",
							"get zoomFactor()",
							"async function LoadSVG(filename)",
							"async function MoveHandler(e)",
							"function MakePalette2(num)",
							"function ()",
							"function MakePalette(num)",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							" () =>",
							" ({ data }) =>",
							".sendMessage = msg =>",
							"get points()",
							"get lines()",
							" event =>",
							"async e =>",
							"value =>",
							" ev =>",
							"async function()",
							" (i, d, pt) =>",
							"async function MovePoint(index, p)",
							"async () =>",
							" e =>",
							"e =>",
							"([e, sig]) =>",
							" function IsSVGElement(elem)",
							" (e, i) =>"
						]
					},
					"AQAAAAAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAAUihzID0gMCwgaW5jID0gMSwgZSkKVXAoZSwgayA9ICdwYXJlbnROb2RlJykKTG9nKC4uLmFyZ3MpCiAgaXNDb21wb25lbnQob2JqKQpTdG9yYWdlKCkKICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikKICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkKICBvd25LZXlzKHRhcmdldCkKV2Fsa1VwKGVsZW0pCkl0ZXJhdGVTb21lKGl0ZXIsIHByZWQgPSBlbGVtID0+IGZhbHNlKQpHZXRBbGxQcm9wZXJ0eU5hbWVzKG9iaikKQ2xvbmVPYmplY3Qob2JqLCBwcmVkID0gKGtleSwgdmFsdWUpID0+IHRydWUpCiAgdmFsdWUgPSAoLi4uYXJncykgPT4KVGFibGUgPSBwcm9wcyA9PgogIHJvdyA9PgogIGNlbGwgPT4KT2JzZXJ2YWJsZShvYmosIGNoYW5nZSA9IChwcm9wLCB2YWx1ZSkgPT4ge30pCiAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpCiAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpClRyYWNrZWQob2JqKQoocHJvcCwgdmFsdWUpID0+CkFuY2hvclBvaW50cyA9ICh7IHBvaW50cywgLi4ucHJvcHMgfSkgPT4KKHB0LCBpKSA9PgpQYXRoID0gKHsgcG9pbnRzLCBsaW5lQ29tbWFuZCA9ICdMJywgLi4ucHJvcHMgfSkgPT4KKGFjYywgcHQpID0+CkVsbGlwdGljQXJjID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4KQWRkUG9pbnQocHQpCkdldEVsZW1lbnRTaWduYWwoZWxlbSkKR2V0RWxlbWVudHNCeVNpZ25hbChzaWduYWxOYW1lKQpHZXRDaXJjbGVQb3NpdGlvbihlbGVtZW50KQpGaW5kUG9pbnQocG9zLCBmID0gKGksIGQsIHApID0+IHApClBvaW50TGlzdAooaSwgZCwgcCkgPT4KTW91c2VFdmVudHMoZWxlbWVudCkKZSA9PgplID0+ClRvdWNoRXZlbnRzKGVsZW1lbnQpCkdldFNpZ25hbE5hbWVzKCkKICBlID0+CihhLCBiKSA9PgpHZXRTaWduYWxDb2xvcihzaWduYWxOYW1lKQpHZXRTaWduYWxFbnRyaWVzKCkKQ29sb3JTaWduYWxzKCkKUmVuZGVyUGFsZXR0ZShwcm9wcykKKGNvbG9yLCBpKSA9PgpDb2xvclNpZ25hbChzaWduYWxOYW1lLCBjb2xvcikKWm9vbUhhbmRsZXIoZSkKICBnZXQgem9vbUZhY3RvcigpCkxvYWRTVkcoZmlsZW5hbWUpCk1vdmVIYW5kbGVyKGUpCk1ha2VQYWxldHRlMihudW0pCigpCk1ha2VQYWxldHRlKG51bSkKQ3JlYXRlU29ja2V0KGVuZHBvaW50KQogIG9uT3BlbigpCiAgZ2V0IHdzKCkKKCkgPT4KKHsgZGF0YSB9KSA9PgogIC5zZW5kTWVzc2FnZSA9IG1zZyA9PgogIGdldCBwb2ludHMoKQogIGdldCBsaW5lcygpCmV2ZW50ID0+CiAgZSA9PgogIHZhbHVlID0+CmV2ID0+CiAgZnVuY3Rpb24oKQooaSwgZCwgcHQpID0+Ck1vdmVQb2ludChpbmRleCwgcCkKKCkgPT4KZSA9PgogIGUgPT4KKFtlLCBzaWddKSA9PgpJc1NWR0VsZW1lbnQoZWxlbSkKKGUsIGkpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "upload-server.js",
			"redo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "rver"
					},
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAAcgIAAAAAAAAAAgAAAAAAAAABAAAAZQEAAAAAAAAAAQAAAAAAAAABAAAAdgAAAAAAAAAAAAAAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 36357,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server.js",
			"redo_stack":
			[
				[
					3,
					1,
					"unindent",
					null,
					"AQAAAL0PAAAAAAAAvw8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/DwAAAAAAAL8PAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 29538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAfDQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwNAAAAAAAAHA0AAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD9DAAAAAAAAAAAAAAgDQAAAAAAACANAAAAAAAAAgAAACAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoMAAAAAAAA+gwAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABSDAAAAAAAAAAAAAAADQAAAAAAAAANAAAAAAAAAgAAACAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0MAAAAAAAATQwAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "draw-utils.js",
			"settings":
			{
				"buffer_size": 5161,
				"line_ending": "Unix"
			}
		},
		{
			"file": "draw.html",
			"settings":
			{
				"buffer_size": 500,
				"line_ending": "Unix"
			}
		},
		{
			"file": "draw.js",
			"settings":
			{
				"buffer_size": 16716,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMI8AAAAAAAAwzwAAAAAAAAAAAAAwzwAAAAAAADEPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCPAAAAAAAAMI8AAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "-mirrored"
					},
					"CQAAACE9AAAAAAAAIj0AAAAAAAAAAAAAIj0AAAAAAAAjPQAAAAAAAAAAAAAjPQAAAAAAACQ9AAAAAAAAAAAAACQ9AAAAAAAAJT0AAAAAAAAAAAAAJT0AAAAAAAAmPQAAAAAAAAAAAAAmPQAAAAAAACc9AAAAAAAAAAAAACc9AAAAAAAAKD0AAAAAAAAAAAAAKD0AAAAAAAApPQAAAAAAAAAAAAApPQAAAAAAACo9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhPQAAAAAAACE9AAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAACE9AAAAAAAAIT0AAAAAAAAJAAAALW1pcnJvcmVk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqPQAAAAAAACE9AAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPwnAAAAAAAA/ScAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8JwAAAAAAAPwnAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " transform:"
					},
					"CwAAAP0nAAAAAAAA/icAAAAAAAAAAAAA/icAAAAAAAD/JwAAAAAAAAAAAAD/JwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAABCgAAAAAAAAAAAAABCgAAAAAAAAFKAAAAAAAAAAAAAAFKAAAAAAAAAYoAAAAAAAAAAAAAAYoAAAAAAAABygAAAAAAAAAAAAABygAAAAAAAAIKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9JwAAAAAAAP0nAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgoAAAAAAAACSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIKAAAAAAAAAgoAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAkoAAAAAAAACygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJKAAAAAAAAAkoAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "scale(-"
					},
					"BwAAAAooAAAAAAAACygAAAAAAAAAAAAACygAAAAAAAAMKAAAAAAAAAAAAAAMKAAAAAAAAA0oAAAAAAAAAAAAAA0oAAAAAAAADigAAAAAAAAAAAAADigAAAAAAAAPKAAAAAAAAAAAAAAPKAAAAAAAABAoAAAAAAAAAAAAABAoAAAAAAAAESgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKKAAAAAAAAAooAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAABEoAAAAAAAAEigAAAAAAAAAAAAAEigAAAAAAAATKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARKAAAAAAAABEoAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAABIoAAAAAAAAEigAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATKAAAAAAAABMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABIoAAAAAAAAEygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASKAAAAAAAABIoAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAABIoAAAAAAAAEigAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATKAAAAAAAABMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABIoAAAAAAAAEygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASKAAAAAAAABIoAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " 1)"
					},
					"AwAAABMoAAAAAAAAFCgAAAAAAAAAAAAAFCgAAAAAAAAVKAAAAAAAAAAAAAAVKAAAAAAAABYoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATKAAAAAAAABMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"cut",
					null,
					"AQAAALYnAAAAAAAAticAAAAAAABmAAAAICBFbGVtZW50LnNldENTUyhlbGVtLCB7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCBsZWZ0OiAnMHB4JywgdG9wOiAnMHB4JywgdHJhbnNmb3JtOiAnc2NhbGUoLTEsIDEpJyB9KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2JwAAAAAAABwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					2,
					"paste",
					null,
					"AgAAALYnAAAAAAAAHCgAAAAAAAAAAAAAHCgAAAAAAACCKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2JwAAAAAAALYnAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPwnAAAAAAAA/ScAAAAAAAAAAAAA/ScAAAAAAAD9JwAAAAAAABsAAAAsIHRyYW5zZm9ybTogJ3NjYWxlKC0xLCAxKSc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8JwAAAAAAABcoAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ".firstElementChild"
					},
					"EgAAABcoAAAAAAAAGCgAAAAAAAAAAAAAGCgAAAAAAAAZKAAAAAAAAAAAAAAZKAAAAAAAABooAAAAAAAAAAAAABooAAAAAAAAGygAAAAAAAAAAAAAGygAAAAAAAAcKAAAAAAAAAAAAAAcKAAAAAAAAB0oAAAAAAAAAAAAAB0oAAAAAAAAHigAAAAAAAAAAAAAHigAAAAAAAAfKAAAAAAAAAAAAAAfKAAAAAAAACAoAAAAAAAAAAAAACAoAAAAAAAAISgAAAAAAAAAAAAAISgAAAAAAAAiKAAAAAAAAAAAAAAiKAAAAAAAACMoAAAAAAAAAAAAACMoAAAAAAAAJCgAAAAAAAAAAAAAJCgAAAAAAAAlKAAAAAAAAAAAAAAlKAAAAAAAACYoAAAAAAAAAAAAACYoAAAAAAAAJygAAAAAAAAAAAAAJygAAAAAAAAoKAAAAAAAAAAAAAAoKAAAAAAAACkoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXKAAAAAAAABcoAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAACwoAAAAAAAALSgAAAAAAAAAAAAALSgAAAAAAAAtKAAAAAAAAC8AAAAgcG9zaXRpb246ICdhYnNvbHV0ZScsIGxlZnQ6ICcwcHgnLCB0b3A6ICcwcHgnLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsKAAAAAAAAFsoAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAQoAAAAAAAABSgAAAAAAAAAAAAABSgAAAAAAAAGKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEKAAAAAAAAAQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					2,
					"left_delete",
					null,
					"AgAAAAUoAAAAAAAABSgAAAAAAAABAAAALwQoAAAAAAAABCgAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGKAAAAAAAAAYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAQoAAAAAAAABSgAAAAAAAAAAAAABSgAAAAAAAAGKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEKAAAAAAAAAQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					2,
					"left_delete",
					null,
					"AgAAAAUoAAAAAAAABSgAAAAAAAABAAAALwQoAAAAAAAABCgAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGKAAAAAAAAAYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "lk"
					},
					"AwAAABgoAAAAAAAAGSgAAAAAAAAAAAAAGSgAAAAAAAAZKAAAAAAAAAUAAABmaXJzdBkoAAAAAAAAGigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYKAAAAAAAAB0oAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAABkoAAAAAAAAGSgAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaKAAAAAAAABooAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "ast"
					},
					"AwAAABkoAAAAAAAAGigAAAAAAAAAAAAAGigAAAAAAAAbKAAAAAAAAAAAAAAbKAAAAAAAABwoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZKAAAAAAAABkoAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"right_delete",
					null,
					"AQAAABwoAAAAAAAAHCgAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcKAAAAAAAABwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "ä"
					},
					"AQAAABwoAAAAAAAAHSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcKAAAAAAAABwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA/T0AAAAAAACiPgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/vfs"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/vfs/fs-adapter-memory.js",
		"/home/roman/Projects/plot-cv/lib/htmlentities.js",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/hole.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/github-userscript.js",
		"/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
		"/home/roman/Projects/an-tronics/eagle/github-userscript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"streamify",
			"LoadSVG",
			"mountDirs",
			"defaultDirs",
			"glob\\b",
			"glob",
			"import { MessageReceiver, MessageTransmitter, MessageTransceiver, codecs, RPCApi, RPCProxy, RPCObject, RPCFactory, Connection, RPC_PARSE_ERROR, RPC_INVALID_REQUEST, RPC_METHOD_NOT_FOUND, RPC_INVALID_PARAMS, RPC_INTERNAL_ERROR, RPC_SERVER_ERROR_BASE, FactoryEndpoint, RPCServer, RPCClient, FactoryClient, RPCSocket, GetProperties, GetKeys, SerializeValue, DeserializeSymbols, DeserializeValue, RPCConnect, RPCListen } from './quickjs/qjs-net/js/rpc.js';\n",
			">\n",
			"^  (.)\\:",
			"Heute",
			"Hippiainen",
			"Hippiainen<",
			"media",
			"media_wrap",
			"ä",
			"ü",
			"ö",
			"BoardFromSchematic",
			"InitBoar",
			"MOVE",
			"instances",
			"PointList\\.prototype\\.([^ ]*) \\= function",
			"addPoint",
			"PointList\\.prototype\\.([^ ]*) \\= function",
			"\\.add\\b",
			"\\bvar\\b",
			"this\\._points",
			"add =",
			"safe",
			"this\\._points",
			"ySeries",
			"onMessage",
			"\\berror\\b",
			"send",
			"send.*error",
			"AddPoint",
			"error",
			"CreateSocket",
			"'L'",
			"lineCommand",
			"'L'",
			"zoomFactor",
			"ZoomHandler",
			"zoomFactor",
			"zoomPos",
			"ZoomHandler",
			"LoadSVG",
			"RenderPalette",
			"GetSignalNames",
			"TouchEvents",
			"MouseEvents",
			"FindPoint",
			"GetPosition",
			"CreateElement",
			"GetElementsBySignal",
			"SortElementsByPosition",
			"EllipticArc",
			"Tracked",
			"Observable",
			"onMouseWhee",
			"AddPoint",
			"AnchorPoints",
			"anchorPoints",
			"AddPoint",
			"Move",
			"Path",
			"'path'",
			"AnchorPoints",
			"'circle'",
			"TouchEvents",
			"$",
			"data-",
			"MovePoint",
			"AddPoint",
			"TouchEvent",
			"elementsFromPoint",
			"touchstart",
			"Touch \\? 'o",
			"touchstart",
			"FindPoint",
			"points",
			"FindPoint",
			"MovePoint",
			"anchorPoints",
			"useTrkl",
			"anchorPoints",
			"AddPoint",
			"assign",
			"anchorPoints",
			"point-",
			"'Touch'",
			"mousedown",
			"'touchstart",
			"waitOne",
			"streamify",
			"TouchEvents",
			"streamify",
			"TouchEvents",
			"touchstart",
			"streamify",
			"TouchEvents",
			"MoveHandler",
			"TouchEvents",
			"MouseEvents",
			"isObject",
			"BBox",
			"geom.js",
			"Up",
			"querySelector",
			"AnchorPoints",
			"'circle'",
			"nearest",
			"minIndex",
			"minDist",
			"find",
			"sub =",
			"distance",
			"prototype.",
			"\\.at",
			"\\.at =",
			"prototype.find",
			"toStringTag",
			"get points",
			"ls =",
			"Storage",
			"localStorage",
			"anchorPoints",
			"get points"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"  '\\1':",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 0,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715165701.35,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "upload-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36357,
						"regions":
						{
						},
						"selection":
						[
							[
								20872,
								20883
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 651,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715165697.61,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12598.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29538,
						"regions":
						{
						},
						"selection":
						[
							[
								4033,
								4033
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 140,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715165697.6,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2190.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "draw-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5161,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715165697.59,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "draw.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 500,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715165697.57,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "draw.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16716,
						"regions":
						{
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10398,
										10405
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										10380,
										10380
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										4381,
										4386
									],
									[
										4872,
										4877
									],
									[
										5162,
										5167
									],
									[
										10504,
										10511
									],
									[
										10605,
										10612
									],
									[
										10886,
										10893
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										4364,
										4364
									],
									[
										4825,
										4825
									],
									[
										5149,
										5149
									],
									[
										10489,
										10489
									],
									[
										10583,
										10583
									],
									[
										10868,
										10868
									]
								],
								"scope": "col_gutter"
							},
							"col_197DFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10645,
										10652
									]
								],
								"scope": "col_197DFFFF"
							},
							"col_197DFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_197DFFFF_circle.png",
								"regions":
								[
									[
										10645,
										10645
									]
								],
								"scope": "col_gutter"
							},
							"col_68DB19FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10637,
										10644
									]
								],
								"scope": "col_68DB19FF"
							},
							"col_68DB19FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_68DB19FF_circle.png",
								"regions":
								[
									[
										10637,
										10637
									]
								],
								"scope": "col_gutter"
							},
							"col_A138FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10653,
										10660
									]
								],
								"scope": "col_A138FFFF"
							},
							"col_A138FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_A138FFFF_circle.png",
								"regions":
								[
									[
										10653,
										10653
									]
								],
								"scope": "col_gutter"
							},
							"col_B6B6B6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10661,
										10668
									]
								],
								"scope": "col_B6B6B6FF"
							},
							"col_B6B6B6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B6B6B6FF_circle.png",
								"regions":
								[
									[
										10661,
										10661
									]
								],
								"scope": "col_gutter"
							},
							"col_E02231FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10613,
										10620
									],
									[
										10857,
										10864
									]
								],
								"scope": "col_E02231FF"
							},
							"col_E02231FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E02231FF_circle.png",
								"regions":
								[
									[
										10613,
										10613
									],
									[
										10839,
										10839
									]
								],
								"scope": "col_gutter"
							},
							"col_E4E20BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10629,
										10636
									]
								],
								"scope": "col_E4E20BFF"
							},
							"col_E4E20BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E4E20BFF_circle.png",
								"regions":
								[
									[
										10629,
										10629
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6092,
										6095
									],
									[
										15312,
										15315
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										6063,
										6063
									],
									[
										15258,
										15258
									]
								],
								"scope": "col_gutter"
							},
							"col_FF9B00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10621,
										10628
									]
								],
								"scope": "col_FF9B00FF"
							},
							"col_FF9B00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF9B00FF_circle.png",
								"regions":
								[
									[
										10621,
										10621
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								15869,
								16034
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 599,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1715580272.92,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13162.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"draw.js",
				"draw.js"
			],
			[
				"draw.ht",
				"draw.html"
			],
			[
				"draw",
				"draw-utils.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"htmle",
				"lib/htmlentities.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
