{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "ReadJSON(filename)\nWriteFile(name, data, verbose = true)\nWriteJSON(name, data)\nStartREPL(prefix = path.\n(\n[0], '.js'), suffix = '')\n  .help = () =>\n  .show = arg =>\n  .cleanup = () =>\n(...args) =>\n  main(...args)\n  (a, v) =>\n  (v, pv, o) =>\n  .createWS = (url, callbacks, listen) =>\n  (level, ...args) =>\n  onConnect(ws, req)\n  .sendMessage = function(msg)\n  onClose(ws)\n  onHttp(req, rsp)\n  onMessage(ws, data)\n  handleCommand(ws, data)\n  () =>\n  (dbg, sock) =>\n() =>\n  onFd(fd, rd, wr)\n  get connections()\n  get socklist()\n  quit(why)",
			"settings":
			{
				"buffer_size": 536,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					469,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/list-proxies.js",
						"symkeys":
						[
							[
								1035,
								1065
							],
							[
								1182,
								1202
							],
							[
								1348,
								1354
							],
							[
								1422,
								1428
							],
							[
								1470,
								1477
							],
							[
								1517,
								1523
							],
							[
								1549,
								1597
							],
							[
								1602,
								1603
							],
							[
								1766,
								1815
							],
							[
								1940,
								1960
							],
							[
								2164,
								2176
							],
							[
								2876,
								2895
							],
							[
								3420,
								3427
							],
							[
								3648,
								3679
							],
							[
								3710,
								3742
							],
							[
								3912,
								3944
							],
							[
								4032,
								4064
							],
							[
								4103,
								4131
							],
							[
								4217,
								4237
							],
							[
								4449,
								4455
							],
							[
								4521,
								4527
							],
							[
								4569,
								4576
							],
							[
								4616,
								4622
							],
							[
								4648,
								4696
							],
							[
								4701,
								4702
							],
							[
								4967,
								4978
							],
							[
								5038,
								5066
							],
							[
								5805,
								5826
							],
							[
								6447,
								6468
							],
							[
								6509,
								6532
							],
							[
								6658,
								6679
							],
							[
								6856,
								6872
							],
							[
								7140,
								7146
							],
							[
								7219,
								7228
							],
							[
								7327,
								7333
							],
							[
								8410,
								8421
							],
							[
								9199,
								9275
							],
							[
								9472,
								9481
							],
							[
								9488,
								9492
							],
							[
								9525,
								9533
							],
							[
								9540,
								9544
							],
							[
								9626,
								9636
							],
							[
								9649,
								9653
							],
							[
								9837,
								9843
							]
						],
						"symlist":
						[
							"function TCPSocket(host, port)",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							"function HTTPRequest(url, proxy_host, proxy_port)",
							"(resolve, reject) =>",
							" res =>",
							"function Proxy(obj)",
							"prop =>",
							".prototype.valueOf = function()",
							".prototype.toSource = function()",
							".prototype.toString = function()",
							".prototype.check = function(url)",
							".prototype.ping = function()",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							" function()",
							"async function main(...args)",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (err, proxies) =>",
							"async (push, stop) =>",
							"async proxies =>",
							"err =>",
							" error =>",
							" () =>",
							"async () =>",
							"async function writeResults(results, format = 'txt', outputName = 'proxies')",
							"txt: r =>",
							"p =>",
							"sh: r =>",
							"p =>",
							"json: r =>",
							"p =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1CQAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQogIG1haW4oLi4uYXJncykKICBmbiA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQogIG5hbWUgPT4KICBzdGF0ID0+CiAgKHYsIHApID0+CiAgdG9TdHJpbmcoKQogIHRvU3RyaW5nKCkKICB2ID0+CihbcCwgbl0sIGkpID0+Ck5vU3lzdGVtSW5jbHVkZXMgPSAoW3AsIG4sIGxdKSA9PgogIChbcGF0aCwgZGVjbF0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CiAgbmFtZXMgPSBkZWNscyA9PgooW3BhdGgsIGRlY2xdKSA9PgogIGRlY2xhcmF0aW9ucyA9IGRlY2xzID0+CihbcGF0aCwgZGVjbCwgbG9jXSkgPT4KKFtwYXRoLCBkZWNsXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKGEsIGIpID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcF0pID0+CihbcF0pID0+CihbcF0pID0+CiAgcCA9PgooW3AsIG5dKSA9PgooW3AsIG5dKSA9PgooYSwgYikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuLCBsXSkgPT4KICBrID0+CiAgbm9kZSA9PgooW3AsIG5dKSA9PgogIHAgPT4KICBwID0+CihbcCwgbl0pID0+CihbcGF0aCwgbm9kZSwgaWQsIG5hbWUsIHR5cGUsIGtpbmRdKSA9PgogIGRlY2wgPT4KKGZpZWxkLCBpKSA9PgogIGZpbmREZWNsID0gbm9kZSA9PgogIChuLCBwKSA9PgogIGZpbmRUeXBlID0gbmFtZSA9PgogIChuLCBwKSA9PgogIG5vZGVUeXBlID0gbiA9PgogIHQgPT4KICBuID0+CiAgbm9kZU5hbWUgPSAobiwgbmFtZSkgPT4KICBmaW5kSWQgPSBpZCA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kSWRLaW5kID0gKGlkLCBraW5kKSA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kTm9kZSA9IChpZCwga2luZCwgZXhjbHVkZSkgPT4KICAobiwgcCkgPT4KKHsgcGF0aCwgdmFsdWUgfSkgPT4KICBuID0+CihbcCwgbGVuLCBuXSkgPT4KKFtwLCAsIG5dKSA9PgogIGZpZWxkRGVjbHMgPSBub2RlID0+CiAgbiA9PgogIG4gPT4KICAoW29mZnNldCwgYXJyXSwgW25hbWUsIHR5cGVdKSA9PgooW25hbWUsIHR5cGUsIG9mZnNldCwgc2l6ZV0pID0+CiAgc3RydWN0U2l6ZSA9IG1hcCA9PgooYWNjLCBbbmFtZSwgW3R5cGUsIG9mZnNldCwgc2l6ZV1dKSA9PgooW3BhdGgsIG5vZGUsIGlkLCBuYW1lLCB0eXBlLCBraW5kXSkgPT4KKFtwYXRoLCBub2RlLCBpZCwgbmFtZSwgdHlwZSwga2luZF0pID0+CihbZGVjbCwgbm9kZV0pID0+CihbbmFtZSwgdmFsdWVdKSA9PgooW25hbWUsIGZpZWxkc10pID0+CihbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgc3ViID0+CiAgKFtvZmZzZXQsIGVudHJpZXNdLCBba2V5LCB0eXBlXSkgPT4KRGVmaW5lUHJvdG90eXBlKG5hbWUsIHJldFR5cGUsIHBhcmFtcykKICAoKSA9PgogIHQgPT4KICB2YXJuYW1lID0gbiA9PgogIHZhcm5hbWUgPSBuYW1lID0+CihbbmFtZSwgW3BhcmFtLCBvZmZzZXRdXSkgPT4KKFtuYW1lXSwgaSkgPT4KICBuYW1lID0+CiAgbiA9PgogIHJlY29yZCA9PgogIHIgPT4KICBub2RlID0+CiAgZ2V0SWRzID0gKGlkLCBleGNsdWRlKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICBwID0+CiAgcCA9PgogIG4gPT4KICAoYSwgbikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICAoYSwgZmllbGQpID0+CihbbmFtZSwgdHlwZV0pID0+CiAgKCkgPT4KICBzID0+CiAgYSA9PgooW3AsIG4sIHgsIHksIGExLCBhMiwgdCwgaW5uZXJdKSA9PgogIChbb2Zmc2V0LCBhcnJdLCBbbmFtZSwgW3R5cGUsIGJ5dGVMZW5ndGhdXSwgaSkgPT4KKGEsIFt0eXBlLCBieXRlTGVuZ3RoXSkgPT4KKFtwLCBpZF0pID0+CiAgZ2V0SWQgPSAoaWQsIGV4Y2x1ZGUpID0+Cihub2RlLCBwYXRoKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KQmFzZVBhdGhJbmRleChwYXRoKQogIGsgPT4KRmluZEJhY2t3YXJkcyhub2RlLCBwcmVkID0gKFtwLCBuXSkgPT4gZmFsc2UpCkdldFR5cGVTdHIobm9kZSkKICBpbm5lciA9PgogIGlubmVyID0+CihbbiwgdF0pID0+Ck1ha2VGaWxlbmFtZShjbGFzc05hbWUpClBhdGgyTG9jKHBhdGgpCihbcF0pID0+CldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKICB3cml0ZU91dHB1dChuYW1lLCBkYXRhKQpHZXRMaWJyYXJ5Rm9yKHN5bWJvbE5hbWUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKR2VuZXJhdGVTdHJ1Y3RDbGFzcyhuYW1lLCBbc2l6ZSwgbWFwXSkKICBsaW5lID0+CiAgZmllbGQgPT4KR2VuZXJhdGVHZXRTZXQobmFtZSwgb2Zmc2V0LCBzaXplKQpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCkKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoKQAAAAAAAAAA5wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					470,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-tmtheme.js",
						"symkeys":
						[
							[
								340,
								370
							],
							[
								578,
								585
							],
							[
								605,
								619
							],
							[
								760,
								765
							],
							[
								784,
								804
							],
							[
								955,
								962
							],
							[
								1105,
								1109
							],
							[
								1114,
								1137
							],
							[
								1485,
								1489
							],
							[
								1508,
								1521
							],
							[
								1648,
								1665
							],
							[
								1797,
								1804
							],
							[
								2160,
								2175
							],
							[
								2269,
								2306
							],
							[
								3148,
								3190
							],
							[
								3473,
								3482
							],
							[
								3665,
								3674
							],
							[
								4665,
								4693
							],
							[
								5020,
								5024
							],
							[
								5518,
								5531
							],
							[
								5695,
								5702
							],
							[
								5752,
								5759
							],
							[
								5875,
								5882
							],
							[
								5933,
								5940
							],
							[
								6002,
								6006
							],
							[
								6058,
								6062
							],
							[
								6439,
								6443
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"Comment",
							"constructor(s)",
							"PList",
							"constructor(...args)",
							"item =>",
							"Pair",
							"constructor(key, value)",
							"Dict",
							"constructor()",
							"([key, value]) =>",
							"item =>",
							"set(key, value)",
							"function Element2Object(element, key)",
							"function Object2Element(object, path = [])",
							"(v, k) =>",
							"(v, k) =>",
							"async function main(...args)",
							"n =>",
							"([, node]) =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"s =>",
							"s =>",
							"s =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnAgAAVENQU29ja2V0KGhvc3QsIHBvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICAoKSA9PgogIGVyciA9PgogICgpID0+CiAgZmluaXNoKG1zZywgc3RhcnQgPSAtMSwgZW5kID0gRGF0ZS4KKQpIVFRQUmVxdWVzdCh1cmwsIHByb3h5X2hvc3QsIHByb3h5X3BvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzID0+ClByb3h5KG9iaikKICBwcm9wID0+CiAgLnByb3RvdHlwZS52YWx1ZU9mID0gZnVuY3Rpb24oKQogIC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCiAgLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKICAucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24odXJsKQogIC5wcm90b3R5cGUucGluZyA9IGZ1bmN0aW9uKCkKKHJlc29sdmUsIHJlamVjdCkgPT4KICAoKSA9PgogICgpID0+CiAgZXJyID0+CiAgKCkgPT4KICBmaW5pc2gobXNnLCBzdGFydCA9IC0xLCBlbmQgPSBEYXRlLgopCiAgZnVuY3Rpb24oKQogIG1haW4oLi4uYXJncykKKHB1c2gsIHN0b3ApID0+CihwdXNoLCBzdG9wKSA9PgooZXJyLCBwcm94aWVzKSA9PgoocHVzaCwgc3RvcCkgPT4KICBwcm94aWVzID0+CiAgZXJyID0+CiAgZXJyb3IgPT4KICAoKSA9PgooKSA9PgogIHdyaXRlUmVzdWx0cyhyZXN1bHRzLCBmb3JtYXQgPSAndHh0Jywgb3V0cHV0TmFtZSA9ICdwcm94aWVzJykKICB0eHQ6IHIgPT4KICBwID0+CiAgc2g6IHIgPT4KICBwID0+CiAganNvbjogciA9PgogIHAgPT4KICBlcnIgPT4AAAAAAAAAAGwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					471,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-svgpath.js",
						"symkeys":
						[
							[
								995,
								999
							],
							[
								2140,
								2144
							],
							[
								2364,
								2368
							],
							[
								3411,
								3448
							]
						],
						"symlist":
						[
							"n =>",
							"p =>",
							"p =>",
							"function* dataToPoints(d, steps = 10)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsAQAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkNvbW1lbnQKICBjb25zdHJ1Y3RvcihzKQpQTGlzdAogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgaXRlbSA9PgpQYWlyCiAgY29uc3RydWN0b3Ioa2V5LCB2YWx1ZSkKRGljdAogIGNvbnN0cnVjdG9yKCkKKFtrZXksIHZhbHVlXSkgPT4KICBpdGVtID0+CiAgc2V0KGtleSwgdmFsdWUpCkVsZW1lbnQyT2JqZWN0KGVsZW1lbnQsIGtleSkKT2JqZWN0MkVsZW1lbnQob2JqZWN0LCBwYXRoID0gW10pCih2LCBrKSA9PgoodiwgaykgPT4KICBtYWluKC4uLmFyZ3MpCiAgbiA9PgooWywgbm9kZV0pID0+CiAgcGFpciA9PgogIHBhaXIgPT4KICBwYWlyID0+CiAgcGFpciA9PgogIHMgPT4KICBzID0+CiAgcyA9PgAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					472,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
						"symkeys":
						[
							[
								200,
								205
							],
							[
								236,
								241
							],
							[
								262,
								287
							],
							[
								376,
								457
							],
							[
								462,
								494
							],
							[
								1470,
								1474
							],
							[
								1601,
								1610
							],
							[
								2105,
								2118
							],
							[
								2123,
								2159
							],
							[
								2279,
								2296
							],
							[
								2388,
								2404
							],
							[
								2449,
								2470
							],
							[
								2539,
								2553
							],
							[
								3230,
								3246
							],
							[
								3276,
								3286
							],
							[
								3312,
								3321
							],
							[
								3373,
								3389
							],
							[
								3625,
								3635
							],
							[
								3717,
								3723
							],
							[
								4087,
								4100
							],
							[
								4433,
								4455
							],
							[
								4744,
								4753
							],
							[
								4816,
								4836
							],
							[
								4934,
								4945
							],
							[
								5551,
								5558
							],
							[
								5594,
								5614
							],
							[
								5682,
								5695
							],
							[
								6568,
								6593
							],
							[
								6736,
								6753
							],
							[
								6964,
								6985
							],
							[
								7583,
								7608
							],
							[
								7761,
								7773
							],
							[
								7794,
								7813
							],
							[
								7887,
								7904
							],
							[
								8185,
								8198
							],
							[
								8261,
								8282
							],
							[
								8301,
								8314
							],
							[
								8389,
								8400
							],
							[
								8505,
								8515
							],
							[
								8615,
								8624
							],
							[
								8744,
								8760
							],
							[
								8887,
								8900
							],
							[
								9159,
								9168
							],
							[
								9425,
								9436
							],
							[
								9476,
								9487
							],
							[
								9519,
								9539
							],
							[
								9668,
								9687
							],
							[
								9822,
								9841
							],
							[
								9962,
								9987
							],
							[
								10279,
								10289
							],
							[
								10445,
								10459
							],
							[
								10611,
								10621
							],
							[
								10880,
								10901
							]
						],
						"symlist":
						[
							"() =>",
							"() =>",
							" function Crop(mat, rect)",
							"function ImageSize(src, dst, dsize, action = (name, arg1, arg2) => console.",
							"(`${name} ${arg1} -> ${arg2}`) )",
							"s =>",
							"(a, b) =>",
							"ImageSequence",
							"constructor(images = [], dimensions)",
							"get frame_count()",
							"get pos_frames()",
							"set pos_frames(value)",
							"get pos_msec()",
							"getBackendName()",
							"isOpened()",
							"get(prop)",
							"set(prop, value)",
							"get size()",
							"grab()",
							"retrieve(mat)",
							" (name, arg1, arg2) =>",
							"read(mat)",
							"isVideoPath = arg =>",
							"VideoSource",
							"name =>",
							"constructor(...args)",
							"(acc, arg) =>",
							"capture(device, driverId)",
							".propId = prop =>",
							".read = function(mat)",
							".retrieve = function(mat)",
							"VideoCapture",
							"fromImages(...args)",
							".propId = prop =>",
							"ImageSequence",
							".read = function(mat)",
							"ImageSequence",
							"set size(s)",
							"get size()",
							"get(prop)",
							"set(prop, value)",
							"get backend()",
							"get fps()",
							"propName =>",
							"([k, v]) =>",
							"seekFrames(relative)",
							"seekMsecs(relative)",
							"get durationMsecs()",
							"position(type = 'frames')",
							"get size()",
							"set size(size)",
							"get time()",
							"pad = (i, n, frac) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBuID0+CiAgcCA9PgogIHAgPT4KICBkYXRhVG9Qb2ludHMoZCwgc3RlcHMgPSAxMCkAAAAAAAAAANEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					473,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
						"symkeys":
						[
							[
								649,
								671
							],
							[
								2516,
								2520
							],
							[
								3070,
								3091
							],
							[
								3129,
								3133
							],
							[
								3869,
								3881
							],
							[
								4660,
								4681
							],
							[
								4749,
								4772
							],
							[
								4961,
								5000
							],
							[
								5279,
								5315
							],
							[
								5543,
								5574
							],
							[
								5813,
								5825
							]
						],
						"symlist":
						[
							"function main(...args)",
							"n =>",
							"Range = (from, to) =>",
							"n =>",
							"(id, idx) =>",
							" function toHex(num)",
							" function toHex32(num)",
							" function get_leb128(buf, offset, len)",
							" function get_bytes(buf, offset, n)",
							" function get_str(buf, offset)",
							"catch(error)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRAwAAKCkgPT4KKCkgPT4KQ3JvcChtYXQsIHJlY3QpCkltYWdlU2l6ZShzcmMsIGRzdCwgZHNpemUsIGFjdGlvbiA9IChuYW1lLCBhcmcxLCBhcmcyKSA9PiBjb25zb2xlLgooYCR7bmFtZX0gJHthcmcxfSAtPiAke2FyZzJ9YCkgKQogIHMgPT4KKGEsIGIpID0+CkltYWdlU2VxdWVuY2UKICBjb25zdHJ1Y3RvcihpbWFnZXMgPSBbXSwgZGltZW5zaW9ucykKICBnZXQgZnJhbWVfY291bnQoKQogIGdldCBwb3NfZnJhbWVzKCkKICBzZXQgcG9zX2ZyYW1lcyh2YWx1ZSkKICBnZXQgcG9zX21zZWMoKQogIGdldEJhY2tlbmROYW1lKCkKICBpc09wZW5lZCgpCiAgZ2V0KHByb3ApCiAgc2V0KHByb3AsIHZhbHVlKQogIGdldCBzaXplKCkKICBncmFiKCkKICByZXRyaWV2ZShtYXQpCiAgKG5hbWUsIGFyZzEsIGFyZzIpID0+CiAgcmVhZChtYXQpCiAgaXNWaWRlb1BhdGggPSBhcmcgPT4KVmlkZW9Tb3VyY2UKICBuYW1lID0+CiAgY29uc3RydWN0b3IoLi4uYXJncykKKGFjYywgYXJnKSA9PgogIGNhcHR1cmUoZGV2aWNlLCBkcml2ZXJJZCkKICAucHJvcElkID0gcHJvcCA9PgogIC5yZWFkID0gZnVuY3Rpb24obWF0KQogIC5yZXRyaWV2ZSA9IGZ1bmN0aW9uKG1hdCkKVmlkZW9DYXB0dXJlCiAgZnJvbUltYWdlcyguLi5hcmdzKQogIC5wcm9wSWQgPSBwcm9wID0+CkltYWdlU2VxdWVuY2UKICAucmVhZCA9IGZ1bmN0aW9uKG1hdCkKSW1hZ2VTZXF1ZW5jZQogIHNldCBzaXplKHMpCiAgZ2V0IHNpemUoKQogIGdldChwcm9wKQogIHNldChwcm9wLCB2YWx1ZSkKICBnZXQgYmFja2VuZCgpCiAgZ2V0IGZwcygpCiAgcHJvcE5hbWUgPT4KKFtrLCB2XSkgPT4KICBzZWVrRnJhbWVzKHJlbGF0aXZlKQogIHNlZWtNc2VjcyhyZWxhdGl2ZSkKICBnZXQgZHVyYXRpb25Nc2VjcygpCiAgcG9zaXRpb24odHlwZSA9ICdmcmFtZXMnKQogIGdldCBzaXplKCkKICBzZXQgc2l6ZShzaXplKQogIGdldCB0aW1lKCkKICBwYWQgPSAoaSwgbiwgZnJhYykgPT4AAAAAAAAAAL0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					474,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1168,
								1188
							],
							[
								1351,
								1367
							],
							[
								1421,
								1440
							],
							[
								1475,
								1491
							],
							[
								1547,
								1563
							],
							[
								1626,
								1660
							],
							[
								1683,
								1715
							],
							[
								1738,
								1781
							],
							[
								2022,
								2034
							],
							[
								3857,
								3876
							],
							[
								3974,
								3990
							],
							[
								4052,
								4070
							],
							[
								4134,
								4153
							],
							[
								4218,
								4227
							],
							[
								4282,
								4299
							],
							[
								4362,
								4379
							],
							[
								4442,
								4456
							],
							[
								4516,
								4531
							],
							[
								4592,
								4607
							],
							[
								4668,
								4676
							],
							[
								4730,
								4742
							],
							[
								4800,
								4810
							],
							[
								4866,
								4877
							],
							[
								4934,
								4942
							],
							[
								4996,
								5018
							],
							[
								5086,
								5101
							],
							[
								5162,
								5184
							],
							[
								5252,
								5268
							],
							[
								5330,
								5346
							],
							[
								5408,
								5420
							],
							[
								5478,
								5490
							],
							[
								5548,
								5561
							],
							[
								5620,
								5638
							],
							[
								5696,
								5714
							],
							[
								5778,
								5800
							],
							[
								5868,
								5895
							],
							[
								5968,
								5985
							],
							[
								6042,
								6059
							],
							[
								6116,
								6133
							],
							[
								6180,
								6196
							],
							[
								6279,
								6295
							],
							[
								6367,
								6383
							],
							[
								6455,
								6472
							],
							[
								6529,
								6549
							],
							[
								6608,
								6628
							],
							[
								6787,
								6806
							],
							[
								6882,
								6889
							],
							[
								6918,
								6938
							],
							[
								7008,
								7023
							],
							[
								7084,
								7110
							],
							[
								7188,
								7209
							],
							[
								7287,
								7313
							],
							[
								7359,
								7384
							],
							[
								7469,
								7511
							],
							[
								7645,
								7685
							],
							[
								10886,
								10929
							],
							[
								11382,
								11417
							],
							[
								11573,
								11591
							],
							[
								11621,
								11626
							],
							[
								11716,
								11743
							],
							[
								11862,
								11883
							],
							[
								11912,
								11928
							],
							[
								12021,
								12056
							],
							[
								12096,
								12114
							],
							[
								12301,
								12322
							],
							[
								12346,
								12356
							],
							[
								12395,
								12425
							],
							[
								12751,
								12785
							],
							[
								13100,
								13134
							],
							[
								13354,
								13388
							],
							[
								13454,
								13490
							],
							[
								13565,
								13582
							],
							[
								13741,
								13778
							],
							[
								13779,
								13793
							],
							[
								13799,
								13803
							],
							[
								13878,
								13910
							],
							[
								13938,
								13964
							],
							[
								14289,
								14311
							],
							[
								14362,
								14378
							],
							[
								14393,
								14400
							],
							[
								14428,
								14444
							],
							[
								14527,
								14544
							],
							[
								14545,
								14554
							],
							[
								14606,
								14623
							],
							[
								14624,
								14633
							],
							[
								14693,
								14710
							],
							[
								14711,
								14734
							],
							[
								14790,
								14814
							],
							[
								17441,
								17469
							],
							[
								17900,
								17904
							],
							[
								18032,
								18045
							],
							[
								18361,
								18373
							],
							[
								18636,
								18649
							],
							[
								18754,
								18768
							],
							[
								19661,
								19689
							],
							[
								19805,
								19818
							],
							[
								19930,
								19956
							],
							[
								20669,
								20731
							],
							[
								20765,
								20834
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AAAAICBtYWluKC4uLmFyZ3MpCiAgbiA9PgpSYW5nZSA9IChmcm9tLCB0bykgPT4KICBuID0+CihpZCwgaWR4KSA9PgogIHRvSGV4KG51bSkKICB0b0hleDMyKG51bSkKICBnZXRfbGViMTI4KGJ1Ziwgb2Zmc2V0LCBsZW4pCiAgZ2V0X2J5dGVzKGJ1Ziwgb2Zmc2V0LCBuKQogIGdldF9zdHIoYnVmLCBvZmZzZXQpCiAgY2F0Y2goZXJyb3IpAAAAAAAAAAAQCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					475,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-readdir.js",
						"symkeys":
						[
							[
								327,
								362
							],
							[
								424,
								476
							],
							[
								830,
								858
							]
						],
						"symlist":
						[
							"function* Filter(gen, regEx = /.*/)",
							"function* ReadDirRecursive(dir, maxDepth = Infinity)",
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAQCAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIChuLCAuLi5yZXN0KSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgaGFzUHJvdG90eXBlKG9iaiwgcHJvdG8pCiAgZmlsdGVyKHNlcSwgcHJlZCwgdGhpc0FyZykKICBwcmVkID0gKGVsLCBpKSA9PgogIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgKC4uLmFyZ3MpID0+CiAgYSA9PgogIHNwbGl0KGJ1ZiwgLi4ucG9pbnRzKQogIHNwbGl0QXQgPSAoYiwgcG9zLCBsZW4pID0+CiAgdW5pcXVlID0gKGFyciwgY21wKSA9PgogIChlbCwgaSwgYXJyKSA9PgogIGl0ZW0gPT4KICAoZWwsIGksIGFycikgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgY29kZSA9PgogIChvZmZzZXQgPSAwKSA9PgogIChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGdldEFuc2lTdHlsZXMoKQogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBjID0+CiAgdmFsdWU6IGhleCA9PgogIGNoYXJhY3RlciA9PgogIHZhbHVlOiBoZXggPT4KICB2YWx1ZTogY29kZSA9PgogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICB2YWx1ZTogaGV4ID0+CiAgcmFuZEludCguLi5hcmdzKQogIC5leHRlbmRBcnJheSA9IChwcm90byA9IEFycmF5LnByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+CiAgLmV4dGVuZEdlbmVyYXRvciA9IChwcm90byA9IEdlbmVyYXRvclByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+AAAAAAAAAABUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					476,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-lexer.js",
						"symkeys":
						[
							[
								205,
								219
							],
							[
								431,
								449
							],
							[
								990,
								1014
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"function main(arg)",
							"function tokenColor(tok)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABUAAAARmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					477,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-image.js",
						"symkeys":
						[
							[
								1232,
								1237
							],
							[
								1304,
								1319
							],
							[
								1345,
								1366
							],
							[
								1399,
								1427
							],
							[
								1467,
								1487
							],
							[
								1517,
								1529
							],
							[
								1552,
								1562
							],
							[
								1583,
								1604
							],
							[
								1636,
								1661
							],
							[
								1706,
								1727
							],
							[
								1803,
								1824
							],
							[
								1924,
								1933
							],
							[
								1951,
								1961
							],
							[
								2023,
								2032
							],
							[
								2093,
								2101
							],
							[
								2161,
								2169
							],
							[
								2232,
								2260
							],
							[
								2301,
								2308
							],
							[
								2352,
								2402
							],
							[
								2406,
								2410
							],
							[
								2433,
								2443
							],
							[
								2474,
								2498
							],
							[
								2529,
								2534
							],
							[
								2573,
								2598
							],
							[
								2846,
								2858
							],
							[
								2879,
								2899
							],
							[
								2973,
								3002
							],
							[
								3092,
								3113
							],
							[
								3154,
								3233
							],
							[
								3305,
								3335
							],
							[
								3405,
								3439
							],
							[
								3487,
								3510
							],
							[
								3537,
								3541
							],
							[
								3595,
								3622
							],
							[
								3700,
								3732
							],
							[
								3926,
								3948
							],
							[
								4250,
								4263
							],
							[
								4420,
								4439
							],
							[
								4504,
								4547
							],
							[
								5290,
								5312
							],
							[
								5375,
								5381
							],
							[
								5417,
								5421
							],
							[
								5601,
								5622
							],
							[
								5784,
								5813
							],
							[
								9124,
								9155
							],
							[
								9787,
								9815
							],
							[
								9986,
								10009
							],
							[
								10069,
								10092
							],
							[
								10215,
								10244
							],
							[
								10531,
								10555
							],
							[
								10756,
								10783
							],
							[
								10831,
								10836
							],
							[
								11114,
								11143
							],
							[
								11689,
								11702
							],
							[
								11935,
								11943
							],
							[
								12458,
								12500
							],
							[
								12641,
								12646
							],
							[
								12800,
								12821
							],
							[
								12862,
								12881
							],
							[
								12892,
								12910
							],
							[
								13045,
								13050
							],
							[
								13787,
								13825
							],
							[
								17001,
								17024
							],
							[
								17823,
								17835
							],
							[
								18087,
								18126
							],
							[
								20426,
								20465
							],
							[
								20501,
								20521
							],
							[
								21148,
								21152
							],
							[
								21527,
								21560
							],
							[
								21644,
								21653
							],
							[
								21686,
								21707
							],
							[
								22471,
								22485
							],
							[
								22602,
								22618
							],
							[
								22767,
								22775
							]
						],
						"symlist":
						[
							"() =>",
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAICB0ZXN0Zm4gPSAoKSA9PgogIG1haW4oYXJnKQogIHRva2VuQ29sb3IodG9rKQAAAAAAAAAAUwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					478,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-call.js",
						"symkeys":
						[
							[
								145,
								153
							],
							[
								175,
								195
							],
							[
								356,
								364
							],
							[
								408,
								436
							],
							[
								551,
								563
							]
						],
						"symlist":
						[
							"Callable",
							"constructor(...args)",
							"Callable",
							"async function main(...args)",
							"(...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTBQAAKCkgPT4KTlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAARQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					479,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/noise.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAAAAQ2FsbGFibGUKICBjb25zdHJ1Y3RvciguLi5hcmdzKQpDYWxsYWJsZQogIG1haW4oLi4uYXJncykKKC4uLmFyZ3MpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					480,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/dump-structs.js",
						"symkeys":
						[
							[
								471,
								495
							],
							[
								659,
								665
							],
							[
								709,
								726
							],
							[
								836,
								864
							],
							[
								1037,
								1042
							],
							[
								1257,
								1267
							],
							[
								1317,
								1327
							],
							[
								2301,
								2305
							],
							[
								2352,
								2356
							],
							[
								2411,
								2448
							],
							[
								2650,
								2657
							],
							[
								2708,
								2715
							],
							[
								3182,
								3199
							],
							[
								3404,
								3414
							],
							[
								3714,
								3724
							],
							[
								4285,
								4290
							],
							[
								4500,
								4514
							],
							[
								4578,
								4611
							],
							[
								4791,
								4809
							],
							[
								4927,
								4938
							],
							[
								5009,
								5020
							],
							[
								5194,
								5210
							],
							[
								5226,
								5243
							],
							[
								5272,
								5295
							],
							[
								5311,
								5333
							],
							[
								5412,
								5429
							],
							[
								5708,
								5719
							],
							[
								5776,
								5787
							],
							[
								5915,
								5924
							],
							[
								5987,
								5998
							],
							[
								6060,
								6071
							],
							[
								6159,
								6170
							],
							[
								6251,
								6259
							],
							[
								6321,
								6329
							],
							[
								6363,
								6371
							],
							[
								6405,
								6409
							],
							[
								6591,
								6602
							],
							[
								6659,
								6670
							],
							[
								6704,
								6713
							],
							[
								6802,
								6813
							],
							[
								6866,
								6880
							],
							[
								7027,
								7031
							],
							[
								7323,
								7330
							],
							[
								7407,
								7418
							],
							[
								7444,
								7448
							],
							[
								7528,
								7532
							],
							[
								7569,
								7580
							],
							[
								7691,
								7730
							],
							[
								7773,
								7780
							],
							[
								7853,
								7866
							],
							[
								8172,
								8190
							],
							[
								8252,
								8277
							],
							[
								8506,
								8524
							],
							[
								8539,
								8549
							],
							[
								8622,
								8637
							],
							[
								8674,
								8678
							],
							[
								9221,
								9226
							],
							[
								9278,
								9301
							],
							[
								9516,
								9530
							],
							[
								9547,
								9562
							],
							[
								9620,
								9646
							],
							[
								9675,
								9690
							],
							[
								9769,
								9802
							],
							[
								9864,
								9889
							],
							[
								10224,
								10244
							],
							[
								10319,
								10323
							],
							[
								10415,
								10431
							],
							[
								10460,
								10473
							],
							[
								10495,
								10515
							],
							[
								10643,
								10647
							],
							[
								10703,
								10707
							],
							[
								10758,
								10810
							],
							[
								11020,
								11051
							],
							[
								11168,
								11187
							],
							[
								11204,
								11242
							],
							[
								12271,
								12310
							],
							[
								12383,
								12422
							],
							[
								12466,
								12483
							],
							[
								12567,
								12585
							],
							[
								12614,
								12633
							],
							[
								12895,
								12912
							],
							[
								12964,
								12981
							],
							[
								13077,
								13083
							],
							[
								13806,
								13867
							],
							[
								14276,
								14333
							],
							[
								14373,
								14392
							],
							[
								14406,
								14424
							],
							[
								14582,
								14596
							],
							[
								14853,
								14870
							],
							[
								15100,
								15128
							],
							[
								15258,
								15272
							],
							[
								15335,
								15342
							],
							[
								15551,
								15555
							],
							[
								16247,
								16256
							],
							[
								16324,
								16328
							],
							[
								16715,
								16722
							],
							[
								16767,
								16792
							],
							[
								16821,
								16836
							],
							[
								16883,
								16894
							],
							[
								16968,
								16979
							],
							[
								17068,
								17073
							],
							[
								17192,
								17197
							],
							[
								17370,
								17374
							],
							[
								17458,
								17485
							],
							[
								17806,
								17817
							],
							[
								17905,
								17916
							],
							[
								18138,
								18173
							],
							[
								18325,
								18342
							],
							[
								18466,
								18497
							],
							[
								18517,
								18547
							],
							[
								18741,
								18745
							],
							[
								18794,
								18829
							],
							[
								18871,
								18934
							],
							[
								19652,
								19678
							],
							[
								19919,
								19931
							],
							[
								19952,
								19976
							],
							[
								19993,
								20008
							],
							[
								20103,
								20118
							],
							[
								20199,
								20210
							],
							[
								20234,
								20245
							],
							[
								20466,
								20477
							],
							[
								20578,
								20589
							],
							[
								20677,
								20715
							],
							[
								20752,
								20756
							],
							[
								20809,
								20873
							],
							[
								21018,
								21053
							],
							[
								21177,
								21185
							],
							[
								21261,
								21269
							],
							[
								21341,
								21352
							],
							[
								21542,
								21584
							],
							[
								21869,
								21898
							],
							[
								21997,
								22005
							],
							[
								22123,
								22169
							],
							[
								22348,
								22380
							],
							[
								22544,
								22578
							],
							[
								22818,
								22874
							],
							[
								23235,
								23288
							],
							[
								23546,
								23594
							],
							[
								24051,
								24058
							],
							[
								24228,
								24236
							],
							[
								24326,
								24369
							],
							[
								24588,
								24630
							],
							[
								24865,
								24902
							]
						],
						"symlist":
						[
							"findLastIndex(predicate)",
							"tail()",
							"startsWith(start)",
							"async function main(...args)",
							"fn =>",
							" (a, p) =>",
							" (a, p) =>",
							"d =>",
							"v =>",
							"async function processFiles(...files)",
							"name =>",
							"stat =>",
							" (v, p) =>",
							"toString()",
							"toString()",
							" v =>",
							"([p, n], i) =>",
							"NoSystemIncludes = ([p, n, l]) =>",
							" ([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"names = decls =>",
							"([path, decl]) =>",
							"declarations = decls =>",
							"([path, decl, loc]) =>",
							"([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p]) =>",
							"([p]) =>",
							"([p]) =>",
							"p =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n, l]) =>",
							"k =>",
							"node =>",
							"([p, n]) =>",
							"p =>",
							"p =>",
							"([p, n]) =>",
							"([path, node, id, name, type, kind]) =>",
							"decl =>",
							"(field, i) =>",
							"findDecl = node =>",
							" (n, p) =>",
							"findType = name =>",
							" (n, p) =>",
							"nodeType = n =>",
							"t =>",
							" n =>",
							"nodeName = (n, name) =>",
							"findId = id =>",
							"(node, path) =>",
							"findIdKind = (id, kind) =>",
							"(node, path) =>",
							"findNode = (id, kind, exclude) =>",
							" (n, p) =>",
							"({ path, value }) =>",
							"n =>",
							"([p, len, n]) =>",
							"([p, , n]) =>",
							"fieldDecls = node =>",
							"n =>",
							"n =>",
							" ([offset, arr], [name, type]) =>",
							"([name, type, offset, size]) =>",
							"structSize = map =>",
							"(acc, [name, [type, offset, size]]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([decl, node]) =>",
							"([name, value]) =>",
							"([name, fields]) =>",
							"([path, node]) =>",
							"([path, node]) =>",
							"sub =>",
							" ([offset, entries], [key, type]) =>",
							" function DefinePrototype(name, retType, params)",
							" () =>",
							" t =>",
							"varname = n =>",
							"varname = name =>",
							"([name, [param, offset]]) =>",
							"([name], i) =>",
							"name =>",
							"n =>",
							"record =>",
							"r =>",
							"node =>",
							"getIds = (id, exclude) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" p =>",
							" p =>",
							"n =>",
							" (a, n) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" (a, field) =>",
							"([name, type]) =>",
							" () =>",
							" s =>",
							"a =>",
							"([p, n, x, y, a1, a2, t, inner]) =>",
							" ([offset, arr], [name, [type, byteLength]], i) =>",
							"(a, [type, byteLength]) =>",
							"([p, id]) =>",
							"getId = (id, exclude) =>",
							"(node, path) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" function BasePathIndex(path)",
							"k =>",
							" function FindBackwards(node, pred = ([p, n]) => false)",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function MakeFilename(className)",
							" function Path2Loc(path)",
							"([p]) =>",
							"function WriteFile(name, data, verbose = true)",
							"function writeOutput(name, data)",
							"function GetLibraryFor(symbolName)",
							"function* GenerateInspectStruct(type, members, includes)",
							"async function InspectStruct(type, members, includes)",
							"function* GenerateStructClass(name, [size, map])",
							"line =>",
							"field =>",
							"function GenerateGetSet(name, offset, size)",
							"function ByteLength2TypedArray(byteLength)",
							"function ByteLength2Value(byteLength)"
						]
					},
					"AQAAAAAAAAAAAAAAtQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					481,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								275,
								294
							],
							[
								376,
								392
							],
							[
								418,
								435
							],
							[
								648,
								661
							],
							[
								797,
								814
							],
							[
								1112,
								1135
							],
							[
								2003,
								2029
							],
							[
								2192,
								2214
							],
							[
								2588,
								2606
							],
							[
								3381,
								3404
							],
							[
								3751,
								3759
							],
							[
								3813,
								3844
							],
							[
								4301,
								4324
							],
							[
								5037,
								5059
							],
							[
								5188,
								5200
							],
							[
								5530,
								5549
							],
							[
								6217,
								6248
							],
							[
								6392,
								6416
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6954,
								6972
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"getFile(filename)",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							" (s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1CQAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQogIG1haW4oLi4uYXJncykKICBmbiA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQogIG5hbWUgPT4KICBzdGF0ID0+CiAgKHYsIHApID0+CiAgdG9TdHJpbmcoKQogIHRvU3RyaW5nKCkKICB2ID0+CihbcCwgbl0sIGkpID0+Ck5vU3lzdGVtSW5jbHVkZXMgPSAoW3AsIG4sIGxdKSA9PgogIChbcGF0aCwgZGVjbF0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CiAgbmFtZXMgPSBkZWNscyA9PgooW3BhdGgsIGRlY2xdKSA9PgogIGRlY2xhcmF0aW9ucyA9IGRlY2xzID0+CihbcGF0aCwgZGVjbCwgbG9jXSkgPT4KKFtwYXRoLCBkZWNsXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKGEsIGIpID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcF0pID0+CihbcF0pID0+CihbcF0pID0+CiAgcCA9PgooW3AsIG5dKSA9PgooW3AsIG5dKSA9PgooYSwgYikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuLCBsXSkgPT4KICBrID0+CiAgbm9kZSA9PgooW3AsIG5dKSA9PgogIHAgPT4KICBwID0+CihbcCwgbl0pID0+CihbcGF0aCwgbm9kZSwgaWQsIG5hbWUsIHR5cGUsIGtpbmRdKSA9PgogIGRlY2wgPT4KKGZpZWxkLCBpKSA9PgogIGZpbmREZWNsID0gbm9kZSA9PgogIChuLCBwKSA9PgogIGZpbmRUeXBlID0gbmFtZSA9PgogIChuLCBwKSA9PgogIG5vZGVUeXBlID0gbiA9PgogIHQgPT4KICBuID0+CiAgbm9kZU5hbWUgPSAobiwgbmFtZSkgPT4KICBmaW5kSWQgPSBpZCA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kSWRLaW5kID0gKGlkLCBraW5kKSA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kTm9kZSA9IChpZCwga2luZCwgZXhjbHVkZSkgPT4KICAobiwgcCkgPT4KKHsgcGF0aCwgdmFsdWUgfSkgPT4KICBuID0+CihbcCwgbGVuLCBuXSkgPT4KKFtwLCAsIG5dKSA9PgogIGZpZWxkRGVjbHMgPSBub2RlID0+CiAgbiA9PgogIG4gPT4KICAoW29mZnNldCwgYXJyXSwgW25hbWUsIHR5cGVdKSA9PgooW25hbWUsIHR5cGUsIG9mZnNldCwgc2l6ZV0pID0+CiAgc3RydWN0U2l6ZSA9IG1hcCA9PgooYWNjLCBbbmFtZSwgW3R5cGUsIG9mZnNldCwgc2l6ZV1dKSA9PgooW3BhdGgsIG5vZGUsIGlkLCBuYW1lLCB0eXBlLCBraW5kXSkgPT4KKFtwYXRoLCBub2RlLCBpZCwgbmFtZSwgdHlwZSwga2luZF0pID0+CihbZGVjbCwgbm9kZV0pID0+CihbbmFtZSwgdmFsdWVdKSA9PgooW25hbWUsIGZpZWxkc10pID0+CihbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgc3ViID0+CiAgKFtvZmZzZXQsIGVudHJpZXNdLCBba2V5LCB0eXBlXSkgPT4KRGVmaW5lUHJvdG90eXBlKG5hbWUsIHJldFR5cGUsIHBhcmFtcykKICAoKSA9PgogIHQgPT4KICB2YXJuYW1lID0gbiA9PgogIHZhcm5hbWUgPSBuYW1lID0+CihbbmFtZSwgW3BhcmFtLCBvZmZzZXRdXSkgPT4KKFtuYW1lXSwgaSkgPT4KICBuYW1lID0+CiAgbiA9PgogIHJlY29yZCA9PgogIHIgPT4KICBub2RlID0+CiAgZ2V0SWRzID0gKGlkLCBleGNsdWRlKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICBwID0+CiAgcCA9PgogIG4gPT4KICAoYSwgbikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICAoYSwgZmllbGQpID0+CihbbmFtZSwgdHlwZV0pID0+CiAgKCkgPT4KICBzID0+CiAgYSA9PgooW3AsIG4sIHgsIHksIGExLCBhMiwgdCwgaW5uZXJdKSA9PgogIChbb2Zmc2V0LCBhcnJdLCBbbmFtZSwgW3R5cGUsIGJ5dGVMZW5ndGhdXSwgaSkgPT4KKGEsIFt0eXBlLCBieXRlTGVuZ3RoXSkgPT4KKFtwLCBpZF0pID0+CiAgZ2V0SWQgPSAoaWQsIGV4Y2x1ZGUpID0+Cihub2RlLCBwYXRoKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KQmFzZVBhdGhJbmRleChwYXRoKQogIGsgPT4KRmluZEJhY2t3YXJkcyhub2RlLCBwcmVkID0gKFtwLCBuXSkgPT4gZmFsc2UpCkdldFR5cGVTdHIobm9kZSkKICBpbm5lciA9PgogIGlubmVyID0+CihbbiwgdF0pID0+Ck1ha2VGaWxlbmFtZShjbGFzc05hbWUpClBhdGgyTG9jKHBhdGgpCihbcF0pID0+CldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKICB3cml0ZU91dHB1dChuYW1lLCBkYXRhKQpHZXRMaWJyYXJ5Rm9yKHN5bWJvbE5hbWUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKR2VuZXJhdGVTdHJ1Y3RDbGFzcyhuYW1lLCBbc2l6ZSwgbWFwXSkKICBsaW5lID0+CiAgZmllbGQgPT4KR2VuZXJhdGVHZXRTZXQobmFtZSwgb2Zmc2V0LCBzaXplKQpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCkKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoKQAAAAAAAAAAxAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					482,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/list-proxies.js",
						"symkeys":
						[
							[
								1035,
								1065
							],
							[
								1182,
								1202
							],
							[
								1348,
								1354
							],
							[
								1422,
								1428
							],
							[
								1470,
								1477
							],
							[
								1517,
								1523
							],
							[
								1549,
								1597
							],
							[
								1602,
								1603
							],
							[
								1766,
								1815
							],
							[
								1940,
								1960
							],
							[
								2164,
								2176
							],
							[
								2876,
								2895
							],
							[
								3420,
								3427
							],
							[
								3648,
								3679
							],
							[
								3710,
								3742
							],
							[
								3912,
								3944
							],
							[
								4032,
								4064
							],
							[
								4103,
								4131
							],
							[
								4217,
								4237
							],
							[
								4449,
								4455
							],
							[
								4521,
								4527
							],
							[
								4569,
								4576
							],
							[
								4616,
								4622
							],
							[
								4648,
								4696
							],
							[
								4701,
								4702
							],
							[
								4967,
								4978
							],
							[
								5038,
								5066
							],
							[
								5805,
								5826
							],
							[
								6447,
								6468
							],
							[
								6509,
								6532
							],
							[
								6658,
								6679
							],
							[
								6856,
								6872
							],
							[
								7140,
								7146
							],
							[
								7219,
								7228
							],
							[
								7327,
								7333
							],
							[
								8410,
								8421
							],
							[
								9199,
								9275
							],
							[
								9472,
								9481
							],
							[
								9488,
								9492
							],
							[
								9525,
								9533
							],
							[
								9540,
								9544
							],
							[
								9626,
								9636
							],
							[
								9649,
								9653
							],
							[
								9837,
								9843
							]
						],
						"symlist":
						[
							"function TCPSocket(host, port)",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							"function HTTPRequest(url, proxy_host, proxy_port)",
							"(resolve, reject) =>",
							" res =>",
							"function Proxy(obj)",
							"prop =>",
							".prototype.valueOf = function()",
							".prototype.toSource = function()",
							".prototype.toString = function()",
							".prototype.check = function(url)",
							".prototype.ping = function()",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							" function()",
							"async function main(...args)",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (err, proxies) =>",
							"async (push, stop) =>",
							"async proxies =>",
							"err =>",
							" error =>",
							" () =>",
							"async () =>",
							"async function writeResults(results, format = 'txt', outputName = 'proxies')",
							"txt: r =>",
							"p =>",
							"sh: r =>",
							"p =>",
							"json: r =>",
							"p =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADEAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBnZXRGaWxlKGZpbGVuYW1lKQogIGhhbmRsZVJlc3BvbnNlKG1lc3NhZ2UpCiAgaGFuZGxlQnJlYWtwb2ludHMobWVzc2FnZSkKICBoYW5kbGVNZXNzYWdlKG1lc3NhZ2UpCiAgaGFuZGxlRXZlbnQoZXZlbnQpCiAgc2VuZE1lc3NhZ2UodHlwZSwgYXJncykKICBnZXRTZXEoKQogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSkKICBzdGF0aWMgcmVhZChzb2NrKQogIHN0YXRpYyBzZW5kKHNvY2ssIG1zZykKICByZWFkKCkKICByZWFkSGFuZGxlcigpCiAgcmV0VmFsdWUocmV0LCAuLi5hcmdzKQogIHRvSGV4KG4sIGIgPSAyKQpNYWtlQXJyYXkoYnVmLCBudW1CeXRlcykKQXJyYXlCdWZUb0hleChidWYsIG51bUJ5dGVzID0gOCkKICAocywgY29kZSkgPT4AAAAAAAAAAOcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					483,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib.js",
						"symkeys":
						[
							[
								6,
								26
							],
							[
								1042,
								1043
							],
							[
								1065,
								1066
							],
							[
								1079,
								1084
							],
							[
								1122,
								1127
							],
							[
								1160,
								1197
							],
							[
								1248,
								1287
							],
							[
								1336,
								1374
							],
							[
								1423,
								1460
							],
							[
								1511,
								1545
							],
							[
								1672,
								1706
							],
							[
								1758,
								1795
							],
							[
								1857,
								1894
							],
							[
								1957,
								1995
							],
							[
								2057,
								2094
							],
							[
								2157,
								2191
							],
							[
								2290,
								2323
							],
							[
								2423,
								2461
							],
							[
								2523,
								2556
							],
							[
								2607,
								2640
							],
							[
								2694,
								2726
							],
							[
								2779,
								2838
							],
							[
								2947,
								2986
							],
							[
								3041,
								3090
							],
							[
								3221,
								3255
							],
							[
								3378,
								3415
							],
							[
								3467,
								3522
							],
							[
								3613,
								3660
							],
							[
								3731,
								3784
							],
							[
								3796,
								3801
							],
							[
								3844,
								3882
							],
							[
								3924,
								3976
							],
							[
								4124,
								4161
							],
							[
								4237,
								4271
							],
							[
								4341,
								4380
							],
							[
								4498,
								4537
							],
							[
								4542,
								4548
							],
							[
								4608,
								4652
							],
							[
								4807,
								4821
							],
							[
								5015,
								5034
							],
							[
								6617,
								6686
							],
							[
								7230,
								7251
							],
							[
								7337,
								7371
							],
							[
								7405,
								7431
							],
							[
								7782,
								7786
							],
							[
								7817,
								7843
							],
							[
								7937,
								7975
							],
							[
								8083,
								8119
							],
							[
								8174,
								8206
							],
							[
								8247,
								8266
							],
							[
								8299,
								8329
							],
							[
								8465,
								8471
							],
							[
								9127,
								9133
							],
							[
								9558,
								9573
							],
							[
								9605,
								9612
							],
							[
								9661,
								9687
							],
							[
								10038,
								10042
							],
							[
								10064,
								10069
							],
							[
								10110,
								10116
							],
							[
								10225,
								10229
							],
							[
								10251,
								10256
							],
							[
								10297,
								10303
							],
							[
								10412,
								10416
							],
							[
								10438,
								10443
							],
							[
								10484,
								10490
							],
							[
								10599,
								10603
							],
							[
								10625,
								10630
							],
							[
								10671,
								10677
							],
							[
								10764,
								10801
							],
							[
								10817,
								10822
							],
							[
								10873,
								10878
							],
							[
								10926,
								10959
							],
							[
								10971,
								10976
							],
							[
								11017,
								11050
							],
							[
								11062,
								11067
							],
							[
								11089,
								11093
							],
							[
								11126,
								11160
							],
							[
								11172,
								11177
							],
							[
								11222,
								11260
							],
							[
								11360,
								11398
							],
							[
								11483,
								11517
							],
							[
								11720,
								11739
							],
							[
								11776,
								11808
							],
							[
								11855,
								11876
							],
							[
								11924,
								11958
							],
							[
								11992,
								12027
							],
							[
								12124,
								12160
							],
							[
								12278,
								12283
							],
							[
								12327,
								12332
							],
							[
								12375,
								12394
							],
							[
								12657,
								12665
							],
							[
								13528,
								13534
							],
							[
								13965,
								13971
							],
							[
								14538,
								14545
							],
							[
								14718,
								14751
							],
							[
								14817,
								14852
							],
							[
								15082,
								15086
							],
							[
								15098,
								15103
							],
							[
								15130,
								15134
							],
							[
								15146,
								15150
							],
							[
								15166,
								15170
							],
							[
								15209,
								15245
							],
							[
								15306,
								15310
							],
							[
								15341,
								15373
							],
							[
								15414,
								15450
							],
							[
								15527,
								15563
							],
							[
								15696,
								15700
							],
							[
								15722,
								15727
							],
							[
								15756,
								15766
							],
							[
								15902,
								15906
							],
							[
								15928,
								15933
							],
							[
								15975,
								15985
							],
							[
								16071,
								16075
							],
							[
								16097,
								16102
							],
							[
								16131,
								16141
							],
							[
								16258,
								16262
							],
							[
								16284,
								16289
							],
							[
								16332,
								16342
							],
							[
								16409,
								16413
							],
							[
								16437,
								16442
							],
							[
								16503,
								16507
							],
							[
								16533,
								16538
							],
							[
								16579,
								16613
							],
							[
								16674,
								16678
							],
							[
								16709,
								16747
							],
							[
								16965,
								17002
							],
							[
								17316,
								17355
							],
							[
								17396,
								17444
							],
							[
								17449,
								17454
							],
							[
								17565,
								17591
							],
							[
								18340,
								18349
							],
							[
								18375,
								18412
							],
							[
								18461,
								18467
							],
							[
								18575,
								18610
							],
							[
								18667,
								18676
							],
							[
								18715,
								18754
							],
							[
								18932,
								18938
							],
							[
								18995,
								19047
							],
							[
								19104,
								19113
							],
							[
								19154,
								19205
							],
							[
								19230,
								19239
							],
							[
								19290,
								19299
							],
							[
								19346,
								19355
							],
							[
								19432,
								19436
							],
							[
								19437,
								19446
							],
							[
								19549,
								19558
							],
							[
								19619,
								19670
							],
							[
								19921,
								19959
							],
							[
								20043,
								20047
							],
							[
								20089,
								20114
							],
							[
								20115,
								20124
							],
							[
								20154,
								20197
							],
							[
								20266,
								20281
							],
							[
								20380,
								20384
							],
							[
								20407,
								20412
							],
							[
								20462,
								20467
							],
							[
								20527,
								20555
							],
							[
								20556,
								20565
							],
							[
								20597,
								20642
							],
							[
								20711,
								20726
							],
							[
								20825,
								20829
							],
							[
								20872,
								20877
							],
							[
								20944,
								20974
							],
							[
								20975,
								20984
							],
							[
								21016,
								21071
							],
							[
								21249,
								21286
							],
							[
								21564,
								21605
							],
							[
								21988,
								22024
							],
							[
								22051,
								22062
							],
							[
								22123,
								22162
							],
							[
								22289,
								22299
							],
							[
								22659,
								22685
							],
							[
								22686,
								22695
							],
							[
								22725,
								22749
							],
							[
								22784,
								22821
							],
							[
								22858,
								22897
							],
							[
								22968,
								23026
							],
							[
								23046,
								23055
							],
							[
								23139,
								23151
							],
							[
								23229,
								23268
							],
							[
								23339,
								23397
							],
							[
								23417,
								23426
							],
							[
								23510,
								23522
							],
							[
								23600,
								23645
							],
							[
								23685,
								23731
							],
							[
								23773,
								23778
							],
							[
								23833,
								23878
							],
							[
								23921,
								23931
							],
							[
								23932,
								23937
							],
							[
								24104,
								24147
							],
							[
								24194,
								24206
							],
							[
								24269,
								24319
							],
							[
								24391,
								24436
							],
							[
								24449,
								24458
							],
							[
								24511,
								24520
							],
							[
								24599,
								24651
							],
							[
								24816,
								24822
							],
							[
								25101,
								25146
							],
							[
								25167,
								25175
							],
							[
								25176,
								25181
							],
							[
								25234,
								25267
							],
							[
								25293,
								25297
							],
							[
								25350,
								25395
							]
						],
						"symlist":
						[
							" function Point(arg)",
							"p",
							"p",
							"Point",
							"Point",
							"Point.prototype.move = function(x, y)",
							"Point.prototype.moveTo = function(x, y)",
							"Point.prototype.clear = function(x, y)",
							"Point.prototype.move = function(x, y)",
							"Point.prototype.set = function(fn)",
							"Point.prototype.clone = function()",
							"Point.prototype.sum = function(other)",
							"Point.prototype.add = function(other)",
							"Point.prototype.diff = function(other)",
							"Point.prototype.sub = function(other)",
							"Point.prototype.prod = function(f)",
							"Point.prototype.mul = function(f)",
							"Point.prototype.quot = function(other)",
							"Point.prototype.div = function(f)",
							"Point.prototype.comp = function()",
							"Point.prototype.neg = function()",
							"Point.prototype.distance = function(other = { x: 0, y: 0 })",
							"Point.prototype.equal = function(other)",
							"Point.prototype.round = function(precision = 1.0)",
							"Point.prototype.sides = function()",
							"Point.prototype.dot = function(other)",
							"Point.prototype.fromAngle = function(angle, dist = 1.0)",
							"Point.prototype.toAngle = function(deg = false)",
							"Point.prototype.angle = function(p2 = { x: 0, y: 0 })",
							"Point",
							"Point.prototype.dimension = function()",
							"Point.prototype.toString = function(asArray = false)",
							"Point.prototype.toSource = function()",
							"Point.prototype.toCSS = function()",
							"Point.prototype.inside = function(rect)",
							"Point.prototype.transform = function(m)",
							"Matrix",
							"Point.prototype.normalize = function(minmax)",
							"isPoint = o =>",
							" function Size(arg)",
							"Size.convertUnits = (size, w = 'window' in global ? window : null) =>",
							"Size.aspect = size =>",
							"Size.prototype.aspect = function()",
							"Size.toCSS = function(arg)",
							"Size",
							"Size.transform = (s, m) =>",
							"Size.prototype.transform = function(m)",
							"Size.prototype.isSquare = function()",
							"Size.prototype.area = function()",
							"Size.area = size =>",
							" function Line(x1, y1, x2, y2)",
							"arg =>",
							"arg =>",
							"isLine = obj =>",
							"prop =>",
							"Line.intersect = (a, b) =>",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line.prototype.direction = function()",
							"Point",
							"Point",
							"Line.prototype.slope = function()",
							"Point",
							"Line.prototype.angle = function()",
							"Point",
							"Line",
							"Line.prototype.length = function()",
							"Point",
							"Line.prototype.pointAt = function(pos)",
							"Line.prototype.transform = function(m)",
							"Line.transform = (line, matrix) =>",
							"Line.bbox = line =>",
							"Line.prototype.bbox = function()",
							"Line.points = line =>",
							"Line.prototype.points = function()",
							"Line.prototype.inspect = function()",
							"Line.prototype.toString = function()",
							"Point",
							"Point",
							" function Rect(arg)",
							"field =>",
							"arg =>",
							"arg =>",
							"value()",
							"Rect.prototype.clone = function()",
							"Rect.prototype.corners = function()",
							"Rect",
							"Point",
							"Rect",
							"Size",
							"Rect",
							"Rect.prototype.isSquare = function()",
							"Rect",
							"Rect.prototype.area = function()",
							"Rect.prototype.toString = function()",
							"Rect.prototype.toSource = function()",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"Rect",
							"get()",
							"Rect.prototype.points = function()",
							"Rect",
							"Rect.prototype.outset = function(trbl)",
							"Rect.prototype.inset = function(trbl)",
							"Rect.prototype.inside = function(point)",
							"Rect.prototype.pointFromCenter = function(point)",
							"Point",
							"function PointList(points)",
							"PointList",
							"PointList.prototype.push = function()",
							"arg =>",
							"PointList.push = (plist, points) =>",
							"PointList",
							"PointList.prototype.splice = function()",
							"arg =>",
							"PointList.splice = (plist, start, remove, points) =>",
							"PointList",
							"PointList.prototype.removeSegment = function(index)",
							"PointList",
							"PointList",
							"PointList",
							"i =>",
							"PointList",
							"PointList",
							"PointList.prototype.toPath = function(options = {})",
							"PointList.prototype.clone = function()",
							"p =>",
							"PointList.copy = plist =>",
							"PointList",
							"PointList.prototype.toPolar = function(tfn)",
							"tfn : (x, y) =>",
							"p =>",
							"Point",
							"Point",
							"PointList.toPolar = plist =>",
							"PointList",
							"PointList.prototype.fromPolar = function(tfn)",
							"tfn : (x, y) =>",
							"p =>",
							"Point",
							"PointList.fromPolar = plist =>",
							"PointList",
							"PointList.prototype.draw = function(ctx, close = false)",
							"PointList.prototype.area = function()",
							"PointList.prototype.centroid = function()",
							"PointList.prototype.avg = function()",
							"(acc, p) =>",
							"PointList.prototype.minmax = function()",
							"toString()",
							"PointList.minmax = list =>",
							"PointList",
							"PointList.rect = list =>",
							"PointList.prototype.rect = function()",
							"PointList.prototype.xrange = function()",
							"PointList.prototype.normalizeX = function(newVal = x => x)",
							"PointList",
							"(p, i, l) =>",
							"PointList.prototype.yrange = function()",
							"PointList.prototype.normalizeY = function(newVal = y => y)",
							"PointList",
							"(p, i, l) =>",
							"PointList.prototype.boundingRect = function()",
							"PointList.prototype.translate = function(x, y)",
							"Point",
							"PointList.prototype.transform = function(arg)",
							"arg : p =>",
							"Point",
							"PointList.prototype.filter = function(pred)",
							"(p, i, l) =>",
							"PointList.prototype.getLineIndex = function(index)",
							"PointList.prototype.getLine = function(index)",
							"PointList",
							"PointList",
							"PointList.prototype.lines = function(closed = false)",
							"next()",
							"PointList.prototype.toString = function(prec)",
							"point =>",
							"Point",
							"PointList.toString = pointList =>",
							"p =>",
							"PointList.prototype.rotateRight = function(n)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnAgAAVENQU29ja2V0KGhvc3QsIHBvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICAoKSA9PgogIGVyciA9PgogICgpID0+CiAgZmluaXNoKG1zZywgc3RhcnQgPSAtMSwgZW5kID0gRGF0ZS4KKQpIVFRQUmVxdWVzdCh1cmwsIHByb3h5X2hvc3QsIHByb3h5X3BvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzID0+ClByb3h5KG9iaikKICBwcm9wID0+CiAgLnByb3RvdHlwZS52YWx1ZU9mID0gZnVuY3Rpb24oKQogIC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCiAgLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKICAucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24odXJsKQogIC5wcm90b3R5cGUucGluZyA9IGZ1bmN0aW9uKCkKKHJlc29sdmUsIHJlamVjdCkgPT4KICAoKSA9PgogICgpID0+CiAgZXJyID0+CiAgKCkgPT4KICBmaW5pc2gobXNnLCBzdGFydCA9IC0xLCBlbmQgPSBEYXRlLgopCiAgZnVuY3Rpb24oKQogIG1haW4oLi4uYXJncykKKHB1c2gsIHN0b3ApID0+CihwdXNoLCBzdG9wKSA9PgooZXJyLCBwcm94aWVzKSA9PgoocHVzaCwgc3RvcCkgPT4KICBwcm94aWVzID0+CiAgZXJyID0+CiAgZXJyb3IgPT4KICAoKSA9PgooKSA9PgogIHdyaXRlUmVzdWx0cyhyZXN1bHRzLCBmb3JtYXQgPSAndHh0Jywgb3V0cHV0TmFtZSA9ICdwcm94aWVzJykKICB0eHQ6IHIgPT4KICBwID0+CiAgc2g6IHIgPT4KICBwID0+CiAganNvbjogciA9PgogIHAgPT4KICBlcnIgPT4AAAAAAAAAALcSAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					484,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/jsobjstruct.c",
						"symkeys":
						[
							[
								336,
								354
							],
							[
								539,
								555
							],
							[
								809,
								817
							],
							[
								1903,
								1907
							]
						],
						"symlist":
						[
							" Ⓣ  JSGCObjectTypeEnum ; — typedef",
							"—Ⓒ– JSGCObjectHeader { … } ; — type",
							"—Ⓒ– JSObject { … } ; — type",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3EgAAUG9pbnQoYXJnKQogIHAKICBwClBvaW50ClBvaW50ClBvaW50LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQucHJvdG90eXBlLm1vdmVUbyA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKGZuKQpQb2ludC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpClBvaW50LnByb3RvdHlwZS5zdW0gPSBmdW5jdGlvbihvdGhlcikKUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUuZGlmZiA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUuc3ViID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5wcm9kID0gZnVuY3Rpb24oZikKUG9pbnQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uKGYpClBvaW50LnByb3RvdHlwZS5xdW90ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5kaXYgPSBmdW5jdGlvbihmKQpQb2ludC5wcm90b3R5cGUuY29tcCA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLmRpc3RhbmNlID0gZnVuY3Rpb24ob3RoZXIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQucHJvdG90eXBlLmVxdWFsID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5yb3VuZCA9IGZ1bmN0aW9uKHByZWNpc2lvbiA9IDEuMCkKUG9pbnQucHJvdG90eXBlLnNpZGVzID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuZG90ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5mcm9tQW5nbGUgPSBmdW5jdGlvbihhbmdsZSwgZGlzdCA9IDEuMCkKUG9pbnQucHJvdG90eXBlLnRvQW5nbGUgPSBmdW5jdGlvbihkZWcgPSBmYWxzZSkKUG9pbnQucHJvdG90eXBlLmFuZ2xlID0gZnVuY3Rpb24ocDIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQKUG9pbnQucHJvdG90eXBlLmRpbWVuc2lvbiA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oYXNBcnJheSA9IGZhbHNlKQpQb2ludC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpClBvaW50LnByb3RvdHlwZS50b0NTUyA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLmluc2lkZSA9IGZ1bmN0aW9uKHJlY3QpClBvaW50LnByb3RvdHlwZS50cmFuc2Zvcm0gPSBmdW5jdGlvbihtKQpNYXRyaXgKUG9pbnQucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKG1pbm1heCkKICBpc1BvaW50ID0gbyA9PgpTaXplKGFyZykKU2l6ZS5jb252ZXJ0VW5pdHMgPSAoc2l6ZSwgdyA9ICd3aW5kb3cnIGluIGdsb2JhbCA/IHdpbmRvdyA6IG51bGwpID0+ClNpemUuYXNwZWN0ID0gc2l6ZSA9PgpTaXplLnByb3RvdHlwZS5hc3BlY3QgPSBmdW5jdGlvbigpClNpemUudG9DU1MgPSBmdW5jdGlvbihhcmcpClNpemUKU2l6ZS50cmFuc2Zvcm0gPSAocywgbSkgPT4KU2l6ZS5wcm90b3R5cGUudHJhbnNmb3JtID0gZnVuY3Rpb24obSkKU2l6ZS5wcm90b3R5cGUuaXNTcXVhcmUgPSBmdW5jdGlvbigpClNpemUucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClNpemUuYXJlYSA9IHNpemUgPT4KTGluZSh4MSwgeTEsIHgyLCB5MikKICBhcmcgPT4KICBhcmcgPT4KICBpc0xpbmUgPSBvYmogPT4KICBwcm9wID0+CkxpbmUuaW50ZXJzZWN0ID0gKGEsIGIpID0+CkxpbmUKICBnZXQoKQogIHNldCh2KQpMaW5lCiAgZ2V0KCkKICBzZXQodikKTGluZQogIGdldCgpCiAgc2V0KHYpCkxpbmUKICBnZXQoKQogIHNldCh2KQpMaW5lLnByb3RvdHlwZS5kaXJlY3Rpb24gPSBmdW5jdGlvbigpClBvaW50ClBvaW50CkxpbmUucHJvdG90eXBlLnNsb3BlID0gZnVuY3Rpb24oKQpQb2ludApMaW5lLnByb3RvdHlwZS5hbmdsZSA9IGZ1bmN0aW9uKCkKUG9pbnQKTGluZQpMaW5lLnByb3RvdHlwZS5sZW5ndGggPSBmdW5jdGlvbigpClBvaW50CkxpbmUucHJvdG90eXBlLnBvaW50QXQgPSBmdW5jdGlvbihwb3MpCkxpbmUucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG0pCkxpbmUudHJhbnNmb3JtID0gKGxpbmUsIG1hdHJpeCkgPT4KTGluZS5iYm94ID0gbGluZSA9PgpMaW5lLnByb3RvdHlwZS5iYm94ID0gZnVuY3Rpb24oKQpMaW5lLnBvaW50cyA9IGxpbmUgPT4KTGluZS5wcm90b3R5cGUucG9pbnRzID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKUG9pbnQKUG9pbnQKUmVjdChhcmcpCiAgZmllbGQgPT4KICBhcmcgPT4KICBhcmcgPT4KICB2YWx1ZSgpClJlY3QucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKQpSZWN0LnByb3RvdHlwZS5jb3JuZXJzID0gZnVuY3Rpb24oKQpSZWN0ClBvaW50ClJlY3QKU2l6ZQpSZWN0ClJlY3QucHJvdG90eXBlLmlzU3F1YXJlID0gZnVuY3Rpb24oKQpSZWN0ClJlY3QucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClJlY3QucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQpSZWN0LnByb3RvdHlwZS50b1NvdXJjZSA9IGZ1bmN0aW9uKCkKUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKICBzZXQodmFsdWUpClJlY3QKICBnZXQoKQogIHNldCh2YWx1ZSkKUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKUmVjdAogIGdldCgpClJlY3QucHJvdG90eXBlLnBvaW50cyA9IGZ1bmN0aW9uKCkKUmVjdApSZWN0LnByb3RvdHlwZS5vdXRzZXQgPSBmdW5jdGlvbih0cmJsKQpSZWN0LnByb3RvdHlwZS5pbnNldCA9IGZ1bmN0aW9uKHRyYmwpClJlY3QucHJvdG90eXBlLmluc2lkZSA9IGZ1bmN0aW9uKHBvaW50KQpSZWN0LnByb3RvdHlwZS5wb2ludEZyb21DZW50ZXIgPSBmdW5jdGlvbihwb2ludCkKUG9pbnQKUG9pbnRMaXN0KHBvaW50cykKUG9pbnRMaXN0ClBvaW50TGlzdC5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uKCkKICBhcmcgPT4KUG9pbnRMaXN0LnB1c2ggPSAocGxpc3QsIHBvaW50cykgPT4KUG9pbnRMaXN0ClBvaW50TGlzdC5wcm90b3R5cGUuc3BsaWNlID0gZnVuY3Rpb24oKQogIGFyZyA9PgpQb2ludExpc3Quc3BsaWNlID0gKHBsaXN0LCBzdGFydCwgcmVtb3ZlLCBwb2ludHMpID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLnJlbW92ZVNlZ21lbnQgPSBmdW5jdGlvbihpbmRleCkKUG9pbnRMaXN0ClBvaW50TGlzdApQb2ludExpc3QKICBpID0+ClBvaW50TGlzdApQb2ludExpc3QKUG9pbnRMaXN0LnByb3RvdHlwZS50b1BhdGggPSBmdW5jdGlvbihvcHRpb25zID0ge30pClBvaW50TGlzdC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpCiAgcCA9PgpQb2ludExpc3QuY29weSA9IHBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLnRvUG9sYXIgPSBmdW5jdGlvbih0Zm4pCiAgdGZuIDogKHgsIHkpID0+CiAgcCA9PgpQb2ludApQb2ludApQb2ludExpc3QudG9Qb2xhciA9IHBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLmZyb21Qb2xhciA9IGZ1bmN0aW9uKHRmbikKICB0Zm4gOiAoeCwgeSkgPT4KICBwID0+ClBvaW50ClBvaW50TGlzdC5mcm9tUG9sYXIgPSBwbGlzdCA9PgpQb2ludExpc3QKUG9pbnRMaXN0LnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24oY3R4LCBjbG9zZSA9IGZhbHNlKQpQb2ludExpc3QucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUuY2VudHJvaWQgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUuYXZnID0gZnVuY3Rpb24oKQooYWNjLCBwKSA9PgpQb2ludExpc3QucHJvdG90eXBlLm1pbm1heCA9IGZ1bmN0aW9uKCkKICB0b1N0cmluZygpClBvaW50TGlzdC5taW5tYXggPSBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucmVjdCA9IGxpc3QgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5yZWN0ID0gZnVuY3Rpb24oKQpQb2ludExpc3QucHJvdG90eXBlLnhyYW5nZSA9IGZ1bmN0aW9uKCkKUG9pbnRMaXN0LnByb3RvdHlwZS5ub3JtYWxpemVYID0gZnVuY3Rpb24obmV3VmFsID0geCA9PiB4KQpQb2ludExpc3QKKHAsIGksIGwpID0+ClBvaW50TGlzdC5wcm90b3R5cGUueXJhbmdlID0gZnVuY3Rpb24oKQpQb2ludExpc3QucHJvdG90eXBlLm5vcm1hbGl6ZVkgPSBmdW5jdGlvbihuZXdWYWwgPSB5ID0+IHkpClBvaW50TGlzdAoocCwgaSwgbCkgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5ib3VuZGluZ1JlY3QgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQKUG9pbnRMaXN0LnByb3RvdHlwZS50cmFuc2Zvcm0gPSBmdW5jdGlvbihhcmcpCiAgYXJnIDogcCA9PgpQb2ludApQb2ludExpc3QucHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKHByZWQpCihwLCBpLCBsKSA9PgpQb2ludExpc3QucHJvdG90eXBlLmdldExpbmVJbmRleCA9IGZ1bmN0aW9uKGluZGV4KQpQb2ludExpc3QucHJvdG90eXBlLmdldExpbmUgPSBmdW5jdGlvbihpbmRleCkKUG9pbnRMaXN0ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLmxpbmVzID0gZnVuY3Rpb24oY2xvc2VkID0gZmFsc2UpCiAgbmV4dCgpClBvaW50TGlzdC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihwcmVjKQogIHBvaW50ID0+ClBvaW50ClBvaW50TGlzdC50b1N0cmluZyA9IHBvaW50TGlzdCA9PgogIHAgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5yb3RhdGVSaWdodCA9IGZ1bmN0aW9uKG4pAAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					485,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/example_gl2.c",
						"symkeys":
						[
							[
								993,
								1011
							],
							[
								1064,
								1089
							],
							[
								1155,
								1162
							],
							[
								1309,
								1312
							],
							[
								1747,
								1751
							]
						],
						"symlist":
						[
							" Ⓜ  GLFW_INCLUDE_GLEXT … — macro object",
							" Ⓜ  NANOVG_GL2_IMPLEMENTATION … — macro object",
							"—Ⓕ– errorcb ( ) { … } — function",
							"—Ⓕ– key ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAICDik4kgIEpTR0NPYmplY3RUeXBlRW51bSA7IOKAlCB0eXBlZGVmCuKAlOKSuOKAkyBKU0dDT2JqZWN0SGVhZGVyIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrjigJMgSlNPYmplY3QgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					486,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeAAAAICDik4IgIEdMRldfSU5DTFVERV9HTEVYVCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTkFOT1ZHX0dMMl9JTVBMRU1FTlRBVElPTiDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgZXJyb3JjYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGtleSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					487,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					488,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAATQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					489,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					490,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.html",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					491,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					492,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/example_gl2.c",
						"symkeys":
						[
							[
								993,
								1011
							],
							[
								1064,
								1089
							],
							[
								1155,
								1162
							],
							[
								1309,
								1312
							],
							[
								1747,
								1751
							]
						],
						"symlist":
						[
							" Ⓜ  GLFW_INCLUDE_GLEXT … — macro object",
							" Ⓜ  NANOVG_GL2_IMPLEMENTATION … — macro object",
							"—Ⓕ– errorcb ( ) { … } — function",
							"—Ⓕ– key ( ) { … } — function",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					493,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeAAAAICDik4IgIEdMRldfSU5DTFVERV9HTEVYVCDigKYg4oCUIG1hY3JvIG9iamVjdAogIOKTgiAgTkFOT1ZHX0dMMl9JTVBMRU1FTlRBVElPTiDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgZXJyb3JjYiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGtleSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG1haW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					494,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/jsobjstruct.c",
						"symkeys":
						[
							[
								336,
								354
							],
							[
								539,
								555
							],
							[
								809,
								817
							],
							[
								1903,
								1907
							]
						],
						"symlist":
						[
							" Ⓣ  JSGCObjectTypeEnum ; — typedef",
							"—Ⓒ– JSGCObjectHeader { … } ; — type",
							"—Ⓒ– JSObject { … } ; — type",
							"—Ⓕ– main ( ) { … } — function"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					495,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAICDik4kgIEpTR0NPYmplY3RUeXBlRW51bSA7IOKAlCB0eXBlZGVmCuKAlOKSuOKAkyBKU0dDT2JqZWN0SGVhZGVyIHsg4oCmIH0gOyDigJQgdHlwZQrigJTikrjigJMgSlNPYmplY3QgeyDigKYgfSA7IOKAlCB0eXBlCuKAlOKSu+KAkyBtYWluICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					496,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib.js",
						"symkeys":
						[
							[
								6,
								26
							],
							[
								1042,
								1043
							],
							[
								1065,
								1066
							],
							[
								1079,
								1084
							],
							[
								1122,
								1127
							],
							[
								1160,
								1197
							],
							[
								1248,
								1287
							],
							[
								1336,
								1374
							],
							[
								1423,
								1460
							],
							[
								1511,
								1545
							],
							[
								1672,
								1706
							],
							[
								1758,
								1795
							],
							[
								1857,
								1894
							],
							[
								1957,
								1995
							],
							[
								2057,
								2094
							],
							[
								2157,
								2191
							],
							[
								2290,
								2323
							],
							[
								2423,
								2461
							],
							[
								2523,
								2556
							],
							[
								2607,
								2640
							],
							[
								2694,
								2726
							],
							[
								2779,
								2838
							],
							[
								2947,
								2986
							],
							[
								3041,
								3090
							],
							[
								3221,
								3255
							],
							[
								3378,
								3415
							],
							[
								3467,
								3522
							],
							[
								3613,
								3660
							],
							[
								3731,
								3784
							],
							[
								3796,
								3801
							],
							[
								3844,
								3882
							],
							[
								3924,
								3976
							],
							[
								4124,
								4161
							],
							[
								4237,
								4271
							],
							[
								4341,
								4380
							],
							[
								4498,
								4537
							],
							[
								4542,
								4548
							],
							[
								4608,
								4652
							],
							[
								4807,
								4821
							],
							[
								5015,
								5034
							],
							[
								6617,
								6686
							],
							[
								7230,
								7251
							],
							[
								7337,
								7371
							],
							[
								7405,
								7431
							],
							[
								7782,
								7786
							],
							[
								7817,
								7843
							],
							[
								7937,
								7975
							],
							[
								8083,
								8119
							],
							[
								8174,
								8206
							],
							[
								8247,
								8266
							],
							[
								8299,
								8329
							],
							[
								8465,
								8471
							],
							[
								9127,
								9133
							],
							[
								9558,
								9573
							],
							[
								9605,
								9612
							],
							[
								9661,
								9687
							],
							[
								10038,
								10042
							],
							[
								10064,
								10069
							],
							[
								10110,
								10116
							],
							[
								10225,
								10229
							],
							[
								10251,
								10256
							],
							[
								10297,
								10303
							],
							[
								10412,
								10416
							],
							[
								10438,
								10443
							],
							[
								10484,
								10490
							],
							[
								10599,
								10603
							],
							[
								10625,
								10630
							],
							[
								10671,
								10677
							],
							[
								10764,
								10801
							],
							[
								10817,
								10822
							],
							[
								10873,
								10878
							],
							[
								10926,
								10959
							],
							[
								10971,
								10976
							],
							[
								11017,
								11050
							],
							[
								11062,
								11067
							],
							[
								11089,
								11093
							],
							[
								11126,
								11160
							],
							[
								11172,
								11177
							],
							[
								11222,
								11260
							],
							[
								11360,
								11398
							],
							[
								11483,
								11517
							],
							[
								11720,
								11739
							],
							[
								11776,
								11808
							],
							[
								11855,
								11876
							],
							[
								11924,
								11958
							],
							[
								11992,
								12027
							],
							[
								12124,
								12160
							],
							[
								12278,
								12283
							],
							[
								12327,
								12332
							],
							[
								12375,
								12394
							],
							[
								12657,
								12665
							],
							[
								13528,
								13534
							],
							[
								13965,
								13971
							],
							[
								14538,
								14545
							],
							[
								14718,
								14751
							],
							[
								14817,
								14852
							],
							[
								15082,
								15086
							],
							[
								15098,
								15103
							],
							[
								15130,
								15134
							],
							[
								15146,
								15150
							],
							[
								15166,
								15170
							],
							[
								15209,
								15245
							],
							[
								15306,
								15310
							],
							[
								15341,
								15373
							],
							[
								15414,
								15450
							],
							[
								15527,
								15563
							],
							[
								15696,
								15700
							],
							[
								15722,
								15727
							],
							[
								15756,
								15766
							],
							[
								15902,
								15906
							],
							[
								15928,
								15933
							],
							[
								15975,
								15985
							],
							[
								16071,
								16075
							],
							[
								16097,
								16102
							],
							[
								16131,
								16141
							],
							[
								16258,
								16262
							],
							[
								16284,
								16289
							],
							[
								16332,
								16342
							],
							[
								16409,
								16413
							],
							[
								16437,
								16442
							],
							[
								16503,
								16507
							],
							[
								16533,
								16538
							],
							[
								16579,
								16613
							],
							[
								16674,
								16678
							],
							[
								16709,
								16747
							],
							[
								16965,
								17002
							],
							[
								17316,
								17355
							],
							[
								17396,
								17444
							],
							[
								17449,
								17454
							],
							[
								17565,
								17591
							],
							[
								18340,
								18349
							],
							[
								18375,
								18412
							],
							[
								18461,
								18467
							],
							[
								18575,
								18610
							],
							[
								18667,
								18676
							],
							[
								18715,
								18754
							],
							[
								18932,
								18938
							],
							[
								18995,
								19047
							],
							[
								19104,
								19113
							],
							[
								19154,
								19205
							],
							[
								19230,
								19239
							],
							[
								19290,
								19299
							],
							[
								19346,
								19355
							],
							[
								19432,
								19436
							],
							[
								19437,
								19446
							],
							[
								19549,
								19558
							],
							[
								19619,
								19670
							],
							[
								19921,
								19959
							],
							[
								20043,
								20047
							],
							[
								20089,
								20114
							],
							[
								20115,
								20124
							],
							[
								20154,
								20197
							],
							[
								20266,
								20281
							],
							[
								20380,
								20384
							],
							[
								20407,
								20412
							],
							[
								20462,
								20467
							],
							[
								20527,
								20555
							],
							[
								20556,
								20565
							],
							[
								20597,
								20642
							],
							[
								20711,
								20726
							],
							[
								20825,
								20829
							],
							[
								20872,
								20877
							],
							[
								20944,
								20974
							],
							[
								20975,
								20984
							],
							[
								21016,
								21071
							],
							[
								21249,
								21286
							],
							[
								21564,
								21605
							],
							[
								21988,
								22024
							],
							[
								22051,
								22062
							],
							[
								22123,
								22162
							],
							[
								22289,
								22299
							],
							[
								22659,
								22685
							],
							[
								22686,
								22695
							],
							[
								22725,
								22749
							],
							[
								22784,
								22821
							],
							[
								22858,
								22897
							],
							[
								22968,
								23026
							],
							[
								23046,
								23055
							],
							[
								23139,
								23151
							],
							[
								23229,
								23268
							],
							[
								23339,
								23397
							],
							[
								23417,
								23426
							],
							[
								23510,
								23522
							],
							[
								23600,
								23645
							],
							[
								23685,
								23731
							],
							[
								23773,
								23778
							],
							[
								23833,
								23878
							],
							[
								23921,
								23931
							],
							[
								23932,
								23937
							],
							[
								24104,
								24147
							],
							[
								24194,
								24206
							],
							[
								24269,
								24319
							],
							[
								24391,
								24436
							],
							[
								24449,
								24458
							],
							[
								24511,
								24520
							],
							[
								24599,
								24651
							],
							[
								24816,
								24822
							],
							[
								25101,
								25146
							],
							[
								25167,
								25175
							],
							[
								25176,
								25181
							],
							[
								25234,
								25267
							],
							[
								25293,
								25297
							],
							[
								25350,
								25395
							]
						],
						"symlist":
						[
							" function Point(arg)",
							"p",
							"p",
							"Point",
							"Point",
							"Point.prototype.move = function(x, y)",
							"Point.prototype.moveTo = function(x, y)",
							"Point.prototype.clear = function(x, y)",
							"Point.prototype.move = function(x, y)",
							"Point.prototype.set = function(fn)",
							"Point.prototype.clone = function()",
							"Point.prototype.sum = function(other)",
							"Point.prototype.add = function(other)",
							"Point.prototype.diff = function(other)",
							"Point.prototype.sub = function(other)",
							"Point.prototype.prod = function(f)",
							"Point.prototype.mul = function(f)",
							"Point.prototype.quot = function(other)",
							"Point.prototype.div = function(f)",
							"Point.prototype.comp = function()",
							"Point.prototype.neg = function()",
							"Point.prototype.distance = function(other = { x: 0, y: 0 })",
							"Point.prototype.equal = function(other)",
							"Point.prototype.round = function(precision = 1.0)",
							"Point.prototype.sides = function()",
							"Point.prototype.dot = function(other)",
							"Point.prototype.fromAngle = function(angle, dist = 1.0)",
							"Point.prototype.toAngle = function(deg = false)",
							"Point.prototype.angle = function(p2 = { x: 0, y: 0 })",
							"Point",
							"Point.prototype.dimension = function()",
							"Point.prototype.toString = function(asArray = false)",
							"Point.prototype.toSource = function()",
							"Point.prototype.toCSS = function()",
							"Point.prototype.inside = function(rect)",
							"Point.prototype.transform = function(m)",
							"Matrix",
							"Point.prototype.normalize = function(minmax)",
							"isPoint = o =>",
							" function Size(arg)",
							"Size.convertUnits = (size, w = 'window' in global ? window : null) =>",
							"Size.aspect = size =>",
							"Size.prototype.aspect = function()",
							"Size.toCSS = function(arg)",
							"Size",
							"Size.transform = (s, m) =>",
							"Size.prototype.transform = function(m)",
							"Size.prototype.isSquare = function()",
							"Size.prototype.area = function()",
							"Size.area = size =>",
							" function Line(x1, y1, x2, y2)",
							"arg =>",
							"arg =>",
							"isLine = obj =>",
							"prop =>",
							"Line.intersect = (a, b) =>",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line",
							"get()",
							"set(v)",
							"Line.prototype.direction = function()",
							"Point",
							"Point",
							"Line.prototype.slope = function()",
							"Point",
							"Line.prototype.angle = function()",
							"Point",
							"Line",
							"Line.prototype.length = function()",
							"Point",
							"Line.prototype.pointAt = function(pos)",
							"Line.prototype.transform = function(m)",
							"Line.transform = (line, matrix) =>",
							"Line.bbox = line =>",
							"Line.prototype.bbox = function()",
							"Line.points = line =>",
							"Line.prototype.points = function()",
							"Line.prototype.inspect = function()",
							"Line.prototype.toString = function()",
							"Point",
							"Point",
							" function Rect(arg)",
							"field =>",
							"arg =>",
							"arg =>",
							"value()",
							"Rect.prototype.clone = function()",
							"Rect.prototype.corners = function()",
							"Rect",
							"Point",
							"Rect",
							"Size",
							"Rect",
							"Rect.prototype.isSquare = function()",
							"Rect",
							"Rect.prototype.area = function()",
							"Rect.prototype.toString = function()",
							"Rect.prototype.toSource = function()",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"set(value)",
							"Rect",
							"get()",
							"Rect",
							"get()",
							"Rect.prototype.points = function()",
							"Rect",
							"Rect.prototype.outset = function(trbl)",
							"Rect.prototype.inset = function(trbl)",
							"Rect.prototype.inside = function(point)",
							"Rect.prototype.pointFromCenter = function(point)",
							"Point",
							"function PointList(points)",
							"PointList",
							"PointList.prototype.push = function()",
							"arg =>",
							"PointList.push = (plist, points) =>",
							"PointList",
							"PointList.prototype.splice = function()",
							"arg =>",
							"PointList.splice = (plist, start, remove, points) =>",
							"PointList",
							"PointList.prototype.removeSegment = function(index)",
							"PointList",
							"PointList",
							"PointList",
							"i =>",
							"PointList",
							"PointList",
							"PointList.prototype.toPath = function(options = {})",
							"PointList.prototype.clone = function()",
							"p =>",
							"PointList.copy = plist =>",
							"PointList",
							"PointList.prototype.toPolar = function(tfn)",
							"tfn : (x, y) =>",
							"p =>",
							"Point",
							"Point",
							"PointList.toPolar = plist =>",
							"PointList",
							"PointList.prototype.fromPolar = function(tfn)",
							"tfn : (x, y) =>",
							"p =>",
							"Point",
							"PointList.fromPolar = plist =>",
							"PointList",
							"PointList.prototype.draw = function(ctx, close = false)",
							"PointList.prototype.area = function()",
							"PointList.prototype.centroid = function()",
							"PointList.prototype.avg = function()",
							"(acc, p) =>",
							"PointList.prototype.minmax = function()",
							"toString()",
							"PointList.minmax = list =>",
							"PointList",
							"PointList.rect = list =>",
							"PointList.prototype.rect = function()",
							"PointList.prototype.xrange = function()",
							"PointList.prototype.normalizeX = function(newVal = x => x)",
							"PointList",
							"(p, i, l) =>",
							"PointList.prototype.yrange = function()",
							"PointList.prototype.normalizeY = function(newVal = y => y)",
							"PointList",
							"(p, i, l) =>",
							"PointList.prototype.boundingRect = function()",
							"PointList.prototype.translate = function(x, y)",
							"Point",
							"PointList.prototype.transform = function(arg)",
							"arg : p =>",
							"Point",
							"PointList.prototype.filter = function(pred)",
							"(p, i, l) =>",
							"PointList.prototype.getLineIndex = function(index)",
							"PointList.prototype.getLine = function(index)",
							"PointList",
							"PointList",
							"PointList.prototype.lines = function(closed = false)",
							"next()",
							"PointList.prototype.toString = function(prec)",
							"point =>",
							"Point",
							"PointList.toString = pointList =>",
							"p =>",
							"PointList.prototype.rotateRight = function(n)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAtxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					497,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC3EgAAUG9pbnQoYXJnKQogIHAKICBwClBvaW50ClBvaW50ClBvaW50LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQucHJvdG90eXBlLm1vdmVUbyA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKHgsIHkpClBvaW50LnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKGZuKQpQb2ludC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpClBvaW50LnByb3RvdHlwZS5zdW0gPSBmdW5jdGlvbihvdGhlcikKUG9pbnQucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUuZGlmZiA9IGZ1bmN0aW9uKG90aGVyKQpQb2ludC5wcm90b3R5cGUuc3ViID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5wcm9kID0gZnVuY3Rpb24oZikKUG9pbnQucHJvdG90eXBlLm11bCA9IGZ1bmN0aW9uKGYpClBvaW50LnByb3RvdHlwZS5xdW90ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5kaXYgPSBmdW5jdGlvbihmKQpQb2ludC5wcm90b3R5cGUuY29tcCA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLm5lZyA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLmRpc3RhbmNlID0gZnVuY3Rpb24ob3RoZXIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQucHJvdG90eXBlLmVxdWFsID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5yb3VuZCA9IGZ1bmN0aW9uKHByZWNpc2lvbiA9IDEuMCkKUG9pbnQucHJvdG90eXBlLnNpZGVzID0gZnVuY3Rpb24oKQpQb2ludC5wcm90b3R5cGUuZG90ID0gZnVuY3Rpb24ob3RoZXIpClBvaW50LnByb3RvdHlwZS5mcm9tQW5nbGUgPSBmdW5jdGlvbihhbmdsZSwgZGlzdCA9IDEuMCkKUG9pbnQucHJvdG90eXBlLnRvQW5nbGUgPSBmdW5jdGlvbihkZWcgPSBmYWxzZSkKUG9pbnQucHJvdG90eXBlLmFuZ2xlID0gZnVuY3Rpb24ocDIgPSB7IHg6IDAsIHk6IDAgfSkKUG9pbnQKUG9pbnQucHJvdG90eXBlLmRpbWVuc2lvbiA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oYXNBcnJheSA9IGZhbHNlKQpQb2ludC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpClBvaW50LnByb3RvdHlwZS50b0NTUyA9IGZ1bmN0aW9uKCkKUG9pbnQucHJvdG90eXBlLmluc2lkZSA9IGZ1bmN0aW9uKHJlY3QpClBvaW50LnByb3RvdHlwZS50cmFuc2Zvcm0gPSBmdW5jdGlvbihtKQpNYXRyaXgKUG9pbnQucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKG1pbm1heCkKICBpc1BvaW50ID0gbyA9PgpTaXplKGFyZykKU2l6ZS5jb252ZXJ0VW5pdHMgPSAoc2l6ZSwgdyA9ICd3aW5kb3cnIGluIGdsb2JhbCA/IHdpbmRvdyA6IG51bGwpID0+ClNpemUuYXNwZWN0ID0gc2l6ZSA9PgpTaXplLnByb3RvdHlwZS5hc3BlY3QgPSBmdW5jdGlvbigpClNpemUudG9DU1MgPSBmdW5jdGlvbihhcmcpClNpemUKU2l6ZS50cmFuc2Zvcm0gPSAocywgbSkgPT4KU2l6ZS5wcm90b3R5cGUudHJhbnNmb3JtID0gZnVuY3Rpb24obSkKU2l6ZS5wcm90b3R5cGUuaXNTcXVhcmUgPSBmdW5jdGlvbigpClNpemUucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClNpemUuYXJlYSA9IHNpemUgPT4KTGluZSh4MSwgeTEsIHgyLCB5MikKICBhcmcgPT4KICBhcmcgPT4KICBpc0xpbmUgPSBvYmogPT4KICBwcm9wID0+CkxpbmUuaW50ZXJzZWN0ID0gKGEsIGIpID0+CkxpbmUKICBnZXQoKQogIHNldCh2KQpMaW5lCiAgZ2V0KCkKICBzZXQodikKTGluZQogIGdldCgpCiAgc2V0KHYpCkxpbmUKICBnZXQoKQogIHNldCh2KQpMaW5lLnByb3RvdHlwZS5kaXJlY3Rpb24gPSBmdW5jdGlvbigpClBvaW50ClBvaW50CkxpbmUucHJvdG90eXBlLnNsb3BlID0gZnVuY3Rpb24oKQpQb2ludApMaW5lLnByb3RvdHlwZS5hbmdsZSA9IGZ1bmN0aW9uKCkKUG9pbnQKTGluZQpMaW5lLnByb3RvdHlwZS5sZW5ndGggPSBmdW5jdGlvbigpClBvaW50CkxpbmUucHJvdG90eXBlLnBvaW50QXQgPSBmdW5jdGlvbihwb3MpCkxpbmUucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG0pCkxpbmUudHJhbnNmb3JtID0gKGxpbmUsIG1hdHJpeCkgPT4KTGluZS5iYm94ID0gbGluZSA9PgpMaW5lLnByb3RvdHlwZS5iYm94ID0gZnVuY3Rpb24oKQpMaW5lLnBvaW50cyA9IGxpbmUgPT4KTGluZS5wcm90b3R5cGUucG9pbnRzID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24oKQpMaW5lLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKUG9pbnQKUG9pbnQKUmVjdChhcmcpCiAgZmllbGQgPT4KICBhcmcgPT4KICBhcmcgPT4KICB2YWx1ZSgpClJlY3QucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKQpSZWN0LnByb3RvdHlwZS5jb3JuZXJzID0gZnVuY3Rpb24oKQpSZWN0ClBvaW50ClJlY3QKU2l6ZQpSZWN0ClJlY3QucHJvdG90eXBlLmlzU3F1YXJlID0gZnVuY3Rpb24oKQpSZWN0ClJlY3QucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClJlY3QucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQpSZWN0LnByb3RvdHlwZS50b1NvdXJjZSA9IGZ1bmN0aW9uKCkKUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKICBzZXQodmFsdWUpClJlY3QKICBnZXQoKQogIHNldCh2YWx1ZSkKUmVjdAogIGdldCgpCiAgc2V0KHZhbHVlKQpSZWN0CiAgZ2V0KCkKUmVjdAogIGdldCgpClJlY3QucHJvdG90eXBlLnBvaW50cyA9IGZ1bmN0aW9uKCkKUmVjdApSZWN0LnByb3RvdHlwZS5vdXRzZXQgPSBmdW5jdGlvbih0cmJsKQpSZWN0LnByb3RvdHlwZS5pbnNldCA9IGZ1bmN0aW9uKHRyYmwpClJlY3QucHJvdG90eXBlLmluc2lkZSA9IGZ1bmN0aW9uKHBvaW50KQpSZWN0LnByb3RvdHlwZS5wb2ludEZyb21DZW50ZXIgPSBmdW5jdGlvbihwb2ludCkKUG9pbnQKUG9pbnRMaXN0KHBvaW50cykKUG9pbnRMaXN0ClBvaW50TGlzdC5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uKCkKICBhcmcgPT4KUG9pbnRMaXN0LnB1c2ggPSAocGxpc3QsIHBvaW50cykgPT4KUG9pbnRMaXN0ClBvaW50TGlzdC5wcm90b3R5cGUuc3BsaWNlID0gZnVuY3Rpb24oKQogIGFyZyA9PgpQb2ludExpc3Quc3BsaWNlID0gKHBsaXN0LCBzdGFydCwgcmVtb3ZlLCBwb2ludHMpID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLnJlbW92ZVNlZ21lbnQgPSBmdW5jdGlvbihpbmRleCkKUG9pbnRMaXN0ClBvaW50TGlzdApQb2ludExpc3QKICBpID0+ClBvaW50TGlzdApQb2ludExpc3QKUG9pbnRMaXN0LnByb3RvdHlwZS50b1BhdGggPSBmdW5jdGlvbihvcHRpb25zID0ge30pClBvaW50TGlzdC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpCiAgcCA9PgpQb2ludExpc3QuY29weSA9IHBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLnRvUG9sYXIgPSBmdW5jdGlvbih0Zm4pCiAgdGZuIDogKHgsIHkpID0+CiAgcCA9PgpQb2ludApQb2ludApQb2ludExpc3QudG9Qb2xhciA9IHBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLmZyb21Qb2xhciA9IGZ1bmN0aW9uKHRmbikKICB0Zm4gOiAoeCwgeSkgPT4KICBwID0+ClBvaW50ClBvaW50TGlzdC5mcm9tUG9sYXIgPSBwbGlzdCA9PgpQb2ludExpc3QKUG9pbnRMaXN0LnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24oY3R4LCBjbG9zZSA9IGZhbHNlKQpQb2ludExpc3QucHJvdG90eXBlLmFyZWEgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUuY2VudHJvaWQgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUuYXZnID0gZnVuY3Rpb24oKQooYWNjLCBwKSA9PgpQb2ludExpc3QucHJvdG90eXBlLm1pbm1heCA9IGZ1bmN0aW9uKCkKICB0b1N0cmluZygpClBvaW50TGlzdC5taW5tYXggPSBsaXN0ID0+ClBvaW50TGlzdApQb2ludExpc3QucmVjdCA9IGxpc3QgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5yZWN0ID0gZnVuY3Rpb24oKQpQb2ludExpc3QucHJvdG90eXBlLnhyYW5nZSA9IGZ1bmN0aW9uKCkKUG9pbnRMaXN0LnByb3RvdHlwZS5ub3JtYWxpemVYID0gZnVuY3Rpb24obmV3VmFsID0geCA9PiB4KQpQb2ludExpc3QKKHAsIGksIGwpID0+ClBvaW50TGlzdC5wcm90b3R5cGUueXJhbmdlID0gZnVuY3Rpb24oKQpQb2ludExpc3QucHJvdG90eXBlLm5vcm1hbGl6ZVkgPSBmdW5jdGlvbihuZXdWYWwgPSB5ID0+IHkpClBvaW50TGlzdAoocCwgaSwgbCkgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5ib3VuZGluZ1JlY3QgPSBmdW5jdGlvbigpClBvaW50TGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oeCwgeSkKUG9pbnQKUG9pbnRMaXN0LnByb3RvdHlwZS50cmFuc2Zvcm0gPSBmdW5jdGlvbihhcmcpCiAgYXJnIDogcCA9PgpQb2ludApQb2ludExpc3QucHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKHByZWQpCihwLCBpLCBsKSA9PgpQb2ludExpc3QucHJvdG90eXBlLmdldExpbmVJbmRleCA9IGZ1bmN0aW9uKGluZGV4KQpQb2ludExpc3QucHJvdG90eXBlLmdldExpbmUgPSBmdW5jdGlvbihpbmRleCkKUG9pbnRMaXN0ClBvaW50TGlzdApQb2ludExpc3QucHJvdG90eXBlLmxpbmVzID0gZnVuY3Rpb24oY2xvc2VkID0gZmFsc2UpCiAgbmV4dCgpClBvaW50TGlzdC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihwcmVjKQogIHBvaW50ID0+ClBvaW50ClBvaW50TGlzdC50b1N0cmluZyA9IHBvaW50TGlzdCA9PgogIHAgPT4KUG9pbnRMaXN0LnByb3RvdHlwZS5yb3RhdGVSaWdodCA9IGZ1bmN0aW9uKG4pAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					498,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/list-proxies.js",
						"symkeys":
						[
							[
								1035,
								1065
							],
							[
								1182,
								1202
							],
							[
								1348,
								1354
							],
							[
								1422,
								1428
							],
							[
								1470,
								1477
							],
							[
								1517,
								1523
							],
							[
								1549,
								1597
							],
							[
								1602,
								1603
							],
							[
								1766,
								1815
							],
							[
								1940,
								1960
							],
							[
								2164,
								2176
							],
							[
								2876,
								2895
							],
							[
								3420,
								3427
							],
							[
								3648,
								3679
							],
							[
								3710,
								3742
							],
							[
								3912,
								3944
							],
							[
								4032,
								4064
							],
							[
								4103,
								4131
							],
							[
								4217,
								4237
							],
							[
								4449,
								4455
							],
							[
								4521,
								4527
							],
							[
								4569,
								4576
							],
							[
								4616,
								4622
							],
							[
								4648,
								4696
							],
							[
								4701,
								4702
							],
							[
								4967,
								4978
							],
							[
								5038,
								5066
							],
							[
								5805,
								5826
							],
							[
								6447,
								6468
							],
							[
								6509,
								6532
							],
							[
								6658,
								6679
							],
							[
								6856,
								6872
							],
							[
								7140,
								7146
							],
							[
								7219,
								7228
							],
							[
								7327,
								7333
							],
							[
								8410,
								8421
							],
							[
								9199,
								9275
							],
							[
								9472,
								9481
							],
							[
								9488,
								9492
							],
							[
								9525,
								9533
							],
							[
								9540,
								9544
							],
							[
								9626,
								9636
							],
							[
								9649,
								9653
							],
							[
								9837,
								9843
							]
						],
						"symlist":
						[
							"function TCPSocket(host, port)",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							"function HTTPRequest(url, proxy_host, proxy_port)",
							"(resolve, reject) =>",
							" res =>",
							"function Proxy(obj)",
							"prop =>",
							".prototype.valueOf = function()",
							".prototype.toSource = function()",
							".prototype.toString = function()",
							".prototype.check = function(url)",
							".prototype.ping = function()",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							" function()",
							"async function main(...args)",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (err, proxies) =>",
							"async (push, stop) =>",
							"async proxies =>",
							"err =>",
							" error =>",
							" () =>",
							"async () =>",
							"async function writeResults(results, format = 'txt', outputName = 'proxies')",
							"txt: r =>",
							"p =>",
							"sh: r =>",
							"p =>",
							"json: r =>",
							"p =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAA5wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					499,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnAgAAVENQU29ja2V0KGhvc3QsIHBvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICAoKSA9PgogIGVyciA9PgogICgpID0+CiAgZmluaXNoKG1zZywgc3RhcnQgPSAtMSwgZW5kID0gRGF0ZS4KKQpIVFRQUmVxdWVzdCh1cmwsIHByb3h5X2hvc3QsIHByb3h5X3BvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzID0+ClByb3h5KG9iaikKICBwcm9wID0+CiAgLnByb3RvdHlwZS52YWx1ZU9mID0gZnVuY3Rpb24oKQogIC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCiAgLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKICAucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24odXJsKQogIC5wcm90b3R5cGUucGluZyA9IGZ1bmN0aW9uKCkKKHJlc29sdmUsIHJlamVjdCkgPT4KICAoKSA9PgogICgpID0+CiAgZXJyID0+CiAgKCkgPT4KICBmaW5pc2gobXNnLCBzdGFydCA9IC0xLCBlbmQgPSBEYXRlLgopCiAgZnVuY3Rpb24oKQogIG1haW4oLi4uYXJncykKKHB1c2gsIHN0b3ApID0+CihwdXNoLCBzdG9wKSA9PgooZXJyLCBwcm94aWVzKSA9PgoocHVzaCwgc3RvcCkgPT4KICBwcm94aWVzID0+CiAgZXJyID0+CiAgZXJyb3IgPT4KICAoKSA9PgooKSA9PgogIHdyaXRlUmVzdWx0cyhyZXN1bHRzLCBmb3JtYXQgPSAndHh0Jywgb3V0cHV0TmFtZSA9ICdwcm94aWVzJykKICB0eHQ6IHIgPT4KICBwID0+CiAgc2g6IHIgPT4KICBwID0+CiAganNvbjogciA9PgogIHAgPT4KICBlcnIgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					500,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debuggerprotocol.js",
						"symkeys":
						[
							[
								275,
								294
							],
							[
								376,
								392
							],
							[
								418,
								435
							],
							[
								648,
								661
							],
							[
								797,
								814
							],
							[
								1112,
								1135
							],
							[
								2003,
								2029
							],
							[
								2192,
								2214
							],
							[
								2588,
								2606
							],
							[
								3381,
								3404
							],
							[
								3751,
								3759
							],
							[
								3813,
								3844
							],
							[
								4301,
								4324
							],
							[
								5037,
								5059
							],
							[
								5188,
								5200
							],
							[
								5530,
								5549
							],
							[
								6217,
								6248
							],
							[
								6392,
								6416
							],
							[
								6515,
								6548
							],
							[
								6771,
								6812
							],
							[
								6954,
								6972
							]
						],
						"symlist":
						[
							"cfg = (obj = {}) =>",
							"DebuggerProtocol",
							"constructor(sock)",
							"readCommand()",
							"getFile(filename)",
							"handleResponse(message)",
							"handleBreakpoints(message)",
							"handleMessage(message)",
							"handleEvent(event)",
							"sendMessage(type, args)",
							"getSeq()",
							"sendRequest(command, args = {})",
							"static async read(sock)",
							"static send(sock, msg)",
							"async read()",
							"async readHandler()",
							"function retValue(ret, ...args)",
							"function toHex(n, b = 2)",
							"function MakeArray(buf, numBytes)",
							"function ArrayBufToHex(buf, numBytes = 8)",
							" (s, code) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAxAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					501,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADEAQAAICBjZmcgPSAob2JqID0ge30pID0+CkRlYnVnZ2VyUHJvdG9jb2wKICBjb25zdHJ1Y3Rvcihzb2NrKQogIHJlYWRDb21tYW5kKCkKICBnZXRGaWxlKGZpbGVuYW1lKQogIGhhbmRsZVJlc3BvbnNlKG1lc3NhZ2UpCiAgaGFuZGxlQnJlYWtwb2ludHMobWVzc2FnZSkKICBoYW5kbGVNZXNzYWdlKG1lc3NhZ2UpCiAgaGFuZGxlRXZlbnQoZXZlbnQpCiAgc2VuZE1lc3NhZ2UodHlwZSwgYXJncykKICBnZXRTZXEoKQogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSkKICBzdGF0aWMgcmVhZChzb2NrKQogIHN0YXRpYyBzZW5kKHNvY2ssIG1zZykKICByZWFkKCkKICByZWFkSGFuZGxlcigpCiAgcmV0VmFsdWUocmV0LCAuLi5hcmdzKQogIHRvSGV4KG4sIGIgPSAyKQpNYWtlQXJyYXkoYnVmLCBudW1CeXRlcykKQXJyYXlCdWZUb0hleChidWYsIG51bUJ5dGVzID0gOCkKICAocywgY29kZSkgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					502,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/dump-structs.js",
						"symkeys":
						[
							[
								471,
								495
							],
							[
								659,
								665
							],
							[
								709,
								726
							],
							[
								836,
								864
							],
							[
								1037,
								1042
							],
							[
								1257,
								1267
							],
							[
								1317,
								1327
							],
							[
								2301,
								2305
							],
							[
								2352,
								2356
							],
							[
								2411,
								2448
							],
							[
								2650,
								2657
							],
							[
								2708,
								2715
							],
							[
								3182,
								3199
							],
							[
								3404,
								3414
							],
							[
								3714,
								3724
							],
							[
								4285,
								4290
							],
							[
								4500,
								4514
							],
							[
								4578,
								4611
							],
							[
								4791,
								4809
							],
							[
								4927,
								4938
							],
							[
								5009,
								5020
							],
							[
								5194,
								5210
							],
							[
								5226,
								5243
							],
							[
								5272,
								5295
							],
							[
								5311,
								5333
							],
							[
								5412,
								5429
							],
							[
								5708,
								5719
							],
							[
								5776,
								5787
							],
							[
								5915,
								5924
							],
							[
								5987,
								5998
							],
							[
								6060,
								6071
							],
							[
								6159,
								6170
							],
							[
								6251,
								6259
							],
							[
								6321,
								6329
							],
							[
								6363,
								6371
							],
							[
								6405,
								6409
							],
							[
								6591,
								6602
							],
							[
								6659,
								6670
							],
							[
								6704,
								6713
							],
							[
								6802,
								6813
							],
							[
								6866,
								6880
							],
							[
								7027,
								7031
							],
							[
								7323,
								7330
							],
							[
								7407,
								7418
							],
							[
								7444,
								7448
							],
							[
								7528,
								7532
							],
							[
								7569,
								7580
							],
							[
								7691,
								7730
							],
							[
								7773,
								7780
							],
							[
								7853,
								7866
							],
							[
								8172,
								8190
							],
							[
								8252,
								8277
							],
							[
								8506,
								8524
							],
							[
								8539,
								8549
							],
							[
								8622,
								8637
							],
							[
								8674,
								8678
							],
							[
								9221,
								9226
							],
							[
								9278,
								9301
							],
							[
								9516,
								9530
							],
							[
								9547,
								9562
							],
							[
								9620,
								9646
							],
							[
								9675,
								9690
							],
							[
								9769,
								9802
							],
							[
								9864,
								9889
							],
							[
								10224,
								10244
							],
							[
								10319,
								10323
							],
							[
								10415,
								10431
							],
							[
								10460,
								10473
							],
							[
								10495,
								10515
							],
							[
								10643,
								10647
							],
							[
								10703,
								10707
							],
							[
								10758,
								10810
							],
							[
								11020,
								11051
							],
							[
								11168,
								11187
							],
							[
								11204,
								11242
							],
							[
								12271,
								12310
							],
							[
								12383,
								12422
							],
							[
								12466,
								12483
							],
							[
								12567,
								12585
							],
							[
								12614,
								12633
							],
							[
								12895,
								12912
							],
							[
								12964,
								12981
							],
							[
								13077,
								13083
							],
							[
								13806,
								13867
							],
							[
								14276,
								14333
							],
							[
								14373,
								14392
							],
							[
								14406,
								14424
							],
							[
								14582,
								14596
							],
							[
								14853,
								14870
							],
							[
								15100,
								15128
							],
							[
								15258,
								15272
							],
							[
								15335,
								15342
							],
							[
								15551,
								15555
							],
							[
								16247,
								16256
							],
							[
								16324,
								16328
							],
							[
								16715,
								16722
							],
							[
								16767,
								16792
							],
							[
								16821,
								16836
							],
							[
								16883,
								16894
							],
							[
								16968,
								16979
							],
							[
								17068,
								17073
							],
							[
								17192,
								17197
							],
							[
								17370,
								17374
							],
							[
								17458,
								17485
							],
							[
								17806,
								17817
							],
							[
								17905,
								17916
							],
							[
								18138,
								18173
							],
							[
								18325,
								18342
							],
							[
								18466,
								18497
							],
							[
								18517,
								18547
							],
							[
								18741,
								18745
							],
							[
								18794,
								18829
							],
							[
								18871,
								18934
							],
							[
								19652,
								19678
							],
							[
								19919,
								19931
							],
							[
								19952,
								19976
							],
							[
								19993,
								20008
							],
							[
								20103,
								20118
							],
							[
								20199,
								20210
							],
							[
								20234,
								20245
							],
							[
								20466,
								20477
							],
							[
								20578,
								20589
							],
							[
								20677,
								20715
							],
							[
								20752,
								20756
							],
							[
								20809,
								20873
							],
							[
								21018,
								21053
							],
							[
								21177,
								21185
							],
							[
								21261,
								21269
							],
							[
								21341,
								21352
							],
							[
								21542,
								21584
							],
							[
								21869,
								21898
							],
							[
								21997,
								22005
							],
							[
								22123,
								22169
							],
							[
								22348,
								22380
							],
							[
								22544,
								22578
							],
							[
								22818,
								22874
							],
							[
								23235,
								23288
							],
							[
								23546,
								23594
							],
							[
								24051,
								24058
							],
							[
								24228,
								24236
							],
							[
								24326,
								24369
							],
							[
								24588,
								24630
							],
							[
								24865,
								24902
							]
						],
						"symlist":
						[
							"findLastIndex(predicate)",
							"tail()",
							"startsWith(start)",
							"async function main(...args)",
							"fn =>",
							" (a, p) =>",
							" (a, p) =>",
							"d =>",
							"v =>",
							"async function processFiles(...files)",
							"name =>",
							"stat =>",
							" (v, p) =>",
							"toString()",
							"toString()",
							" v =>",
							"([p, n], i) =>",
							"NoSystemIncludes = ([p, n, l]) =>",
							" ([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"names = decls =>",
							"([path, decl]) =>",
							"declarations = decls =>",
							"([path, decl, loc]) =>",
							"([path, decl]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p]) =>",
							"([p]) =>",
							"([p]) =>",
							"p =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n, l]) =>",
							"k =>",
							"node =>",
							"([p, n]) =>",
							"p =>",
							"p =>",
							"([p, n]) =>",
							"([path, node, id, name, type, kind]) =>",
							"decl =>",
							"(field, i) =>",
							"findDecl = node =>",
							" (n, p) =>",
							"findType = name =>",
							" (n, p) =>",
							"nodeType = n =>",
							"t =>",
							" n =>",
							"nodeName = (n, name) =>",
							"findId = id =>",
							"(node, path) =>",
							"findIdKind = (id, kind) =>",
							"(node, path) =>",
							"findNode = (id, kind, exclude) =>",
							" (n, p) =>",
							"({ path, value }) =>",
							"n =>",
							"([p, len, n]) =>",
							"([p, , n]) =>",
							"fieldDecls = node =>",
							"n =>",
							"n =>",
							" ([offset, arr], [name, type]) =>",
							"([name, type, offset, size]) =>",
							"structSize = map =>",
							"(acc, [name, [type, offset, size]]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([path, node, id, name, type, kind]) =>",
							"([decl, node]) =>",
							"([name, value]) =>",
							"([name, fields]) =>",
							"([path, node]) =>",
							"([path, node]) =>",
							"sub =>",
							" ([offset, entries], [key, type]) =>",
							" function DefinePrototype(name, retType, params)",
							" () =>",
							" t =>",
							"varname = n =>",
							"varname = name =>",
							"([name, [param, offset]]) =>",
							"([name], i) =>",
							"name =>",
							"n =>",
							"record =>",
							"r =>",
							"node =>",
							"getIds = (id, exclude) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" p =>",
							" p =>",
							"n =>",
							" (a, n) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" (a, field) =>",
							"([name, type]) =>",
							" () =>",
							" s =>",
							"a =>",
							"([p, n, x, y, a1, a2, t, inner]) =>",
							" ([offset, arr], [name, [type, byteLength]], i) =>",
							"(a, [type, byteLength]) =>",
							"([p, id]) =>",
							"getId = (id, exclude) =>",
							"(node, path) =>",
							"(node, path) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"([p, n]) =>",
							" function BasePathIndex(path)",
							"k =>",
							" function FindBackwards(node, pred = ([p, n]) => false)",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function MakeFilename(className)",
							" function Path2Loc(path)",
							"([p]) =>",
							"function WriteFile(name, data, verbose = true)",
							"function writeOutput(name, data)",
							"function GetLibraryFor(symbolName)",
							"function* GenerateInspectStruct(type, members, includes)",
							"async function InspectStruct(type, members, includes)",
							"function* GenerateStructClass(name, [size, map])",
							"line =>",
							"field =>",
							"function GenerateGetSet(name, offset, size)",
							"function ByteLength2TypedArray(byteLength)",
							"function ByteLength2Value(byteLength)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAtQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					503,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC1CQAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQogIG1haW4oLi4uYXJncykKICBmbiA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQogIG5hbWUgPT4KICBzdGF0ID0+CiAgKHYsIHApID0+CiAgdG9TdHJpbmcoKQogIHRvU3RyaW5nKCkKICB2ID0+CihbcCwgbl0sIGkpID0+Ck5vU3lzdGVtSW5jbHVkZXMgPSAoW3AsIG4sIGxdKSA9PgogIChbcGF0aCwgZGVjbF0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CiAgbmFtZXMgPSBkZWNscyA9PgooW3BhdGgsIGRlY2xdKSA9PgogIGRlY2xhcmF0aW9ucyA9IGRlY2xzID0+CihbcGF0aCwgZGVjbCwgbG9jXSkgPT4KKFtwYXRoLCBkZWNsXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKGEsIGIpID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihbcF0pID0+CihbcF0pID0+CihbcF0pID0+CiAgcCA9PgooW3AsIG5dKSA9PgooW3AsIG5dKSA9PgooYSwgYikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuLCBsXSkgPT4KICBrID0+CiAgbm9kZSA9PgooW3AsIG5dKSA9PgogIHAgPT4KICBwID0+CihbcCwgbl0pID0+CihbcGF0aCwgbm9kZSwgaWQsIG5hbWUsIHR5cGUsIGtpbmRdKSA9PgogIGRlY2wgPT4KKGZpZWxkLCBpKSA9PgogIGZpbmREZWNsID0gbm9kZSA9PgogIChuLCBwKSA9PgogIGZpbmRUeXBlID0gbmFtZSA9PgogIChuLCBwKSA9PgogIG5vZGVUeXBlID0gbiA9PgogIHQgPT4KICBuID0+CiAgbm9kZU5hbWUgPSAobiwgbmFtZSkgPT4KICBmaW5kSWQgPSBpZCA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kSWRLaW5kID0gKGlkLCBraW5kKSA9Pgoobm9kZSwgcGF0aCkgPT4KICBmaW5kTm9kZSA9IChpZCwga2luZCwgZXhjbHVkZSkgPT4KICAobiwgcCkgPT4KKHsgcGF0aCwgdmFsdWUgfSkgPT4KICBuID0+CihbcCwgbGVuLCBuXSkgPT4KKFtwLCAsIG5dKSA9PgogIGZpZWxkRGVjbHMgPSBub2RlID0+CiAgbiA9PgogIG4gPT4KICAoW29mZnNldCwgYXJyXSwgW25hbWUsIHR5cGVdKSA9PgooW25hbWUsIHR5cGUsIG9mZnNldCwgc2l6ZV0pID0+CiAgc3RydWN0U2l6ZSA9IG1hcCA9PgooYWNjLCBbbmFtZSwgW3R5cGUsIG9mZnNldCwgc2l6ZV1dKSA9PgooW3BhdGgsIG5vZGUsIGlkLCBuYW1lLCB0eXBlLCBraW5kXSkgPT4KKFtwYXRoLCBub2RlLCBpZCwgbmFtZSwgdHlwZSwga2luZF0pID0+CihbZGVjbCwgbm9kZV0pID0+CihbbmFtZSwgdmFsdWVdKSA9PgooW25hbWUsIGZpZWxkc10pID0+CihbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgc3ViID0+CiAgKFtvZmZzZXQsIGVudHJpZXNdLCBba2V5LCB0eXBlXSkgPT4KRGVmaW5lUHJvdG90eXBlKG5hbWUsIHJldFR5cGUsIHBhcmFtcykKICAoKSA9PgogIHQgPT4KICB2YXJuYW1lID0gbiA9PgogIHZhcm5hbWUgPSBuYW1lID0+CihbbmFtZSwgW3BhcmFtLCBvZmZzZXRdXSkgPT4KKFtuYW1lXSwgaSkgPT4KICBuYW1lID0+CiAgbiA9PgogIHJlY29yZCA9PgogIHIgPT4KICBub2RlID0+CiAgZ2V0SWRzID0gKGlkLCBleGNsdWRlKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICBwID0+CiAgcCA9PgogIG4gPT4KICAoYSwgbikgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KICAoYSwgZmllbGQpID0+CihbbmFtZSwgdHlwZV0pID0+CiAgKCkgPT4KICBzID0+CiAgYSA9PgooW3AsIG4sIHgsIHksIGExLCBhMiwgdCwgaW5uZXJdKSA9PgogIChbb2Zmc2V0LCBhcnJdLCBbbmFtZSwgW3R5cGUsIGJ5dGVMZW5ndGhdXSwgaSkgPT4KKGEsIFt0eXBlLCBieXRlTGVuZ3RoXSkgPT4KKFtwLCBpZF0pID0+CiAgZ2V0SWQgPSAoaWQsIGV4Y2x1ZGUpID0+Cihub2RlLCBwYXRoKSA9Pgoobm9kZSwgcGF0aCkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KQmFzZVBhdGhJbmRleChwYXRoKQogIGsgPT4KRmluZEJhY2t3YXJkcyhub2RlLCBwcmVkID0gKFtwLCBuXSkgPT4gZmFsc2UpCkdldFR5cGVTdHIobm9kZSkKICBpbm5lciA9PgogIGlubmVyID0+CihbbiwgdF0pID0+Ck1ha2VGaWxlbmFtZShjbGFzc05hbWUpClBhdGgyTG9jKHBhdGgpCihbcF0pID0+CldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKICB3cml0ZU91dHB1dChuYW1lLCBkYXRhKQpHZXRMaWJyYXJ5Rm9yKHN5bWJvbE5hbWUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKSW5zcGVjdFN0cnVjdCh0eXBlLCBtZW1iZXJzLCBpbmNsdWRlcykKR2VuZXJhdGVTdHJ1Y3RDbGFzcyhuYW1lLCBbc2l6ZSwgbWFwXSkKICBsaW5lID0+CiAgZmllbGQgPT4KR2VuZXJhdGVHZXRTZXQobmFtZSwgb2Zmc2V0LCBzaXplKQpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCkKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoKQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					504,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/noise.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					505,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					506,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/output-267.svg",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					507,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					508,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-call.js",
						"symkeys":
						[
							[
								145,
								153
							],
							[
								175,
								195
							],
							[
								356,
								364
							],
							[
								408,
								436
							],
							[
								551,
								563
							]
						],
						"symlist":
						[
							"Callable",
							"constructor(...args)",
							"Callable",
							"async function main(...args)",
							"(...args) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAARQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					509,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABFAAAAQ2FsbGFibGUKICBjb25zdHJ1Y3RvciguLi5hcmdzKQpDYWxsYWJsZQogIG1haW4oLi4uYXJncykKKC4uLmFyZ3MpID0+AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					510,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-bpg.html",
						"symkeys":
						[
							[
								346,
								351
							],
							[
								609,
								615
							]
						],
						"symlist":
						[
							" e =>",
							"output"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					511,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBlID0+CiAgb3V0cHV0AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					512,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-image.js",
						"symkeys":
						[
							[
								1232,
								1237
							],
							[
								1304,
								1319
							],
							[
								1345,
								1366
							],
							[
								1399,
								1427
							],
							[
								1467,
								1487
							],
							[
								1517,
								1529
							],
							[
								1552,
								1562
							],
							[
								1583,
								1604
							],
							[
								1636,
								1661
							],
							[
								1706,
								1727
							],
							[
								1803,
								1824
							],
							[
								1924,
								1933
							],
							[
								1951,
								1961
							],
							[
								2023,
								2032
							],
							[
								2093,
								2101
							],
							[
								2161,
								2169
							],
							[
								2232,
								2260
							],
							[
								2301,
								2308
							],
							[
								2352,
								2402
							],
							[
								2406,
								2410
							],
							[
								2433,
								2443
							],
							[
								2474,
								2498
							],
							[
								2529,
								2534
							],
							[
								2573,
								2598
							],
							[
								2846,
								2858
							],
							[
								2879,
								2899
							],
							[
								2973,
								3002
							],
							[
								3092,
								3113
							],
							[
								3154,
								3233
							],
							[
								3305,
								3335
							],
							[
								3405,
								3439
							],
							[
								3487,
								3510
							],
							[
								3537,
								3541
							],
							[
								3595,
								3622
							],
							[
								3700,
								3732
							],
							[
								3926,
								3948
							],
							[
								4250,
								4263
							],
							[
								4420,
								4439
							],
							[
								4504,
								4547
							],
							[
								5290,
								5312
							],
							[
								5375,
								5381
							],
							[
								5417,
								5421
							],
							[
								5601,
								5622
							],
							[
								5784,
								5813
							],
							[
								9124,
								9155
							],
							[
								9787,
								9815
							],
							[
								9986,
								10009
							],
							[
								10069,
								10092
							],
							[
								10215,
								10244
							],
							[
								10531,
								10555
							],
							[
								10756,
								10783
							],
							[
								10831,
								10836
							],
							[
								11114,
								11143
							],
							[
								11689,
								11702
							],
							[
								11935,
								11943
							],
							[
								12458,
								12500
							],
							[
								12641,
								12646
							],
							[
								12800,
								12821
							],
							[
								12862,
								12881
							],
							[
								12892,
								12910
							],
							[
								13045,
								13050
							],
							[
								13787,
								13825
							],
							[
								17001,
								17024
							],
							[
								17823,
								17835
							],
							[
								18087,
								18126
							],
							[
								20426,
								20465
							],
							[
								20501,
								20521
							],
							[
								21148,
								21152
							],
							[
								21527,
								21560
							],
							[
								21644,
								21653
							],
							[
								21686,
								21707
							],
							[
								22471,
								22485
							],
							[
								22602,
								22618
							],
							[
								22767,
								22775
							]
						],
						"symlist":
						[
							"() =>",
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAUwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					513,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTBQAAKCkgPT4KTlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					514,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-lexer.js",
						"symkeys":
						[
							[
								205,
								219
							],
							[
								431,
								449
							],
							[
								990,
								1014
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"function main(arg)",
							"function tokenColor(tok)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAALgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					515,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAICB0ZXN0Zm4gPSAoKSA9PgogIG1haW4oYXJnKQogIHRva2VuQ29sb3IodG9rKQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					516,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-readdir.js",
						"symkeys":
						[
							[
								327,
								362
							],
							[
								424,
								476
							],
							[
								830,
								858
							]
						],
						"symlist":
						[
							"function* Filter(gen, regEx = /.*/)",
							"function* ReadDirRecursive(dir, maxDepth = Infinity)",
							"async function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					517,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABUAAAARmlsdGVyKGdlbiwgcmVnRXggPSAvLiovKQpSZWFkRGlyUmVjdXJzaXZlKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					518,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								1168,
								1188
							],
							[
								1351,
								1367
							],
							[
								1421,
								1440
							],
							[
								1475,
								1491
							],
							[
								1547,
								1563
							],
							[
								1626,
								1660
							],
							[
								1683,
								1715
							],
							[
								1738,
								1781
							],
							[
								2022,
								2034
							],
							[
								3857,
								3876
							],
							[
								3974,
								3990
							],
							[
								4052,
								4070
							],
							[
								4134,
								4153
							],
							[
								4218,
								4227
							],
							[
								4282,
								4299
							],
							[
								4362,
								4379
							],
							[
								4442,
								4456
							],
							[
								4516,
								4531
							],
							[
								4592,
								4607
							],
							[
								4668,
								4676
							],
							[
								4730,
								4742
							],
							[
								4800,
								4810
							],
							[
								4866,
								4877
							],
							[
								4934,
								4942
							],
							[
								4996,
								5018
							],
							[
								5086,
								5101
							],
							[
								5162,
								5184
							],
							[
								5252,
								5268
							],
							[
								5330,
								5346
							],
							[
								5408,
								5420
							],
							[
								5478,
								5490
							],
							[
								5548,
								5561
							],
							[
								5620,
								5638
							],
							[
								5696,
								5714
							],
							[
								5778,
								5800
							],
							[
								5868,
								5895
							],
							[
								5968,
								5985
							],
							[
								6042,
								6059
							],
							[
								6116,
								6133
							],
							[
								6180,
								6196
							],
							[
								6279,
								6295
							],
							[
								6367,
								6383
							],
							[
								6455,
								6472
							],
							[
								6529,
								6549
							],
							[
								6608,
								6628
							],
							[
								6787,
								6806
							],
							[
								6882,
								6889
							],
							[
								6918,
								6938
							],
							[
								7008,
								7023
							],
							[
								7084,
								7110
							],
							[
								7188,
								7209
							],
							[
								7287,
								7313
							],
							[
								7359,
								7384
							],
							[
								7469,
								7511
							],
							[
								7645,
								7685
							],
							[
								10886,
								10929
							],
							[
								11382,
								11417
							],
							[
								11573,
								11591
							],
							[
								11621,
								11626
							],
							[
								11716,
								11743
							],
							[
								11862,
								11883
							],
							[
								11912,
								11928
							],
							[
								12021,
								12056
							],
							[
								12096,
								12114
							],
							[
								12301,
								12322
							],
							[
								12346,
								12356
							],
							[
								12395,
								12425
							],
							[
								12751,
								12785
							],
							[
								13100,
								13134
							],
							[
								13354,
								13388
							],
							[
								13454,
								13490
							],
							[
								13565,
								13582
							],
							[
								13741,
								13778
							],
							[
								13779,
								13793
							],
							[
								13799,
								13803
							],
							[
								13878,
								13910
							],
							[
								13938,
								13964
							],
							[
								14289,
								14311
							],
							[
								14362,
								14378
							],
							[
								14393,
								14400
							],
							[
								14428,
								14444
							],
							[
								14527,
								14544
							],
							[
								14545,
								14554
							],
							[
								14606,
								14623
							],
							[
								14624,
								14633
							],
							[
								14693,
								14710
							],
							[
								14711,
								14734
							],
							[
								14790,
								14814
							],
							[
								17441,
								17469
							],
							[
								17900,
								17904
							],
							[
								18032,
								18045
							],
							[
								18361,
								18373
							],
							[
								18636,
								18649
							],
							[
								18754,
								18768
							],
							[
								19661,
								19689
							],
							[
								19805,
								19818
							],
							[
								19930,
								19956
							],
							[
								20669,
								20731
							],
							[
								20765,
								20834
							]
						],
						"symlist":
						[
							"slice = (x, s, e) =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							" function util()",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							" function isObject(v)",
							" function hasBuiltIn(o, m)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function memoize(fn)",
							" (n, ...rest) =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function define(obj, ...args)",
							" function weakAssign(obj, ...args)",
							" function getConstructorChain(obj)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" (f, arr = [], length = f.length) =>",
							" (...args) =>",
							"a =>",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"unique = (arr, cmp) =>",
							" (el, i, arr) =>",
							"item =>",
							" (el, i, arr) =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function randInt(...args)",
							".extendArray = (proto = Array.prototype, def = util.define) =>",
							".extendGenerator = (proto = GeneratorPrototype, def = util.define) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAEAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					519,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAQCAAAICBzbGljZSA9ICh4LCBzLCBlKSA9PgogIHN0cmluZ2lmeSA9IHYgPT4KICBmb3JtYXROdW1iZXIgPSBuID0+CiAgaXNOYXRpdmUgPSBmbiA9PgogIHV0aWwoKQpBc3luY0Z1bmN0aW9uID0gZnVuY3Rpb24geCgpCkdlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24qKCkKQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKigpCigpCiAgaXNBbnlBcnJheUJ1ZmZlcih2KQogIGlzQXJyYXlCdWZmZXIodikKICBpc0JpZ0ludDY0QXJyYXkodikKICBpc0JpZ1VpbnQ2NEFycmF5KHYpCiAgaXNEYXRlKHYpCiAgaXNGbG9hdDMyQXJyYXkodikKICBpc0Zsb2F0NjRBcnJheSh2KQogIGlzSW50OEFycmF5KHYpCiAgaXNJbnQxNkFycmF5KHYpCiAgaXNJbnQzMkFycmF5KHYpCiAgaXNNYXAodikKICBpc1Byb21pc2UodikKICBpc1Byb3h5KHYpCiAgaXNSZWdFeHAodikKICBpc1NldCh2KQogIGlzU2hhcmVkQXJyYXlCdWZmZXIodikKICBpc1VpbnQ4QXJyYXkodikKICBpc1VpbnQ4Q2xhbXBlZEFycmF5KHYpCiAgaXNVaW50MTZBcnJheSh2KQogIGlzVWludDMyQXJyYXkodikKICBpc1dlYWtNYXAodikKICBpc1dlYWtTZXQodikKICBpc0RhdGFWaWV3KHYpCiAgaXNCb29sZWFuT2JqZWN0KHYpCiAgaXNBc3luY0Z1bmN0aW9uKHYpCiAgaXNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbih2KQogIGlzTnVtYmVyT2JqZWN0KHYpCiAgaXNCaWdJbnRPYmplY3QodikKICBpc1N5bWJvbE9iamVjdCh2KQogIGlzTmF0aXZlRXJyb3IodikKICBpc01hcEl0ZXJhdG9yKHYpCiAgaXNTZXRJdGVyYXRvcih2KQogIGlzU3RyaW5nT2JqZWN0KHYpCiAgaXNBcnJheUJ1ZmZlclZpZXcodikKICBpc0FyZ3VtZW50c09iamVjdCh2KQogIGlzQm94ZWRQcmltaXRpdmUodikKICBjdG9yID0+CiAgaXNHZW5lcmF0b3JPYmplY3QodikKICBpc1R5cGVkQXJyYXkodikKICBpc01vZHVsZU5hbWVzcGFjZU9iamVjdCh2KQogIGlzT2JqZWN0KHYpCiAgaGFzQnVpbHRJbihvLCBtKQogIGZvcm1hdCguLi5hcmdzKQogIGZvcm1hdFdpdGhPcHRpb25zKG9wdHMsIC4uLmFyZ3MpCiAgZm9ybWF0V2l0aE9wdGlvbnNJbnRlcm5hbChvLCB2KQogIGFzc2VydChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKQogIHNldEludGVydmFsKGNhbGxiYWNrLCBtcykKICBzdGFydCgpCigpID0+CiAgY2xlYXJJbnRlcnZhbChpZCkKICBtZW1vaXplKGZuKQogIChuLCAuLi5yZXN0KSA9PgogIG9uY2UoZm4sIHRoaXNBcmcsIG1lbW9GbikKICBmdW5jdGlvbiguLi5hcmdzKQogIHdhaXRGb3IobXMpCiAgcmVzb2x2ZSA9PgogIGRlZmluZShvYmosIC4uLmFyZ3MpCiAgd2Vha0Fzc2lnbihvYmosIC4uLmFyZ3MpCiAgZ2V0Q29uc3RydWN0b3JDaGFpbihvYmopCiAgaGFzUHJvdG90eXBlKG9iaiwgcHJvdG8pCiAgZmlsdGVyKHNlcSwgcHJlZCwgdGhpc0FyZykKICBwcmVkID0gKGVsLCBpKSA9PgogIChmLCBhcnIgPSBbXSwgbGVuZ3RoID0gZi5sZW5ndGgpID0+CiAgKC4uLmFyZ3MpID0+CiAgYSA9PgogIHNwbGl0KGJ1ZiwgLi4ucG9pbnRzKQogIHNwbGl0QXQgPSAoYiwgcG9zLCBsZW4pID0+CiAgdW5pcXVlID0gKGFyciwgY21wKSA9PgogIChlbCwgaSwgYXJyKSA9PgogIGl0ZW0gPT4KICAoZWwsIGksIGFycikgPT4KICAob2Zmc2V0ID0gMCkgPT4KICBjb2RlID0+CiAgKG9mZnNldCA9IDApID0+CiAgY29kZSA9PgogIChvZmZzZXQgPSAwKSA9PgogIChyZWQsIGdyZWVuLCBibHVlKSA9PgogIGdldEFuc2lTdHlsZXMoKQogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICBjID0+CiAgdmFsdWU6IGhleCA9PgogIGNoYXJhY3RlciA9PgogIHZhbHVlOiBoZXggPT4KICB2YWx1ZTogY29kZSA9PgogIHZhbHVlOiAocmVkLCBncmVlbiwgYmx1ZSkgPT4KICB2YWx1ZTogaGV4ID0+CiAgcmFuZEludCguLi5hcmdzKQogIC5leHRlbmRBcnJheSA9IChwcm90byA9IEFycmF5LnByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+CiAgLmV4dGVuZEdlbmVyYXRvciA9IChwcm90byA9IEdlbmVyYXRvclByb3RvdHlwZSwgZGVmID0gdXRpbC5kZWZpbmUpID0+AAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					520,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
						"symkeys":
						[
							[
								649,
								671
							],
							[
								2516,
								2520
							],
							[
								3070,
								3091
							],
							[
								3129,
								3133
							],
							[
								3869,
								3881
							],
							[
								4660,
								4681
							],
							[
								4749,
								4772
							],
							[
								4961,
								5000
							],
							[
								5279,
								5315
							],
							[
								5543,
								5574
							],
							[
								5813,
								5825
							]
						],
						"symlist":
						[
							"function main(...args)",
							"n =>",
							"Range = (from, to) =>",
							"n =>",
							"(id, idx) =>",
							" function toHex(num)",
							" function toHex32(num)",
							" function get_leb128(buf, offset, len)",
							" function get_bytes(buf, offset, n)",
							" function get_str(buf, offset)",
							"catch(error)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAvQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					521,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AAAAICBtYWluKC4uLmFyZ3MpCiAgbiA9PgpSYW5nZSA9IChmcm9tLCB0bykgPT4KICBuID0+CihpZCwgaWR4KSA9PgogIHRvSGV4KG51bSkKICB0b0hleDMyKG51bSkKICBnZXRfbGViMTI4KGJ1Ziwgb2Zmc2V0LCBsZW4pCiAgZ2V0X2J5dGVzKGJ1Ziwgb2Zmc2V0LCBuKQogIGdldF9zdHIoYnVmLCBvZmZzZXQpCiAgY2F0Y2goZXJyb3IpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					522,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
						"symkeys":
						[
							[
								200,
								205
							],
							[
								236,
								241
							],
							[
								262,
								287
							],
							[
								376,
								457
							],
							[
								462,
								494
							],
							[
								1470,
								1474
							],
							[
								1601,
								1610
							],
							[
								2105,
								2118
							],
							[
								2123,
								2159
							],
							[
								2279,
								2296
							],
							[
								2388,
								2404
							],
							[
								2449,
								2470
							],
							[
								2539,
								2553
							],
							[
								3230,
								3246
							],
							[
								3276,
								3286
							],
							[
								3312,
								3321
							],
							[
								3373,
								3389
							],
							[
								3625,
								3635
							],
							[
								3717,
								3723
							],
							[
								4087,
								4100
							],
							[
								4433,
								4455
							],
							[
								4744,
								4753
							],
							[
								4816,
								4836
							],
							[
								4934,
								4945
							],
							[
								5551,
								5558
							],
							[
								5594,
								5614
							],
							[
								5682,
								5695
							],
							[
								6568,
								6593
							],
							[
								6736,
								6753
							],
							[
								6964,
								6985
							],
							[
								7583,
								7608
							],
							[
								7761,
								7773
							],
							[
								7794,
								7813
							],
							[
								7887,
								7904
							],
							[
								8185,
								8198
							],
							[
								8261,
								8282
							],
							[
								8301,
								8314
							],
							[
								8389,
								8400
							],
							[
								8505,
								8515
							],
							[
								8615,
								8624
							],
							[
								8744,
								8760
							],
							[
								8887,
								8900
							],
							[
								9159,
								9168
							],
							[
								9425,
								9436
							],
							[
								9476,
								9487
							],
							[
								9519,
								9539
							],
							[
								9668,
								9687
							],
							[
								9822,
								9841
							],
							[
								9962,
								9987
							],
							[
								10279,
								10289
							],
							[
								10445,
								10459
							],
							[
								10611,
								10621
							],
							[
								10880,
								10901
							]
						],
						"symlist":
						[
							"() =>",
							"() =>",
							" function Crop(mat, rect)",
							"function ImageSize(src, dst, dsize, action = (name, arg1, arg2) => console.",
							"(`${name} ${arg1} -> ${arg2}`) )",
							"s =>",
							"(a, b) =>",
							"ImageSequence",
							"constructor(images = [], dimensions)",
							"get frame_count()",
							"get pos_frames()",
							"set pos_frames(value)",
							"get pos_msec()",
							"getBackendName()",
							"isOpened()",
							"get(prop)",
							"set(prop, value)",
							"get size()",
							"grab()",
							"retrieve(mat)",
							" (name, arg1, arg2) =>",
							"read(mat)",
							"isVideoPath = arg =>",
							"VideoSource",
							"name =>",
							"constructor(...args)",
							"(acc, arg) =>",
							"capture(device, driverId)",
							".propId = prop =>",
							".read = function(mat)",
							".retrieve = function(mat)",
							"VideoCapture",
							"fromImages(...args)",
							".propId = prop =>",
							"ImageSequence",
							".read = function(mat)",
							"ImageSequence",
							"set size(s)",
							"get size()",
							"get(prop)",
							"set(prop, value)",
							"get backend()",
							"get fps()",
							"propName =>",
							"([k, v]) =>",
							"seekFrames(relative)",
							"seekMsecs(relative)",
							"get durationMsecs()",
							"position(type = 'frames')",
							"get size()",
							"set size(size)",
							"get time()",
							"pad = (i, n, frac) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAA0QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					523,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRAwAAKCkgPT4KKCkgPT4KQ3JvcChtYXQsIHJlY3QpCkltYWdlU2l6ZShzcmMsIGRzdCwgZHNpemUsIGFjdGlvbiA9IChuYW1lLCBhcmcxLCBhcmcyKSA9PiBjb25zb2xlLgooYCR7bmFtZX0gJHthcmcxfSAtPiAke2FyZzJ9YCkgKQogIHMgPT4KKGEsIGIpID0+CkltYWdlU2VxdWVuY2UKICBjb25zdHJ1Y3RvcihpbWFnZXMgPSBbXSwgZGltZW5zaW9ucykKICBnZXQgZnJhbWVfY291bnQoKQogIGdldCBwb3NfZnJhbWVzKCkKICBzZXQgcG9zX2ZyYW1lcyh2YWx1ZSkKICBnZXQgcG9zX21zZWMoKQogIGdldEJhY2tlbmROYW1lKCkKICBpc09wZW5lZCgpCiAgZ2V0KHByb3ApCiAgc2V0KHByb3AsIHZhbHVlKQogIGdldCBzaXplKCkKICBncmFiKCkKICByZXRyaWV2ZShtYXQpCiAgKG5hbWUsIGFyZzEsIGFyZzIpID0+CiAgcmVhZChtYXQpCiAgaXNWaWRlb1BhdGggPSBhcmcgPT4KVmlkZW9Tb3VyY2UKICBuYW1lID0+CiAgY29uc3RydWN0b3IoLi4uYXJncykKKGFjYywgYXJnKSA9PgogIGNhcHR1cmUoZGV2aWNlLCBkcml2ZXJJZCkKICAucHJvcElkID0gcHJvcCA9PgogIC5yZWFkID0gZnVuY3Rpb24obWF0KQogIC5yZXRyaWV2ZSA9IGZ1bmN0aW9uKG1hdCkKVmlkZW9DYXB0dXJlCiAgZnJvbUltYWdlcyguLi5hcmdzKQogIC5wcm9wSWQgPSBwcm9wID0+CkltYWdlU2VxdWVuY2UKICAucmVhZCA9IGZ1bmN0aW9uKG1hdCkKSW1hZ2VTZXF1ZW5jZQogIHNldCBzaXplKHMpCiAgZ2V0IHNpemUoKQogIGdldChwcm9wKQogIHNldChwcm9wLCB2YWx1ZSkKICBnZXQgYmFja2VuZCgpCiAgZ2V0IGZwcygpCiAgcHJvcE5hbWUgPT4KKFtrLCB2XSkgPT4KICBzZWVrRnJhbWVzKHJlbGF0aXZlKQogIHNlZWtNc2VjcyhyZWxhdGl2ZSkKICBnZXQgZHVyYXRpb25Nc2VjcygpCiAgcG9zaXRpb24odHlwZSA9ICdmcmFtZXMnKQogIGdldCBzaXplKCkKICBzZXQgc2l6ZShzaXplKQogIGdldCB0aW1lKCkKICBwYWQgPSAoaSwgbiwgZnJhYykgPT4AAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					524,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-svgpath.js",
						"symkeys":
						[
							[
								995,
								999
							],
							[
								2140,
								2144
							],
							[
								2364,
								2368
							],
							[
								3411,
								3448
							]
						],
						"symlist":
						[
							"n =>",
							"p =>",
							"p =>",
							"function* dataToPoints(d, steps = 10)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					525,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBuID0+CiAgcCA9PgogIHAgPT4KICBkYXRhVG9Qb2ludHMoZCwgc3RlcHMgPSAxMCkAAAAAAAAAAH8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					526,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-tmtheme.js",
						"symkeys":
						[
							[
								340,
								370
							],
							[
								578,
								585
							],
							[
								605,
								619
							],
							[
								760,
								765
							],
							[
								784,
								804
							],
							[
								955,
								962
							],
							[
								1105,
								1109
							],
							[
								1114,
								1137
							],
							[
								1485,
								1489
							],
							[
								1508,
								1521
							],
							[
								1648,
								1665
							],
							[
								1797,
								1804
							],
							[
								2160,
								2175
							],
							[
								2269,
								2306
							],
							[
								3148,
								3190
							],
							[
								3473,
								3482
							],
							[
								3665,
								3674
							],
							[
								4665,
								4693
							],
							[
								5020,
								5024
							],
							[
								5518,
								5531
							],
							[
								5695,
								5702
							],
							[
								5752,
								5759
							],
							[
								5875,
								5882
							],
							[
								5933,
								5940
							],
							[
								6002,
								6006
							],
							[
								6058,
								6062
							],
							[
								6439,
								6443
							]
						],
						"symlist":
						[
							"function WriteFile(name, data)",
							"Comment",
							"constructor(s)",
							"PList",
							"constructor(...args)",
							"item =>",
							"Pair",
							"constructor(key, value)",
							"Dict",
							"constructor()",
							"([key, value]) =>",
							"item =>",
							"set(key, value)",
							"function Element2Object(element, key)",
							"function Object2Element(object, path = [])",
							"(v, k) =>",
							"(v, k) =>",
							"async function main(...args)",
							"n =>",
							"([, node]) =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"pair =>",
							"s =>",
							"s =>",
							"s =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAbAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					527,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								964,
								1011
							],
							[
								1417,
								1461
							],
							[
								2393,
								2414
							],
							[
								2741,
								2747
							],
							[
								2855,
								2880
							],
							[
								3957,
								3980
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABsAQAAV3JpdGVGaWxlKG5hbWUsIGRhdGEpCkNvbW1lbnQKICBjb25zdHJ1Y3RvcihzKQpQTGlzdAogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgaXRlbSA9PgpQYWlyCiAgY29uc3RydWN0b3Ioa2V5LCB2YWx1ZSkKRGljdAogIGNvbnN0cnVjdG9yKCkKKFtrZXksIHZhbHVlXSkgPT4KICBpdGVtID0+CiAgc2V0KGtleSwgdmFsdWUpCkVsZW1lbnQyT2JqZWN0KGVsZW1lbnQsIGtleSkKT2JqZWN0MkVsZW1lbnQob2JqZWN0LCBwYXRoID0gW10pCih2LCBrKSA9PgoodiwgaykgPT4KICBtYWluKC4uLmFyZ3MpCiAgbiA9PgooWywgbm9kZV0pID0+CiAgcGFpciA9PgogIHBhaXIgPT4KICBwYWlyID0+CiAgcGFpciA9PgogIHMgPT4KICBzID0+CiAgcyA9PgAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								2772,
								2781
							],
							[
								2850,
								2857
							],
							[
								2974,
								2979
							],
							[
								3166,
								3177
							],
							[
								3329,
								3334
							],
							[
								3778,
								3830
							],
							[
								4116,
								4152
							],
							[
								4397,
								4404
							],
							[
								4474,
								4493
							],
							[
								4535,
								4553
							],
							[
								4607,
								4630
							],
							[
								4965,
								4986
							],
							[
								5247,
								5255
							],
							[
								5798,
								5833
							],
							[
								7771,
								7800
							],
							[
								7856,
								7881
							],
							[
								7932,
								7990
							],
							[
								8698,
								8734
							],
							[
								8872,
								8895
							],
							[
								9358,
								9369
							],
							[
								9854,
								9891
							],
							[
								10006,
								10033
							],
							[
								11426,
								11454
							],
							[
								11632,
								11662
							],
							[
								11732,
								11763
							],
							[
								12067,
								12090
							],
							[
								12153,
								12177
							],
							[
								12241,
								12262
							],
							[
								12323,
								12348
							],
							[
								12388,
								12410
							],
							[
								12472,
								12507
							],
							[
								12563,
								12590
							],
							[
								12889,
								12929
							],
							[
								13062,
								13082
							],
							[
								13379,
								13398
							]
						],
						"symlist":
						[
							"source =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"line =>",
							"(acc, tokens, i) =>",
							"([type, token]) =>",
							"(acc, [type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							" (acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"async function ReadSocket()",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAjwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2087,
								2103
							],
							[
								2348,
								2360
							],
							[
								2457,
								2479
							],
							[
								2780,
								2790
							],
							[
								3034,
								3048
							],
							[
								3880,
								3919
							],
							[
								4107,
								4132
							],
							[
								5888,
								5906
							],
							[
								5977,
								6005
							],
							[
								6209,
								6220
							],
							[
								6365,
								6381
							],
							[
								6558,
								6577
							],
							[
								6663,
								6705
							],
							[
								7754,
								7760
							],
							[
								8517,
								8532
							],
							[
								8700,
								8711
							],
							[
								11939,
								11955
							],
							[
								12186,
								12203
							],
							[
								12255,
								12269
							],
							[
								12676,
								12696
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPAgAAICBzb3VyY2UgPT4KICBsaW5lID0+CiAgZSA9PgooKSA9PgogIGUgPT4KU291cmNlTGluZSA9ICh7IGxpbmVubywgdGV4dCwgYWN0aXZlLCBjaGlsZHJlbiB9KSA9PgpTb3VyY2VUZXh0ID0gKHsgdGV4dCwgZmlsZW5hbWUgfSkgPT4KICBsaW5lID0+CihhY2MsIHRva2VucywgaSkgPT4KKFt0eXBlLCB0b2tlbl0pID0+CihhY2MsIFt0eXBlLCB0b2tlbl0pID0+ClNvdXJjZUZpbGUgPSBwcm9wcyA9PgogIHJlc3AgPT4KTG9hZFNvdXJjZShmaWxlbmFtZSkKU3RhcnQoYXJncywgYWRkcmVzcykKQ29ubmVjdChhZGRyZXNzKQpJbml0aWF0ZShjb21tYW5kLCBhZGRyZXNzLCBjb25uZWN0ID0gZmFsc2UsIGFyZ3MpClRva2VuaXplSlMoZGF0YSwgZmlsZW5hbWUpCiAgKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpClJlYWRTb2NrZXQoKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKR2V0VmFyaWFibGVzKHJlZiA9IDApClVwZGF0ZVBvc2l0aW9uKCkKU3RlcEluKCkKU3RlcE91dCgpCk5leHQoKQpDb250aW51ZSgpClBhdXNlKCkKRXZhbHVhdGUoZXhwcmVzc2lvbikKU3RhY2tUcmFjZSgpClNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSkKKHJlc29sdmUsIHJlamVjdCkgPT4KUmVuZGVyVUkoKQAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2087,
								2103
							],
							[
								2348,
								2360
							],
							[
								2457,
								2479
							],
							[
								2780,
								2790
							],
							[
								3034,
								3048
							],
							[
								3880,
								3919
							],
							[
								4107,
								4132
							],
							[
								5888,
								5906
							],
							[
								5977,
								6005
							],
							[
								6209,
								6220
							],
							[
								6365,
								6381
							],
							[
								6558,
								6577
							],
							[
								6663,
								6705
							],
							[
								7754,
								7760
							],
							[
								8517,
								8532
							],
							[
								8700,
								8711
							],
							[
								11939,
								11955
							],
							[
								12186,
								12203
							],
							[
								12255,
								12269
							],
							[
								12676,
								12696
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 4053,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 13018,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAUCEAAAAAAABSIQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"prett",
				"Build With: prettier"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-svgpath.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/test-readdir.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/test-bpg.html",
		"/home/roman/Projects/plot-cv/test-call.js",
		"/home/roman/Projects/plot-cv/output-267.svg",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/dump-structs.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/jsobjstruct.c",
		"/home/roman/Projects/plot-cv/example_gl2.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/undefinedundefined63undefined",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/opencv/disabled/code10-3.cpp",
		"/home/roman/Projects/plot-cv/lib/dom/svg.js",
		"/home/roman/Projects/plot-cv/lib/svg/path-parser.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test.js",
		"/home/roman/Projects/plot-cv/test-clipper.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/src/simple_svg_writer.hpp",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/static/svg/player-symbols.svg",
		"/home/roman/Projects/plot-cv/restart.svg",
		"/home/roman/Projects/plot-cv/stop.svg",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger-transport-unix.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/.config/sublime-text/Packages/Out",
		"/home/roman/Projects/plot-cv/lib/lexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/test-net.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/repl.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/static/svg/arrow-right.svg",
		"/home/roman/Projects/plot-cv/lib/dom/css.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/css/button.css",
		"/home/roman/Projects/plot-cv/lib/hooks/useClick.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/lib/hooks.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js",
		"/home/roman/Projects/plot-cv/test-jslexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useGenerator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterator.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/token.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.ejs",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/test-console.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebounce.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDrag.js",
		"/home/roman/Projects/plot-cv/prism-core.js",
		"/home/roman/Projects/plot-cv/prism-clike.js",
		"/home/roman/Projects/plot-cv/prism-javascript.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor/node_modules/prismjs/components/prism-core.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/test-ecmascript.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/printer.js",
		"/home/roman/Projects/plot-cv/test-sockets.js",
		"/home/roman/Projects/plot-cv/lib/websocket-client.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/repeater/react-hooks.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/list-exports.js",
		"/home/roman/Projects/plot-cv/lib/hooks/utils.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useMousePosition.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebouncedCallback.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFocus.js",
		"/home/roman/Projects/plot-cv/errval.c",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/lib/events.js",
		"/home/roman/Projects/plot-cv/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/lib/childProcess.js",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/test-childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/defs.cmake"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lines",
			"main",
			"compact",
			"str",
			"\\.str",
			"format\\(",
			"format ",
			"'s'",
			"outputMat",
			"outputMap",
			"size = ",
			"PERPE",
			"'s'",
			"testOff",
			"_cmd",
			"parse",
			"simplifi",
			"simplify",
			"psimpl",
			"simpl",
			"reduce",
			"\\.array",
			"JS.*PROP",
			"contours",
			"findCont",
			"'\\\\x3",
			"'\\x3",
			"\\\\x3",
			"\\x3",
			"0x([0-9a-f][0-9a-f])",
			"send to",
			"read size",
			"RenderUI",
			"currentSource",
			"currentSource =",
			"UpdatePosition",
			"currentSource",
			"\\(globalThis",
			"define",
			"trkl",
			"currentSource",
			"SourceFile",
			"path.relative",
			"doRender",
			"RenderUI",
			"doRender",
			"SourceFile",
			"ws.send",
			"sockets",
			"sockets =",
			"'child",
			"'read r",
			"'read",
			"cfunc",
			"child",
			"connections",
			"connections =",
			"globalThis.connections",
			"get connections",
			"dbg =",
			"sockets",
			"get connect",
			"DebuggerProto",
			"connections",
			"dbg =",
			"dbg",
			"dbg =",
			"js_process_debugger_messages",
			"js_transport_read_fully",
			"js_debugger_attach",
			"currentSource",
			"start'",
			"currentSou",
			"SourceFile",
			"RenderUI",
			"SourceFile",
			"props.file",
			"UpdatePosition",
			"ShowSource",
			"$",
			"ShowSource",
			"SourceFile",
			"ShowSource",
			"SourceFile",
			"currentSource",
			"for await",
			"for\\(",
			"currentSource",
			"ShowSource",
			"Button",
			"sendMess",
			"connections",
			"accept",
			"CreateSocket",
			"oaded",
			"generic",
			"JSCFunc",
			"ConnectDebugger",
			"printFunc",
			"printFunction",
			"show\\(",
			"inspect\\(",
			"printStatus",
			"inspect\\(",
			"printStat",
			"inspect\\(",
			"inspectOptions",
			"inspectOp",
			"StartREPL",
			"inspect",
			"printStat",
			"printFunc",
			"print",
			"printStat",
			"DebuggerProtocol",
			"start",
			"Start",
			"CLI",
			"console.log",
			"repl",
			"onsole.log('ret=ws.send(msg)', ret, toString(b));",
			"22",
			"main",
			"code.*offset",
			"font-size",
			"TokenizeJS",
			"lineno",
			"Button ="
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask",
			"a.push(\\1);",
			"fd",
			"log",
			"cv::KeyPoint",
			"cv::KeyPoints",
			"getMat",
			"Feature2DClass",
			", ",
			"}\\n\\nstatic",
			"s",
			"",
			"\\(",
			" this.send"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 536,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-server.js",
							"function_name_status_row": 14,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									754,
									781
								],
								[
									952,
									998
								],
								[
									1565,
									1595
								],
								[
									1651,
									1684
								],
								[
									1692,
									1693
								],
								[
									1707,
									1732
								],
								[
									1927,
									1940
								],
								[
									1976,
									1990
								],
								[
									2087,
									2103
								],
								[
									2348,
									2360
								],
								[
									2457,
									2479
								],
								[
									2780,
									2790
								],
								[
									3034,
									3048
								],
								[
									3880,
									3919
								],
								[
									4107,
									4132
								],
								[
									5888,
									5906
								],
								[
									5977,
									6005
								],
								[
									6209,
									6220
								],
								[
									6365,
									6381
								],
								[
									6558,
									6577
								],
								[
									6663,
									6705
								],
								[
									7754,
									7760
								],
								[
									8517,
									8532
								],
								[
									8700,
									8711
								],
								[
									11939,
									11955
								],
								[
									12186,
									12203
								],
								[
									12255,
									12269
								],
								[
									12676,
									12696
								]
							],
							"symlist":
							[
								"ReadJSON(filename)",
								"WriteFile(name, data, verbose = true)",
								"WriteJSON(name, data)",
								"StartREPL(prefix = path.",
								"(",
								"[0], '.js'), suffix = '')",
								"  .help = () =>",
								"  .show = arg =>",
								"  .cleanup = () =>",
								"(...args) =>",
								"  main(...args)",
								"\t(a, v) =>",
								"\t(v, pv, o) =>",
								"  .createWS = (url, callbacks, listen) =>",
								"\t(level, ...args) =>",
								"  onConnect(ws, req)",
								"  .sendMessage = function(msg)",
								"  onClose(ws)",
								"  onHttp(req, rsp)",
								"  onMessage(ws, data)",
								"  handleCommand(ws, data)",
								"\t() =>",
								"\t(dbg, sock) =>",
								"() =>",
								"  onFd(fd, rd, wr)",
								"  get connections()",
								"  get socklist()",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1634548406.8,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4053,
						"regions":
						{
						},
						"selection":
						[
							[
								1248,
								1248
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 42,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1634873049.52,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "debugger-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13018,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										6443,
										6456
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										6420,
										6420
									]
								],
								"scope": "col_gutter"
							},
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1782,
										1795
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										1735,
										1735
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										1758,
										1772
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										1735,
										1735
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								8528,
								8530
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 266,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1634881483.93,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4815.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.745490637527,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-im",
				"test-image.js"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			],
			[
				"js_cont",
				"qjs-opencv/js_contour.hpp"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"path",
				"lib/svg/path.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"svgpa",
				"lib/svg/path-parser.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"test-clip",
				"test-clipper.js"
			],
			[
				"13",
				"opencv/disabled/code10-3.cpp"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"test-svg",
				"test-svgpath.js"
			],
			[
				"test-svgp",
				"test-svgpath.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"svg",
				"src/simple_svg_writer.hpp"
			],
			[
				"player-sy",
				"static/svg/player-symbols.svg"
			],
			[
				".svg",
				"restart.svg"
			],
			[
				"server",
				"debugger-server.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"sockets.c",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"debuggerprot",
				"debuggerprotocol.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.cs",
				"static/debugger.css"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"debugger-c",
				"debugger-client.js"
			],
			[
				"test-jsl",
				"test-jslexer.js"
			],
			[
				"hooks",
				"lib/hooks.js"
			],
			[
				"test-jsle",
				"test-jslexer.js"
			],
			[
				"misc.j",
				"lib/misc.js"
			],
			[
				"token",
				"lib/ecmascript/token.js"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"jslexer",
				"lib/jslexer.js"
			],
			[
				"",
				"debugger-server.js"
			],
			[
				"react-sim",
				"react-simple-code-editor.js"
			],
			[
				"prism-co",
				"prism-core.js"
			],
			[
				"prism-core",
				"prism-core.js"
			],
			[
				"debugger",
				"debugger-server.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"hooks.j",
				"lib/hooks.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"hook",
				"lib/hooks.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"parser.",
				"lib/ecmascript/parser.js"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"arser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"test-lexer",
				"test-lexer.js"
			],
			[
				"elemen",
				"lib/dom/element.js"
			],
			[
				"element",
				"lib/dom/element.js"
			],
			[
				"debugger.html",
				"debugger.html"
			],
			[
				"process.js",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"debu",
				"debugger-server.js"
			],
			[
				"errval",
				"errval.c"
			],
			[
				"events",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"events.",
				"lib/events.js"
			],
			[
				"path.c",
				"quickjs/qjs-modules/path.c"
			],
			[
				"syscall",
				"quickjs/qjs-modules/quickjs-syscallerror.c"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"childProcess.js",
				"lib/childProcess.js"
			],
			[
				"socket.js",
				"quickjs/qjs-ffi/lib/socket.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"parser2",
				"lib/ecmascript/parser2.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/rpc.js"
			],
			[
				"httpd.",
				"httpd.js"
			],
			[
				"httpd.js",
				"httpd.js"
			],
			[
				"ws-worker",
				"ws-worker.js"
			],
			[
				"test-rpc.js",
				"test-rpc.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"quickjs-inspe",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/utils.h"
			],
			[
				"quickjs-inter",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"quickjs-internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/vector.h"
			],
			[
				"quickjs-mis",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"test-debug",
				"test-debuggerprotocol.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"console.",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"debuggerpro",
				"debuggerprotocol.js"
			],
			[
				"packages",
				"opt/fontforge/share/mime/packages"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"test-mm",
				"test-mmap.js"
			],
			[
				"websocket-asy",
				"lib/net/websocket-async.js"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"estree",
				"lib/ecmascript/estree.js"
			],
			[
				"ECMAScr",
				"lib/grammars/ECMAScript.g4"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
