{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "PutsFunction = outFn => str =>\nFileWriter = file =>\n  close: () =>\nFdWriter(fd, name)\n  fn = (buf, len) =>\n  close: () =>\n  seek: (whence, offset) =>\n  inspect()\n  main(...args)\n  (level, message) =>\nDailyPhase(t)\nPhaseFile(t)\n  phase =>\n  onMessage(req, res)\nProcessResponse(buf)\n  item =>\n(acc, field, i) =>\n(a,b) =>\n  err =>",
			"settings":
			{
				"buffer_size": 327,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7410,
								7416
							],
							[
								8158,
								8173
							],
							[
								8341,
								8352
							],
							[
								11580,
								11596
							],
							[
								12525,
								12545
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1464,
								1508
							],
							[
								2440,
								2461
							],
							[
								2788,
								2794
							],
							[
								2902,
								2927
							],
							[
								4004,
								4027
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1601,
								1645
							],
							[
								2577,
								2598
							],
							[
								2925,
								2931
							],
							[
								3039,
								3064
							],
							[
								4141,
								4164
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1634,
								1678
							],
							[
								2610,
								2631
							],
							[
								2958,
								2964
							],
							[
								3072,
								3097
							],
							[
								4174,
								4197
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1636,
								1680
							],
							[
								2612,
								2633
							],
							[
								2960,
								2966
							],
							[
								3074,
								3099
							],
							[
								4176,
								4199
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1655,
								1699
							],
							[
								2631,
								2652
							],
							[
								2979,
								2985
							],
							[
								3093,
								3118
							],
							[
								4195,
								4218
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1667,
								1711
							],
							[
								2643,
								2664
							],
							[
								2991,
								2997
							],
							[
								3105,
								3130
							],
							[
								4207,
								4230
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1721,
								1765
							],
							[
								2697,
								2718
							],
							[
								3045,
								3051
							],
							[
								3159,
								3184
							],
							[
								4261,
								4284
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1723,
								1767
							],
							[
								2699,
								2720
							],
							[
								3047,
								3053
							],
							[
								3161,
								3186
							],
							[
								4263,
								4286
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1723,
								1767
							],
							[
								2699,
								2720
							],
							[
								3047,
								3053
							],
							[
								3161,
								3186
							],
							[
								4263,
								4286
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1674,
								1718
							],
							[
								2650,
								2671
							],
							[
								2998,
								3004
							],
							[
								3112,
								3137
							],
							[
								4214,
								4237
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1673,
								1717
							],
							[
								2649,
								2670
							],
							[
								2997,
								3003
							],
							[
								3111,
								3136
							],
							[
								4213,
								4236
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12569,
								12589
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					44,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsBAAAgIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIG5hbWUgPT4KICBtID0+CigpID0+CigpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKCkgPT4KICAobGV2ZWwsIHN0cikgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIHF1aXQod2h5KQAAAAAAAAAAuwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsBAAAgIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIG5hbWUgPT4KICBtID0+CigpID0+CigpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKCkgPT4KICAobGV2ZWwsIHN0cikgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIHF1aXQod2h5KQAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					45,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					48,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5469,
								5487
							],
							[
								5558,
								5586
							],
							[
								5790,
								5801
							],
							[
								5946,
								5957
							],
							[
								6017,
								6033
							],
							[
								6210,
								6229
							],
							[
								6315,
								6357
							],
							[
								7452,
								7458
							],
							[
								8200,
								8215
							],
							[
								8383,
								8394
							],
							[
								11622,
								11638
							],
							[
								12563,
								12583
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					49,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					50,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					51,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1244,
								1281
							],
							[
								1329,
								1334
							],
							[
								1442,
								1470
							],
							[
								1482,
								1496
							],
							[
								1752,
								1763
							],
							[
								1797,
								1801
							],
							[
								1875,
								1880
							],
							[
								1987,
								1992
							],
							[
								2060,
								2072
							],
							[
								2175,
								2197
							],
							[
								2511,
								2521
							],
							[
								2729,
								2743
							],
							[
								2797,
								2811
							],
							[
								3820,
								3859
							],
							[
								4026,
								4032
							],
							[
								4045,
								4061
							],
							[
								5685,
								5721
							],
							[
								5909,
								5944
							],
							[
								6084,
								6088
							],
							[
								6215,
								6233
							],
							[
								6387,
								6419
							],
							[
								6752,
								6763
							],
							[
								6908,
								6919
							],
							[
								6979,
								6996
							],
							[
								7548,
								7583
							],
							[
								7987,
								8006
							],
							[
								8121,
								8163
							],
							[
								9258,
								9264
							],
							[
								10008,
								10023
							],
							[
								10191,
								10202
							],
							[
								13430,
								13446
							],
							[
								14238,
								14244
							],
							[
								14655,
								14680
							],
							[
								15146,
								15166
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAADoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1810,
								1818
							],
							[
								1819,
								1833
							],
							[
								1913,
								1923
							],
							[
								2137,
								2185
							],
							[
								2300,
								2309
							],
							[
								2424,
								2446
							],
							[
								2905,
								2927
							],
							[
								3304,
								3314
							],
							[
								3372,
								3382
							],
							[
								3450,
								3466
							],
							[
								3983,
								4002
							],
							[
								4066,
								4087
							],
							[
								4429,
								4434
							],
							[
								4509,
								4524
							],
							[
								4616,
								4624
							],
							[
								4665,
								4673
							],
							[
								4918,
								4923
							],
							[
								5052,
								5125
							],
							[
								5129,
								5137
							],
							[
								5234,
								5264
							],
							[
								5299,
								5304
							],
							[
								5337,
								5344
							],
							[
								5456,
								5484
							],
							[
								5889,
								5896
							],
							[
								5915,
								5938
							],
							[
								5968,
								5975
							],
							[
								6006,
								6014
							],
							[
								6052,
								6059
							],
							[
								6268,
								6281
							],
							[
								6509,
								6552
							],
							[
								6585,
								6594
							],
							[
								6655,
								6659
							],
							[
								6707,
								6711
							],
							[
								6747,
								6761
							],
							[
								6868,
								6896
							],
							[
								7030,
								7055
							],
							[
								7153,
								7177
							],
							[
								7250,
								7254
							],
							[
								7372,
								7376
							],
							[
								7440,
								7454
							],
							[
								7527,
								7536
							],
							[
								7844,
								7858
							],
							[
								8007,
								8019
							],
							[
								8077,
								8102
							],
							[
								8151,
								8162
							],
							[
								8202,
								8213
							],
							[
								8350,
								8361
							],
							[
								8448,
								8461
							],
							[
								8542,
								8568
							],
							[
								8783,
								8812
							],
							[
								8823,
								8838
							],
							[
								8900,
								8919
							],
							[
								9127,
								9155
							],
							[
								9223,
								9242
							],
							[
								9383,
								9410
							],
							[
								9958,
								9984
							],
							[
								10251,
								10258
							],
							[
								12167,
								12225
							],
							[
								13268,
								13275
							],
							[
								13339,
								13346
							],
							[
								13356,
								13367
							],
							[
								13408,
								13434
							],
							[
								13550,
								13564
							],
							[
								13866,
								13885
							],
							[
								13912,
								13919
							],
							[
								14007,
								14037
							],
							[
								14103,
								14143
							],
							[
								14319,
								14370
							],
							[
								15336,
								15343
							],
							[
								15749,
								15775
							],
							[
								16020,
								16074
							],
							[
								16262,
								16274
							],
							[
								16301,
								16313
							],
							[
								16923,
								16983
							],
							[
								17565,
								17620
							],
							[
								17716,
								17728
							],
							[
								17733,
								17763
							],
							[
								18040,
								18062
							],
							[
								18108,
								18131
							],
							[
								18203,
								18218
							],
							[
								18746,
								18759
							],
							[
								18883,
								18902
							],
							[
								18954,
								18962
							],
							[
								19019,
								19034
							],
							[
								19192,
								19204
							],
							[
								19647,
								19661
							],
							[
								19761,
								19778
							],
							[
								20003,
								20025
							],
							[
								20142,
								20167
							],
							[
								20267,
								20284
							],
							[
								20338,
								20342
							],
							[
								20431,
								20435
							],
							[
								20486,
								20510
							],
							[
								20625,
								20665
							],
							[
								20725,
								20746
							],
							[
								21027,
								21059
							],
							[
								21642,
								21657
							],
							[
								21784,
								21809
							],
							[
								22045,
								22080
							],
							[
								22299,
								22306
							],
							[
								22401,
								22408
							],
							[
								22442,
								22451
							],
							[
								22487,
								22496
							],
							[
								22546,
								22554
							],
							[
								22596,
								22620
							],
							[
								22721,
								22737
							],
							[
								22776,
								22816
							],
							[
								23112,
								23155
							],
							[
								24128,
								24139
							],
							[
								24898,
								24948
							],
							[
								24970,
								24996
							],
							[
								25031,
								25060
							],
							[
								25414,
								25457
							],
							[
								25570,
								25574
							],
							[
								25590,
								25594
							],
							[
								25639,
								25726
							],
							[
								25893,
								25926
							],
							[
								25984,
								25989
							],
							[
								26067,
								26109
							],
							[
								26197,
								26212
							],
							[
								26351,
								26391
							],
							[
								26537,
								26542
							],
							[
								26607,
								26614
							],
							[
								26729,
								26733
							],
							[
								26812,
								26816
							],
							[
								26968,
								26975
							],
							[
								27079,
								27091
							],
							[
								27221,
								27237
							],
							[
								27350,
								27357
							],
							[
								27438,
								27442
							],
							[
								27502,
								27509
							],
							[
								27590,
								27597
							],
							[
								27662,
								27708
							],
							[
								27748,
								27758
							],
							[
								27959,
								27995
							],
							[
								28038,
								28050
							],
							[
								29592,
								29624
							],
							[
								29909,
								29914
							],
							[
								31106,
								31115
							],
							[
								31205,
								31214
							],
							[
								31327,
								31336
							],
							[
								31400,
								31409
							],
							[
								31663,
								31673
							],
							[
								31723,
								31733
							],
							[
								31781,
								31791
							],
							[
								32375,
								32386
							],
							[
								32422,
								32426
							],
							[
								32453,
								32457
							],
							[
								32481,
								32485
							],
							[
								32509,
								32513
							],
							[
								32541,
								32578
							],
							[
								32765,
								32820
							],
							[
								33027,
								33035
							],
							[
								33222,
								33230
							],
							[
								33319,
								33327
							],
							[
								33373,
								33381
							],
							[
								33460,
								33496
							],
							[
								33585,
								33628
							],
							[
								33907,
								33926
							],
							[
								33990,
								33995
							],
							[
								34254,
								34277
							],
							[
								34385,
								34390
							],
							[
								34502,
								34525
							],
							[
								34613,
								34618
							],
							[
								34720,
								34732
							],
							[
								35153,
								35158
							],
							[
								35218,
								35247
							],
							[
								35364,
								35378
							],
							[
								36324,
								36382
							],
							[
								37305,
								37316
							],
							[
								37349,
								37360
							],
							[
								37414,
								37420
							],
							[
								37473,
								37481
							],
							[
								37705,
								37732
							],
							[
								37761,
								37769
							],
							[
								37905,
								37909
							],
							[
								38648,
								38654
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function Shell(cmd)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AgAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogICh2LCBwdiwgbykgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAoKSA9PgogIChsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25IdHRwKHJlcSwgcmVzcCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICAoKSA9PgogIHNob3dTZXNzaW9ucygpCiAgcXVpdCh3aHkpAAAAAAAAAAA5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/clang-ast.js",
						"symkeys":
						[
							[
								715,
								742
							],
							[
								822,
								852
							],
							[
								919,
								927
							],
							[
								965,
								992
							],
							[
								1041,
								1068
							],
							[
								1150,
								1154
							],
							[
								1177,
								1210
							],
							[
								1397,
								1401
							],
							[
								1420,
								1440
							],
							[
								1596,
								1628
							],
							[
								1792,
								1810
							],
							[
								2070,
								2087
							],
							[
								2395,
								2406
							],
							[
								2430,
								2437
							],
							[
								2466,
								2475
							],
							[
								2605,
								2611
							],
							[
								2733,
								2741
							],
							[
								2866,
								2875
							],
							[
								2901,
								2910
							],
							[
								2941,
								2945
							],
							[
								3006,
								3010
							],
							[
								3086,
								3102
							],
							[
								3362,
								3377
							],
							[
								3444,
								3453
							],
							[
								3521,
								3529
							],
							[
								3584,
								3593
							],
							[
								3667,
								3677
							],
							[
								3731,
								3740
							],
							[
								3770,
								3779
							],
							[
								3889,
								3900
							],
							[
								4102,
								4106
							],
							[
								4761,
								4772
							],
							[
								5022,
								5036
							],
							[
								5086,
								5122
							],
							[
								5160,
								5165
							],
							[
								5206,
								5248
							],
							[
								5441,
								5445
							],
							[
								5479,
								5490
							],
							[
								5522,
								5541
							],
							[
								5860,
								5902
							],
							[
								5974,
								5984
							],
							[
								6205,
								6210
							],
							[
								6276,
								6283
							],
							[
								6400,
								6404
							],
							[
								6502,
								6524
							],
							[
								7032,
								7037
							],
							[
								8874,
								8878
							],
							[
								9659,
								9669
							],
							[
								9887,
								9899
							],
							[
								10040,
								10048
							],
							[
								10131,
								10142
							],
							[
								10229,
								10241
							],
							[
								10333,
								10342
							],
							[
								10413,
								10422
							],
							[
								10540,
								10556
							],
							[
								10626,
								10642
							],
							[
								10731,
								10744
							],
							[
								11277,
								11292
							],
							[
								11377,
								11382
							],
							[
								11634,
								11648
							],
							[
								11754,
								11766
							],
							[
								11835,
								11847
							],
							[
								11906,
								11923
							],
							[
								12009,
								12020
							],
							[
								12114,
								12127
							],
							[
								12267,
								12275
							],
							[
								12382,
								12392
							],
							[
								12620,
								12629
							],
							[
								14119,
								14129
							],
							[
								17012,
								17018
							],
							[
								17308,
								17319
							],
							[
								17419,
								17455
							],
							[
								17658,
								17666
							],
							[
								17736,
								17744
							],
							[
								19549,
								19579
							],
							[
								19658,
								19668
							],
							[
								19686,
								19708
							],
							[
								19888,
								19896
							],
							[
								19977,
								19985
							],
							[
								20164,
								20171
							],
							[
								20222,
								20236
							],
							[
								20730,
								20734
							],
							[
								20808,
								20813
							],
							[
								21308,
								21312
							],
							[
								21884,
								21894
							],
							[
								21969,
								21989
							],
							[
								22192,
								22200
							],
							[
								22322,
								22341
							],
							[
								22438,
								22446
							],
							[
								22464,
								22486
							],
							[
								22602,
								22610
							],
							[
								22715,
								22741
							],
							[
								22992,
								23000
							],
							[
								23115,
								23126
							],
							[
								23144,
								23166
							],
							[
								23234,
								23238
							],
							[
								23344,
								23354
							],
							[
								23414,
								23418
							],
							[
								23481,
								23485
							],
							[
								23535,
								23539
							],
							[
								24002,
								24012
							],
							[
								24050,
								24058
							],
							[
								24155,
								24164
							],
							[
								24182,
								24204
							],
							[
								24310,
								24314
							],
							[
								24714,
								24726
							],
							[
								24744,
								24766
							],
							[
								24956,
								24964
							],
							[
								25027,
								25035
							],
							[
								25225,
								25230
							],
							[
								25539,
								25558
							],
							[
								25619,
								25627
							],
							[
								25736,
								25743
							],
							[
								25761,
								25783
							],
							[
								26128,
								26136
							],
							[
								26233,
								26242
							],
							[
								26279,
								26290
							],
							[
								26308,
								26330
							],
							[
								26380,
								26391
							],
							[
								26409,
								26431
							],
							[
								26592,
								26600
							],
							[
								26703,
								26720
							],
							[
								26738,
								26760
							],
							[
								27016,
								27024
							],
							[
								27135,
								27143
							],
							[
								27148,
								27164
							],
							[
								27366,
								27379
							],
							[
								27414,
								27429
							],
							[
								27514,
								27524
							],
							[
								27837,
								27857
							],
							[
								27940,
								27986
							],
							[
								29439,
								29503
							],
							[
								29800,
								29804
							],
							[
								30563,
								30571
							],
							[
								30679,
								30687
							],
							[
								30762,
								30777
							],
							[
								31057,
								31064
							],
							[
								31118,
								31125
							],
							[
								31213,
								31220
							],
							[
								31401,
								31436
							],
							[
								31475,
								31495
							],
							[
								31525,
								31531
							],
							[
								31552,
								31560
							],
							[
								31666,
								31699
							],
							[
								32012,
								32037
							],
							[
								32432,
								32474
							],
							[
								33127,
								33180
							],
							[
								34101,
								34107
							],
							[
								34157,
								34163
							],
							[
								34291,
								34297
							],
							[
								34495,
								34511
							],
							[
								34878,
								34885
							],
							[
								34928,
								34932
							],
							[
								34952,
								34959
							],
							[
								35079,
								35106
							],
							[
								35165,
								35180
							],
							[
								35509,
								35516
							],
							[
								35576,
								35590
							],
							[
								35635,
								35650
							],
							[
								35675,
								35679
							],
							[
								35710,
								35721
							],
							[
								35754,
								35766
							],
							[
								35800,
								35813
							],
							[
								35885,
								35890
							],
							[
								35988,
								35992
							],
							[
								36016,
								36028
							],
							[
								36097,
								36102
							],
							[
								36162,
								36166
							],
							[
								36197,
								36206
							],
							[
								36219,
								36235
							],
							[
								36596,
								36600
							],
							[
								36624,
								36635
							],
							[
								36694,
								36698
							],
							[
								36736,
								36740
							],
							[
								36771,
								36787
							],
							[
								36826,
								36830
							],
							[
								36848,
								36852
							],
							[
								36895,
								36935
							],
							[
								36994,
								37010
							],
							[
								37372,
								37393
							],
							[
								37419,
								37423
							],
							[
								37866,
								37871
							],
							[
								37912,
								37939
							],
							[
								38133,
								38155
							],
							[
								39190,
								39231
							],
							[
								39311,
								39318
							],
							[
								39389,
								39396
							],
							[
								39433,
								39459
							],
							[
								39553,
								39561
							],
							[
								39627,
								39635
							],
							[
								39697,
								39708
							],
							[
								39855,
								39881
							],
							[
								39933,
								39952
							],
							[
								40028,
								40045
							],
							[
								40080,
								40104
							],
							[
								40350,
								40355
							],
							[
								40412,
								40419
							],
							[
								40500,
								40511
							],
							[
								41001,
								41011
							],
							[
								41057,
								41061
							],
							[
								41719,
								41730
							],
							[
								41741,
								41765
							],
							[
								41833,
								41865
							],
							[
								42021,
								42046
							],
							[
								42110,
								42146
							],
							[
								42216,
								42256
							],
							[
								42508,
								42536
							],
							[
								42583,
								42614
							],
							[
								42843,
								42885
							],
							[
								43088,
								43109
							],
							[
								43154,
								43173
							],
							[
								43507,
								43526
							],
							[
								43730,
								43765
							],
							[
								43883,
								43931
							],
							[
								44177,
								44204
							],
							[
								44822,
								44863
							],
							[
								45101,
								45128
							],
							[
								45271,
								45292
							],
							[
								45353,
								45380
							],
							[
								45425,
								45457
							],
							[
								45707,
								45733
							],
							[
								45927,
								45946
							],
							[
								46608,
								46633
							],
							[
								46681,
								46712
							],
							[
								46779,
								46794
							],
							[
								46989,
								47010
							],
							[
								47127,
								47163
							],
							[
								47383,
								47402
							],
							[
								47806,
								47827
							],
							[
								48044,
								48077
							],
							[
								48137,
								48160
							],
							[
								48223,
								48240
							],
							[
								48360,
								48364
							],
							[
								49191,
								49216
							],
							[
								49423,
								49450
							],
							[
								49915,
								49919
							],
							[
								50130,
								50146
							],
							[
								50356,
								50375
							],
							[
								50472,
								50477
							],
							[
								50631,
								50670
							],
							[
								50769,
								50812
							],
							[
								51022,
								51037
							],
							[
								51207,
								51243
							],
							[
								51339,
								51367
							],
							[
								51637,
								51681
							],
							[
								51743,
								51774
							],
							[
								51833,
								51854
							],
							[
								51913,
								51936
							],
							[
								52359,
								52385
							],
							[
								52453,
								52479
							],
							[
								52543,
								52562
							],
							[
								52603,
								52638
							],
							[
								52812,
								52854
							],
							[
								53039,
								53060
							],
							[
								53236,
								53266
							],
							[
								53486,
								53512
							],
							[
								53940,
								53959
							],
							[
								54020,
								54043
							],
							[
								54578,
								54605
							],
							[
								54655,
								54678
							],
							[
								54835,
								54871
							],
							[
								54941,
								54970
							],
							[
								55028,
								55051
							],
							[
								55229,
								55254
							],
							[
								55338,
								55380
							],
							[
								55479,
								55504
							],
							[
								55808,
								55863
							],
							[
								56117,
								56146
							],
							[
								56397,
								56441
							],
							[
								56573,
								56617
							],
							[
								56704,
								56732
							],
							[
								56876,
								56900
							],
							[
								57148,
								57192
							],
							[
								57514,
								57567
							],
							[
								57666,
								57711
							],
							[
								57786,
								57805
							],
							[
								57866,
								57887
							],
							[
								58064,
								58091
							],
							[
								58140,
								58170
							],
							[
								58182,
								58203
							],
							[
								58215,
								58247
							],
							[
								58389,
								58419
							],
							[
								58431,
								58472
							],
							[
								58484,
								58523
							],
							[
								58535,
								58558
							],
							[
								58570,
								58593
							],
							[
								58605,
								58624
							],
							[
								58636,
								58678
							],
							[
								58690,
								58715
							],
							[
								58727,
								58754
							],
							[
								58766,
								58804
							],
							[
								58816,
								58898
							],
							[
								58910,
								58977
							],
							[
								58989,
								59014
							],
							[
								59026,
								59068
							],
							[
								59080,
								59118
							],
							[
								59130,
								59187
							],
							[
								59199,
								59237
							],
							[
								59249,
								59274
							],
							[
								59286,
								59313
							],
							[
								59325,
								59363
							],
							[
								59375,
								59431
							],
							[
								59525,
								59576
							],
							[
								59588,
								59663
							],
							[
								59675,
								59706
							],
							[
								59718,
								59737
							],
							[
								59749,
								59785
							],
							[
								59881,
								59902
							],
							[
								59914,
								59944
							],
							[
								59956,
								59979
							],
							[
								59991,
								60034
							],
							[
								60046,
								60084
							],
							[
								60096,
								60140
							],
							[
								60152,
								60176
							],
							[
								60188,
								60218
							],
							[
								60230,
								60256
							],
							[
								60300,
								60347
							],
							[
								60359,
								60401
							],
							[
								60413,
								60451
							],
							[
								60463,
								60499
							],
							[
								60511,
								60558
							],
							[
								60570,
								60593
							],
							[
								60605,
								60639
							],
							[
								60651,
								60694
							],
							[
								60706,
								60758
							],
							[
								60862,
								60909
							],
							[
								60921,
								60949
							],
							[
								60961,
								60999
							],
							[
								61011,
								61052
							],
							[
								61064,
								61083
							],
							[
								61095,
								61124
							],
							[
								61136,
								61162
							],
							[
								61174,
								61202
							],
							[
								61214,
								61266
							],
							[
								61278,
								61306
							],
							[
								61318,
								61352
							],
							[
								61364,
								61385
							],
							[
								61397,
								61420
							],
							[
								61432,
								61470
							],
							[
								61482,
								61520
							],
							[
								61532,
								61553
							],
							[
								61565,
								61590
							],
							[
								61602,
								61627
							],
							[
								61639,
								61670
							],
							[
								61682,
								61701
							],
							[
								61713,
								61736
							],
							[
								61748,
								61789
							],
							[
								61801,
								61844
							],
							[
								61856,
								61883
							],
							[
								61895,
								61933
							],
							[
								61945,
								61978
							],
							[
								61990,
								62026
							],
							[
								62038,
								62057
							],
							[
								62069,
								62132
							],
							[
								62144,
								62200
							],
							[
								62212,
								62235
							],
							[
								62247,
								62282
							],
							[
								62294,
								62350
							],
							[
								62362,
								62415
							],
							[
								62427,
								62472
							],
							[
								62484,
								62529
							],
							[
								62541,
								62586
							],
							[
								62598,
								62628
							],
							[
								62640,
								62687
							],
							[
								62699,
								62724
							],
							[
								62736,
								62769
							],
							[
								62781,
								62811
							],
							[
								62823,
								62863
							],
							[
								62875,
								62928
							],
							[
								62940,
								62963
							],
							[
								62975,
								62996
							],
							[
								63008,
								63048
							],
							[
								63060,
								63094
							],
							[
								63106,
								63128
							],
							[
								63140,
								63174
							],
							[
								63186,
								63209
							],
							[
								63221,
								63263
							],
							[
								63275,
								63306
							],
							[
								63318,
								63344
							],
							[
								63357,
								63387
							],
							[
								63961,
								64001
							],
							[
								64223,
								64227
							],
							[
								65380,
								65420
							],
							[
								65802,
								65862
							],
							[
								66298,
								66324
							],
							[
								66432,
								66470
							],
							[
								66678,
								66682
							],
							[
								66981,
								67011
							],
							[
								67481,
								67485
							],
							[
								68149,
								68188
							],
							[
								68851,
								68908
							],
							[
								69229,
								69253
							],
							[
								69725,
								69755
							],
							[
								70018,
								70059
							],
							[
								70194,
								70233
							],
							[
								70245,
								70290
							],
							[
								70302,
								70330
							],
							[
								70342,
								70378
							],
							[
								70522,
								70560
							],
							[
								70572,
								70611
							],
							[
								70623,
								70664
							],
							[
								70676,
								70711
							],
							[
								70723,
								70770
							],
							[
								70782,
								70821
							],
							[
								70834,
								70868
							],
							[
								70880,
								70928
							],
							[
								70940,
								70983
							],
							[
								70995,
								71044
							],
							[
								71056,
								71106
							],
							[
								71118,
								71167
							],
							[
								71421,
								71445
							],
							[
								71500,
								71525
							],
							[
								71904,
								71933
							],
							[
								72112,
								72117
							],
							[
								72389,
								72410
							],
							[
								72477,
								72520
							],
							[
								72707,
								72711
							],
							[
								73312,
								73320
							],
							[
								73382,
								73390
							],
							[
								73509,
								73513
							],
							[
								73765,
								73790
							],
							[
								73830,
								73840
							],
							[
								73909,
								73920
							],
							[
								73994,
								74009
							],
							[
								74048,
								74052
							],
							[
								74131,
								74156
							],
							[
								74195,
								74203
							],
							[
								74244,
								74273
							],
							[
								74303,
								74307
							]
						],
						"symlist":
						[
							"function FileTime(filename)",
							"function Newer(file, ...other)",
							"other =>",
							"function Older(file, other)",
							"function GetSubscripts(str)",
							"m =>",
							"function TrimSubscripts(str, sub)",
							"List",
							"constructor(...args)",
							"filter(callback, thisArg = null)",
							"callback = elem =>",
							"slice(start, end)",
							"get first()",
							"elem =>",
							"entries()",
							"keys()",
							"values()",
							"toArray()",
							"(a, n) =>",
							"List",
							"Node",
							"constructor(ast)",
							"static get(ast)",
							"get ast()",
							"get id()",
							"get loc()",
							"get file()",
							" (v,k) =>",
							" (v,k) =>",
							"get range()",
							"r =>",
							"toJSON(obj)",
							"(node, ast) =>",
							" function PathOf(node, ast = $.data)",
							" n =>",
							" function Hier(node_or_path, ast = $.data)",
							"p =>",
							"([p, n]) =>",
							" ([p, n]) =>",
							" function FindType(typeName, ast = $.data)",
							"([tok]) =>",
							" n =>",
							"node =>",
							"Type",
							"constructor(node, ast)",
							" n =>",
							"n =>",
							" (n, p) =>",
							"get regExp()",
							"isEnum()",
							"isPointer()",
							"isFunction()",
							"isArray()",
							"arrayOf()",
							"get subscripts()",
							"trimSubscripts()",
							"get pointer()",
							"getPointer(ast)",
							" n =>",
							"get unsigned()",
							"get signed()",
							"isCompound()",
							"isFloatingPoint()",
							"get alias()",
							"get aliases()",
							"isEnum()",
							"isString()",
							"get ffi()",
							"get size()",
							"toJS()",
							"toJSON(obj)",
							"static get(name_or_id, ast = $.data)",
							" node =>",
							" node =>",
							"function RoundTo(value, align)",
							"RecordDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							"node =>",
							"(acc, node) =>",
							"i =>",
							" n =>",
							"n =>",
							"get size()",
							"(acc,[name,type]) =>",
							"toJSON()",
							"([name, member]) =>",
							"EnumDecl",
							"constructor(node, ast)",
							"child =>",
							"({ name, type, inner }) =>",
							"toJSON()",
							"TypedefDecl",
							"constructor(node, ast)",
							"n =>",
							" (v, k) =>",
							"n =>",
							"n =>",
							"n =>",
							"get size()",
							"toJSON()",
							"FieldDecl",
							"constructor(node, ast)",
							"n =>",
							"FunctionDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							" n =>",
							"({ name, type }) =>",
							"toJSON()",
							"VarDecl",
							"constructor(node, ast)",
							"toJSON()",
							"ClassDecl",
							"BuiltinType",
							"constructor(node, ast)",
							"PointerType",
							"constructor(node, ast)",
							"toJSON()",
							"ConstantArrayType",
							"constructor(node, ast)",
							"toJSON()",
							"Location",
							"constructor(loc)",
							" (t, ...c) =>",
							"'\\x1b[m' : t =>",
							"toString()",
							"localeCompare(other)",
							" function TypeFactory(node, ast, cache = true)",
							"async function SpawnCompiler(compiler, input, output, args = [])",
							"p =>",
							" data =>",
							" data =>",
							"async reader =>",
							"line =>",
							"line =>",
							"line =>",
							" function PipeReader(fd, callback)",
							"(resolve, reject) =>",
							" () =>",
							" data =>",
							" function ReadPipe(fd, callback)",
							" function ReadOutput(fd)",
							"async function SourceDependencies(...args)",
							"async function AstDump(compiler, source, args, force)",
							"size()",
							"json()",
							"data()",
							"SetFile = loc =>",
							"files()",
							"n =>",
							"file =>",
							"pred2 = (used, implicit) =>",
							" node =>",
							"types()",
							" n =>",
							" () =>",
							"List",
							"functions()",
							" n =>",
							" () =>",
							" n =>",
							"List",
							"namespaces()",
							" n =>",
							"List",
							"classes()",
							"predicate = n =>",
							"List",
							"variables()",
							"n =>",
							"List",
							"names(depth = 1)",
							"n =>",
							"n =>",
							" function NameFor(decl, ast = this.data)",
							" (value, key) =>",
							" function NodeType(n)",
							"t =>",
							" n =>",
							" function NodeName(n, name)",
							" function GetLoc(node)",
							" function GetTypeNode(node, ast = $.data)",
							"node =>",
							"node =>",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function NodePrinter(ast)",
							" function put(str)",
							" function trim()",
							"printer = function(node)",
							"get()",
							"value()",
							"value(node)",
							"toString()",
							"i =>",
							"NodePrinter",
							"AbiTagAttr(abi_tag_attr)",
							"AccessSpecDecl(access_spec_decl)",
							"AlignedAttr(aligned_attr)",
							"AlwaysInlineAttr(always_inline_attr)",
							"ArraySubscriptExpr(array_subscript_expr)",
							"AsmLabelAttr(asm_label_attr)",
							"BinaryOperator(binary_operator)",
							"BlockCommandComment(block_command_comment)",
							"BreakStmt(break_stmt)",
							"CallExpr(call_expr)",
							"CaseStmt(case_stmt)",
							"CharacterLiteral(character_literal)",
							"CompoundAssignOperator(compound_assign_operator)",
							"CompoundStmt(compound_stmt)",
							"ConditionalOperator(conditional_operator)",
							"ConstantExpr(constant_expr)",
							"ConstAttr(const_attr)",
							"ContinueStmt(continue_stmt)",
							"CStyleCastExpr(cstyle_cast_expr)",
							"DeclRefExpr(decl_ref_expr)",
							"DeclStmt(decl_stmt)",
							"DefaultStmt(default_stmt)",
							"DeprecatedAttr(deprecated_attr)",
							"DoStmt(do_stmt)",
							"EmptyDecl(empty_decl)",
							"EnumConstantDecl(enum_constant_decl)",
							"EnumDecl(enum_decl)",
							"FieldDecl(field_decl)",
							"FloatingLiteral(floating_literal)",
							"FormatAttr(format_attr)",
							"ForStmt(for_stmt)",
							"n =>",
							"FullComment(full_comment)",
							"FunctionDecl(function_decl)",
							"n =>",
							" n =>",
							"GotoStmt(goto_stmt)",
							" n =>",
							"HTMLEndTagComment(html_end_tag_comment)",
							"HTMLStartTagComment(html_start_tag_comment)",
							"IfStmt(if_stmt)",
							"ImplicitCastExpr(implicit_cast_expr)",
							"InitListExpr(init_list_expr)",
							"InlineCommandComment(inline_command_comment)",
							"IntegerLiteral(integer_literal)",
							"LabelStmt(label_stmt)",
							"MemberExpr(member_expr)",
							"NonNullAttr(non_null_attr)",
							"NoThrowAttr(no_throw_attr)",
							"NullStmt(null_stmt)",
							"ParagraphComment(paragraph_comment)",
							"ParamCommandComment(param_command_comment)",
							"ParenExpr(paren_expr)",
							"ParenListExpr(paren_list_expr)",
							"ParmVarDecl(parm_var_decl)",
							"PureAttr(pure_attr)",
							"RecordDecl(record_decl)",
							"RestrictAttr(restrict_attr)",
							"ReturnStmt(return_stmt)",
							"ReturnsTwiceAttr(returns_twice_attr)",
							"StringLiteral(string_literal)",
							"SwitchStmt(switch_stmt)",
							"TextComment(text_comment)",
							"TranslationUnitDecl(translation_unit_decl)",
							"TypedefDecl(typedef_decl)",
							"UnaryExprOrTypeTraitExpr(unary_expr_or_type_trait_expr)",
							"UnaryOperator(unary_operator)",
							"UnresolvedLookupExpr(unresolved_lookup_expr)",
							"UnresolvedMemberExpr(unresolved_member_expr)",
							"VarDecl(var_decl, base_type)",
							"([offset, subscript]) =>",
							"VerbatimBlockComment(verbatim_block_comment)",
							"VerbatimBlockLineComment(verbatim_block_line_comment)",
							"WarnUnusedResultAttr(warn_unused_result_attr)",
							"WeakAttr(weak_attr)",
							"WhileStmt(while_stmt)",
							"OverrideAttr(override_attr)",
							"AddrLabelExpr(addr_label_expr)",
							"AliasAttr(alias_attr)",
							"AlignValueAttr(align_value_attr)",
							"AllocSizeAttr(alloc_size_attr)",
							"ArrayInitIndexExpr(array_init_index_expr)",
							"ArrayInitLoopExpr(array_init_loop_expr)",
							"AtomicExpr(atomic_expr)",
							"AtomicType(atomic_type)",
							"AutoType(auto_type)",
							"BuiltinTemplateDecl(builtin_template_decl)",
							"BuiltinType(builtin_type)",
							"CallbackAttr(callback_attr)",
							"ClassTemplateDecl(class_template_decl)",
							"ClassTemplatePartialSpecializationDecl(class_template_partial_specialization_decl)",
							"ClassTemplateSpecializationDecl(class_template_specialization_decl)",
							"ComplexType(complex_type)",
							"CompoundLiteralExpr(compound_literal_expr)",
							"ConstantArrayType(constant_array_type)",
							"ConstructorUsingShadowDecl(constructor_using_shadow_decl)",
							"ConvertVectorExpr(convert_vector_expr)",
							"DecayedType(decayed_type)",
							"DecltypeType(decltype_type)",
							"DependentNameType(dependent_name_type)",
							"DependentScopeDeclRefExpr(dependent_scope_decl_ref_expr)",
							"DependentSizedArrayType(dependent_sized_array_type)",
							"DependentTemplateSpecializationType(dependent_template_specialization_type)",
							"ElaboratedType(elaborated_type)",
							"EnumType(enum_type)",
							"ExprWithCleanups(expr_with_cleanups)",
							"FinalAttr(final_attr)",
							"FormatArgAttr(format_arg_attr)",
							"FriendDecl(friend_decl)",
							"FunctionNoProtoType(function_no_proto_type)",
							"FunctionProtoType(function_proto_type)",
							"FunctionTemplateDecl(function_template_decl)",
							"GCCAsmStmt(gcc_asm_stmt)",
							"GNUInlineAttr(gnu_inline_attr)",
							"GNUNullExpr(gnu_null_expr)",
							"ImplicitValueInitExpr(implicit_value_init_expr)",
							"IncompleteArrayType(incomplete_array_type)",
							"IndirectFieldDecl(indirect_field_decl)",
							"IndirectGotoStmt(indirect_goto_stmt)",
							"InjectedClassNameType(injected_class_name_type)",
							"LambdaExpr(lambda_expr)",
							"LinkageSpecDecl(linkage_spec_decl)",
							"LValueReferenceType(l_value_reference_type)",
							"MaterializeTemporaryExpr(materialize_temporary_expr)",
							"MaxFieldAlignmentAttr(max_field_alignment_attr)",
							"MayAliasAttr(may_alias_attr)",
							"MemberPointerType(member_pointer_type)",
							"MinVectorWidthAttr(min_vector_width_attr)",
							"ModeAttr(mode_attr)",
							"NamespaceDecl(namespace_decl)",
							"NoDebugAttr(no_debug_attr)",
							"NoInlineAttr(no_inline_attr)",
							"NonTypeTemplateParmDecl(non_type_template_parm_decl)",
							"OffsetOfExpr(offset_of_expr)",
							"OpaqueValueExpr(opaque_value_expr)",
							"OwnerAttr(owner_attr)",
							"PackedAttr(packed_attr)",
							"PackExpansionExpr(pack_expansion_expr)",
							"PackExpansionType(pack_expansion_type)",
							"ParenType(paren_type)",
							"PointerAttr(pointer_attr)",
							"PointerType(pointer_type)",
							"PredefinedExpr(predefined_expr)",
							"QualType(qual_type)",
							"RecordType(record_type)",
							"ReturnsNonNullAttr(returns_non_null_attr)",
							"RValueReferenceType(r_value_reference_type)",
							"SentinelAttr(sentinel_attr)",
							"ShuffleVectorExpr(shuffle_vector_expr)",
							"SizeOfPackExpr(size_of_pack_expr)",
							"StaticAssertDecl(static_assert_decl)",
							"StmtExpr(stmt_expr)",
							"SubstNonTypeTemplateParmExpr(subst_non_type_template_parm_expr)",
							"SubstTemplateTypeParmType(subst_template_type_parm_type)",
							"TargetAttr(target_attr)",
							"TemplateArgument(template_argument)",
							"TemplateSpecializationType(template_specialization_type)",
							"TemplateTemplateParmDecl(template_template_parm_decl)",
							"TemplateTypeParmDecl(template_type_parm_decl)",
							"TemplateTypeParmType(template_type_parm_type)",
							"TParamCommandComment(t_param_command_comment)",
							"TypeAliasDecl(type_alias_decl)",
							"TypeAliasTemplateDecl(type_alias_template_decl)",
							"TypedefType(typedef_type)",
							"TypeOfExprType(type_of_expr_type)",
							"TypeTraitExpr(type_trait_expr)",
							"UnaryTransformType(unary_transform_type)",
							"UnresolvedUsingValueDecl(unresolved_using_value_decl)",
							"UnusedAttr(unused_attr)",
							"UsingDecl(using_decl)",
							"UsingDirectiveDecl(using_directive_decl)",
							"UsingShadowDecl(using_shadow_decl)",
							"VAArgExpr(va_arg_expr)",
							"VarTemplateDecl(var_template_decl)",
							"VectorType(vector_type)",
							"VerbatimLineComment(verbatim_line_comment)",
							"VisibilityAttr(visibility_attr)",
							"WeakRefAttr(weak_ref_attr)",
							"CXXRecordDecl(cxx_record_decl)",
							"CXXConstructorDecl(cxx_constructor_decl)",
							"n =>",
							"CXXCtorInitializer(cxx_ctor_initializer)",
							"CXXDependentScopeMemberExpr(cxx_dependent_scope_member_expr)",
							"CXXThisExpr(cxx_this_expr)",
							"CXXDestructorDecl(cxx_destructor_decl)",
							"n =>",
							"CXXMethodDecl(cxx_method_decl)",
							"n =>",
							"CXXStaticCastExpr(cxx_static_cast_expr)",
							"CXXUnresolvedConstructExpr(cxx_unresolved_construct_expr)",
							"CXXNewExpr(cxx_new_expr)",
							"CXXDeleteExpr(cxx_delete_expr)",
							"CXXBoolLiteralExpr(cxx_bool_literal_expr)",
							"CXX11NoReturnAttr(cxx11_no_return_attr)",
							"CXXBindTemporaryExpr(cxx_bind_temporary_expr)",
							"CXXCatchStmt(cxx_catch_stmt)",
							"CXXConstructExpr(cxx_construct_expr)",
							"CXXConversionDecl(cxx_conversion_decl)",
							"CXXDefaultArgExpr(cxx_default_arg_expr)",
							"CXXDefaultInitExpr(cxx_default_init_expr)",
							"CXXForRangeStmt(cxx_for_range_stmt)",
							"CXXFunctionalCastExpr(cxx_functional_cast_expr)",
							"CXXMemberCallExpr(cxx_member_call_expr)",
							"CXXNoexceptExpr(cxx_noexcept_expr)",
							"CXXNullPtrLiteralExpr(cxx_null_ptr_literal_expr)",
							"CXXOperatorCallExpr(cxx_operator_call_expr)",
							"CXXReinterpretCastExpr(cxx_reinterpret_cast_expr)",
							"CXXScalarValueInitExpr(cxx_scalar_value_init_expr)",
							"CXXTemporaryObjectExpr(cxx_temporary_object_expr)",
							"CXXTryStmt(cxx_try_stmt)",
							" function PrintNode(node)",
							" function PrintAst(node, ast)",
							"get()",
							" function isNode(obj)",
							" function GetType(name_or_id, ast = $.data)",
							"n =>",
							" node =>",
							" node =>",
							"r =>",
							" function GetFields(node)",
							" (v, k) =>",
							"([v, p]) =>",
							"([loc, ptr]) =>",
							"i =>",
							" function GetParams(node)",
							"child =>",
							" function PathRemoveLoc(path)",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA5DAAAICBkID0+CiAgZCA9PgogIGdlbiA9PgogICguLi5hcmdzKSA9PgogIHRvU3RyaW5nKCkKSW1wb3J0TW9kdWxlKG1vZHVsZVBhdGgsIC4uLmFyZ3MpCiAgbW9kdWxlID0+CiAgKGFjYywgaXRlbSkgPT4KQ29tbWFuZExpbmUoKQogIGMoLi4uYXJncykKICBsKC4uLmFyZ3MpCiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KICAuZGVidWcgPSAoLi4uYXJncykgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgooKSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCiAgbiA9PgogIHByb3AgPT4KTG9jYXRpb25TdHJpbmcobG9jKQogIG5vZGUgPT4KU3RydWN0cyhub2RlcykKICBub2RlID0+CiAgZmllbGQgPT4KICBub2RlID0+CihmaWVsZCwgaSkgPT4KVGFibGUobGlzdCwgcHJlZCA9IChuLCBsKSA9PiB0cnVlKQoobiwgaSkgPT4KICBlID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgogIHJldHVyblR5cGUobikKICBudW1BcmdzKG4pClBhcmFtcyhuKQogIHAgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CihrLCBqKSA9PgooYWNjLCBuYW1lKSA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KVGVybWluYXRlKGV4aXRDb2RlKQpTaGVsbChjbWQpClBhcnNlU3RydWN0cyh0ZXh0KQooZGVjbCwgaW5jbHVkZXMpCiAgbmFtZSA9PgpJbnNwZWN0U3RydWN0KGRlY2wsIGluY2x1ZGVzLCBjb21waWxlciA9ICdjbGFuZycpCiAgbGluZSA9PgogIGxpbmUgPT4KKGNvbCwgaSkgPT4KKFtmaWVsZCwgb2Zmc2V0LCBzaXplXSkgPT4KKGFjYywgbGluZSkgPT4KICB0b1N0cmluZyhzZXAgPSAnICcpCiAgbGluZSA9PgpSb3VuZFRvKHZhbHVlLCBhbGlnbikKTWFrZVN0cnVjdENsYXNzKGRlY2wsIGZpbGVuYW1lKQpHZW5lcmF0ZVN0cnVjdENsYXNzKGRlY2wsIGZmaVByZWZpeCA9ICcnKQogIGxpbmUgPT4KICAoW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQogIChuYW1lLCBsaWIpID0+CiAgZ2VuZXJhdGVEb2MoKQogIHB1c2ggPSAoLi4uYXJncykgPT4KICBmaWVsZCA9PgooZmllbGQsIGNvbCkgPT4KICBqcyA9IHR5cGUgPT4KICBnZW5lcmF0ZUNhbGwoKQooW25hbWUsIHR5cGVdKSA9PgogIGdlbmVyYXRlKGZwLCBsaWIsIGV4cCkKICBnZW5lcmF0ZUZ1bmN0aW9uKGZwLCBsaWIpCihbbmFtZSwgdHlwZV0pID0+CiAgcCA9PgogIHAgPT4KICBjb21waWxlRnVuY3Rpb24oZnAsIGxpYikKRmRSZWFkZXIoZmQsIGJ1ZmZlclNpemUgPSAxMDI0KQoocHVzaCwgc3RvcCkgPT4KQ29tbWFuZFJlYWQoYXJncykKICByZWFkZXIgPT4KUmVhZE91dHB1dChmZCkKTGlicmFyeUV4cG9ydHMoZmlsZSkKICBsaW5lID0+CiAgbGluZSA9PgogIGNvbHVtbiA9PgooYSwgYikgPT4KICBlbnRyeSA9PgpTYXZlTGlicmFyaWVzKCkKKGFjYywgW24sIGVdKSA9PgpQcm9jZXNzRmlsZShmaWxlLCBkZWJ1ZyA9IHRydWUpClBhcnNlRUNNQVNjcmlwdChmaWxlLCBwYXJhbXMgPSB7fSkKICAoZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBwID0+CiAgbiA9PgpDb25zdGFudHMobm9kZSwgdCA9IChuYW1lLCB2YWx1ZSkgPT4gW25hbWUsICFpc05hTigrdmFsdWUpID8gK3ZhbHVlIDogdmFsdWVdKQpHZXRJbXBvcnRzKGFzdCA9ICQuZGF0YSkKICBuID0+CkdldElkZW50aWZpZXJzKG5vZGVzLCBrZXkgPSBudWxsKQogIChuLCBrKSA9PgpNZW1iZXJOYW1lcyhtZW1iZXJzLCBmbGFncyA9IDApCiAgbiA9PgogIHBhdGggPT4KICBwID0+CiAgcCA9PgogIG5hbWUgPT4KICBuID0+Cihbbm9kZSwgcHRyXSkgPT4KICBwYXRoID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIG5vZGUgPT4KICBzZWxlY3QobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBnZXRCeUlkT3JOYW1lKG5hbWVfb3JfaWQsIHByZWQgPSBuID0+IHRydWUpCiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAADaJwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/a.out",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/adsb-client.js",
						"symkeys":
						[
							[
								752,
								782
							],
							[
								857,
								877
							],
							[
								995,
								1007
							],
							[
								1031,
								1058
							],
							[
								1073,
								1091
							],
							[
								1327,
								1339
							],
							[
								1348,
								1373
							],
							[
								1456,
								1465
							],
							[
								1554,
								1582
							],
							[
								1793,
								1813
							],
							[
								1871,
								1895
							],
							[
								1958,
								1981
							],
							[
								2317,
								2325
							],
							[
								3215,
								3234
							],
							[
								3476,
								3509
							],
							[
								3908,
								3915
							],
							[
								3928,
								3946
							],
							[
								4090,
								4098
							],
							[
								4373,
								4379
							]
						],
						"symlist":
						[
							"PutsFunction = outFn => str =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"async function main(...args)",
							" (level, message) =>",
							" function DailyPhase(t)",
							" function PhaseFile(t)",
							"phase =>",
							"onMessage(req, res)",
							" function ProcessResponse(buf)",
							"item =>",
							"(acc, field, i) =>",
							"(a,b) =>",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/adsb-client.js",
						"symkeys":
						[
							[
								752,
								782
							],
							[
								858,
								878
							],
							[
								996,
								1008
							],
							[
								1032,
								1059
							],
							[
								1074,
								1092
							],
							[
								1328,
								1340
							],
							[
								1349,
								1374
							],
							[
								1457,
								1466
							],
							[
								1555,
								1583
							],
							[
								1794,
								1814
							],
							[
								1872,
								1896
							],
							[
								1959,
								1982
							],
							[
								2318,
								2326
							],
							[
								3216,
								3235
							],
							[
								3477,
								3510
							],
							[
								3909,
								3916
							],
							[
								3929,
								3947
							],
							[
								4091,
								4099
							],
							[
								4374,
								4380
							]
						],
						"symlist":
						[
							"PutsFunction = outFn => str =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"async function main(...args)",
							" (level, message) =>",
							" function DailyPhase(t)",
							" function PhaseFile(t)",
							"phase =>",
							"onMessage(req, res)",
							" function ProcessResponse(buf)",
							"item =>",
							"(acc, field, i) =>",
							"(a,b) =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHAQAAUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CkZpbGVXcml0ZXIgPSBmaWxlID0+CiAgY2xvc2U6ICgpID0+CkZkV3JpdGVyKGZkLCBuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICh3aGVuY2UsIG9mZnNldCkgPT4KICBpbnNwZWN0KCkKICBtYWluKC4uLmFyZ3MpCiAgKGxldmVsLCBtZXNzYWdlKSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogIHBoYXNlID0+CiAgb25NZXNzYWdlKHJlcSwgcmVzKQpQcm9jZXNzUmVzcG9uc2UoYnVmKQogIGl0ZW0gPT4KKGFjYywgZmllbGQsIGkpID0+CihhLGIpID0+CiAgZXJyID0+AAAAAAAAAABHAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABHAQAAUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CkZpbGVXcml0ZXIgPSBmaWxlID0+CiAgY2xvc2U6ICgpID0+CkZkV3JpdGVyKGZkLCBuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICh3aGVuY2UsIG9mZnNldCkgPT4KICBpbnNwZWN0KCkKICBtYWluKC4uLmFyZ3MpCiAgKGxldmVsLCBtZXNzYWdlKSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogIHBoYXNlID0+CiAgb25NZXNzYWdlKHJlcSwgcmVzKQpQcm9jZXNzUmVzcG9uc2UoYnVmKQogIGl0ZW0gPT4KKGFjYywgZmllbGQsIGkpID0+CihhLGIpID0+CiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/adsb-client.js",
						"symkeys":
						[
							[
								752,
								782
							],
							[
								858,
								878
							],
							[
								996,
								1008
							],
							[
								1032,
								1059
							],
							[
								1074,
								1092
							],
							[
								1328,
								1340
							],
							[
								1349,
								1374
							],
							[
								1457,
								1466
							],
							[
								1555,
								1583
							],
							[
								1794,
								1814
							],
							[
								1872,
								1896
							],
							[
								1959,
								1982
							],
							[
								2318,
								2326
							],
							[
								3216,
								3235
							],
							[
								3477,
								3510
							],
							[
								3909,
								3916
							],
							[
								3929,
								3947
							],
							[
								4091,
								4099
							],
							[
								4374,
								4380
							]
						],
						"symlist":
						[
							"PutsFunction = outFn => str =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"async function main(...args)",
							" (level, message) =>",
							" function DailyPhase(t)",
							" function PhaseFile(t)",
							"phase =>",
							"onMessage(req, res)",
							" function ProcessResponse(buf)",
							"item =>",
							"(acc, field, i) =>",
							"(a,b) =>",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABHAQAAUHV0c0Z1bmN0aW9uID0gb3V0Rm4gPT4gc3RyID0+CkZpbGVXcml0ZXIgPSBmaWxlID0+CiAgY2xvc2U6ICgpID0+CkZkV3JpdGVyKGZkLCBuYW1lKQogIGZuID0gKGJ1ZiwgbGVuKSA9PgogIGNsb3NlOiAoKSA9PgogIHNlZWs6ICh3aGVuY2UsIG9mZnNldCkgPT4KICBpbnNwZWN0KCkKICBtYWluKC4uLmFyZ3MpCiAgKGxldmVsLCBtZXNzYWdlKSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogIHBoYXNlID0+CiAgb25NZXNzYWdlKHJlcSwgcmVzKQpQcm9jZXNzUmVzcG9uc2UoYnVmKQogIGl0ZW0gPT4KKGFjYywgZmllbGQsIGkpID0+CihhLGIpID0+CiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								24,
								30
							]
						],
						"symlist":
						[
							"mapdiv"
						]
					},
					"AQAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAICBtYXBkaXYAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1262
							],
							[
								1319,
								1340
							],
							[
								2481,
								2487
							],
							[
								2556,
								2569
							],
							[
								2597,
								2606
							],
							[
								2680,
								2689
							],
							[
								2788,
								2797
							],
							[
								2810,
								2828
							],
							[
								2979,
								2988
							],
							[
								3138,
								3146
							],
							[
								3187,
								3195
							],
							[
								3274,
								3279
							],
							[
								3300,
								3321
							],
							[
								3406,
								3411
							],
							[
								5146,
								5157
							]
						],
						"symlist":
						[
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AQAAAAAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1356,
								1378
							],
							[
								1435,
								1456
							],
							[
								2597,
								2603
							],
							[
								2672,
								2685
							],
							[
								2713,
								2722
							],
							[
								2796,
								2805
							],
							[
								2904,
								2913
							],
							[
								2926,
								2944
							],
							[
								3095,
								3104
							],
							[
								3254,
								3262
							],
							[
								3303,
								3311
							],
							[
								3390,
								3395
							],
							[
								3416,
								3437
							],
							[
								3522,
								3527
							],
							[
								5262,
								5273
							]
						],
						"symlist":
						[
							"function Connection()",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACxAAAARGFpbHlQaGFzZSh0KQpQaGFzZUZpbGUodCkKICAoKSA9PgoocmVzcG9uc2UpID0+Cih0ZXh0KSA9PgoobGluZSkgPT4KKGl0ZW0pID0+CihhY2MsIGZpZWxkLCBpKSA9PgooYSwgYikgPT4KKG9iaikgPT4KICBzdGF0ZSA9PgpQbGFuZQogIGNvbnN0cnVjdG9yKG9iaiA9IHt9KQooKSA9PgogIHJvdGF0ZShkZWcpAAAAAAAAAAC+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1342,
								1357
							],
							[
								1406,
								1428
							],
							[
								1485,
								1506
							],
							[
								2647,
								2653
							],
							[
								2722,
								2735
							],
							[
								2763,
								2772
							],
							[
								2846,
								2855
							],
							[
								2954,
								2963
							],
							[
								2976,
								2994
							],
							[
								3145,
								3154
							],
							[
								3304,
								3312
							],
							[
								3353,
								3361
							],
							[
								3440,
								3445
							],
							[
								3466,
								3487
							],
							[
								3572,
								3577
							],
							[
								5312,
								5323
							]
						],
						"symlist":
						[
							"function Connection()",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC+AAAAQ29ubmVjdGlvbigpCkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1342,
								1357
							],
							[
								1406,
								1428
							],
							[
								1485,
								1506
							],
							[
								2647,
								2653
							],
							[
								2722,
								2735
							],
							[
								2763,
								2772
							],
							[
								2846,
								2855
							],
							[
								2954,
								2963
							],
							[
								2976,
								2994
							],
							[
								3145,
								3154
							],
							[
								3304,
								3312
							],
							[
								3353,
								3361
							],
							[
								3440,
								3445
							],
							[
								3466,
								3487
							],
							[
								3572,
								3577
							],
							[
								5312,
								5323
							]
						],
						"symlist":
						[
							"function Connection()",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAQ29ubmVjdGlvbigpCiAgLm9uZXJyb3IgPSBlID0+CkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAA0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1342,
								1357
							],
							[
								1406,
								1428
							],
							[
								1485,
								1506
							],
							[
								2647,
								2653
							],
							[
								2722,
								2735
							],
							[
								2763,
								2772
							],
							[
								2846,
								2855
							],
							[
								2954,
								2963
							],
							[
								2976,
								2994
							],
							[
								3145,
								3154
							],
							[
								3304,
								3312
							],
							[
								3353,
								3361
							],
							[
								3440,
								3445
							],
							[
								3466,
								3487
							],
							[
								3572,
								3577
							],
							[
								5312,
								5323
							]
						],
						"symlist":
						[
							"function Connection()",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAQ29ubmVjdGlvbigpCiAgLm9uZXJyb3IgPSBlID0+CkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAABDb25uZWN0aW9uKCkKICAub25lcnJvciA9IGUgPT4KRGFpbHlQaGFzZSh0KQpQaGFzZUZpbGUodCkKICAoKSA9PgoocmVzcG9uc2UpID0+Cih0ZXh0KSA9PgoobGluZSkgPT4KKGl0ZW0pID0+CihhY2MsIGZpZWxkLCBpKSA9PgooYSwgYikgPT4KKG9iaikgPT4KICBzdGF0ZSA9PgpQbGFuZQogIGNvbnN0cnVjdG9yKG9iaiA9IHt9KQooKSA9PgogIHJvdGF0ZShkZWcpAAAAAAAAAADQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1342,
								1357
							],
							[
								1406,
								1428
							],
							[
								1485,
								1506
							],
							[
								2657,
								2663
							],
							[
								2732,
								2745
							],
							[
								2773,
								2782
							],
							[
								2856,
								2865
							],
							[
								2964,
								2973
							],
							[
								2986,
								3004
							],
							[
								3155,
								3164
							],
							[
								3314,
								3322
							],
							[
								3363,
								3371
							],
							[
								3450,
								3455
							],
							[
								3476,
								3497
							],
							[
								3582,
								3587
							],
							[
								5322,
								5333
							]
						],
						"symlist":
						[
							"function Connection()",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAQ29ubmVjdGlvbigpCiAgLm9uZXJyb3IgPSBlID0+CkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAABDb25uZWN0aW9uKCkKICAub25lcnJvciA9IGUgPT4KRGFpbHlQaGFzZSh0KQpQaGFzZUZpbGUodCkKICAoKSA9PgoocmVzcG9uc2UpID0+Cih0ZXh0KSA9PgoobGluZSkgPT4KKGl0ZW0pID0+CihhY2MsIGZpZWxkLCBpKSA9PgooYSwgYikgPT4KKG9iaikgPT4KICBzdGF0ZSA9PgpQbGFuZQogIGNvbnN0cnVjdG9yKG9iaiA9IHt9KQooKSA9PgogIHJvdGF0ZShkZWcpAAAAAAAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAENvbm5lY3Rpb24oKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAANAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAQ29ubmVjdGlvbigpCiAgLm9uZXJyb3IgPSBlID0+CkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2542,
								2566
							],
							[
								2692,
								2696
							],
							[
								2814,
								2828
							],
							[
								2928,
								2944
							],
							[
								3277,
								3290
							],
							[
								3308,
								3313
							],
							[
								3629,
								3636
							],
							[
								3664,
								3669
							],
							[
								3795,
								3834
							],
							[
								3905,
								3915
							],
							[
								4059,
								4084
							],
							[
								5748,
								5780
							],
							[
								6051,
								6085
							],
							[
								6263,
								6297
							],
							[
								7429,
								7436
							],
							[
								7688,
								7695
							],
							[
								7771,
								7791
							],
							[
								8423,
								8435
							],
							[
								8528,
								8540
							],
							[
								8730,
								8746
							],
							[
								8968,
								8986
							],
							[
								9125,
								9136
							],
							[
								9230,
								9246
							],
							[
								9413,
								9432
							],
							[
								9540,
								9556
							],
							[
								9790,
								9807
							],
							[
								10392,
								10412
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = s =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA7gEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAQAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICBvdXQgPSBzID0+CiAgKGxldmVsLCBtZXNzYWdlKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MpCiAgb25IdHRwKHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1244,
								1281
							],
							[
								1329,
								1334
							],
							[
								1442,
								1470
							],
							[
								1482,
								1496
							],
							[
								1752,
								1763
							],
							[
								1797,
								1801
							],
							[
								1875,
								1880
							],
							[
								1987,
								1992
							],
							[
								2060,
								2072
							],
							[
								2175,
								2197
							],
							[
								2511,
								2521
							],
							[
								2729,
								2743
							],
							[
								2797,
								2811
							],
							[
								3820,
								3859
							],
							[
								4026,
								4032
							],
							[
								4045,
								4061
							],
							[
								5685,
								5721
							],
							[
								5909,
								5944
							],
							[
								6084,
								6088
							],
							[
								6215,
								6233
							],
							[
								6387,
								6419
							],
							[
								6752,
								6763
							],
							[
								6908,
								6919
							],
							[
								6979,
								6996
							],
							[
								7548,
								7583
							],
							[
								7987,
								8006
							],
							[
								8121,
								8163
							],
							[
								9258,
								9264
							],
							[
								10008,
								10023
							],
							[
								10191,
								10202
							],
							[
								13430,
								13446
							],
							[
								14238,
								14244
							],
							[
								14655,
								14680
							],
							[
								15146,
								15166
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAOgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AgAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogICh2LCBwdiwgbykgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAoKSA9PgogIChsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25IdHRwKHJlcSwgcmVzcCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICAoKSA9PgogIHNob3dTZXNzaW9ucygpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2542,
								2566
							],
							[
								2692,
								2696
							],
							[
								2814,
								2828
							],
							[
								2928,
								2944
							],
							[
								3277,
								3290
							],
							[
								3308,
								3313
							],
							[
								3629,
								3636
							],
							[
								3664,
								3669
							],
							[
								3795,
								3834
							],
							[
								3905,
								3915
							],
							[
								4059,
								4084
							],
							[
								5748,
								5780
							],
							[
								6051,
								6085
							],
							[
								6263,
								6297
							],
							[
								7429,
								7436
							],
							[
								7688,
								7695
							],
							[
								7771,
								7791
							],
							[
								8423,
								8435
							],
							[
								8528,
								8540
							],
							[
								8730,
								8746
							],
							[
								8968,
								8986
							],
							[
								9125,
								9136
							],
							[
								9230,
								9246
							],
							[
								9413,
								9432
							],
							[
								9540,
								9556
							],
							[
								9790,
								9807
							],
							[
								10392,
								10412
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = s =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA7gEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAQAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICBvdXQgPSBzID0+CiAgKGxldmVsLCBtZXNzYWdlKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MpCiAgb25IdHRwKHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2542,
								2566
							],
							[
								2692,
								2696
							],
							[
								2814,
								2828
							],
							[
								2928,
								2944
							],
							[
								3277,
								3290
							],
							[
								3308,
								3313
							],
							[
								3629,
								3636
							],
							[
								3664,
								3669
							],
							[
								3795,
								3834
							],
							[
								3905,
								3915
							],
							[
								4059,
								4084
							],
							[
								5748,
								5780
							],
							[
								6051,
								6085
							],
							[
								6263,
								6297
							],
							[
								7429,
								7436
							],
							[
								7688,
								7695
							],
							[
								7771,
								7791
							],
							[
								8423,
								8435
							],
							[
								8528,
								8540
							],
							[
								8730,
								8746
							],
							[
								8968,
								8986
							],
							[
								9125,
								9136
							],
							[
								9230,
								9246
							],
							[
								9413,
								9432
							],
							[
								9540,
								9556
							],
							[
								9790,
								9807
							],
							[
								10392,
								10412
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = s =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA7gEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2542,
								2566
							],
							[
								2692,
								2696
							],
							[
								2814,
								2828
							],
							[
								2928,
								2944
							],
							[
								3277,
								3290
							],
							[
								3308,
								3313
							],
							[
								3629,
								3636
							],
							[
								3664,
								3669
							],
							[
								3795,
								3834
							],
							[
								3905,
								3915
							],
							[
								4059,
								4084
							],
							[
								5748,
								5780
							],
							[
								6051,
								6085
							],
							[
								6263,
								6297
							],
							[
								7429,
								7436
							],
							[
								7688,
								7695
							],
							[
								7771,
								7791
							],
							[
								8423,
								8435
							],
							[
								8528,
								8540
							],
							[
								8730,
								8746
							],
							[
								8968,
								8986
							],
							[
								9125,
								9136
							],
							[
								9229,
								9246
							],
							[
								9798,
								9833
							],
							[
								10235,
								10254
							],
							[
								10362,
								10378
							],
							[
								10612,
								10629
							],
							[
								11214,
								11234
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = s =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAQAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICBvdXQgPSBzID0+CiAgKGxldmVsLCBtZXNzYWdlKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MpCiAgb25IdHRwKHJlcSwgcnNwKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICBvdXQgPSBzID0+CiAgKGxldmVsLCBtZXNzYWdlKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MpCiAgb25IdHRwKHJlcSwgcmVzcCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIHF1aXQod2h5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2542,
								2566
							],
							[
								2692,
								2696
							],
							[
								2814,
								2828
							],
							[
								2928,
								2944
							],
							[
								3277,
								3290
							],
							[
								3308,
								3313
							],
							[
								3629,
								3636
							],
							[
								3664,
								3669
							],
							[
								3795,
								3834
							],
							[
								3905,
								3915
							],
							[
								4059,
								4084
							],
							[
								5748,
								5780
							],
							[
								6051,
								6085
							],
							[
								6263,
								6297
							],
							[
								7429,
								7436
							],
							[
								7688,
								7695
							],
							[
								7771,
								7791
							],
							[
								8423,
								8435
							],
							[
								8528,
								8540
							],
							[
								8730,
								8746
							],
							[
								8968,
								8986
							],
							[
								9125,
								9136
							],
							[
								9229,
								9246
							],
							[
								9798,
								9833
							],
							[
								10235,
								10254
							],
							[
								10362,
								10378
							],
							[
								10612,
								10629
							],
							[
								11214,
								11234
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = s =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"file =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAFAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICBvdXQgPSBzID0+CiAgKGxldmVsLCBtZXNzYWdlKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGZpbGUgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIG9uQ2xvc2Uod3MpCiAgb25IdHRwKHJlcSwgcmVzcCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIHF1aXQod2h5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1235,
								1245
							],
							[
								1531,
								1545
							],
							[
								2703,
								2731
							],
							[
								2890,
								2896
							],
							[
								3031,
								3047
							],
							[
								3149,
								3165
							],
							[
								3524,
								3537
							],
							[
								3555,
								3560
							],
							[
								3906,
								3913
							],
							[
								3949,
								3954
							],
							[
								4095,
								4134
							],
							[
								4213,
								4225
							],
							[
								4379,
								4410
							],
							[
								6624,
								6664
							],
							[
								6993,
								7035
							],
							[
								7261,
								7303
							],
							[
								8695,
								8704
							],
							[
								9033,
								9042
							],
							[
								9128,
								9148
							],
							[
								10032,
								10044
							],
							[
								10181,
								10193
							],
							[
								10458,
								10474
							],
							[
								10749,
								10767
							],
							[
								10942,
								10953
							],
							[
								11075,
								11092
							],
							[
								11711,
								11746
							],
							[
								12258,
								12277
							],
							[
								12413,
								12429
							],
							[
								12706,
								12723
							],
							[
								13421,
								13443
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"(m) =>",
							".show = (arg) =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = (s) =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"(name) =>",
							"(file) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2526,
								2550
							],
							[
								2677,
								2683
							],
							[
								2802,
								2818
							],
							[
								2918,
								2934
							],
							[
								3267,
								3280
							],
							[
								3298,
								3303
							],
							[
								3603,
								3610
							],
							[
								3638,
								3643
							],
							[
								3770,
								3809
							],
							[
								3880,
								3892
							],
							[
								4028,
								4048
							],
							[
								5430,
								5462
							],
							[
								5733,
								5767
							],
							[
								5945,
								5979
							],
							[
								7032,
								7041
							],
							[
								7294,
								7303
							],
							[
								7379,
								7399
							],
							[
								8035,
								8047
							],
							[
								8140,
								8152
							],
							[
								8343,
								8359
							],
							[
								8582,
								8600
							],
							[
								8739,
								8750
							],
							[
								8844,
								8861
							],
							[
								9394,
								9429
							],
							[
								9811,
								9830
							],
							[
								9938,
								9954
							],
							[
								10189,
								10206
							],
							[
								10794,
								10814
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"(m) =>",
							".show = (arg) =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = (s) =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"(name) =>",
							"(file) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2526,
								2550
							],
							[
								2677,
								2683
							],
							[
								2802,
								2818
							],
							[
								2918,
								2934
							],
							[
								3267,
								3280
							],
							[
								3298,
								3303
							],
							[
								3603,
								3610
							],
							[
								3638,
								3643
							],
							[
								3770,
								3809
							],
							[
								3880,
								3892
							],
							[
								4028,
								4048
							],
							[
								5430,
								5462
							],
							[
								5733,
								5767
							],
							[
								5945,
								5979
							],
							[
								7032,
								7041
							],
							[
								7294,
								7303
							],
							[
								7379,
								7399
							],
							[
								8035,
								8047
							],
							[
								8140,
								8152
							],
							[
								8343,
								8359
							],
							[
								8582,
								8600
							],
							[
								8739,
								8750
							],
							[
								8844,
								8861
							],
							[
								9443,
								9478
							],
							[
								9860,
								9879
							],
							[
								9987,
								10003
							],
							[
								10238,
								10255
							],
							[
								10843,
								10863
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"(m) =>",
							".show = (arg) =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = (s) =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"(name) =>",
							"(file) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2526,
								2550
							],
							[
								2677,
								2683
							],
							[
								2802,
								2818
							],
							[
								2918,
								2934
							],
							[
								3267,
								3280
							],
							[
								3298,
								3303
							],
							[
								3603,
								3610
							],
							[
								3638,
								3643
							],
							[
								3770,
								3809
							],
							[
								3880,
								3892
							],
							[
								4028,
								4048
							],
							[
								5430,
								5462
							],
							[
								5733,
								5767
							],
							[
								5945,
								5979
							],
							[
								7032,
								7041
							],
							[
								7294,
								7303
							],
							[
								7379,
								7399
							],
							[
								8035,
								8047
							],
							[
								8140,
								8152
							],
							[
								8343,
								8359
							],
							[
								8582,
								8600
							],
							[
								8739,
								8750
							],
							[
								8844,
								8861
							],
							[
								9488,
								9523
							],
							[
								9905,
								9924
							],
							[
								10032,
								10048
							],
							[
								10283,
								10300
							],
							[
								10888,
								10908
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"(m) =>",
							".show = (arg) =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = (s) =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"(name) =>",
							"(file) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								910,
								932
							],
							[
								1217,
								1227
							],
							[
								1471,
								1485
							],
							[
								2526,
								2550
							],
							[
								2677,
								2683
							],
							[
								2802,
								2818
							],
							[
								2918,
								2934
							],
							[
								3267,
								3280
							],
							[
								3298,
								3303
							],
							[
								3603,
								3610
							],
							[
								3638,
								3643
							],
							[
								3770,
								3809
							],
							[
								3880,
								3892
							],
							[
								4028,
								4048
							],
							[
								5430,
								5462
							],
							[
								5733,
								5767
							],
							[
								5945,
								5979
							],
							[
								7032,
								7041
							],
							[
								7294,
								7303
							],
							[
								7379,
								7399
							],
							[
								8035,
								8047
							],
							[
								8140,
								8152
							],
							[
								8343,
								8359
							],
							[
								8582,
								8600
							],
							[
								8739,
								8750
							],
							[
								8844,
								8861
							],
							[
								9486,
								9521
							],
							[
								9903,
								9922
							],
							[
								10030,
								10046
							],
							[
								10281,
								10298
							],
							[
								10886,
								10906
							]
						],
						"symlist":
						[
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"(m) =>",
							".show = (arg) =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							".createWS = (url, callbacks, listen) =>",
							"out = (s) =>",
							" (level, message) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"(name) =>",
							"(file) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1261
							],
							[
								1342,
								1357
							],
							[
								1406,
								1428
							],
							[
								1485,
								1506
							],
							[
								2657,
								2663
							],
							[
								2732,
								2745
							],
							[
								2773,
								2782
							],
							[
								2856,
								2865
							],
							[
								2964,
								2973
							],
							[
								2986,
								3004
							],
							[
								3155,
								3164
							],
							[
								3314,
								3322
							],
							[
								3363,
								3371
							],
							[
								3450,
								3455
							],
							[
								3476,
								3497
							],
							[
								3582,
								3587
							],
							[
								5322,
								5333
							]
						],
						"symlist":
						[
							"function Connection()",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CihtKSA9PgogIC5zaG93ID0gKGFyZykgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIG91dCA9IChzKSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KICBwcm94eShyZXEsIHJlcykKICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXNwKQoobmFtZSkgPT4KKGZpbGUpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJlc3ApCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBxdWl0KHdoeSkAAAAAAAAAANAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1271
							],
							[
								1355,
								1370
							],
							[
								1419,
								1441
							],
							[
								1498,
								1519
							],
							[
								2670,
								2676
							],
							[
								2745,
								2758
							],
							[
								2786,
								2795
							],
							[
								2869,
								2878
							],
							[
								2977,
								2986
							],
							[
								2999,
								3017
							],
							[
								3168,
								3177
							],
							[
								3327,
								3335
							],
							[
								3376,
								3384
							],
							[
								3463,
								3468
							],
							[
								3489,
								3510
							],
							[
								3595,
								3600
							],
							[
								5335,
								5346
							]
						],
						"symlist":
						[
							"function Connection(port=12001)",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAAAAQ29ubmVjdGlvbigpCiAgLm9uZXJyb3IgPSBlID0+CkRhaWx5UGhhc2UodCkKUGhhc2VGaWxlKHQpCiAgKCkgPT4KKHJlc3BvbnNlKSA9PgoodGV4dCkgPT4KKGxpbmUpID0+CihpdGVtKSA9PgooYWNjLCBmaWVsZCwgaSkgPT4KKGEsIGIpID0+CihvYmopID0+CiAgc3RhdGUgPT4KUGxhbmUKICBjb25zdHJ1Y3RvcihvYmogPSB7fSkKKCkgPT4KICByb3RhdGUoZGVnKQAAAAAAAAAA2gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1271
							],
							[
								1353,
								1368
							],
							[
								1417,
								1439
							],
							[
								1496,
								1517
							],
							[
								2668,
								2674
							],
							[
								2743,
								2756
							],
							[
								2784,
								2793
							],
							[
								2867,
								2876
							],
							[
								2975,
								2984
							],
							[
								2997,
								3015
							],
							[
								3166,
								3175
							],
							[
								3325,
								3333
							],
							[
								3374,
								3382
							],
							[
								3461,
								3466
							],
							[
								3487,
								3508
							],
							[
								3593,
								3598
							],
							[
								5333,
								5344
							]
						],
						"symlist":
						[
							"function Connection(port=12001)",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaAAAAQ29ubmVjdGlvbihwb3J0PTEyMDAxKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAANoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1271
							],
							[
								1352,
								1367
							],
							[
								1416,
								1438
							],
							[
								1495,
								1516
							],
							[
								2667,
								2673
							],
							[
								2742,
								2755
							],
							[
								2783,
								2792
							],
							[
								2866,
								2875
							],
							[
								2974,
								2983
							],
							[
								2996,
								3014
							],
							[
								3165,
								3174
							],
							[
								3324,
								3332
							],
							[
								3373,
								3381
							],
							[
								3460,
								3465
							],
							[
								3486,
								3507
							],
							[
								3592,
								3597
							],
							[
								5332,
								5343
							]
						],
						"symlist":
						[
							"function Connection(port=12001)",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaAAAAQ29ubmVjdGlvbihwb3J0PTEyMDAxKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAANoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1271
							],
							[
								1351,
								1366
							],
							[
								1415,
								1437
							],
							[
								1494,
								1515
							],
							[
								2666,
								2672
							],
							[
								2741,
								2754
							],
							[
								2782,
								2791
							],
							[
								2865,
								2874
							],
							[
								2973,
								2982
							],
							[
								2995,
								3013
							],
							[
								3164,
								3173
							],
							[
								3323,
								3331
							],
							[
								3372,
								3380
							],
							[
								3459,
								3464
							],
							[
								3485,
								3506
							],
							[
								3591,
								3596
							],
							[
								5331,
								5342
							]
						],
						"symlist":
						[
							"function Connection(port=12001)",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaAAAAQ29ubmVjdGlvbihwb3J0PTEyMDAxKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAANoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/map.js",
						"symkeys":
						[
							[
								1240,
								1271
							],
							[
								1351,
								1366
							],
							[
								1415,
								1437
							],
							[
								1494,
								1515
							],
							[
								2666,
								2672
							],
							[
								2741,
								2754
							],
							[
								2782,
								2791
							],
							[
								2865,
								2874
							],
							[
								2973,
								2982
							],
							[
								2995,
								3013
							],
							[
								3164,
								3173
							],
							[
								3323,
								3331
							],
							[
								3372,
								3380
							],
							[
								3459,
								3464
							],
							[
								3485,
								3506
							],
							[
								3591,
								3596
							],
							[
								5331,
								5342
							]
						],
						"symlist":
						[
							"function Connection(port=12001)",
							".onerror = e =>",
							"function DailyPhase(t)",
							"function PhaseFile(t)",
							" () =>",
							"(response) =>",
							"(text) =>",
							"(line) =>",
							"(item) =>",
							"(acc, field, i) =>",
							"(a, b) =>",
							"(obj) =>",
							"state =>",
							"Plane",
							"constructor(obj = {})",
							"() =>",
							"rotate(deg)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaAAAAQ29ubmVjdGlvbihwb3J0PTEyMDAxKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAANoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADaAAAAQ29ubmVjdGlvbihwb3J0PTEyMDAxKQogIC5vbmVycm9yID0gZSA9PgpEYWlseVBoYXNlKHQpClBoYXNlRmlsZSh0KQogICgpID0+CihyZXNwb25zZSkgPT4KKHRleHQpID0+CihsaW5lKSA9PgooaXRlbSkgPT4KKGFjYywgZmllbGQsIGkpID0+CihhLCBiKSA9Pgoob2JqKSA9PgogIHN0YXRlID0+ClBsYW5lCiAgY29uc3RydWN0b3Iob2JqID0ge30pCigpID0+CiAgcm90YXRlKGRlZykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/adsb-client.js",
						"symkeys":
						[
							[
								752,
								782
							],
							[
								858,
								878
							],
							[
								996,
								1008
							],
							[
								1032,
								1059
							],
							[
								1074,
								1092
							],
							[
								1328,
								1340
							],
							[
								1349,
								1374
							],
							[
								1457,
								1466
							],
							[
								1555,
								1583
							],
							[
								1794,
								1814
							],
							[
								1872,
								1896
							],
							[
								1959,
								1982
							],
							[
								2318,
								2326
							],
							[
								3216,
								3235
							],
							[
								3477,
								3510
							],
							[
								3909,
								3916
							],
							[
								3929,
								3947
							],
							[
								4091,
								4099
							],
							[
								4374,
								4380
							]
						],
						"symlist":
						[
							"PutsFunction = outFn => str =>",
							"FileWriter = file =>",
							"close: () =>",
							"function FdWriter(fd, name)",
							"fn = (buf, len) =>",
							"close: () =>",
							"seek: (whence, offset) =>",
							"inspect()",
							"async function main(...args)",
							" (level, message) =>",
							" function DailyPhase(t)",
							" function PhaseFile(t)",
							"phase =>",
							"onMessage(req, res)",
							" function ProcessResponse(buf)",
							"item =>",
							"(acc, field, i) =>",
							"(a,b) =>",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAARwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "clang-ast.js",
			"settings":
			{
				"buffer_size": 74423,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAyQAAAAAAAADZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\nnames"
					},
					"BwAAAA2QAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAASkAAAAAAAAAAAAAASkAAAAAAAABOQAAAAAAAAAAAAABOQAAAAAAAAFJAAAAAAAAAAAAAAFJAAAAAAAAAVkAAAAAAAAAAAAAAVkAAAAAAAABaQAAAAAAAAAAAAABaQAAAAAAAAF5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA2QAAAAAAAADZAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABeQAAAAAAAAGZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABeQAAAAAAAAF5AAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "depth"
					},
					"BQAAABiQAAAAAAAAGZAAAAAAAAAAAAAAGZAAAAAAAAAakAAAAAAAAAAAAAAakAAAAAAAABuQAAAAAAAAAAAAABuQAAAAAAAAHJAAAAAAAAAAAAAAHJAAAAAAAAAdkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABiQAAAAAAAAGJAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " =1"
					},
					"AwAAAB2QAAAAAAAAHpAAAAAAAAAAAAAAHpAAAAAAAAAfkAAAAAAAAAAAAAAfkAAAAAAAACCQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB2QAAAAAAAAHZAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACCQAAAAAAAAIJAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAACCQAAAAAAAAIJAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACGQAAAAAAAAIZAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACCQAAAAAAAAIJAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAACCQAAAAAAAAIJAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACGQAAAAAAAAIZAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACCQAAAAAAAAIJAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					2,
					"left_delete",
					null,
					"AgAAACCQAAAAAAAAIJAAAAAAAAABAAAAMR+QAAAAAAAAH5AAAAAAAAABAAAAMQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACGQAAAAAAAAIZAAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAB+QAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAhkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB+QAAAAAAAAH5AAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACKQAAAAAAAAI5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACKQAAAAAAAAIpAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACOQAAAAAAAAJZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACOQAAAAAAAAI5AAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACSQAAAAAAAAJZAAAAAAAAAAAAAAJZAAAAAAAAApkAAAAAAAAAAAAAApkAAAAAAAACqQAAAAAAAAAAAAACqQAAAAAAAALpAAAAAAAAAAAAAAJZAAAAAAAAAlkAAAAAAAAAQAAAAgICAgJZAAAAAAAAArkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACSQAAAAAAAAJJAAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ".thi"
					},
					"BAAAACuQAAAAAAAALJAAAAAAAAAAAAAALJAAAAAAAAAtkAAAAAAAAAAAAAAtkAAAAAAAAC6QAAAAAAAAAAAAAC6QAAAAAAAAL5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACuQAAAAAAAAK5AAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					3,
					"left_delete",
					null,
					"AwAAAC6QAAAAAAAALpAAAAAAAAABAAAAaS2QAAAAAAAALZAAAAAAAAABAAAAaCyQAAAAAAAALJAAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC+QAAAAAAAAL5AAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "this.data.in"
					},
					"DAAAACyQAAAAAAAALZAAAAAAAAAAAAAALZAAAAAAAAAukAAAAAAAAAAAAAAukAAAAAAAAC+QAAAAAAAAAAAAAC+QAAAAAAAAMJAAAAAAAAAAAAAAMJAAAAAAAAAxkAAAAAAAAAAAAAAxkAAAAAAAADKQAAAAAAAAAAAAADKQAAAAAAAAM5AAAAAAAAAAAAAAM5AAAAAAAAA0kAAAAAAAAAAAAAA0kAAAAAAAADWQAAAAAAAAAAAAADWQAAAAAAAANpAAAAAAAAAAAAAANpAAAAAAAAA3kAAAAAAAAAAAAAA3kAAAAAAAADiQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACyQAAAAAAAALJAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "ner"
					},
					"AwAAADiQAAAAAAAAOZAAAAAAAAAAAAAAOZAAAAAAAAA6kAAAAAAAAAAAAAA6kAAAAAAAADuQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADiQAAAAAAAAOJAAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADuQAAAAAAAAPZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADuQAAAAAAAAO5AAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "this.filter"
					},
					"DAAAACqQAAAAAAAAK5AAAAAAAAAAAAAAK5AAAAAAAAArkAAAAAAAABMAAAAgLnRoaXMuZGF0YS5pbm5lcigpK5AAAAAAAAAskAAAAAAAAAAAAAAskAAAAAAAAC2QAAAAAAAAAAAAAC2QAAAAAAAALpAAAAAAAAAAAAAALpAAAAAAAAAvkAAAAAAAAAAAAAAvkAAAAAAAADCQAAAAAAAAAAAAADCQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAAAykAAAAAAAAAAAAAAykAAAAAAAADOQAAAAAAAAAAAAADOQAAAAAAAANJAAAAAAAAAAAAAANJAAAAAAAAA1kAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACqQAAAAAAAAPZAAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADWQAAAAAAAAN5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADWQAAAAAAAANZAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAADaQAAAAAAAAN5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADaQAAAAAAAANpAAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAADeQAAAAAAAAOJAAAAAAAAAAAAAAOJAAAAAAAAA5kAAAAAAAAAAAAAA5kAAAAAAAADqQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADeQAAAAAAAAN5AAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADqQAAAAAAAAO5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADqQAAAAAAAAOpAAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADuQAAAAAAAAPZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADuQAAAAAAAAO5AAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAADyQAAAAAAAAPZAAAAAAAAAAAAAAPZAAAAAAAAA+kAAAAAAAAAAAAAA+kAAAAAAAAD+QAAAAAAAAAAAAAD+QAAAAAAAAQJAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADyQAAAAAAAAPJAAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEGQAAAAAAAAQpAAAAAAAAAAAAAAQpAAAAAAAABDkAAAAAAAAAAAAABDkAAAAAAAAESQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEGQAAAAAAAAQZAAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAESQAAAAAAAARZAAAAAAAAAAAAAARZAAAAAAAABGkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAESQAAAAAAAARJAAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAAEeQAAAAAAAASJAAAAAAAAAAAAAASJAAAAAAAABJkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEeQAAAAAAAAR5AAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAEiQAAAAAAAASJAAAAAAAAABAAAAOkeQAAAAAAAAR5AAAAAAAAABAAAAOw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEmQAAAAAAAASZAAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEeQAAAAAAAASJAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEeQAAAAAAAAR5AAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAEeQAAAAAAAAR5AAAAAAAAABAAAAOw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEiQAAAAAAAASJAAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ".mna"
					},
					"BAAAAEeQAAAAAAAASJAAAAAAAAAAAAAASJAAAAAAAABJkAAAAAAAAAAAAABJkAAAAAAAAEqQAAAAAAAAAAAAAEqQAAAAAAAAS5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEeQAAAAAAAAR5AAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					3,
					"left_delete",
					null,
					"AwAAAEqQAAAAAAAASpAAAAAAAAABAAAAYUmQAAAAAAAASZAAAAAAAAABAAAAbkiQAAAAAAAASJAAAAAAAAABAAAAbQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEuQAAAAAAAAS5AAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAAEiQAAAAAAAASZAAAAAAAAAAAAAASZAAAAAAAABKkAAAAAAAAAAAAABKkAAAAAAAAEuQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEiQAAAAAAAASJAAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEuQAAAAAAAATZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEuQAAAAAAAAS5AAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEyQAAAAAAAATZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEyQAAAAAAAATJAAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAE2QAAAAAAAATpAAAAAAAAAAAAAATpAAAAAAAABPkAAAAAAAAAAAAABPkAAAAAAAAFCQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE2QAAAAAAAATZAAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " n.name"
					},
					"BwAAAFCQAAAAAAAAUZAAAAAAAAAAAAAAUZAAAAAAAABSkAAAAAAAAAAAAABSkAAAAAAAAFOQAAAAAAAAAAAAAFOQAAAAAAAAVJAAAAAAAAAAAAAAVJAAAAAAAABVkAAAAAAAAAAAAABVkAAAAAAAAFaQAAAAAAAAAAAAAFaQAAAAAAAAV5AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFCQAAAAAAAAUJAAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFiQAAAAAAAAWZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFiQAAAAAAAAWJAAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAACqQAAAAAAAAK5AAAAAAAAAAAAAAK5AAAAAAAAAskAAAAAAAAAAAAAAskAAAAAAAAC2QAAAAAAAAAAAAAC2QAAAAAAAALpAAAAAAAAAAAAAALpAAAAAAAAAvkAAAAAAAAAAAAAAvkAAAAAAAADCQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACqQAAAAAAAAKpAAAAAAAAAAAAAAAABEQA"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADCQAAAAAAAAMZAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADCQAAAAAAAAMJAAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "data.inner."
					},
					"CwAAADaQAAAAAAAAN5AAAAAAAAAAAAAAN5AAAAAAAAA4kAAAAAAAAAAAAAA4kAAAAAAAADmQAAAAAAAAAAAAADmQAAAAAAAAOpAAAAAAAAAAAAAAOpAAAAAAAAA7kAAAAAAAAAAAAAA7kAAAAAAAADyQAAAAAAAAAAAAADyQAAAAAAAAPZAAAAAAAAAAAAAAPZAAAAAAAAA+kAAAAAAAAAAAAAA+kAAAAAAAAD+QAAAAAAAAAAAAAD+QAAAAAAAAQJAAAAAAAAAAAAAAQJAAAAAAAABBkAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADaQAAAAAAAANpAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"right_delete",
					null,
					"AQAAAFtQAAAAAAAAW1AAAAAAAABjAAAAICAgLy9jb25zb2xlLmxvZygnZGVlcCcsIGRlZXApOwogICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2RlZXAuUkVUVVJOX1BBVEgnLCBkZWVwLlJFVFVSTl9QQVRIKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbUAAAAAAAAL5QAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"right_delete",
					null,
					"AQAAAPtQAAAAAAAA+1AAAAAAAAA4AAAAICAvL2NvbnNvbGUubG9nKCdSZWNvcmREZWNsJywgeyB0eXBlUGF0aCB9KTsKICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7UAAAAAAAADNRAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"right_delete",
					null,
					"AQAAAGNRAAAAAAAAY1EAAAAAAABNAAAAICAgIC8vICBjb25zb2xlLmxvZygnbG9jOicsIHsga2luZCwgZmlsZSwgbGluZSwgY29sdW1uLCB0eXBlTm9kZX0pOwogICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjUQAAAAAAALBRAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"right_delete",
					null,
					"AQAAAJ1UAAAAAAAAnVQAAAAAAACcAAAACiAgICAgICAgICAvKiAgcmV0dXJuIFsKICAgICAgICAgICAgbmFtZSwKICAgICAgICAgICAgbm9kZS5raW5kLAogICAgICAgICAgICBub2RlLmtpbmQuc3RhcnRzV2l0aCgnSW5kaXJlY3QnKSA/IG51bGwgOiBUeXBlRmFjdG9yeShub2RlLCBhc3QpCiAgICAgICAgICBdOyov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdVAAAAAAAADlVAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"right_delete",
					null,
					"AQAAAAVUAAAAAAAABVQAAAAAAAAPAAAALypub2RlLmtpbmQsKi8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFVAAAAAAAABRUAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASUQAAAAAAABVRAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "adsb-client.js",
			"settings":
			{
				"buffer_size": 4451,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFIDAAAAAAAAUwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgMAAAAAAABSAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "map.html",
			"settings":
			{
				"buffer_size": 147,
				"line_ending": "Unix"
			}
		},
		{
			"file": "map.js",
			"settings":
			{
				"buffer_size": 7717,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAADaBAAAAAAAANsEAAAAAAAAAAAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADdBAAAAAAAAAAAAADdBAAAAAAAAN4EAAAAAAAAAAAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " Connection"
					},
					"CwAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADiBAAAAAAAAAAAAADiBAAAAAAAAOMEAAAAAAAAAAAAAOMEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADlBAAAAAAAAAAAAADlBAAAAAAAAOYEAAAAAAAAAAAAAOYEAAAAAAAA5wQAAAAAAAAAAAAA5wQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOkEAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsEAAAAAAAA7QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wQAAAAAAADrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0EAAAAAAAA7gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO4EAAAAAAAA8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gQAAAAAAADuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAADwBAAAAAAAAPIEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wQAAAAAAADvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAAPIEAAAAAAAAJwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gQAAAAAAADyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA8wQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gQAAAAAAADyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ws"
					},
					"AwAAAPUEAAAAAAAA9gQAAAAAAAAAAAAA9gQAAAAAAAD3BAAAAAAAAAAAAAD3BAAAAAAAAPgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QQAAAAAAAD1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPgEAAAAAAAA+QQAAAAAAAAAAAAA+QQAAAAAAAD6BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " globalThis."
					},
					"DAAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAMFAAAAAAAAAAAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAEIFAAAAAAAAQwUAAAAAAAAAAAAAQwUAAAAAAABEBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwUAAAAAAAA7BQAAAAAAAP///////+9/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ws;"
					},
					"BAAAAEQFAAAAAAAARQUAAAAAAAAAAAAARQUAAAAAAABGBQAAAAAAAAAAAABGBQAAAAAAAEcFAAAAAAAAAAAAAEcFAAAAAAAASAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAUAAAAAAABEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADwFAAAAAAAAPQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAUAAAAAAAA8BQAAAAAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "ws.i"
					},
					"BAAAADwFAAAAAAAAPQUAAAAAAAAAAAAAPQUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAUAAAAAAAA8BQAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAD8FAAAAAAAAPwUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "onerror"
					},
					"BwAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAEIFAAAAAAAAQwUAAAAAAAAAAAAAQwUAAAAAAABEBQAAAAAAAAAAAABEBQAAAAAAAEUFAAAAAAAAAAAAAEUFAAAAAAAARgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwUAAAAAAAA/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAEgFAAAAAAAASQUAAAAAAAAAAAAASQUAAAAAAABKBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAUAAAAAAABIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAEoFAAAAAAAASwUAAAAAAAAAAAAASwUAAAAAAABMBQAAAAAAAAAAAABMBQAAAAAAAE0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgUAAAAAAABKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0FAAAAAAAATgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAE4FAAAAAAAATwUAAAAAAAAAAAAAXQUAAAAAAABfBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE8FAAAAAAAAUAUAAAAAAAAAAAAAUAUAAAAAAABSBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwUAAAAAAABPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"AgAAAGAFAAAAAAAAYAUAAAAAAAABAAAAfVAFAAAAAAAAUAUAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAADpA"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAFAFAAAAAAAAUQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAUAAAAAAABQBQAAAAAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DQAAAE8FAAAAAAAAUAUAAAAAAAAAAAAAUAUAAAAAAABSBQAAAAAAAAAAAABSBQAAAAAAAFMFAAAAAAAAAAAAAFMFAAAAAAAAVAUAAAAAAAAAAAAAVAUAAAAAAABVBQAAAAAAAAAAAABVBQAAAAAAAFYFAAAAAAAAAAAAAFYFAAAAAAAAVwUAAAAAAAAAAAAAVwUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwUAAAAAAABPBQAAAAAAAP///////+9/"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0FAAAAAAAAXwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAF4FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "ERROR:"
					},
					"BgAAAF8FAAAAAAAAYAUAAAAAAAAAAAAAYAUAAAAAAABhBQAAAAAAAAAAAABhBQAAAAAAAGIFAAAAAAAAAAAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": ",e"
					},
					"AgAAAGYFAAAAAAAAZwUAAAAAAAAAAAAAZwUAAAAAAABoBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgUAAAAAAABmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQUAAAAAAABpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "Connection"
					},
					"CgAAANsIAAAAAAAA3AgAAAAAAAAAAAAA3AgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAN4IAAAAAAAAAAAAAN4IAAAAAAAA3wgAAAAAAAAAAAAA3wgAAAAAAADgCAAAAAAAAAAAAADgCAAAAAAAAOEIAAAAAAAAAAAAAOEIAAAAAAAA4ggAAAAAAAAAAAAA4ggAAAAAAADjCAAAAAAAAAAAAADjCAAAAAAAAOQIAAAAAAAAAAAAAOQIAAAAAAAA5QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "port="
					},
					"BQAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "12000"
					},
					"BQAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QQAAAAAAADxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAPUEAAAAAAAA9QQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAPUEAAAAAAAA9gQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QQAAAAAAAD1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					4,
					"left_delete",
					null,
					"BAAAAD8FAAAAAAAAPwUAAAAAAAABAAAAOT4FAAAAAAAAPgUAAAAAAAABAAAAOT0FAAAAAAAAPQUAAAAAAAABAAAAOTwFAAAAAAAAPAUAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "'+port'"
					},
					"BwAAADwFAAAAAAAAPQUAAAAAAAAAAAAAPQUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAEIFAAAAAAAAQwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAUAAAAAAAA8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"right_delete",
					null,
					"AgAAAEQFAAAAAAAARAUAAAAAAAABAAAAd0QFAAAAAAAARAUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAARAUAAAAAAABEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAAEMFAAAAAAAAQwUAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAARAUAAAAAAABEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEIFAAAAAAAAQgUAAAAAAAABAAAAJ0IFAAAAAAAAQgUAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"right_delete",
					null,
					"AQAAAEIFAAAAAAAAQgUAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEIFAAAAAAAAQwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " ;"
					},
					"AgAAAEMFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABFBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					2,
					"left_delete",
					null,
					"AgAAAEQFAAAAAAAARAUAAAAAAAABAAAAO0MFAAAAAAAAQwUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAARQUAAAAAAABFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEMFAAAAAAAARAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 11270,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"paste",
					null,
					"AgAAAAskAAAAAAAA9CcAAAAAAAAAAAAA9CcAAAAAAAD0JwAAAAAAALMAAAAgICBvbkh0dHAocmVxLCByc3ApIHsKICAgICAgICBjb25zdCB7IHVybCwgbWV0aG9kLCBoZWFkZXJzIH0gPSByZXE7CiAgICAgICAgY29uc29sZS5sb2coJ1x4MWJbMzg7NTszM21vbkh0dHBceDFiWzBtIFtcbiAgJywgcmVxLCAnLFxuICAnLCByc3AsICdcbl0nKTsKICAgICAgICByZXR1cm4gcnNwOwogICAgICB9LA",
					"AQAAAAAAAAABAAAACyQAAAAAAAC+JAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"substitute",
					{
						"region":
						[
							0,
							11597
						],
						"result": "import * as std from 'std';\nimport * as os from 'os';\nimport * as deep from './lib/deep.js';\nimport require from 'require';\nimport path from 'path';\nimport Util from './lib/util.js';\nimport { Console } from 'console';\nimport REPL from './quickjs/qjs-modules/lib/repl.js';\nimport inspect from './lib/objectInspect.js';\nimport * as Terminal from './terminal.js';\nimport * as fs from './lib/filesystem.js';\nimport { escape } from './lib/misc.js';\nimport * as net from 'net';\nimport { Socket } from './quickjs/qjs-ffi/lib/socket.js';\nimport { EventEmitter } from './lib/events.js';\nimport { Repeater } from './lib/repeater/repeater.js';\nimport { ReadFile, WriteFile, ReadJSON, WriteJSON, ReadBJSON, WriteBJSON } from './io-helpers.js';\nimport { parseDate, dateToObject } from './date-helpers.js';\n\nimport rpc from './quickjs/qjs-net/rpc.js';\nimport * as rpc2 from './quickjs/qjs-net/rpc.js';\n\nglobalThis.fs = fs;\n\nfunction main(...args) {\n    const base = path.basename(Util.getArgv()[1], '.js').replace(/\\.[a-z]*$/, '');\n    const config = ReadJSON(`.${base}-config`) ?? {};\n    globalThis.console = new Console({ inspectOptions: { compact: 2, customInspect: true } });\n    let params = Util.getOpt(\n        {\n            verbose: [false, (a, v) => (v | 0) + 1, 'v'],\n            listen: [false, null, 'l'],\n            connect: [false, null, 'c'],\n            client: [false, null, 'C'],\n            server: [false, null, 'S'],\n            debug: [false, null, 'x'],\n            tls: [false, null, 't'],\n            'no-tls': [false, (v, pv, o) => ((o.tls = false), true), 'T'],\n            address: [true, null, 'a'],\n            port: [true, null, 'p'],\n            'ssl-cert': [true, null],\n            'ssl-private-key': [true, null],\n            '@': 'address,port',\n        },\n        args\n    );\n    if (params['no-tls'] === true) params.tls = false;\n    //console.log('params', params);\n    const {\n        address = '0.0.0.0',\n        port = 8999,\n        'ssl-cert': sslCert = 'localhost.crt',\n        'ssl-private-key': sslPrivateKey = 'localhost.key',\n    } = params;\n    const listen = params.connect && !params.listen ? false : true;\n    const server = !params.client || params.server;\n    Object.assign(globalThis, { ...rpc2, rpc });\n    let name = process.env['NAME'] ?? Util.getArgs()[0];\n    /*console.log('argv[1]',process.argv[1]);*/\n    name = name\n        .replace(/.*\\//, '')\n        .replace(/-/g, ' ')\n        .replace(/\\.[^\\/.]*$/, '');\n\n    let [prefix, suffix] = name.split(' ');\n\n    let repl = new REPL(`\\x1b[38;5;165m${prefix} \\x1b[38;5;39m${suffix}\\x1b[0m`, false);\n    const histfile = '.test-rpc-history';\n    repl.historyLoad(histfile, false);\n    repl.directives.i = [\n        (module, ...args) => {\n            console.log('args', args);\n            try {\n                return require(module);\n            } catch (e) {}\n            import(module).then((m) => (globalThis[module] = m));\n        },\n        'import module',\n    ];\n\n    //repl.help = () => {};\n    let { log } = console;\n    repl.show = (arg) => std.puts((typeof arg == 'string' ? arg : inspect(arg, globalThis.console.options)) + '\\n');\n\n    repl.cleanup = () => {\n        repl.readlineRemovePrompt();\n        Terminal.mousetrackingDisable();\n        let numLines = repl.historySave(histfile);\n\n        repl.printStatus(`EXIT (wrote ${numLines} history entries)`, false);\n\n        std.exit(0);\n    };\n\n    repl.inspectOptions = { ...(repl.inspectOptions ?? console.options), depth: 4, compact: false };\n\n    console.log = (...args) => repl.printStatus(() => log(console.config(repl.inspectOptions), ...args));\n\n    let cli = (globalThis.sock = new rpc.Socket(\n        `${address}:${port}`,\n        rpc[`RPC${server ? 'Server' : 'Client'}Connection`],\n        +params.verbose\n    ));\n\n    cli.register({ Socket, Worker: os.Worker, Repeater, REPL, EventEmitter });\n    let logFile =\n        {\n            puts(s) {\n                repl.printStatus(() => std.puts(s));\n            },\n        } ?? std.open('test-rpc.log', 'w+');\n\n    let connections = new Set();\n    const createWS = (globalThis.createWS = (url, callbacks, listen) => {\n        console.log('createWS', { url, callbacks, listen });\n\n        const out = (s) => logFile.puts(s + '\\n');\n        net.setLog(\n            (params.debug ? net.LLL_USER : 0) | (((params.debug ? net.LLL_NOTICE : net.LLL_WARN) << 1) - 1),\n            (level, message) => {\n                //repl.printStatus(...args);\n                if (/__lws/.test(message)) return;\n                //\n                if (params.debug)\n                    out(\n                        (\n                            [\n                                'ERR',\n                                'WARN',\n                                'NOTICE',\n                                'INFO',\n                                'DEBUG',\n                                'PARSER',\n                                'HEADER',\n                                'EXT',\n                                'CLIENT',\n                                'LATENCY',\n                                'MINNET',\n                                'THREAD',\n                            ][Math.log2(level)] ?? level + ''\n                        ).padEnd(8) + message.replace(/\\n/g, '\\\\n')\n                    );\n            }\n        );\n\n        return [net.client, net.server][+listen]({\n            tls: params.tls,\n            sslCert,\n            sslPrivateKey,\n            mimetypes: [\n                ['.svgz', 'application/gzip'],\n                ['.mjs', 'application/javascript'],\n                ['.wasm', 'application/octet-stream'],\n                ['.eot', 'application/vnd.ms-fontobject'],\n                ['.lib', 'application/x-archive'],\n                ['.bz2', 'application/x-bzip2'],\n                ['.gitignore', 'text/plain'],\n                ['.cmake', 'text/plain'],\n                ['.hex', 'text/plain'],\n                ['.md', 'text/plain'],\n                ['.pbxproj', 'text/plain'],\n                ['.wat', 'text/plain'],\n                ['.c', 'text/x-c'],\n                ['.h', 'text/x-c'],\n                ['.cpp', 'text/x-c++'],\n                ['.hpp', 'text/x-c++'],\n                ['.filters', 'text/xml'],\n                ['.plist', 'text/xml'],\n                ['.storyboard', 'text/xml'],\n                ['.vcxproj', 'text/xml'],\n                ['.bat', 'text/x-msdos-batch'],\n                ['.mm', 'text/x-objective-c'],\n                ['.m', 'text/x-objective-c'],\n                ['.sh', 'text/x-shellscript'],\n            ],\n            mounts: [\n                ['/', '.', 'debugger.html'],\n                function proxy(req, res) {\n                    console.log('proxy', { req, res });\n                    const { url, method, headers } = req;\n                    console.log('proxy', { url, method, headers });\n                    const { status, ok, type } = res;\n\n                    console.log('proxy', { status, ok, url, type });\n                },\n\n                function* config(req, res) {\n                    const { body, headers } = req;\n                    console.log('/config', { req, res });\n                    console.log('*config', { body, headers });\n                    yield '{}';\n                },\n                function* files(req, resp) {\n                    const { body, headers } = req;\n                    const { 'content-type': content_type } = headers;\n                    //console.log('*files', { body });\n                    const data = JSON.parse(body);\n                    resp.type = 'application/json';\n                    let {\n                        dir = '.' ?? 'tmp',\n                        filter = '.([ch]|js)$' ?? '.(brd|sch|G[A-Z][A-Z])$',\n                        verbose = false,\n                        objects = false,\n                        key = 'mtime',\n                        limit = null,\n                    } = data ?? {};\n                    let absdir = path.realpath(dir);\n                    let components = absdir.split(path.sep);\n                    if (components.length && components[0] === '') components.shift();\n                    if (components.length < 2 || components[0] != 'home') throw new Error(`Access error`);\n                    //console.log('\\x1b[38;5;215m*files\\x1b[0m', { dir, components, absdir });\n                    //console.log('\\x1b[38;5;215m*files\\x1b[0m', { absdir, filter });\n                    let names = fs.readdirSync(absdir) ?? [];\n                    //console.log('\\x1b[38;5;215m*files\\x1b[0m', { names });\n                    if (filter) {\n                        const re = new RegExp(filter, 'gi');\n                        names = names.filter((name) => re.test(name));\n                    }\n                    if (limit) {\n                        let [offset = 0] = limit;\n                        let [, length = names.length - start] = limit;\n                        names = names.slice(offset, offset + length);\n                    }\n                    let entries = names.map((file) => [file, fs.statSync(`${dir}/${file}`)]);\n                    entries = entries.reduce((acc, [file, st]) => {\n                        let name = file + (st.isDirectory() ? '/' : '');\n                        let obj = {\n                            name,\n                        };\n                        acc.push([\n                            name,\n                            Object.assign(obj, {\n                                mtime: Util.toUnixTime(st.mtime),\n                                time: Util.toUnixTime(st.ctime),\n                                mode: `0${(st.mode & 0x09ff).toString(8)}`,\n                                size: st.size,\n                            }),\n                        ]);\n                        return acc;\n                    }, []);\n                    //console.log('\\x1b[38;5;215m*files\\x1b[0m', console.config({ depth: 3 }), { entries });\n                    if (entries.length) {\n                        let cmp = {\n                            string(a, b) {\n                                return b[1][key].localeCompare(a[1][key]);\n                            },\n                            number(a, b) {\n                                return b[1][key] - a[1][key];\n                            },\n                        }[typeof entries[0][1][key]];\n                        entries = entries.sort(cmp);\n                    }\n                    names = entries.map(([name, obj]) => (objects ? obj : name));\n                    console.log('\\x1b[38;5;215m*files\\x1b[0m', names);\n                    yield JSON.stringify(...[names, ...(verbose ? [null, 2] : [])]);\n                },\n            ],\n            ...url,\n\n            ...callbacks,\n            onConnect(ws, req) {\n                console.log('test-rpc', { ws, req });\n                connections.add(ws);\n\n                return callbacks.onConnect(ws, req);\n            },\n            onClose(ws) {\n                connections.delete(ws);\n\n                return callbacks.onClose(ws, req);\n            },\n            onHttp(req, resp) {\n                const { method, headers } = req;\n                console.log('\\x1b[38;5;33monHttp\\x1b[0m [\\n  ', req, ',\\n  ', resp, '\\n]');\n                const { body, url } = resp;\n                console.log('\\x1b[38;5;33monHttp\\x1b[0m', { body });\n\n                const file = url.path.slice(1);\n                const dir = file.replace(/\\/[^\\/]*$/g, '');\n\n                if (file.endsWith('.js')) {\n                    console.log('onHttp', { file, dir });\n                    const re = /^(\\s*(im|ex)port[^\\n]*from ['\"])([^./'\"]*)(['\"]\\s*;[\\t ]*\\n?)/gm;\n\n                    resp.body = body.replaceAll(re, (match, p1, p0, p2, p3, offset) => {\n                        if (!/[\\/\\.]/.test(p2)) {\n                            let fname = `${p2}.js`;\n\n                            if (!fs.existsSync(dir + '/' + fname)) return `/* ${match} */`;\n\n                            match = [p1, './' + fname, p3].join('');\n\n                            console.log('args', { match, p1, p2, p3, offset });\n                        }\n                        return match;\n                    });\n                }\n\n                return resp;\n            },\n            onMessage(ws, data) {\n                console.log('onMessage', ws, data);\n                return callbacks.onMessage(ws, data);\n            },\n            onFd(fd, rd, wr) {\n                //console.log('onFd',{fd,rd,wr});\n                return callbacks.onFd(fd, rd, wr);\n            },\n            ...(url && url.host ? url : {}),\n        });\n    });\n    globalThis[['connection', 'listener'][+listen]] = cli;\n\n    define(globalThis, {\n        get connections() {\n            return [...connections];\n        },\n    });\n\n    Object.assign(globalThis, {\n        repl,\n        Util,\n        ...rpc,\n        quit,\n        exit: quit,\n        Socket,\n        cli,\n        net,\n        std,\n        os,\n        deep,\n        fs,\n        path,\n        ReadJSON,\n        WriteJSON,\n        ReadFile,\n        WriteFile,\n        ReadBJSON,\n        WriteBJSON,\n        parseDate,\n        dateToObject,\n    });\n\n    define(globalThis, listen ? { server: cli, cli } : { client: cli, cli });\n    delete globalThis.DEBUG;\n    //Object.defineProperty(globalThis, 'DEBUG', { get: DebugFlags });\n\n    if (listen) cli.listen(createWS, os);\n    else cli.connect(createWS, os);\n\n    function quit(why) {\n        console.log(`quit('${why}')`);\n\n        let cfg = { inspectOptions: console.options };\n        WriteJSON(`.${base}-config`, cfg);\n        repl.cleanup(why);\n    }\n\n    repl.runSync();\n}\n\ntry {\n    main(...scriptArgs.slice(1));\n} catch (error) {\n    console.log(`FAIL: ${error?.message ?? error}\\n${error?.stack}`);\n    1;\n    std.exit(1);\n} finally {\n    //console.log('SUCCESS');\n}\n"
					},
					"",
					"AQAAAAAAAAABAAAA9CcAAAAAAAD0JwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"js_prettier",
					null,
					"",
					"AQAAAAAAAAABAAAAtDAAAAAAAAC0MAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"cut",
					null,
					"AQAAANwjAAAAAAAA3CMAAAAAAAAkAAAAICAgICAgICBpZiAoZmlsZS5lbmRzV2l0aCgnLmpzJykpIHsK",
					"AQAAAAAAAAABAAAA3CMAAAAAAAAAJAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"paste",
					null,
					"AgAAANwjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3CMAAAAAAADcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "txt"
					},
					"BAAAAPgjAAAAAAAA+SMAAAAAAAAAAAAA+SMAAAAAAAD5IwAAAAAAAAIAAABqc/kjAAAAAAAA+iMAAAAAAAAAAAAA+iMAAAAAAAD7IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+CMAAAAAAAD6IwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAAckAAAAAAAACCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByQAAAAAAAAHJAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAAkAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAAJJAAAAAAAAAAAAAAJJAAAAAAAAAskAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAACQAAAAAAAAAJAAAAAAAAP///////+9/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "resp.body"
					},
					"CQAAAAskAAAAAAAADCQAAAAAAAAAAAAADCQAAAAAAAANJAAAAAAAAAAAAAANJAAAAAAAAA4kAAAAAAAAAAAAAA4kAAAAAAAADyQAAAAAAAAAAAAADyQAAAAAAAAQJAAAAAAAAAAAAAAQJAAAAAAAABEkAAAAAAAAAAAAABEkAAAAAAAAEiQAAAAAAAAAAAAAEiQAAAAAAAATJAAAAAAAAAAAAAATJAAAAAAAABQkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACyQAAAAAAAALJAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABQkAAAAAAAAFSQAAAAAAAAAAAAAFSQAAAAAAAAWJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCQAAAAAAAAUJAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " fs.readFileSyn"
					},
					"DwAAABYkAAAAAAAAFyQAAAAAAAAAAAAAFyQAAAAAAAAYJAAAAAAAAAAAAAAYJAAAAAAAABkkAAAAAAAAAAAAABkkAAAAAAAAGiQAAAAAAAAAAAAAGiQAAAAAAAAbJAAAAAAAAAAAAAAbJAAAAAAAABwkAAAAAAAAAAAAABwkAAAAAAAAHSQAAAAAAAAAAAAAHSQAAAAAAAAeJAAAAAAAAAAAAAAeJAAAAAAAAB8kAAAAAAAAAAAAAB8kAAAAAAAAICQAAAAAAAAAAAAAICQAAAAAAAAhJAAAAAAAAAAAAAAhJAAAAAAAACIkAAAAAAAAAAAAACIkAAAAAAAAIyQAAAAAAAAAAAAAIyQAAAAAAAAkJAAAAAAAAAAAAAAkJAAAAAAAACUkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFiQAAAAAAAAWJAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAACUkAAAAAAAAJiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJSQAAAAAAAAlJAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACYkAAAAAAAAKCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJiQAAAAAAAAmJAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "file'"
					},
					"BQAAACckAAAAAAAAKCQAAAAAAAAAAAAAKCQAAAAAAAApJAAAAAAAAAAAAAApJAAAAAAAACokAAAAAAAAAAAAACokAAAAAAAAKyQAAAAAAAAAAAAAKyQAAAAAAAAsJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJyQAAAAAAAAnJAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAACskAAAAAAAAKyQAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAALCQAAAAAAAAsJAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACwkAAAAAAAALSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALCQAAAAAAAAsJAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0kAAAAAAAALiQAAAAAAAAAAAAALiQAAAAAAAA4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALSQAAAAAAAAtJAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": ",u"
					},
					"AwAAACskAAAAAAAALCQAAAAAAAAAAAAALyQAAAAAAAAvJAAAAAAAAAoAAAAgICAgICAgICAgLCQAAAAAAAAtJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyQAAAAAAAArJAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAACwkAAAAAAAALCQAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAALSQAAAAAAAAtJAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACwkAAAAAAAALiQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALCQAAAAAAAAsJAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "utf-8"
					},
					"BQAAAC0kAAAAAAAALiQAAAAAAAAAAAAALiQAAAAAAAAvJAAAAAAAAAAAAAAvJAAAAAAAADAkAAAAAAAAAAAAADAkAAAAAAAAMSQAAAAAAAAAAAAAMSQAAAAAAAAyJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALSQAAAAAAAAtJAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "clang-list.js",
			"settings":
			{
				"buffer_size": 9298,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ast-shell.js",
			"settings":
			{
				"buffer_size": 38776,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 15493,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUMAAAAAAAAFYwAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUMAAAAAAAAFYwAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAIMtAAAAAAAAgy0AAAAAAAAEAAAAICAvLw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHLQAAAAAAAIMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZEAAAAAAAANkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAANkQAAAAAAAA2RAAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaEAAAAAAAANoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADbEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZEAAAAAAAANkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADXEAAAAAAAAAUAAAAgICAvLw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbEAAAAAAAANYQAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANcQAAAAAAAA2RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXEAAAAAAAANcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "https"
					},
					"BgAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAMAAAB3c3NZMAAAAAAAAFowAAAAAAAAAAAAAFowAAAAAAAAWzAAAAAAAAAAAAAAWzAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAF0wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYMAAAAAAAAFswAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAF0wAAAAAAAAXjAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdMAAAAAAAAF0wAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAF0wAAAAAAAAXTAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeMAAAAAAAAF4wAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "wss"
					},
					"BAAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAUAAABodHRwc1kwAAAAAAAAWjAAAAAAAAAAAAAAWjAAAAAAAABbMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYMAAAAAAAAF0wAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "wss"
					},
					"BAAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAMAAAB3c3NZMAAAAAAAAFowAAAAAAAAAAAAAFowAAAAAAAAWzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYMAAAAAAAAFswAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 4320,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"cut",
					null,
					"AQAAAO0EAAAAAAAA7QQAAAAAAABoAAAACiAgbGV0IGNoaWxkID0gY2hpbGRfcHJvY2Vzcy5zcGF3bigncWpzbScsIGFyZ3MsIHsKICAgIGVudiwKICAgIHN0ZGlvOiBbJ2luaGVyaXQnLCAncGlwZScsICdwaXBlJ10KICB9KTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtBAAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					2,
					"paste",
					null,
					"AgAAAO0EAAAAAAAAVQUAAAAAAAAAAAAAVQUAAAAAAAC9BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtBAAAAAAAAO0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "pid"
					},
					"BAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABdBQAAAAAAAAUAAABjaGlsZF0FAAAAAAAAXgUAAAAAAAAAAAAAXgUAAAAAAABfBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBQAAAAAAAGEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "os.exec"
					},
					"BwAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAGkFAAAAAAAAaQUAAAAAAAATAAAAY2hpbGRfcHJvY2Vzcy5zcGF3bg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpBQAAAAAAAHwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAGoFAAAAAAAAawUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqBQAAAAAAAGoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "].on"
					},
					"BAAAAHEFAAAAAAAAcgUAAAAAAAAAAAAAcgUAAAAAAABzBQAAAAAAAAAAAABzBQAAAAAAAHQFAAAAAAAAAAAAAHQFAAAAAAAAdQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxBQAAAAAAAHEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAAHQFAAAAAAAAdAUAAAAAAAABAAAAbnMFAAAAAAAAcwUAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1BQAAAAAAAHUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "concat("
					},
					"BwAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB4BQAAAAAAAAAAAAB4BQAAAAAAAHkFAAAAAAAAAAAAAHkFAAAAAAAAegUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzBQAAAAAAAHMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					2,
					"right_delete",
					null,
					"AgAAAHoFAAAAAAAAegUAAAAAAAABAAAALHoFAAAAAAAAegUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6BQAAAAAAAHoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAH4FAAAAAAAAfwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+BQAAAAAAAH4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " env,"
					},
					"BQAAAIIFAAAAAAAAgwUAAAAAAAAAAAAAgwUAAAAAAACEBQAAAAAAAAAAAACEBQAAAAAAAIUFAAAAAAAAAAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACHBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCBQAAAAAAAIIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcFAAAAAAAAiAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBQAAAAAAAIcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "stdein"
					},
					"BgAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBQAAAAAAAIgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					6,
					"left_delete",
					null,
					"BgAAAI0FAAAAAAAAjQUAAAAAAAABAAAAbowFAAAAAAAAjAUAAAAAAAABAAAAaYsFAAAAAAAAiwUAAAAAAAABAAAAZYoFAAAAAAAAigUAAAAAAAABAAAAZIkFAAAAAAAAiQUAAAAAAAABAAAAdIgFAAAAAAAAiAUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBQAAAAAAAI4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "stdout:"
					},
					"BwAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBQAAAAAAAIgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8FAAAAAAAAkAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPBQAAAAAAAI8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVBQAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAFsFAAAAAAAAXAUAAAAAAAAAAAAAXAUAAAAAAABdBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBQAAAAAAAFsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAFwFAAAAAAAAXAUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBQAAAAAAAF0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBQAAAAAAAFwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					3,
					"left_delete",
					null,
					"AwAAAF4FAAAAAAAAXgUAAAAAAAABAAAAdF0FAAAAAAAAXQUAAAAAAAABAAAAdVwFAAAAAAAAXAUAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfBQAAAAAAAF8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "pipe"
					},
					"BAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBQAAAAAAAFwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIFAAAAAAAAYwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAF8FAAAAAAAAXwUAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfBQAAAAAAAF8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "os.pipe"
					},
					"BwAAAGMFAAAAAAAAZAUAAAAAAAAAAAAAZAUAAAAAAABlBQAAAAAAAAAAAABlBQAAAAAAAGYFAAAAAAAAAAAAAGYFAAAAAAAAZwUAAAAAAAAAAAAAZwUAAAAAAABoBQAAAAAAAAAAAABoBQAAAAAAAGkFAAAAAAAAAAAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjBQAAAAAAAGMFAAAAAAAA////////738"
				],
				[
					64,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGoFAAAAAAAAbAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqBQAAAAAAAGoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsBQAAAAAAAGwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAG0FAAAAAAAAbgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtBQAAAAAAAG0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"paste",
					null,
					"AgAAAFwFAAAAAAAAYAUAAAAAAAAAAAAAYAUAAAAAAABgBQAAAAAAAAQAAABwaXBl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"paste",
					null,
					"AQAAAKkFAAAAAAAArQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpBQAAAAAAAKkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0FAAAAAAAArgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtBQAAAAAAAK0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAK0FAAAAAAAArQUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuBQAAAAAAAK4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK0FAAAAAAAArwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtBQAAAAAAAK0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAK4FAAAAAAAArwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuBQAAAAAAAK4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALAFAAAAAAAAsQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwBQAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " stde"
					},
					"BQAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxBQAAAAAAALEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAALUFAAAAAAAAtQUAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2BQAAAAAAALYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "err:"
					},
					"BAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1BQAAAAAAALUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " pipe√º"
					},
					"BgAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAC7BQAAAAAAALwFAAAAAAAAAAAAALwFAAAAAAAAvQUAAAAAAAAAAAAAvQUAAAAAAAC+BQAAAAAAAAAAAAC+BQAAAAAAAL8FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAL4FAAAAAAAAvgUAAAAAAAACAAAAw7w",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/BQAAAAAAAL8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAL4FAAAAAAAAwAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+BQAAAAAAAL4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL8FAAAAAAAAwAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/BQAAAAAAAL8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADDBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBBQAAAAAAAMEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAMMFAAAAAAAAxAUAAAAAAAAAAAAAxAUAAAAAAADFBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDBQAAAAAAAMMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFUFAAAAAAAAVwUAAAAAAAAAAAAAsgQAAAAAAAC0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVBQAAAAAAALIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAMkA"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "\ncl"
					},
					"BgAAAP8FAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAACBgAAAAAAAAAAAAAABgAAAAAAAAAGAAAAAAAAAgAAACAgAAYAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/BQAAAAAAAP8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					2,
					"left_delete",
					null,
					"AgAAAAEGAAAAAAAAAQYAAAAAAAABAAAAbAAGAAAAAAAAAAYAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "os.close"
					},
					"CAAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgGAAAAAAAACgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIBgAAAAAAAAgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "pipe"
					},
					"BAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBgAAAAAAAAkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAA0GAAAAAAAADwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANBgAAAAAAAA0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAA4GAAAAAAAADwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOBgAAAAAAAA4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABEGAAAAAAAAEgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARBgAAAAAAABEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "block:false,"
					},
					"DAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAChBQAAAAAAAKIFAAAAAAAAAAAAAKIFAAAAAAAAowUAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAACkBQAAAAAAAKUFAAAAAAAAAAAAAKUFAAAAAAAApgUAAAAAAAAAAAAApgUAAAAAAACnBQAAAAAAAAAAAACnBQAAAAAAAKgFAAAAAAAAAAAAAKgFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAACqBQAAAAAAAKsFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfBQAAAAAAAJ8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "retur"
					},
					"BQAAAGkGAAAAAAAAagYAAAAAAAAAAAAAagYAAAAAAABrBgAAAAAAAAAAAABrBgAAAAAAAGwGAAAAAAAAAAAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABuBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpBgAAAAAAAGkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuBgAAAAAAAG4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAG4GAAAAAAAAbgYAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvBgAAAAAAAG8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuBgAAAAAAAG4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG8GAAAAAAAAcAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvBgAAAAAAAG8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAggYAAAAAAACEBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwBgAAAAAAAHAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEGAAAAAAAAcgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxBgAAAAAAAHEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "tsd"
					},
					"AwAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByBgAAAAAAAHIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					3,
					"left_delete",
					null,
					"AwAAAHQGAAAAAAAAdAYAAAAAAAABAAAAZHMGAAAAAAAAcwYAAAAAAAABAAAAc3IGAAAAAAAAcgYAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1BgAAAAAAAHUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "stdio:"
					},
					"BgAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByBgAAAAAAAHIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgGAAAAAAAAeQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4BgAAAAAAAHgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHkGAAAAAAAAewYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5BgAAAAAAAHkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "undefined,"
					},
					"CgAAAHoGAAAAAAAAewYAAAAAAAAAAAAAewYAAAAAAAB8BgAAAAAAAAAAAAB8BgAAAAAAAH0GAAAAAAAAAAAAAH0GAAAAAAAAfgYAAAAAAAAAAAAAfgYAAAAAAAB/BgAAAAAAAAAAAAB/BgAAAAAAAIAGAAAAAAAAAAAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAIMGAAAAAAAAhAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6BgAAAAAAAHoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " pipe"
					},
					"BQAAAIQGAAAAAAAAhQYAAAAAAAAAAAAAhQYAAAAAAACGBgAAAAAAAAAAAACGBgAAAAAAAIcGAAAAAAAAAAAAAIcGAAAAAAAAiAYAAAAAAAAAAAAAiAYAAAAAAACJBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEBgAAAAAAAIQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIkGAAAAAAAAiwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJBgAAAAAAAIkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIoGAAAAAAAAiwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKBgAAAAAAAIoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": ",pipe"
					},
					"BQAAAIwGAAAAAAAAjQYAAAAAAAAAAAAAjQYAAAAAAACOBgAAAAAAAAAAAACOBgAAAAAAAI8GAAAAAAAAAAAAAI8GAAAAAAAAkAYAAAAAAAAAAAAAkAYAAAAAAACRBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMBgAAAAAAAIwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJEGAAAAAAAAkwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRBgAAAAAAAJEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJIGAAAAAAAAkwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBgAAAAAAAJIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJUGAAAAAAAAlgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBgAAAAAAAJUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"left_delete",
					null,
					"AQAAAJUGAAAAAAAAlQYAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWBgAAAAAAAJYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUGAAAAAAAAlgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBgAAAAAAAJUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " pid"
					},
					"BAAAAJYGAAAAAAAAlwYAAAAAAAAAAAAAlwYAAAAAAACYBgAAAAAAAAAAAACYBgAAAAAAAJkGAAAAAAAAAAAAAJkGAAAAAAAAmgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWBgAAAAAAAJYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAJoGAAAAAAAAmwYAAAAAAAAAAAAAmwYAAAAAAACcBgAAAAAAAAAAAACcBgAAAAAAAJ0GAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaBgAAAAAAAJoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					253,
					1,
					"cut",
					null,
					"AQAAAGkGAAAAAAAAaQYAAAAAAAA1AAAAcmV0dXJuIHsgc3RkaW86IFt1bmRlZmluZWQsIHBpcGVbMF0scGlwZVswXV0sIHBpZCB9Owo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeBgAAAAAAAGkGAAAAAAAAAAAAAAAAAAA"
				],
				[
					255,
					1,
					"paste",
					null,
					"AQAAAB8GAAAAAAAAVAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfBgAAAAAAAB8GAAAAAAAAAAAAAAAAAAA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACgGAAAAAAAAKQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoBgAAAAAAACgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAC4GAAAAAAAALwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAC4GAAAAAAAALgYAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBgAAAAAAAC8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAC4GAAAAAAAALwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"cut",
					null,
					"AQAAANoFAAAAAAAA2gUAAAAAAAAxAAAAZW52LAogICAgc3RkaW86IFsnaW5oZXJpdCcsICdwaXBlJywgJ3BpcGUnXQogIH0pOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBQAAAAAAAAsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAH8GAAAAAAAAfwYAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABgAAAAAAAIAGAAAAAAAAAAAAAAAAQkA"
				],
				[
					303,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAADYEAAAaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwppbXBvcnQgeyBidG9hIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJy4vbGliL3BhdGguanMnOwppbXBvcnQgKiBhcyBkZWVwIGZyb20gJy4vbGliL2RlZXAuanMnOwppbXBvcnQgeyB0b1N0cmluZyB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgY2hpbGRfcHJvY2VzcyBmcm9tICcuL2xpYi9jaGlsZFByb2Nlc3MuanMnOwppbXBvcnQgeyBTb2NrZXQsIFNvY2tBZGRyLCBBRl9JTkVULCBTT0NLX1NUUkVBTSwgSVBQUk9UT19UQ1AgfSBmcm9tICcuL3F1aWNranMvcWpzLWZmaS9saWIvc29ja2V0LmpzJzsKaW1wb3J0IHsgdG9TdHJpbmcgYXMgQXJyYXlCdWZmZXJUb1N0cmluZywgdG9BcnJheUJ1ZmZlciBhcyBTdHJpbmdUb0FycmF5QnVmZmVyIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CmltcG9ydCB7IERlYnVnZ2VyUHJvdG9jb2wgfSBmcm9tICcuL2RlYnVnZ2VycHJvdG9jb2wuanMnOwoKY29uc29sZS5sb2coCiAgJ3RvU3RyaW5nJywKICBBcnJheUJ1ZmZlclRvU3RyaW5nKG5ldyBVaW50OEFycmF5KFsweDYxLCAweDYyLCAweDY0LCAweDY1LCAweDY2LCAweDIwLCAweGMzLCAweGE0LCAweGMzLCAweGI2LCAweGMzLCAweGJjXSkuYnVmZmVyKQopOwpjb25zb2xlLmxvZygndG9BcnJheUJ1ZmZlcicsIFN0cmluZ1RvQXJyYXlCdWZmZXIoJ2JsYWggw6TDtsO8JykpOwpjb25zb2xlLmxvZygnY2hpbGRfcHJvY2VzcycsIGNoaWxkX3Byb2Nlc3Muc3Bhd24gKyAnJyk7Cgp2YXIgd29ya2VyOwp2YXIgY291bnRlcjsKbGV0IHNvY2tldHMgPSAoZ2xvYmFsVGhpcy5zb2NrZXRzID8/PSBuZXcgU2V0KCkpOwoKZXhwb3J0IGZ1bmN0aW9uIFN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykgewogIGxldCBlbnYgPSBwcm9jZXNzLmVudiA/PyB7fTsKICBhZGRyZXNzID8/PSAnMTI3LjAuMC4xOjk5MDEnOwogIGVudlsnRElTUExBWSddID8/PSAnOjAuMCc7CiAgaWYoY29ubmVjdCkgZW52WydRVUlDS0pTX0RFQlVHX0FERFJFU1MnXSA9IGFkZHJlc3M7CiAgZWxzZSBlbnZbJ1FVSUNLSlNfREVCVUdfTElTVEVOX0FERFJFU1MnXSA9IGFkZHJlc3M7CgovKiAgY29uc29sZS5sb2coJ2NoaWxkX3Byb2Nlc3Muc3Bhd24nLCBjaGlsZF9wcm9jZXNzLnNwYXduKTsKCiAgbGV0IGNoaWxkID0gY2hpbGRfcHJvY2Vzcy5zcGF3bigncWpzbScsIGFyZ3MsIHsKICAgIGVudiwKICAgIHN0ZGlvOiBbJ2luaGVyaXQnLCAncGlwZScsICdwaXBlJ10KICB9KTsqLwogIGxldCBwaXBlID0gb3MucGlwZSgpOyAKICBsZXQgcGlkID0gb3MuZXhlYyhbJ3Fqc20nXS5jb25jYXQoYXJncyksIHtibG9jazpmYWxzZSwgZW52LCBzdGRvdXQ6IHBpcGVbMV0sIHN0ZGVycjogcGlwZVsxXSB9KTsKICAgIApvcy5jbG9zZShwaXBlWzFdKTsKcmV0dXJuIHsgJ3N0ZGlvJzogW3VuZGVmaW5lZCwgcGlwZVswXSxwaXBlWzBdXSwgcGlkIH07CiAgLy9jb25zdCB7IHBpZCwgc3RkaW8gfSA9IGNoaWxkOwoKICBjb25zb2xlLmxvZygnU3RhcnREZWJ1Z2dlcicsIGNoaWxkKTsKICByZXR1cm4gY2hpbGQ7Cgp9CgpleHBvcnQgZnVuY3Rpb24gQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIGNhbGxiYWNrKSB7CiAgbGV0IGFkZHIgPSBuZXcgU29ja0FkZHIoQUZfSU5FVCwgLi4uYWRkcmVzcy5zcGxpdCgnOicpKTsKICBjb25zb2xlLmxvZygnQ29ubmVjdERlYnVnZ2VyJywgYWRkcik7CiAgbGV0IHNvY2sgPSBuZXcgU29ja2V0KEFGX0lORVQsIFNPQ0tfU1RSRUFNLCBJUFBST1RPX1RDUCk7CiAgbGV0IHJldCA9IHNvY2suY29ubmVjdChhZGRyKTsKCiAgaWYocmV0ID49IDApIHsKICAgIHNvY2submRlbGF5KHRydWUpOwogICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCcsICtzb2NrLCAndG8nLCBzb2NrLnJlbW90ZSk7CiAgICBzb2NrZXRzLmFkZChzb2NrKTsKICAgIGNvbnNvbGUubG9nKCdzb2NrZXRzJywgc29ja2V0cyk7CiAgfQoKICAvKiAgb3Muc2V0V3JpdGVIYW5kbGVyKCtzb2NrLCAoKSA9PiB7CiAgICBvcy5zZXRXcml0ZUhhbmRsZXIoK3NvY2ssIG51bGwpOwogICAgbGV0IGRiZyA9IG5ldyBEZWJ1Z2dlclByb3RvY29sKHNvY2spOwogIAogICAgb3Muc2V0UmVhZEhhbmRsZXIoK3NvY2ssICgpID0+IHsKICAgICAgaWYoZGJnKSB7CiAgICAgICAgbGV0IHIgPSBkYmcucmVhZCgpOwogICAgICBjb25zb2xlLmxvZygncmVhZGFibGUnLCB7IGZkOiArc29jaywgciB9KTsKICAgICAgICBpZihyIDw9IDApIHsKICAgICAgICAgIG9zLnNldFJlYWRIYW5kbGVyKCtzb2NrLCBudWxsKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCdyZWFkKCkgPScsIHIsIHNvY2suZXJyb3IsIGNhbGxiYWNrICsgJycpOwogICAgICAgICAgY2FsbGJhY2soZGJnLCBzb2NrKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0pOwoqLwogIC8vICBpZihyZXQgPCAwKSB0aHJvdyBuZXcgRXJyb3IoYENvbm5lY3Rpb24gZmFpbGVkOiAke3NvY2suZXJyb3J9YCk7CiAgY29uc29sZS5sb2coJ0Nvbm5lY3REZWJ1Z2dlcicsIHNvY2spOwoKICByZXR1cm4gc29jazsKfQoKZnVuY3Rpb24gVGVzdFdvcmtlcigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBjb2xvcnM6IHRydWUsCiAgICBjb21wYWN0OiAxLAogICAgcHJlZml4OiAnXHgxYlszODs1OzIyMG1QQVJFTlRceDFiWzBtJwogIH0pOwogIGNvbnNvbGUubG9nKCdzY3JpcHRBcmdzJywgc2NyaXB0QXJncyk7CiAgd29ya2VyID0gbmV3IG9zLldvcmtlcignLi93cy13b3JrZXIuanMnKTsKICBjb3VudGVyID0gMDsKICB3b3JrZXIub25tZXNzYWdlID0gV29ya2VyTWVzc2FnZTsKICBjb25zb2xlLmxvZygnVGVzdFdvcmtlcicsIHdvcmtlci5vbm1lc3NhZ2UpOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBsaW5lID0gcHJvY2Vzcy5zdGRpbi5nZXRsaW5lKCk7CiAgICB3b3JrZXIucG9zdE1lc3NhZ2UoeyBsaW5lIH0pOwogIH0pOwp9CgpsZXQgc29jaywgY29ubmVjdGlvbjsKZnVuY3Rpb24gV29ya2VyTWVzc2FnZShlKSB7CiAgY29uc29sZS5sb2coJ1dvcmtlck1lc3NhZ2UnLCBlKTsKICB2YXIgZXYgPSBlLmRhdGE7CiAgY29uc3QgeyBtZXNzYWdlLCBpZCB9ID0gZXY7CiAgc3dpdGNoIChldi50eXBlKSB7CiAgICBjYXNlICdtZXNzYWdlJzogewogICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkgewogICAgICAgIGNhc2UgJ3N0YXJ0JzogewogICAgICAgICAgY29uc29sZS5sb2coJ1NUQVJUJywgbWVzc2FnZS5zdGFydCk7CiAgICAgICAgICBjb25zdCB7IGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MgfSA9IG1lc3NhZ2Uuc3RhcnQ7CiAgICAgICAgICBsZXQgY2hpbGQgPSBTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpOwogICAgICAgICAgb3Muc2xlZXAoMTAwMCk7CiAgICAgICAgICBzb2NrID0gQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGRlZmF1bHQ6IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdGcm9tIFdPUktFUicsIGV2KTsKICAgICAgICAgIGNvbm5lY3Rpb24uc2VuZE1lc3NhZ2UobWVzc2FnZSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdudW0nOiB7CiAgICAgIHV0aWwuYXNzZXJ0KGV2Lm51bSwgY291bnRlcik7CiAgICAgIGNvdW50ZXIrKzsKICAgICAgaWYoY291bnRlciA9PSAxMCkgewogICAgICAgIGxldCBzYWIgPSBuZXcgU2hhcmVkQXJyYXlCdWZmZXIoMTApOwogICAgICAgIGxldCBidWYgPSBuZXcgVWludDhBcnJheShzYWIpOwogICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdzYWInLCBidWY6IGJ1ZiB9KTsKICAgICAgICBjb3VudGVyID0gMDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3NhYl9kb25lJzogewogICAgICBsZXQgYnVmID0gZXYuYnVmOwogICAgICB1dGlsLmFzc2VydChidWZbMl0sIDEwKTsKICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ2Fib3J0JyB9KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdkb25lJzogewogICAgICBicmVhazsKICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHNlbmQoaWQsIGJvZHkpIHsKICB3b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiAnc2VuZCcsIGlkLCBib2R5IH0pOwp9Ci8qVGVzdFdvcmtlcigpOyovCgAAAAAAAAAA1hAAAAAAAAAAAAAAAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/BgAAAAAAAH8GAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "make-bitmap.js",
			"settings":
			{
				"buffer_size": 2275,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components.js",
			"settings":
			{
				"buffer_size": 2831,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAWCwAAaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbC5qcyc7CmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJy4uL2RvbS9wcmVhY3RDb21wb25lbnQuanMnOwppbXBvcnQgeyBXaXJlIH0gZnJvbSAnLi9jb21wb25lbnRzL3dpcmUuanMnOwppbXBvcnQgeyBSZWN0YW5nbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvcmVjdGFuZ2xlLmpzJzsKaW1wb3J0IHsgUGluIH0gZnJvbSAnLi9jb21wb25lbnRzL3Bpbi5qcyc7CmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vY29tcG9uZW50cy9jaXJjbGUuanMnOwppbXBvcnQgeyBDcm9zcyB9IGZyb20gJy4vY29tcG9uZW50cy9jcm9zcy5qcyc7CmltcG9ydCB7IEFyYyB9IGZyb20gJy4vY29tcG9uZW50cy9hcmMuanMnOwppbXBvcnQgeyBHcmlkLCBQYXR0ZXJuIH0gZnJvbSAnLi9jb21wb25lbnRzL2dyaWQuanMnOwppbXBvcnQgeyBUZXh0RWxlbWVudCB9IGZyb20gJy4vY29tcG9uZW50cy90ZXh0RWxlbWVudC5qcyc7CmltcG9ydCB7IFNWRyB9IGZyb20gJy4vY29tcG9uZW50cy9zdmcuanMnOwppbXBvcnQgeyBCYWNrZ3JvdW5kIH0gZnJvbSAnLi9jb21wb25lbnRzL2JhY2tncm91bmQuanMnOwppbXBvcnQgeyBEcmF3aW5nIH0gZnJvbSAnLi9jb21wb25lbnRzL2RyYXdpbmcuanMnOwppbXBvcnQgeyBQYWQgfSBmcm9tICcuL2NvbXBvbmVudHMvcGFkLmpzJzsKaW1wb3J0IHsgUG9seWdvbiB9IGZyb20gJy4vY29tcG9uZW50cy9wb2x5Z29uLmpzJzsKaW1wb3J0IHsgT3JpZ2luIH0gZnJvbSAnLi9jb21wb25lbnRzL29yaWdpbi5qcyc7CmltcG9ydCB7IEVsZW1lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZWxlbWVudC5qcyc7CmltcG9ydCB7IFdpcmVQYXRoIH0gZnJvbSAnLi9jb21wb25lbnRzL3dpcmVQYXRoLmpzJzsKaW1wb3J0IHsgUGFja2FnZSB9IGZyb20gJy4vY29tcG9uZW50cy9wYWNrYWdlLmpzJzsKaW1wb3J0IHsgU2NoZW1hdGljU3ltYm9sIH0gZnJvbSAnLi9jb21wb25lbnRzL3N5bWJvbC5qcyc7CmltcG9ydCB7IEhvbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvaG9sZS5qcyc7CmltcG9ydCB7IERpbWVuc2lvbiB9IGZyb20gJy4vY29tcG9uZW50cy9kaW1lbnNpb24uanMnOwppbXBvcnQgeyBTTUQgfSBmcm9tICcuL2NvbXBvbmVudHMvc21kLmpzJzsKaW1wb3J0IHsgVmlhIH0gZnJvbSAnLi9jb21wb25lbnRzL3ZpYS5qcyc7CmltcG9ydCB7IEluc3RhbmNlIH0gZnJvbSAnLi9jb21wb25lbnRzL2luc3RhbmNlLmpzJzsKaW1wb3J0IHsgU2hlZXQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2hlZXQuanMnOwoKZXhwb3J0IGNvbnN0IFByaW1pdGl2ZUNvbXBvbmVudHMgPSB7CiAgV2lyZSwKICBSZWN0YW5nbGUsCiAgUGluLAogIENpcmNsZSwKICBDcm9zcywKICBBcmMsCiAgVGV4dDogVGV4dEVsZW1lbnQsCiAgR3JpZCwKICBQYXR0ZXJuLAogIFBhZCwKICBWaWE6IFBhZCwKICBPcmlnaW4sCiAgUG9seWdvbiwKICBTeW1ib2w6IFNjaGVtYXRpY1N5bWJvbCwKICBQYWNrYWdlLAogIEhvbGUsCiAgRGltZW5zaW9uLAogIFNtZDogU01ELAogIFZpYSwKICBJbnN0YW5jZSwKICBTaGVldAp9OwoKbGV0IHByZXZOYW1lOwoKZXhwb3J0IGNvbnN0IEVsZW1lbnROYW1lVG9Db21wb25lbnQgPSBuYW1lID0+IHsKICBsZXQgY29tcCA9IFByaW1pdGl2ZUNvbXBvbmVudHNbVXRpbC51Y2ZpcnN0KG5hbWUpXTsKCiAgaWYoIWNvbXAgJiYgbmFtZSAhPSBwcmV2TmFtZSkgewogICAgY29uc29sZS5kZWJ1ZyhgTm90IHJlbmRlcmluZyBjb21wb25lbnQgJyR7bmFtZX0nYCk7CiAgICBwcmV2TmFtZSA9IG5hbWU7CiAgfQogIHJldHVybiBjb21wOwp9OwoKZXhwb3J0IGNvbnN0IEVsZW1lbnRUb0NvbXBvbmVudCA9IGVsZW1lbnQgPT4gRWxlbWVudE5hbWVUb0NvbXBvbmVudChlbGVtZW50LnRhZ05hbWUpOwoKZXhwb3J0IHsgV2lyZSB9IGZyb20gJy4vY29tcG9uZW50cy93aXJlLmpzJzsKZXhwb3J0IHsgUmVjdGFuZ2xlIH0gZnJvbSAnLi9jb21wb25lbnRzL3JlY3RhbmdsZS5qcyc7CmV4cG9ydCB7IFBpbiB9IGZyb20gJy4vY29tcG9uZW50cy9waW4uanMnOwpleHBvcnQgeyBDaXJjbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvY2lyY2xlLmpzJzsKZXhwb3J0IHsgQ3Jvc3MgfSBmcm9tICcuL2NvbXBvbmVudHMvY3Jvc3MuanMnOwpleHBvcnQgeyBBcmMgfSBmcm9tICcuL2NvbXBvbmVudHMvYXJjLmpzJzsKZXhwb3J0IHsgR3JpZCwgUGF0dGVybiB9IGZyb20gJy4vY29tcG9uZW50cy9ncmlkLmpzJzsKZXhwb3J0IHsgVGV4dEVsZW1lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGV4dEVsZW1lbnQuanMnOwpleHBvcnQgeyBTVkcgfSBmcm9tICcuL2NvbXBvbmVudHMvc3ZnLmpzJzsKZXhwb3J0IHsgQmFja2dyb3VuZCB9IGZyb20gJy4vY29tcG9uZW50cy9iYWNrZ3JvdW5kLmpzJzsKZXhwb3J0IHsgRHJhd2luZyB9IGZyb20gJy4vY29tcG9uZW50cy9kcmF3aW5nLmpzJzsKZXhwb3J0IHsgUGFkIH0gZnJvbSAnLi9jb21wb25lbnRzL3BhZC5qcyc7CmV4cG9ydCB7IFBvbHlnb24gfSBmcm9tICcuL2NvbXBvbmVudHMvcG9seWdvbi5qcyc7CmV4cG9ydCB7IE9yaWdpbiB9IGZyb20gJy4vY29tcG9uZW50cy9vcmlnaW4uanMnOwpleHBvcnQgeyBXaXJlUGF0aCB9IGZyb20gJy4vY29tcG9uZW50cy93aXJlUGF0aC5qcyc7CmV4cG9ydCB7IFBhY2thZ2UgfSBmcm9tICcuL2NvbXBvbmVudHMvcGFja2FnZS5qcyc7CmV4cG9ydCB7IFNjaGVtYXRpY1N5bWJvbCB9IGZyb20gJy4vY29tcG9uZW50cy9zeW1ib2wuanMnOwpleHBvcnQgeyBJbnN0YW5jZSB9IGZyb20gJy4vY29tcG9uZW50cy9pbnN0YW5jZS5qcyc7CmV4cG9ydCB7IFNoZWV0IH0gZnJvbSAnLi9jb21wb25lbnRzL3NoZWV0LmpzJzsKAAAAAAAAAAAPCwAAAAAAAAAAAAAAAAAAAAAAAA8LAAAAAAAAAAAAAAAAAAAAAAAADwsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgDAAAAAAAAfwMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "test-imread.js",
			"settings":
			{
				"buffer_size": 4218,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAADwHAAAAAAAAawcAAAAAAAAAAAAAawcAAAAAAABrBwAAAAAAACMAAAAvaG9tZS9yb21hbi9Eb2t1bWVudGUvbm9raWE1NTEwLnBuZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAXwcAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAADAHAAAAAAAAMAcAAAAAAAA8AAAAYXJnc1swXSA/PyAnL2hvbWUvcm9tYW4vRG9rdW1lbnRlL1VyemVpdGNvZGUvZm9udC0xNHgyNC5wbmcn",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAHAAAAAAAAbAcAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAADAHAAAAAAAAMQcAAAAAAAAAAAAAMQcAAAAAAAAyBwAAAAAAAAAAAAAyBwAAAAAAADMHAAAAAAAAAAAAADMHAAAAAAAANAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAHAAAAAAAAMAcAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADQHAAAAAAAANgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQHAAAAAAAANAcAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUHAAAAAAAANQcAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABgHAAAAAAAAGQcAAAAAAAAAAAAAGQcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHgcAAAAAAAAAAAAAGQcAAAAAAAAZBwAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgHAAAAAAAAGAcAAAAAAAD////////vfw"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAABwHAAAAAAAAWAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwHAAAAAAAAHAcAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACYHAAAAAAAAJwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYHAAAAAAAAJgcAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFkHAAAAAAAAWgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkHAAAAAAAAWQcAAAAAAAD////////vfw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAAWwcAAAAAAABdBwAAAAAAAAAAAABdBwAAAAAAAF4HAAAAAAAAAAAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoHAAAAAAAAWgcAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAABiBwAAAAAAAGMHAAAAAAAAAAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGUHAAAAAAAAZgcAAAAAAAAAAAAAZgcAAAAAAABnBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUHAAAAAAAAZQcAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " path.pa"
					},
					"CAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABpBwAAAAAAAAAAAABpBwAAAAAAAGoHAAAAAAAAAAAAAGoHAAAAAAAAawcAAAAAAAAAAAAAawcAAAAAAABsBwAAAAAAAAAAAABsBwAAAAAAAG0HAAAAAAAAAAAAAG0HAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABvBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcHAAAAAAAAZwcAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					2,
					"left_delete",
					null,
					"AgAAAG4HAAAAAAAAbgcAAAAAAAABAAAAYW0HAAAAAAAAbQcAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8HAAAAAAAAbwcAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "basename"
					},
					"CAAAAG0HAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABvBwAAAAAAAAAAAABvBwAAAAAAAHAHAAAAAAAAAAAAAHAHAAAAAAAAcQcAAAAAAAAAAAAAcQcAAAAAAAByBwAAAAAAAAAAAAByBwAAAAAAAHMHAAAAAAAAAAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAAdAcAAAAAAAB1BwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0HAAAAAAAAbQcAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUHAAAAAAAAdwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUHAAAAAAAAdQcAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYHAAAAAAAAdgcAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHoHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoHAAAAAAAAegcAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAHsHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsHAAAAAAAAewcAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH4HAAAAAAAAfwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4HAAAAAAAAfgcAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8HAAAAAAAAfwcAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " reoslu"
					},
					"BwAAAIUHAAAAAAAAhgcAAAAAAAAAAAAAhgcAAAAAAACHBwAAAAAAAAAAAACHBwAAAAAAAIgHAAAAAAAAAAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUHAAAAAAAAhQcAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					4,
					"left_delete",
					null,
					"BAAAAIsHAAAAAAAAiwcAAAAAAAABAAAAdYoHAAAAAAAAigcAAAAAAAABAAAAbIkHAAAAAAAAiQcAAAAAAAABAAAAc4gHAAAAAAAAiAcAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "df"
					},
					"AwAAAIYHAAAAAAAAhwcAAAAAAAAAAAAAhwcAAAAAAACHBwAAAAAAAAIAAAByZYcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYHAAAAAAAAiAcAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAIcHAAAAAAAAhwcAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgHAAAAAAAAiAcAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "im"
					},
					"AgAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACJBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcHAAAAAAAAhwcAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " =v"
					},
					"AwAAAIkHAAAAAAAAigcAAAAAAAAAAAAAigcAAAAAAACLBwAAAAAAAAAAAACLBwAAAAAAAIwHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkHAAAAAAAAiQcAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAIsHAAAAAAAAiwcAAAAAAAABAAAAdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"paste",
					null,
					"AQAAAIsHAAAAAAAAzgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsHAAAAAAAAiwcAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					5,
					"left_delete",
					null,
					"BQAAAI8HAAAAAAAAjwcAAAAAAAAGAAAACnFqc20+jgcAAAAAAACOBwAAAAAAAAEAAABdjQcAAAAAAACNBwAAAAAAAAEAAAAgjAcAAAAAAACMBwAAAAAAAAEAAAA0iwcAAAAAAACLBwAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUHAAAAAAAAjwcAAAAAAAD////////vfw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BQAAAJAHAAAAAAAAkQcAAAAAAAAAAAAAkQcAAAAAAACRBwAAAAAAABAAAAAnZm9udC0xNHgyNC5wbmcnkQcAAAAAAACSBwAAAAAAAAAAAACSBwAAAAAAAJMHAAAAAAAAAAAAAJMHAAAAAAAAlAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAHAAAAAAAAoAcAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALcHAAAAAAAAuAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcHAAAAAAAAtwcAAAAAAAD////////vfw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAIwHAAAAAAAAjQcAAAAAAAAAAAAAjQcAAAAAAACOBwAAAAAAAAAAAACOBwAAAAAAAI8HAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwHAAAAAAAAjAcAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " cv.Size(."
					},
					"CgAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACRBwAAAAAAAAAAAACRBwAAAAAAAJIHAAAAAAAAAAAAAJIHAAAAAAAAkwcAAAAAAAAAAAAAkwcAAAAAAACUBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8HAAAAAAAAjwcAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJkHAAAAAAAAmgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkHAAAAAAAAmQcAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAJkHAAAAAAAAmQcAAAAAAAABAAAALpgHAAAAAAAAmAcAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoHAAAAAAAAmgcAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAAMMHAAAAAAAAwwcAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQHAAAAAAAAxAcAAAAAAAD////////vfw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMHAAAAAAAAwwcAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"paste",
					null,
					"AQAAAMYHAAAAAAAA7QcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYHAAAAAAAAxgcAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"paste",
					null,
					"AgAAANUHAAAAAAAA2AcAAAAAAAAAAAAA2AcAAAAAAADYBwAAAAAAAAIAAABjdg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUHAAAAAAAA1wcAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"paste",
					null,
					"AgAAANsHAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADeBwAAAAAAABAAAABmZWF0dXJlczJkX25hbWVz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsHAAAAAAAA6wcAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "du"
					},
					"AwAAAGwKAAAAAAAAbQoAAAAAAAAAAAAAbQoAAAAAAABtCgAAAAAAABMAAABuZXcgY3YuU2l6ZSgxNCwgMjQpbQoAAAAAAABuCgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwKAAAAAAAAfwoAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAG0KAAAAAAAAbQoAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4KAAAAAAAAbgoAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "im"
					},
					"AgAAAG0KAAAAAAAAbgoAAAAAAAAAAAAAbgoAAAAAAABvCgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0KAAAAAAAAbQoAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "dim.width"
					},
					"CgAAAB0LAAAAAAAAHgsAAAAAAAAAAAAAHgsAAAAAAAAeCwAAAAAAAAIAAAAxNB4LAAAAAAAAHwsAAAAAAAAAAAAAHwsAAAAAAAAgCwAAAAAAAAAAAAAgCwAAAAAAACELAAAAAAAAAAAAACELAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAjCwAAAAAAAAAAAAAjCwAAAAAAACQLAAAAAAAAAAAAACQLAAAAAAAAJQsAAAAAAAAAAAAAJQsAAAAAAAAmCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0LAAAAAAAAHwsAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": ",pixelf"
					},
					"BwAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACVBAAAAAAAAAAAAACVBAAAAAAAAJYEAAAAAAAAAAAAAJYEAAAAAAAAlwQAAAAAAAAAAAAAlwQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJkEAAAAAAAAAAAAAJkEAAAAAAAAmgQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMEAAAAAAAAkwQAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAJoEAAAAAAAAmwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoEAAAAAAAAmgQAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJsEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACdBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsEAAAAAAAAmwQAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0EAAAAAAAAnQQAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAKEEAAAAAAAAogQAAAAAAAAAAAAAogQAAAAAAACjBAAAAAAAAAAAAACjBAAAAAAAAKQEAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEEAAAAAAAAoQQAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAAKQEAAAAAAAApQQAAAAAAAAAAAAApQQAAAAAAACmBAAAAAAAAAAAAACmBAAAAAAAAKcEAAAAAAAAAAAAAKcEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAKgEAAAAAAAAqQQAAAAAAAAAAAAAqQQAAAAAAACqBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoEAAAAAAAAqwQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoEAAAAAAAAqgQAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKsEAAAAAAAArQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsEAAAAAAAAqwQAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "1:"
					},
					"AgAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwEAAAAAAAArAQAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAK0EAAAAAAAArQQAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4EAAAAAAAArgQAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4EAAAAAAAArgQAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAEAAAAAAAAsAQAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALEEAAAAAAAAswQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALEEAAAAAAAAsQQAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALIEAAAAAAAAswQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIEAAAAAAAAsgQAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "pixelfn("
					},
					"CAAAACIFAAAAAAAAIwUAAAAAAAAAAAAAIwUAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACUFAAAAAAAAAAAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAAqBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIFAAAAAAAAIgUAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "="
					},
					"AgAAADgFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA5BQAAAAAAAAwAAAAgPyAnMScgOiAnMCc",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgFAAAAAAAARAUAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"left_delete",
					null,
					"AQAAADgFAAAAAAAAOAUAAAAAAAABAAAAPQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkFAAAAAAAAOQUAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADgFAAAAAAAAOQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgFAAAAAAAAOAUAAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8MAAAAAAAAEAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8MAAAAAAAADwwAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAABAMAAAAAAAAEQwAAAAAAAAAAAAAEQwAAAAAAAASDAAAAAAAAAAAAAASDAAAAAAAABMMAAAAAAAAAAAAABMMAAAAAAAAFAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAMAAAAAAAAEAwAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQMAAAAAAAAFAwAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcMAAAAAAAAFwwAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABgMAAAAAAAAGgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABgMAAAAAAAAGAwAAAAAAAABAAAAJxgMAAAAAAAAGAwAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkMAAAAAAAAGQwAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "bit"
					},
					"AwAAABgMAAAAAAAAGQwAAAAAAAAAAAAAGQwAAAAAAAAaDAAAAAAAAAAAAAAaDAAAAAAAABsMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgMAAAAAAAAGAwAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAABsMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAdDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsMAAAAAAAAGwwAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0MAAAAAAAAHgwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0MAAAAAAAAHQwAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB4MAAAAAAAAIAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4MAAAAAAAAHgwAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					2,
					"paste",
					null,
					"AgAAAB8MAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAhDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8MAAAAAAAAHwwAAAAAAAAAAAAAAADwvw"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAACIMAAAAAAAAIwwAAAAAAAAAAAAAIwwAAAAAAAAkDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIMAAAAAAAAIgwAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAADwvw"
				],
				[
					184,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACUMAAAAAAAAJwwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUMAAAAAAAAJQwAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAACYMAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAoDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYMAAAAAAAAJgwAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 26752,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/events.js",
			"settings":
			{
				"buffer_size": 5255,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/mnt/sl-ubuntu/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/lib/deep.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/xml/util.js",
		"/home/roman/Projects/plot-cv/lib/tXml.js",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/test-bitset.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/127.0.0.1.har",
		"/home/roman/Projects/plot-cv/libs.js",
		"/home/roman/Projects/plot-cv/lib/color/rgba.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/lib/devtools.js",
		"/home/roman/Projects/plot-cv/check-discogs.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/test-glfw.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/err",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc/latex/unionVector.tex",
		"/home/roman/.config/sublime-text/Packages/User/Themes/[ Argonaut ].tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/usr/include/archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,*.js,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/qjs-opencv/opencv*/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/qjs-opencv/opencv*/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/opencv_contrib/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/(libwebsockets|glfw|nanovg)/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h",
			"/home/roman/Projects/plot-cv,*.[ch]pp,*.[ch]",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"body =",
			"read",
			"tls",
			"events",
			"Util.isObject =",
			"symme",
			"elector",
			"compact",
			"misc\\.",
			"Rect",
			"VSPLIT:",
			"hsplit",
			"function ws",
			"dl\\(",
			"rotate =",
			"rotate",
			"begin",
			"context",
			"new GL$",
			"GLFW",
			"context =",
			"interpolate",
			"1\\.0 -",
			"alpha, ",
			"1 -",
			"1\\.0 -",
			"WINDOW_",
			"GLFW",
			"Window"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"util."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 327,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/mnt/sl-ubuntu/Projects/plot-cv/adsb-client.js",
							"function_name_status_row": 5,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									752,
									782
								],
								[
									858,
									878
								],
								[
									996,
									1008
								],
								[
									1032,
									1059
								],
								[
									1074,
									1092
								],
								[
									1328,
									1340
								],
								[
									1349,
									1374
								],
								[
									1457,
									1466
								],
								[
									1555,
									1583
								],
								[
									1794,
									1814
								],
								[
									1872,
									1896
								],
								[
									1959,
									1982
								],
								[
									2318,
									2326
								],
								[
									3216,
									3235
								],
								[
									3477,
									3510
								],
								[
									3909,
									3916
								],
								[
									3929,
									3947
								],
								[
									4091,
									4099
								],
								[
									4374,
									4380
								]
							],
							"symlist":
							[
								"PutsFunction = outFn => str =>",
								"FileWriter = file =>",
								"  close: () =>",
								"FdWriter(fd, name)",
								"  fn = (buf, len) =>",
								"  close: () =>",
								"  seek: (whence, offset) =>",
								"  inspect()",
								"  main(...args)",
								"\t(level, message) =>",
								"DailyPhase(t)",
								"PhaseFile(t)",
								"  phase =>",
								"  onMessage(req, res)",
								"ProcessResponse(buf)",
								"  item =>",
								"(acc, field, i) =>",
								"(a,b) =>",
								"  err =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648184020.32,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "clang-ast.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74423,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650744808.68,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11378.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "adsb-client.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4451,
						"regions":
						{
						},
						"selection":
						[
							[
								851,
								851
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 15,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650760233.98,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3300.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "map.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 147,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650746459.27,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "map.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7717,
						"regions":
						{
						},
						"selection":
						[
							[
								1411,
								1411
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 33,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650760209.06,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 600.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11270,
						"regions":
						{
						},
						"selection":
						[
							[
								9268,
								9268
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 244,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650747730.7,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5718.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "clang-list.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9298,
						"regions":
						{
						},
						"selection":
						[
							[
								1875,
								1878
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648345956.33,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ast-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38776,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650744796.76,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17551.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15493,
						"regions":
						{
						},
						"selection":
						[
							[
								6977,
								7978
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 203,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1650747057.08,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5200.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4320,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 45,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648422479.77,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "make-bitmap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2275,
						"regions":
						{
						},
						"selection":
						[
							[
								896,
								896
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648117921.68,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/eagle/components.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2831,
						"regions":
						{
						},
						"selection":
						[
							[
								888,
								895
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648118818.7,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "test-imread.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4218,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 89,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648201264.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1008.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26752,
						"regions":
						{
						},
						"selection":
						[
							[
								950,
								956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648201469.04,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/events.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5255,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648344342.56,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621681009616)":
	{
		"height": 0.0
	},
	"output.Protocol(139717987054208)":
	{
		"height": 0.0
	},
	"output.Protocol(139737090363696)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175772064)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995355088)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266795888)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144933008)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508860304)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145502288)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426906992)":
	{
		"height": 0.0
	},
	"output.Protocol(140585354219824)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239275824)":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"adsb-client.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"map.js",
				"map.js"
			],
			[
				"map.",
				"map.html"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"clang-lis",
				"clang-list.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-im",
				"test-imread.js"
			],
			[
				"compon",
				"lib/eagle/components.js"
			],
			[
				"make-bit",
				"make-bitmap.js"
			],
			[
				"bitmap",
				"make-bitmap.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"txml",
				"lib/tXml.js"
			],
			[
				"css.g4",
				"lib/grammars/css3.g4"
			],
			[
				"test-imread",
				"test-imread.js"
			],
			[
				"test-uma",
				"test-umat.js"
			],
			[
				"test-bitset",
				"test-bitset.js"
			],
			[
				"test_gif",
				"qjs-opencv/tests/test_gif.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"devtoo",
				"lib/devtools.js"
			],
			[
				"check-disc",
				"check-discogs.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"draw-utils",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"rgba.js",
				"lib/color/rgba.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-glfw",
				"test-glfw.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
