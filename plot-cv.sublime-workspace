{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"MIDI",
				"MIDIMessageRead"
			],
			[
				"i",
				"is_dir"
			],
			[
				"getText",
				"getTextArray"
			],
			[
				"Lin",
				"LinearTransform"
			],
			[
				"CURL_LIB",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"Circ",
				"CircuitJS"
			],
			[
				"dep",
				"dependency"
			],
			[
				"opt",
				"optimization"
			],
			[
				"OPENCV_LIB",
				"OPENCV_LIBRARIES"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"relat",
				"relativeTo"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "NTH_POINT: c =>\nRADIAL_DISTANCE: c =>\nPERPENDICULAR_DISTANCE: c =>\nREUMANN_WITKAM: c =>\nOPHEIM: c =>\nLANG: c =>\nDOUGLAS_PEUCKER: c =>\nHierarchy(array)\n  .index = function(id)\n  .index = function(id)\nHierarchy\n  parent(id)\n  child(id)\n  next(id)\n  prev(id)\n  getConstants(names)\n  name =>\n  findConstant(value, keyCond = k => /^CV/.\n(k))\n  (v, k) =>\n  findType(value)\n  k =>\n  getBitDepth(mat)\n(...args) =>\n  minMax(mat)\n  modifierMap(keyCode)\n([modifier, flag]) =>\n  drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)\n  getParents(hier, id)\n  getContourDepth(hier, id)\n  findRoot(hier)\n  h =>\n  getToplevel(hier)\n  walkContours(hier, id)\n  main(...args)\n  () =>\n  (file, current) =>\n  (arg, current, options, results) =>\n  makeRainbow = steps =>\n  hue =>\n  h =>\n  printFlags = flags =>\n(event, x, y, flags)\nAcquireFrame(src, dst)\nGrayscale(src, dst)\nNorm(src, dst)\nBlur(src, dst)\nEdgeDetect(src, dst)\nMorph(src, dst)\nContours(src, dst)\n  h =>\nHoughLines(src, dst)\n  (i, n) =>\n  image =>\n  function(value, count, name, window)\n() =>\nClearSurface = mat =>\nMakeSurface = () =>\n(...args) =>\n() =>\n  (acc, [modifier, active]) =>\n  n =>\n  showOutput()\n([i, id]) =>\n  drawParam(param, y, color)\n  saveContours(contours, size)\n(acc, contour, i) =>\n  d =>\n  saveLines(lines, size)\n  coords =>\n([x1, y1, x2, y2]) =>\n(a, [k, v]) =>\n  frame =>\n  frame =>",
			"settings":
			{
				"buffer_size": 1362,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					748,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-image.js",
						"symkeys":
						[
							[
								1359,
								1374
							],
							[
								1400,
								1421
							],
							[
								1454,
								1482
							],
							[
								1522,
								1542
							],
							[
								1572,
								1584
							],
							[
								1607,
								1617
							],
							[
								1638,
								1659
							],
							[
								1691,
								1716
							],
							[
								1761,
								1782
							],
							[
								1858,
								1879
							],
							[
								1979,
								1988
							],
							[
								2006,
								2016
							],
							[
								2078,
								2087
							],
							[
								2148,
								2156
							],
							[
								2216,
								2224
							],
							[
								3983,
								4005
							],
							[
								4380,
								4384
							],
							[
								4663,
								4676
							],
							[
								4833,
								4852
							],
							[
								4917,
								4960
							],
							[
								5773,
								5795
							],
							[
								5858,
								5864
							],
							[
								5900,
								5904
							],
							[
								6085,
								6106
							],
							[
								6268,
								6297
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function main(...args)",
							"n =>",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAACvAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					749,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACvAQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgbWFpbiguLi5hcmdzKQogIG4gPT4KICAoKSA9PgogIChmaWxlLCBjdXJyZW50KSA9PgogIChhcmcsIGN1cnJlbnQsIG9wdGlvbnMsIHJlc3VsdHMpID0+CiAgbWFrZVJhaW5ib3cgPSBzdGVwcyA9PgogIGh1ZSA9PgogIGggPT4KICBwcmludEZsYWdzID0gZmxhZ3MgPT4KKGV2ZW50LCB4LCB5LCBmbGFncykAAAAAAAAAAFIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					750,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					751,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1489,
								1504
							],
							[
								1554,
								1579
							],
							[
								1639,
								1665
							],
							[
								1719,
								1747
							],
							[
								1805,
								1825
							],
							[
								1880,
								1904
							],
							[
								1963,
								1999
							],
							[
								2072,
								2111
							],
							[
								2185,
								2206
							],
							[
								2262,
								2284
							],
							[
								2341,
								2371
							],
							[
								2436,
								2474
							],
							[
								2547,
								2560
							],
							[
								2608,
								2631
							],
							[
								2689,
								2711
							],
							[
								2793,
								2797
							],
							[
								2825,
								2830
							],
							[
								2893,
								2898
							],
							[
								2965,
								2969
							],
							[
								2993,
								3006
							],
							[
								3090,
								3105
							],
							[
								3181,
								3196
							],
							[
								3605,
								3610
							],
							[
								3687,
								3696
							],
							[
								3877,
								3901
							],
							[
								4304,
								4335
							],
							[
								4571,
								4604
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AQAAAAAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					752,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					753,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1489,
								1504
							],
							[
								1554,
								1579
							],
							[
								1639,
								1665
							],
							[
								1719,
								1747
							],
							[
								1805,
								1825
							],
							[
								1880,
								1904
							],
							[
								1963,
								1999
							],
							[
								2072,
								2111
							],
							[
								2185,
								2206
							],
							[
								2262,
								2284
							],
							[
								2341,
								2371
							],
							[
								2436,
								2474
							],
							[
								2547,
								2560
							],
							[
								2608,
								2631
							],
							[
								2689,
								2711
							],
							[
								2793,
								2797
							],
							[
								2825,
								2830
							],
							[
								2893,
								2898
							],
							[
								2965,
								2969
							],
							[
								2993,
								3006
							],
							[
								3090,
								3105
							],
							[
								3181,
								3196
							],
							[
								3605,
								3610
							],
							[
								3687,
								3696
							],
							[
								3877,
								3901
							],
							[
								4304,
								4335
							],
							[
								4571,
								4604
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AQAAAAAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					754,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3930,
								3954
							],
							[
								4357,
								4388
							],
							[
								4624,
								4657
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsCAABHTEZXKHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgPSB7fSkKICBoYW5kbGVQb3MoeCwgeSkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlQ2xvc2Uod2luZG93ID0gdGhpcykKICBoYW5kbGVSZWZyZXNoKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlRm9jdXMoZm9jdXNlZCkKICBoYW5kbGVJY29uaWZ5KGljb25pZmllZCkKICBoYW5kbGVGcmFtZWJ1ZmZlclNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBoYW5kbGVDdXJzb3JFbnRlcihjdXIpCiAgaGFuZGxlU2Nyb2xsKHhvZmZzZXQsIHlvZmZzZXQpCiAgaGFuZGxlS2V5KGtleSwgc2NhbmNvZGUsIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDaGFyKGMpCiAgaGFuZGxlQ2hhck1vZHMoYywgbW9kcykKICBoYW5kbGVEcm9wKGFyZ2MsIGFyZ3YpCkdMRlcKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					755,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					756,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3930,
								3954
							],
							[
								4357,
								4388
							],
							[
								4624,
								4657
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					757,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3931,
								3955
							],
							[
								4358,
								4389
							],
							[
								4625,
								4658
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					758,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3931,
								3955
							],
							[
								4358,
								4389
							],
							[
								4625,
								4658
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsCAABHTEZXKHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgPSB7fSkKICBoYW5kbGVQb3MoeCwgeSkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlQ2xvc2Uod2luZG93ID0gdGhpcykKICBoYW5kbGVSZWZyZXNoKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlRm9jdXMoZm9jdXNlZCkKICBoYW5kbGVJY29uaWZ5KGljb25pZmllZCkKICBoYW5kbGVGcmFtZWJ1ZmZlclNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBoYW5kbGVDdXJzb3JFbnRlcihjdXIpCiAgaGFuZGxlU2Nyb2xsKHhvZmZzZXQsIHlvZmZzZXQpCiAgaGFuZGxlS2V5KGtleSwgc2NhbmNvZGUsIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDaGFyKGMpCiAgaGFuZGxlQ2hhck1vZHMoYywgbW9kcykKICBoYW5kbGVEcm9wKGFyZ2MsIGFyZ3YpCkdMRlcKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					759,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3933,
								3957
							],
							[
								4360,
								4391
							],
							[
								4627,
								4660
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					760,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3935,
								3959
							],
							[
								4362,
								4393
							],
							[
								4629,
								4662
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					761,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					762,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					763,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AwAAAAAAAAAAAAAAUgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIFAABOVEhfUE9JTlQ6IGMgPT4KUkFESUFMX0RJU1RBTkNFOiBjID0+ClBFUlBFTkRJQ1VMQVJfRElTVEFOQ0U6IGMgPT4KUkVVTUFOTl9XSVRLQU06IGMgPT4KT1BIRUlNOiBjID0+CkxBTkc6IGMgPT4KRE9VR0xBU19QRVVDS0VSOiBjID0+CkhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgbmFtZSA9PgogIGZpbmRDb25zdGFudCh2YWx1ZSwga2V5Q29uZCA9IGsgPT4gL15DVi8uCihrKSkKICAodiwgaykgPT4KICBmaW5kVHlwZSh2YWx1ZSkKICBrID0+CiAgZ2V0Qml0RGVwdGgobWF0KQooLi4uYXJncykgPT4KICBtaW5NYXgobWF0KQogIG1vZGlmaWVyTWFwKGtleUNvZGUpCihbbW9kaWZpZXIsIGZsYWddKSA9PgogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGggPT4KICBnZXRUb3BsZXZlbChoaWVyKQogIHdhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCiAgKCkgPT4KICAoZmlsZSwgY3VycmVudCkgPT4KICAoYXJnLCBjdXJyZW50LCBvcHRpb25zLCByZXN1bHRzKSA9PgogIG1ha2VSYWluYm93ID0gc3RlcHMgPT4KICBodWUgPT4KICBoID0+CiAgcHJpbnRGbGFncyA9IGZsYWdzID0+CihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCiAgaCA9PgpIb3VnaExpbmVzKHNyYywgZHN0KQogIChpLCBuKSA9PgogIGltYWdlID0+CiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCigpID0+CkNsZWFyU3VyZmFjZSA9IG1hdCA9PgpNYWtlU3VyZmFjZSA9ICgpID0+CiguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBuID0+CiAgc2hvd091dHB1dCgpCihbaSwgaWRdKSA9PgogIGRyYXdQYXJhbShwYXJhbSwgeSwgY29sb3IpCiAgc2F2ZUNvbnRvdXJzKGNvbnRvdXJzLCBzaXplKQooYWNjLCBjb250b3VyLCBpKSA9PgogIGQgPT4KICBzYXZlTGluZXMobGluZXMsIHNpemUpCiAgY29vcmRzID0+CihbeDEsIHkxLCB4MiwgeTJdKSA9PgooYSwgW2ssIHZdKSA9PgogIGZyYW1lID0+CiAgZnJhbWUgPT4AAAAAAAAAAFIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					764,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAE5USF9QT0lOVDogYyA9PgpSQURJQUxfRElTVEFOQ0U6IGMgPT4KUEVSUEVORElDVUxBUl9ESVNUQU5DRTogYyA9PgpSRVVNQU5OX1dJVEtBTTogYyA9PgpPUEhFSU06IGMgPT4KTEFORzogYyA9PgpET1VHTEFTX1BFVUNLRVI6IGMgPT4KSGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBuYW1lID0+CiAgZmluZENvbnN0YW50KHZhbHVlLCBrZXlDb25kID0gayA9PiAvXkNWLy4KKGspKQogICh2LCBrKSA9PgogIGZpbmRUeXBlKHZhbHVlKQogIGsgPT4KICBnZXRCaXREZXB0aChtYXQpCiguLi5hcmdzKSA9PgogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKKFttb2RpZmllciwgZmxhZ10pID0+CiAgZHJhd0NvbnRvdXIobWF0LCBjb250b3VyLCBjb2xvciwgdGhpY2tuZXNzID0gMSwgbGluZVR5cGUgPSBjdi5MSU5FX0FBKQogIGdldFBhcmVudHMoaGllciwgaWQpCiAgZ2V0Q29udG91ckRlcHRoKGhpZXIsIGlkKQogIGZpbmRSb290KGhpZXIpCiAgaCA9PgogIGdldFRvcGxldmVsKGhpZXIpCiAgd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKICAoKSA9PgogIChmaWxlLCBjdXJyZW50KSA9PgogIChhcmcsIGN1cnJlbnQsIG9wdGlvbnMsIHJlc3VsdHMpID0+CiAgbWFrZVJhaW5ib3cgPSBzdGVwcyA9PgogIGh1ZSA9PgogIGggPT4KICBwcmludEZsYWdzID0gZmxhZ3MgPT4KKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKICBoID0+CkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgKGksIG4pID0+CiAgaW1hZ2UgPT4KICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKKCkgPT4KQ2xlYXJTdXJmYWNlID0gbWF0ID0+Ck1ha2VTdXJmYWNlID0gKCkgPT4KKC4uLmFyZ3MpID0+CigpID0+CiAgKGFjYywgW21vZGlmaWVyLCBhY3RpdmVdKSA9PgogIG4gPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					765,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3935,
								3959
							],
							[
								4362,
								4393
							],
							[
								4629,
								4662
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					766,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					767,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3935,
								3959
							],
							[
								4362,
								4393
							],
							[
								4629,
								4662
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					768,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					769,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								522,
								565
							],
							[
								1542,
								1557
							],
							[
								1607,
								1632
							],
							[
								1692,
								1718
							],
							[
								1772,
								1800
							],
							[
								1858,
								1878
							],
							[
								1933,
								1957
							],
							[
								2016,
								2052
							],
							[
								2125,
								2164
							],
							[
								2238,
								2259
							],
							[
								2315,
								2337
							],
							[
								2394,
								2424
							],
							[
								2489,
								2527
							],
							[
								2600,
								2613
							],
							[
								2661,
								2684
							],
							[
								2742,
								2764
							],
							[
								2846,
								2850
							],
							[
								2878,
								2883
							],
							[
								2946,
								2951
							],
							[
								3018,
								3022
							],
							[
								3046,
								3059
							],
							[
								3143,
								3158
							],
							[
								3234,
								3249
							],
							[
								3658,
								3663
							],
							[
								3740,
								3749
							],
							[
								3935,
								3959
							],
							[
								4362,
								4393
							],
							[
								4629,
								4662
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					770,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3025,
								3029
							],
							[
								3053,
								3066
							],
							[
								3150,
								3165
							],
							[
								3241,
								3256
							],
							[
								3665,
								3670
							],
							[
								3747,
								3756
							],
							[
								3942,
								3966
							],
							[
								4369,
								4400
							],
							[
								4636,
								4669
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAawIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsCAABHTEZXKHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgPSB7fSkKICBoYW5kbGVQb3MoeCwgeSkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlQ2xvc2Uod2luZG93ID0gdGhpcykKICBoYW5kbGVSZWZyZXNoKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlRm9jdXMoZm9jdXNlZCkKICBoYW5kbGVJY29uaWZ5KGljb25pZmllZCkKICBoYW5kbGVGcmFtZWJ1ZmZlclNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBoYW5kbGVDdXJzb3JFbnRlcihjdXIpCiAgaGFuZGxlU2Nyb2xsKHhvZmZzZXQsIHlvZmZzZXQpCiAgaGFuZGxlS2V5KGtleSwgc2NhbmNvZGUsIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDaGFyKGMpCiAgaGFuZGxlQ2hhck1vZHMoYywgbW9kcykKICBoYW5kbGVEcm9wKGFyZ2MsIGFyZ3YpCkdMRlcKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABrAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					771,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					772,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3025,
								3029
							],
							[
								3053,
								3066
							],
							[
								3150,
								3165
							],
							[
								3241,
								3256
							],
							[
								3665,
								3670
							],
							[
								3747,
								3756
							],
							[
								3942,
								3966
							],
							[
								4369,
								4400
							],
							[
								4636,
								4669
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AQAAAAAAAAAAAAAAawIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					773,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3112,
								3116
							],
							[
								3140,
								3153
							],
							[
								3237,
								3252
							],
							[
								3328,
								3343
							],
							[
								3752,
								3757
							],
							[
								3834,
								3843
							],
							[
								4029,
								4053
							],
							[
								4456,
								4487
							],
							[
								4723,
								4756
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABrAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAcwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMCAABHTEZXKHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgPSB7fSkKICBoYW5kbGVQb3MoeCwgeSkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlQ2xvc2Uod2luZG93ID0gdGhpcykKICBoYW5kbGVSZWZyZXNoKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlRm9jdXMoZm9jdXNlZCkKICBoYW5kbGVJY29uaWZ5KGljb25pZmllZCkKICBoYW5kbGVGcmFtZWJ1ZmZlclNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBoYW5kbGVDdXJzb3JFbnRlcihjdXIpCiAgaGFuZGxlU2Nyb2xsKHhvZmZzZXQsIHlvZmZzZXQpCiAgaGFuZGxlS2V5KGtleSwgc2NhbmNvZGUsIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDaGFyKGMpCiAgaGFuZGxlQ2hhck1vZHMoYywgbW9kcykKICBoYW5kbGVEcm9wKGFyZ2MsIGFyZ3YpCkdMRlcKICBnZXQoKQogIGdldCgpCiAgZ2V0KCkKR0xGVwogIG1vdmUoLi4uYXJncykKICByZXNpemUoLi4uYXJncykKICBzZXRUaXRsZSh0aXRsZSkKICBlbmQoKQogIHNob3cobWF0KQpNYXQySW1hZ2UobWF0KQpEcmF3SW1hZ2UoaW1hZ2UsIHBvcykKRHJhd0NpcmNsZShwb3MsIHJhZGl1cykAAAAAAAAAAHMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					774,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3112,
								3116
							],
							[
								3140,
								3153
							],
							[
								3237,
								3252
							],
							[
								3328,
								3343
							],
							[
								3752,
								3757
							],
							[
								3834,
								3843
							],
							[
								4029,
								4053
							],
							[
								4456,
								4487
							],
							[
								4723,
								4756
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					775,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3105,
								3109
							],
							[
								3133,
								3146
							],
							[
								3230,
								3245
							],
							[
								3321,
								3336
							],
							[
								3745,
								3750
							],
							[
								3827,
								3836
							],
							[
								4022,
								4046
							],
							[
								4449,
								4480
							],
							[
								4716,
								4749
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABzAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcwIAAEdMRlcod2lkdGgsIGhlaWdodCwgb3B0aW9ucyA9IHt9KQogIGhhbmRsZVBvcyh4LCB5KQogIGhhbmRsZVNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVDbG9zZSh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZVJlZnJlc2god2luZG93ID0gdGhpcykKICBoYW5kbGVGb2N1cyhmb2N1c2VkKQogIGhhbmRsZUljb25pZnkoaWNvbmlmaWVkKQogIGhhbmRsZUZyYW1lYnVmZmVyU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIGhhbmRsZUN1cnNvckVudGVyKGN1cikKICBoYW5kbGVTY3JvbGwoeG9mZnNldCwgeW9mZnNldCkKICBoYW5kbGVLZXkoa2V5LCBzY2FuY29kZSwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUNoYXIoYykKICBoYW5kbGVDaGFyTW9kcyhjLCBtb2RzKQogIGhhbmRsZURyb3AoYXJnYywgYXJndikKR0xGVwogIGdldCgpCiAgZ2V0KCkKICBnZXQoKQpHTEZXCiAgbW92ZSguLi5hcmdzKQogIHJlc2l6ZSguLi5hcmdzKQogIHNldFRpdGxlKHRpdGxlKQogIGVuZCgpCiAgc2hvdyhtYXQpCk1hdDJJbWFnZShtYXQpCkRyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKHBvcywgcmFkaXVzKQAAAAAAAAAAcwIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					776,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3105,
								3109
							],
							[
								3133,
								3146
							],
							[
								3230,
								3245
							],
							[
								3321,
								3336
							],
							[
								3745,
								3750
							],
							[
								3827,
								3836
							],
							[
								4022,
								4046
							],
							[
								4449,
								4480
							],
							[
								4716,
								4749
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					777,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3105,
								3109
							],
							[
								3133,
								3146
							],
							[
								3230,
								3245
							],
							[
								3321,
								3336
							],
							[
								3745,
								3750
							],
							[
								3827,
								3836
							],
							[
								4022,
								4046
							],
							[
								4449,
								4480
							],
							[
								4716,
								4749
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					778,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					779,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/draw-utils.js",
						"symkeys":
						[
							[
								529,
								572
							],
							[
								1549,
								1564
							],
							[
								1614,
								1639
							],
							[
								1699,
								1725
							],
							[
								1779,
								1807
							],
							[
								1865,
								1885
							],
							[
								1940,
								1964
							],
							[
								2023,
								2059
							],
							[
								2132,
								2171
							],
							[
								2245,
								2266
							],
							[
								2322,
								2344
							],
							[
								2401,
								2431
							],
							[
								2496,
								2534
							],
							[
								2607,
								2620
							],
							[
								2668,
								2691
							],
							[
								2749,
								2771
							],
							[
								2853,
								2857
							],
							[
								2885,
								2890
							],
							[
								2953,
								2958
							],
							[
								3026,
								3031
							],
							[
								3105,
								3109
							],
							[
								3133,
								3146
							],
							[
								3230,
								3245
							],
							[
								3321,
								3336
							],
							[
								3745,
								3750
							],
							[
								3827,
								3836
							],
							[
								4022,
								4046
							],
							[
								4449,
								4480
							],
							[
								4716,
								4749
							]
						],
						"symlist":
						[
							" function GLFW(width, height, options = {})",
							"handlePos(x, y)",
							"handleSize(width, height)",
							"handleClose(window = this)",
							"handleRefresh(window = this)",
							"handleFocus(focused)",
							"handleIconify(iconified)",
							"handleFramebufferSize(width, height)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"handleCursorEnter(cur)",
							"handleScroll(xoffset, yoffset)",
							"handleKey(key, scancode, action, mods)",
							"handleChar(c)",
							"handleCharMods(c, mods)",
							"handleDrop(argc, argv)",
							"GLFW",
							"get()",
							"get()",
							"get()",
							"GLFW",
							"move(...args)",
							"resize(...args)",
							"setTitle(title)",
							"end()",
							"show(mat)",
							" function Mat2Image(mat)",
							" function DrawImage(image, pos)",
							" function DrawCircle(pos, radius)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					780,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABzAgAAR0xGVyh3aWR0aCwgaGVpZ2h0LCBvcHRpb25zID0ge30pCiAgaGFuZGxlUG9zKHgsIHkpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKQogIGhhbmRsZUZvY3VzKGZvY3VzZWQpCiAgaGFuZGxlSWNvbmlmeShpY29uaWZpZWQpCiAgaGFuZGxlRnJhbWVidWZmZXJTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKQogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KQogIGhhbmRsZUtleShrZXksIHNjYW5jb2RlLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ2hhcihjKQogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpCiAgaGFuZGxlRHJvcChhcmdjLCBhcmd2KQpHTEZXCiAgZ2V0KCkKICBnZXQoKQogIGdldCgpCkdMRlcKICBtb3ZlKC4uLmFyZ3MpCiAgcmVzaXplKC4uLmFyZ3MpCiAgc2V0VGl0bGUodGl0bGUpCiAgZW5kKCkKICBzaG93KG1hdCkKTWF0MkltYWdlKG1hdCkKRHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUocG9zLCByYWRpdXMpAAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					781,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					782,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AwAAAAAAAAAAAAAAUgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIFAABOVEhfUE9JTlQ6IGMgPT4KUkFESUFMX0RJU1RBTkNFOiBjID0+ClBFUlBFTkRJQ1VMQVJfRElTVEFOQ0U6IGMgPT4KUkVVTUFOTl9XSVRLQU06IGMgPT4KT1BIRUlNOiBjID0+CkxBTkc6IGMgPT4KRE9VR0xBU19QRVVDS0VSOiBjID0+CkhpZXJhcmNoeShhcnJheSkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKICAuaW5kZXggPSBmdW5jdGlvbihpZCkKSGllcmFyY2h5CiAgcGFyZW50KGlkKQogIGNoaWxkKGlkKQogIG5leHQoaWQpCiAgcHJldihpZCkKICBnZXRDb25zdGFudHMobmFtZXMpCiAgbmFtZSA9PgogIGZpbmRDb25zdGFudCh2YWx1ZSwga2V5Q29uZCA9IGsgPT4gL15DVi8uCihrKSkKICAodiwgaykgPT4KICBmaW5kVHlwZSh2YWx1ZSkKICBrID0+CiAgZ2V0Qml0RGVwdGgobWF0KQooLi4uYXJncykgPT4KICBtaW5NYXgobWF0KQogIG1vZGlmaWVyTWFwKGtleUNvZGUpCihbbW9kaWZpZXIsIGZsYWddKSA9PgogIGRyYXdDb250b3VyKG1hdCwgY29udG91ciwgY29sb3IsIHRoaWNrbmVzcyA9IDEsIGxpbmVUeXBlID0gY3YuTElORV9BQSkKICBnZXRQYXJlbnRzKGhpZXIsIGlkKQogIGdldENvbnRvdXJEZXB0aChoaWVyLCBpZCkKICBmaW5kUm9vdChoaWVyKQogIGggPT4KICBnZXRUb3BsZXZlbChoaWVyKQogIHdhbGtDb250b3VycyhoaWVyLCBpZCkKICBtYWluKC4uLmFyZ3MpCiAgKCkgPT4KICAoZmlsZSwgY3VycmVudCkgPT4KICAoYXJnLCBjdXJyZW50LCBvcHRpb25zLCByZXN1bHRzKSA9PgogIG1ha2VSYWluYm93ID0gc3RlcHMgPT4KICBodWUgPT4KICBoID0+CiAgcHJpbnRGbGFncyA9IGZsYWdzID0+CihldmVudCwgeCwgeSwgZmxhZ3MpCkFjcXVpcmVGcmFtZShzcmMsIGRzdCkKR3JheXNjYWxlKHNyYywgZHN0KQpOb3JtKHNyYywgZHN0KQpCbHVyKHNyYywgZHN0KQpFZGdlRGV0ZWN0KHNyYywgZHN0KQpNb3JwaChzcmMsIGRzdCkKQ29udG91cnMoc3JjLCBkc3QpCiAgaCA9PgpIb3VnaExpbmVzKHNyYywgZHN0KQogIChpLCBuKSA9PgogIGltYWdlID0+CiAgZnVuY3Rpb24odmFsdWUsIGNvdW50LCBuYW1lLCB3aW5kb3cpCigpID0+CkNsZWFyU3VyZmFjZSA9IG1hdCA9PgpNYWtlU3VyZmFjZSA9ICgpID0+CiguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBuID0+CiAgc2hvd091dHB1dCgpCihbaSwgaWRdKSA9PgogIGRyYXdQYXJhbShwYXJhbSwgeSwgY29sb3IpCiAgc2F2ZUNvbnRvdXJzKGNvbnRvdXJzLCBzaXplKQooYWNjLCBjb250b3VyLCBpKSA9PgogIGQgPT4KICBzYXZlTGluZXMobGluZXMsIHNpemUpCiAgY29vcmRzID0+CihbeDEsIHkxLCB4MiwgeTJdKSA9PgooYSwgW2ssIHZdKSA9PgogIGZyYW1lID0+CiAgZnJhbWUgPT4AAAAAAAAAAFIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					783,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					784,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABSBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					785,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								17581,
								17604
							],
							[
								18403,
								18415
							],
							[
								18631,
								18670
							],
							[
								21197,
								21236
							],
							[
								21272,
								21292
							],
							[
								21915,
								21919
							],
							[
								22361,
								22394
							],
							[
								22478,
								22487
							],
							[
								22520,
								22541
							],
							[
								23444,
								23458
							],
							[
								23575,
								23591
							],
							[
								23730,
								23738
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABLBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					786,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17579,
								17602
							],
							[
								18401,
								18413
							],
							[
								18629,
								18668
							],
							[
								21195,
								21234
							],
							[
								21270,
								21290
							],
							[
								21913,
								21917
							],
							[
								22359,
								22392
							],
							[
								22476,
								22485
							],
							[
								22518,
								22539
							],
							[
								23442,
								23456
							],
							[
								23573,
								23589
							],
							[
								23728,
								23736
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABLBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgc2hvd091dHB1dCgpCihbaSwgaWRdKSA9PgogIGRyYXdQYXJhbShwYXJhbSwgeSwgY29sb3IpCiAgc2F2ZUNvbnRvdXJzKGNvbnRvdXJzLCBzaXplKQooYWNjLCBjb250b3VyLCBpKSA9PgogIGQgPT4KICBzYXZlTGluZXMobGluZXMsIHNpemUpCiAgY29vcmRzID0+CihbeDEsIHkxLCB4MiwgeTJdKSA9PgooYSwgW2ssIHZdKSA9PgogIGZyYW1lID0+CiAgZnJhbWUgPT4AAAAAAAAAAFIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					787,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1384,
								1399
							],
							[
								1425,
								1446
							],
							[
								1479,
								1507
							],
							[
								1547,
								1567
							],
							[
								1597,
								1609
							],
							[
								1632,
								1642
							],
							[
								1663,
								1684
							],
							[
								1716,
								1741
							],
							[
								1786,
								1807
							],
							[
								1883,
								1904
							],
							[
								2004,
								2013
							],
							[
								2031,
								2041
							],
							[
								2103,
								2112
							],
							[
								2173,
								2181
							],
							[
								2241,
								2249
							],
							[
								2311,
								2339
							],
							[
								2380,
								2387
							],
							[
								2431,
								2481
							],
							[
								2485,
								2489
							],
							[
								2512,
								2522
							],
							[
								2553,
								2577
							],
							[
								2608,
								2613
							],
							[
								2652,
								2677
							],
							[
								2925,
								2937
							],
							[
								2958,
								2978
							],
							[
								3052,
								3081
							],
							[
								3171,
								3192
							],
							[
								3233,
								3312
							],
							[
								3384,
								3414
							],
							[
								3484,
								3518
							],
							[
								3566,
								3589
							],
							[
								3616,
								3620
							],
							[
								3674,
								3701
							],
							[
								3779,
								3811
							],
							[
								4007,
								4029
							],
							[
								4571,
								4584
							],
							[
								4775,
								4794
							],
							[
								4859,
								4902
							],
							[
								5636,
								5658
							],
							[
								5721,
								5727
							],
							[
								5763,
								5767
							],
							[
								5790,
								5811
							],
							[
								6341,
								6370
							],
							[
								9440,
								9471
							],
							[
								10165,
								10193
							],
							[
								10364,
								10387
							],
							[
								10447,
								10470
							],
							[
								10593,
								10622
							],
							[
								10836,
								10860
							],
							[
								11061,
								11088
							],
							[
								11136,
								11141
							],
							[
								11419,
								11448
							],
							[
								11985,
								11998
							],
							[
								12228,
								12236
							],
							[
								12716,
								12753
							],
							[
								12880,
								12885
							],
							[
								13073,
								13094
							],
							[
								13135,
								13154
							],
							[
								13164,
								13176
							],
							[
								13294,
								13299
							],
							[
								14187,
								14225
							],
							[
								16225,
								16229
							],
							[
								17582,
								17605
							],
							[
								18404,
								18416
							],
							[
								18632,
								18671
							],
							[
								21198,
								21237
							],
							[
								21273,
								21293
							],
							[
								21916,
								21920
							],
							[
								22362,
								22395
							],
							[
								22479,
								22488
							],
							[
								22521,
								22542
							],
							[
								23445,
								23459
							],
							[
								23576,
								23592
							],
							[
								23731,
								23739
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							"(...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							"n =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABSBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgooLi4uYXJncykgPT4KKCkgPT4KICAoYWNjLCBbbW9kaWZpZXIsIGFjdGl2ZV0pID0+CiAgbiA9PgogIHNob3dPdXRwdXQoKQooW2ksIGlkXSkgPT4KICBkcmF3UGFyYW0ocGFyYW0sIHksIGNvbG9yKQogIHNhdmVDb250b3Vycyhjb250b3Vycywgc2l6ZSkKKGFjYywgY29udG91ciwgaSkgPT4KICBkID0+CiAgc2F2ZUxpbmVzKGxpbmVzLCBzaXplKQogIGNvb3JkcyA9PgooW3gxLCB5MSwgeDIsIHkyXSkgPT4KKGEsIFtrLCB2XSkgPT4KICBmcmFtZSA9PgogIGZyYW1lID0+AAAAAAAAAABSBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgUAAE5USF9QT0lOVDogYyA9PgpSQURJQUxfRElTVEFOQ0U6IGMgPT4KUEVSUEVORElDVUxBUl9ESVNUQU5DRTogYyA9PgpSRVVNQU5OX1dJVEtBTTogYyA9PgpPUEhFSU06IGMgPT4KTEFORzogYyA9PgpET1VHTEFTX1BFVUNLRVI6IGMgPT4KSGllcmFyY2h5KGFycmF5KQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQogIC5pbmRleCA9IGZ1bmN0aW9uKGlkKQpIaWVyYXJjaHkKICBwYXJlbnQoaWQpCiAgY2hpbGQoaWQpCiAgbmV4dChpZCkKICBwcmV2KGlkKQogIGdldENvbnN0YW50cyhuYW1lcykKICBuYW1lID0+CiAgZmluZENvbnN0YW50KHZhbHVlLCBrZXlDb25kID0gayA9PiAvXkNWLy4KKGspKQogICh2LCBrKSA9PgogIGZpbmRUeXBlKHZhbHVlKQogIGsgPT4KICBnZXRCaXREZXB0aChtYXQpCiguLi5hcmdzKSA9PgogIG1pbk1heChtYXQpCiAgbW9kaWZpZXJNYXAoa2V5Q29kZSkKKFttb2RpZmllciwgZmxhZ10pID0+CiAgZHJhd0NvbnRvdXIobWF0LCBjb250b3VyLCBjb2xvciwgdGhpY2tuZXNzID0gMSwgbGluZVR5cGUgPSBjdi5MSU5FX0FBKQogIGdldFBhcmVudHMoaGllciwgaWQpCiAgZ2V0Q29udG91ckRlcHRoKGhpZXIsIGlkKQogIGZpbmRSb290KGhpZXIpCiAgaCA9PgogIGdldFRvcGxldmVsKGhpZXIpCiAgd2Fsa0NvbnRvdXJzKGhpZXIsIGlkKQogIG1haW4oLi4uYXJncykKICAoKSA9PgogIChmaWxlLCBjdXJyZW50KSA9PgogIChhcmcsIGN1cnJlbnQsIG9wdGlvbnMsIHJlc3VsdHMpID0+CiAgbWFrZVJhaW5ib3cgPSBzdGVwcyA9PgogIGh1ZSA9PgogIGggPT4KICBwcmludEZsYWdzID0gZmxhZ3MgPT4KKGV2ZW50LCB4LCB5LCBmbGFncykKQWNxdWlyZUZyYW1lKHNyYywgZHN0KQpHcmF5c2NhbGUoc3JjLCBkc3QpCk5vcm0oc3JjLCBkc3QpCkJsdXIoc3JjLCBkc3QpCkVkZ2VEZXRlY3Qoc3JjLCBkc3QpCk1vcnBoKHNyYywgZHN0KQpDb250b3VycyhzcmMsIGRzdCkKICBoID0+CkhvdWdoTGluZXMoc3JjLCBkc3QpCiAgKGksIG4pID0+CiAgaW1hZ2UgPT4KICBmdW5jdGlvbih2YWx1ZSwgY291bnQsIG5hbWUsIHdpbmRvdykKKCkgPT4KQ2xlYXJTdXJmYWNlID0gbWF0ID0+Ck1ha2VTdXJmYWNlID0gKCkgPT4KKC4uLmFyZ3MpID0+CigpID0+CiAgKGFjYywgW21vZGlmaWVyLCBhY3RpdmVdKSA9PgogIG4gPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAUgUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 24073,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAANMkAAAAAAAA1CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yQAAAAAAADTJAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAANMkAAAAAAAA0yQAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA1CQAAAAAAADUJAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANMkAAAAAAAA1CQAAAAAAAAAAAAA1CQAAAAAAADVJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yQAAAAAAADTJAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"cut",
					null,
					"AQAAAGYWAAAAAAAAZhYAAAAAAAAWAAAAIHwgY3YuV0lORE9XX0tFRVBSQVRJTw",
					"AQAAAAAAAAABAAAAZhYAAAAAAAB8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"paste",
					null,
					"AQAAAFAWAAAAAAAAZhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBYAAAAAAABQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYWAAAAAAAAZxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhYAAAAAAABmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFIWAAAAAAAAVBYAAAAAAAAAAAAAPhYAAAAAAABAFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhYAAAAAAABSFgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGsWAAAAAAAAaxYAAAAAAAACAAAALyp/FgAAAAAAAH8WAAAAAAAAAgAAACov",
					"AQAAAAAAAAABAAAAaxYAAAAAAACDFgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEg0AAAAAAAASTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDQAAAAAAABINAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"paste",
					null,
					"AQAAAEk0AAAAAAAAeTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASTQAAAAAAABJNAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAD4WAAAAAAAAPxYAAAAAAAAAAAAAPxYAAAAAAAA/FgAAAAAAAAMAAAAvKiA",
					"AQAAAAAAAAABAAAAPhYAAAAAAABBFgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFIWAAAAAAAAUxYAAAAAAAAAAAAAUxYAAAAAAABTFgAAAAAAAAMAAAAqLyA",
					"AQAAAAAAAAABAAAAUhYAAAAAAABVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHsWAAAAAAAAfRYAAAAAAAAAAAAAURYAAAAAAABTFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAURYAAAAAAAB7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAPIxAAAAAAAA8zEAAAAAAAAAAAAA8zEAAAAAAAD1MQAAAAAAAAAAAAD1MQAAAAAAAPYxAAAAAAAAAAAAAPYxAAAAAAAA9zEAAAAAAAAAAAAA9zEAAAAAAAD4MQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8jEAAAAAAADyMQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " win"
					},
					"BAAAAPgxAAAAAAAA+TEAAAAAAAAAAAAA+TEAAAAAAAD6MQAAAAAAAAAAAAD6MQAAAAAAAPsxAAAAAAAAAAAAAPsxAAAAAAAA/DEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+DEAAAAAAAD4MQAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					3,
					"left_delete",
					null,
					"AwAAAPsxAAAAAAAA+zEAAAAAAAABAAAAbvoxAAAAAAAA+jEAAAAAAAABAAAAafkxAAAAAAAA+TEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA/DEAAAAAAAD8MQAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "clientRect="
					},
					"CwAAAPkxAAAAAAAA+jEAAAAAAAAAAAAA+jEAAAAAAAD7MQAAAAAAAAAAAAD7MQAAAAAAAPwxAAAAAAAAAAAAAPwxAAAAAAAA/TEAAAAAAAAAAAAA/TEAAAAAAAD+MQAAAAAAAAAAAAD+MQAAAAAAAP8xAAAAAAAAAAAAAP8xAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAABMgAAAAAAAAAAAAABMgAAAAAAAAIyAAAAAAAAAAAAAAIyAAAAAAAAAzIAAAAAAAAAAAAAAzIAAAAAAAAEMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+TEAAAAAAAD5MQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQyAAAAAAAABTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABDIAAAAAAAAEMgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "win.imageW"
					},
					"CgAAAAUyAAAAAAAABjIAAAAAAAAAAAAABjIAAAAAAAAHMgAAAAAAAAAAAAAHMgAAAAAAAAgyAAAAAAAAAAAAAAgyAAAAAAAACTIAAAAAAAAAAAAACTIAAAAAAAAKMgAAAAAAAAAAAAAKMgAAAAAAAAsyAAAAAAAAAAAAAAsyAAAAAAAADDIAAAAAAAAAAAAADDIAAAAAAAANMgAAAAAAAAAAAAANMgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABTIAAAAAAAAFMgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAAA4yAAAAAAAADjIAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAADzIAAAAAAAAPMgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "Rect;"
					},
					"BQAAAA4yAAAAAAAADzIAAAAAAAAAAAAADzIAAAAAAAAQMgAAAAAAAAAAAAAQMgAAAAAAABEyAAAAAAAAAAAAABEyAAAAAAAAEjIAAAAAAAAAAAAAEjIAAAAAAAATMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADjIAAAAAAAAOMgAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABMyAAAAAAAAFDIAAAAAAAAAAAAAFDIAAAAAAAAWMgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEzIAAAAAAAATMgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAGw0AAAAAAAAbTQAAAAAAAAAAAAAFDIAAAAAAAAUMgAAAAAAAAIAAAAgIGs0AAAAAAAAbDQAAAAAAAAAAAAAbDQAAAAAAABtNAAAAAAAAAAAAABtNAAAAAAAAG40AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbDQAAAAAAABsNAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG40AAAAAAAAbzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbjQAAAAAAABuNAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					4,
					"left_delete",
					null,
					"BAAAAG40AAAAAAAAbjQAAAAAAAABAAAAIG00AAAAAAAAbTQAAAAAAAABAAAAdGw0AAAAAAAAbDQAAAAAAAABAAAAZWs0AAAAAAAAazQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAbzQAAAAAAABvNAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": ".equale"
					},
					"BwAAAJk0AAAAAAAAmjQAAAAAAAAAAAAAmjQAAAAAAACbNAAAAAAAAAAAAACbNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAnTQAAAAAAAAAAAAAnTQAAAAAAACeNAAAAAAAAAAAAACeNAAAAAAAAJ80AAAAAAAAAAAAAJ80AAAAAAAAoDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmTQAAAAAAACZNAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"left_delete",
					null,
					"AQAAAJ80AAAAAAAAnzQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAoDQAAAAAAACgNAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAJ80AAAAAAAAoDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnzQAAAAAAACfNAAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKA0AAAAAAAAojQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoDQAAAAAAACgNAAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "clientRect"
					},
					"CgAAAKE0AAAAAAAAojQAAAAAAAAAAAAAojQAAAAAAACjNAAAAAAAAAAAAACjNAAAAAAAAKQ0AAAAAAAAAAAAAKQ0AAAAAAAApTQAAAAAAAAAAAAApTQAAAAAAACmNAAAAAAAAAAAAACmNAAAAAAAAKc0AAAAAAAAAAAAAKc0AAAAAAAAqDQAAAAAAAAAAAAAqDQAAAAAAACpNAAAAAAAAAAAAACpNAAAAAAAAKo0AAAAAAAAAAAAAKo0AAAAAAAAqzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoTQAAAAAAAChNAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAK40AAAAAAAArzQAAAAAAAAAAAAArzQAAAAAAACxNAAAAAAAAAAAAACxNAAAAAAAALI0AAAAAAAAAAAAALI0AAAAAAAAtDQAAAAAAAAAAAAArzQAAAAAAACvNAAAAAAAAAIAAAAgILI0AAAAAAAAszQAAAAAAAAAAAAAszQAAAAAAAC0NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArjQAAAAAAACuNAAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALQ0AAAAAAAAtjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtDQAAAAAAAC0NAAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAALU0AAAAAAAAtjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTQAAAAAAAC1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"paste",
					null,
					"AQAAALY0AAAAAAAA1zQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtjQAAAAAAAC2NAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANg0AAAAAAAA2TQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2DQAAAAAAADYNAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANk0AAAAAAAA2zQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2TQAAAAAAADZNAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANo0AAAAAAAA2zQAAAAAAAAAAAAA2zQAAAAAAADdNAAAAAAAAAAAAADdNAAAAAAAAN40AAAAAAAAAAAAAN40AAAAAAAA4DQAAAAAAAAAAAAA2zQAAAAAAADbNAAAAAAAAAIAAAAgINs0AAAAAAAA3zQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2jQAAAAAAADaNAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"cut",
					null,
					"AQAAAGw0AAAAAAAAbDQAAAAAAABDAAAAICBsb2cuaW5mbygnd2luLmltYWdlUmVjdCAoMSknLCB3aW4uaW1hZ2VSZWN0LmVxdWFscyhjbGllbnRSZWN0KSk7Cg",
					"AQAAAAAAAAABAAAAbDQAAAAAAACvNAAAAAAAAAAAAAAAAAAA"
				],
				[
					240,
					1,
					"paste",
					null,
					"AQAAAJg0AAAAAAAA2zQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmDQAAAAAAACYNAAAAAAAAAAAAAAAAAAA"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "\nclientRect=win"
					},
					"EgAAAJc0AAAAAAAAmDQAAAAAAAAAAAAAmDQAAAAAAACaNAAAAAAAAAAAAACaNAAAAAAAAJw0AAAAAAAAAAAAAOA0AAAAAAAA4DQAAAAAAAAEAAAAICAgIJw0AAAAAAAAnTQAAAAAAAAAAAAAnTQAAAAAAACeNAAAAAAAAAAAAACeNAAAAAAAAJ80AAAAAAAAAAAAAJ80AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAAChNAAAAAAAAAAAAAChNAAAAAAAAKI0AAAAAAAAAAAAAKI0AAAAAAAAozQAAAAAAAAAAAAAozQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKU0AAAAAAAAAAAAAKU0AAAAAAAApjQAAAAAAAAAAAAApjQAAAAAAACnNAAAAAAAAAAAAACnNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAAqTQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlzQAAAAAAACXNAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ".imageRect;"
					},
					"CwAAAKo0AAAAAAAAqzQAAAAAAAAAAAAAqzQAAAAAAACsNAAAAAAAAAAAAACsNAAAAAAAAK00AAAAAAAAAAAAAK00AAAAAAAArjQAAAAAAAAAAAAArjQAAAAAAACvNAAAAAAAAAAAAACvNAAAAAAAALA0AAAAAAAAAAAAALA0AAAAAAAAsTQAAAAAAAAAAAAAsTQAAAAAAACyNAAAAAAAAAAAAACyNAAAAAAAALM0AAAAAAAAAAAAALM0AAAAAAAAtDQAAAAAAAAAAAAAtDQAAAAAAAC1NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjQAAAAAAACqNAAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALU0AAAAAAAAtjQAAAAAAAAAAAAAtjQAAAAAAAC6NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTQAAAAAAAC1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"cut",
					null,
					"AQAAALs0AAAAAAAAuzQAAAAAAABDAAAAICBsb2cuaW5mbygnd2luLmltYWdlUmVjdCAoMSknLCB3aW4uaW1hZ2VSZWN0LmVxdWFscyhjbGllbnRSZWN0KSk7Cg",
					"AQAAAAAAAAABAAAAuzQAAAAAAAD+NAAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"paste",
					null,
					"AQAAAJs0AAAAAAAA3jQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmzQAAAAAAACbNAAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "reso"
					},
					"BgAAAKc0AAAAAAAAqDQAAAAAAAAAAAAAqDQAAAAAAACoNAAAAAAAABEAAAB3aW4uaW1hZ2VSZWN0ICgxKek0AAAAAAAA6TQAAAAAAAAEAAAAICAgIKg0AAAAAAAAqTQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAACqNAAAAAAAAKs0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApzQAAAAAAAC4NAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAAKo0AAAAAAAAqjQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAqzQAAAAAAACrNAAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "ized"
					},
					"BAAAAKo0AAAAAAAAqzQAAAAAAAAAAAAAqzQAAAAAAACsNAAAAAAAAAAAAACsNAAAAAAAAK00AAAAAAAAAAAAAK00AAAAAAAArjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjQAAAAAAACqNAAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAK40AAAAAAAArzQAAAAAAAAAAAAArzQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALE0AAAAAAAAAAAAALE0AAAAAAAAsjQAAAAAAAAAAAAAsjQAAAAAAACzNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArjQAAAAAAACuNAAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": " ${"
					},
					"AwAAALM0AAAAAAAAtDQAAAAAAAAAAAAAtDQAAAAAAAC1NAAAAAAAAAAAAAC1NAAAAAAAALY0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAszQAAAAAAACzNAAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAALY0AAAAAAAAtzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtjQAAAAAAAC2NAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"left_delete",
					null,
					"AQAAALY0AAAAAAAAtjQAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAtzQAAAAAAAC3NAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "clientre"
					},
					"CAAAALY0AAAAAAAAtzQAAAAAAAAAAAAAtzQAAAAAAAC4NAAAAAAAAAAAAAC4NAAAAAAAALk0AAAAAAAAAAAAALk0AAAAAAAAujQAAAAAAAAAAAAAujQAAAAAAAC7NAAAAAAAAAAAAAC7NAAAAAAAALw0AAAAAAAAAAAAALw0AAAAAAAAvTQAAAAAAAAAAAAAvTQAAAAAAAC+NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtjQAAAAAAAC2NAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					2,
					"left_delete",
					null,
					"AgAAAL00AAAAAAAAvTQAAAAAAAABAAAAZbw0AAAAAAAAvDQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAvjQAAAAAAAC+NAAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "Rect}"
					},
					"BQAAALw0AAAAAAAAvTQAAAAAAAAAAAAAvTQAAAAAAAC+NAAAAAAAAAAAAAC+NAAAAAAAAL80AAAAAAAAAAAAAL80AAAAAAAAwDQAAAAAAAAAAAAAwDQAAAAAAADBNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvDQAAAAAAAC8NAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAME0AAAAAAAAwjQAAAAAAAAAAAAAwjQAAAAAAADDNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTQAAAAAAADBNAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAMM0AAAAAAAAxDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwzQAAAAAAADDNAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"left_delete",
					null,
					"AQAAAMM0AAAAAAAAwzQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAxDQAAAAAAADENAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAMM0AAAAAAAAxDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwzQAAAAAAADDNAAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " {wn"
					},
					"BAAAAMQ0AAAAAAAAxTQAAAAAAAAAAAAAxTQAAAAAAADGNAAAAAAAAAAAAADGNAAAAAAAAMc0AAAAAAAAAAAAAMc0AAAAAAAAyDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxDQAAAAAAADENAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					3,
					"left_delete",
					null,
					"AwAAAMc0AAAAAAAAxzQAAAAAAAABAAAAbsY0AAAAAAAAxjQAAAAAAAABAAAAd8U0AAAAAAAAxTQAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAyDQAAAAAAADINAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": "${win.imageRet"
					},
					"DgAAAMU0AAAAAAAAxjQAAAAAAAAAAAAAxjQAAAAAAADHNAAAAAAAAAAAAADHNAAAAAAAAMg0AAAAAAAAAAAAAMg0AAAAAAAAyTQAAAAAAAAAAAAAyTQAAAAAAADKNAAAAAAAAAAAAADKNAAAAAAAAMs0AAAAAAAAAAAAAMs0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADNNAAAAAAAAAAAAADNNAAAAAAAAM40AAAAAAAAAAAAAM40AAAAAAAAzzQAAAAAAAAAAAAAzzQAAAAAAADQNAAAAAAAAAAAAADQNAAAAAAAANE0AAAAAAAAAAAAANE0AAAAAAAA0jQAAAAAAAAAAAAA0jQAAAAAAADTNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxTQAAAAAAADFNAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "}`"
					},
					"AgAAANM0AAAAAAAA1DQAAAAAAAAAAAAA1DQAAAAAAADVNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0zQAAAAAAADTNAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"right_delete",
					null,
					"AQAAANU0AAAAAAAA1TQAAAAAAAAjAAAAJywgd2luLmltYWdlUmVjdC5lcXVhbHMoY2xpZW50UmVjdCk",
					"AQAAAAAAAAABAAAA1TQAAAAAAAD4NAAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"left_delete",
					null,
					"AQAAAKY0AAAAAAAApjQAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAApzQAAAAAAACnNAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "`"
					},
					"AQAAAKY0AAAAAAAApzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjQAAAAAAACmNAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"left_delete",
					null,
					"AQAAAPI0AAAAAAAA8jQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8zQAAAAAAADzNAAAAAAAAAAAAAAA4GBA"
				],
				[
					316,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA2DQAAAAAAADzNAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAANE0AAAAAAAA0jQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0TQAAAAAAADRNAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"cut",
					null,
					"AQAAAGoWAAAAAAAAahYAAAAAAAASAAAAY3YuV0lORE9XX0FVVE9TSVpF",
					"AQAAAAAAAAABAAAAahYAAAAAAAB8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "|"
					},
					"AQAAAE8WAAAAAAAAUBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxYAAAAAAABPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"paste",
					null,
					"AQAAAFAWAAAAAAAAYhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUBYAAAAAAABQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"paste",
					null,
					"AgAAAFMWAAAAAAAAYxYAAAAAAAAAAAAAYxYAAAAAAABjFgAAAAAAAA8AAABXSU5ET1dfQVVUT1NJWkU",
					"AQAAAAAAAAABAAAAUxYAAAAAAABiFgAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAYxYAAAAAAABjFgAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					2,
					"left_delete",
					null,
					"AgAAANgkAAAAAAAA2CQAAAAAAAABAAAAL9ckAAAAAAAA1yQAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA2SQAAAAAAADZJAAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANckAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADZJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1yQAAAAAAADXJAAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAANkkAAAAAAAA2iQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2SQAAAAAAADZJAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"left_delete",
					null,
					"AQAAANkkAAAAAAAA2SQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA2iQAAAAAAADaJAAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADs+AAAAAAAAPD4AAAAAAAAAAAAAPD4AAAAAAABGPgAAAAAAAAAAAABGPgAAAAAAAEc+AAAAAAAAAAAAAEc+AAAAAAAASD4AAAAAAAAAAAAASD4AAAAAAABJPgAAAAAAAAAAAABJPgAAAAAAAEo+AAAAAAAAAAAAAEo+AAAAAAAASz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOz4AAAAAAAA7PgAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": " bits"
					},
					"BQAAAEs+AAAAAAAATD4AAAAAAAAAAAAATD4AAAAAAABNPgAAAAAAAAAAAABNPgAAAAAAAE4+AAAAAAAAAAAAAE4+AAAAAAAATz4AAAAAAAAAAAAATz4AAAAAAABQPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASz4AAAAAAABLPgAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFA+AAAAAAAAUT4AAAAAAAAAAAAAUT4AAAAAAABSPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUD4AAAAAAABQPgAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFI+AAAAAAAAUz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUj4AAAAAAABSPgAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFM+AAAAAAAAVT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUz4AAAAAAABTPgAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"paste",
					null,
					"AQAAAFQ+AAAAAAAAZj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVD4AAAAAAABUPgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"left_delete",
					null,
					"AQAAAGU+AAAAAAAAZT4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZj4AAAAAAABmPgAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": " ¬|"
					},
					"AwAAAGU+AAAAAAAAZj4AAAAAAAAAAAAAZj4AAAAAAABnPgAAAAAAAAAAAABnPgAAAAAAAGg+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZT4AAAAAAABlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					3,
					"left_delete",
					null,
					"AwAAAGc+AAAAAAAAZz4AAAAAAAABAAAAfGY+AAAAAAAAZj4AAAAAAAACAAAAwqxlPgAAAAAAAGU+AAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAaD4AAAAAAABoPgAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": "↓"
					},
					"AQAAAGU+AAAAAAAAZj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZT4AAAAAAABlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"left_delete",
					null,
					"AQAAAGU+AAAAAAAAZT4AAAAAAAADAAAA4oaT",
					"AQAAAAAAAAABAAAAZj4AAAAAAABmPgAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAGU+AAAAAAAAZj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZT4AAAAAAABlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					584,
					1,
					"left_delete",
					null,
					"AQAAAGU+AAAAAAAAZT4AAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAZj4AAAAAAABmPgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "|0,"
					},
					"AwAAAGU+AAAAAAAAZj4AAAAAAAAAAAAAZj4AAAAAAABnPgAAAAAAAAAAAABnPgAAAAAAAGg+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZT4AAAAAAABlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGg+AAAAAAAAaT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaD4AAAAAAABoPgAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": "['ctrl'"
					},
					"BwAAAFM+AAAAAAAAVD4AAAAAAAAAAAAAVD4AAAAAAABVPgAAAAAAAAAAAABVPgAAAAAAAFY+AAAAAAAAAAAAAFY+AAAAAAAAVz4AAAAAAAAAAAAAVz4AAAAAAABYPgAAAAAAAAAAAABYPgAAAAAAAFk+AAAAAAAAAAAAAFk+AAAAAAAAWj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUz4AAAAAAABTPgAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert",
					{
						"characters": ",'shift',"
					},
					"CQAAAFo+AAAAAAAAWz4AAAAAAAAAAAAAWz4AAAAAAABcPgAAAAAAAAAAAABcPgAAAAAAAF0+AAAAAAAAAAAAAF0+AAAAAAAAXj4AAAAAAAAAAAAAXj4AAAAAAABfPgAAAAAAAAAAAABfPgAAAAAAAGA+AAAAAAAAAAAAAGA+AAAAAAAAYT4AAAAAAAAAAAAAYT4AAAAAAABiPgAAAAAAAAAAAABiPgAAAAAAAGM+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWj4AAAAAAABaPgAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "'alt'].m"
					},
					"CAAAAGM+AAAAAAAAZD4AAAAAAAAAAAAAZD4AAAAAAABlPgAAAAAAAAAAAABlPgAAAAAAAGY+AAAAAAAAAAAAAGY+AAAAAAAAZz4AAAAAAAAAAAAAZz4AAAAAAABoPgAAAAAAAAAAAABoPgAAAAAAAGk+AAAAAAAAAAAAAGk+AAAAAAAAaj4AAAAAAAAAAAAAaj4AAAAAAABrPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYz4AAAAAAABjPgAAAAAAAAAAAAAAAPC/"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": "ap(n"
					},
					"BAAAAGs+AAAAAAAAbD4AAAAAAAAAAAAAbD4AAAAAAABtPgAAAAAAAAAAAABtPgAAAAAAAG4+AAAAAAAAAAAAAG4+AAAAAAAAbz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaz4AAAAAAABrPgAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAG8+AAAAAAAAcD4AAAAAAAAAAAAAcD4AAAAAAABxPgAAAAAAAAAAAABxPgAAAAAAAHI+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbz4AAAAAAABvPgAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHI+AAAAAAAAcz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcj4AAAAAAAByPgAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"right_delete",
					null,
					"AQAAAHM+AAAAAAAAcz4AAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAcz4AAAAAAABzPgAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "n]"
					},
					"AgAAAH0+AAAAAAAAfj4AAAAAAAAAAAAAfj4AAAAAAAB/PgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfT4AAAAAAAB9PgAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": "|0)"
					},
					"AwAAAH8+AAAAAAAAgD4AAAAAAAAAAAAAgD4AAAAAAACBPgAAAAAAAAAAAACBPgAAAAAAAII+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfz4AAAAAAAB/PgAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"cut",
					null,
					"AQAAAII+AAAAAAAAgj4AAAAAAAAMAAAAJ2N0cmwnXXwwLCBd",
					"AQAAAAAAAAABAAAAgj4AAAAAAACOPgAAAAAAAP///////+9/"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAII+AAAAAAAAgz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgj4AAAAAAACCPgAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					5,
					"left_delete",
					null,
					"BQAAAFA+AAAAAAAAUD4AAAAAAAABAAAAIE8+AAAAAAAATz4AAAAAAAABAAAAc04+AAAAAAAATj4AAAAAAAABAAAAdE0+AAAAAAAATT4AAAAAAAABAAAAaUw+AAAAAAAATD4AAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAUT4AAAAAAABRPgAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEw+AAAAAAAATT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATD4AAAAAAABMPgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"left_delete",
					null,
					"AQAAAEw+AAAAAAAATD4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATT4AAAAAAABNPgAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAEw+AAAAAAAATT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATD4AAAAAAABMPgAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0+AAAAAAAATj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATT4AAAAAAABNPgAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0+AAAAAAAATj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATT4AAAAAAABNPgAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"left_delete",
					null,
					"AQAAAE0+AAAAAAAATT4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAATj4AAAAAAABOPgAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"left_delete",
					null,
					"AQAAAEw+AAAAAAAATD4AAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAATT4AAAAAAABNPgAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"cut",
					null,
					"AQAAAF8+AAAAAAAAXz4AAAAAAAAFAAAAJ2FsdCc",
					"AQAAAAAAAAABAAAAXz4AAAAAAABkPgAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					1,
					"left_delete",
					null,
					"AQAAAF4+AAAAAAAAXj4AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAXz4AAAAAAABfPgAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "mod"
					},
					"AwAAAEw+AAAAAAAATT4AAAAAAAAAAAAATT4AAAAAAABOPgAAAAAAAAAAAABOPgAAAAAAAE8+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATD4AAAAAAABMPgAAAAAAAAAAAAAAAPC/"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHw+AAAAAAAAfT4AAAAAAAAAAAAAfT4AAAAAAACHPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfD4AAAAAAAB8PgAAAAAAAP///////+9/"
				],
				[
					729,
					1,
					"paste",
					null,
					"AQAAAIc+AAAAAAAAjD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhz4AAAAAAACHPgAAAAAAAAAAAAAAAPC/"
				],
				[
					730,
					5,
					"left_delete",
					null,
					"BQAAAIs+AAAAAAAAiz4AAAAAAAABAAAAJ4o+AAAAAAAAij4AAAAAAAABAAAAdIk+AAAAAAAAiT4AAAAAAAABAAAAbIg+AAAAAAAAiD4AAAAAAAABAAAAYYc+AAAAAAAAhz4AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAjD4AAAAAAACMPgAAAAAAAAAAAAAAAPC/"
				],
				[
					733,
					1,
					"insert",
					{
						"characters": "pare"
					},
					"BQAAAFI+AAAAAAAAUz4AAAAAAAAAAAAAfj4AAAAAAAB+PgAAAAAAAAoAAAAgICAgICAgICAgUz4AAAAAAABUPgAAAAAAAAAAAABUPgAAAAAAAFU+AAAAAAAAAAAAAFU+AAAAAAAAVj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUj4AAAAAAABSPgAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"left_delete",
					null,
					"AQAAAFU+AAAAAAAAVT4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAVj4AAAAAAABWPgAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": "seInt("
					},
					"BgAAAFU+AAAAAAAAVj4AAAAAAAAAAAAAVj4AAAAAAABXPgAAAAAAAAAAAABXPgAAAAAAAFg+AAAAAAAAAAAAAFg+AAAAAAAAWT4AAAAAAAAAAAAAWT4AAAAAAABaPgAAAAAAAAAAAABaPgAAAAAAAFs+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVT4AAAAAAABVPgAAAAAAAAAAAAAAAPC/"
				],
				[
					736,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFs+AAAAAAAAXD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWz4AAAAAAABbPgAAAAAAAAAAAAAAAPC/"
				],
				[
					746,
					1,
					"insert",
					{
						"characters": ".join"
					},
					"BQAAAIU+AAAAAAAAhj4AAAAAAAAAAAAAhj4AAAAAAACHPgAAAAAAAAAAAACHPgAAAAAAAIg+AAAAAAAAAAAAAIg+AAAAAAAAiT4AAAAAAAAAAAAAiT4AAAAAAACKPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhT4AAAAAAACFPgAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIo+AAAAAAAAjD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAij4AAAAAAACKPgAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIs+AAAAAAAAjT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiz4AAAAAAACLPgAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI4+AAAAAAAAjz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjj4AAAAAAACOPgAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": " 2)"
					},
					"AwAAAI8+AAAAAAAAkD4AAAAAAAAAAAAAkD4AAAAAAACRPgAAAAAAAAAAAACRPgAAAAAAAJI+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjz4AAAAAAACPPgAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADc/AAAAAAAAOD8AAAAAAAAAAAAAOD8AAAAAAABEPwAAAAAAAAAAAABEPwAAAAAAAEU/AAAAAAAAAAAAAEU/AAAAAAAAUT8AAAAAAAAAAAAAOD8AAAAAAAA4PwAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAANz8AAAAAAAA3PwAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"left_delete",
					null,
					"AgAAADc/AAAAAAAANz8AAAAAAAABAAAACjg/AAAAAAAAOD8AAAAAAAAMAAAAICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAOD8AAAAAAAA4PwAAAAAAAAAAAAAAAFtA"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAANg+AAAAAAAA2T4AAAAAAAAAAAAA2T4AAAAAAADaPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2D4AAAAAAADYPgAAAAAAAAAAAAAAAPC/"
				],
				[
					828,
					1,
					"left_delete",
					null,
					"AQAAANk+AAAAAAAA2T4AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA2j4AAAAAAADaPgAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					2,
					"left_delete",
					null,
					"AgAAANg+AAAAAAAA2D4AAAAAAAABAAAAINc+AAAAAAAA1z4AAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA2T4AAAAAAADZPgAAAAAAAAAAAAAAAPC/"
				],
				[
					948,
					1,
					"cut",
					null,
					"AQAAAB4SAAAAAAAAHhIAAAAAAABJAAAAICAgICAgaW5wdXQ6IFt0cnVlLCAoZmlsZSwgY3VycmVudCkgPT4gWy4uLihjdXJyZW50IHx8IFtdKSwgZmlsZV0sICdpJ10sCg",
					"AQAAAAAAAAABAAAAHhIAAAAAAABnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					949,
					2,
					"paste",
					null,
					"AgAAAB4SAAAAAAAAZxIAAAAAAAAAAAAAZxIAAAAAAACwEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhIAAAAAAAAeEgAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "opengl"
					},
					"BwAAACQSAAAAAAAAJRIAAAAAAAAAAAAAJRIAAAAAAAAlEgAAAAAAAAUAAABpbnB1dCUSAAAAAAAAJhIAAAAAAAAAAAAAJhIAAAAAAAAnEgAAAAAAAAAAAAAnEgAAAAAAACgSAAAAAAAAAAAAACgSAAAAAAAAKRIAAAAAAAAAAAAAKRIAAAAAAAAqEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBIAAAAAAAApEgAAAAAAAAAAAAAAAPC/"
				],
				[
					959,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BgAAAC0SAAAAAAAALhIAAAAAAAAAAAAALhIAAAAAAAAuEgAAAAAAAAQAAAB0cnVlLhIAAAAAAAAvEgAAAAAAAAAAAAAvEgAAAAAAADASAAAAAAAAAAAAADASAAAAAAAAMRIAAAAAAAAAAAAAMRIAAAAAAAAyEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALRIAAAAAAAAxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"insert",
					{
						"characters": "null"
					},
					"BQAAADQSAAAAAAAANRIAAAAAAAAAAAAANRIAAAAAAAA1EgAAAAAAAC0AAAAoZmlsZSwgY3VycmVudCkgPT4gWy4uLihjdXJyZW50IHx8IFtdKSwgZmlsZV01EgAAAAAAADYSAAAAAAAAAAAAADYSAAAAAAAANxIAAAAAAAAAAAAANxIAAAAAAAA4EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBIAAAAAAABhEgAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"left_delete",
					null,
					"AQAAADsSAAAAAAAAOxIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAPBIAAAAAAAA8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADsSAAAAAAAAPBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxIAAAAAAAA7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1015,
					1,
					"paste",
					null,
					"AQAAAGMEAAAAAAAAtwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1203,
					1,
					"cut",
					null,
					"AQAAADcXAAAAAAAANxcAAAAAAAA8AAAAICBjb25zdCBwcmludEZsYWdzID0gZmxhZ3MgPT4gWy4uLkJpdHNUb05hbWVzKE1vdXNlRmxhZ3MpXTsK",
					"AQAAAAAAAAABAAAANxcAAAAAAABzFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					1,
					"paste",
					null,
					"AQAAAJcWAAAAAAAA0xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxYAAAAAAACXFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANMWAAAAAAAA1BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xYAAAAAAADTFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1210,
					1,
					"cut",
					null,
					"AQAAANQWAAAAAAAA1BYAAAAAAACMAQAAIGxldCB3aW4gPSBuZXcgV2luZG93KCdncmF5JywgY3YuV0lORE9XX05PUk1BTCB8IGN2LldJTkRPV19LRUVQUkFUSU8gLyp8IGN2LldJTkRPV19LRUVQUkFUSU8gfCAqLyk7CiAgLy9jb25zb2xlLmRlYnVnKCdNb3VzZSA6JywgeyBNb3VzZUV2ZW50cywgTW91c2VGbGFncyB9KTsKCiAgd2luLnNldE1vdXNlQ2FsbGJhY2soZnVuY3Rpb24gKGV2ZW50LCB4LCB5LCBmbGFncykgewogICAgZXZlbnQgPSBNb3VzZS5wcmludEV2ZW50KGV2ZW50KTsKICAgIGZsYWdzID0gTW91c2UucHJpbnRGbGFncyhmbGFncyk7CgogICAgLy9jb25zb2xlLmRlYnVnKCdNb3VzZSBldmVudDonLCBjb25zb2xlLmluc3BlY3QoeyBldmVudCwgeCwgeSwgZmxhZ3MgfSwgeyBtdWx0aWxpbmU6IGZhbHNlIH0pKTsKICB9KTsK",
					"AQAAAAAAAAABAAAA1BYAAAAAAABgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1217,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAOAXAAAAAAAA4RcAAAAAAAAAAAAA4RcAAAAAAADjFwAAAAAAAAAAAADjFwAAAAAAAOQXAAAAAAAAAAAAAOQXAAAAAAAA5hcAAAAAAAAAAAAA4RcAAAAAAADhFwAAAAAAAAIAAAAgIOQXAAAAAAAA5RcAAAAAAAAAAAAA5RcAAAAAAADnFwAAAAAAAAAAAADiFwAAAAAAAOIXAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA4BcAAAAAAADgFwAAAAAAAP///////+9/"
				],
				[
					1219,
					1,
					"paste",
					null,
					"AQAAAOIXAAAAAAAAbhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hcAAAAAAADiFwAAAAAAAAAAAAAAADJA"
				],
				[
					1228,
					1,
					"insert",
					{
						"characters": "oopts"
					},
					"BgAAAO0XAAAAAAAA7hcAAAAAAAAAAAAAcBkAAAAAAABwGQAAAAAAAAIAAAAgIO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADwFwAAAAAAAAAAAADwFwAAAAAAAPEXAAAAAAAAAAAAAPEXAAAAAAAA8hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RcAAAAAAADtFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					4,
					"left_delete",
					null,
					"BAAAAPEXAAAAAAAA8RcAAAAAAAABAAAAc/AXAAAAAAAA8BcAAAAAAAABAAAAdO8XAAAAAAAA7xcAAAAAAAABAAAAcO4XAAAAAAAA7hcAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA8hcAAAAAAADyFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1230,
					1,
					"insert",
					{
						"characters": "pts.opengl"
					},
					"CgAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7xcAAAAAAADwFwAAAAAAAAAAAADwFwAAAAAAAPEXAAAAAAAAAAAAAPEXAAAAAAAA8hcAAAAAAAAAAAAA8hcAAAAAAADzFwAAAAAAAAAAAADzFwAAAAAAAPQXAAAAAAAAAAAAAPQXAAAAAAAA9RcAAAAAAAAAAAAA9RcAAAAAAAD2FwAAAAAAAAAAAAD2FwAAAAAAAPcXAAAAAAAAAAAAAPcXAAAAAAAA+BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hcAAAAAAADuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1231,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAPgXAAAAAAAA+RcAAAAAAAAAAAAA+RcAAAAAAAD6FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BcAAAAAAAD4FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1232,
					1,
					"insert",
					{
						"characters": "  new"
					},
					"BQAAAPoXAAAAAAAA+xcAAAAAAAAAAAAA+xcAAAAAAAD8FwAAAAAAAAAAAAD8FwAAAAAAAP0XAAAAAAAAAAAAAP0XAAAAAAAA/hcAAAAAAAAAAAAA/hcAAAAAAAD/FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hcAAAAAAAD6FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1233,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAP8XAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAABGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1235,
					1,
					"insert",
					{
						"characters": " GLFW"
					},
					"BQAAAAAYAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAFGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1236,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUYAAAAAAAABxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRgAAAAAAAAFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1237,
					1,
					"insert",
					{
						"characters": "video.size"
					},
					"CgAAAAYYAAAAAAAABxgAAAAAAAAAAAAABxgAAAAAAAAIGAAAAAAAAAAAAAAIGAAAAAAAAAkYAAAAAAAAAAAAAAkYAAAAAAAAChgAAAAAAAAAAAAAChgAAAAAAAALGAAAAAAAAAAAAAALGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAADRgAAAAAAAAAAAAADRgAAAAAAAAOGAAAAAAAAAAAAAAOGAAAAAAAAA8YAAAAAAAAAAAAAA8YAAAAAAAAEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhgAAAAAAAAGGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1238,
					1,
					"insert",
					{
						"characters": ".width,"
					},
					"BwAAABAYAAAAAAAAERgAAAAAAAAAAAAAERgAAAAAAAASGAAAAAAAAAAAAAASGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAVGAAAAAAAAAAAAAAVGAAAAAAAABYYAAAAAAAAAAAAABYYAAAAAAAAFxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBgAAAAAAAAQGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1239,
					1,
					"insert",
					{
						"characters": " video.size.he"
					},
					"DgAAABcYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAZGAAAAAAAAAAAAAAZGAAAAAAAABoYAAAAAAAAAAAAABoYAAAAAAAAGxgAAAAAAAAAAAAAGxgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAAB0YAAAAAAAAAAAAAB0YAAAAAAAAHhgAAAAAAAAAAAAAHhgAAAAAAAAfGAAAAAAAAAAAAAAfGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAIRgAAAAAAAAAAAAAIRgAAAAAAAAiGAAAAAAAAAAAAAAiGAAAAAAAACMYAAAAAAAAAAAAACMYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAlGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxgAAAAAAAAXGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1240,
					1,
					"insert",
					{
						"characters": "ight,"
					},
					"BQAAACUYAAAAAAAAJhgAAAAAAAAAAAAAJhgAAAAAAAAnGAAAAAAAAAAAAAAnGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAAKRgAAAAAAAAAAAAAKRgAAAAAAAAqGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRgAAAAAAAAlGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1241,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAACoYAAAAAAAAKxgAAAAAAAAAAAAAKxgAAAAAAAAsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhgAAAAAAAAqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1242,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACwYAAAAAAAALhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBgAAAAAAAAsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1244,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAC8YAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAAxGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxgAAAAAAAAvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1259,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOoXAAAAAAAA6xcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hcAAAAAAADqFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1260,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAOsXAAAAAAAA7BcAAAAAAAAAAAAA7BcAAAAAAADtFwAAAAAAAAAAAADtFwAAAAAAAO4XAAAAAAAAAAAAAO4XAAAAAAAA7xcAAAAAAAAAAAAA7BcAAAAAAADsFwAAAAAAAAEAAAAg7hcAAAAAAADvFwAAAAAAAAAAAADvFwAAAAAAAPAXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xcAAAAAAADrFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1261,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPAXAAAAAAAA8hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BcAAAAAAADwFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1262,
					4,
					"right_delete",
					null,
					"BAAAAPEXAAAAAAAA8RcAAAAAAAABAAAAKfEXAAAAAAAA8RcAAAAAAAABAAAAIPEXAAAAAAAA8RcAAAAAAAABAAAAPfEXAAAAAAAA8RcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA8RcAAAAAAADxFwAAAAAAAAAAAAAAAPC/"
				],
				[
					1265,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1266,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0XAAAAAAAA/hcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/RcAAAAAAAD9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1267,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAP4XAAAAAAAAABgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hcAAAAAAAD+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1268,
					3,
					"right_delete",
					null,
					"AwAAAP8XAAAAAAAA/xcAAAAAAAABAAAAff8XAAAAAAAA/xcAAAAAAAABAAAAIP8XAAAAAAAA/xcAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1269,
					1,
					"insert",
					{
						"characters": "\nwion"
					},
					"BgAAAP8XAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAUYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xcAAAAAAAD/FwAAAAAAAAAAAAAAAPC/"
				],
				[
					1270,
					2,
					"left_delete",
					null,
					"AgAAAAQYAAAAAAAABBgAAAAAAAABAAAAbgMYAAAAAAAAAxgAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAABRgAAAAAAAAFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1271,
					1,
					"insert",
					{
						"characters": "n="
					},
					"AgAAAAMYAAAAAAAABBgAAAAAAAAAAAAABBgAAAAAAAAFGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1276,
					3,
					"left_delete",
					null,
					"AwAAADwYAAAAAAAAPBgAAAAAAAABAAAAIDsYAAAAAAAAOxgAAAAAAAABAAAAOjoYAAAAAAAAOhgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPRgAAAAAAAA9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1277,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADoYAAAAAAAAOxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhgAAAAAAAA6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1278,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAADsYAAAAAAAAPBgAAAAAAAAAAAAAPBgAAAAAAAA9GAAAAAAAAAAAAAA9GAAAAAAAAD4YAAAAAAAAAAAAADwYAAAAAAAAPBgAAAAAAAABAAAAIDwYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxgAAAAAAAA7GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1279,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAD0YAAAAAAAAPhgAAAAAAAAAAAAAPhgAAAAAAAA/GAAAAAAAAAAAAAA/GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAAQRgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRgAAAAAAAA9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					1280,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAEIYAAAAAAAAQxgAAAAAAAAAAAAAQxgAAAAAAABEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhgAAAAAAABCGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1281,
					1,
					"insert",
					{
						"characters": "\nwi"
					},
					"BAAAAEQYAAAAAAAARRgAAAAAAAAAAAAARRgAAAAAAABHGAAAAAAAAAAAAABHGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAASRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARBgAAAAAAABEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1282,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkYAAAAAAAAShgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASRgAAAAAAABJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1283,
					1,
					"left_delete",
					null,
					"AQAAAEkYAAAAAAAASRgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAShgAAAAAAABKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEkYAAAAAAAAShgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASRgAAAAAAABJGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1285,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEoYAAAAAAAASxgAAAAAAAAAAAAASxgAAAAAAABMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShgAAAAAAABKGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1286,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwYAAAAAAAATRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					1288,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAKUYAAAAAAAAphgAAAAAAAAAAAAAphgAAAAAAACoGAAAAAAAAAAAAACoGAAAAAAAAKkYAAAAAAAAAAAAAKYYAAAAAAAAphgAAAAAAAACAAAAICCmGAAAAAAAAKYYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApRgAAAAAAAClGAAAAAAAAP///////+9/"
				],
				[
					1295,
					1,
					"cut",
					null,
					"AQAAAOQYAAAAAAAA5BgAAAAAAADsAAAAICB3aW4uc2V0TW91c2VDYWxsYmFjayhmdW5jdGlvbiAoZXZlbnQsIHgsIHksIGZsYWdzKSB7CiAgICBldmVudCA9IE1vdXNlLnByaW50RXZlbnQoZXZlbnQpOwogICAgZmxhZ3MgPSBNb3VzZS5wcmludEZsYWdzKGZsYWdzKTsKCiAgICAvL2NvbnNvbGUuZGVidWcoJ01vdXNlIGV2ZW50OicsIGNvbnNvbGUuaW5zcGVjdCh7IGV2ZW50LCB4LCB5LCBmbGFncyB9LCB7IG11bHRpbGluZTogZmFsc2UgfSkpOwogIH0pOwo",
					"AQAAAAAAAAABAAAA5BgAAAAAAADQGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1298,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKYYAAAAAAAApxgAAAAAAAAAAAAApxgAAAAAAACoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphgAAAAAAACmGAAAAAAAAAAAAAAAAAAA"
				],
				[
					1300,
					1,
					"paste",
					null,
					"AQAAAKcYAAAAAAAAkxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxgAAAAAAACnGAAAAAAAAAAAAAAAAAAA"
				],
				[
					1303,
					1,
					"left_delete",
					null,
					"AQAAAJIZAAAAAAAAkhkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAkxkAAAAAAACTGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1309,
					1,
					"cut",
					null,
					"AQAAAJUZAAAAAAAAlRkAAAAAAAA7AAAAICAvL2NvbnNvbGUuZGVidWcoJ01vdXNlIDonLCB7IE1vdXNlRXZlbnRzLCBNb3VzZUZsYWdzIH0pOwo",
					"AQAAAAAAAAABAAAAlRkAAAAAAADQGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1311,
					1,
					"paste",
					null,
					"AQAAAI0ZAAAAAAAAyBkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRkAAAAAAACNGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1318,
					1,
					"left_delete",
					null,
					"AQAAANAZAAAAAAAA0BkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA0RkAAAAAAADRGQAAAAAAAAAAAAAAAAAA"
				],
				[
					1319,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAM8ZAAAAAAAAzxkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA0BkAAAAAAADQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1322,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzxkAAAAAAADPGQAAAAAAAAAAAAAAAPC/"
				],
				[
					1432,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAC0/AAAAAAAALj8AAAAAAAAAAAAALj8AAAAAAAAvPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALT8AAAAAAAAtPwAAAAAAAAAAAAAAAPC/"
				],
				[
					1435,
					2,
					"left_delete",
					null,
					"AgAAAC4/AAAAAAAALj8AAAAAAAABAAAALy0/AAAAAAAALT8AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAALz8AAAAAAAAvPwAAAAAAAAAAAAAAAPC/"
				],
				[
					1451,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAALw/AAAAAAAAvT8AAAAAAAAAAAAAvT8AAAAAAAC+PwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvD8AAAAAAAC8PwAAAAAAAAAAAAAAAPC/"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4/AAAAAAAAvz8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvj8AAAAAAAC+PwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "draw-utils.js",
			"settings":
			{
				"buffer_size": 4994,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					null,
					"AQAAADgCAAAAAAAAYAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAIAAAAAAAA4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"paste",
					null,
					"AgAAAEkCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABNAgAAAAAAAAkAAABoYW5kbGVQb3M",
					"AQAAAAAAAAABAAAASQIAAAAAAABSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"paste",
					null,
					"AgAAAFICAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABoAgAAAAAAAAQAAAB4LCB5",
					"AQAAAAAAAAABAAAAUgIAAAAAAABWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAACoPAAAAAAAAKw8AAAAAAAAAAAAAKw8AAAAAAAArDwAAAAAAAAEAAAAgKw8AAAAAAAAsDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKg8AAAAAAAArDwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					2,
					"left_delete",
					null,
					"AgAAACsPAAAAAAAAKw8AAAAAAAABAAAALyoPAAAAAAAAKg8AAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAALA8AAAAAAAAsDwAAAAAAAAAAAAAAgEZA"
				],
				[
					66,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADkPAAAAAAAAOw8AAAAAAAAAAAAAvQ4AAAAAAAC/DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQ4AAAAAAAA5DwAAAAAAAP///////+9/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAD8PAAAAAAAAQA8AAAAAAAAAAAAAQA8AAAAAAABBDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPw8AAAAAAAA/DwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC4BAAAAAAAALwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAAuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " R"
					},
					"AgAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAADABAAAAAAAAMAEAAAAAAAABAAAAUi8BAAAAAAAALwEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAMQEAAAAAAAAxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " Rect"
					},
					"BQAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQBAAAAAAAANQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAEAAAAAAAA0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\nget"
					},
					"BQAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADtCwAAAAAAAAAAAADtCwAAAAAAAO4LAAAAAAAAAAAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gsAAAAAAADqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " ia"
					},
					"AwAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAADyCwAAAAAAAPMLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAPILAAAAAAAA8gsAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA8wsAAAAAAADzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "mageRect"
					},
					"CAAAAPILAAAAAAAA8wsAAAAAAAAAAAAA8wsAAAAAAAD0CwAAAAAAAAAAAAD0CwAAAAAAAPULAAAAAAAAAAAAAPULAAAAAAAA9gsAAAAAAAAAAAAA9gsAAAAAAAD3CwAAAAAAAAAAAAD3CwAAAAAAAPgLAAAAAAAAAAAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPoLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gsAAAAAAAD6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"cut",
					null,
					"AQAAAOsLAAAAAAAA6wsAAAAAAAASAAAAICBnZXQgaW1hZ2VSZWN0KCkK",
					"AQAAAAAAAAABAAAA6wsAAAAAAAD9CwAAAAAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQsAAAAAAAC9CwAAAAAAAP///////+9/"
				],
				[
					130,
					1,
					"insert_completion",
					{
						"completion": "mods",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mods"
					},
					"AgAAAL0LAAAAAAAAvQsAAAAAAAABAAAAbb0LAAAAAAAAwQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgsAAAAAAAC+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					4,
					"left_delete",
					null,
					"BAAAAMALAAAAAAAAwAsAAAAAAAABAAAAc78LAAAAAAAAvwsAAAAAAAABAAAAZL4LAAAAAAAAvgsAAAAAAAABAAAAb70LAAAAAAAAvQsAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAwQsAAAAAAADBCwAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQsAAAAAAAC9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\nimageRect"
					},
					"CwAAAL4LAAAAAAAAvwsAAAAAAAAAAAAAvwsAAAAAAADBCwAAAAAAAAAAAADBCwAAAAAAAMILAAAAAAAAAAAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAADECwAAAAAAAMULAAAAAAAAAAAAAMULAAAAAAAAxgsAAAAAAAAAAAAAxgsAAAAAAADHCwAAAAAAAAAAAADHCwAAAAAAAMgLAAAAAAAAAAAAAMgLAAAAAAAAyQsAAAAAAAAAAAAAyQsAAAAAAADKCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgsAAAAAAAC+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoLAAAAAAAAywsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAMoLAAAAAAAAygsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAywsAAAAAAADLCwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMoLAAAAAAAAywsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygsAAAAAAADKCwAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsLAAAAAAAAzAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywsAAAAAAADLCwAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMwLAAAAAAAAzgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAsAAAAAAADMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADQCwAAAAAAAAAAAADQCwAAAAAAANELAAAAAAAAAAAAANELAAAAAAAA0wsAAAAAAAAAAAAAzgsAAAAAAADOCwAAAAAAAAIAAAAgIM4LAAAAAAAA0gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQsAAAAAAADNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAANILAAAAAAAA0wsAAAAAAAAAAAAA0wsAAAAAAADUCwAAAAAAAAAAAADUCwAAAAAAANULAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gsAAAAAAADSCwAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANULAAAAAAAA1wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QsAAAAAAADVCwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcLAAAAAAAA2AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wsAAAAAAADXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANgLAAAAAAAA2gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AsAAAAAAADYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADeCwAAAAAAAAAAAADeCwAAAAAAAN8LAAAAAAAAAAAAAN8LAAAAAAAA4wsAAAAAAAAAAAAA2gsAAAAAAADaCwAAAAAAAAQAAAAgICAg2gsAAAAAAADgCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QsAAAAAAADZCwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAOALAAAAAAAA4QsAAAAAAAAAAAAA4QsAAAAAAADiCwAAAAAAAAAAAADiCwAAAAAAAOMLAAAAAAAAAAAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADlCwAAAAAAAAAAAADlCwAAAAAAAOYLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " this.w"
					},
					"BwAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAADoCwAAAAAAAOkLAAAAAAAAAAAAAOkLAAAAAAAA6gsAAAAAAAAAAAAA6gsAAAAAAADrCwAAAAAAAAAAAADrCwAAAAAAAOwLAAAAAAAAAAAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gsAAAAAAADmCwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAOwLAAAAAAAA7AsAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAAOcLAAAAAAAA5wsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA6AsAAAAAAADoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA6AsAAAAAAADpCwAAAAAAAAAAAADpCwAAAAAAAOoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " Rect("
					},
					"BgAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADsCwAAAAAAAAAAAADsCwAAAAAAAO0LAAAAAAAAAAAAAO0LAAAAAAAA7gsAAAAAAAAAAAAA7gsAAAAAAADvCwAAAAAAAAAAAADvCwAAAAAAAPALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gsAAAAAAADqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAPALAAAAAAAA8AsAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAPALAAAAAAAA8AsAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "...this.t"
					},
					"CQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAADyCwAAAAAAAPMLAAAAAAAAAAAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAD1CwAAAAAAAAAAAAD1CwAAAAAAAPYLAAAAAAAAAAAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAD4CwAAAAAAAPkLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAPgLAAAAAAAA+AsAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA+QsAAAAAAAD5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "wnd"
					},
					"AwAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAD6CwAAAAAAAPsLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AsAAAAAAAD4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					2,
					"left_delete",
					null,
					"AgAAAPoLAAAAAAAA+gsAAAAAAAABAAAAZPkLAAAAAAAA+QsAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA+wsAAAAAAAD7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "indo"
					},
					"BAAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAD7CwAAAAAAAAAAAAD7CwAAAAAAAPwLAAAAAAAAAAAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QsAAAAAAAD5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAPwLAAAAAAAA/AsAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAA/QsAAAAAAAD9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "ow.position,"
					},
					"DAAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA/QsAAAAAAAD+CwAAAAAAAAAAAAD+CwAAAAAAAP8LAAAAAAAAAAAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AsAAAAAAAD8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " ...this."
					},
					"CQAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABEMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAwAAAAAAAAIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "window.suize"
					},
					"DAAAABEMAAAAAAAAEgwAAAAAAAAAAAAAEgwAAAAAAAATDAAAAAAAAAAAAAATDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQwAAAAAAAARDAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					4,
					"left_delete",
					null,
					"BAAAABwMAAAAAAAAHAwAAAAAAAABAAAAZRsMAAAAAAAAGwwAAAAAAAABAAAAehoMAAAAAAAAGgwAAAAAAAABAAAAaRkMAAAAAAAAGQwAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAHQwAAAAAAAAdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "ize);"
					},
					"BQAAABkMAAAAAAAAGgwAAAAAAAAAAAAAGgwAAAAAAAAbDAAAAAAAAAAAAAAbDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAHQwAAAAAAAAAAAAAHQwAAAAAAAAeDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQwAAAAAAAAZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"cut",
					null,
					"AQAAAB4MAAAAAAAAHgwAAAAAAAAFAAAAdGhpcy4",
					"AQAAAAAAAAABAAAAHgwAAAAAAAAjDAAAAAAAAP///////+9/"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAPALAAAAAAAA8AsAAAAAAAAXAAAALi4udGhpcy53aW5kb3cucG9zaXRpb27wCwAAAAAAAAkMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAAAHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAPELAAAAAAAA8gsAAAAAAAAAAAAA8gsAAAAAAADyCwAAAAAAABcAAAAuLi50aGlzLndpbmRvdy5wb3NpdGlvbg",
					"AQAAAAAAAAABAAAA8QsAAAAAAAAIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"left_delete",
					null,
					"AQAAAPELAAAAAAAA8QsAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPALAAAAAAAA8AsAAAAAAAABAAAAJ/ALAAAAAAAA8AsAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "0."
					},
					"AgAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAAPELAAAAAAAA8QsAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": ",0"
					},
					"AgAAAPELAAAAAAAA8gsAAAAAAAAAAAAA8gsAAAAAAADzCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					2,
					"right_delete",
					null,
					"AgAAAP0LAAAAAAAA/QsAAAAAAAAGAAAAd2luZG93/QsAAAAAAAD9CwAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAA/QsAAAAAAAADDAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"left_delete",
					null,
					"AQAAAL0LAAAAAAAAvQsAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAvgsAAAAAAAC+CwAAAAAAAP///////+9/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQsAAAAAAAC9CwAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"shfo",
				"Pretty Shell: Format"
			],
			[
				"format",
				"Formatter: Beautify With Prettier"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIControlEvent.js",
		"/home/roman/Schreibtisch/Reichelt - PIC Prozessoren 2.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDISysExEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIInstrument.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIFile.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIMetaEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDITrack.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIStream.js",
		"/home/roman/Projects/plot-cv/lib/midi.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/test-midi.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/midi-client.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDI.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/glfw.sh",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/midi.html",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/xpath.g4",
		"/home/roman/Projects/plot-cv/lib/spawn.js",
		"/home/roman/Projects/plot-cv/trkl.es",
		"/home/roman/Projects/plot-cv/deep.es",
		"/home/roman/Projects/plot-cv/preact.es",
		"/home/roman/Projects/plot-cv/preact.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/discogs.js",
		"/home/roman/Projects/plot-cv/lscache.es",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg-qjs.h",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-104",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/check-discogs.js",
		"/home/roman/Projects/plot-cv/libs.js",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-102",
		"/home/roman/Projects/plot-cv/discogs.es",
		"/home/roman/Projects/plot-cv/date-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js.orig",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/childProcess.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/config.js",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/a.out",
		"/home/roman/Projects/plot-cv/test-autoplacer.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/lib/geom/size.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/size.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/workerScript.js",
		"/home/roman/Projects/plot-cv/videoSource.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_clahe.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/plot-cv/test-diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Sources/opencv/modules/videoio/src/cap_ffmpeg_impl.hpp",
		"/home/roman/Sources/opencv/modules/videoio/src/cap_ffmpeg.cpp",
		"/home/roman/Projects/ffmpeg-audio/orange-ffmpeg/ffmpeg-libs/static/ffmpeg/share/ffmpeg/examples/demuxing_decoding.c",
		"/home/roman/Projects/plot-cv/opencv-video.c",
		"/home/roman/Projects/plot-cv/simplest_ffmpeg_audio_decoder.cpp",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/fetch-post-prices.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/printer.js",
		"/home/roman/Projects/plot-cv/jack-session-client.c",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/lib/mics.js",
		"/home/roman/Projects/plot-cv/create-tamper.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
		"/home/roman/Projects/plot-cv/time-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/scripts/collapse-imports.sh",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/lib/eda/circuitjs.js",
		"/home/roman/Projects/plot-cv/lib/eda/values.js",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/an-tronics/eagle/Headphone-Amplifier-ClassAB-alt.sch",
		"/home/roman/Projects/plot-cv/lib/json/path.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,-*/opencv/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"GLFW",
			"COLOR_BGR2RGBA",
			"new Window",
			"opts\\.",
			"opts",
			"$",
			"main",
			"Param",
			"',].",
			"seek",
			"seekMsecs",
			"imgSz_2",
			"center",
			"pattern",
			"ImagePattern",
			"img2Sz",
			"this\\.window",
			"this",
			"glfw\\.",
			"cv\\.",
			"cv\\",
			"cv\\.",
			"glfw\\.",
			"Window",
			"Rect",
			"Size",
			"glfw\\.",
			"resolution",
			"handlers",
			"\\)  }\\)",
			"{}$",
			"{}",
			"glfw\\.",
			"glfw.Position",
			"glfw\\.",
			"glfw",
			"Size",
			"nvg",
			"glfw\\.",
			"^function",
			"new GLFW",
			"CreateImageRGBA",
			"imageRect",
			"mageRect",
			"'video'",
			"^(\\s*)console",
			"^\\s*console",
			"\\.capture'",
			"capture'",
			"'video'",
			"globalThis.globalThis\\.",
			"child_globalThis.process",
			"globalThis.process",
			"process\\.",
			"format",
			"status",
			"MIDIContr",
			"MIDIEvent\\.",
			"TYPE_META",
			"MIDIEvent\\.",
			" default as ",
			"MIDIControlEvent",
			"MIDIEvent\\.",
			"MIDIStream",
			"MIDITrack.prototype.(.*) = function",
			"MIDISysExEvent.prototype.(.*) = function",
			"MIDIStream.prototype.(.*) = function",
			"MIDIMetaEvent\\.",
			"MIDIMetaEvent.prototype.(.*) = function",
			"MThd",
			"readHeader",
			"MIDIFile.prototype.(.*) = function",
			"^MIDIControlEvent\\.",
			"MIDIControlEvent.prototype.(.*) = function",
			"hibyte",
			" MIDIEvent\\.",
			"\\.read",
			"status",
			" MIDIEvent\\.[a-z]",
			"MIDIEvent\\.[a-z]",
			"stream",
			"MIDI",
			"mIDI",
			"^import",
			"import ([^ ]*) ",
			"mIDI",
			"lib/midi/",
			"CONST ",
			"0X",
			"net\\.",
			"127.0.0.1",
			"selectors",
			"DJS_SHARED_LIBRARY",
			"Shipping Address",
			"/\\*",
			"thread_content",
			"diskosenn",
			"import\\(",
			"ReadJSON",
			"orderDocuments",
			"pageParse",
			"ordersLoad",
			"pageParse",
			"Parser",
			"orderIdCells",
			"CachedFet",
			"CachedFett",
			"7",
			"pageFet",
			"CachedFetch",
			"CachedFetch\\(",
			"CachedFetch",
			"fetch =",
			"Fetch",
			"globalThis",
			"cacheLoad =",
			"$",
			"getTextFlat",
			"pageGetRequests",
			"Keys",
			"getAttribute",
			"scaleIFrame",
			"const frame",
			"makeIFrame",
			"naviga",
			"getTextFlat",
			"frameLoad",
			"^{"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"window",
			"",
			"options",
			" }\\)",
			"{},",
			"Position",
			"export function",
			"\\1//console",
			"globalThis.",
			"child_process",
			"globalThis.process\\.",
			" ",
			"\\1",
			"static ",
			"\\1 ",
			"static ",
			"\\1",
			"MIDI",
			"export",
			"export { default as \\1 } ",
			"MIDI",
			"",
			"const ",
			"0x",
			"",
			"ordersGetList",
			"getCacheValue",
			"tlsv",
			"\\1",
			"http",
			"fs.",
			",\\n    '-H', ",
			"Size.getOther(",
			"matrix",
			" cv::CV_",
			"CV_RGB(0, 0, 0)",
			"",
			"point",
			"\\\\D",
			"\\\\d",
			"\\.deref",
			"is_alphanumeric_char",
			"is_whitespace_char",
			"length",
			"{ const",
			"{ return",
			"const  {flags}=this;\\nreturn flags",
			"defines",
			"",
			"fs.\\1Sync",
			"define",
			",",
			"file",
			"target_compile_definitions",
			"msg",
			"PmDeviceInfo",
			"export function",
			"libportmidi",
			"\\1//\\2",
			"text",
			"\\1",
			"export function",
			"export &",
			"fs.",
			"array",
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1362,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/test-video.js",
							"function_name_status_row": 0,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1384,
									1399
								],
								[
									1425,
									1446
								],
								[
									1479,
									1507
								],
								[
									1547,
									1567
								],
								[
									1597,
									1609
								],
								[
									1632,
									1642
								],
								[
									1663,
									1684
								],
								[
									1716,
									1741
								],
								[
									1786,
									1807
								],
								[
									1883,
									1904
								],
								[
									2004,
									2013
								],
								[
									2031,
									2041
								],
								[
									2103,
									2112
								],
								[
									2173,
									2181
								],
								[
									2241,
									2249
								],
								[
									2311,
									2339
								],
								[
									2380,
									2387
								],
								[
									2431,
									2481
								],
								[
									2485,
									2489
								],
								[
									2512,
									2522
								],
								[
									2553,
									2577
								],
								[
									2608,
									2613
								],
								[
									2652,
									2677
								],
								[
									2925,
									2937
								],
								[
									2958,
									2978
								],
								[
									3052,
									3081
								],
								[
									3171,
									3192
								],
								[
									3233,
									3312
								],
								[
									3384,
									3414
								],
								[
									3484,
									3518
								],
								[
									3566,
									3589
								],
								[
									3616,
									3620
								],
								[
									3674,
									3701
								],
								[
									3779,
									3811
								],
								[
									4007,
									4029
								],
								[
									4571,
									4584
								],
								[
									4775,
									4794
								],
								[
									4859,
									4902
								],
								[
									5636,
									5658
								],
								[
									5721,
									5727
								],
								[
									5763,
									5767
								],
								[
									5790,
									5811
								],
								[
									6341,
									6370
								],
								[
									9440,
									9471
								],
								[
									10165,
									10193
								],
								[
									10364,
									10387
								],
								[
									10447,
									10470
								],
								[
									10593,
									10622
								],
								[
									10836,
									10860
								],
								[
									11061,
									11088
								],
								[
									11136,
									11141
								],
								[
									11419,
									11448
								],
								[
									11985,
									11998
								],
								[
									12228,
									12236
								],
								[
									12716,
									12753
								],
								[
									12880,
									12885
								],
								[
									13073,
									13094
								],
								[
									13135,
									13154
								],
								[
									13164,
									13176
								],
								[
									13294,
									13299
								],
								[
									14187,
									14225
								],
								[
									16225,
									16229
								],
								[
									17582,
									17605
								],
								[
									18404,
									18416
								],
								[
									18632,
									18671
								],
								[
									21198,
									21237
								],
								[
									21273,
									21293
								],
								[
									21916,
									21920
								],
								[
									22362,
									22395
								],
								[
									22479,
									22488
								],
								[
									22521,
									22542
								],
								[
									23445,
									23459
								],
								[
									23576,
									23592
								],
								[
									23731,
									23739
								]
							],
							"symlist":
							[
								"NTH_POINT: c =>",
								"RADIAL_DISTANCE: c =>",
								"PERPENDICULAR_DISTANCE: c =>",
								"REUMANN_WITKAM: c =>",
								"OPHEIM: c =>",
								"LANG: c =>",
								"DOUGLAS_PEUCKER: c =>",
								"Hierarchy(array)",
								"  .index = function(id)",
								"  .index = function(id)",
								"Hierarchy",
								"  parent(id)",
								"  child(id)",
								"  next(id)",
								"  prev(id)",
								"  getConstants(names)",
								"  name =>",
								"  findConstant(value, keyCond = k => /^CV/.",
								"(k))",
								"\t(v, k) =>",
								"  findType(value)",
								"\tk =>",
								"  getBitDepth(mat)",
								"(...args) =>",
								"  minMax(mat)",
								"  modifierMap(keyCode)",
								"([modifier, flag]) =>",
								"  drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
								"  getParents(hier, id)",
								"  getContourDepth(hier, id)",
								"  findRoot(hier)",
								"  h =>",
								"  getToplevel(hier)",
								"  walkContours(hier, id)",
								"  main(...args)",
								"\t() =>",
								"\t(file, current) =>",
								"\t(arg, current, options, results) =>",
								"  makeRainbow = steps =>",
								"  hue =>",
								"  h =>",
								"  printFlags = flags =>",
								"(event, x, y, flags)",
								"AcquireFrame(src, dst)",
								"Grayscale(src, dst)",
								"Norm(src, dst)",
								"Blur(src, dst)",
								"EdgeDetect(src, dst)",
								"Morph(src, dst)",
								"Contours(src, dst)",
								"\th =>",
								"HoughLines(src, dst)",
								"\t(i, n) =>",
								"  image =>",
								"\tfunction(value, count, name, window)",
								"() =>",
								"ClearSurface = mat =>",
								"MakeSurface = () =>",
								"(...args) =>",
								"() =>",
								"\t(acc, [modifier, active]) =>",
								"  n =>",
								"  showOutput()",
								"([i, id]) =>",
								"  drawParam(param, y, color)",
								"  saveContours(contours, size)",
								"(acc, contour, i) =>",
								"  d =>",
								"  saveLines(lines, size)",
								"  coords =>",
								"([x1, y1, x2, y2]) =>",
								"(a, [k, v]) =>",
								"\tframe =>",
								"  frame =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646105508.61,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-video.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24073,
						"regions":
						{
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										22119,
										22124
									],
									[
										22715,
										22720
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										22063,
										22063
									],
									[
										22659,
										22659
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										6238,
										6242
									],
									[
										12680,
										12684
									],
									[
										13642,
										13646
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										6216,
										6216
									],
									[
										12648,
										12648
									],
									[
										13634,
										13634
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								14342,
								14436
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 447,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646123129.39,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								8,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7231.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "draw-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4994,
						"regions":
						{
						},
						"selection":
						[
							[
								3006,
								3006
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 99,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646121653.79,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1275.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.846927086596,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139700989367200)":
	{
		"height": 0.0
	},
	"output.Protocol(139713492737424)":
	{
		"height": 0.0
	},
	"output.Protocol(140020110213280)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752054832)":
	{
		"height": 0.0
	},
	"output.Protocol(140156680251040)":
	{
		"height": 0.0
	},
	"output.Protocol(140190209186352)":
	{
		"height": 0.0
	},
	"output.Protocol(140264240155856)":
	{
		"height": 0.0
	},
	"output.Protocol(140329702042448)":
	{
		"height": 0.0
	},
	"output.Protocol(140490298408144)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873410144)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610778000)":
	{
		"height": 0.0
	},
	"output.Protocol(140627243657680)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"draw",
				"draw-utils.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"param",
				"param.js"
			],
			[
				"cvPip",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"glfw.s",
				"glfw.sh"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"test-mid",
				"test-midi.js"
			],
			[
				"midi.js",
				"lib/midi.js"
			],
			[
				"test-midi",
				"test-midi.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"midi-clie",
				"midi-client.js"
			],
			[
				"midi.html",
				"midi.html"
			],
			[
				"css",
				"lib/grammars/css3.g4"
			],
			[
				"xpath",
				"lib/grammars/xpath.g4"
			],
			[
				"console",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"libs.js",
				"libs.js"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"disco",
				"discogs.js"
			],
			[
				"spawn.",
				"lib/spawn.js"
			],
			[
				"helpers",
				"io-helpers.js.orig"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"package.j",
				"package.json"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-imrea",
				"test-imread.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"cvpipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"events.js",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"test-vi",
				"test-video.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"size.js",
				"lib/geom/size.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"test-wor",
				"test-worker.js"
			],
			[
				"ws-work",
				"ws-worker.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"cvVi",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"ideoSou",
				"videoSource.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"documen",
				"lib/eagle/document.js"
			],
			[
				"cvPipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"dia",
				"diagram.js"
			],
			[
				"diagra",
				"diagram.js"
			],
			[
				"diag",
				"diagram.js"
			],
			[
				"opencv-vi",
				"opencv-video.c"
			],
			[
				"opencv-vide",
				"opencv-video.c"
			],
			[
				"simplest",
				"simplest_ffmpeg_audio_decoder.cpp"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"js",
				"jack-session-client.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"diagram",
				"diagram.js"
			],
			[
				"point.hpp",
				"qjs-opencv/js_point.hpp"
			],
			[
				"jsbind",
				"qjs-opencv/jsbindings.hpp"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"help",
				"time-helpers.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"image",
				"imagePipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"minnet-http",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"minnet-server",
				"quickjs/qjs-net/minnet-server.c"
			],
			[
				"minnet.c",
				"quickjs/qjs-net/minnet.c"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"time-help",
				"time-helpers.js"
			],
			[
				"io-helpers",
				"io-helpers.js"
			],
			[
				"test-bjson",
				"test-bjson.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"commands.j",
				"commands.js"
			],
			[
				"render",
				"lib/eagle/renderer.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"diff.js",
				"lib/json/diff.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"repl",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"circuit",
				"lib/eda/circuitjs.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-shell.js",
				"cv-shell.js"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"queue.h",
				"quickjs/qjs-modules/queue.h"
			],
			[
				"queue.c",
				"quickjs/qjs-modules/queue.c"
			],
			[
				"char-utils",
				"quickjs/qjs-modules/char-utils.h"
			],
			[
				"quickjs-misc.",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"predicate.c",
				"quickjs/qjs-modules/predicate.c"
			],
			[
				"debugger-tran",
				"quickjs/quickjs-debugger-transport-win.c"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger-transport-unix.c"
			],
			[
				"defs",
				"quickjs/defs.cmake"
			],
			[
				"quickjs/CMakeLi",
				"quickjs/CMakeLists.txt"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-pred",
				"quickjs/qjs-modules/quickjs-predicate.c"
			],
			[
				"package",
				"package.json"
			],
			[
				"xpath.js",
				"lib/dom/xpath.js"
			],
			[
				"compileComm",
				"lib/build/compileCommand.js"
			],
			[
				"compile_com",
				"compile_commands.js"
			],
			[
				"quickjs-pat",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"test-child",
				"test-childprocess.js"
			],
			[
				"test-ini",
				"test-ini.js"
			],
			[
				"fn.js",
				"lib/parse/fn.js"
			],
			[
				"test-css",
				"test-css3.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"grammar-css3",
				"grammar-css3.js"
			],
			[
				"css3",
				"lib/grammars/css3.g4"
			],
			[
				"grammar.js",
				"lib/parse/grammar.js"
			],
			[
				"test-parse",
				"test-parse.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"lexer",
				"lib/parse/lexer.js"
			],
			[
				"ecmascript.js",
				"lib/ecmascript.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"imgui",
				"cmake/imgui-viewer.cmake"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 286.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
