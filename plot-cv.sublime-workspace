{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "‚Äî‚íª‚Äì eval_buf ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì eval_file ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì JS_NewCustomContext ( ) { ‚Ä¶ } ‚Äî function\n‚Äî‚íª‚Äì main ( ) { ‚Ä¶ } ‚Äî function",
			"settings":
			{
				"buffer_size": 143,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					374,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					375,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					376,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AQAAAAAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					377,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAzwIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					378,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
							]
						],
						"symlist":
						[
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					379,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
							]
						],
						"symlist":
						[
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					380,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/iwyu.sh",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					381,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
						"symkeys":
						[
							[
								478,
								493
							],
							[
								768,
								790
							],
							[
								873,
								890
							],
							[
								1268,
								1285
							],
							[
								1355,
								1372
							],
							[
								1477,
								1486
							],
							[
								1576,
								1586
							],
							[
								1653,
								1663
							],
							[
								1752,
								1762
							],
							[
								1858,
								1868
							],
							[
								2050,
								2058
							],
							[
								2170,
								2176
							],
							[
								2300,
								2308
							],
							[
								2338,
								2347
							],
							[
								2977,
								2981
							],
							[
								3134,
								3145
							],
							[
								3293,
								3306
							],
							[
								3628,
								3641
							],
							[
								3838,
								3846
							],
							[
								3922,
								3931
							],
							[
								4037,
								4058
							],
							[
								4294,
								4316
							],
							[
								4563,
								4571
							],
							[
								4611,
								4620
							],
							[
								5123,
								5136
							],
							[
								5452,
								5465
							],
							[
								5662,
								5670
							],
							[
								5767,
								5795
							],
							[
								6112,
								6120
							],
							[
								6159,
								6168
							],
							[
								6621,
								6634
							],
							[
								6909,
								6922
							],
							[
								7119,
								7127
							],
							[
								7223,
								7250
							],
							[
								7528,
								7536
							],
							[
								7582,
								7591
							],
							[
								8236,
								8249
							],
							[
								8542,
								8555
							],
							[
								8752,
								8760
							],
							[
								8881,
								8915
							],
							[
								9211,
								9219
							],
							[
								9265,
								9274
							],
							[
								9913,
								9926
							],
							[
								10219,
								10232
							],
							[
								10429,
								10437
							],
							[
								10530,
								10538
							],
							[
								10583,
								10592
							],
							[
								11234,
								11247
							],
							[
								11541,
								11554
							],
							[
								11751,
								11759
							],
							[
								11851,
								11859
							],
							[
								11897,
								11906
							],
							[
								12533,
								12546
							],
							[
								12868,
								12881
							],
							[
								13061,
								13070
							],
							[
								13337,
								13345
							],
							[
								13560,
								13568
							],
							[
								13607,
								13616
							],
							[
								14264,
								14272
							],
							[
								14365,
								14373
							],
							[
								14429,
								14441
							],
							[
								14468,
								14478
							],
							[
								14500,
								14509
							],
							[
								15275,
								15288
							],
							[
								15610,
								15623
							],
							[
								15831,
								15835
							],
							[
								15996,
								16004
							],
							[
								16050,
								16059
							],
							[
								16716,
								16729
							],
							[
								17051,
								17064
							],
							[
								17261,
								17269
							],
							[
								17385,
								17396
							],
							[
								17555,
								17566
							],
							[
								17648,
								17658
							],
							[
								17759,
								17773
							],
							[
								17855,
								17865
							],
							[
								17956,
								17967
							],
							[
								18188,
								18201
							],
							[
								18464,
								18477
							],
							[
								18673,
								18686
							],
							[
								18928,
								18941
							],
							[
								19228,
								19241
							],
							[
								19464,
								19477
							]
						],
						"symlist":
						[
							"js_array_length",
							"JS_DeletePropertyInt64",
							"js_array_truncate",
							"js_array_iterator",
							" js_array_iterator",
							" operator*",
							" operator++",
							" operator++",
							" operator==",
							" operator!=",
							"js_begin",
							"js_end",
							"js_array",
							" to_vector",
							" from",
							" from_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							" to_scalar",
							"js_array<T>::to_array",
							"js_array<T>::to_scalar",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<uint32_t>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSValue>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSColorData<T>>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_scalar",
							" to_array",
							"js_array",
							" to_vector",
							" to_array",
							"js_array",
							" contour_type",
							" point_type",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" from",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array_to",
							"js_array_to",
							"array_type",
							"js_array_input",
							"array_type",
							"js_array_to",
							"js_array_from",
							"js_array_from",
							"js_array_from",
							"js_array_copy",
							"js_array_copy",
							"js_array_copy"
						]
					},
					"AQAAAAAAAAAAAAAAuQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					382,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
							]
						],
						"symlist":
						[
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BAAAICBqc19hcnJheV9sZW5ndGgKSlNfRGVsZXRlUHJvcGVydHlJbnQ2NAogIGpzX2FycmF5X3RydW5jYXRlCiAganNfYXJyYXlfaXRlcmF0b3IKICBqc19hcnJheV9pdGVyYXRvcgogIG9wZXJhdG9yKgogIG9wZXJhdG9yKysKICBvcGVyYXRvcisrCiAgb3BlcmF0b3I9PQogIG9wZXJhdG9yIT0KICBqc19iZWdpbgogIGpzX2VuZAogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgZnJvbQogIGZyb21fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIHRvX3NjYWxhcgogIGpzX2FycmF5PFQ+Ojp0b19hcnJheQogIGpzX2FycmF5PFQ+Ojp0b19zY2FsYXIKICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheTx1aW50MzJfdD46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNWYWx1ZT46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNDb2xvckRhdGE8VD4+Ojp0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19zY2FsYXIKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgdG9fYXJyYXkKICBqc19hcnJheQogIGNvbnRvdXJfdHlwZQogIHBvaW50X3R5cGUKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIGZyb20KICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheV90bwogIGpzX2FycmF5X3RvCiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X2lucHV0CiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X3RvCiAganNfYXJyYXlfZnJvbQogIGpzX2FycmF5X2Zyb20KICBqc19hcnJheV9mcm9tCiAganNfYXJyYXlfY29weQogIGpzX2FycmF5X2NvcHkKICBqc19hcnJheV9jb3B5AAAAAAAAAAD/AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					383,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
						"symkeys":
						[
							[
								68,
								79
							],
							[
								92,
								109
							],
							[
								197,
								202
							],
							[
								214,
								227
							],
							[
								231,
								242
							],
							[
								337,
								350
							],
							[
								3372,
								3385
							],
							[
								3389,
								3399
							],
							[
								3562,
								3575
							],
							[
								3579,
								3592
							],
							[
								3687,
								3700
							],
							[
								3743,
								3756
							],
							[
								3913,
								3926
							],
							[
								3948,
								3961
							],
							[
								3975,
								3988
							],
							[
								4091,
								4105
							],
							[
								4109,
								4123
							],
							[
								4167,
								4180
							],
							[
								4184,
								4203
							],
							[
								4261,
								4278
							],
							[
								4293,
								4306
							],
							[
								4312,
								4325
							],
							[
								4374,
								4387
							],
							[
								4391,
								4410
							],
							[
								4464,
								4483
							],
							[
								4487,
								4506
							],
							[
								4562,
								4578
							],
							[
								4582,
								4593
							],
							[
								4868,
								4880
							],
							[
								4979,
								5011
							],
							[
								5269,
								5283
							],
							[
								5314,
								5333
							],
							[
								5377,
								5399
							],
							[
								5403,
								5425
							],
							[
								5429,
								5446
							],
							[
								5462,
								5487
							],
							[
								5491,
								5516
							],
							[
								5520,
								5537
							],
							[
								5583,
								5602
							],
							[
								5606,
								5620
							],
							[
								5624,
								5643
							],
							[
								5657,
								5674
							],
							[
								5678,
								5692
							],
							[
								5696,
								5713
							],
							[
								5727,
								5740
							],
							[
								5955,
								5968
							],
							[
								6085,
								6099
							]
						],
						"symlist":
						[
							"find_opencv",
							"OPENCV_CHANGE_DIR",
							"VALUE",
							"OPENCV_PREFIX",
							"OPENCV_ROOT",
							"OPENCV_CHANGE",
							"OPENCV_PREFIX",
							"OpenCV_DIR",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_PREFIX",
							"OPENCV_VERSION",
							"OpenCV_VERSION",
							"OPENCV_LIBDIR",
							"OpenCV_INSTALL_PATH",
							"OPENCV_LINK_FLAGS",
							"OPENCV_LIBDIR",
							"OPENCV_LIBDIR",
							"OPENCV_PREFIX",
							"OpenCV_INSTALL_PATH",
							"OPENCV_INCLUDE_DIRS",
							"OpenCV_INCLUDE_DIRS",
							"OPENCV_LIBRARIES",
							"OpenCV_LIBS",
							"OPENCV_FOUND",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"OPENCV_LIB_DIR",
							"OPENCV_INCLUDE_DIRS",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"OPENCV_LINK_FLAGS",
							"CMAKE_SHARED_LINKER_FLAGS",
							"CMAKE_SHARED_LINKER_FLAGS",
							"OPENCV_LINK_FLAGS",
							"CMAKE_INSTALL_RPATH",
							"OPENCV_LIB_DIR",
							"CMAKE_INSTALL_RPATH",
							"CMAKE_BUILD_RPATH",
							"OPENCV_LIB_DIR",
							"CMAKE_BUILD_RPATH",
							"OPENCV_RESULT",
							"OPENCV_PREFIX",
							"OPENCV_CHECKED"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAAJAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.config.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAJAwAAICBmaW5kX29wZW5jdgpPUEVOQ1ZfQ0hBTkdFX0RJUgpWQUxVRQpPUEVOQ1ZfUFJFRklYCk9QRU5DVl9ST09UCk9QRU5DVl9DSEFOR0UKT1BFTkNWX1BSRUZJWApPcGVuQ1ZfRElSCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1BSRUZJWApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1BSRUZJWApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9QUkVGSVgKT1BFTkNWX1ZFUlNJT04KT3BlbkNWX1ZFUlNJT04KT1BFTkNWX0xJQkRJUgpPcGVuQ1ZfSU5TVEFMTF9QQVRICk9QRU5DVl9MSU5LX0ZMQUdTCk9QRU5DVl9MSUJESVIKT1BFTkNWX0xJQkRJUgpPUEVOQ1ZfUFJFRklYCk9wZW5DVl9JTlNUQUxMX1BBVEgKT1BFTkNWX0lOQ0xVREVfRElSUwpPcGVuQ1ZfSU5DTFVERV9ESVJTCk9QRU5DVl9MSUJSQVJJRVMKT3BlbkNWX0xJQlMKT1BFTkNWX0ZPVU5EClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICk9QRU5DVl9MSUJfRElSCk9QRU5DVl9JTkNMVURFX0RJUlMKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCk9QRU5DVl9MSU5LX0ZMQUdTCkNNQUtFX1NIQVJFRF9MSU5LRVJfRkxBR1MKQ01BS0VfU0hBUkVEX0xJTktFUl9GTEFHUwpPUEVOQ1ZfTElOS19GTEFHUwpDTUFLRV9JTlNUQUxMX1JQQVRICk9QRU5DVl9MSUJfRElSCkNNQUtFX0lOU1RBTExfUlBBVEgKQ01BS0VfQlVJTERfUlBBVEgKT1BFTkNWX0xJQl9ESVIKQ01BS0VfQlVJTERfUlBBVEgKT1BFTkNWX1JFU1VMVApPUEVOQ1ZfUFJFRklYCk9QRU5DVl9DSEVDS0VEAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AQAAAAAAAAAAAAAATQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
							]
						],
						"symlist":
						[
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AQAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
							]
						],
						"symlist":
						[
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAM8CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
							]
						],
						"symlist":
						[
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAADPAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-eagle.js",
						"symkeys":
						[
							[
								477,
								508
							],
							[
								628,
								650
							],
							[
								765,
								789
							],
							[
								820,
								841
							],
							[
								923,
								948
							],
							[
								1144,
								1170
							],
							[
								1604,
								1634
							],
							[
								1846,
								1850
							],
							[
								1943,
								1947
							],
							[
								2359,
								2363
							],
							[
								2722,
								2752
							],
							[
								2994,
								3002
							],
							[
								3069,
								3073
							],
							[
								3163,
								3170
							],
							[
								3472,
								3496
							],
							[
								4334,
								4356
							],
							[
								4749,
								4783
							],
							[
								5349,
								5363
							],
							[
								5491,
								5495
							],
							[
								5517,
								5531
							],
							[
								5562,
								5566
							],
							[
								7051,
								7055
							],
							[
								7318,
								7334
							],
							[
								7384,
								7399
							],
							[
								7468,
								7487
							],
							[
								7510,
								7522
							],
							[
								7612,
								7616
							],
							[
								7851,
								7855
							],
							[
								8207,
								8213
							],
							[
								8309,
								8323
							],
							[
								8357,
								8375
							],
							[
								8517,
								8529
							],
							[
								8559,
								8587
							],
							[
								8989,
								8993
							]
						],
						"symlist":
						[
							"function xmlize(obj, depth = 2)",
							"function testLocator()",
							"function testProxyTree()",
							"(path, key, value) =>",
							"function testProxyClone()",
							"function testJsonPointer()",
							"async function testGraph(proj)",
							"e =>",
							"e =>",
							"p =>",
							"function updateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function alignItem(item)",
							"function alignAll(doc)",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"d =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"async function main(...args)",
							"f =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAN0BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADdAQAAICB4bWxpemUob2JqLCBkZXB0aCA9IDIpCiAgdGVzdExvY2F0b3IoKQogIHRlc3RQcm94eVRyZWUoKQoocGF0aCwga2V5LCB2YWx1ZSkgPT4KICB0ZXN0UHJveHlDbG9uZSgpCiAgdGVzdEpzb25Qb2ludGVyKCkKICB0ZXN0R3JhcGgocHJvaikKICBlID0+CiAgZSA9PgogIHAgPT4KICB1cGRhdGVNZWFzdXJlcyhib2FyZCkKICBsaW5lcyA9PgogIGUgPT4KICBsaW5lID0+CiAgYWxpZ25JdGVtKGl0ZW0pCiAgYWxpZ25BbGwoZG9jKQogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgogIGQgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KICAoW2ssIHZdKSA9PgogIG1haW4oLi4uYXJncykKICBmID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8547,
								8552
							],
							[
								8734,
								8740
							],
							[
								8798,
								8803
							],
							[
								8856,
								8860
							],
							[
								8934,
								8938
							],
							[
								8960,
								8969
							],
							[
								9628,
								9647
							],
							[
								9746,
								9750
							],
							[
								10124,
								10148
							],
							[
								10189,
								10210
							],
							[
								10212,
								10217
							],
							[
								10225,
								10230
							],
							[
								10252,
								10287
							],
							[
								10401,
								10419
							],
							[
								10501,
								10506
							],
							[
								10698,
								10719
							],
							[
								10852,
								10870
							],
							[
								11549,
								11574
							],
							[
								11620,
								11638
							],
							[
								12614,
								12641
							],
							[
								12996,
								13021
							],
							[
								13360,
								13394
							],
							[
								13910,
								13942
							],
							[
								14117,
								14127
							],
							[
								14260,
								14270
							],
							[
								14389,
								14399
							],
							[
								14566,
								14590
							],
							[
								14649,
								14698
							],
							[
								14940,
								14962
							],
							[
								14969,
								14993
							],
							[
								15001,
								15030
							],
							[
								15598,
								15650
							],
							[
								16104,
								16108
							],
							[
								16135,
								16140
							],
							[
								16575,
								16661
							],
							[
								16859,
								16881
							],
							[
								17394,
								17426
							],
							[
								17754,
								17788
							],
							[
								17903,
								17908
							],
							[
								17933,
								17969
							],
							[
								18158,
								18183
							],
							[
								18374,
								18399
							],
							[
								18454,
								18458
							],
							[
								18513,
								18517
							],
							[
								18964,
								18981
							],
							[
								19175,
								19190
							],
							[
								19313,
								19330
							],
							[
								19382,
								19386
							],
							[
								19431,
								19435
							],
							[
								19466,
								19470
							],
							[
								19513,
								19518
							],
							[
								19605,
								19624
							],
							[
								19839,
								19874
							],
							[
								19912,
								19920
							],
							[
								19989,
								19993
							],
							[
								20556,
								20560
							],
							[
								20619,
								20623
							],
							[
								21193,
								21199
							],
							[
								21374,
								21378
							],
							[
								21399,
								21403
							],
							[
								21438,
								21442
							],
							[
								21707,
								21720
							],
							[
								21848,
								21852
							],
							[
								22046,
								22062
							],
							[
								22328,
								22333
							],
							[
								22446,
								22455
							],
							[
								22527,
								22536
							],
							[
								22613,
								22622
							],
							[
								23262,
								23284
							],
							[
								23461,
								23521
							],
							[
								23770,
								23790
							],
							[
								23801,
								23810
							],
							[
								23865,
								23877
							],
							[
								23922,
								23929
							],
							[
								24015,
								24046
							],
							[
								24368,
								24401
							],
							[
								25440,
								25493
							],
							[
								25543,
								25552
							],
							[
								25627,
								25670
							],
							[
								25749,
								25753
							],
							[
								25882,
								25889
							],
							[
								25916,
								25923
							],
							[
								26001,
								26022
							],
							[
								26277,
								26319
							],
							[
								26442,
								26463
							],
							[
								26698,
								26743
							],
							[
								26936,
								27006
							],
							[
								27443,
								27468
							],
							[
								27491,
								27495
							],
							[
								27515,
								27528
							],
							[
								27644,
								27716
							],
							[
								28025,
								28034
							],
							[
								28466,
								28531
							],
							[
								28618,
								28644
							],
							[
								28856,
								28881
							],
							[
								28904,
								28908
							],
							[
								28928,
								28941
							],
							[
								28995,
								29051
							],
							[
								29053,
								29059
							],
							[
								29068,
								29070
							],
							[
								29095,
								29102
							],
							[
								29126,
								29215
							],
							[
								29222,
								29245
							],
							[
								29308,
								29335
							],
							[
								29344,
								29364
							],
							[
								29499,
								29503
							],
							[
								29678,
								29697
							],
							[
								29781,
								29800
							],
							[
								29893,
								29908
							],
							[
								30798,
								30813
							],
							[
								30904,
								30919
							],
							[
								31591,
								31632
							],
							[
								31837,
								31841
							],
							[
								31871,
								31882
							],
							[
								31965,
								31985
							],
							[
								32200,
								32224
							],
							[
								32282,
								32322
							],
							[
								32694,
								32713
							],
							[
								32764,
								32783
							],
							[
								33645,
								33673
							],
							[
								33878,
								33890
							],
							[
								33921,
								33933
							],
							[
								34444,
								34492
							],
							[
								34715,
								34721
							],
							[
								34871,
								34876
							],
							[
								34902,
								34909
							],
							[
								34972,
								34977
							],
							[
								35005,
								35012
							],
							[
								35645,
								35661
							],
							[
								35784,
								35788
							],
							[
								36296,
								36304
							],
							[
								36747,
								36755
							],
							[
								36808,
								36813
							],
							[
								36854,
								36862
							],
							[
								37002,
								37007
							],
							[
								37094,
								37110
							],
							[
								38786,
								38791
							],
							[
								39424,
								39475
							],
							[
								39883,
								39888
							],
							[
								39907,
								39912
							],
							[
								40220,
								40237
							],
							[
								40397,
								40403
							],
							[
								40532,
								40552
							],
							[
								40629,
								40659
							],
							[
								40835,
								40843
							],
							[
								40947,
								40958
							],
							[
								41074,
								41078
							],
							[
								41815,
								41856
							],
							[
								42479,
								42502
							],
							[
								43091,
								43095
							],
							[
								43239,
								43243
							],
							[
								43755,
								43759
							],
							[
								43774,
								43804
							],
							[
								43852,
								43856
							],
							[
								43870,
								43900
							],
							[
								43954,
								43958
							],
							[
								43977,
								44001
							],
							[
								44066,
								44070
							],
							[
								44110,
								44134
							],
							[
								44251,
								44255
							],
							[
								44281,
								44285
							],
							[
								44355,
								44359
							],
							[
								44385,
								44389
							],
							[
								44482,
								44486
							],
							[
								44844,
								44879
							],
							[
								44990,
								45003
							],
							[
								45444,
								45484
							],
							[
								45530,
								45539
							],
							[
								45555,
								45566
							],
							[
								45658,
								45669
							],
							[
								45715,
								45771
							],
							[
								45778,
								45784
							],
							[
								45866,
								45886
							],
							[
								45933,
								45991
							],
							[
								45998,
								46004
							],
							[
								46047,
								46054
							],
							[
								46071,
								46092
							],
							[
								46154,
								46165
							],
							[
								46395,
								46413
							],
							[
								46453,
								46459
							],
							[
								46492,
								46520
							],
							[
								46558,
								46580
							],
							[
								46665,
								46689
							],
							[
								46690,
								46704
							],
							[
								47826,
								47859
							],
							[
								47868,
								47869
							],
							[
								47921,
								47945
							],
							[
								47986,
								48017
							],
							[
								48026,
								48027
							],
							[
								48271,
								48314
							],
							[
								48633,
								48660
							],
							[
								48953,
								48964
							],
							[
								49170,
								49186
							],
							[
								49510,
								49530
							],
							[
								50425,
								50472
							],
							[
								50855,
								50870
							],
							[
								51087,
								51100
							],
							[
								51377,
								51390
							],
							[
								51596,
								51609
							],
							[
								51833,
								51839
							],
							[
								51889,
								51910
							],
							[
								55645,
								55656
							],
							[
								56492,
								56496
							],
							[
								56945,
								56950
							],
							[
								57104,
								57118
							],
							[
								57141,
								57146
							],
							[
								57259,
								57280
							],
							[
								57338,
								57343
							],
							[
								57451,
								57472
							],
							[
								57697,
								57710
							],
							[
								57711,
								57738
							],
							[
								57855,
								57878
							],
							[
								58160,
								58175
							],
							[
								58200,
								58217
							],
							[
								58284,
								58292
							],
							[
								58365,
								58370
							],
							[
								58476,
								58500
							],
							[
								59088,
								59115
							],
							[
								59211,
								59215
							],
							[
								59568,
								59604
							],
							[
								59698,
								59707
							],
							[
								59742,
								59753
							],
							[
								59805,
								59819
							],
							[
								60385,
								60389
							],
							[
								61074,
								61082
							],
							[
								61198,
								61206
							],
							[
								61326,
								61334
							],
							[
								61449,
								61457
							],
							[
								61514,
								61522
							],
							[
								61994,
								62002
							],
							[
								62187,
								62234
							],
							[
								62380,
								62393
							],
							[
								62556,
								62574
							],
							[
								62742,
								62746
							],
							[
								62818,
								62825
							],
							[
								63073,
								63092
							],
							[
								63124,
								63142
							],
							[
								63668,
								63688
							],
							[
								63943,
								63960
							],
							[
								64168,
								64186
							],
							[
								64463,
								64486
							],
							[
								64937,
								64954
							],
							[
								65046,
								65054
							],
							[
								65273,
								65287
							],
							[
								65425,
								65465
							],
							[
								65530,
								65544
							],
							[
								66119,
								66135
							],
							[
								66173,
								66248
							],
							[
								66493,
								66514
							],
							[
								66623,
								66627
							],
							[
								67106,
								67120
							],
							[
								67410,
								67414
							],
							[
								67486,
								67490
							],
							[
								67772,
								67789
							],
							[
								67957,
								67965
							],
							[
								68163,
								68167
							],
							[
								68263,
								68278
							],
							[
								68524,
								68528
							],
							[
								68735,
								68752
							],
							[
								68844,
								68859
							],
							[
								69657,
								69669
							],
							[
								69676,
								69689
							],
							[
								69727,
								69742
							],
							[
								69846,
								69866
							],
							[
								70046,
								70073
							],
							[
								70127,
								70139
							],
							[
								70257,
								70265
							],
							[
								70714,
								70722
							],
							[
								71544,
								71553
							],
							[
								71788,
								71795
							],
							[
								71894,
								71914
							],
							[
								72101,
								72121
							],
							[
								72487,
								72497
							],
							[
								73300,
								73304
							],
							[
								73379,
								73383
							],
							[
								73397,
								73411
							],
							[
								73668,
								73675
							],
							[
								76023,
								76055
							],
							[
								76452,
								76456
							],
							[
								76662,
								76666
							],
							[
								76734,
								76738
							],
							[
								76822,
								76829
							],
							[
								76908,
								76912
							],
							[
								77986,
								78032
							],
							[
								78467,
								78476
							],
							[
								80362,
								80380
							],
							[
								80578,
								80601
							],
							[
								80643,
								80658
							],
							[
								81014,
								81029
							],
							[
								81442,
								81462
							],
							[
								81920,
								81938
							],
							[
								82654,
								82663
							],
							[
								82706,
								82710
							],
							[
								82922,
								82960
							],
							[
								83135,
								83158
							],
							[
								83302,
								83307
							],
							[
								83346,
								83356
							],
							[
								83520,
								83524
							],
							[
								83671,
								83675
							],
							[
								83714,
								83719
							],
							[
								84124,
								84128
							],
							[
								84167,
								84181
							],
							[
								84185,
								84199
							],
							[
								84206,
								84210
							],
							[
								84231,
								84246
							],
							[
								84277,
								84291
							],
							[
								84403,
								84414
							],
							[
								84464,
								84469
							],
							[
								84529,
								84534
							],
							[
								84989,
								84999
							],
							[
								85095,
								85105
							],
							[
								85118,
								85122
							],
							[
								85296,
								85300
							],
							[
								85461,
								85482
							],
							[
								86552,
								86556
							],
							[
								86662,
								86666
							],
							[
								86960,
								86988
							],
							[
								87439,
								87443
							],
							[
								87899,
								87908
							],
							[
								87992,
								88001
							],
							[
								88105,
								88113
							],
							[
								88619,
								88628
							],
							[
								88777,
								88781
							],
							[
								88846,
								88872
							],
							[
								89517,
								89522
							],
							[
								89797,
								89819
							],
							[
								90825,
								90846
							],
							[
								91051,
								91079
							],
							[
								91446,
								91489
							],
							[
								92819,
								92828
							],
							[
								93608,
								93612
							],
							[
								94352,
								94379
							],
							[
								94502,
								94515
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							"item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							"(a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates(itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no'))",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							"pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AQAAAAAAAAAAAAAAmhUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-ecmascript2.js",
						"symkeys":
						[
							[
								2148,
								2162
							],
							[
								2333,
								2384
							],
							[
								2423,
								2475
							],
							[
								2505,
								2572
							],
							[
								2608,
								2647
							],
							[
								2661,
								2667
							],
							[
								2782,
								2795
							],
							[
								3010,
								3015
							],
							[
								3059,
								3064
							],
							[
								3123,
								3146
							],
							[
								3217,
								3247
							],
							[
								3494,
								3556
							],
							[
								3711,
								3733
							],
							[
								4045,
								4065
							],
							[
								4162,
								4188
							],
							[
								4406,
								4439
							],
							[
								4799,
								4804
							],
							[
								4863,
								4875
							],
							[
								5055,
								5061
							],
							[
								5370,
								5376
							],
							[
								5787,
								5798
							],
							[
								5860,
								5894
							],
							[
								7326,
								7337
							],
							[
								8322,
								8341
							],
							[
								8415,
								8433
							],
							[
								8527,
								8574
							],
							[
								8621,
								8634
							],
							[
								8853,
								8871
							],
							[
								9091,
								9108
							],
							[
								9189,
								9209
							],
							[
								9326,
								9330
							],
							[
								10018,
								10024
							]
						],
						"symlist":
						[
							"testfn = () =>",
							"SliceOffEmpty = (arr, pred = item => item != '') =>",
							"FilterOutEmpty = (arr, pred = item => item != '') =>",
							".GetStack = (stack, cond = fr => fr.functionName != 'esfactory') =>",
							".FormatStack = (stack, start, limit) =>",
							" fr =>",
							"(frame, i) =>",
							"fr =>",
							"fr =>",
							"([func, file, line]) =>",
							"function WriteFile(name, data)",
							"function printAst(ast, comments, printer = globalThis.printer)",
							"function main(...argv)",
							" (v, r, o) =>",
							"([name, [arg, fn, ch]]) =>",
							" function(v, r, o, result)",
							"() =>",
							"time = () =>",
							" () =>",
							" fr =>",
							"([k, v]) =>",
							"function processFile(file, params)",
							" (fr, i) =>",
							"isRequire = node =>",
							"isImport = node =>",
							"({ comment, text, node, pos, len, ...item }) =>",
							" (a, b) =>",
							" ([path, node]) =>",
							"([path, node]) =>",
							"function finish(err)",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKKGEsIGUpID0+ClBhdGhUb1BvbHlsaW5lcyhwYXRoLCBzdGVwID0gMC4wMSkKICBwID0+CiAgcG9seSA9PgogIHBvbHkgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoVG9Qb2x5bGluZShwYXRoLCBzdGVwID0gMC4wMSkKICAocCwgZCwgc2V0LCBzdG9wKSA9PgpQYXRoc1RvUG9seWxpbmVzKHBhdGhzLCBzdGVwID0gMC4wMSkKT3V0c2V0UGF0aChwYXRoLCBvZmZzZXQsIG1pdGVyTGltaXQgPSAyLCBhcmNUb2xlcmFuY2UgPSAwLjAxKQogIC50b1BvbHlsaW5lcyA9IGZ1bmN0aW9uKCkKICBwID0+Cih7IFgsIFkgfSkgPT4KT3V0c2V0UGF0aHMocGF0aHMsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMjUpCihhLCBwKSA9PgpDbGlwUGF0aChwYXRoLCBjbGlwLCBtb2RlID0gQ2xpcHBlckxpYi5DbGlwVHlwZS5jdFVuaW9uKQogIGFkZCA9IChwLCBjbGlwID0gZmFsc2UpID0+CiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgogIHNhdmVJdGVtU3RhdGVzKGl0ZW1MaXN0LCBnZXQgPSBpdGVtID0+IFV0aWwuaXMuCihpdGVtLgopKQogIGl0ZW0gPT4KICByZXN0b3JlSXRlbVN0YXRlcyhpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykpCkVhZ2xlTWFwcyhwcm9qZWN0KQogIHRyYW5zZm9ybVBhdGggPSBwID0+CiAgZSA9PgogIGRvbTJlYWdsZSA9IG5vZGUgPT4KICBlYWdsZTJkb20gPSBlbGVtID0+CiAgcGF0aDJkb20gPSBwID0+CihrZXksIHZhbHVlKSA9Pgooa2V5LCB2YWx1ZSkgPT4KUGFja2FnZU5hbWVzKGRvYyA9IHByb2plY3QuZG9jKQogIGUgPT4KKFtlLCBiXSkgPT4KKFtlLCB3LCBoLCBtLCB2XSkgPT4KKHsgaW5kZXgsIC4uLm1hdGNoIH0pID0+CiAgKHsgcywgdiwgaW5kZXhlcyB9LCBtYXRjaCwgaSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgooW3Rva2VuLCBpbmRleF0pID0+Ck5leHREb2N1bWVudChuID0gMSkKICAoaWR4LCBpKSA9PgogIChpZHgsIGkpID0+CkxvYWREb2N1bWVudChwcm9qZWN0LCBwYXJlbnRFbGVtKQogIGVyciA9PgooKSA9PgogIGVudCA9PgooKSA9PgogIGVudCA9PgogIHJlbmFtZVBhY2thZ2VzKCkKICBhID0+CiAgdmFsdWUgPT4KICBsYXllciA9PgooKSA9PgogIGxheWVyID0+CigpID0+CiAgZm4gPSBmdW5jdGlvbih2KQooKSA9PgogIC5tYWtlR3JvdXAgPSBmdW5jdGlvbih7IHRyYW5zZm9ybSwgLi4ucHJvcHMgfSA9IHt9KQogIGlkID0+CigpID0+CiAgeHgoKQogICgpID0+Cih0cmFuc2Zvcm0pCiAgKHRhZywgYXR0ciwgY2hpbGRyZW4gPSBbXSkgPT4KICB2YWx1ZSA9PgooKSA9PgpSZWN0CkNob29zZURvY3VtZW50KHByb2plY3QsIGkpCkdlbmVyYXRlVm9yb25vaSA9ICgpID0+ClJlY3QKICBwID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IGxTaXRlLCByU2l0ZSwgLi4uZWRnZSB9KSA9PgogIGUgPT4KKHsgdmEsIHZiLCAuLi5lZGdlIH0pID0+CiAgdiA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGwgPT4KICB0ID0+CiAgbCA9PgogIHQgPT4KICBwID0+CiAgKGFjYywgeyBzaXRlLCBoYWxmZWRnZXMgfSkgPT4KKHsgc2l0ZSB9KSA9PgpQYWNrYWdlQ2hpbGRyZW4oZWxlbWVudCwgbGF5ZXIpCihjLCBpKSA9PgooW2ksIHBdKSA9PgooW2ksIGVdKSA9PgpFbGVtZW50Q2hpbGRyZW4obGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKKFtuYW1lLCBlbGVtZW50XSkgPT4KRWxlbWVudEdlb21ldHJpZXMobGF5ZXIgPSAndFBsYWNlJywgcmZuID0gZW50ID0+IAooZW50KSkKICBlbnQgPT4KKFtuYW1lLCBjaGlsZHJlbl0pID0+CihbaSwgZV0pID0+CihbbmFtZSwgbGluZXNdKSA9PgogIHB0cyA9PgooW25hbWUsIGxpbmVzLCBwb2x5Z29uc10pID0+Ck5ld1BhdGgocGF0aCkKTWFrZUZpdEFjdGlvbiA9IGluZGV4ID0+CiAgZXZlbnQgPT4KWm9vbUZhY3Rvcih2YWwgPSBjb25maWcuCikKWm9vbUxvZyhmYWN0b3IpCkFkanVzdFpvb20obCA9IGNvbmZpZy4KKQpDcmVhdGVHcmJsU29ja2V0ID0gKHBvcnQgPSAndG50MScpID0+CkhhbmRsZU1lc3NhZ2UobXNnKQogIHBvaW50U3RyID0+CiAgc29ja2V0Rm4gPSAoKSA9PgogIC5zZW5kID0gKC4uLmFyZ3MpID0+CkF1dGhvcml6YXRpb25EaWFsb2cgPSAoeyBvbkF1dGgsIC4uLnByb3BzIH0pID0+CiAgb25TdWJtaXQ6ICgpID0+CiAgb25JbnB1dDogZSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbkNsaWNrOiBlID0+CiAgYXJnID0+CiAgLm9ubG9hZCA9ICgpID0+CiAgcmVzcG9uc2UgPT4KICBlID0+CiAgdiA9PgpUZXN0QXJjOiAoKSA9PgooKSA9PgoocHVzaCwgc3RvcCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CiAgdGFyZ2V0ID0+CiAgKGtleSwgbW9kaWZpZXJzID0gMCkgPT4KICAuZm9jdXNTZWFyY2ggPSBzdGF0ZSA9PgogIGNoaWxkcmVuOiAoKSA9PgogIGdlb21ldHJpZXM6ICgpID0+CiAgdmFsdWUgPT4KKCkgPT4KICB0ZXN0Q29tcG9uZW50ID0gcHJvcHMgPT4KRmlsZShvYmosIGkpCkZpbGUKRmlsZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpCihhLCBiKSA9Pgoob2JqLCBpKSA9PgooYWNjLCBmaWxlKSA9PgogIGkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB1cGRhdGVJZkNoYW5nZWQgPSAodHJrbCwgbmV3VmFsdWUsIGNhbGxiYWNrKSA9PgogIChlbGVtLCBpKSA9PgogIGNoYW5nZUlucHV0ID0gZSA9PgogIHAgPT4KICBhcmcgPT4KQ29uc3VtZXIgPSBwcm9wcyA9PgooKQogIGxvZyh0eXBlLCB0aW1lLCBtc2cpCkxvZ2dlciA9IHByb3BzID0+CigpCihbdHlwZSwgZCwgdCwgbV0sIGkpID0+CkR1bXBlciA9IHByb3BzID0+CiAgdmFsdWUgPT4KKFtrLCB2XSwgaSkgPT4KQ29tbWFuZGVyID0gKHsgb25Db21tYW5kLCAuLi5wcm9wcyB9KSA9PgogIGhhbmRsZXIgPSBlID0+CiAgdG9nZ2xlID0gdHJrbCA9PgpMYXllciA9ICh7IHRpdGxlLCBuYW1lLCBsYWJlbCwgaSwgY29sb3IsIGVsZW1lbnQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4KICBzZXRWaXNpYmxlID0gdmFsdWUgPT4KICBlID0+CiAgZSA9PgogIGwgPT4KICBsID0+CiAgKGl0ZW0sIHZhbHVlKSA9PgogIGl0ZW0gPT4KICBsID0+CihbbCwgc3RhdGVdKSA9PgogIGUgPT4KICBvbk1vdXNlTW92ZTogZSA9PgogIG9uTW91c2VVcDogZSA9PgpEb2N1bWVudExpc3QKICBjb25zdHJ1Y3RvcigpCihwdXNoLCBzdG9wKSA9PgogIGFkZChuYW1lLCBjb21wb25lbnQpCiAgYWRkRW50cnkoW25hbWUsIGNvbXBvbmVudF0pCiAgcmVtb3ZlKG5hbWUpCiAgdXBkYXRlKCkKICBmbjogZSA9PgogIGZuOiAoKSA9PgogIG9wZW4gPT4KICBwcm9wcyA9PgogIHByb3BzID0+CiAgZSA9PgogIGkgPT4KICBpID0+Cih7IGNvb3JkIH0pID0+CiAgc2lkZSA9PgogIGNyZWF0ZTogKHByb2plY3QsIHByb3BzID0ge30pID0+CiAgYSA9PgogIGUgPT4KICBlID0+CiAgbmFtZSA9PgogIGUgPT4KICBtYWtlTGF5ZXJOYW1lKG5hbWUsIHNpZGUpCiAgZm46ICgpID0+CihlLCBwLCBpKSA9PgogIG1ha2VTb3J0Q29tcGFyZToga2V5ID0+CiAgZnVuY3Rpb24oYSwgYikKICBmdW5jdGlvbihhLCBiKQogIG9uQ29tbWFuZDogY21kU3RyID0+CiAgaGFuZGxlQ2hhbmdlOiBlID0+CiAgZXZlbnQgPT4KICBlID0+Ck1vdmVFdmVudChldmVudCwgcHJldkV2ZW50KQpXYWxrVXAoZSkKICBlID0+CiAgeiA9PgogIHAgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICB2ID0+CiAgbCA9PgogIGUgPT4KICAoKSA9PgogIChlLCBkZXB0aCkgPT4KICBjbGFzc2VzID0+CiAgZSA9PgogIGUgPT4KICAoYSwgYikgPT4KICAoYSwgYikgPT4KTm9kZQogIGUgPT4KICAocCwgZCwgc2V0LCBzdG9wKSA9PgogIGUgPT4KICBlID0+ClRvdWNoRXZlbnQoZXZlbnQpCiAgZSA9PgoocCwgaSkgPT4KKGEsIGIpID0+CiAgc2l6ZSA9PgogIGJvcmRlciA9PgogIHIgPT4KICBtb2QobiwgbSkKKCkgPT4KICAocG9zLCBsYXN0LCBmaXJzdCkgPT4KICBjYW5jZWwoKQogIC5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oZSkKICAucHJvY2Vzc0V2ZW50cyA9IGZ1bmN0aW9uIGV2ZW50TG9vcCgpCiAgZXZlbnQgPT4KICBlID0+CiAgb25SdW50aW1lSW5pdGlhbGl6ZWQ6ICgpID0+CiAgcHJpbnQ6IHR4dCA9PgAAAAAAAAAAzwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.js",
						"symkeys":
						[
							[
								1214,
								1229
							],
							[
								1255,
								1276
							],
							[
								1309,
								1337
							],
							[
								1377,
								1397
							],
							[
								1427,
								1439
							],
							[
								1462,
								1472
							],
							[
								1493,
								1514
							],
							[
								1546,
								1571
							],
							[
								1616,
								1637
							],
							[
								1713,
								1734
							],
							[
								1834,
								1843
							],
							[
								1861,
								1871
							],
							[
								1933,
								1942
							],
							[
								2003,
								2011
							],
							[
								2071,
								2079
							],
							[
								2142,
								2170
							],
							[
								2211,
								2218
							],
							[
								2262,
								2312
							],
							[
								2316,
								2320
							],
							[
								2343,
								2353
							],
							[
								2384,
								2408
							],
							[
								2439,
								2444
							],
							[
								2483,
								2508
							],
							[
								2756,
								2768
							],
							[
								2789,
								2809
							],
							[
								2883,
								2912
							],
							[
								3002,
								3023
							],
							[
								3064,
								3143
							],
							[
								3215,
								3245
							],
							[
								3315,
								3349
							],
							[
								3397,
								3420
							],
							[
								3447,
								3451
							],
							[
								3505,
								3532
							],
							[
								3610,
								3642
							],
							[
								3837,
								3859
							],
							[
								4161,
								4174
							],
							[
								4331,
								4350
							],
							[
								4415,
								4458
							],
							[
								5201,
								5223
							],
							[
								5286,
								5292
							],
							[
								5328,
								5332
							],
							[
								5512,
								5533
							],
							[
								5588,
								5617
							],
							[
								8928,
								8959
							],
							[
								9597,
								9625
							],
							[
								9796,
								9819
							],
							[
								9879,
								9902
							],
							[
								10025,
								10054
							],
							[
								10341,
								10365
							],
							[
								10566,
								10593
							],
							[
								10641,
								10646
							],
							[
								10924,
								10953
							],
							[
								11499,
								11512
							],
							[
								11745,
								11753
							],
							[
								12268,
								12310
							],
							[
								12451,
								12456
							],
							[
								12610,
								12631
							],
							[
								12672,
								12691
							],
							[
								12702,
								12720
							],
							[
								12855,
								12860
							],
							[
								13597,
								13635
							],
							[
								16811,
								16834
							],
							[
								17633,
								17645
							],
							[
								17897,
								17936
							],
							[
								20236,
								20275
							],
							[
								20311,
								20331
							],
							[
								20958,
								20962
							],
							[
								21337,
								21370
							],
							[
								21454,
								21463
							],
							[
								21496,
								21517
							],
							[
								22281,
								22295
							],
							[
								22412,
								22428
							],
							[
								22577,
								22585
							]
						],
						"symlist":
						[
							"NTH_POINT: c =>",
							"RADIAL_DISTANCE: c =>",
							"PERPENDICULAR_DISTANCE: c =>",
							"REUMANN_WITKAM: c =>",
							"OPHEIM: c =>",
							"LANG: c =>",
							"DOUGLAS_PEUCKER: c =>",
							"function Hierarchy(array)",
							".index = function(id)",
							".index = function(id)",
							"Hierarchy",
							"parent(id)",
							"child(id)",
							"next(id)",
							"prev(id)",
							"function getConstants(names)",
							"name =>",
							"function findConstant(value, keyCond = k => /^CV/.",
							"(k))",
							" (v, k) =>",
							"function findType(value)",
							" k =>",
							"function getBitDepth(mat)",
							"(...args) =>",
							"function minMax(mat)",
							"function modifierMap(keyCode)",
							"([modifier, flag]) =>",
							"function drawContour(mat, contour, color, thickness = 1, lineType = cv.LINE_AA)",
							"function* getParents(hier, id)",
							"function getContourDepth(hier, id)",
							"function findRoot(hier)",
							"h =>",
							"function* getToplevel(hier)",
							"function* walkContours(hier, id)",
							"function main(...args)",
							" () =>",
							" (file, current) =>",
							" (arg, current, options, results) =>",
							"makeRainbow = steps =>",
							"hue =>",
							"h =>",
							"printFlags = flags =>",
							"function (event, x, y, flags)",
							"function AcquireFrame(src, dst)",
							"function Grayscale(src, dst)",
							"function Norm(src, dst)",
							"function Blur(src, dst)",
							"function EdgeDetect(src, dst)",
							"function Morph(src, dst)",
							"function Contours(src, dst)",
							" h =>",
							"function HoughLines(src, dst)",
							" (i, n) =>",
							"image =>",
							" function(value, count, name, window)",
							"() =>",
							"ClearSurface = mat =>",
							"MakeSurface = () =>",
							" (...args) =>",
							"() =>",
							" (acc, [modifier, active]) =>",
							" function showOutput()",
							"([i, id]) =>",
							" function drawParam(param, y, color)",
							" function saveContours(contours, size)",
							"(acc, contour, i) =>",
							"d =>",
							" function saveLines(lines, size)",
							"coords =>",
							"([x1, y1, x2, y2]) =>",
							"(a, [k, v]) =>",
							" frame =>",
							"frame =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADPAgAAICB0ZXN0Zm4gPSAoKSA9PgpTbGljZU9mZkVtcHR5ID0gKGFyciwgcHJlZCA9IGl0ZW0gPT4gaXRlbSAhPSAnJykgPT4KRmlsdGVyT3V0RW1wdHkgPSAoYXJyLCBwcmVkID0gaXRlbSA9PiBpdGVtICE9ICcnKSA9PgogIC5HZXRTdGFjayA9IChzdGFjaywgY29uZCA9IGZyID0+IGZyLmZ1bmN0aW9uTmFtZSAhPSAnZXNmYWN0b3J5JykgPT4KICAuRm9ybWF0U3RhY2sgPSAoc3RhY2ssIHN0YXJ0LCBsaW1pdCkgPT4KICBmciA9PgooZnJhbWUsIGkpID0+CiAgZnIgPT4KICBmciA9PgooW2Z1bmMsIGZpbGUsIGxpbmVdKSA9PgpXcml0ZUZpbGUobmFtZSwgZGF0YSkKICBwcmludEFzdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gZ2xvYmFsVGhpcy5wcmludGVyKQogIG1haW4oLi4uYXJndikKICAodiwgciwgbykgPT4KKFtuYW1lLCBbYXJnLCBmbiwgY2hdXSkgPT4KICBmdW5jdGlvbih2LCByLCBvLCByZXN1bHQpCigpID0+CiAgdGltZSA9ICgpID0+CiAgKCkgPT4KICBmciA9PgooW2ssIHZdKSA9PgogIHByb2Nlc3NGaWxlKGZpbGUsIHBhcmFtcykKICAoZnIsIGkpID0+CiAgaXNSZXF1aXJlID0gbm9kZSA9PgogIGlzSW1wb3J0ID0gbm9kZSA9PgooeyBjb21tZW50LCB0ZXh0LCBub2RlLCBwb3MsIGxlbiwgLi4uaXRlbSB9KSA9PgogIChhLCBiKSA9PgogIChbcGF0aCwgbm9kZV0pID0+CihbcGF0aCwgbm9kZV0pID0+CiAgZmluaXNoKGVycikKICBzID0+CiAgZnIgPT4AAAAAAAAAAE0FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-video.config.json",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABNBQAATlRIX1BPSU5UOiBjID0+ClJBRElBTF9ESVNUQU5DRTogYyA9PgpQRVJQRU5ESUNVTEFSX0RJU1RBTkNFOiBjID0+ClJFVU1BTk5fV0lUS0FNOiBjID0+Ck9QSEVJTTogYyA9PgpMQU5HOiBjID0+CkRPVUdMQVNfUEVVQ0tFUjogYyA9PgpIaWVyYXJjaHkoYXJyYXkpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCiAgLmluZGV4ID0gZnVuY3Rpb24oaWQpCkhpZXJhcmNoeQogIHBhcmVudChpZCkKICBjaGlsZChpZCkKICBuZXh0KGlkKQogIHByZXYoaWQpCiAgZ2V0Q29uc3RhbnRzKG5hbWVzKQogIG5hbWUgPT4KICBmaW5kQ29uc3RhbnQodmFsdWUsIGtleUNvbmQgPSBrID0+IC9eQ1YvLgooaykpCiAgKHYsIGspID0+CiAgZmluZFR5cGUodmFsdWUpCiAgayA9PgogIGdldEJpdERlcHRoKG1hdCkKKC4uLmFyZ3MpID0+CiAgbWluTWF4KG1hdCkKICBtb2RpZmllck1hcChrZXlDb2RlKQooW21vZGlmaWVyLCBmbGFnXSkgPT4KICBkcmF3Q29udG91cihtYXQsIGNvbnRvdXIsIGNvbG9yLCB0aGlja25lc3MgPSAxLCBsaW5lVHlwZSA9IGN2LkxJTkVfQUEpCiAgZ2V0UGFyZW50cyhoaWVyLCBpZCkKICBnZXRDb250b3VyRGVwdGgoaGllciwgaWQpCiAgZmluZFJvb3QoaGllcikKICBoID0+CiAgZ2V0VG9wbGV2ZWwoaGllcikKICB3YWxrQ29udG91cnMoaGllciwgaWQpCiAgbWFpbiguLi5hcmdzKQogICgpID0+CiAgKGZpbGUsIGN1cnJlbnQpID0+CiAgKGFyZywgY3VycmVudCwgb3B0aW9ucywgcmVzdWx0cykgPT4KICBtYWtlUmFpbmJvdyA9IHN0ZXBzID0+CiAgaHVlID0+CiAgaCA9PgogIHByaW50RmxhZ3MgPSBmbGFncyA9PgooZXZlbnQsIHgsIHksIGZsYWdzKQpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKTm9ybShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKRWRnZURldGVjdChzcmMsIGRzdCkKTW9ycGgoc3JjLCBkc3QpCkNvbnRvdXJzKHNyYywgZHN0KQogIGggPT4KSG91Z2hMaW5lcyhzcmMsIGRzdCkKICAoaSwgbikgPT4KICBpbWFnZSA9PgogIGZ1bmN0aW9uKHZhbHVlLCBjb3VudCwgbmFtZSwgd2luZG93KQooKSA9PgpDbGVhclN1cmZhY2UgPSBtYXQgPT4KTWFrZVN1cmZhY2UgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIChhY2MsIFttb2RpZmllciwgYWN0aXZlXSkgPT4KICBzaG93T3V0cHV0KCkKKFtpLCBpZF0pID0+CiAgZHJhd1BhcmFtKHBhcmFtLCB5LCBjb2xvcikKICBzYXZlQ29udG91cnMoY29udG91cnMsIHNpemUpCihhY2MsIGNvbnRvdXIsIGkpID0+CiAgZCA9PgogIHNhdmVMaW5lcyhsaW5lcywgc2l6ZSkKICBjb29yZHMgPT4KKFt4MSwgeTEsIHgyLCB5Ml0pID0+CihhLCBbaywgdl0pID0+CiAgZnJhbWUgPT4KICBmcmFtZSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
						"symkeys":
						[
							[
								333,
								353
							],
							[
								392,
								412
							],
							[
								483,
								498
							],
							[
								539,
								561
							],
							[
								593,
								615
							],
							[
								708,
								724
							],
							[
								919,
								934
							],
							[
								1078,
								1092
							],
							[
								1188,
								1202
							],
							[
								1639,
								1654
							],
							[
								1791,
								1805
							],
							[
								1956,
								1971
							],
							[
								2282,
								2297
							]
						],
						"symlist":
						[
							"js_contour_finalizer",
							"js_contour_to_string",
							"js_contour_init",
							"js_init_module_contour",
							"js_contour_constructor",
							"js_contour_data2",
							"js_contour_data",
							"js_contour_new",
							"js_contour_new",
							"js_contour_read",
							"js_contour_get",
							"js_contours_new",
							"js_contour_init"
						]
					},
					"AQAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
						"symkeys":
						[
							[
								478,
								493
							],
							[
								768,
								790
							],
							[
								873,
								890
							],
							[
								1268,
								1285
							],
							[
								1355,
								1372
							],
							[
								1477,
								1486
							],
							[
								1576,
								1586
							],
							[
								1653,
								1663
							],
							[
								1752,
								1762
							],
							[
								1858,
								1868
							],
							[
								2050,
								2058
							],
							[
								2170,
								2176
							],
							[
								2300,
								2308
							],
							[
								2338,
								2347
							],
							[
								2977,
								2981
							],
							[
								3134,
								3145
							],
							[
								3293,
								3306
							],
							[
								3628,
								3641
							],
							[
								3838,
								3846
							],
							[
								3922,
								3931
							],
							[
								4037,
								4058
							],
							[
								4294,
								4316
							],
							[
								4563,
								4571
							],
							[
								4611,
								4620
							],
							[
								5123,
								5136
							],
							[
								5452,
								5465
							],
							[
								5662,
								5670
							],
							[
								5767,
								5795
							],
							[
								6112,
								6120
							],
							[
								6159,
								6168
							],
							[
								6621,
								6634
							],
							[
								6909,
								6922
							],
							[
								7119,
								7127
							],
							[
								7223,
								7250
							],
							[
								7528,
								7536
							],
							[
								7582,
								7591
							],
							[
								8236,
								8249
							],
							[
								8542,
								8555
							],
							[
								8752,
								8760
							],
							[
								8881,
								8915
							],
							[
								9211,
								9219
							],
							[
								9265,
								9274
							],
							[
								9913,
								9926
							],
							[
								10219,
								10232
							],
							[
								10429,
								10437
							],
							[
								10530,
								10538
							],
							[
								10583,
								10592
							],
							[
								11234,
								11247
							],
							[
								11541,
								11554
							],
							[
								11751,
								11759
							],
							[
								11851,
								11859
							],
							[
								11897,
								11906
							],
							[
								12533,
								12546
							],
							[
								12868,
								12881
							],
							[
								13061,
								13070
							],
							[
								13337,
								13345
							],
							[
								13560,
								13568
							],
							[
								13607,
								13616
							],
							[
								14264,
								14272
							],
							[
								14365,
								14373
							],
							[
								14429,
								14441
							],
							[
								14468,
								14478
							],
							[
								14500,
								14509
							],
							[
								15275,
								15288
							],
							[
								15610,
								15623
							],
							[
								15831,
								15835
							],
							[
								15996,
								16004
							],
							[
								16050,
								16059
							],
							[
								16716,
								16729
							],
							[
								17051,
								17064
							],
							[
								17261,
								17269
							],
							[
								17385,
								17396
							],
							[
								17555,
								17566
							],
							[
								17648,
								17658
							],
							[
								17759,
								17773
							],
							[
								17855,
								17865
							],
							[
								17956,
								17967
							],
							[
								18188,
								18201
							],
							[
								18464,
								18477
							],
							[
								18673,
								18686
							],
							[
								18928,
								18941
							],
							[
								19228,
								19241
							],
							[
								19464,
								19477
							]
						],
						"symlist":
						[
							"js_array_length",
							"JS_DeletePropertyInt64",
							"js_array_truncate",
							"js_array_iterator",
							" js_array_iterator",
							" operator*",
							" operator++",
							" operator++",
							" operator==",
							" operator!=",
							"js_begin",
							"js_end",
							"js_array",
							" to_vector",
							" from",
							" from_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							" to_scalar",
							"js_array<T>::to_array",
							"js_array<T>::to_scalar",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<uint32_t>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSValue>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array<JSColorData<T>>::to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_scalar",
							" to_array",
							"js_array",
							" to_vector",
							" to_array",
							"js_array",
							" contour_type",
							" point_type",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" from",
							"js_array",
							" to_vector",
							" copy_sequence",
							" from_sequence",
							" to_array",
							"js_array_to",
							"js_array_to",
							"array_type",
							"js_array_input",
							"array_type",
							"js_array_to",
							"js_array_from",
							"js_array_from",
							"js_array_from",
							"js_array_copy",
							"js_array_copy",
							"js_array_copy"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAICBqc19jb250b3VyX2ZpbmFsaXplcgogIGpzX2NvbnRvdXJfdG9fc3RyaW5nCiAganNfY29udG91cl9pbml0CiAganNfaW5pdF9tb2R1bGVfY29udG91cgogIGpzX2NvbnRvdXJfY29uc3RydWN0b3IKICBqc19jb250b3VyX2RhdGEyCiAganNfY29udG91cl9kYXRhCiAganNfY29udG91cl9uZXcKICBqc19jb250b3VyX25ldwogIGpzX2NvbnRvdXJfcmVhZAogIGpzX2NvbnRvdXJfZ2V0CiAganNfY29udG91cnNfbmV3CiAganNfY29udG91cl9pbml0AAAAAAAAAAC5BAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-repeater.js",
						"symkeys":
						[
							[
								390,
								405
							],
							[
								590,
								606
							],
							[
								879,
								900
							],
							[
								1003,
								1024
							],
							[
								1186,
								1207
							],
							[
								1403,
								1414
							],
							[
								1894,
								1905
							],
							[
								2161,
								2197
							],
							[
								2211,
								2232
							]
						],
						"symlist":
						[
							"function main()",
							"async function()",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async () =>",
							"async () =>",
							" function genRepFunc(name, num, ms)",
							"async (push, stop) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC5BAAAICBqc19hcnJheV9sZW5ndGgKSlNfRGVsZXRlUHJvcGVydHlJbnQ2NAogIGpzX2FycmF5X3RydW5jYXRlCiAganNfYXJyYXlfaXRlcmF0b3IKICBqc19hcnJheV9pdGVyYXRvcgogIG9wZXJhdG9yKgogIG9wZXJhdG9yKysKICBvcGVyYXRvcisrCiAgb3BlcmF0b3I9PQogIG9wZXJhdG9yIT0KICBqc19iZWdpbgogIGpzX2VuZAogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgZnJvbQogIGZyb21fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIHRvX3NjYWxhcgogIGpzX2FycmF5PFQ+Ojp0b19hcnJheQogIGpzX2FycmF5PFQ+Ojp0b19zY2FsYXIKICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheTx1aW50MzJfdD46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNWYWx1ZT46OnRvX2FycmF5CiAganNfYXJyYXkKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIHRvX2FycmF5CiAganNfYXJyYXk8SlNDb2xvckRhdGE8VD4+Ojp0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgY29weV9zZXF1ZW5jZQogIGZyb21fc2VxdWVuY2UKICB0b19zY2FsYXIKICB0b19hcnJheQogIGpzX2FycmF5CiAgdG9fdmVjdG9yCiAgdG9fYXJyYXkKICBqc19hcnJheQogIGNvbnRvdXJfdHlwZQogIHBvaW50X3R5cGUKICB0b192ZWN0b3IKICBjb3B5X3NlcXVlbmNlCiAgZnJvbV9zZXF1ZW5jZQogIGZyb20KICBqc19hcnJheQogIHRvX3ZlY3RvcgogIGNvcHlfc2VxdWVuY2UKICBmcm9tX3NlcXVlbmNlCiAgdG9fYXJyYXkKICBqc19hcnJheV90bwogIGpzX2FycmF5X3RvCiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X2lucHV0CiAgYXJyYXlfdHlwZQogIGpzX2FycmF5X3RvCiAganNfYXJyYXlfZnJvbQogIGpzX2FycmF5X2Zyb20KICBqc19hcnJheV9mcm9tCiAganNfYXJyYXlfY29weQogIGpzX2FycmF5X2NvcHkKICBqc19hcnJheV9jb3B5AAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-qjs.c",
						"symkeys":
						[
							[
								277,
								285
							],
							[
								993,
								1002
							],
							[
								1587,
								1606
							],
							[
								1989,
								1993
							]
						],
						"symlist":
						[
							"‚Äî‚íª‚Äì‚ÄÉeval_buf‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉeval_file‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉJS_NewCustomContext‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
							"‚Äî‚íª‚Äì‚ÄÉmain‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAICBtYWluKCkKICBmdW5jdGlvbigpCihwdXNoLCBzdG9wKSA9PgoocHVzaCwgc3RvcCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CigpID0+CiAgZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKQoocHVzaCwgc3RvcCkgPT4AAAAAAAAAAI8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-repeater.js",
			"settings":
			{
				"buffer_size": 2392,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste",
					null,
					"AgAAAGkAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACIAAAAAAAAADIAAABpbXBvcnQgQ29uc29sZVNldHVwIGZyb20gJy4vbGliL2NvbnNvbGVTZXR1cC5qcyc7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"paste",
					null,
					"AgAAAKMAAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAUAQAAAAAAACMAAABhd2FpdCBDb25zb2xlU2V0dXAoeyBjb21wYWN0OiAyIH0pOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIcAAAAAAAAAiAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAAAAAAAAAIcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGkAAAAAAAAAagAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAGkAAAAAAAAAaQAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAIcAAAAAAAAAhwAAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAAbkA"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAIgAAAAAAAAAiAAAAAAAAAABAAAAMQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\nmain"
					},
					"BgAAANsGAAAAAAAA3AYAAAAAAAAAAAAA3AYAAAAAAADcBgAAAAAAABwAAAAKVXRpbC5jYWxsTWFpbihtYWluLCB0cnVlKTsK3AYAAAAAAADdBgAAAAAAAAAAAADdBgAAAAAAAN4GAAAAAAAAAAAAAN4GAAAAAAAA3wYAAAAAAAAAAAAA3wYAAAAAAADgBgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBgAAAAAAAPcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAGAAAAAAAA4gYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgBgAAAAAAAOAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiBgAAAAAAAOIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAOMGAAAAAAAA5AYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAgAAAAAAACkCAAAAAAAAAAAAAAAATEA"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "{inspectOption"
					},
					"DgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "s:"
					},
					"AgAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYAAAAAAAAA1wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACMBAAAAAAAAJAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG8AAAAAAAAAcQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"right_delete",
					null,
					"AQAAAHAAAAAAAAAAcAAAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AAAAAAAAAHkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD4BgAAaW1wb3J0IHsgUmVwZWF0ZXIgfSBmcm9tICcuL2xpYi9yZXBlYXRlci9yZXBlYXRlci5qcyc7CmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvdGltZXJzLmpzJzsKaW1wb3J0eyBDb25zb2xlIH1mcm9tICdjb25zb2xlJzsKCmFzeW5jIGZ1bmN0aW9uIG1haW4oKSB7CiAgICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7aW5zcGVjdE9wdGlvbnM6IHsKICAgIGNvbG9yczogdHJ1ZSwKICAgIGRlcHRoOiAxLAogICAgbWF4QXJyYXlMZW5ndGg6IDMwLAogICAgY29tcGFjdDogMQogIH19KTsKICBsZXQgcHVzaEV2ZW50LCBzdG9wRXZlbnQ7CgogIGF3YWl0IFV0aWwud2FpdEZvcigwKTsKICBjb25zb2xlLmxvZygnc2V0VGltZW91dCcsIGdsb2JhbFRoaXMuc2V0VGltZW91dCk7CiAgY29uc29sZS5sb2coJ2NsZWFyVGltZW91dCcsIGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0KTsKCiAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIHB1c2hFdmVudCA9IHB1c2g7CiAgICBzdG9wRXZlbnQgPSBzdG9wOwogICAgYXdhaXQgc3RvcDsKICB9KTsKCiAgbGV0IGIgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgIGF3YWl0IFV0aWwud2FpdEZvcig1MCk7CiAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgfQogICAgc3RvcCgpOwogIH0pOwoKICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCA1KSkgcHVzaChgYyAjJHtudW19YCk7CiAgICBzdG9wKCk7CiAgfSk7CgogIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgcmV0dXJuIGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICBhd2FpdCBVdGlsLndhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQoKICAvL2EubmV4dCgpOwogIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMDApXSldKTsKCiAgbGV0IGxvb3AgPSAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKCiAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCAxMCkpIHsKICAgIGF3YWl0IFV0aWwud2FpdEZvcigxMDApOwogICAgcHVzaEV2ZW50KGBhICMke251bX1gKTsKICB9CiAgc3RvcEV2ZW50KCk7CgogIGF3YWl0IGxvb3A7CgogIGxldCB4ID0gWwogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwMCkpCiAgXTsKICBsZXQgbGF0ZXN0ID0gUmVwZWF0ZXIubGF0ZXN0KHgpOwoKICBhd2FpdCAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB0dXBsZSBvZiBsYXRlc3QpIHsKICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIHR1cGxlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKfQoKbWFpbigpOwoAAAAAAAAAAAoHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AAAAAAAAAHoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADoBAAAAAAAAPAEAAAAAAAAAAAAApgAAAAAAAACoAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAADoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAOBwAAaW1wb3J0IHsgUmVwZWF0ZXIgfSBmcm9tICcuL2xpYi9yZXBlYXRlci9yZXBlYXRlci5qcyc7CmltcG9ydCB7IGRlbGF5IH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvdGltZXJzLmpzJzsKaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwoKYXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKIC8qIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDEsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAzMCwKICAgICAgY29tcGFjdDogMQogICAgfQogIH0pOyovCiAgbGV0IHB1c2hFdmVudCwgc3RvcEV2ZW50OwoKICBhd2FpdCBVdGlsLndhaXRGb3IoMCk7CiAgY29uc29sZS5sb2coJ3NldFRpbWVvdXQnLCBnbG9iYWxUaGlzLnNldFRpbWVvdXQpOwogIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogIGxldCBhID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICBwdXNoRXZlbnQgPSBwdXNoOwogICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgIGF3YWl0IHN0b3A7CiAgfSk7CgogIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDIwKSkgewogICAgICBhd2FpdCBVdGlsLndhaXRGb3IoNTApOwogICAgICBwdXNoKGBiICMke251bX1gKTsKICAgIH0KICAgIHN0b3AoKTsKICB9KTsKCiAgbGV0IGMgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgNSkpIHB1c2goYGMgIyR7bnVtfWApOwogICAgc3RvcCgpOwogIH0pOwoKICBmdW5jdGlvbiBnZW5SZXBGdW5jKG5hbWUsIG51bSwgbXMpIHsKICAgIHJldHVybiBhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICBmb3IobGV0IG4gb2YgVXRpbC5yYW5nZSgxLCBudW0pKSB7CiAgICAgICAgYXdhaXQgVXRpbC53YWl0Rm9yKFV0aWwucmFuZEludChtcykpOwogICAgICAgIHB1c2goYCR7bmFtZX0gIyR7bn1gKTsKICAgICAgfQogICAgICBzdG9wKCk7CiAgICB9OwogIH0KCiAgLy9hLm5leHQoKTsKICBsZXQgcmVwZWF0ID0gUmVwZWF0ZXIubWVyZ2UoW2EsIGIsIFJlcGVhdGVyLnppcChbYywgZGVsYXkoMjAwKV0pXSk7CgogIGxldCBsb29wID0gKGFzeW5jICgpID0+IHsKICAgIGZvciBhd2FpdChsZXQgdmFsdWUgb2YgcmVwZWF0KSB7CiAgICAgIGNvbnNvbGUubG9nKCd2YWx1ZTonLCB2YWx1ZSk7CiAgICB9CiAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogIH0pKCk7CgogIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMTApKSB7CiAgICBhd2FpdCBVdGlsLndhaXRGb3IoMTAwKTsKICAgIHB1c2hFdmVudChgYSAjJHtudW19YCk7CiAgfQogIHN0b3BFdmVudCgpOwoKICBhd2FpdCBsb29wOwoKICBsZXQgeCA9IFsKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd4JywgMjAsIDEwMDApKSwKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd5JywgMjAsIDEwMDApKSwKICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd6JywgMjAsIDEwMDApKQogIF07CiAgbGV0IGxhdGVzdCA9IFJlcGVhdGVyLmxhdGVzdCh4KTsKCiAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgIGZvciBhd2FpdChsZXQgdHVwbGUgb2YgbGF0ZXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKCd0dXBsZTonLCB0dXBsZSk7CiAgICB9CiAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogIH0pKCk7Cn0KCm1haW4oKTsKAAAAAAAAAAAPBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAADwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"paste",
					null,
					"AQAAAKcAAAAAAAAA2wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "Re"
					},
					"AwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC3AAAAAAAAAAoAAABzZXRUaW1lb3V0twAAAAAAAAC4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_completion",
					{
						"completion": "Repeater",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Repeater"
					},
					"AgAAALYAAAAAAAAAtgAAAAAAAAACAAAAUmW2AAAAAAAAAL4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"paste",
					null,
					"AgAAAMEAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADJAAAAAAAAABUAAABnbG9iYWxUaGlzLnNldFRpbWVvdXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"cut",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAAnAAAAICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAAD8BAAAAAAAAZgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA8AQAAAAAAAAIAAAAqLw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACmAAAAAAAAAAMAAAAvKiA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACOAAAAAAAAAAUAAABhc3luYw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAI0AAAAAAAAAAAAAAAAAAAA"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "\n\n\nf"
					},
					"CQAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAGUBAAAAAAAAagEAAAAAAAAAAAAAXwEAAAAAAABfAQAAAAAAAAUAAAAgICAgIGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABrAQAAAAAAAAAAAABgAQAAAAAAAGABAAAAAAAABQAAACAgICAgZgEAAAAAAABnAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAQAAAAAAAF4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAGYBAAAAAAAAZgEAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAQAAAAAAAGcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " function"
					},
					"CQAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHQBAAAAAAAAdgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHYBAAAAAAAAdwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHcBAAAAAAAAeQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AQAAAAAAAHcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"right_delete",
					null,
					"AQAAAHgBAAAAAAAAeAEAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAHgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "\n})"
					},
					"BgAAADsHAAAAAAAAPAcAAAAAAAAAAAAAPAcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAADwHAAAAAAAAPAcAAAAAAAACAAAAICA8BwAAAAAAADwHAAAAAAAAAAAAAD0HAAAAAAAAPgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BwAAAAAAADsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAD0HAAAAAAAAPQcAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+BwAAAAAAAD4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD0HAAAAAAAAPwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9BwAAAAAAAD0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD8HAAAAAAAAQAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BwAAAAAAAD8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEAHAAAAAAAAQQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABABwAAAAAAAEAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAD4HAAAAAAAAPwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+BwAAAAAAAD4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"cut",
					null,
					"AQAAADcBAAAAAAAANwEAAAAAAAAoAAAAICAgICBjb25zb2xlLmxvZygnUmVwZWF0ZXInLCBSZXBlYXRlcik7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AQAAAAAAAF8BAAAAAAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"paste",
					null,
					"AQAAAG0BAAAAAAAAlQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAQAAAAAAAG0BAAAAAAAAAAAAAAAAAAA"
				],
				[
					177,
					1,
					"paste",
					null,
					"AQAAAIwAAAAAAAAArQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AQAAAAAAALgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEA"
				],
				[
					185,
					1,
					"paste",
					null,
					"AQAAAAEAAAAAAAAAHQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOAAAAAAAAAAMAAAB4bWwOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAAMAAAB4bWwYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"cut",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAAcAAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAB0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					208,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AwAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApAAAAAAAAAAMAAABzdGQpAAAAAAAAACoAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "ois"
					},
					"BAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyAAAAAAAAAAMAAABzdGQyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					2,
					"left_delete",
					null,
					"AgAAADMAAAAAAAAAMwAAAAAAAAABAAAAczIAAAAAAAAAMgAAAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "\n\nconst"
					},
					"BwAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO0AAAAAAAAA7wAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"BAAAAO0AAAAAAAAA7QAAAAAAAAABAAAAe+0AAAAAAAAA7QAAAAAAAAABAAAAfewAAAAAAAAA7AAAAAAAAAABAAAAW+wAAAAAAAAA7AAAAAAAAAABAAAAXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "setTimeout,clearT"
					},
					"EQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAPMAAAAAAAAAAAAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "imeout"
					},
					"BgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "=os;"
					},
					"BAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "\nObject.assign"
					},
					"DgAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABcBAAAAAAAAGQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAQAAAAAAABcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "globalThis,"
					},
					"CwAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAAdAQAAAAAAAB4BAAAAAAAAAAAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACEBAAAAAAAAAAAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAQAAAAAAABgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACMBAAAAAAAAJAEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAQAAAAAAACMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACQBAAAAAAAAJgEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "setTim"
					},
					"BgAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACsBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					1,
					"insert_completion",
					{
						"completion": "setTimeout",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "setTimeout"
					},
					"AgAAACUBAAAAAAAAJQEAAAAAAAAGAAAAc2V0VGltJQEAAAAAAAAvAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": ",clear"
					},
					"BgAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					253,
					1,
					"insert_completion",
					{
						"completion": "clearTimeout",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "clearTimeout"
					},
					"AgAAADABAAAAAAAAMAEAAAAAAAAFAAAAY2xlYXIwAQAAAAAAADwBAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AQAAAAAAADwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"left_delete",
					null,
					"AQAAADwBAAAAAAAAPAEAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD4BAAAAAAAAPwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAECAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7Cgpjb25zdCB7c2V0VGltZW91dCxjbGVhclRpbWVvdXR9PW9zOwpPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHtzZXRUaW1lb3V0LGNsZWFyVGltZW91dH0pOwoKIGZ1bmN0aW9uIG1haW4oKSB7CiBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAxLAogICAgICBtYXhBcnJheUxlbmd0aDogMzAsCiAgICAgIGNvbXBhY3Q6IDEKICAgIH0KICB9KTsgCgoKICAgICAoYXN5bmMgZnVuY3Rpb24oKSB7CiBsZXQgcHVzaEV2ZW50LCBzdG9wRXZlbnQ7CiAgICAgY29uc29sZS5sb2coJ1JlcGVhdGVyJywgUmVwZWF0ZXIpOwoKIC8vIGF3YWl0IFV0aWwud2FpdEZvcigwKTsKICBjb25zb2xlLmxvZygnc2V0VGltZW91dCcsIGdsb2JhbFRoaXMuc2V0VGltZW91dCk7CiAgY29uc29sZS5sb2coJ2NsZWFyVGltZW91dCcsIGdsb2JhbFRoaXMuY2xlYXJUaW1lb3V0KTsKCiAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIHB1c2hFdmVudCA9IHB1c2g7CiAgICBzdG9wRXZlbnQgPSBzdG9wOwogICAgYXdhaXQgc3RvcDsKICB9KTsKCiAgbGV0IGIgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgIGF3YWl0IFV0aWwud2FpdEZvcig1MCk7CiAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgfQogICAgc3RvcCgpOwogIH0pOwoKICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCA1KSkgcHVzaChgYyAjJHtudW19YCk7CiAgICBzdG9wKCk7CiAgfSk7CgogIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgcmV0dXJuIGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICBhd2FpdCBVdGlsLndhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQoKICAvL2EubmV4dCgpOwogIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMDApXSldKTsKCiAgbGV0IGxvb3AgPSAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKCiAgZm9yKGxldCBudW0gb2YgVXRpbC5yYW5nZSgxLCAxMCkpIHsKICAgIGF3YWl0IFV0aWwud2FpdEZvcigxMDApOwogICAgcHVzaEV2ZW50KGBhICMke251bX1gKTsKICB9CiAgc3RvcEV2ZW50KCk7CgogIGF3YWl0IGxvb3A7CgogIGxldCB4ID0gWwogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwMCkpLAogICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwMCkpCiAgXTsKICBsZXQgbGF0ZXN0ID0gUmVwZWF0ZXIubGF0ZXN0KHgpOwoKICBhd2FpdCAoYXN5bmMgKCkgPT4gewogICAgZm9yIGF3YWl0KGxldCB0dXBsZSBvZiBsYXRlc3QpIHsKICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIHR1cGxlKTsKICAgIH0KICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgfSkoKTsKfSkoKTsKCn0KCm1haW4oKTsKAAAAAAAAAAB3CAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"cut",
					null,
					"AQAAAI4EAAAAAAAAjgQAAAAAAAD0AAAACgogICAgZnVuY3Rpb24gZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKSB7CiAgICAgIHJldHVybiBhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICAgIGZvcihsZXQgbiBvZiBVdGlsLnJhbmdlKDEsIG51bSkpIHsKICAgICAgICAgIGF3YWl0IFV0aWwud2FpdEZvcihVdGlsLnJhbmRJbnQobXMpKTsKICAgICAgICAgIHB1c2goYCR7bmFtZX0gIyR7bn1gKTsKICAgICAgICB9CiAgICAgICAgc3RvcCgpOwogICAgICB9OwogICAgfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBAAAAAAAAIIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHcHAAAAAAAAeAcAAAAAAAAAAAAAeAcAAAAAAAB6BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3BwAAAAAAAHcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"paste",
					null,
					"AQAAAHoHAAAAAAAAbggAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6BwAAAAAAAHoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AwAAAOMBAAAAAAAA5AEAAAAAAAAAAAAA5AEAAAAAAADkAQAAAAAAAAEAAAAxeAcAAAAAAAB4BwAAAAAAAAIAAAAgIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAQAAAAAAAOQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "std,"
					},
					"BAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+AQAAAAAAAH4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"left_delete",
					null,
					"AQAAAIEBAAAAAAAAgQEAAAAAAAABAAAALA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAQAAAAAAAIIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": ".err,"
					},
					"BQAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAACDAQAAAAAAAIQBAAAAAAAAAAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAQAAAAAAAIEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADsAQAAAAAAAAEAAAAy",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "console"
					},
					"BwAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAEUHAAAAAAAARgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BwAAAAAAAD8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"left_delete",
					null,
					"AQAAAEUHAAAAAAAARQcAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGBwAAAAAAAEYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "e.config"
					},
					"CAAAAEUHAAAAAAAARgcAAAAAAAAAAAAARgcAAAAAAABHBwAAAAAAAAAAAABHBwAAAAAAAEgHAAAAAAAAAAAAAEgHAAAAAAAASQcAAAAAAAAAAAAASQcAAAAAAABKBwAAAAAAAAAAAABKBwAAAAAAAEsHAAAAAAAAAAAAAEsHAAAAAAAATAcAAAAAAAAAAAAATAcAAAAAAABNBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFBwAAAAAAAEUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAE0HAAAAAAAATwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBwAAAAAAAE0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE4HAAAAAAAAUAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBwAAAAAAAE4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": " compact"
					},
					"CAAAAE8HAAAAAAAAUAcAAAAAAAAAAAAAUAcAAAAAAABRBwAAAAAAAAAAAABRBwAAAAAAAFIHAAAAAAAAAAAAAFIHAAAAAAAAUwcAAAAAAAAAAAAAUwcAAAAAAABUBwAAAAAAAAAAAABUBwAAAAAAAFUHAAAAAAAAAAAAAFUHAAAAAAAAVgcAAAAAAAAAAAAAVgcAAAAAAABXBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPBwAAAAAAAE8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFcHAAAAAAAAWAcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBwAAAAAAAFcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABaBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYBwAAAAAAAFgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBwAAAAAAAFoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF0HAAAAAAAAXgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBwAAAAAAAF0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAOEGAAAAAAAA4gYAAAAAAAAAAAAA4gYAAAAAAADjBgAAAAAAAAAAAADjBgAAAAAAAOQGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhBgAAAAAAAOEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQGAAAAAAAA5QYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkBgAAAAAAAOQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					396,
					4,
					"left_delete",
					null,
					"BAAAAOQGAAAAAAAA5AYAAAAAAAABAAAAIOMGAAAAAAAA4wYAAAAAAAABAAAAeeIGAAAAAAAA4gYAAAAAAAABAAAAcuEGAAAAAAAA4QYAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlBgAAAAAAAOUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BgAAAPoGAAAAAAAA+wYAAAAAAAAAAAAA+wYAAAAAAAD/BgAAAAAAAAAAAAD/BgAAAAAAAAEHAAAAAAAAAAAAAAEHAAAAAAAAAgcAAAAAAAAAAAAAAgcAAAAAAAADBwAAAAAAAAAAAAADBwAAAAAAAAQHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6BgAAAAAAAPoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAQHAAAAAAAABgcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEBwAAAAAAAAQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"right_delete",
					null,
					"AQAAAAUHAAAAAAAABQcAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFBwAAAAAAAAUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "}cath"
					},
					"BQAAAHkHAAAAAAAAegcAAAAAAAAAAAAAegcAAAAAAAB7BwAAAAAAAAAAAAB7BwAAAAAAAHwHAAAAAAAAAAAAAHwHAAAAAAAAfQcAAAAAAAAAAAAAfQcAAAAAAAB+BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5BwAAAAAAAHkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					409,
					1,
					"left_delete",
					null,
					"AQAAAH0HAAAAAAAAfQcAAAAAAAABAAAAaA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+BwAAAAAAAH4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAAH0HAAAAAAAAfgcAAAAAAAAAAAAAfgcAAAAAAAB/BwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9BwAAAAAAAH0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					411,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8HAAAAAAAAgQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/BwAAAAAAAH8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "Err"
					},
					"AwAAAIAHAAAAAAAAgQcAAAAAAAAAAAAAgQcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABwAAAAAAAIAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					4,
					"left_delete",
					null,
					"BAAAAIMHAAAAAAAAgwcAAAAAAAABAAAAKYIHAAAAAAAAggcAAAAAAAABAAAAcoEHAAAAAAAAgQcAAAAAAAABAAAAcoAHAAAAAAAAgAcAAAAAAAABAAAARQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEBwAAAAAAAIQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "error)"
					},
					"BgAAAIAHAAAAAAAAgQcAAAAAAAAAAAAAgQcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAACFBwAAAAAAAIYHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACABwAAAAAAAIAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYHAAAAAAAAhwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGBwAAAAAAAIYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					417,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIcHAAAAAAAAiQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBwAAAAAAAIcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					418,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACPBwAAAAAAAAAAAACPBwAAAAAAAJAHAAAAAAAAAAAAAJAHAAAAAAAAlgcAAAAAAAAAAAAAiQcAAAAAAACJBwAAAAAAAAYAAAAgICAgICCJBwAAAAAAAJEHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBwAAAAAAAIgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAJEHAAAAAAAAkgcAAAAAAAAAAAAAkgcAAAAAAACTBwAAAAAAAAAAAACTBwAAAAAAAJQHAAAAAAAAAAAAAJQHAAAAAAAAlQcAAAAAAAAAAAAAlQcAAAAAAACWBwAAAAAAAAAAAACWBwAAAAAAAJcHAAAAAAAAAAAAAJcHAAAAAAAAmAcAAAAAAAAAAAAAmAcAAAAAAACZBwAAAAAAAAAAAACZBwAAAAAAAJoHAAAAAAAAAAAAAJoHAAAAAAAAmwcAAAAAAAAAAAAAmwcAAAAAAACcBwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRBwAAAAAAAJEHAAAAAAAAAAAAAAAA8L8"
				],
				[
					420,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJwHAAAAAAAAngcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBwAAAAAAAJwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					421,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0HAAAAAAAAnwcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBwAAAAAAAJ0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "error:"
					},
					"BgAAAJ4HAAAAAAAAnwcAAAAAAAAAAAAAnwcAAAAAAACgBwAAAAAAAAAAAACgBwAAAAAAAKEHAAAAAAAAAAAAAKEHAAAAAAAAogcAAAAAAAAAAAAAogcAAAAAAACjBwAAAAAAAAAAAACjBwAAAAAAAKQHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeBwAAAAAAAJ4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": ",error"
					},
					"BgAAAKUHAAAAAAAApgcAAAAAAAAAAAAApgcAAAAAAACnBwAAAAAAAAAAAACnBwAAAAAAAKgHAAAAAAAAAAAAAKgHAAAAAAAAqQcAAAAAAAAAAAAAqQcAAAAAAACqBwAAAAAAAAAAAACqBwAAAAAAAKsHAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClBwAAAAAAAKUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKwHAAAAAAAArQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBwAAAAAAAKwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					441,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAMoAAAAAAAAAygAAAAAAAAAEAAAAVXRpbMoAAAAAAAAA0AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAM4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					442,
					1,
					"paste",
					null,
					"AgAAAMsAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADSAAAAAAAAAAQAAABVdGls",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					447,
					4,
					"left_delete",
					null,
					"BAAAAOMAAAAAAAAA4wAAAAAAAAABAAAAbOIAAAAAAAAA4gAAAAAAAAABAAAAaeEAAAAAAAAA4QAAAAAAAAABAAAAdOAAAAAAAAAA4AAAAAAAAAABAAAAdQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "misc"
					},
					"BAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					464,
					1,
					"",
					null,
					"AQAAAM8DAAAAAAAA1gMAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					465,
					1,
					"",
					null,
					"AQAAAMEFAAAAAAAAyAUAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBBQAAAAAAAM0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"",
					null,
					"AQAAAGwIAAAAAAAAcwgAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsCAAAAAAAAHgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					467,
					1,
					"",
					null,
					"AQAAAGgCAAAAAAAAbwIAAAAAAAAMAAAAVXRpbC53YWl0Rm9y",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAgAAAAAAAHQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					477,
					1,
					"cut",
					null,
					"AQAAADMCAAAAAAAAMwIAAAAAAAAnAAAAICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAAFoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					478,
					2,
					"paste",
					null,
					"AgAAADMCAAAAAAAAWgIAAAAAAAAAAAAAWgIAAAAAAACBAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAADMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "wakt"
					},
					"BQAAAGsCAAAAAAAAbAIAAAAAAAAAAAAAbAIAAAAAAABsAgAAAAAAAAgAAABSZXBlYXRlcmwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAgAAAAAAAHMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					2,
					"left_delete",
					null,
					"AgAAAG4CAAAAAAAAbgIAAAAAAAABAAAAdG0CAAAAAAAAbQIAAAAAAAABAAAAaw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "itFor"
					},
					"BQAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAgAAAAAAAG0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					1,
					"paste",
					null,
					"AQAAAHcCAAAAAAAAfgIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AgAAAAAAAHcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"paste",
					null,
					"AgAAAHUCAAAAAAAAfAIAAAAAAAAAAAAAfAIAAAAAAAB8AgAAAAAAAA8AAABSZXdhaXRGb3JwZWF0ZXI",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					5,
					"left_delete",
					null,
					"BQAAAOAAAAAAAAAA4AAAAAAAAAAEAAAAbWlzY98AAAAAAAAA3wAAAAAAAAABAAAAL94AAAAAAAAA3gAAAAAAAAABAAAAYt0AAAAAAAAA3QAAAAAAAAABAAAAadwAAAAAAAAA3AAAAAAAAAABAAAAbA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "quickjs/qjs-modu"
					},
					"EAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "les/lib/util"
					},
					"DAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAQAAAAAAAGEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					534,
					1,
					"cut",
					null,
					"AQAAAMMAAAAAAAAAwwAAAAAAAAA7AAAAaW1wb3J0IHt3YWl0Rm9yfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3V0aWwuanMnOwo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					2,
					"paste",
					null,
					"AgAAAMMAAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAA5AQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": "Util"
					},
					"BQAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGAQAAAAAAAAkAAAB7d2FpdEZvcn0GAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAA4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"left_delete",
					null,
					"AQAAABIBAAAAAAAAEgEAAAAAAAAVAAAAcXVpY2tqcy9xanMtbW9kdWxlcy9s",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAQAAAAAAACcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AgAAAAAAADUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": " scale=+0;"
					},
					"CgAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAARAIAAAAAAABFAgAAAAAAAAAAAABFAgAAAAAAAEYCAAAAAAAAAAAAAEYCAAAAAAAARwIAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AgAAAAAAAD0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					553,
					3,
					"left_delete",
					null,
					"AwAAAEYCAAAAAAAARgIAAAAAAAABAAAAO0UCAAAAAAAARQIAAAAAAAABAAAAMEQCAAAAAAAARAIAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAgAAAAAAAEcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "10;"
					},
					"AwAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABGAgAAAAAAAAAAAABGAgAAAAAAAEcCAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAgAAAAAAAEQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"left_delete",
					null,
					"AQAAAEIEAAAAAAAAQgQAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDBAAAAAAAAEMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAEIEAAAAAAAAQwQAAAAAAAAAAAAAQwQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEUEAAAAAAAAAAAAAEUEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABHBAAAAAAAAAAAAABHBAAAAAAAAEgEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCBAAAAAAAAEIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					1,
					"left_delete",
					null,
					"AQAAADoGAAAAAAAAOgYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BgAAAAAAADsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAADoGAAAAAAAAOwYAAAAAAAAAAAAAOwYAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD0GAAAAAAAAAAAAAD0GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					570,
					1,
					"left_delete",
					null,
					"AQAAAFYFAAAAAAAAVgUAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "*sac"
					},
					"BAAAAFcFAAAAAAAAWAUAAAAAAAAAAAAAWAUAAAAAAABZBQAAAAAAAAAAAABZBQAAAAAAAFoFAAAAAAAAAAAAAFoFAAAAAAAAWwUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXBQAAAAAAAFcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					573,
					2,
					"left_delete",
					null,
					"AgAAAFoFAAAAAAAAWgUAAAAAAAABAAAAY1kFAAAAAAAAWQUAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBQAAAAAAAFsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "cale"
					},
					"BAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAABbBQAAAAAAAFwFAAAAAAAAAAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAQkAAAAAAAAAAAAAAQkAAAAAAAACCQAAAAAAAAAAAAACCQAAAAAAAAMJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9CAAAAAAAAP0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "/+0"
					},
					"AwAAAP0IAAAAAAAA/ggAAAAAAAAAAAAA/ggAAAAAAAD/CAAAAAAAAAAAAAD/CAAAAAAAAAAJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9CAAAAAAAAP0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					2,
					"left_delete",
					null,
					"AgAAAP8IAAAAAAAA/wgAAAAAAAABAAAAMP4IAAAAAAAA/ggAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA/wgAAAAAAAAACQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+CAAAAAAAAP4IAAAAAAAAAAAAAAAA8L8"
				],
				[
					606,
					3,
					"left_delete",
					null,
					"AwAAAP8IAAAAAAAA/wgAAAAAAAABAAAAMP4IAAAAAAAA/ggAAAAAAAABAAAAMf0IAAAAAAAA/QgAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAP4IAAAAAAAA/wgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+CAAAAAAAAP4IAAAAAAAAAAAAAAAA8L8"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "/+0"
					},
					"AwAAAAQJAAAAAAAABQkAAAAAAAAAAAAABQkAAAAAAAAGCQAAAAAAAAAAAAAGCQAAAAAAAAcJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAECQAAAAAAAAQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					3,
					"left_delete",
					null,
					"AwAAAAcJAAAAAAAABwkAAAAAAAABAAAAKQYJAAAAAAAABgkAAAAAAAABAAAAMAUJAAAAAAAABQkAAAAAAAABAAAAKw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAICQAAAAAAAAgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "10))"
					},
					"BAAAAAUJAAAAAAAABgkAAAAAAAAAAAAABgkAAAAAAAAHCQAAAAAAAAAAAAAHCQAAAAAAAAgJAAAAAAAAAAAAAAgJAAAAAAAACQkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFCQAAAAAAAAUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					623,
					1,
					"left_delete",
					null,
					"AQAAAMcGAAAAAAAAxwYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBgAAAAAAAMgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "*scale"
					},
					"BgAAAMcGAAAAAAAAyAYAAAAAAAAAAAAAyAYAAAAAAADJBgAAAAAAAAAAAADJBgAAAAAAAMoGAAAAAAAAAAAAAMoGAAAAAAAAywYAAAAAAAAAAAAAywYAAAAAAADMBgAAAAAAAAAAAADMBgAAAAAAAM0GAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					626,
					1,
					"cut",
					null,
					"AQAAAMcGAAAAAAAAxwYAAAAAAAAGAAAAKnNjYWxl",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					627,
					1,
					"paste",
					null,
					"AQAAAMcGAAAAAAAAzQYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHBgAAAAAAAMcGAAAAAAAAAAAAAAAA8L8"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAAPsGAAAAAAAA+wYAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8BgAAAAAAAPwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					631,
					1,
					"paste",
					null,
					"AQAAAPsGAAAAAAAAAQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7BgAAAAAAAPsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					634,
					1,
					"left_delete",
					null,
					"AQAAAC8HAAAAAAAALwcAAAAAAAABAAAAMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					635,
					1,
					"paste",
					null,
					"AQAAAC8HAAAAAAAANQcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBwAAAAAAAC8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					2,
					"left_delete",
					null,
					"AgAAAA0JAAAAAAAADQkAAAAAAAAKAAAAKHNjYWxlLzEwKQwJAAAAAAAADAkAAAAAAAABAAAAKg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANCQAAAAAAABcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAEQCAAAAAAAARQIAAAAAAAAAAAAARQIAAAAAAABFAgAAAAAAAAIAAAAxMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAgAAAAAAAEYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					653,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjCQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IHt3YWl0Rm9yfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3V0aWwuanMnOwppbXBvcnQgVXRpbCBmcm9tICcuL2xpYi91dGlsLmpzJzsKCmNvbnN0IHsgc2V0VGltZW91dCwgY2xlYXJUaW1lb3V0IH0gPSBvczsKT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IHNldFRpbWVvdXQsIGNsZWFyVGltZW91dCB9KTsKCgoKZnVuY3Rpb24gbWFpbigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIGNvbG9yczogdHJ1ZSwKICAgICAgZGVwdGg6IDEsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAzMCwKICAgICAgY29tcGFjdDogMwogICAgfQogIH0pOwogIGNvbnN0IHNjYWxlPTE7CgogIChhc3luYyBmdW5jdGlvbigpIHsKICAgIGxldCBwdXNoRXZlbnQsIHN0b3BFdmVudDsKICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsKICAgIGNvbnNvbGUubG9nKCd3YWl0Rm9yJywgd2FpdEZvcik7CgogICAgLy8gYXdhaXQgd2FpdEZvcigwKTsKICAgIGNvbnNvbGUubG9nKCdzZXRUaW1lb3V0JywgZ2xvYmFsVGhpcy5zZXRUaW1lb3V0KTsKICAgIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogICAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgcHVzaEV2ZW50ID0gcHVzaDsKICAgICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgICAgYXdhaXQgc3RvcDsKICAgIH0pOwoKICAgIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgICAgYXdhaXQgd2FpdEZvcig1KnNjYWxlKTsKICAgICAgICBwdXNoKGBiICMke251bX1gKTsKICAgICAgfQogICAgICBzdG9wKCk7CiAgICB9KTsKCiAgICBsZXQgYyA9IG5ldyBSZXBlYXRlcihhc3luYyAocHVzaCwgc3RvcCkgPT4gewogICAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDUpKSBwdXNoKGBjICMke251bX1gKTsKICAgICAgc3RvcCgpOwogICAgfSk7CgogICAgLy9hLm5leHQoKTsKICAgIGxldCByZXBlYXQgPSBSZXBlYXRlci5tZXJnZShbYSwgYiwgUmVwZWF0ZXIuemlwKFtjLCBkZWxheSgyMCpzY2FsZSldKV0pOwoKICAgIGxldCBsb29wID0gKGFzeW5jICgpID0+IHsKICAgICAgZm9yIGF3YWl0KGxldCB2YWx1ZSBvZiByZXBlYXQpIHsKICAgICAgICBjb25zb2xlLmxvZygndmFsdWU6JywgdmFsdWUpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgICB9KSgpOwoKICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMTApKSB7CiAgICAgIGF3YWl0IHdhaXRGb3IoMTAqc2NhbGUpOwogICAgICBwdXNoRXZlbnQoYGEgIyR7bnVtfWApOwogICAgfQogICAgc3RvcEV2ZW50KCk7CgogICAgYXdhaXQgbG9vcDsKCiAgICBsZXQgeCA9IFsKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwKnNjYWxlKSksCiAgICAgIG5ldyBSZXBlYXRlcihnZW5SZXBGdW5jKCd5JywgMjAsIDEwMCpzY2FsZSkpLAogICAgICBuZXcgUmVwZWF0ZXIoZ2VuUmVwRnVuYygneicsIDIwLCAxMDAqc2NhbGUpKQogICAgXTsKICAgIGxldCBsYXRlc3QgPSBSZXBlYXRlci5sYXRlc3QoeCk7CgogICAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgICAgdHJ5ewogICAgICBmb3IgYXdhaXQobGV0IHR1cGxlIG9mIGxhdGVzdCkgewogICAgICAgIGNvbnNvbGUubG9nKCd0dXBsZTonLGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMiB9KSwgdHVwbGUpOwogICAgICB9fWNhdGNoKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yOicsZXJyb3IpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCdzdG9wcGVkJyk7CiAgICB9KSgpOwogIH0pKCk7CgoKICAgIGZ1bmN0aW9uIGdlblJlcEZ1bmMobmFtZSwgbnVtLCBtcykgewogICAgICByZXR1cm4gYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgICBmb3IobGV0IG4gb2YgVXRpbC5yYW5nZSgxLCBudW0pKSB7CiAgICAgICAgICBhd2FpdCB3YWl0Rm9yKFV0aWwucmFuZEludChtcykpOwogICAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICAgIH0KICAgICAgICBzdG9wKCk7CiAgICAgIH07CiAgICB9Cn0KCm1haW4oKTsKAAAAAAAAAABwCQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					654,
					1,
					"revert",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAABwCQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKCmltcG9ydCB7IFJlcGVhdGVyIH0gZnJvbSAnLi9saWIvcmVwZWF0ZXIvcmVwZWF0ZXIuanMnOwppbXBvcnQgeyBkZWxheSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKaW1wb3J0IHsgd2FpdEZvciB9IGZyb20gJy4vcXVpY2tqcy9xanMtbW9kdWxlcy9saWIvdXRpbC5qcyc7CmltcG9ydCBVdGlsIGZyb20gJy4vbGliL3V0aWwuanMnOwoKY29uc3QgeyBzZXRUaW1lb3V0LCBjbGVhclRpbWVvdXQgfSA9IG9zOwpPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgc2V0VGltZW91dCwgY2xlYXJUaW1lb3V0IH0pOwoKZnVuY3Rpb24gbWFpbigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogewogICAgICBjb2xvcnM6IHRydWUsCiAgICAgIGRlcHRoOiAxLAogICAgICBtYXhBcnJheUxlbmd0aDogMzAsCiAgICAgIGNvbXBhY3Q6IDMKICAgIH0KICB9KTsKICBjb25zdCBzY2FsZSA9IDE7CgogIChhc3luYyBmdW5jdGlvbigpIHsKICAgIGxldCBwdXNoRXZlbnQsIHN0b3BFdmVudDsKICAgIGNvbnNvbGUubG9nKCdSZXBlYXRlcicsIFJlcGVhdGVyKTsKICAgIGNvbnNvbGUubG9nKCd3YWl0Rm9yJywgd2FpdEZvcik7CgogICAgLy8gYXdhaXQgd2FpdEZvcigwKTsKICAgIGNvbnNvbGUubG9nKCdzZXRUaW1lb3V0JywgZ2xvYmFsVGhpcy5zZXRUaW1lb3V0KTsKICAgIGNvbnNvbGUubG9nKCdjbGVhclRpbWVvdXQnLCBnbG9iYWxUaGlzLmNsZWFyVGltZW91dCk7CgogICAgbGV0IGEgPSBuZXcgUmVwZWF0ZXIoYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgcHVzaEV2ZW50ID0gcHVzaDsKICAgICAgc3RvcEV2ZW50ID0gc3RvcDsKICAgICAgYXdhaXQgc3RvcDsKICAgIH0pOwoKICAgIGxldCBiID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgMjApKSB7CiAgICAgICAgYXdhaXQgd2FpdEZvcig1ICogc2NhbGUpOwogICAgICAgIHB1c2goYGIgIyR7bnVtfWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH0pOwoKICAgIGxldCBjID0gbmV3IFJlcGVhdGVyKGFzeW5jIChwdXNoLCBzdG9wKSA9PiB7CiAgICAgIGZvcihsZXQgbnVtIG9mIFV0aWwucmFuZ2UoMSwgNSkpIHB1c2goYGMgIyR7bnVtfWApOwogICAgICBzdG9wKCk7CiAgICB9KTsKCiAgICAvL2EubmV4dCgpOwogICAgbGV0IHJlcGVhdCA9IFJlcGVhdGVyLm1lcmdlKFthLCBiLCBSZXBlYXRlci56aXAoW2MsIGRlbGF5KDIwICogc2NhbGUpXSldKTsKCiAgICBsZXQgbG9vcCA9IChhc3luYyAoKSA9PiB7CiAgICAgIGZvciBhd2FpdChsZXQgdmFsdWUgb2YgcmVwZWF0KSB7CiAgICAgICAgY29uc29sZS5sb2coJ3ZhbHVlOicsIHZhbHVlKTsKICAgICAgfQogICAgICBjb25zb2xlLmxvZygnc3RvcHBlZCcpOwogICAgfSkoKTsKCiAgICBmb3IobGV0IG51bSBvZiBVdGlsLnJhbmdlKDEsIDEwKSkgewogICAgICBhd2FpdCB3YWl0Rm9yKDEwICogc2NhbGUpOwogICAgICBwdXNoRXZlbnQoYGEgIyR7bnVtfWApOwogICAgfQogICAgc3RvcEV2ZW50KCk7CgogICAgYXdhaXQgbG9vcDsKCiAgICBsZXQgeCA9IFsKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3gnLCAyMCwgMTAwICogc2NhbGUpKSwKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3knLCAyMCwgMTAwICogc2NhbGUpKSwKICAgICAgbmV3IFJlcGVhdGVyKGdlblJlcEZ1bmMoJ3onLCAyMCwgMTAwICogc2NhbGUpKQogICAgXTsKICAgIGxldCBsYXRlc3QgPSBSZXBlYXRlci5sYXRlc3QoeCk7CgogICAgYXdhaXQgKGFzeW5jICgpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgYXdhaXQobGV0IHR1cGxlIG9mIGxhdGVzdCkgewogICAgICAgICAgY29uc29sZS5sb2coJ3R1cGxlOicsIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMiB9KSwgdHVwbGUpOwogICAgICAgIH0KICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcjonLCBlcnJvcik7CiAgICAgIH0KICAgICAgY29uc29sZS5sb2coJ3N0b3BwZWQnKTsKICAgIH0pKCk7CiAgfSkoKTsKCiAgZnVuY3Rpb24gZ2VuUmVwRnVuYyhuYW1lLCBudW0sIG1zKSB7CiAgICByZXR1cm4gYXN5bmMgKHB1c2gsIHN0b3ApID0+IHsKICAgICAgZm9yKGxldCBuIG9mIFV0aWwucmFuZ2UoMSwgbnVtKSkgewogICAgICAgIGF3YWl0IHdhaXRGb3IoVXRpbC5yYW5kSW50KG1zKSk7CiAgICAgICAgcHVzaChgJHtuYW1lfSAjJHtufWApOwogICAgICB9CiAgICAgIHN0b3AoKTsKICAgIH07CiAgfQp9CgptYWluKCk7CgAAAAAAAAAAWAkAAAAAAAAAAAAAAAAAAAAAAABYCQAAAAAAAAAAAAAAAAAAAAAAAFgJAAAAAAAAAAAAAAAAAAAAAAAAWAkAAAAAAAAAAAAAAAAAAAAAAABYCQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-qjs.c",
			"settings":
			{
				"buffer_size": 2858,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjs-opencv/js_array.hpp",
			"settings":
			{
				"buffer_size": 19671,
				"line_ending": "Unix"
			}
		},
		{
			"file": "qjs-opencv/js_contour.hpp",
			"settings":
			{
				"buffer_size": 2363,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-video.config.json",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 22937,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-ecmascript2.js",
			"settings":
			{
				"buffer_size": 10181,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-eagle.js",
			"settings":
			{
				"buffer_size": 9064,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJoSAAAAAAAAmxIAAAAAAAAAAAAAmxIAAAAAAACbEgAAAAAAAEUAAAAgIGF3YWl0IFBvcnRhYmxlRmlsZVN5c3RlbShmcyA9PiAoZmlsZXN5c3RlbSA9IGdsb2JhbFRoaXMuZnMgPSBmcykpOwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhIAAAAAAADfEgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAALMBAAAAAAAAyAEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAswEAAAAAAACzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "=FS"
					},
					"AwAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAANkBAAAAAAAA2QEAAAAAAAABAAAAU9gBAAAAAAAA2AEAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AgAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 94552,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wQAAAAAAAD3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gQAAAAAAAD6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"cut",
					null,
					"AQAAAO8EAAAAAAAA7wQAAAAAAABGAAAAaW1wb3J0ICogYXMgVGltZXJzLCB7IFRpbWVvdXRFcnJvciB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3RpbWVycy5qcyc7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wQAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"paste",
					null,
					"AgAAAO8EAAAAAAAANQUAAAAAAAAAAAAANQUAAAAAAAB7BQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wQAAAAAAADvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA9wQAAAAAAAD3BAAAAAAAAA0AAAAqIGFzIFRpbWVycywg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gQAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					16,
					"left_delete",
					null,
					"EAAAAEkFAAAAAAAASQUAAAAAAAAFAAAAb3IgfSBIBQAAAAAAAEgFAAAAAAAAAQAAAHJHBQAAAAAAAEcFAAAAAAAAAQAAAHJGBQAAAAAAAEYFAAAAAAAAAQAAAEVFBQAAAAAAAEUFAAAAAAAAAQAAAHREBQAAAAAAAEQFAAAAAAAAAQAAAHVDBQAAAAAAAEMFAAAAAAAAAQAAAG9CBQAAAAAAAEIFAAAAAAAAAQAAAGVBBQAAAAAAAEEFAAAAAAAAAQAAAG1ABQAAAAAAAEAFAAAAAAAAAQAAAGk/BQAAAAAAAD8FAAAAAAAAAQAAAFQ+BQAAAAAAAD4FAAAAAAAAAQAAACA9BQAAAAAAAD0FAAAAAAAAAQAAAHs8BQAAAAAAADwFAAAAAAAAAQAAACA7BQAAAAAAADsFAAAAAAAAAQAAACw6BQAAAAAAADoFAAAAAAAAAQAAAHM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAADoFAAAAAAAAOwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsFAAAAAAAAPAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOwUAAAAAAAA7BQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"prett",
				"Build With: prettier"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
		"/home/roman/Projects/plot-cv/test-xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/convert-imports.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/test-readdir.js",
		"/home/roman/Projects/plot-cv/RecursiveIterator.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/image-helpers.js",
		"/home/roman/Projects/plot-cv/lib/png.js",
		"/home/roman/Projects/plot-cv/lib/jpegSize.js",
		"/home/roman/Projects/plot-cv/lib/jpeg.js",
		"/home/roman/Projects/plot-cv/lib/image-info.js",
		"/home/roman/Projects/plot-cv/lib/image-size.js",
		"/home/roman/Projects/plot-cv/lib/repeater/limiters.js",
		"/home/roman/Projects/plot-cv/lib/repeater/pubsub.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/userscript-build.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-svgpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/test-bpg.html",
		"/home/roman/Projects/plot-cv/test-call.js",
		"/home/roman/Projects/plot-cv/output-267.svg",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/dump-structs.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/jsobjstruct.c",
		"/home/roman/Projects/plot-cv/example_gl2.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/undefinedundefined63undefined",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/opencv/disabled/code10-3.cpp",
		"/home/roman/Projects/plot-cv/lib/dom/svg.js",
		"/home/roman/Projects/plot-cv/lib/svg/path-parser.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/test.js",
		"/home/roman/Projects/plot-cv/test-clipper.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/src/simple_svg_writer.hpp",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/static/svg/player-symbols.svg",
		"/home/roman/Projects/plot-cv/restart.svg",
		"/home/roman/Projects/plot-cv/stop.svg",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger-transport-unix.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-debugger.c",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/.config/sublime-text/Packages/Out",
		"/home/roman/Projects/plot-cv/lib/lexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useFetch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/test-net.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/test-minnet.js",
		"/home/roman/Projects/plot-cv/repl.js",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/static/svg/arrow-right.svg",
		"/home/roman/Projects/plot-cv/lib/dom/css.js",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/css/button.css",
		"/home/roman/Projects/plot-cv/lib/hooks/useClick.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/lib/hooks.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js",
		"/home/roman/Projects/plot-cv/test-jslexer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterable.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useGenerator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useIterator.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/token.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/lexer.js",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.ejs",
		"/home/roman/Projects/plot-cv/react-simple-code-editor.js",
		"/home/roman/Projects/plot-cv/test-console.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDebounce.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useDrag.js"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Timers",
			"js_import_load",
			"import.*repl",
			"rec->MOdule_Func",
			"resolved",
			"jsm_module_loader",
			"xml",
			"jsm_module_load\\(",
			"xml",
			"jsm_module_extern_native",
			"xml",
			"ctx =",
			"jsm_init_modules",
			"js_xml_Init",
			"jsm_module_load\\(",
			"jsm_module_load",
			"LOAD_MODULE:",
			"JS_SYNTAX_ERROR",
			"Syntax.?error",
			"Syntax.*error",
			"SyntaxError",
			"native_error_name",
			"\"SyntaxError",
			"js_mat_tostring_",
			"js_mat_tostring_tag",
			"js_mat_inspect",
			"ReadDirRecursive",
			"waitFor",
			"waitFOr",
			"Util\\.waitFor",
			"import.*util.js",
			"repeater",
			"enerator",
			"__generator",
			"step",
			" resolve\\(",
			"resolve\\(",
			"resolve",
			"resolve =",
			"finish",
			"createIteration",
			"consumeExecution",
			"createIteration",
			"\\.next =",
			"next\\(",
			"swallow",
			"createIteration",
			"resolve:",
			"\\.push\\(",
			"pushes.push",
			"pending = ",
			"pending =",
			"Initial",
			"\\.buffer",
			"new Repeater\\(",
			"new Repeater",
			"r\\.buffer",
			"r\\.buffer = ",
			"executor",
			"function Repeater",
			"'out:'",
			"getCompletions",
			"completion",
			"handleDirect",
			"Util.getFunc",
			"unctionArg",
			"padEnd",
			"Prompt",
			"StatFiles",
			"historySave",
			"wrote.*hist",
			"Wrote.*hist",
			"Wrote",
			"historyLoad",
			"RecursiveDir",
			"GetImports",
			"MemberNa",
			"ParseECM",
			"ProcessFile",
			"ParseECMAScript",
			"{[^}]*}: \\${",
			"Terminate",
			"lines",
			"main",
			"compact",
			"str",
			"\\.str",
			"format\\(",
			"format ",
			"'s'",
			"outputMat",
			"outputMap",
			"size = ",
			"PERPE",
			"'s'",
			"testOff",
			"_cmd",
			"parse",
			"simplifi",
			"simplify",
			"psimpl",
			"simpl",
			"reduce",
			"\\.array",
			"JS.*PROP",
			"contours",
			"findCont",
			"'\\\\x3",
			"'\\x3",
			"\\\\x3",
			"\\x3",
			"0x([0-9a-f][0-9a-f])",
			"send to",
			"read size",
			"RenderUI",
			"currentSource",
			"currentSource =",
			"UpdatePosition",
			"currentSource",
			"\\(globalThis",
			"define",
			"trkl",
			"currentSource",
			"SourceFile",
			"path.relative",
			"doRender",
			"RenderUI",
			"doRender"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask",
			"a.push(\\1);",
			"fd",
			"log",
			"cv::KeyPoint",
			"cv::KeyPoints",
			"getMat",
			"Feature2DClass",
			", ",
			"}\\n\\nstatic",
			"s",
			"",
			"\\("
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 143,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/test-qjs.c",
							"function_name_status_row": 42,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									277,
									285
								],
								[
									993,
									1002
								],
								[
									1587,
									1606
								],
								[
									1989,
									1993
								]
							],
							"symlist":
							[
								"‚Äî‚íª‚Äì eval_buf ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì eval_file ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì JS_NewCustomContext ( ) { ‚Ä¶ } ‚Äî function",
								"‚Äî‚íª‚Äì main ( ) { ‚Ä¶ } ‚Äî function"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635285986.29,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-repeater.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2392,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								272
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 7,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728365.47,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-qjs.c",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2858,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635887184.84,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "qjs-opencv/js_array.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19671,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728364.35,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "qjs-opencv/js_contour.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2363,
						"regions":
						{
						},
						"selection":
						[
							[
								4,
								4
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728363.58,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test-video.config.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728362.69,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-video.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22937,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728361.97,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test-ecmascript2.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10181,
						"regions":
						{
						},
						"selection":
						[
							[
								1925,
								1946
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 92,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728355.64,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "test-eagle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9064,
						"regions":
						{
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										1330,
										1335
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										1315,
										1315
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								474,
								474
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 12,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635728356.8,
							"tabs_extra_last_activated_sheet_index": 6,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94552,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										86484,
										86493
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										86388,
										86388
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										44604,
										44608
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										44587,
										44587
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21026,
										21033
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										23110,
										23119
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										23097,
										23097
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										23174,
										23178
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										23128,
										23128
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										44746,
										44766
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										44647,
										44647
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22585,
										22589
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										22511,
										22511
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11163,
										11167
									],
									[
										22184,
										22189
									],
									[
										22718,
										22722
									],
									[
										22889,
										22893
									],
									[
										24123,
										24127
									],
									[
										24693,
										24697
									],
									[
										28272,
										28277
									],
									[
										28348,
										28353
									],
									[
										44304,
										44308
									],
									[
										77017,
										77029
									],
									[
										84056,
										84060
									],
									[
										85921,
										85925
									],
									[
										86050,
										86054
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										11084,
										11084
									],
									[
										22169,
										22169
									],
									[
										22703,
										22703
									],
									[
										22876,
										22876
									],
									[
										24108,
										24108
									],
									[
										24678,
										24678
									],
									[
										28217,
										28217
									],
									[
										28297,
										28297
									],
									[
										44233,
										44233
									],
									[
										76974,
										76974
									],
									[
										83996,
										83996
									],
									[
										85868,
										85868
									],
									[
										85965,
										85965
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21263,
										21270
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21067,
										21074
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21274,
										21281
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21015,
										21022
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21089,
										21096
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21078,
										21085
									]
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										78571,
										78588
									]
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
									[
										78550,
										78550
									]
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
									[
										11380,
										11401
									]
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
									[
										11333,
										11333
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										66941,
										66945
									],
									[
										69320,
										69324
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										66885,
										66885
									],
									[
										69252,
										69252
									]
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21037,
										21044
									]
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21111,
										21118
									]
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21252,
										21259
									]
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21230,
										21237
									]
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21241,
										21248
									]
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
									[
										21212,
										21212
									]
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21100,
										21107
									]
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
									[
										21048,
										21048
									]
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										20993,
										21000
									]
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21004,
										21011
									]
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
									[
										20976,
										20976
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										7070,
										7073
									],
									[
										19237,
										19241
									],
									[
										28440,
										28443
									],
									[
										44408,
										44412
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										7059,
										7059
									],
									[
										19224,
										19224
									],
									[
										28376,
										28376
									],
									[
										44337,
										44337
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45044,
										45048
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										45023,
										45023
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										78530,
										78547
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
										78508,
										78508
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										84710,
										84717
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										84693,
										84693
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										22696,
										22700
									],
									[
										86261,
										86265
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										22683,
										22683
									],
									[
										86238,
										86238
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										24143,
										24147
									],
									[
										63410,
										63415
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										24130,
										24130
									],
									[
										63392,
										63392
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								3051,
								3051
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1635363878.91,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.754262567352,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main.j",
				"main.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-misc.c",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-mmap",
				"quickjs/qjs-modules/quickjs-mmap.c"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-ins",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"webSOc",
				"webSocket.js"
			],
			[
				"timers.",
				"lib/repeater/timers.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvGUI",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"js_Mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"-helper",
				"io-helpers.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"quickjs-lib",
				"quickjs/quickjs-libc.c"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-repe",
				"test-repeater.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"repea",
				"lib/repeater/repeater.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"jpeg.js",
				"lib/jpeg.js"
			],
			[
				"image-h",
				"image-helpers.js"
			],
			[
				"estree.js",
				"lib/ecmascript/estree.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"terminal",
				"qjs-modules/lib/terminal.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			],
			[
				"js_cont",
				"qjs-opencv/js_contour.hpp"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"path",
				"lib/svg/path.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"svgpa",
				"lib/svg/path-parser.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"test-clip",
				"test-clipper.js"
			],
			[
				"13",
				"opencv/disabled/code10-3.cpp"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"test-svg",
				"test-svgpath.js"
			],
			[
				"test-svgp",
				"test-svgpath.js"
			],
			[
				"svg",
				"src/simple_svg_writer.hpp"
			],
			[
				"player-sy",
				"static/svg/player-symbols.svg"
			],
			[
				".svg",
				"restart.svg"
			],
			[
				"server",
				"debugger-server.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"sockets.c",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debuggerprot",
				"debuggerprotocol.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.cs",
				"static/debugger.css"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			],
			[
				"debugger-c",
				"debugger-client.js"
			],
			[
				"test-jsl",
				"test-jslexer.js"
			],
			[
				"hooks",
				"lib/hooks.js"
			],
			[
				"test-jsle",
				"test-jslexer.js"
			],
			[
				"misc.j",
				"lib/misc.js"
			],
			[
				"token",
				"lib/ecmascript/token.js"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"jslexer",
				"lib/jslexer.js"
			],
			[
				"",
				"debugger-server.js"
			],
			[
				"react-sim",
				"react-simple-code-editor.js"
			],
			[
				"prism-co",
				"prism-core.js"
			],
			[
				"prism-core",
				"prism-core.js"
			],
			[
				"debugger",
				"debugger-server.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"hooks.j",
				"lib/hooks.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"hook",
				"lib/hooks.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"parser.",
				"lib/ecmascript/parser.js"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"arser.js",
				"lib/ecmascript/parser.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"test-lexer",
				"test-lexer.js"
			],
			[
				"elemen",
				"lib/dom/element.js"
			],
			[
				"element",
				"lib/dom/element.js"
			],
			[
				"debugger.html",
				"debugger.html"
			],
			[
				"process.js",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"filesys",
				"lib/filesystem.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"debu",
				"debugger-server.js"
			],
			[
				"errval",
				"errval.c"
			],
			[
				"events",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"events.",
				"lib/events.js"
			],
			[
				"path.c",
				"quickjs/qjs-modules/path.c"
			],
			[
				"syscall",
				"quickjs/qjs-modules/quickjs-syscallerror.c"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
