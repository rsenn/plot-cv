{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Graph\n  constructor()\n  checkForDuplicateNodes()\n  checkForDuplicateConnections()\n  getAdjacencyList()\n  node =>\n  getConnectedNodes(node)\n  connection =>\n  connection =>\n  getConnectionsFromNode(node)\n  connection =>\n  getNeighboringNodes(node)\n  nodeConnection =>\n  isConnected(node1, node2)\n  connection =>\n  addConnection(node1, node2)\n  node =>\n  node =>\n  connection =>\n  addNode(newNode)\n  node =>\n  findMinimumCyclesFromSource(adjacencyListSourceIndex)\n  nodeIndex =>\n  findMinimumCycles()\n  cycle =>\n  edgePair =>\n  edge =>\n  nodeIndex =>\n  cycle =>\n  static doArraysContainSameElements(array1, array2)\n  static findShortestPath(adjacencyList, source, target)\nNode\n  constructor(point, connections)\n  equals(node)\nNode\nEdge\n  constructor(node1, node2)\n  equals(connection)",
			"settings":
			{
				"buffer_size": 781,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					3,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABVDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
							[
								53,
								81
							],
							[
								148,
								166
							],
							[
								1041,
								1064
							],
							[
								1354,
								1362
							],
							[
								1607,
								1616
							],
							[
								1661,
								1675
							],
							[
								2381,
								2396
							],
							[
								2534,
								2558
							],
							[
								2560,
								2684
							]
						],
						"symlist":
						[
							" A sample Markdown document",
							"   Text Formatting",
							"   Links and References",
							"   Lists",
							"   Tables",
							"   Code Blocks",
							"   CriticMarkup",
							"   Reference Definitions",
							"[^1]: This is a footnote definition [links]: https://example.com/index.html [sample image]: https://example.com/sample.png"
						]
					},
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10975,
								10988
							],
							[
								11368,
								11402
							],
							[
								11906,
								11950
							],
							[
								12069,
								12089
							],
							[
								12404,
								12414
							],
							[
								12442,
								12452
							],
							[
								12488,
								12501
							],
							[
								12751,
								12765
							],
							[
								13657,
								13666
							],
							[
								13907,
								13926
							],
							[
								14468,
								14481
							],
							[
								14499,
								14504
							],
							[
								14555,
								14568
							],
							[
								14619,
								14640
							],
							[
								15037,
								15053
							],
							[
								15441,
								15446
							],
							[
								15484,
								15499
							],
							[
								15646,
								15654
							],
							[
								15695,
								15703
							],
							[
								15980,
								16008
							],
							[
								16075,
								16109
							],
							[
								16143,
								16148
							],
							[
								16170,
								16200
							],
							[
								16442,
								16450
							],
							[
								16517,
								16521
							],
							[
								16611,
								16618
							],
							[
								16958,
								16982
							],
							[
								17227,
								17232
							],
							[
								18962,
								19006
							],
							[
								19453,
								19479
							],
							[
								20181,
								20204
							],
							[
								20324,
								20346
							],
							[
								20597,
								20601
							],
							[
								21089,
								21093
							],
							[
								21710,
								21739
							],
							[
								21764,
								21768
							],
							[
								21844,
								21867
							],
							[
								21911,
								21917
							],
							[
								21945,
								21949
							],
							[
								21965,
								22002
							],
							[
								22024,
								22040
							],
							[
								22060,
								22067
							],
							[
								22124,
								22152
							],
							[
								22206,
								22217
							],
							[
								22300,
								22308
							],
							[
								22404,
								22408
							],
							[
								22558,
								22562
							],
							[
								22660,
								22665
							],
							[
								22725,
								22736
							],
							[
								22808,
								22819
							],
							[
								22906,
								22911
							],
							[
								22961,
								22967
							],
							[
								23064,
								23072
							],
							[
								23247,
								23276
							],
							[
								23369,
								23422
							],
							[
								23575,
								23579
							],
							[
								23633,
								23637
							],
							[
								23913,
								23920
							],
							[
								23942,
								23948
							],
							[
								23977,
								24008
							],
							[
								24142,
								24166
							],
							[
								24292,
								24303
							],
							[
								24321,
								24337
							],
							[
								24496,
								24501
							],
							[
								24525,
								24529
							],
							[
								24577,
								24586
							],
							[
								24654,
								24659
							],
							[
								24797,
								24802
							],
							[
								24924,
								24935
							],
							[
								25024,
								25031
							],
							[
								25677,
								25693
							],
							[
								27747,
								27786
							],
							[
								27828,
								27842
							],
							[
								28091,
								28125
							],
							[
								28464,
								28478
							],
							[
								28573,
								28577
							],
							[
								28599,
								28613
							],
							[
								28644,
								28648
							],
							[
								29948,
								29964
							],
							[
								30014,
								30029
							],
							[
								30088,
								30107
							],
							[
								30130,
								30142
							],
							[
								30231,
								30235
							],
							[
								30334,
								30338
							],
							[
								30557,
								30563
							],
							[
								30653,
								30667
							],
							[
								30696,
								30714
							],
							[
								30851,
								30863
							],
							[
								30893,
								30958
							],
							[
								30987,
								30992
							],
							[
								31131,
								31169
							],
							[
								31194,
								31214
							],
							[
								31243,
								31292
							],
							[
								31339,
								31349
							],
							[
								31522,
								31532
							],
							[
								31605,
								31615
							],
							[
								31686,
								31696
							],
							[
								32223,
								32304
							],
							[
								32315,
								32338
							],
							[
								32556,
								32561
							],
							[
								32644,
								32653
							],
							[
								32683,
								32689
							],
							[
								32705,
								32734
							],
							[
								32770,
								32783
							],
							[
								33014,
								33020
							],
							[
								33029,
								33040
							],
							[
								33108,
								33130
							],
							[
								33347,
								33370
							],
							[
								33782,
								33811
							],
							[
								34133,
								34160
							],
							[
								34194,
								34207
							],
							[
								34234,
								34239
							],
							[
								34263,
								34268
							],
							[
								34313,
								34323
							],
							[
								34353,
								34363
							],
							[
								34449,
								34454
							],
							[
								34574,
								34579
							],
							[
								34593,
								34601
							],
							[
								34823,
								34827
							],
							[
								34880,
								34884
							],
							[
								34972,
								34985
							],
							[
								35086,
								35099
							],
							[
								35360,
								35393
							],
							[
								35447,
								35451
							],
							[
								35565,
								35591
							],
							[
								35934,
								35967
							],
							[
								36314,
								36359
							],
							[
								36400,
								36404
							],
							[
								36421,
								36450
							],
							[
								36486,
								36492
							],
							[
								36876,
								36946
							],
							[
								37546,
								37618
							],
							[
								37851,
								37856
							],
							[
								38578,
								38582
							],
							[
								38803,
								38844
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAeAQAAICAgICBBIHNhbXBsZSBNYXJrZG93biBkb2N1bWVudAogICAgIFRleHQgRm9ybWF0dGluZwogICAgIExpbmtzIGFuZCBSZWZlcmVuY2VzCiAgICAgTGlzdHMKICAgICBUYWJsZXMKICAgICBDb2RlIEJsb2NrcwogICAgIENyaXRpY01hcmt1cAogICAgIFJlZmVyZW5jZSBEZWZpbml0aW9ucwpbXjFdOiBUaGlzIGlzIGEgZm9vdG5vdGUgZGVmaW5pdGlvbiBbbGlua3NdOiBodHRwczovL2V4YW1wbGUuY29tL2luZGV4Lmh0bWwgW3NhbXBsZSBpbWFnZV06IGh0dHBzOi8vZXhhbXBsZS5jb20vc2FtcGxlLnBuZwAAAAAAAAAAVQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABVDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10975,
								10988
							],
							[
								11368,
								11402
							],
							[
								11906,
								11950
							],
							[
								12069,
								12089
							],
							[
								12404,
								12414
							],
							[
								12442,
								12452
							],
							[
								12488,
								12501
							],
							[
								12751,
								12765
							],
							[
								13657,
								13666
							],
							[
								13907,
								13926
							],
							[
								14468,
								14481
							],
							[
								14499,
								14504
							],
							[
								14555,
								14568
							],
							[
								14619,
								14640
							],
							[
								15037,
								15053
							],
							[
								15441,
								15446
							],
							[
								15484,
								15499
							],
							[
								15646,
								15654
							],
							[
								15695,
								15703
							],
							[
								15980,
								16008
							],
							[
								16075,
								16109
							],
							[
								16143,
								16148
							],
							[
								16170,
								16200
							],
							[
								16442,
								16450
							],
							[
								16517,
								16521
							],
							[
								16611,
								16618
							],
							[
								16958,
								16982
							],
							[
								17227,
								17232
							],
							[
								18962,
								19006
							],
							[
								19453,
								19479
							],
							[
								20181,
								20204
							],
							[
								20324,
								20346
							],
							[
								20597,
								20601
							],
							[
								21089,
								21093
							],
							[
								21710,
								21739
							],
							[
								21764,
								21768
							],
							[
								21844,
								21867
							],
							[
								21911,
								21917
							],
							[
								21945,
								21949
							],
							[
								21965,
								22002
							],
							[
								22024,
								22040
							],
							[
								22060,
								22067
							],
							[
								22124,
								22152
							],
							[
								22206,
								22217
							],
							[
								22300,
								22308
							],
							[
								22404,
								22408
							],
							[
								22558,
								22562
							],
							[
								22660,
								22665
							],
							[
								22725,
								22736
							],
							[
								22808,
								22819
							],
							[
								22906,
								22911
							],
							[
								22961,
								22967
							],
							[
								23064,
								23072
							],
							[
								23247,
								23276
							],
							[
								23369,
								23422
							],
							[
								23575,
								23579
							],
							[
								23633,
								23637
							],
							[
								23913,
								23920
							],
							[
								23942,
								23948
							],
							[
								23977,
								24008
							],
							[
								24142,
								24166
							],
							[
								24292,
								24303
							],
							[
								24321,
								24337
							],
							[
								24496,
								24501
							],
							[
								24525,
								24529
							],
							[
								24577,
								24586
							],
							[
								24654,
								24659
							],
							[
								24797,
								24802
							],
							[
								24924,
								24935
							],
							[
								25024,
								25031
							],
							[
								25677,
								25693
							],
							[
								27747,
								27786
							],
							[
								27828,
								27842
							],
							[
								28091,
								28125
							],
							[
								28464,
								28478
							],
							[
								28573,
								28577
							],
							[
								28599,
								28613
							],
							[
								28644,
								28648
							],
							[
								29948,
								29964
							],
							[
								30014,
								30029
							],
							[
								30088,
								30107
							],
							[
								30130,
								30142
							],
							[
								30231,
								30235
							],
							[
								30334,
								30338
							],
							[
								30557,
								30563
							],
							[
								30653,
								30667
							],
							[
								30696,
								30714
							],
							[
								30851,
								30863
							],
							[
								30893,
								30958
							],
							[
								30987,
								30992
							],
							[
								31131,
								31169
							],
							[
								31194,
								31214
							],
							[
								31243,
								31292
							],
							[
								31339,
								31349
							],
							[
								31522,
								31532
							],
							[
								31605,
								31615
							],
							[
								31686,
								31696
							],
							[
								32223,
								32304
							],
							[
								32315,
								32338
							],
							[
								32556,
								32561
							],
							[
								32644,
								32653
							],
							[
								32683,
								32689
							],
							[
								32705,
								32734
							],
							[
								32770,
								32783
							],
							[
								33014,
								33020
							],
							[
								33029,
								33040
							],
							[
								33108,
								33130
							],
							[
								33347,
								33370
							],
							[
								33782,
								33811
							],
							[
								34133,
								34160
							],
							[
								34194,
								34207
							],
							[
								34234,
								34239
							],
							[
								34263,
								34268
							],
							[
								34313,
								34323
							],
							[
								34353,
								34363
							],
							[
								34449,
								34454
							],
							[
								34574,
								34579
							],
							[
								34593,
								34601
							],
							[
								34823,
								34827
							],
							[
								34880,
								34884
							],
							[
								34972,
								34985
							],
							[
								35086,
								35099
							],
							[
								35360,
								35393
							],
							[
								35447,
								35451
							],
							[
								35565,
								35591
							],
							[
								35934,
								35967
							],
							[
								36314,
								36359
							],
							[
								36400,
								36404
							],
							[
								36421,
								36450
							],
							[
								36486,
								36492
							],
							[
								36876,
								36946
							],
							[
								37546,
								37618
							],
							[
								37851,
								37856
							],
							[
								38578,
								38582
							],
							[
								38803,
								38844
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"function InitBoard(doc = project.board)",
							"([name, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>",
							"function MakeGraph(board = project.board)"
						]
					},
					"AQAAAAAAAAAAAAAAVQwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABVDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KSW5pdEJvYXJkKGRvYyA9IHByb2plY3QuYm9hcmQpCihbbmFtZSwgZV0pID0+CiAgdGVzdEVhZ2xlKGZpbGVuYW1lKQooW25hbWUsIGVdKSA9PgogIGUgPT4KKFtuYW1lLCBpXSkgPT4KICBwID0+CihjaGlsZCwgaSwgYSkgPT4KKGNoaWxkMiwgaTIpID0+CihbaW5kZXgsIGVxdWFsXSkgPT4KKFtpbmRleF0pID0+CiAgaSA9PgogIGkgPT4KICBkb2MgPT4KKFtmaWxlLCBlXSkgPT4KKFtmaWxlLCB4cGF0aF0pID0+Cihbaywgdl0pID0+Ck1vZGlmeVBhdGgocCwgZm4gPSAoZGlyLCBiYXNlLCBleHQpID0+IFtkaXIsIGJhc2UsIGV4dF0pCigpID0+CkFwcGVuZFRvRmlsZW5hbWUocCwgc3RyID0gJycpCihkaXIsIGJhc2UsIGV4dCkgPT4KU2V0U1ZHQmFja2dyb3VuZCh4bWwsIGNvbG9yID0gJyNmZmZmZmYnKQooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KRmlsZUZ1bmN0aW9uID0gKGZuLCByZm4gPSBSZWFkRmlsZSwgd2ZuID0gV3JpdGVGaWxlLCBuYW1lZm4gPSBuID0+IG4sIC4uLmFyZ3MpID0+CihmaWxlbmFtZSwgLi4uYXJncykgPT4KbiA9PgpkYXRhID0+Cm4gPT4KUHV0Um93c0NvbHVtbnMocm93cykKKGFjYywgcm93KSA9PgogIHJvdyA9PgooY29sLCBpKSA9PgpHZXRMaWJyYXJ5KGUpCkVsZW1lbnROYW1lKGUpCkdldFJvdGF0aW9uKGVsZW1lbnQpClBhY2thZ2UyQ2lyY3VpdChwKQooeyB4LCB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgooeyB4IH0pID0+Cih7IHkgfSkgPT4KICBwdCA9PgogIHB0ID0+CiAgY29vcmQgPT4KICB4ID0+CiAgeSA9PgooeyB4LCB5IH0pID0+Cih7IHgsIHkgfSkgPT4KQ29udGFjdHJlZjJDaXJjdWl0KGNyZWYpCiAgZSA9PgpTaWduYWwyQ2lyY3VpdChzKQpFbGVtZW50MkNpcmN1aXQoZWxlbWVudCkKR2V0VXNlZFBhY2thZ2VzKGRvYyA9IHByb2plY3QuYm9hcmQpCiAgZSA9PgpHZXRQYWNrYWdlUGl0Y2gocGtnKQogIHBhZCA9PgpFYWdsZTJDaXJjdWl0KGRvYyA9IHByb2plY3QuYm9hcmQsIHdpZHRoID0gMTAwLCBoZWlnaHQgPSAxMDApCkVhZ2xlMkNpcmN1aXRKUyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYywgc2NhbGUgPSA1MCwgc2hlZXQgPSAwKQpuID0+CiAgZSA9PgpNYWtlR3JhcGgoYm9hcmQgPSBwcm9qZWN0LmJvYXJkKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								15286,
								15299
							],
							[
								15520,
								15532
							],
							[
								15665,
								15681
							],
							[
								16008,
								16018
							],
							[
								16330,
								16342
							],
							[
								16391,
								16395
							],
							[
								16461,
								16470
							],
							[
								16519,
								16523
							],
							[
								16656,
								16662
							],
							[
								16738,
								16743
							],
							[
								16997,
								17003
							],
							[
								17120,
								17138
							],
							[
								17157,
								17183
							],
							[
								17391,
								17397
							],
							[
								17587,
								17594
							],
							[
								17684,
								17690
							],
							[
								17880,
								17887
							],
							[
								18059,
								18065
							],
							[
								18120,
								18125
							],
							[
								18224,
								18230
							],
							[
								18285,
								18290
							],
							[
								18345,
								18351
							],
							[
								18427,
								18432
							],
							[
								18547,
								18553
							],
							[
								18608,
								18613
							],
							[
								18683,
								18705
							],
							[
								18802,
								18825
							],
							[
								18924,
								18946
							],
							[
								19072,
								19089
							],
							[
								19122,
								19130
							],
							[
								19329,
								19351
							],
							[
								19759,
								19768
							],
							[
								19817,
								19821
							],
							[
								20227,
								20233
							],
							[
								20348,
								20352
							],
							[
								20485,
								20490
							],
							[
								20560,
								20565
							],
							[
								20700,
								20714
							],
							[
								20779,
								20800
							],
							[
								20921,
								20941
							],
							[
								20986,
								21016
							],
							[
								21233,
								21240
							],
							[
								21345,
								21356
							],
							[
								21552,
								21570
							],
							[
								21655,
								21675
							],
							[
								21725,
								21729
							],
							[
								21772,
								21782
							],
							[
								21973,
								21989
							],
							[
								22024,
								22034
							],
							[
								22376,
								22397
							],
							[
								22576,
								22589
							],
							[
								23135,
								23161
							],
							[
								23258,
								23269
							],
							[
								23689,
								23693
							],
							[
								25031,
								25035
							],
							[
								25471,
								25475
							],
							[
								25710,
								25714
							],
							[
								25869,
								25873
							],
							[
								25902,
								25906
							],
							[
								26100,
								26104
							],
							[
								26781,
								26785
							],
							[
								27076,
								27088
							],
							[
								27127,
								27143
							],
							[
								27506,
								27520
							],
							[
								27664,
								27692
							],
							[
								27919,
								27923
							],
							[
								28014,
								28021
							],
							[
								28084,
								28094
							],
							[
								28323,
								28330
							],
							[
								28575,
								28582
							],
							[
								28762,
								28769
							],
							[
								29153,
								29159
							],
							[
								29420,
								29424
							],
							[
								29529,
								29552
							],
							[
								29612,
								29640
							],
							[
								29728,
								29735
							],
							[
								29898,
								29921
							],
							[
								30123,
								30139
							],
							[
								30180,
								30188
							],
							[
								30250,
								30258
							],
							[
								30475,
								30486
							],
							[
								30596,
								30614
							],
							[
								30725,
								30736
							],
							[
								30781,
								30798
							],
							[
								30907,
								30914
							],
							[
								30965,
								30986
							],
							[
								31084,
								31103
							],
							[
								31167,
								31188
							],
							[
								31254,
								31276
							],
							[
								31344,
								31362
							],
							[
								31727,
								31735
							],
							[
								31796,
								31804
							],
							[
								32075,
								32092
							],
							[
								32195,
								32205
							],
							[
								32315,
								32348
							],
							[
								32381,
								32399
							],
							[
								32479,
								32500
							],
							[
								32526,
								32537
							],
							[
								32652,
								32664
							],
							[
								32750,
								32779
							],
							[
								32807,
								32819
							],
							[
								32971,
								33001
							],
							[
								33034,
								33052
							],
							[
								33091,
								33112
							],
							[
								33133,
								33144
							],
							[
								33204,
								33229
							],
							[
								33359,
								33380
							],
							[
								33428,
								33437
							],
							[
								36493,
								36505
							],
							[
								36574,
								36613
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"sheets: () =>",
							"parts: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AQAAAAAAAAAAAAAAkgkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgc2hlZXRzOiAoKSA9PgogIHBhcnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBwYWNrYWdlcygpCiAgZGV2aWNlc2V0cygpCiAgZSA9PgogIHN5bWJvbHMoKQogIGUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CihvLCBwLCByKSA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KICAuZ2V0Q29sb3IgPSBlbGVtZW50ID0+CiAgLmlzVmlzaWJsZSA9IGVsZW1lbnQgPT4KICAuc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKdmFsdWUgPT4KICBuID0+CigpID0+CiAgZSA9PgplID0+CmUgPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKICBlbGVtID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKKG8sIHAsIHYpID0+CiAgZ2V0Qm91bmRzKHByZWQsIG9wdHMgPSB7fSkKICBwcmVkID0gZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBiID0+CiAgciA9PgogIGUgPT4KICBuID0+CiAgZ2V0IGJvdW5kcygpCiAgdHJhbnNmb3JtYXRpb24oKQogIGdldCBnZW9tZXRyeSgpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHAgPT4KICBwcm9wID0+CmsgPT4gdiA9PgogIHByb3AgPT4KICBwcm9wID0+CiAgcHJvcCA9PgooKSA9PgogIGcgPT4KICBwb3NpdGlvbihvZmZzZXQgPSBudWxsKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwcm9wID0+CiAgc3RhdGljIGlzUmVsYXRpb24obmFtZSkKICB0ID0gKG8sIHAsIHYpID0+CiAgciA9IGUgPT4KICBzY29wZTIoKQogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQpFYWdsZUVsZW1lbnQKICBtYWtlRWFnbGVFbGVtZW50ID0gKG93bmVyLCByZWYsIHJhdykgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					11,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								15286,
								15299
							],
							[
								15520,
								15532
							],
							[
								15665,
								15681
							],
							[
								16008,
								16018
							],
							[
								16330,
								16342
							],
							[
								16391,
								16395
							],
							[
								16461,
								16470
							],
							[
								16519,
								16523
							],
							[
								16656,
								16662
							],
							[
								16738,
								16743
							],
							[
								16997,
								17003
							],
							[
								17120,
								17138
							],
							[
								17157,
								17183
							],
							[
								17391,
								17397
							],
							[
								17587,
								17594
							],
							[
								17684,
								17690
							],
							[
								17880,
								17887
							],
							[
								18059,
								18065
							],
							[
								18120,
								18125
							],
							[
								18224,
								18230
							],
							[
								18285,
								18290
							],
							[
								18345,
								18351
							],
							[
								18427,
								18432
							],
							[
								18547,
								18553
							],
							[
								18608,
								18613
							],
							[
								18683,
								18705
							],
							[
								18802,
								18825
							],
							[
								18924,
								18946
							],
							[
								19072,
								19089
							],
							[
								19122,
								19130
							],
							[
								19329,
								19351
							],
							[
								19759,
								19768
							],
							[
								19817,
								19821
							],
							[
								20227,
								20233
							],
							[
								20348,
								20352
							],
							[
								20485,
								20490
							],
							[
								20560,
								20565
							],
							[
								20700,
								20714
							],
							[
								20779,
								20800
							],
							[
								20921,
								20941
							],
							[
								20986,
								21016
							],
							[
								21233,
								21240
							],
							[
								21345,
								21356
							],
							[
								21552,
								21570
							],
							[
								21655,
								21675
							],
							[
								21725,
								21729
							],
							[
								21772,
								21782
							],
							[
								21973,
								21989
							],
							[
								22024,
								22034
							],
							[
								22376,
								22397
							],
							[
								22576,
								22589
							],
							[
								23135,
								23161
							],
							[
								23258,
								23269
							],
							[
								23689,
								23693
							],
							[
								25031,
								25035
							],
							[
								25471,
								25475
							],
							[
								25710,
								25714
							],
							[
								25869,
								25873
							],
							[
								25902,
								25906
							],
							[
								26100,
								26104
							],
							[
								26781,
								26785
							],
							[
								27076,
								27088
							],
							[
								27127,
								27143
							],
							[
								27506,
								27520
							],
							[
								27664,
								27692
							],
							[
								27919,
								27923
							],
							[
								28014,
								28021
							],
							[
								28084,
								28094
							],
							[
								28323,
								28330
							],
							[
								28575,
								28582
							],
							[
								28762,
								28769
							],
							[
								29153,
								29159
							],
							[
								29420,
								29424
							],
							[
								29529,
								29552
							],
							[
								29612,
								29640
							],
							[
								29728,
								29735
							],
							[
								29898,
								29921
							],
							[
								30123,
								30139
							],
							[
								30180,
								30188
							],
							[
								30250,
								30258
							],
							[
								30475,
								30486
							],
							[
								30596,
								30614
							],
							[
								30725,
								30736
							],
							[
								30781,
								30798
							],
							[
								30907,
								30914
							],
							[
								30965,
								30986
							],
							[
								31084,
								31103
							],
							[
								31167,
								31188
							],
							[
								31254,
								31276
							],
							[
								31344,
								31362
							],
							[
								31727,
								31735
							],
							[
								31796,
								31804
							],
							[
								32075,
								32092
							],
							[
								32195,
								32205
							],
							[
								32315,
								32348
							],
							[
								32381,
								32399
							],
							[
								32479,
								32500
							],
							[
								32526,
								32537
							],
							[
								32652,
								32664
							],
							[
								32750,
								32779
							],
							[
								32807,
								32819
							],
							[
								32971,
								33001
							],
							[
								33034,
								33052
							],
							[
								33091,
								33112
							],
							[
								33133,
								33144
							],
							[
								33204,
								33229
							],
							[
								33359,
								33380
							],
							[
								33428,
								33437
							],
							[
								36493,
								36505
							],
							[
								36574,
								36613
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"sheets: () =>",
							"parts: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AwAAAAAAAAAAAAAAkgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIJAAAgIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGRlY29kZUhUTUxFbnRpdGllcyA9IHMgPT4KKG1hdGNoLCBlbnRpdHkpID0+ClRMaXN0ID0gKGNoaWxkLCBlbGVtKSA9PgogIHJvdW5kID0gbiA9PgogIGdldCh0YXJnZXQsIHByb3ApCkVhZ2xlRWxlbWVudAogIHN0YXRpYyBnZXQob3duZXIsIHJlZiwgcmF3KQogIHN0YXRpYyBjcmVhdGUodGFnTmFtZSwgYXR0cmlidXRlcyA9IHt9LCBjaGlsZHJlbiA9IFtdKQogIGNvbnN0cnVjdG9yKG93bmVyLCByZWYsIHJhdykKRWFnbGVOb2RlCiAgZ2V0KCkKICBnYXRlczogKCkgPT4KICBlID0+CiAgZGV2aWNlczogKCkgPT4KICBlID0+CiAgbmFtZTogKCkgPT4KICBlbGVtZW50OiAoKSA9PgogIHBhZDogKCkgPT4KICBoYW5kbGVyID0gdiA9PgooKSA9PgogIGdldERpYW1ldGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CnYgPT4KICBuYW1lID0+CnYgPT4KICBnZXQgY29sb3IoKQogIGhmbiA9IHZhbHVlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGdldCBsYXllcigpCiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgooKSA9PgooKSA9PgooKSA9PgogIGUgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBzaWduYWxzOiAoKSA9PgogIHBsYWluOiAoKSA9PgogIGVsZW1lbnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBzaGVldHM6ICgpID0+CiAgcGFydHM6ICgpID0+CiAgbGlicmFyaWVzOiAoKSA9PgogIHBhY2thZ2VzKCkKICBkZXZpY2VzZXRzKCkKICBlID0+CiAgc3ltYm9scygpCiAgZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKG8sIHAsIHIpID0+CigpID0+CiAgY3JlZiA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgogIC5nZXRDb2xvciA9IGVsZW1lbnQgPT4KICAuaXNWaXNpYmxlID0gZWxlbWVudCA9PgogIC5zZXRWaXNpYmxlID0gdmFsdWUgPT4KICAuc3Vic2NyaWJlID0gZiA9PgogIHZhbHVlID0+CiAgLmdldENvbG9yID0gZnVuY3Rpb24oKQp2YWx1ZSA9PgogIG4gPT4KKCkgPT4KICBlID0+CmUgPT4KZSA9PgogIGdldCByZXBlYXRlcigpCihwdXNoLCBzdG9wKSA9PgooeyB2YWx1ZSwgZG9uZSB9KSA9PgogIC5wdXNoRXZlbnQgPSBmdW5jdGlvbiguLi5hcmdzKQogIGVsZW0gPT4KICBldmVudChuYW1lKQogIHN1YnNjcmliZShoYW5kbGVyKQogIHVuc3Vic2NyaWJlKGhhbmRsZXIpCiAgaCA9PgogIGdldCB0ZXh0KCkKICBnZXQgYXR0cmlidXRlcygpCiAgZ2V0TGF5ZXIoKQogIGxvb2t1cCh4cGF0aCwgY3JlYXRlKQoobywgcCwgdikgPT4KICBnZXRCb3VuZHMocHJlZCwgb3B0cyA9IHt9KQogIHByZWQgPSBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGIgPT4KICByID0+CiAgZSA9PgogIG4gPT4KICBnZXQgYm91bmRzKCkKICB0cmFuc2Zvcm1hdGlvbigpCiAgZ2V0IGdlb21ldHJ5KCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcCA9PgogIHByb3AgPT4KayA9PiB2ID0+CiAgcHJvcCA9PgogIHByb3AgPT4KICBwcm9wID0+CigpID0+CiAgZyA9PgogIHBvc2l0aW9uKG9mZnNldCA9IG51bGwpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHByb3AgPT4KICBzdGF0aWMgaXNSZWxhdGlvbihuYW1lKQogIHQgPSAobywgcCwgdikgPT4KICByID0gZSA9PgogIHNjb3BlMigpCiAgZ2V0IGNoYWluKCkKICBnZXRQYXJlbnQodGFnTmFtZSkKICBnZXQgc2hlZXQoKQogIGdldCBzaGVldE51bWJlcigpCiAgbmFtZXMoKQooYWNjLCBlbnRyeSkgPT4KICBzdGF0aWMga2V5cyhlbnRpdHkpCiAgc3RhdGljIHZhbHVlcyhlbnRpdHkpCiAgc3RhdGljIGVudHJpZXMoZW50aXR5KQogIHN0YXRpYyB0b09iamVjdChlKQogIGNoaWxkID0+CiAgY2hpbGQgPT4KICBzdGF0aWMgdG9BcnJheShlKQogIHRvU3RyaW5nKCkKKmdldEFsbChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgoociwgdiwgcCwgbykgPT4KKCkgPT4KKHYsIHAsIG8pID0+CiAgZ2V0KHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CiAgZmluZChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgoociwgdiwgcCwgbykgPT4KKCkgPT4KICBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpCiAgcmVtb3ZlQXR0cmlidXRlKG5hbWUpCiAgZ2V0IHBvcygpCkVhZ2xlRWxlbWVudAogIG1ha2VFYWdsZUVsZW1lbnQgPSAob3duZXIsIHJlZiwgcmF3KSA9PgAAAAAAAAAAkgkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								15286,
								15299
							],
							[
								15520,
								15532
							],
							[
								15665,
								15681
							],
							[
								16008,
								16018
							],
							[
								16330,
								16342
							],
							[
								16391,
								16395
							],
							[
								16461,
								16470
							],
							[
								16519,
								16523
							],
							[
								16656,
								16662
							],
							[
								16738,
								16743
							],
							[
								16997,
								17003
							],
							[
								17120,
								17138
							],
							[
								17157,
								17183
							],
							[
								17391,
								17397
							],
							[
								17587,
								17594
							],
							[
								17684,
								17690
							],
							[
								17880,
								17887
							],
							[
								18059,
								18065
							],
							[
								18120,
								18125
							],
							[
								18224,
								18230
							],
							[
								18285,
								18290
							],
							[
								18345,
								18351
							],
							[
								18427,
								18432
							],
							[
								18547,
								18553
							],
							[
								18608,
								18613
							],
							[
								18683,
								18705
							],
							[
								18802,
								18825
							],
							[
								18924,
								18946
							],
							[
								19072,
								19089
							],
							[
								19122,
								19130
							],
							[
								19329,
								19351
							],
							[
								19759,
								19768
							],
							[
								19817,
								19821
							],
							[
								20227,
								20233
							],
							[
								20348,
								20352
							],
							[
								20485,
								20490
							],
							[
								20560,
								20565
							],
							[
								20700,
								20714
							],
							[
								20779,
								20800
							],
							[
								20921,
								20941
							],
							[
								20986,
								21016
							],
							[
								21233,
								21240
							],
							[
								21345,
								21356
							],
							[
								21552,
								21570
							],
							[
								21655,
								21675
							],
							[
								21725,
								21729
							],
							[
								21772,
								21782
							],
							[
								21973,
								21989
							],
							[
								22024,
								22034
							],
							[
								22376,
								22397
							],
							[
								22576,
								22589
							],
							[
								23135,
								23161
							],
							[
								23258,
								23269
							],
							[
								23689,
								23693
							],
							[
								25031,
								25035
							],
							[
								25471,
								25475
							],
							[
								25710,
								25714
							],
							[
								25869,
								25873
							],
							[
								25902,
								25906
							],
							[
								26100,
								26104
							],
							[
								26781,
								26785
							],
							[
								27076,
								27088
							],
							[
								27127,
								27143
							],
							[
								27506,
								27520
							],
							[
								27664,
								27692
							],
							[
								27919,
								27923
							],
							[
								28014,
								28021
							],
							[
								28084,
								28094
							],
							[
								28323,
								28330
							],
							[
								28575,
								28582
							],
							[
								28762,
								28769
							],
							[
								29153,
								29159
							],
							[
								29420,
								29424
							],
							[
								29529,
								29552
							],
							[
								29612,
								29640
							],
							[
								29728,
								29735
							],
							[
								29898,
								29921
							],
							[
								30123,
								30139
							],
							[
								30180,
								30188
							],
							[
								30250,
								30258
							],
							[
								30475,
								30486
							],
							[
								30596,
								30614
							],
							[
								30725,
								30736
							],
							[
								30781,
								30798
							],
							[
								30907,
								30914
							],
							[
								30965,
								30986
							],
							[
								31084,
								31103
							],
							[
								31167,
								31188
							],
							[
								31254,
								31276
							],
							[
								31344,
								31362
							],
							[
								31727,
								31735
							],
							[
								31796,
								31804
							],
							[
								32075,
								32092
							],
							[
								32195,
								32205
							],
							[
								32315,
								32348
							],
							[
								32381,
								32399
							],
							[
								32479,
								32500
							],
							[
								32526,
								32537
							],
							[
								32652,
								32664
							],
							[
								32750,
								32779
							],
							[
								32807,
								32819
							],
							[
								32971,
								33001
							],
							[
								33034,
								33052
							],
							[
								33091,
								33112
							],
							[
								33133,
								33144
							],
							[
								33204,
								33229
							],
							[
								33359,
								33380
							],
							[
								33428,
								33437
							],
							[
								36493,
								36505
							],
							[
								36574,
								36613
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"sheets: () =>",
							"parts: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgc2hlZXRzOiAoKSA9PgogIHBhcnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBwYWNrYWdlcygpCiAgZGV2aWNlc2V0cygpCiAgZSA9PgogIHN5bWJvbHMoKQogIGUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CihvLCBwLCByKSA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KICAuZ2V0Q29sb3IgPSBlbGVtZW50ID0+CiAgLmlzVmlzaWJsZSA9IGVsZW1lbnQgPT4KICAuc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKdmFsdWUgPT4KICBuID0+CigpID0+CiAgZSA9PgplID0+CmUgPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKICBlbGVtID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKKG8sIHAsIHYpID0+CiAgZ2V0Qm91bmRzKHByZWQsIG9wdHMgPSB7fSkKICBwcmVkID0gZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBiID0+CiAgciA9PgogIGUgPT4KICBuID0+CiAgZ2V0IGJvdW5kcygpCiAgdHJhbnNmb3JtYXRpb24oKQogIGdldCBnZW9tZXRyeSgpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHAgPT4KICBwcm9wID0+CmsgPT4gdiA9PgogIHByb3AgPT4KICBwcm9wID0+CiAgcHJvcCA9PgooKSA9PgogIGcgPT4KICBwb3NpdGlvbihvZmZzZXQgPSBudWxsKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwcm9wID0+CiAgc3RhdGljIGlzUmVsYXRpb24obmFtZSkKICB0ID0gKG8sIHAsIHYpID0+CiAgciA9IGUgPT4KICBzY29wZTIoKQogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQpFYWdsZUVsZW1lbnQKICBtYWtlRWFnbGVFbGVtZW50ID0gKG93bmVyLCByZWYsIHJhdykgPT4AAAAAAAAAAJIJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								16012,
								16022
							],
							[
								16334,
								16346
							],
							[
								16395,
								16399
							],
							[
								16465,
								16474
							],
							[
								16523,
								16527
							],
							[
								16660,
								16666
							],
							[
								16742,
								16747
							],
							[
								17001,
								17007
							],
							[
								17124,
								17142
							],
							[
								17161,
								17187
							],
							[
								17395,
								17401
							],
							[
								17591,
								17598
							],
							[
								17688,
								17694
							],
							[
								17884,
								17891
							],
							[
								18063,
								18069
							],
							[
								18124,
								18129
							],
							[
								18228,
								18234
							],
							[
								18289,
								18294
							],
							[
								18349,
								18355
							],
							[
								18431,
								18436
							],
							[
								18551,
								18557
							],
							[
								18612,
								18617
							],
							[
								18687,
								18709
							],
							[
								18806,
								18829
							],
							[
								18928,
								18950
							],
							[
								19076,
								19093
							],
							[
								19126,
								19134
							],
							[
								19333,
								19355
							],
							[
								19763,
								19772
							],
							[
								19821,
								19825
							],
							[
								20231,
								20237
							],
							[
								20352,
								20356
							],
							[
								20489,
								20494
							],
							[
								20564,
								20569
							],
							[
								20704,
								20718
							],
							[
								20783,
								20804
							],
							[
								20925,
								20945
							],
							[
								20990,
								21020
							],
							[
								21237,
								21244
							],
							[
								21349,
								21360
							],
							[
								21556,
								21574
							],
							[
								21659,
								21679
							],
							[
								21729,
								21733
							],
							[
								21776,
								21786
							],
							[
								21977,
								21993
							],
							[
								22028,
								22038
							],
							[
								22380,
								22401
							],
							[
								22580,
								22593
							],
							[
								23139,
								23165
							],
							[
								23262,
								23273
							],
							[
								23693,
								23697
							],
							[
								25035,
								25039
							],
							[
								25475,
								25479
							],
							[
								25714,
								25718
							],
							[
								25873,
								25877
							],
							[
								25906,
								25910
							],
							[
								26104,
								26108
							],
							[
								26785,
								26789
							],
							[
								27080,
								27092
							],
							[
								27131,
								27147
							],
							[
								27510,
								27524
							],
							[
								27668,
								27696
							],
							[
								27923,
								27927
							],
							[
								28018,
								28025
							],
							[
								28088,
								28098
							],
							[
								28327,
								28334
							],
							[
								28579,
								28586
							],
							[
								28766,
								28773
							],
							[
								29157,
								29163
							],
							[
								29424,
								29428
							],
							[
								29533,
								29556
							],
							[
								29616,
								29644
							],
							[
								29732,
								29739
							],
							[
								29902,
								29925
							],
							[
								30127,
								30143
							],
							[
								30184,
								30192
							],
							[
								30254,
								30262
							],
							[
								30479,
								30490
							],
							[
								30600,
								30618
							],
							[
								30729,
								30740
							],
							[
								30785,
								30802
							],
							[
								30911,
								30918
							],
							[
								30969,
								30990
							],
							[
								31088,
								31107
							],
							[
								31171,
								31192
							],
							[
								31258,
								31280
							],
							[
								31348,
								31366
							],
							[
								31731,
								31739
							],
							[
								31800,
								31808
							],
							[
								32079,
								32096
							],
							[
								32199,
								32209
							],
							[
								32319,
								32352
							],
							[
								32385,
								32403
							],
							[
								32483,
								32504
							],
							[
								32530,
								32541
							],
							[
								32656,
								32668
							],
							[
								32754,
								32783
							],
							[
								32811,
								32823
							],
							[
								32975,
								33005
							],
							[
								33038,
								33056
							],
							[
								33095,
								33116
							],
							[
								33137,
								33148
							],
							[
								33208,
								33233
							],
							[
								33363,
								33384
							],
							[
								33432,
								33441
							],
							[
								36497,
								36509
							],
							[
								36578,
								36617
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACSCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgc2hlZXRzOiAoKSA9PgogIHBhcnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBwYWNrYWdlcygpCiAgZGV2aWNlc2V0cygpCiAgZSA9PgogIHN5bWJvbHMoKQogIGUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CihvLCBwLCByKSA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KICAuZ2V0Q29sb3IgPSBlbGVtZW50ID0+CiAgLmlzVmlzaWJsZSA9IGVsZW1lbnQgPT4KICAuc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKdmFsdWUgPT4KICBuID0+CigpID0+CiAgZSA9PgplID0+CmUgPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKICBlbGVtID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKKG8sIHAsIHYpID0+CiAgZ2V0Qm91bmRzKHByZWQsIG9wdHMgPSB7fSkKICBwcmVkID0gZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBiID0+CiAgciA9PgogIGUgPT4KICBuID0+CiAgZ2V0IGJvdW5kcygpCiAgdHJhbnNmb3JtYXRpb24oKQogIGdldCBnZW9tZXRyeSgpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHAgPT4KICBwcm9wID0+CmsgPT4gdiA9PgogIHByb3AgPT4KICBwcm9wID0+CiAgcHJvcCA9PgooKSA9PgogIGcgPT4KICBwb3NpdGlvbihvZmZzZXQgPSBudWxsKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwcm9wID0+CiAgc3RhdGljIGlzUmVsYXRpb24obmFtZSkKICB0ID0gKG8sIHAsIHYpID0+CiAgciA9IGUgPT4KICBzY29wZTIoKQogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQpFYWdsZUVsZW1lbnQKICBtYWtlRWFnbGVFbGVtZW50ID0gKG93bmVyLCByZWYsIHJhdykgPT4AAAAAAAAAAGAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgcGFja2FnZXMoKQogIGRldmljZXNldHMoKQogIGUgPT4KICBzeW1ib2xzKCkKICBlID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgoobywgcCwgcikgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CiAgY3JlZiA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CiAgLmdldENvbG9yID0gZWxlbWVudCA9PgogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbigpCnZhbHVlID0+CiAgbiA9PgooKSA9PgogIGUgPT4KZSA9PgplID0+CiAgZ2V0IHJlcGVhdGVyKCkKKHB1c2gsIHN0b3ApID0+Cih7IHZhbHVlLCBkb25lIH0pID0+CiAgLnB1c2hFdmVudCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZWxlbSA9PgogIGV2ZW50KG5hbWUpCiAgc3Vic2NyaWJlKGhhbmRsZXIpCiAgdW5zdWJzY3JpYmUoaGFuZGxlcikKICBoID0+CiAgZ2V0IHRleHQoKQogIGdldCBhdHRyaWJ1dGVzKCkKICBnZXRMYXllcigpCiAgbG9va3VwKHhwYXRoLCBjcmVhdGUpCihvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwID0+CiAgcHJvcCA9PgprID0+IHYgPT4KICBwcm9wID0+CiAgcHJvcCA9PgogIHByb3AgPT4KKCkgPT4KICBnID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgc2NvcGUyKCkKICBnZXQgY2hhaW4oKQogIGdldFBhcmVudCh0YWdOYW1lKQogIGdldCBzaGVldCgpCiAgZ2V0IHNoZWV0TnVtYmVyKCkKICBuYW1lcygpCihhY2MsIGVudHJ5KSA9PgogIHN0YXRpYyBrZXlzKGVudGl0eSkKICBzdGF0aWMgdmFsdWVzKGVudGl0eSkKICBzdGF0aWMgZW50cmllcyhlbnRpdHkpCiAgc3RhdGljIHRvT2JqZWN0KGUpCiAgY2hpbGQgPT4KICBjaGlsZCA9PgogIHN0YXRpYyB0b0FycmF5KGUpCiAgdG9TdHJpbmcoKQoqZ2V0QWxsKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgoodiwgcCwgbykgPT4KICBnZXQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KICBmaW5kKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgogIHNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkKICByZW1vdmVBdHRyaWJ1dGUobmFtZSkKICBnZXQgcG9zKCkKRWFnbGVFbGVtZW50CiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAABgCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgcGFja2FnZXMoKQogIGRldmljZXNldHMoKQogIGUgPT4KICBzeW1ib2xzKCkKICBlID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgoobywgcCwgcikgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CiAgY3JlZiA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CiAgLmdldENvbG9yID0gZWxlbWVudCA9PgogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbigpCnZhbHVlID0+CiAgbiA9PgooKSA9PgogIGUgPT4KZSA9PgplID0+CiAgZ2V0IHJlcGVhdGVyKCkKKHB1c2gsIHN0b3ApID0+Cih7IHZhbHVlLCBkb25lIH0pID0+CiAgLnB1c2hFdmVudCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZWxlbSA9PgogIGV2ZW50KG5hbWUpCiAgc3Vic2NyaWJlKGhhbmRsZXIpCiAgdW5zdWJzY3JpYmUoaGFuZGxlcikKICBoID0+CiAgZ2V0IHRleHQoKQogIGdldCBhdHRyaWJ1dGVzKCkKICBnZXRMYXllcigpCiAgbG9va3VwKHhwYXRoLCBjcmVhdGUpCihvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwID0+CiAgcHJvcCA9PgprID0+IHYgPT4KICBwcm9wID0+CiAgcHJvcCA9PgogIHByb3AgPT4KKCkgPT4KICBnID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgc2NvcGUyKCkKICBnZXQgY2hhaW4oKQogIGdldFBhcmVudCh0YWdOYW1lKQogIGdldCBzaGVldCgpCiAgZ2V0IHNoZWV0TnVtYmVyKCkKICBuYW1lcygpCihhY2MsIGVudHJ5KSA9PgogIHN0YXRpYyBrZXlzKGVudGl0eSkKICBzdGF0aWMgdmFsdWVzKGVudGl0eSkKICBzdGF0aWMgZW50cmllcyhlbnRpdHkpCiAgc3RhdGljIHRvT2JqZWN0KGUpCiAgY2hpbGQgPT4KICBjaGlsZCA9PgogIHN0YXRpYyB0b0FycmF5KGUpCiAgdG9TdHJpbmcoKQoqZ2V0QWxsKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgoodiwgcCwgbykgPT4KICBnZXQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KICBmaW5kKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgogIHNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkKICByZW1vdmVBdHRyaWJ1dGUobmFtZSkKICBnZXQgcG9zKCkKRWFnbGVFbGVtZW50CiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					15,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								16012,
								16022
							],
							[
								16334,
								16346
							],
							[
								16395,
								16399
							],
							[
								16465,
								16474
							],
							[
								16523,
								16527
							],
							[
								16660,
								16666
							],
							[
								16742,
								16747
							],
							[
								17001,
								17007
							],
							[
								17124,
								17142
							],
							[
								17161,
								17187
							],
							[
								17395,
								17401
							],
							[
								17591,
								17598
							],
							[
								17688,
								17694
							],
							[
								17884,
								17891
							],
							[
								18063,
								18069
							],
							[
								18124,
								18129
							],
							[
								18228,
								18234
							],
							[
								18289,
								18294
							],
							[
								18349,
								18355
							],
							[
								18431,
								18436
							],
							[
								18551,
								18557
							],
							[
								18612,
								18617
							],
							[
								18687,
								18709
							],
							[
								18806,
								18829
							],
							[
								18928,
								18950
							],
							[
								19076,
								19093
							],
							[
								19126,
								19134
							],
							[
								19333,
								19355
							],
							[
								19763,
								19772
							],
							[
								19821,
								19825
							],
							[
								20231,
								20237
							],
							[
								20352,
								20356
							],
							[
								20489,
								20494
							],
							[
								20564,
								20569
							],
							[
								20704,
								20718
							],
							[
								20783,
								20804
							],
							[
								20925,
								20945
							],
							[
								20990,
								21020
							],
							[
								21237,
								21244
							],
							[
								21349,
								21360
							],
							[
								21556,
								21574
							],
							[
								21659,
								21679
							],
							[
								21729,
								21733
							],
							[
								21776,
								21786
							],
							[
								21977,
								21993
							],
							[
								22028,
								22038
							],
							[
								22380,
								22401
							],
							[
								22580,
								22593
							],
							[
								23139,
								23165
							],
							[
								23262,
								23273
							],
							[
								23693,
								23697
							],
							[
								25035,
								25039
							],
							[
								25475,
								25479
							],
							[
								25714,
								25718
							],
							[
								25873,
								25877
							],
							[
								25906,
								25910
							],
							[
								26104,
								26108
							],
							[
								26785,
								26789
							],
							[
								27080,
								27092
							],
							[
								27131,
								27147
							],
							[
								27510,
								27524
							],
							[
								27668,
								27696
							],
							[
								27923,
								27927
							],
							[
								28018,
								28025
							],
							[
								28088,
								28098
							],
							[
								28327,
								28334
							],
							[
								28579,
								28586
							],
							[
								28766,
								28773
							],
							[
								29157,
								29163
							],
							[
								29424,
								29428
							],
							[
								29533,
								29556
							],
							[
								29616,
								29644
							],
							[
								29732,
								29739
							],
							[
								29902,
								29925
							],
							[
								30127,
								30143
							],
							[
								30184,
								30192
							],
							[
								30254,
								30262
							],
							[
								30479,
								30490
							],
							[
								30600,
								30618
							],
							[
								30729,
								30740
							],
							[
								30785,
								30802
							],
							[
								30911,
								30918
							],
							[
								30969,
								30990
							],
							[
								31088,
								31107
							],
							[
								31171,
								31192
							],
							[
								31258,
								31280
							],
							[
								31348,
								31366
							],
							[
								31731,
								31739
							],
							[
								31800,
								31808
							],
							[
								32079,
								32096
							],
							[
								32199,
								32209
							],
							[
								32319,
								32352
							],
							[
								32385,
								32403
							],
							[
								32483,
								32504
							],
							[
								32530,
								32541
							],
							[
								32656,
								32668
							],
							[
								32754,
								32783
							],
							[
								32811,
								32823
							],
							[
								32975,
								33005
							],
							[
								33038,
								33056
							],
							[
								33095,
								33116
							],
							[
								33137,
								33148
							],
							[
								33208,
								33233
							],
							[
								33363,
								33384
							],
							[
								33432,
								33441
							],
							[
								36497,
								36509
							],
							[
								36578,
								36617
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AwAAAAAAAAAAAAAAYAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAJAAAgIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIGRlY29kZUhUTUxFbnRpdGllcyA9IHMgPT4KKG1hdGNoLCBlbnRpdHkpID0+ClRMaXN0ID0gKGNoaWxkLCBlbGVtKSA9PgogIHJvdW5kID0gbiA9PgogIGdldCh0YXJnZXQsIHByb3ApCkVhZ2xlRWxlbWVudAogIHN0YXRpYyBnZXQob3duZXIsIHJlZiwgcmF3KQogIHN0YXRpYyBjcmVhdGUodGFnTmFtZSwgYXR0cmlidXRlcyA9IHt9LCBjaGlsZHJlbiA9IFtdKQogIGNvbnN0cnVjdG9yKG93bmVyLCByZWYsIHJhdykKRWFnbGVOb2RlCiAgZ2V0KCkKICBnYXRlczogKCkgPT4KICBlID0+CiAgZGV2aWNlczogKCkgPT4KICBlID0+CiAgbmFtZTogKCkgPT4KICBlbGVtZW50OiAoKSA9PgogIHBhZDogKCkgPT4KICBoYW5kbGVyID0gdiA9PgooKSA9PgogIGdldERpYW1ldGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CnYgPT4KICBuYW1lID0+CnYgPT4KICBnZXQgY29sb3IoKQogIGhmbiA9IHZhbHVlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBlID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGdldCBsYXllcigpCiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgooKSA9PgooKSA9PgooKSA9PgogIGUgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBzaWduYWxzOiAoKSA9PgogIHBsYWluOiAoKSA9PgogIGVsZW1lbnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBwYWNrYWdlcygpCiAgZGV2aWNlc2V0cygpCiAgZSA9PgogIHN5bWJvbHMoKQogIGUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CihvLCBwLCByKSA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KICAuZ2V0Q29sb3IgPSBlbGVtZW50ID0+CiAgLmlzVmlzaWJsZSA9IGVsZW1lbnQgPT4KICAuc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKdmFsdWUgPT4KICBuID0+CigpID0+CiAgZSA9PgplID0+CmUgPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKICBlbGVtID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKKG8sIHAsIHYpID0+CiAgZ2V0Qm91bmRzKHByZWQsIG9wdHMgPSB7fSkKICBwcmVkID0gZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBiID0+CiAgciA9PgogIGUgPT4KICBuID0+CiAgZ2V0IGJvdW5kcygpCiAgdHJhbnNmb3JtYXRpb24oKQogIGdldCBnZW9tZXRyeSgpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHAgPT4KICBwcm9wID0+CmsgPT4gdiA9PgogIHByb3AgPT4KICBwcm9wID0+CiAgcHJvcCA9PgooKSA9PgogIGcgPT4KICBwb3NpdGlvbihvZmZzZXQgPSBudWxsKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwcm9wID0+CiAgc3RhdGljIGlzUmVsYXRpb24obmFtZSkKICB0ID0gKG8sIHAsIHYpID0+CiAgciA9IGUgPT4KICBzY29wZTIoKQogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQpFYWdsZUVsZW1lbnQKICBtYWtlRWFnbGVFbGVtZW50ID0gKG93bmVyLCByZWYsIHJhdykgPT4AAAAAAAAAAGAJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								16012,
								16022
							],
							[
								16334,
								16346
							],
							[
								16395,
								16399
							],
							[
								16465,
								16474
							],
							[
								16523,
								16527
							],
							[
								16660,
								16666
							],
							[
								16742,
								16747
							],
							[
								17001,
								17007
							],
							[
								17124,
								17142
							],
							[
								17161,
								17187
							],
							[
								17395,
								17401
							],
							[
								17591,
								17598
							],
							[
								17688,
								17694
							],
							[
								17884,
								17891
							],
							[
								18063,
								18069
							],
							[
								18124,
								18129
							],
							[
								18228,
								18234
							],
							[
								18289,
								18294
							],
							[
								18349,
								18355
							],
							[
								18431,
								18436
							],
							[
								18551,
								18557
							],
							[
								18612,
								18617
							],
							[
								18687,
								18709
							],
							[
								18806,
								18829
							],
							[
								18928,
								18950
							],
							[
								19076,
								19093
							],
							[
								19126,
								19134
							],
							[
								19333,
								19355
							],
							[
								19763,
								19772
							],
							[
								19821,
								19825
							],
							[
								20231,
								20237
							],
							[
								20352,
								20356
							],
							[
								20489,
								20494
							],
							[
								20564,
								20569
							],
							[
								20704,
								20718
							],
							[
								20783,
								20804
							],
							[
								20925,
								20945
							],
							[
								20990,
								21020
							],
							[
								21237,
								21244
							],
							[
								21349,
								21360
							],
							[
								21556,
								21574
							],
							[
								21659,
								21679
							],
							[
								21729,
								21733
							],
							[
								21776,
								21786
							],
							[
								21977,
								21993
							],
							[
								22028,
								22038
							],
							[
								22380,
								22401
							],
							[
								22580,
								22593
							],
							[
								23139,
								23165
							],
							[
								23262,
								23273
							],
							[
								23693,
								23697
							],
							[
								25035,
								25039
							],
							[
								25475,
								25479
							],
							[
								25714,
								25718
							],
							[
								25873,
								25877
							],
							[
								25906,
								25910
							],
							[
								26104,
								26108
							],
							[
								26785,
								26789
							],
							[
								27080,
								27092
							],
							[
								27131,
								27147
							],
							[
								27510,
								27524
							],
							[
								27668,
								27696
							],
							[
								27923,
								27927
							],
							[
								28018,
								28025
							],
							[
								28088,
								28098
							],
							[
								28327,
								28334
							],
							[
								28579,
								28586
							],
							[
								28766,
								28773
							],
							[
								29157,
								29163
							],
							[
								29424,
								29428
							],
							[
								29533,
								29556
							],
							[
								29616,
								29644
							],
							[
								29732,
								29739
							],
							[
								29902,
								29925
							],
							[
								30127,
								30143
							],
							[
								30184,
								30192
							],
							[
								30254,
								30262
							],
							[
								30479,
								30490
							],
							[
								30600,
								30618
							],
							[
								30729,
								30740
							],
							[
								30785,
								30802
							],
							[
								30911,
								30918
							],
							[
								30969,
								30990
							],
							[
								31088,
								31107
							],
							[
								31171,
								31192
							],
							[
								31258,
								31280
							],
							[
								31348,
								31366
							],
							[
								31731,
								31739
							],
							[
								31800,
								31808
							],
							[
								32079,
								32096
							],
							[
								32199,
								32209
							],
							[
								32319,
								32352
							],
							[
								32385,
								32403
							],
							[
								32483,
								32504
							],
							[
								32530,
								32541
							],
							[
								32656,
								32668
							],
							[
								32754,
								32783
							],
							[
								32811,
								32823
							],
							[
								32975,
								33005
							],
							[
								33038,
								33056
							],
							[
								33095,
								33116
							],
							[
								33137,
								33148
							],
							[
								33208,
								33233
							],
							[
								33363,
								33384
							],
							[
								33432,
								33441
							],
							[
								36497,
								36509
							],
							[
								36578,
								36617
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgcGFja2FnZXMoKQogIGRldmljZXNldHMoKQogIGUgPT4KICBzeW1ib2xzKCkKICBlID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgoobywgcCwgcikgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CiAgY3JlZiA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CiAgLmdldENvbG9yID0gZWxlbWVudCA9PgogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbigpCnZhbHVlID0+CiAgbiA9PgooKSA9PgogIGUgPT4KZSA9PgplID0+CiAgZ2V0IHJlcGVhdGVyKCkKKHB1c2gsIHN0b3ApID0+Cih7IHZhbHVlLCBkb25lIH0pID0+CiAgLnB1c2hFdmVudCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZWxlbSA9PgogIGV2ZW50KG5hbWUpCiAgc3Vic2NyaWJlKGhhbmRsZXIpCiAgdW5zdWJzY3JpYmUoaGFuZGxlcikKICBoID0+CiAgZ2V0IHRleHQoKQogIGdldCBhdHRyaWJ1dGVzKCkKICBnZXRMYXllcigpCiAgbG9va3VwKHhwYXRoLCBjcmVhdGUpCihvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwID0+CiAgcHJvcCA9PgprID0+IHYgPT4KICBwcm9wID0+CiAgcHJvcCA9PgogIHByb3AgPT4KKCkgPT4KICBnID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgc2NvcGUyKCkKICBnZXQgY2hhaW4oKQogIGdldFBhcmVudCh0YWdOYW1lKQogIGdldCBzaGVldCgpCiAgZ2V0IHNoZWV0TnVtYmVyKCkKICBuYW1lcygpCihhY2MsIGVudHJ5KSA9PgogIHN0YXRpYyBrZXlzKGVudGl0eSkKICBzdGF0aWMgdmFsdWVzKGVudGl0eSkKICBzdGF0aWMgZW50cmllcyhlbnRpdHkpCiAgc3RhdGljIHRvT2JqZWN0KGUpCiAgY2hpbGQgPT4KICBjaGlsZCA9PgogIHN0YXRpYyB0b0FycmF5KGUpCiAgdG9TdHJpbmcoKQoqZ2V0QWxsKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgoodiwgcCwgbykgPT4KICBnZXQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KICBmaW5kKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgogIHNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkKICByZW1vdmVBdHRyaWJ1dGUobmFtZSkKICBnZXQgcG9zKCkKRWFnbGVFbGVtZW50CiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAABgCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/element.js",
						"symkeys":
						[
							[
								819,
								843
							],
							[
								879,
								904
							],
							[
								953,
								975
							],
							[
								1213,
								1237
							],
							[
								1326,
								1338
							],
							[
								1403,
								1420
							],
							[
								1895,
								1907
							],
							[
								2046,
								2073
							],
							[
								3503,
								3557
							],
							[
								3764,
								3792
							],
							[
								4607,
								4616
							],
							[
								4819,
								4824
							],
							[
								5187,
								5199
							],
							[
								5229,
								5233
							],
							[
								5285,
								5299
							],
							[
								5329,
								5333
							],
							[
								5387,
								5398
							],
							[
								5544,
								5558
							],
							[
								5675,
								5685
							],
							[
								6044,
								6058
							],
							[
								6170,
								6175
							],
							[
								6406,
								6424
							],
							[
								6462,
								6476
							],
							[
								6570,
								6584
							],
							[
								6659,
								6664
							],
							[
								6877,
								6885
							],
							[
								6999,
								7007
							],
							[
								7332,
								7337
							],
							[
								7359,
								7366
							],
							[
								7518,
								7523
							],
							[
								8181,
								8192
							],
							[
								8641,
								8655
							],
							[
								9131,
								9142
							],
							[
								9229,
								9240
							],
							[
								9348,
								9359
							],
							[
								9377,
								9381
							],
							[
								9521,
								9532
							],
							[
								9643,
								9654
							],
							[
								9672,
								9676
							],
							[
								10450,
								10461
							],
							[
								10480,
								10484
							],
							[
								10613,
								10624
							],
							[
								10647,
								10651
							],
							[
								10782,
								10793
							],
							[
								10877,
								10888
							],
							[
								11044,
								11055
							],
							[
								11182,
								11193
							],
							[
								11322,
								11333
							],
							[
								12420,
								12426
							],
							[
								12571,
								12577
							],
							[
								12799,
								12805
							],
							[
								12815,
								12819
							],
							[
								12914,
								12920
							],
							[
								13006,
								13012
							],
							[
								13099,
								13105
							],
							[
								13189,
								13195
							],
							[
								13278,
								13284
							],
							[
								13372,
								13378
							],
							[
								13513,
								13519
							],
							[
								13607,
								13613
							],
							[
								13665,
								13671
							],
							[
								13763,
								13769
							],
							[
								14283,
								14297
							],
							[
								14503,
								14515
							],
							[
								14723,
								14738
							],
							[
								14949,
								14965
							],
							[
								15286,
								15299
							],
							[
								15520,
								15532
							],
							[
								15665,
								15681
							],
							[
								16008,
								16018
							],
							[
								16330,
								16342
							],
							[
								16391,
								16395
							],
							[
								16461,
								16470
							],
							[
								16519,
								16523
							],
							[
								16656,
								16662
							],
							[
								16738,
								16743
							],
							[
								16997,
								17003
							],
							[
								17120,
								17138
							],
							[
								17157,
								17183
							],
							[
								17391,
								17397
							],
							[
								17587,
								17594
							],
							[
								17684,
								17690
							],
							[
								17880,
								17887
							],
							[
								18059,
								18065
							],
							[
								18120,
								18125
							],
							[
								18224,
								18230
							],
							[
								18285,
								18290
							],
							[
								18345,
								18351
							],
							[
								18427,
								18432
							],
							[
								18547,
								18553
							],
							[
								18608,
								18613
							],
							[
								18683,
								18705
							],
							[
								18802,
								18825
							],
							[
								18924,
								18946
							],
							[
								19072,
								19089
							],
							[
								19122,
								19130
							],
							[
								19329,
								19351
							],
							[
								19759,
								19768
							],
							[
								19817,
								19821
							],
							[
								20227,
								20233
							],
							[
								20348,
								20352
							],
							[
								20485,
								20490
							],
							[
								20560,
								20565
							],
							[
								20700,
								20714
							],
							[
								20779,
								20800
							],
							[
								20921,
								20941
							],
							[
								20986,
								21016
							],
							[
								21233,
								21240
							],
							[
								21345,
								21356
							],
							[
								21552,
								21570
							],
							[
								21655,
								21675
							],
							[
								21725,
								21729
							],
							[
								21772,
								21782
							],
							[
								21973,
								21989
							],
							[
								22024,
								22034
							],
							[
								22376,
								22397
							],
							[
								22576,
								22589
							],
							[
								23135,
								23161
							],
							[
								23258,
								23269
							],
							[
								23689,
								23693
							],
							[
								25031,
								25035
							],
							[
								25471,
								25475
							],
							[
								25710,
								25714
							],
							[
								25869,
								25873
							],
							[
								25902,
								25906
							],
							[
								26100,
								26104
							],
							[
								26781,
								26785
							],
							[
								27076,
								27088
							],
							[
								27127,
								27143
							],
							[
								27506,
								27520
							],
							[
								27664,
								27692
							],
							[
								27919,
								27923
							],
							[
								28014,
								28021
							],
							[
								28084,
								28094
							],
							[
								28323,
								28330
							],
							[
								28575,
								28582
							],
							[
								28762,
								28769
							],
							[
								29153,
								29159
							],
							[
								29420,
								29424
							],
							[
								29529,
								29552
							],
							[
								29612,
								29640
							],
							[
								29728,
								29735
							],
							[
								29898,
								29921
							],
							[
								30123,
								30139
							],
							[
								30180,
								30188
							],
							[
								30250,
								30258
							],
							[
								30475,
								30486
							],
							[
								30596,
								30614
							],
							[
								30725,
								30736
							],
							[
								30781,
								30798
							],
							[
								30907,
								30914
							],
							[
								30965,
								30986
							],
							[
								31084,
								31103
							],
							[
								31167,
								31188
							],
							[
								31254,
								31276
							],
							[
								31344,
								31362
							],
							[
								31727,
								31735
							],
							[
								31796,
								31804
							],
							[
								32075,
								32092
							],
							[
								32195,
								32205
							],
							[
								32315,
								32348
							],
							[
								32381,
								32399
							],
							[
								32479,
								32500
							],
							[
								32526,
								32537
							],
							[
								32652,
								32664
							],
							[
								32750,
								32779
							],
							[
								32807,
								32819
							],
							[
								32971,
								33001
							],
							[
								33034,
								33052
							],
							[
								33091,
								33112
							],
							[
								33133,
								33144
							],
							[
								33204,
								33229
							],
							[
								33359,
								33380
							],
							[
								33428,
								33437
							],
							[
								36493,
								36505
							],
							[
								36574,
								36613
							]
						],
						"symlist":
						[
							"add = (arr, ...items) =>",
							"decodeHTMLEntities = s =>",
							" (match, entity) =>",
							"TList = (child, elem) =>",
							"round = n =>",
							"get(target, prop)",
							"EagleElement",
							"static get(owner, ref, raw)",
							"static create(tagName, attributes = {}, children = [])",
							"constructor(owner, ref, raw)",
							"EagleNode",
							"get()",
							"gates: () =>",
							"e =>",
							"devices: () =>",
							"e =>",
							"name: () =>",
							"element: () =>",
							"pad: () =>",
							"handler = v =>",
							"() =>",
							"getDiameter = v =>",
							"handler = v =>",
							"handler = v =>",
							"() =>",
							"value =>",
							"value =>",
							" v =>",
							"name =>",
							" v =>",
							"get color()",
							"hfn = value =>",
							"hfn = () =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"e =>",
							"hfn = () =>",
							"hfn = () =>",
							"get layer()",
							"hfn = () =>",
							"hfn = () =>",
							" () =>",
							" () =>",
							" () =>",
							"e =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							"signals: () =>",
							"plain: () =>",
							"elements: () =>",
							"libraries: () =>",
							"sheets: () =>",
							"parts: () =>",
							"libraries: () =>",
							"packages()",
							"devicesets()",
							"e =>",
							"symbols()",
							"e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" (o, p, r) =>",
							" () =>",
							"cref =>",
							" () =>",
							"cref =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							" () =>",
							" e =>",
							".getColor = element =>",
							".isVisible = element =>",
							".setVisible = value =>",
							".subscribe = f =>",
							"value =>",
							".getColor = function()",
							" value =>",
							"n =>",
							" () =>",
							"e =>",
							" e =>",
							" e =>",
							"get repeater()",
							"async (push, stop) =>",
							"({ value, done }) =>",
							".pushEvent = function(...args)",
							"elem =>",
							"event(name)",
							"subscribe(handler)",
							"unsubscribe(handler)",
							"h =>",
							"get text()",
							"get attributes()",
							"getLayer()",
							"lookup(xpath, create)",
							" (o, p, v) =>",
							"getBounds(pred, opts = {})",
							"pred = e =>",
							"e =>",
							"e =>",
							"e =>",
							"e =>",
							"b =>",
							"r =>",
							"e =>",
							"n =>",
							"get bounds()",
							"transformation()",
							"get geometry()",
							"makeGetterSetter = k => v =>",
							"p =>",
							"prop =>",
							" k => v =>",
							"prop =>",
							"prop =>",
							"prop =>",
							" () =>",
							"g =>",
							"position(offset = null)",
							"makeGetterSetter = k => v =>",
							"prop =>",
							"static isRelation(name)",
							"t = (o, p, v) =>",
							"r = e =>",
							"scope2()",
							"get chain()",
							"getParent(tagName)",
							"get sheet()",
							"get sheetNumber()",
							"names()",
							" (acc, entry) =>",
							"static keys(entity)",
							"static values(entity)",
							"static entries(entity)",
							"static toObject(e)",
							"child =>",
							"child =>",
							"static toArray(e)",
							"toString()",
							"*getAll(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"(v, p, o) =>",
							"get(pred, transform = a => a)",
							"(v, p, o) =>",
							"find(pred, transform = a => a)",
							" (v, p, o) =>",
							" (r, v, p, o) =>",
							" () =>",
							"setAttribute(name, value)",
							"removeAttribute(name)",
							"get pos()",
							"EagleElement",
							"makeEagleElement = (owner, ref, raw) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABgCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgcGFja2FnZXMoKQogIGRldmljZXNldHMoKQogIGUgPT4KICBzeW1ib2xzKCkKICBlID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgoobywgcCwgcikgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CiAgY3JlZiA9PgooKSA9PgplID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CiAgLmdldENvbG9yID0gZWxlbWVudCA9PgogIC5pc1Zpc2libGUgPSBlbGVtZW50ID0+CiAgLnNldFZpc2libGUgPSB2YWx1ZSA9PgogIC5zdWJzY3JpYmUgPSBmID0+CiAgdmFsdWUgPT4KICAuZ2V0Q29sb3IgPSBmdW5jdGlvbigpCnZhbHVlID0+CiAgbiA9PgooKSA9PgogIGUgPT4KZSA9PgplID0+CiAgZ2V0IHJlcGVhdGVyKCkKKHB1c2gsIHN0b3ApID0+Cih7IHZhbHVlLCBkb25lIH0pID0+CiAgLnB1c2hFdmVudCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgZWxlbSA9PgogIGV2ZW50KG5hbWUpCiAgc3Vic2NyaWJlKGhhbmRsZXIpCiAgdW5zdWJzY3JpYmUoaGFuZGxlcikKICBoID0+CiAgZ2V0IHRleHQoKQogIGdldCBhdHRyaWJ1dGVzKCkKICBnZXRMYXllcigpCiAgbG9va3VwKHhwYXRoLCBjcmVhdGUpCihvLCBwLCB2KSA9PgogIGdldEJvdW5kcyhwcmVkLCBvcHRzID0ge30pCiAgcHJlZCA9IGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgYiA9PgogIHIgPT4KICBlID0+CiAgbiA9PgogIGdldCBib3VuZHMoKQogIHRyYW5zZm9ybWF0aW9uKCkKICBnZXQgZ2VvbWV0cnkoKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwID0+CiAgcHJvcCA9PgprID0+IHYgPT4KICBwcm9wID0+CiAgcHJvcCA9PgogIHByb3AgPT4KKCkgPT4KICBnID0+CiAgcG9zaXRpb24ob2Zmc2V0ID0gbnVsbCkKICBtYWtlR2V0dGVyU2V0dGVyID0gayA9PiB2ID0+CiAgcHJvcCA9PgogIHN0YXRpYyBpc1JlbGF0aW9uKG5hbWUpCiAgdCA9IChvLCBwLCB2KSA9PgogIHIgPSBlID0+CiAgc2NvcGUyKCkKICBnZXQgY2hhaW4oKQogIGdldFBhcmVudCh0YWdOYW1lKQogIGdldCBzaGVldCgpCiAgZ2V0IHNoZWV0TnVtYmVyKCkKICBuYW1lcygpCihhY2MsIGVudHJ5KSA9PgogIHN0YXRpYyBrZXlzKGVudGl0eSkKICBzdGF0aWMgdmFsdWVzKGVudGl0eSkKICBzdGF0aWMgZW50cmllcyhlbnRpdHkpCiAgc3RhdGljIHRvT2JqZWN0KGUpCiAgY2hpbGQgPT4KICBjaGlsZCA9PgogIHN0YXRpYyB0b0FycmF5KGUpCiAgdG9TdHJpbmcoKQoqZ2V0QWxsKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgoodiwgcCwgbykgPT4KICBnZXQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KICBmaW5kKHByZWQsIHRyYW5zZm9ybSA9IGEgPT4gYSkKKHYsIHAsIG8pID0+CihyLCB2LCBwLCBvKSA9PgooKSA9PgogIHNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkKICByZW1vdmVBdHRyaWJ1dGUobmFtZSkKICBnZXQgcG9zKCkKRWFnbGVFbGVtZW50CiAgbWFrZUVhZ2xlRWxlbWVudCA9IChvd25lciwgcmVmLCByYXcpID0+AAAAAAAAAACSCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACSCQAAICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBkZWNvZGVIVE1MRW50aXRpZXMgPSBzID0+CihtYXRjaCwgZW50aXR5KSA9PgpUTGlzdCA9IChjaGlsZCwgZWxlbSkgPT4KICByb3VuZCA9IG4gPT4KICBnZXQodGFyZ2V0LCBwcm9wKQpFYWdsZUVsZW1lbnQKICBzdGF0aWMgZ2V0KG93bmVyLCByZWYsIHJhdykKICBzdGF0aWMgY3JlYXRlKHRhZ05hbWUsIGF0dHJpYnV0ZXMgPSB7fSwgY2hpbGRyZW4gPSBbXSkKICBjb25zdHJ1Y3Rvcihvd25lciwgcmVmLCByYXcpCkVhZ2xlTm9kZQogIGdldCgpCiAgZ2F0ZXM6ICgpID0+CiAgZSA9PgogIGRldmljZXM6ICgpID0+CiAgZSA9PgogIG5hbWU6ICgpID0+CiAgZWxlbWVudDogKCkgPT4KICBwYWQ6ICgpID0+CiAgaGFuZGxlciA9IHYgPT4KKCkgPT4KICBnZXREaWFtZXRlciA9IHYgPT4KICBoYW5kbGVyID0gdiA9PgogIGhhbmRsZXIgPSB2ID0+CigpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9Pgp2ID0+CiAgbmFtZSA9Pgp2ID0+CiAgZ2V0IGNvbG9yKCkKICBoZm4gPSB2YWx1ZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBoZm4gPSAoKSA9PgogIGUgPT4KICBoZm4gPSAoKSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgZSA9PgogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KICBnZXQgbGF5ZXIoKQogIGhmbiA9ICgpID0+CiAgaGZuID0gKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgc2lnbmFsczogKCkgPT4KICBwbGFpbjogKCkgPT4KICBlbGVtZW50czogKCkgPT4KICBsaWJyYXJpZXM6ICgpID0+CiAgc2hlZXRzOiAoKSA9PgogIHBhcnRzOiAoKSA9PgogIGxpYnJhcmllczogKCkgPT4KICBwYWNrYWdlcygpCiAgZGV2aWNlc2V0cygpCiAgZSA9PgogIHN5bWJvbHMoKQogIGUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CihvLCBwLCByKSA9PgooKSA9PgogIGNyZWYgPT4KKCkgPT4KICBjcmVmID0+CigpID0+CmUgPT4KKCkgPT4KZSA9PgooKSA9PgplID0+CigpID0+CmUgPT4KICAuZ2V0Q29sb3IgPSBlbGVtZW50ID0+CiAgLmlzVmlzaWJsZSA9IGVsZW1lbnQgPT4KICAuc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgLnN1YnNjcmliZSA9IGYgPT4KICB2YWx1ZSA9PgogIC5nZXRDb2xvciA9IGZ1bmN0aW9uKCkKdmFsdWUgPT4KICBuID0+CigpID0+CiAgZSA9PgplID0+CmUgPT4KICBnZXQgcmVwZWF0ZXIoKQoocHVzaCwgc3RvcCkgPT4KKHsgdmFsdWUsIGRvbmUgfSkgPT4KICAucHVzaEV2ZW50ID0gZnVuY3Rpb24oLi4uYXJncykKICBlbGVtID0+CiAgZXZlbnQobmFtZSkKICBzdWJzY3JpYmUoaGFuZGxlcikKICB1bnN1YnNjcmliZShoYW5kbGVyKQogIGggPT4KICBnZXQgdGV4dCgpCiAgZ2V0IGF0dHJpYnV0ZXMoKQogIGdldExheWVyKCkKICBsb29rdXAoeHBhdGgsIGNyZWF0ZSkKKG8sIHAsIHYpID0+CiAgZ2V0Qm91bmRzKHByZWQsIG9wdHMgPSB7fSkKICBwcmVkID0gZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBiID0+CiAgciA9PgogIGUgPT4KICBuID0+CiAgZ2V0IGJvdW5kcygpCiAgdHJhbnNmb3JtYXRpb24oKQogIGdldCBnZW9tZXRyeSgpCiAgbWFrZUdldHRlclNldHRlciA9IGsgPT4gdiA9PgogIHAgPT4KICBwcm9wID0+CmsgPT4gdiA9PgogIHByb3AgPT4KICBwcm9wID0+CiAgcHJvcCA9PgooKSA9PgogIGcgPT4KICBwb3NpdGlvbihvZmZzZXQgPSBudWxsKQogIG1ha2VHZXR0ZXJTZXR0ZXIgPSBrID0+IHYgPT4KICBwcm9wID0+CiAgc3RhdGljIGlzUmVsYXRpb24obmFtZSkKICB0ID0gKG8sIHAsIHYpID0+CiAgciA9IGUgPT4KICBzY29wZTIoKQogIGdldCBjaGFpbigpCiAgZ2V0UGFyZW50KHRhZ05hbWUpCiAgZ2V0IHNoZWV0KCkKICBnZXQgc2hlZXROdW1iZXIoKQogIG5hbWVzKCkKKGFjYywgZW50cnkpID0+CiAgc3RhdGljIGtleXMoZW50aXR5KQogIHN0YXRpYyB2YWx1ZXMoZW50aXR5KQogIHN0YXRpYyBlbnRyaWVzKGVudGl0eSkKICBzdGF0aWMgdG9PYmplY3QoZSkKICBjaGlsZCA9PgogIGNoaWxkID0+CiAgc3RhdGljIHRvQXJyYXkoZSkKICB0b1N0cmluZygpCipnZXRBbGwocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+Cih2LCBwLCBvKSA9PgogIGdldChwcmVkLCB0cmFuc2Zvcm0gPSBhID0+IGEpCih2LCBwLCBvKSA9PgogIGZpbmQocHJlZCwgdHJhbnNmb3JtID0gYSA9PiBhKQoodiwgcCwgbykgPT4KKHIsIHYsIHAsIG8pID0+CigpID0+CiAgc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKQogIHJlbW92ZUF0dHJpYnV0ZShuYW1lKQogIGdldCBwb3MoKQpFYWdsZUVsZW1lbnQKICBtYWtlRWFnbGVFbGVtZW50ID0gKG93bmVyLCByZWYsIHJhdykgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/graph.js",
						"symkeys":
						[
							[
								13,
								18
							],
							[
								23,
								36
							],
							[
								94,
								118
							],
							[
								370,
								400
							],
							[
								682,
								700
							],
							[
								946,
								953
							],
							[
								1063,
								1086
							],
							[
								1137,
								1150
							],
							[
								1270,
								1283
							],
							[
								1427,
								1455
							],
							[
								1493,
								1506
							],
							[
								1571,
								1596
							],
							[
								1719,
								1736
							],
							[
								1988,
								2013
							],
							[
								2049,
								2062
							],
							[
								2193,
								2220
							],
							[
								2375,
								2382
							],
							[
								2464,
								2471
							],
							[
								3171,
								3184
							],
							[
								3472,
								3488
							],
							[
								3534,
								3541
							],
							[
								3785,
								3838
							],
							[
								4260,
								4272
							],
							[
								4486,
								4505
							],
							[
								4861,
								4869
							],
							[
								7342,
								7353
							],
							[
								7532,
								7539
							],
							[
								8342,
								8354
							],
							[
								8637,
								8645
							],
							[
								9193,
								9243
							],
							[
								9469,
								9523
							],
							[
								10624,
								10628
							],
							[
								10633,
								10664
							],
							[
								10782,
								10794
							],
							[
								10853,
								10857
							],
							[
								10896,
								10900
							],
							[
								10905,
								10930
							],
							[
								10988,
								11006
							]
						],
						"symlist":
						[
							"Graph",
							"constructor()",
							"checkForDuplicateNodes()",
							"checkForDuplicateConnections()",
							"getAdjacencyList()",
							"node =>",
							"getConnectedNodes(node)",
							"connection =>",
							"connection =>",
							"getConnectionsFromNode(node)",
							"connection =>",
							"getNeighboringNodes(node)",
							"nodeConnection =>",
							"isConnected(node1, node2)",
							"connection =>",
							"addConnection(node1, node2)",
							"node =>",
							"node =>",
							"connection =>",
							"addNode(newNode)",
							"node =>",
							"findMinimumCyclesFromSource(adjacencyListSourceIndex)",
							"nodeIndex =>",
							"findMinimumCycles()",
							"cycle =>",
							"edgePair =>",
							"edge =>",
							"nodeIndex =>",
							"cycle =>",
							"static doArraysContainSameElements(array1, array2)",
							"static findShortestPath(adjacencyList, source, target)",
							"Node",
							"constructor(point, connections)",
							"equals(node)",
							"Node",
							"Edge",
							"constructor(node1, node2)",
							"equals(connection)"
						]
					},
					"AQAAAAAAAAAAAAAADQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "eagle2svg.js",
			"settings":
			{
				"buffer_size": 2302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 39261,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"insert",
					{
						"characters": "\n\nf"
					},
					"AwAAAIOXAAAAAAAAhJcAAAAAAAAAAAAAhJcAAAAAAACFlwAAAAAAAAAAAACFlwAAAAAAAIaXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDlwAAAAAAAIOXAAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAIWXAAAAAAAAhZcAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGlwAAAAAAAIaXAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAAIWXAAAAAAAAhpcAAAAAAAAAAAAAhpcAAAAAAACHlwAAAAAAAAAAAACHlwAAAAAAAIiXAAAAAAAAAAAAAIiXAAAAAAAAiZcAAAAAAAAAAAAAiZcAAAAAAACKlwAAAAAAAAAAAACKlwAAAAAAAIuXAAAAAAAAAAAAAIuXAAAAAAAAjJcAAAAAAAAAAAAAjJcAAAAAAACNlwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFlwAAAAAAAIWXAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " MakeGraph"
					},
					"CgAAAI2XAAAAAAAAjpcAAAAAAAAAAAAAjpcAAAAAAACPlwAAAAAAAAAAAACPlwAAAAAAAJCXAAAAAAAAAAAAAJCXAAAAAAAAkZcAAAAAAAAAAAAAkZcAAAAAAACSlwAAAAAAAAAAAACSlwAAAAAAAJOXAAAAAAAAAAAAAJOXAAAAAAAAlJcAAAAAAAAAAAAAlJcAAAAAAACVlwAAAAAAAAAAAACVlwAAAAAAAJaXAAAAAAAAAAAAAJaXAAAAAAAAl5cAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNlwAAAAAAAI2XAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJeXAAAAAAAAmZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXlwAAAAAAAJeXAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAJiXAAAAAAAAmJcAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZlwAAAAAAAJmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AgAAAJiXAAAAAAAAmZcAAAAAAAAAAAAAmZcAAAAAAACalwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYlwAAAAAAAJiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAJmXAAAAAAAAmZcAAAAAAAABAAAAcpiXAAAAAAAAmJcAAAAAAAABAAAAcA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACalwAAAAAAAJqXAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAJiXAAAAAAAAmZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYlwAAAAAAAJiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAJiXAAAAAAAAmJcAAAAAAAABAAAAcA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZlwAAAAAAAJmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "br"
					},
					"AgAAAJiXAAAAAAAAmZcAAAAAAAAAAAAAmZcAAAAAAACalwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYlwAAAAAAAJiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAJmXAAAAAAAAmZcAAAAAAAABAAAAcg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACalwAAAAAAAJqXAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "oard=o"
					},
					"BgAAAJmXAAAAAAAAmpcAAAAAAAAAAAAAmpcAAAAAAACblwAAAAAAAAAAAACblwAAAAAAAJyXAAAAAAAAAAAAAJyXAAAAAAAAnZcAAAAAAAAAAAAAnZcAAAAAAACelwAAAAAAAAAAAACelwAAAAAAAJ+XAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZlwAAAAAAAJmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAJ6XAAAAAAAAnpcAAAAAAAABAAAAbw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACflwAAAAAAAJ+XAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "project.boad"
					},
					"DAAAAJ6XAAAAAAAAn5cAAAAAAAAAAAAAn5cAAAAAAACglwAAAAAAAAAAAACglwAAAAAAAKGXAAAAAAAAAAAAAKGXAAAAAAAAopcAAAAAAAAAAAAAopcAAAAAAACjlwAAAAAAAAAAAACjlwAAAAAAAKSXAAAAAAAAAAAAAKSXAAAAAAAApZcAAAAAAAAAAAAApZcAAAAAAACmlwAAAAAAAAAAAACmlwAAAAAAAKeXAAAAAAAAAAAAAKeXAAAAAAAAqJcAAAAAAAAAAAAAqJcAAAAAAACplwAAAAAAAAAAAACplwAAAAAAAKqXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACelwAAAAAAAJ6XAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAKmXAAAAAAAAqZcAAAAAAAABAAAAZA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqlwAAAAAAAKqXAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "rd)"
					},
					"AwAAAKmXAAAAAAAAqpcAAAAAAAAAAAAAqpcAAAAAAACrlwAAAAAAAAAAAACrlwAAAAAAAKyXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACplwAAAAAAAKmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKyXAAAAAAAArZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACslwAAAAAAAKyXAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAK2XAAAAAAAAr5cAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtlwAAAAAAAK2XAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAK6XAAAAAAAAr5cAAAAAAAAAAAAAr5cAAAAAAACwlwAAAAAAAAAAAACvlwAAAAAAALCXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACulwAAAAAAAK6XAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALKXAAAAAAAAs5cAAAAAAAAAAAAAr5cAAAAAAACvlwAAAAAAAAEAAAAJ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACylwAAAAAAALKXAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALCXAAAAAAAAsZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwlwAAAAAAALCXAAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAK+XAAAAAAAAsJcAAAAAAAAAAAAAsJcAAAAAAACxlwAAAAAAAAAAAACxlwAAAAAAALKXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvlwAAAAAAAK+XAAAAAAAAAAAAAAAANEA"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALKXAAAAAAAAtJcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACylwAAAAAAALKXAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "elt"
					},
					"AwAAALOXAAAAAAAAtJcAAAAAAAAAAAAAtJcAAAAAAAC1lwAAAAAAAAAAAAC1lwAAAAAAALaXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzlwAAAAAAALOXAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALaXAAAAAAAAt5cAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2lwAAAAAAALaXAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					4,
					"left_delete",
					null,
					"BAAAALaXAAAAAAAAtpcAAAAAAAABAAAAILWXAAAAAAAAtZcAAAAAAAABAAAAdLSXAAAAAAAAtJcAAAAAAAABAAAAbLOXAAAAAAAAs5cAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3lwAAAAAAALeXAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAALOXAAAAAAAAtJcAAAAAAAAAAAAAtJcAAAAAAAC1lwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzlwAAAAAAALOXAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALWXAAAAAAAAtpcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1lwAAAAAAALWXAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					3,
					"left_delete",
					null,
					"AwAAALWXAAAAAAAAtZcAAAAAAAABAAAAILSXAAAAAAAAtJcAAAAAAAABAAAAdLOXAAAAAAAAs5cAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2lwAAAAAAALaXAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAALOXAAAAAAAAtJcAAAAAAAAAAAAAtJcAAAAAAAC1lwAAAAAAAAAAAAC1lwAAAAAAALaXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzlwAAAAAAALOXAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALaXAAAAAAAAt5cAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2lwAAAAAAALaXAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAALeXAAAAAAAAuZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3lwAAAAAAALeXAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "name,element"
					},
					"DAAAALiXAAAAAAAAuZcAAAAAAAAAAAAAuZcAAAAAAAC6lwAAAAAAAAAAAAC6lwAAAAAAALuXAAAAAAAAAAAAALuXAAAAAAAAvJcAAAAAAAAAAAAAvJcAAAAAAAC9lwAAAAAAAAAAAAC9lwAAAAAAAL6XAAAAAAAAAAAAAL6XAAAAAAAAv5cAAAAAAAAAAAAAv5cAAAAAAADAlwAAAAAAAAAAAADAlwAAAAAAAMGXAAAAAAAAAAAAAMGXAAAAAAAAwpcAAAAAAAAAAAAAwpcAAAAAAADDlwAAAAAAAAAAAADDlwAAAAAAAMSXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4lwAAAAAAALiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAMWXAAAAAAAAxpcAAAAAAAAAAAAAxpcAAAAAAADHlwAAAAAAAAAAAADHlwAAAAAAAMiXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFlwAAAAAAAMWXAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMiXAAAAAAAAyZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIlwAAAAAAAMiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"",
					null,
					"AQAAAMmXAAAAAAAA5JcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJlwAAAAAAAMmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAAOOXAAAAAAAA45cAAAAAAAABAAAAXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADklwAAAAAAAOSXAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					4,
					"left_delete",
					null,
					"BAAAAMyXAAAAAAAAzJcAAAAAAAABAAAALsuXAAAAAAAAy5cAAAAAAAABAAAALsqXAAAAAAAAypcAAAAAAAABAAAALsmXAAAAAAAAyZcAAAAAAAABAAAAWw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNlwAAAAAAAM2XAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOCXAAAAAAAA4ZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADglwAAAAAAAOCXAAAAAAAA////////738"
				],
				[
					71,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAOGXAAAAAAAA4pcAAAAAAAAAAAAA5pcAAAAAAADolwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhlwAAAAAAAOGXAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOKXAAAAAAAA45cAAAAAAAAAAAAA45cAAAAAAADklwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADilwAAAAAAAOKXAAAAAAAAAAAAAADgf0A"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAAK6XAAAAAAAAr5cAAAAAAAAAAAAAr5cAAAAAAACwlwAAAAAAAAAAAADllwAAAAAAAOWXAAAAAAAAAQAAAAmwlwAAAAAAALGXAAAAAAAAAAAAALGXAAAAAAAAspcAAAAAAAAAAAAAspcAAAAAAACzlwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACulwAAAAAAAK6XAAAAAAAA////////738"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " g=new"
					},
					"BgAAALOXAAAAAAAAtJcAAAAAAAAAAAAAtJcAAAAAAAC1lwAAAAAAAAAAAAC1lwAAAAAAALaXAAAAAAAAAAAAALaXAAAAAAAAt5cAAAAAAAAAAAAAt5cAAAAAAAC4lwAAAAAAAAAAAAC4lwAAAAAAALmXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzlwAAAAAAALOXAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " Graph"
					},
					"BgAAALmXAAAAAAAAupcAAAAAAAAAAAAAupcAAAAAAAC7lwAAAAAAAAAAAAC7lwAAAAAAALyXAAAAAAAAAAAAALyXAAAAAAAAvZcAAAAAAAAAAAAAvZcAAAAAAAC+lwAAAAAAAAAAAAC+lwAAAAAAAL+XAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5lwAAAAAAALmXAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL+XAAAAAAAAwZcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/lwAAAAAAAL+XAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMGXAAAAAAAAwpcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBlwAAAAAAAMGXAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAPeXAAAAAAAA+JcAAAAAAAAAAAAA+JcAAAAAAAD5lwAAAAAAAAAAAAD5lwAAAAAAAPqXAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3lwAAAAAAAPeXAAAAAAAAAAAAAAAAaUA"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " n=nwe"
					},
					"BgAAAPqXAAAAAAAA+5cAAAAAAAAAAAAA+5cAAAAAAAD8lwAAAAAAAAAAAAD8lwAAAAAAAP2XAAAAAAAAAAAAAP2XAAAAAAAA/pcAAAAAAAAAAAAA/pcAAAAAAAD/lwAAAAAAAAAAAAD/lwAAAAAAAACYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6lwAAAAAAAPqXAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					2,
					"left_delete",
					null,
					"AgAAAP+XAAAAAAAA/5cAAAAAAAABAAAAZf6XAAAAAAAA/pcAAAAAAAABAAAAdw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "ew"
					},
					"AgAAAP6XAAAAAAAA/5cAAAAAAAAAAAAA/5cAAAAAAAAAmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+lwAAAAAAAP6XAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " Node"
					},
					"BQAAAACYAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAABJgAAAAAAAAAAAAABJgAAAAAAAAFmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAWYAAAAAAAAB5gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFmAAAAAAAAAWYAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAAaYAAAAAAAAB5gAAAAAAAAAAAAAB5gAAAAAAAAImAAAAAAAAAAAAAAImAAAAAAAAAmYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGmAAAAAAAAAaYAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " POint"
					},
					"BgAAAAmYAAAAAAAACpgAAAAAAAAAAAAACpgAAAAAAAALmAAAAAAAAAAAAAALmAAAAAAAAAyYAAAAAAAAAAAAAAyYAAAAAAAADZgAAAAAAAAAAAAADZgAAAAAAAAOmAAAAAAAAAAAAAAOmAAAAAAAAA+YAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJmAAAAAAAAAmYAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA+YAAAAAAAAEZgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPmAAAAAAAAA+YAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAA+YAAAAAAAAD5gAAAAAAAABAAAAKA+YAAAAAAAAD5gAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQmAAAAAAAABCYAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					4,
					"left_delete",
					null,
					"BAAAAA6YAAAAAAAADpgAAAAAAAABAAAAdA2YAAAAAAAADZgAAAAAAAABAAAAbgyYAAAAAAAADJgAAAAAAAABAAAAaQuYAAAAAAAAC5gAAAAAAAABAAAATw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPmAAAAAAAAA+YAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "oint"
					},
					"BAAAAAuYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAANmAAAAAAAAAAAAAANmAAAAAAAAA6YAAAAAAAAAAAAAA6YAAAAAAAAD5gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALmAAAAAAAAAuYAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA+YAAAAAAAAEZgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPmAAAAAAAAA+YAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "ERl"
					},
					"AwAAABCYAAAAAAAAEZgAAAAAAAAAAAAAEZgAAAAAAAASmAAAAAAAAAAAAAASmAAAAAAAABOYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQmAAAAAAAABCYAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					3,
					"left_delete",
					null,
					"AwAAABKYAAAAAAAAEpgAAAAAAAABAAAAbBGYAAAAAAAAEZgAAAAAAAABAAAAUhCYAAAAAAAAEJgAAAAAAAABAAAARQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATmAAAAAAAABOYAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "elemnt"
					},
					"BgAAABCYAAAAAAAAEZgAAAAAAAAAAAAAEZgAAAAAAAASmAAAAAAAAAAAAAASmAAAAAAAABOYAAAAAAAAAAAAABOYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAVmAAAAAAAAAAAAAAVmAAAAAAAABaYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQmAAAAAAAABCYAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					2,
					"left_delete",
					null,
					"AgAAABWYAAAAAAAAFZgAAAAAAAABAAAAdBSYAAAAAAAAFJgAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWmAAAAAAAABaYAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "ent"
					},
					"AwAAABSYAAAAAAAAFZgAAAAAAAAAAAAAFZgAAAAAAAAWmAAAAAAAAAAAAAAWmAAAAAAAABeYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUmAAAAAAAABSYAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABmYAAAAAAAAGpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZmAAAAAAAABmYAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABqYAAAAAAAAG5gAAAAAAAAAAAAAG5gAAAAAAAAcmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAamAAAAAAAABqYAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "n.name=name;"
					},
					"DAAAAByYAAAAAAAAHZgAAAAAAAAAAAAAHZgAAAAAAAAemAAAAAAAAAAAAAAemAAAAAAAAB+YAAAAAAAAAAAAAB+YAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAhmAAAAAAAAAAAAAAhmAAAAAAAACKYAAAAAAAAAAAAACKYAAAAAAAAI5gAAAAAAAAAAAAAI5gAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACWYAAAAAAAAAAAAACWYAAAAAAAAJpgAAAAAAAAAAAAAJpgAAAAAAAAnmAAAAAAAAAAAAAAnmAAAAAAAACiYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcmAAAAAAAAByYAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n\n\ng.addNo"
					},
					"CgAAACiYAAAAAAAAKZgAAAAAAAAAAAAAKZgAAAAAAAAqmAAAAAAAAAAAAAAqmAAAAAAAACuYAAAAAAAAAAAAACuYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAtmAAAAAAAAAAAAAAtmAAAAAAAAC6YAAAAAAAAAAAAAC6YAAAAAAAAL5gAAAAAAAAAAAAAL5gAAAAAAAAwmAAAAAAAAAAAAAAwmAAAAAAAADGYAAAAAAAAAAAAADGYAAAAAAAAMpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAomAAAAAAAACiYAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAADKYAAAAAAAAM5gAAAAAAAAAAAAAM5gAAAAAAAA0mAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAymAAAAAAAADKYAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADSYAAAAAAAANpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0mAAAAAAAADSYAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAADWYAAAAAAAANpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1mAAAAAAAADWYAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": ":;"
					},
					"AgAAADeYAAAAAAAAOJgAAAAAAAAAAAAAOJgAAAAAAAA5mAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3mAAAAAAAADeYAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					2,
					"left_delete",
					null,
					"AgAAADiYAAAAAAAAOJgAAAAAAAABAAAAOzeYAAAAAAAAN5gAAAAAAAABAAAAOg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5mAAAAAAAADmYAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADeYAAAAAAAAOJgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3mAAAAAAAADeYAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAADuYAAAAAAAAPJgAAAAAAAAAAAAAPJgAAAAAAAA9mAAAAAAAAAAAAAA9mAAAAAAAAD6YAAAAAAAAAAAAAD6YAAAAAAAAP5gAAAAAAAAAAAAAP5gAAAAAAABAmAAAAAAAAAAAAABAmAAAAAAAAEGYAAAAAAAAAAAAAEGYAAAAAAAAQpgAAAAAAAAAAAAAQpgAAAAAAABDmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7mAAAAAAAADuYAAAAAAAAAAAAAABAYEA"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " g;"
					},
					"AwAAAEOYAAAAAAAARJgAAAAAAAAAAAAARJgAAAAAAABFmAAAAAAAAAAAAABFmAAAAAAAAEaYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDmAAAAAAAAEOYAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": ",MakeGraph"
					},
					"CgAAAKYqAAAAAAAApyoAAAAAAAAAAAAApyoAAAAAAACoKgAAAAAAAAAAAACoKgAAAAAAAKkqAAAAAAAAAAAAAKkqAAAAAAAAqioAAAAAAAAAAAAAqioAAAAAAACrKgAAAAAAAAAAAACrKgAAAAAAAKwqAAAAAAAAAAAAAKwqAAAAAAAArSoAAAAAAAAAAAAArSoAAAAAAACuKgAAAAAAAAAAAACuKgAAAAAAAK8qAAAAAAAAAAAAAK8qAAAAAAAAsCoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmKgAAAAAAAKYqAAAAAAAA////////738"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAMyXAAAAAAAAzZcAAAAAAAAAAAAAzZcAAAAAAADOlwAAAAAAAAAAAADOlwAAAAAAAM+XAAAAAAAAAAAAAM+XAAAAAAAA0JcAAAAAAAAAAAAA0JcAAAAAAADRlwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMlwAAAAAAAMyXAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " nodes="
					},
					"BwAAANGXAAAAAAAA0pcAAAAAAAAAAAAA0pcAAAAAAADTlwAAAAAAAAAAAADTlwAAAAAAANSXAAAAAAAAAAAAANSXAAAAAAAA1ZcAAAAAAAAAAAAA1ZcAAAAAAADWlwAAAAAAAAAAAADWlwAAAAAAANeXAAAAAAAAAAAAANeXAAAAAAAA2JcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRlwAAAAAAANGXAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANiXAAAAAAAA2pcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYlwAAAAAAANiXAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAANqXAAAAAAAA25cAAAAAAAAAAAAA25cAAAAAAADclwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADalwAAAAAAANqXAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAANuXAAAAAAAA25cAAAAAAAABAAAAOg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADclwAAAAAAANyXAAAAAAAAAAAAAAAA8L8"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "nodes"
					},
					"BQAAADSYAAAAAAAANZgAAAAAAAAAAAAANZgAAAAAAAA2mAAAAAAAAAAAAAA2mAAAAAAAADeYAAAAAAAAAAAAADeYAAAAAAAAOJgAAAAAAAAAAAAAOJgAAAAAAAA5mAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0mAAAAAAAADSYAAAAAAAAAAAAAADAYkA"
				],
				[
					189,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADmYAAAAAAAAO5gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5mAAAAAAAADmYAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAADqYAAAAAAAAO5gAAAAAAAAAAAAAO5gAAAAAAAA8mAAAAAAAAAAAAAA8mAAAAAAAAD2YAAAAAAAAAAAAAD2YAAAAAAAAPpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6mAAAAAAAADqYAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "=n;"
					},
					"AwAAAD+YAAAAAAAAQJgAAAAAAAAAAAAAQJgAAAAAAABBmAAAAAAAAAAAAABBmAAAAAAAAEKYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/mAAAAAAAAD+YAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"cut",
					null,
					"AQAAADSYAAAAAAAANJgAAAAAAAANAAAAbm9kZXNbbmFtZV09bg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBmAAAAAAAADSYAAAAAAAAAAAAAAAAAAA"
				],
				[
					196,
					1,
					"paste",
					null,
					"AQAAADSYAAAAAAAAQZgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0mAAAAAAAADSYAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"paste",
					null,
					"AQAAABaYAAAAAAAAI5gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWmAAAAAAAABaYAAAAAAAAAAAAAAAATkA"
				],
				[
					201,
					1,
					"left_delete",
					null,
					"AQAAACKYAAAAAAAAIpgAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjmAAAAAAAACOYAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"cut",
					null,
					"AQAAAECYAAAAAAAAQJgAAAAAAAAcAAAAbm9kZXNbbmFtZV09bjsKbi5uYW1lPW5hbWU7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAmAAAAAAAAFyYAAAAAAAAAAAAAAAAAAA"
				],
				[
					207,
					1,
					"left_delete",
					null,
					"AQAAAD+YAAAAAAAAP5gAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAmAAAAAAAAECYAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFGYAAAAAAAAUpgAAAAAAAAAAAAAUpgAAAAAAABTmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRmAAAAAAAAFGYAAAAAAAAAAAAAABgfUA"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANyXAAAAAAAA3ZcAAAAAAAAAAAAAU5gAAAAAAABTmAAAAAAAAAEAAAAJ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADclwAAAAAAANyXAAAAAAAAAAAAAAAAAAA"
				],
				[
					221,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdlwAAAAAAAN2XAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAHCYAAAAAAAAcZgAAAAAAAAAAAAAcZgAAAAAAABzmAAAAAAAAAAAAABzmAAAAAAAAHSYAAAAAAAAAAAAAHSYAAAAAAAAdpgAAAAAAAAAAAAAcZgAAAAAAABxmAAAAAAAAAIAAAAgIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwmAAAAAAAAHCYAAAAAAAAAAAAAACAUUA"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAHSYAAAAAAAAdZgAAAAAAAAAAAAAdZgAAAAAAAB2mAAAAAAAAAAAAAB2mAAAAAAAAHeYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0mAAAAAAAAHSYAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHeYAAAAAAAAeZgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3mAAAAAAAAHeYAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAHiYAAAAAAAAeZgAAAAAAAAAAAAAeZgAAAAAAAB6mAAAAAAAAAAAAAB6mAAAAAAAAHuYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4mAAAAAAAAHiYAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHuYAAAAAAAAfJgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7mAAAAAAAAHuYAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHyYAAAAAAAAfpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8mAAAAAAAAHyYAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "name,signal"
					},
					"CwAAAH2YAAAAAAAAfpgAAAAAAAAAAAAAfpgAAAAAAAB/mAAAAAAAAAAAAAB/mAAAAAAAAICYAAAAAAAAAAAAAICYAAAAAAAAgZgAAAAAAAAAAAAAgZgAAAAAAACCmAAAAAAAAAAAAACCmAAAAAAAAIOYAAAAAAAAAAAAAIOYAAAAAAAAhJgAAAAAAAAAAAAAhJgAAAAAAACFmAAAAAAAAAAAAACFmAAAAAAAAIaYAAAAAAAAAAAAAIaYAAAAAAAAh5gAAAAAAAAAAAAAh5gAAAAAAACImAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9mAAAAAAAAH2YAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAImYAAAAAAAAipgAAAAAAAAAAAAAipgAAAAAAACLmAAAAAAAAAAAAACLmAAAAAAAAIyYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJmAAAAAAAAImYAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": " project.board."
					},
					"DwAAAIyYAAAAAAAAjZgAAAAAAAAAAAAAjZgAAAAAAACOmAAAAAAAAAAAAACOmAAAAAAAAI+YAAAAAAAAAAAAAI+YAAAAAAAAkJgAAAAAAAAAAAAAkJgAAAAAAACRmAAAAAAAAAAAAACRmAAAAAAAAJKYAAAAAAAAAAAAAJKYAAAAAAAAk5gAAAAAAAAAAAAAk5gAAAAAAACUmAAAAAAAAAAAAACUmAAAAAAAAJWYAAAAAAAAAAAAAJWYAAAAAAAAlpgAAAAAAAAAAAAAlpgAAAAAAACXmAAAAAAAAAAAAACXmAAAAAAAAJiYAAAAAAAAAAAAAJiYAAAAAAAAmZgAAAAAAAAAAAAAmZgAAAAAAACamAAAAAAAAAAAAACamAAAAAAAAJuYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMmAAAAAAAAIyYAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "signal"
					},
					"BgAAAJuYAAAAAAAAnJgAAAAAAAAAAAAAnJgAAAAAAACdmAAAAAAAAAAAAACdmAAAAAAAAJ6YAAAAAAAAAAAAAJ6YAAAAAAAAn5gAAAAAAAAAAAAAn5gAAAAAAACgmAAAAAAAAAAAAACgmAAAAAAAAKGYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbmAAAAAAAAJuYAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"left_delete",
					null,
					"AQAAAKGYAAAAAAAAoZgAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACimAAAAAAAAKKYAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "s)"
					},
					"AgAAAKGYAAAAAAAAopgAAAAAAAAAAAAAopgAAAAAAACjmAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChmAAAAAAAAKGYAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKOYAAAAAAAApJgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjmAAAAAAAAKOYAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKSYAAAAAAAAppgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkmAAAAAAAAKSYAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKWYAAAAAAAAppgAAAAAAAAAAAAAppgAAAAAAAComAAAAAAAAAAAAAComAAAAAAAAKmYAAAAAAAAAAAAAKmYAAAAAAAAq5gAAAAAAAAAAAAAppgAAAAAAACmmAAAAAAAAAIAAAAgIKaYAAAAAAAAqZgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClmAAAAAAAAKWYAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKmYAAAAAAAAqpgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpmAAAAAAAAKmYAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/eagle/element.js",
			"redo_stack":
			[
				[
					43,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFk7AAAAAAAAWTsAAAAAAAACAAAALyonPgAAAAAAACc+AAAAAAAAAgAAACov",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFs7AAAAAAAAKT4AAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 36649,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Pink-Noise-Generator-Thomas-Henry.brd",
			"redo_stack":
			[
				[
					3,
					1,
					"",
					null,
					"AgAAAFi5AAAAAAAA77oAAAAAAAAAAAAATbsAAAAAAABNuwAAAAAAAJcBAAAgIDxjb250YWN0cmVmIGVsZW1lbnQ9IklDMSIgcGFkPSI1IiAvPgogICAgICAgICAgPGNvbnRhY3RyZWYgZWxlbWVudD0iQzMiIHBhZD0iMiIgLz4KICAgICAgICAgIDxjb250YWN0cmVmIGVsZW1lbnQ9IkM0IiBwYWQ9IjIiIC8+CiAgICAgICAgICA8Y29udGFjdHJlZiBlbGVtZW50PSJDNSIgcGFkPSIyIiAvPgogICAgICAgICAgPGNvbnRhY3RyZWYgZWxlbWVudD0iQzYiIHBhZD0iMiIgLz4KICAgICAgICAgIDxjb250YWN0cmVmIGVsZW1lbnQ9IkM3IiBwYWQ9IjIiIC8+CiAgICAgICAgICA8Y29udGFjdHJlZiBlbGVtZW50PSJDOCIgcGFkPSIyIiAvPgogICAgICAgICAgPGNvbnRhY3RyZWYgZWxlbWVudD0iUjEwIiBwYWQ9IkUiIC8+CiAgICAgICAgICA8Y29udGFjdHJlZiBlbGVtZW50PSJKMSIgcGFkPSIxIiAvPg",
					"AQAAAAAAAAABAAAAtrkAAAAAAABNuwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 65835,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "export class Graph {\n  constructor() {\n    this.nodes = [];\n    this.connections = [];\n  }\n\n  checkForDuplicateNodes() {\n    for(let i = 0; i < this.nodes.length; i++) {\n      for(let j = i + 1; j < this.nodes.length; j++) {\n        if(this.nodes[i].equals(this.nodes[j])) {\n          //console.log('DUPLICATE NODES, ' + i + ' and ' + j);\n        }\n      }\n    }\n  }\n\n  checkForDuplicateConnections() {\n    for(let i = 0; i < this.connections.length; i++) {\n      for(let j = i + 1; j < this.connections.length; j++) {\n        if(this.connections[i].equals(this.connections[j])) {\n          //console.log('DUPLICATE CONNECTIONS, ' + i + ' and ' + j);\n        }\n      }\n    }\n  }\n\n  getAdjacencyList() {\n    let adjacencyList = [];\n    for(let i = 0; i < this.nodes.length; i++) {\n      adjacencyList[i] = [];\n      let node = this.nodes[i];\n      node.id = i;\n      let connectedNodes = this.getConnectedNodes(node);\n      connectedNodes.forEach(node => {\n        adjacencyList[i].push(this.nodes.indexOf(node));\n      });\n    }\n\n    return adjacencyList;\n  }\n\n  getConnectedNodes(node) {\n    let myConnections = this.connections.filter(connection => connection.node1 === node || connection.node2 === node);\n    let connectedNodes = new Set();\n    myConnections.forEach(connection => {\n      connectedNodes.add(connection.node1).add(connection.node2);\n    });\n    connectedNodes.delete(node);\n    return connectedNodes;\n  }\n\n  getConnectionsFromNode(node) {\n    return this.connections.filter(connection => connection.node1 === node || connection.node2 === node);\n  }\n\n  getNeighboringNodes(node) {\n    let nodeConnections = this.getConnectionsFromNode(node);\n    let neighboringNodes = [];\n    nodeConnections.forEach(nodeConnection => {\n      if(nodeConnection.node1 !== node) {\n        neighboringNodes.push(nodeConnection.node1);\n      } else if(nodeConnection.node2 !== node) {\n        neighboringNodes.push(nodeConnection.node2);\n      }\n    });\n    return neighboringNodes;\n  }\n\n  isConnected(node1, node2) {\n    return this.connections.some(connection => (connection.node1 === node1 && connection.node2 === node2) || (connection.node2 === node1 && connection.node1 === node2));\n  }\n\n  addConnection(node1, node2) {\n    if(!node1 || !node2) {\n      return false;\n    }\n\n    if(node1.equals(node2)) {\n      return false;\n    }\n\n    let node1Matches = this.nodes.filter(node => Point.equals(node.point, node1.point));\n    let node2Matches = this.nodes.filter(node => Point.equals(node.point, node2.point));\n\n    if(node1Matches.length > 1) {\n      //console.log('Too many maches for node 1.  length = ' + node1Matches.length);\n      return false;\n    }\n\n    if(node2Matches.length > 1) {\n      //console.log('Too many maches for node 1.  length = ' + node2Matches.length);\n      return false;\n    }\n\n    if(node1Matches.length === 0) {\n      //console.log('No matches for node 1, doing nothing');\n      return;\n    }\n\n    if(node2Matches.length === 0) {\n      //console.log('No matches for node 2, doing nothing');\n      return;\n    }\n\n    let newConnection = new Graph.Edge(node1Matches[0], node2Matches[0]);\n\n    let duplicateConnections = this.connections.filter(connection => connection.equals(newConnection));\n\n    if(duplicateConnections.length > 1) {\n      //console.log('TODO:  HANDLE THIS.  THIS SHOULD NOT BE HAPPENING');\n    } else if(duplicateConnections.length === 1) {\n      return;\n    } else {\n      this.connections.push(newConnection);\n    }\n  }\n\n  addNode(newNode) {\n    let duplicateNodes = this.nodes.filter(node => Point.equals(newNode.point, node.point));\n\n    if(duplicateNodes.length > 1) {\n      //console.log('TODO:  HANDLE THIS.  THIS SHOULD NOT BE HAPPENING');\n    }\n\n    if(duplicateNodes.length === 0) {\n      this.nodes.push(newNode);\n    }\n  }\n\n  findMinimumCyclesFromSource(adjacencyListSourceIndex) {\n    const adjacencyList = this.getAdjacencyList();\n    let neighbors = adjacencyList[adjacencyListSourceIndex];\n    let paths = [];\n    for(let i = 0; i < neighbors.length; i++) {\n      let path = [adjacencyListSourceIndex];\n      let startingNeighborIndex = neighbors[i];\n      let tmpAdjacencyList = { ...adjacencyList };\n      tmpAdjacencyList[startingNeighborIndex] = tmpAdjacencyList[startingNeighborIndex].filter(nodeIndex => nodeIndex !== adjacencyListSourceIndex);\n      path = path.concat(Graph.findShortestPath(tmpAdjacencyList, startingNeighborIndex, adjacencyListSourceIndex));\n      paths.push(path);\n    }\n    return paths;\n  }\n\n  findMinimumCycles() {\n    const adjacencyList = this.getAdjacencyList();\n    let cycles = [];\n    for(let i = 0; i < adjacencyList.length; i++) {\n      let paths = this.findMinimumCyclesFromSource(i);\n      cycles = cycles.concat(paths);\n    }\n\n    let cyclesToRemove = [];\n    let uniqueCycles = [];\n    for(let i = 0; i < cycles.length; i++) {\n      if(uniqueCycles.filter(cycle => Graph.doArraysContainSameElements(cycle, cycles[i])).length === 0) {\n        uniqueCycles.push(cycles[i]);\n      }\n    }\n\n    //Everything below this is a failed attempt to fix a problem where we miss certain kinds of polygons.\n    //It can happen where a polygon isn't the shortest cycle from any of its points -- all of the points in the\n    //polygon have clockwise-and-counter-clockwise cycles that are shorter through other polygons.  If that happens\n    //we will end up missing that polygon.\n\n    //One of the properties of this polygon is that all of its edges will have only been used once.  All edges should\n    //be used in two polygons unless they are exterior edges.\n\n    //This was an attempt to find all edges used only once and constrcut them missing polygons by repeating the\n    //process using _just_ these missing edges.  It goes awry because without the other edges making up shorter paths\n    //we end up constructing polygons that are too big and are combinations of our minimal paths.  The worst version\n    //of this is that we construct a polygon out of all of the exterior lines, covering all of the others, but this\n    //is not (I don't think) the only case that occurs.\n\n    //It would be relatively easy to take the geometric representation of the polygons and check if they contain any\n    //of the other points in the set, and discard them if they do.  This would solve the problem but I am trying to keep\n    //the graph-theory representation separate from the geometric representation and holding out for a different solution.\n\n    //The other option is to do something up above where we find the shortest cycle to a path, remove parts of it\n    //from the adjacency list, and repeat the process until we don't find anymore paths.  This is probably the right\n    //thing to do.\n\n    let edgePairs = [];\n    let edgePairCount = {};\n    for(let i = 0; i < uniqueCycles.length; i++) {\n      let cycle = uniqueCycles[i];\n      for(let j = 1; j < cycle.length; j++) {\n        let edgePair = [];\n        if(cycle[j - 1] < cycle[j]) {\n          edgePair = [cycle[j - 1], cycle[j]];\n        } else {\n          edgePair = [cycle[j], cycle[j - 1]];\n        }\n\n        if(edgePairCount[edgePair[0] + ',' + edgePair[1]]) {\n          edgePairCount[edgePair.join(',')]++;\n        } else {\n          edgePairCount[edgePair.join(',')] = 1;\n        }\n        edgePairs.push(edgePair);\n      }\n    }\n\n    let edgesOnlyUsedOnce = [];\n    edgePairs.forEach(edgePair => {\n      if(edgePairCount[edgePair.join(',')] == 1) {\n        edgesOnlyUsedOnce.push(edgePair);\n      }\n    });\n\n    let leftoverAdjacencyList = [];\n    edgesOnlyUsedOnce.forEach(edge => {\n      if(leftoverAdjacencyList[edge[0]]) {\n        leftoverAdjacencyList[edge[0]].push(edge[1]);\n      } else {\n        leftoverAdjacencyList[edge[0]] = [edge[1]];\n      }\n      if(leftoverAdjacencyList[edge[1]]) {\n        leftoverAdjacencyList[edge[1]].push(edge[0]);\n      } else {\n        leftoverAdjacencyList[edge[1]] = [edge[0]];\n      }\n    });\n\n    let extraPaths = [];\n    for(let i = 0; i < leftoverAdjacencyList.length; i++) {\n      let neighbors = leftoverAdjacencyList[i];\n      if(neighbors) {\n        for(let j = 0; j < neighbors.length; j++) {\n          let path = [i];\n          let startingNeighborIndex = neighbors[j];\n          let tmpAdjacencyList = { ...leftoverAdjacencyList };\n          tmpAdjacencyList[startingNeighborIndex] = tmpAdjacencyList[startingNeighborIndex].filter(nodeIndex => nodeIndex !== i);\n          path = path.concat(Graph.findShortestPath(tmpAdjacencyList, startingNeighborIndex, i));\n          extraPaths.push(path);\n        }\n      }\n    }\n    let leftoverCycles = [];\n    for(let i = 0; i < extraPaths.length; i++) {\n      if(leftoverCycles.filter(cycle => Graph.doArraysContainSameElements(cycle, extraPaths[i])).length === 0) {\n        leftoverCycles.push(extraPaths[i]);\n      }\n    }\n\n    let longestCycleLength = -1;\n    let longestCycleIndex = -1;\n    for(let i = 0; i < leftoverCycles.length; i++) {\n      if(leftoverCycles[i].length > longestCycleLength) {\n        longestCycleIndex = i;\n        longestCycleLength = leftoverCycles[i].length;\n      }\n    }\n\n    leftoverCycles.splice(longestCycleIndex, 1);\n    uniqueCycles = leftoverCycles.concat(uniqueCycles);\n\n    return uniqueCycles;\n  }\n\n  static doArraysContainSameElements(array1, array2) {\n    if(array1.length !== array2.length) {\n      return false;\n    }\n    for(let i = 0; i < array1.length; i++) {\n      if(array2.includes(array1[i]) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static findShortestPath(adjacencyList, source, target) {\n    if(source == target) {\n      print('SOURCE AND PATH ARE SAME');\n      return [target];\n    }\n    let visitQueue = [source];\n    let visitedStatusList = { source: true };\n    let predecessorList = {};\n    let nextInQueue = 0;\n    while(nextInQueue < visitQueue.length) {\n      let node = visitQueue[nextInQueue++];\n      let neighbors = adjacencyList[node];\n\n      for(let i = 0; i < neighbors.length; i++) {\n        let neighbor = neighbors[i];\n        if(!visitedStatusList[neighbor]) {\n          visitedStatusList[neighbor] = true;\n          if(neighbor === target) {\n            //Check if the path is complete.\n            let path = [target]; //If so, backtrack through the path.\n            while(node !== source) {\n              path.push(node);\n              node = predecessorList[node];\n            }\n            path.push(node);\n            path.reverse();\n            return path;\n          }\n          predecessorList[neighbor] = node;\n          visitQueue.push(neighbor);\n        }\n      }\n    }\n    print('there is no path from ' + source + ' to ' + target);\n  }\n}\n\nexport class Node {\n  constructor(point, connections) {\n    this.point = point;\n    //Object.defineProperties(this, { point: { value: point, enumerable: false} });\n  }\n\nl  equals(node) {\n    return Point.equals(node.point, this.point);\n  }\n}\n\nNode.prototype.point = null;\n\nexport class Edge {\n  constructor(node1, node2) {\n    this.node1 = node1;\n    this.node2 = node2;\n  }\n\n  equals(connection) {\n    return (this.node1.equals(connection.node1) && this.node2.equals(connection.node2)) || (this.node2.equals(connection.node1) && this.node1.equals(connection.node2));\n  }\n}\n\nGraph.Node = Node;\nGraph.Edge = Edge;\n",
			"file": "lib/geom/graph.js",
			"file_size": 11223,
			"file_write_time": 133495819645048667,
			"settings":
			{
				"buffer_size": 11224,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					44,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKwpAAAAAAAArSkAAAAAAAAAAAAArSkAAAAAAACuKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsKQAAAAAAAKwpAAAAAAAAAAAAAAAAAAA"
				],
				[
					46,
					2,
					"left_delete",
					null,
					"AgAAAKwpAAAAAAAArCkAAAAAAAABAAAACqspAAAAAAAAqykAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtKQAAAAAAAK0pAAAAAAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "\nObject"
					},
					"CQAAAKspAAAAAAAArCkAAAAAAAAAAAAArCkAAAAAAACuKQAAAAAAAAAAAACuKQAAAAAAALApAAAAAAAAAAAAALApAAAAAAAAsSkAAAAAAAAAAAAAsSkAAAAAAACyKQAAAAAAAAAAAACyKQAAAAAAALMpAAAAAAAAAAAAALMpAAAAAAAAtCkAAAAAAAAAAAAAtCkAAAAAAAC1KQAAAAAAAAAAAAC1KQAAAAAAALYpAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrKQAAAAAAAKspAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					9,
					"left_delete",
					null,
					"CQAAALUpAAAAAAAAtSkAAAAAAAABAAAAdLQpAAAAAAAAtCkAAAAAAAABAAAAY7MpAAAAAAAAsykAAAAAAAABAAAAZbIpAAAAAAAAsikAAAAAAAABAAAAarEpAAAAAAAAsSkAAAAAAAABAAAAYrApAAAAAAAAsCkAAAAAAAABAAAAT64pAAAAAAAArikAAAAAAAACAAAAICCsKQAAAAAAAKwpAAAAAAAAAgAAACAgqykAAAAAAACrKQAAAAAAAAEAAAAK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2KQAAAAAAALYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\nNode.t"
					},
					"BwAAABAqAAAAAAAAESoAAAAAAAAAAAAAESoAAAAAAAASKgAAAAAAAAAAAAASKgAAAAAAABMqAAAAAAAAAAAAABMqAAAAAAAAFCoAAAAAAAAAAAAAFCoAAAAAAAAVKgAAAAAAAAAAAAAVKgAAAAAAABYqAAAAAAAAAAAAABYqAAAAAAAAFyoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQKgAAAAAAABAqAAAAAAAAAAAAAADgdUA"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAABYqAAAAAAAAFioAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXKgAAAAAAABcqAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "protyo"
					},
					"BgAAABYqAAAAAAAAFyoAAAAAAAAAAAAAFyoAAAAAAAAYKgAAAAAAAAAAAAAYKgAAAAAAABkqAAAAAAAAAAAAABkqAAAAAAAAGioAAAAAAAAAAAAAGioAAAAAAAAbKgAAAAAAAAAAAAAbKgAAAAAAABwqAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWKgAAAAAAABYqAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					2,
					"left_delete",
					null,
					"AgAAABsqAAAAAAAAGyoAAAAAAAABAAAAbxoqAAAAAAAAGioAAAAAAAABAAAAeQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcKgAAAAAAABwqAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "otype.point=nl"
					},
					"DgAAABoqAAAAAAAAGyoAAAAAAAAAAAAAGyoAAAAAAAAcKgAAAAAAAAAAAAAcKgAAAAAAAB0qAAAAAAAAAAAAAB0qAAAAAAAAHioAAAAAAAAAAAAAHioAAAAAAAAfKgAAAAAAAAAAAAAfKgAAAAAAACAqAAAAAAAAAAAAACAqAAAAAAAAISoAAAAAAAAAAAAAISoAAAAAAAAiKgAAAAAAAAAAAAAiKgAAAAAAACMqAAAAAAAAAAAAACMqAAAAAAAAJCoAAAAAAAAAAAAAJCoAAAAAAAAlKgAAAAAAAAAAAAAlKgAAAAAAACYqAAAAAAAAAAAAACYqAAAAAAAAJyoAAAAAAAAAAAAAJyoAAAAAAAAoKgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaKgAAAAAAABoqAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAACgqAAAAAAAAKSoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoKgAAAAAAACgqAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAACgqAAAAAAAAKCoAAAAAAAABAAAAbCcqAAAAAAAAJyoAAAAAAAABAAAAbA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApKgAAAAAAACkqAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "ull;"
					},
					"BAAAACcqAAAAAAAAKCoAAAAAAAAAAAAAKCoAAAAAAAApKgAAAAAAAAAAAAApKgAAAAAAACoqAAAAAAAAAAAAACoqAAAAAAAAKyoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnKgAAAAAAACcqAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABAqAAAAAAAAESoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQKgAAAAAAABAqAAAAAAAAAAAAAABAcEA"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\nOje"
					},
					"BQAAAMMpAAAAAAAAxCkAAAAAAAAAAAAAxCkAAAAAAADIKQAAAAAAAAAAAADIKQAAAAAAAMkpAAAAAAAAAAAAAMkpAAAAAAAAyikAAAAAAAAAAAAAyikAAAAAAADLKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDKQAAAAAAAMMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					2,
					"left_delete",
					null,
					"AgAAAMopAAAAAAAAyikAAAAAAAABAAAAZckpAAAAAAAAySkAAAAAAAABAAAAag",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLKQAAAAAAAMspAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "bejct."
					},
					"BgAAAMkpAAAAAAAAyikAAAAAAAAAAAAAyikAAAAAAADLKQAAAAAAAAAAAADLKQAAAAAAAMwpAAAAAAAAAAAAAMwpAAAAAAAAzSkAAAAAAAAAAAAAzSkAAAAAAADOKQAAAAAAAAAAAADOKQAAAAAAAM8pAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJKQAAAAAAAMkpAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					4,
					"left_delete",
					null,
					"BAAAAM4pAAAAAAAAzikAAAAAAAABAAAALs0pAAAAAAAAzSkAAAAAAAABAAAAdMwpAAAAAAAAzCkAAAAAAAABAAAAY8spAAAAAAAAyykAAAAAAAABAAAAag",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPKQAAAAAAAM8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "jec"
					},
					"AwAAAMspAAAAAAAAzCkAAAAAAAAAAAAAzCkAAAAAAADNKQAAAAAAAAAAAADNKQAAAAAAAM4pAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLKQAAAAAAAMspAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					4,
					"left_delete",
					null,
					"BAAAAM0pAAAAAAAAzSkAAAAAAAABAAAAY8wpAAAAAAAAzCkAAAAAAAABAAAAZcspAAAAAAAAyykAAAAAAAABAAAAasopAAAAAAAAyikAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOKQAAAAAAAM4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "ject.def"
					},
					"CAAAAMopAAAAAAAAyykAAAAAAAAAAAAAyykAAAAAAADMKQAAAAAAAAAAAADMKQAAAAAAAM0pAAAAAAAAAAAAAM0pAAAAAAAAzikAAAAAAAAAAAAAzikAAAAAAADPKQAAAAAAAAAAAADPKQAAAAAAANApAAAAAAAAAAAAANApAAAAAAAA0SkAAAAAAAAAAAAA0SkAAAAAAADSKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKKQAAAAAAAMopAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert_completion",
					{
						"completion": "defineProperty($1)",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "defineProperty(...)"
					},
					"AgAAAM8pAAAAAAAAzykAAAAAAAADAAAAZGVmzykAAAAAAADfKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSKQAAAAAAANIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAN0pAAAAAAAA3SkAAAAAAAABAAAAKN0pAAAAAAAA3SkAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeKQAAAAAAAN4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAANwpAAAAAAAA3CkAAAAAAAABAAAAeQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdKQAAAAAAAN0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "ei"
					},
					"AgAAANwpAAAAAAAA3SkAAAAAAAAAAAAA3SkAAAAAAADeKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcKQAAAAAAANwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					2,
					"left_delete",
					null,
					"AgAAAN0pAAAAAAAA3SkAAAAAAAABAAAAadwpAAAAAAAA3CkAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeKQAAAAAAAN4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "ies"
					},
					"AwAAANwpAAAAAAAA3SkAAAAAAAAAAAAA3SkAAAAAAADeKQAAAAAAAAAAAADeKQAAAAAAAN8pAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcKQAAAAAAANwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN8pAAAAAAAA4SkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfKQAAAAAAAN8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "this,"
					},
					"BQAAAOApAAAAAAAA4SkAAAAAAAAAAAAA4SkAAAAAAADiKQAAAAAAAAAAAADiKQAAAAAAAOMpAAAAAAAAAAAAAOMpAAAAAAAA5CkAAAAAAAAAAAAA5CkAAAAAAADlKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgKQAAAAAAAOApAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOUpAAAAAAAA5ikAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlKQAAAAAAAOUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOYpAAAAAAAA6CkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmKQAAAAAAAOYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " point:"
					},
					"BwAAAOcpAAAAAAAA6CkAAAAAAAAAAAAA6CkAAAAAAADpKQAAAAAAAAAAAADpKQAAAAAAAOopAAAAAAAAAAAAAOopAAAAAAAA6ykAAAAAAAAAAAAA6ykAAAAAAADsKQAAAAAAAAAAAADsKQAAAAAAAO0pAAAAAAAAAAAAAO0pAAAAAAAA7ikAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnKQAAAAAAAOcpAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					2,
					"left_delete",
					null,
					"AgAAAO0pAAAAAAAA7SkAAAAAAAABAAAAOuwpAAAAAAAA7CkAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuKQAAAAAAAO4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAOwpAAAAAAAA7SkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsKQAAAAAAAOwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO0pAAAAAAAA7ikAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtKQAAAAAAAO0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAO0pAAAAAAAA7SkAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuKQAAAAAAAO4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAO0pAAAAAAAA7ikAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtKQAAAAAAAO0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4pAAAAAAAA7ykAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuKQAAAAAAAO4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAO8pAAAAAAAA8SkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvKQAAAAAAAO8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " value:"
					},
					"BwAAAPApAAAAAAAA8SkAAAAAAAAAAAAA8SkAAAAAAADyKQAAAAAAAAAAAADyKQAAAAAAAPMpAAAAAAAAAAAAAPMpAAAAAAAA9CkAAAAAAAAAAAAA9CkAAAAAAAD1KQAAAAAAAAAAAAD1KQAAAAAAAPYpAAAAAAAAAAAAAPYpAAAAAAAA9ykAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwKQAAAAAAAPApAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " poiont"
					},
					"BwAAAPcpAAAAAAAA+CkAAAAAAAAAAAAA+CkAAAAAAAD5KQAAAAAAAAAAAAD5KQAAAAAAAPopAAAAAAAAAAAAAPopAAAAAAAA+ykAAAAAAAAAAAAA+ykAAAAAAAD8KQAAAAAAAAAAAAD8KQAAAAAAAP0pAAAAAAAAAAAAAP0pAAAAAAAA/ikAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3KQAAAAAAAPcpAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					3,
					"left_delete",
					null,
					"AwAAAP0pAAAAAAAA/SkAAAAAAAABAAAAdPwpAAAAAAAA/CkAAAAAAAABAAAAbvspAAAAAAAA+ykAAAAAAAABAAAAbw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+KQAAAAAAAP4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "nt,"
					},
					"AwAAAPspAAAAAAAA/CkAAAAAAAAAAAAA/CkAAAAAAAD9KQAAAAAAAAAAAAD9KQAAAAAAAP4pAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7KQAAAAAAAPspAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " enumerable:"
					},
					"DAAAAP4pAAAAAAAA/ykAAAAAAAAAAAAA/ykAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAEqAAAAAAAAAAAAAAEqAAAAAAAAAioAAAAAAAAAAAAAAioAAAAAAAADKgAAAAAAAAAAAAADKgAAAAAAAAQqAAAAAAAAAAAAAAQqAAAAAAAABSoAAAAAAAAAAAAABSoAAAAAAAAGKgAAAAAAAAAAAAAGKgAAAAAAAAcqAAAAAAAAAAAAAAcqAAAAAAAACCoAAAAAAAAAAAAACCoAAAAAAAAJKgAAAAAAAAAAAAAJKgAAAAAAAAoqAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+KQAAAAAAAP4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " fale"
					},
					"BQAAAAoqAAAAAAAACyoAAAAAAAAAAAAACyoAAAAAAAAMKgAAAAAAAAAAAAAMKgAAAAAAAA0qAAAAAAAAAAAAAA0qAAAAAAAADioAAAAAAAAAAAAADioAAAAAAAAPKgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKKgAAAAAAAAoqAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAA4qAAAAAAAADioAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPKgAAAAAAAA8qAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAA4qAAAAAAAADyoAAAAAAAAAAAAADyoAAAAAAAAQKgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOKgAAAAAAAA4qAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEqAAAAAAAAEioAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARKgAAAAAAABEqAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABQqAAAAAAAAFSoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUKgAAAAAAABQqAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAALApAAAAAAAAsSkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwKQAAAAAAALApAAAAAAAAAAAAAAAAREA"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAALApAAAAAAAAsCkAAAAAAAABAAAAKA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxKQAAAAAAALEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALApAAAAAAAAsSkAAAAAAAAAAAAAsSkAAAAAAACyKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwKQAAAAAAALApAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAMopAAAAAAAAyykAAAAAAAAAAAAAyykAAAAAAADMKQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKKQAAAAAAAMopAAAAAAAAAAAAAAAAREA"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAMspAAAAAAAAyykAAAAAAAABAAAAKA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMKQAAAAAAAMwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAMspAAAAAAAAzCkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLKQAAAAAAAMspAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					2,
					"left_delete",
					null,
					"AgAAALEpAAAAAAAAsSkAAAAAAAABAAAAL7ApAAAAAAAAsCkAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyKQAAAAAAALIpAAAAAAAAAAAAAAAATkA"
				],
				[
					156,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcKgAAAAAAABwqAAAAAAAAAAAAAAAAAAA"
				],
				[
					1,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAABwqAAAAAAAAHSoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHCoAAAAAAAAcKgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"Build With: prettier"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"Pretty Shell: Minify"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/include",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/src",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/src/cimgui",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/src/util",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool",
		"/home/roman/Projects/plot-cv/CToy-1.05-Linux64-x86_64/x86-64",
		"/home/roman/Projects/plot-cv/cubic-spline"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/hole.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/github-userscript.js",
		"/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
		"/home/roman/Projects/an-tronics/eagle/github-userscript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js",
		"/home/janos/Projects/plot-cv/doc-scanner.js",
		"/home/janos/Projects/plot-cv/config.js",
		"/home/janos/Projects/plot-cv/deconflict.js",
		"/home/janos/Projects/plot-cv/debuggerprotocol.js",
		"/home/janos/Projects/plot-cv/debugger.js",
		"/home/janos/Projects/plot-cv/convert-imports.js",
		"/home/janos/Projects/plot-cv/esparse.js",
		"/home/janos/Projects/plot-cv/extract-structs.js",
		"/home/janos/Projects/plot-cv/fetch-post-prices.js",
		"/home/janos/Projects/plot-cv/ffi.js",
		"/home/janos/Projects/plot-cv/fontsample.js",
		"/home/janos/Projects/plot-cv/grammar-arith.js",
		"/home/janos/Projects/plot-cv/grammar-C.js",
		"/home/janos/Projects/plot-cv/grammar-c.js",
		"/home/janos/Projects/plot-cv/grammar-css3.js",
		"/home/janos/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Projects/plot-cv/grammar-INI.js",
		"/home/janos/Projects/plot-cv/httpd.js",
		"/home/janos/Projects/plot-cv/ini-grammar.js",
		"/home/janos/Projects/plot-cv/io-helpers.js",
		"/home/janos/Projects/plot-cv/list-directory.js",
		"/home/janos/Projects/plot-cv/list-exports.js",
		"/home/janos/Projects/plot-cv/list-exports2.js",
		"/home/janos/Projects/plot-cv/load-ast.js",
		"/home/janos/Projects/plot-cv/meriyah.js",
		"/home/janos/Projects/plot-cv/workertest.js",
		"/home/janos/Projects/plot-cv/worker.js",
		"/home/janos/Projects/plot-cv/userscript-test.js",
		"/home/janos/Projects/plot-cv/upload.html",
		"/home/janos/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/untar.c",
		"/home/janos/Projects/plot-cv/tmpx.js",
		"/home/janos/Projects/plot-cv/test-xml.js",
		"/home/janos/Projects/plot-cv/test-wru.js",
		"/home/janos/Projects/plot-cv/test-websocket.js",
		"/home/janos/Projects/plot-cv/test-voronoi.js",
		"/home/janos/Projects/plot-cv/test-video.js",
		"/home/janos/Projects/plot-cv/test-util.js",
		"/home/janos/Projects/plot-cv/test-utf8.js",
		"/home/janos/Projects/plot-cv/test-umat.js",
		"/home/janos/Projects/plot-cv/test-trkl.js",
		"/home/janos/Projects/plot-cv/test-sqlite3.js",
		"/home/janos/Projects/plot-cv/test-spawn.js",
		"/home/janos/Projects/plot-cv/test-sockets.js",
		"/home/janos/Projects/plot-cv/test-shparse.js",
		"/home/janos/Projects/plot-cv/test-rpc.js",
		"/home/janos/Projects/plot-cv/test-repl.js",
		"/home/janos/Projects/plot-cv/test-renderer.js",
		"/home/janos/Projects/plot-cv/test-readline.js",
		"/home/janos/Projects/plot-cv/test-readdir.js",
		"/home/janos/Projects/plot-cv/test-quickjs.js",
		"/home/janos/Projects/plot-cv/test-proxy.js",
		"/home/janos/Projects/plot-cv/test-pointlist.js",
		"/home/janos/Projects/plot-cv/test-pointer.js",
		"/home/janos/Projects/plot-cv/test-path.js",
		"/home/janos/Projects/plot-cv/test-parsexml.js",
		"/home/janos/Projects/plot-cv/test-parse.js",
		"/home/janos/Projects/plot-cv/test-opencv.js",
		"/home/janos/Projects/plot-cv/test-octagon.js",
		"/home/janos/Projects/plot-cv/test-ngql.js",
		"/home/janos/Projects/plot-cv/test-net.js",
		"/home/janos/Projects/plot-cv/test-mmap.js",
		"/home/janos/Projects/plot-cv/test-minnet.js",
		"/home/janos/Projects/plot-cv/test-meriyah.js",
		"/home/janos/Projects/plot-cv/ol-marker.js",
		"/home/janos/Projects/plot-cv/ol-map.js",
		"/home/janos/Projects/plot-cv/make-bitmap.js",
		"/home/janos/Projects/plot-cv/list-proxies.js",
		"/home/janos/Projects/plot-cv/eagle2gerber.js",
		"/home/janos/Projects/plot-cv/test-exception.js",
		"/home/janos/Projects/plot-cv/test-childprocess.js",
		"/home/janos/Projects/plot-cv/test-bjson.js"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"MakeGraph",
			"moveTo",
			"MakeGraph",
			"moveTo",
			"Edge",
			"libName",
			"'element'",
			" = 'element'",
			"'element'",
			"\\('element'",
			"'element'",
			"'element",
			"element",
			"^(\\s*)//(console\\.(log|debug)\\(')",
			"^(\\s*)(console\\.(log|debug)\\(')",
			"^(\\s*)(console\\.)",
			"^\\s*console.log",
			"^\\s*console.log.*element",
			"^\\s*console.log",
			"'element'",
			"\\belement\\b",
			"\\(['\"`]element['\"`]",
			"debug.*['\"`]element['\"`]",
			"log.*['\"`]element['\"`]",
			"['\"`]element['\"`]",
			"'element'",
			"log.*'element'",
			"'element'",
			"tagName ==",
			"'polygon'",
			"layer",
			"\\buseTransform\\b",
			"No such tra",
			"\\buseTransform\\b",
			"useTransform",
			"props\\.opts",
			"'deviceset'",
			"tagName == 'library'",
			"\\.(gates|devices)\\b",
			"\\.(gates|devices)",
			"'),\n",
			"tagName.*deviceset",
			"'deviceset'",
			"querySele",
			"align = ",
			"align",
			"round",
			"roun",
			"round",
			"<wire",
			"Line",
			"\\bLine\\b",
			"loadSaveOptions",
			"new REPL",
			"config",
			"width?=\"0\\.0",
			"width?=\"",
			"useValue",
			"await ",
			"client_finalize",
			"onClose",
			"exception",
			"current_exce",
			"}\\n\n",
			"}\\n\n([^\\n])",
			"}\\n([^\\n])",
			"}\\n\n([^\\n])",
			"remove",
			"ZipFolder",
			"<<<<",
			"ExecTool",
			"outdir",
			"'str'",
			"optionsArray",
			"Bottom",
			"compact",
			"boxes",
			"join",
			"\nfunction outputBytes(mat) {\n  return '['+[...rowIterator(mat)].map(a => '[ '+[...a].map(n => '0x'+n.toString(16).padStart(2, \n'0')).join(',')+' ],').join('\\n')+']';\n}",
			"cv\\.",
			"writeROI",
			"cvtColor",
			"g",
			"=> ",
			"));",
			"mod\\(",
			"toMap",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 781,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/lib/geom/graph.js",
							"function_name_status_row": -1,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									13,
									18
								],
								[
									23,
									36
								],
								[
									94,
									118
								],
								[
									370,
									400
								],
								[
									682,
									700
								],
								[
									946,
									953
								],
								[
									1063,
									1086
								],
								[
									1137,
									1150
								],
								[
									1270,
									1283
								],
								[
									1427,
									1455
								],
								[
									1493,
									1506
								],
								[
									1571,
									1596
								],
								[
									1719,
									1736
								],
								[
									1988,
									2013
								],
								[
									2049,
									2062
								],
								[
									2193,
									2220
								],
								[
									2375,
									2382
								],
								[
									2464,
									2471
								],
								[
									3171,
									3184
								],
								[
									3472,
									3488
								],
								[
									3534,
									3541
								],
								[
									3785,
									3838
								],
								[
									4260,
									4272
								],
								[
									4486,
									4505
								],
								[
									4861,
									4869
								],
								[
									7342,
									7353
								],
								[
									7532,
									7539
								],
								[
									8342,
									8354
								],
								[
									8637,
									8645
								],
								[
									9193,
									9243
								],
								[
									9469,
									9523
								],
								[
									10624,
									10628
								],
								[
									10633,
									10664
								],
								[
									10782,
									10794
								],
								[
									10853,
									10857
								],
								[
									10896,
									10900
								],
								[
									10905,
									10930
								],
								[
									10988,
									11006
								]
							],
							"symlist":
							[
								"Graph",
								"  constructor()",
								"  checkForDuplicateNodes()",
								"  checkForDuplicateConnections()",
								"  getAdjacencyList()",
								"  node =>",
								"  getConnectedNodes(node)",
								"  connection =>",
								"  connection =>",
								"  getConnectionsFromNode(node)",
								"  connection =>",
								"  getNeighboringNodes(node)",
								"  nodeConnection =>",
								"  isConnected(node1, node2)",
								"  connection =>",
								"  addConnection(node1, node2)",
								"  node =>",
								"  node =>",
								"  connection =>",
								"  addNode(newNode)",
								"  node =>",
								"  findMinimumCyclesFromSource(adjacencyListSourceIndex)",
								"  nodeIndex =>",
								"  findMinimumCycles()",
								"  cycle =>",
								"  edgePair =>",
								"  edge =>",
								"  nodeIndex =>",
								"  cycle =>",
								"  static doArraysContainSameElements(array1, array2)",
								"  static findShortestPath(adjacencyList, source, target)",
								"Node",
								"  constructor(point, connections)",
								"  equals(node)",
								"Node",
								"Edge",
								"  constructor(node1, node2)",
								"  equals(connection)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1707529350.6,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "eagle2svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2302,
						"regions":
						{
						},
						"selection":
						[
							[
								1796,
								1796
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 68,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1705107473.49,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 25.0,
						"translation.y": 1098.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39261,
						"regions":
						{
						},
						"selection":
						[
							[
								38888,
								38889
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1365,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1707529447.15,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 26818.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/eagle/element.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36649,
						"regions":
						{
						},
						"selection":
						[
							[
								15193,
								15911
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 400,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1707529514.24,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7737.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Pink-Noise-Generator-Thomas-Henry.brd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65835,
						"regions":
						{
						},
						"selection":
						[
							[
								47448,
								47855
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 630,
							"show_line_column": "disabled",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1707755491.79,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13179.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/geom/graph.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11224,
						"regions":
						{
						},
						"selection":
						[
							[
								10781,
								10781
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 316,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1708219853.57,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6078.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
