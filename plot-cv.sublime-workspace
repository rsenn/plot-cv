{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ret",
				"return_flag"
			],
			[
				"ImportID",
				"ImportIdMap"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"dbuf_",
				"dbuf_init2"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"has_",
				"has_dot_or_slash"
			],
			[
				"My",
				"MySQLResult"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"CF",
				"CFunctionClosureRecord"
			],
			[
				"js_",
				"js_mysqlresult_class_id"
			],
			[
				"extendA",
				"extendAsyncGenerator"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"MYSQL_TYPE_NEW",
				"MYSQL_TYPE_NEWDECIMAL"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"JS_CF",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"js_mysqlresult_fun",
				"js_mysqlresult_functions"
			],
			[
				"JS_ToCSt",
				"JS_ToCStringLen"
			],
			[
				"js_mysql_f",
				"js_mysql_functions"
			],
			[
				"MARIA",
				"MARIADBCLIENT_LIBRARY"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"depden",
				"dependencyTree"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  value =>\n   (level, message) =>\nAsyncCollect(iter)\nExecTool(cmd, ...args)\nGetMime(file)\nMatcher(pattern, t = arg => arg)\n   (...args) =>\nKeyOrValueMatcher(pattern)\n   ([key, value]) =>\nGetRootDirectories(pattern = '*')\nMakeUUID = (rng = Math.random) =>\n  n =>\n  dd =>\n  d =>\n  d =>\n  d =>\nGetDir(dir)\n  n =>\nDirName(name)\n  it =>\nDateStr(date)\nModeStr(mode)\nHTMLPage = ({ title, style, scripts = [], children, ...props }) =>\n  script =>\nFilterForm = ({ ...props }) =>\nHTMLTable = ({ rows, ...props }) =>\nHTMLTableRow = ({ columns, ...props }) =>\nHTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>\nFileLink = ({ file, ...props }) =>\nFileObject = ({ file, stat = {}, ...props }) =>\nFileTable = ({ files, ...props }) =>\n(a, b) =>\n  field =>\n  file =>\nReadExiv2(file)\n([k, v]) =>\n([k, v]) =>\n([k, v]) =>\n(a, b) =>\n([k, v]) =>\nReadExiftool(file)\n  l =>\n  line =>\n([line, idx]) =>\nHeifConvert(src, dst, quality = 100)\nMagickResize(src, dst, rotate = 0, width, height)\n  main(...args)\n   (a, v) =>\n   (v, pv, o) =>\n   (module, ...args) =>\n  m =>\n  .show = arg =>\n  .cleanup = () =>\n   (...args) =>\n() =>\n  puts(s)\n() =>\nParseBody(gen)\n  .createWS = (url, callbacks, listen) =>\n  .out = s =>\n  test(req, resp)\n  proxy(req, resp)\n  config(req, resp)\n  file(req, resp)\n([dir]) =>\n  f =>\n  file =>\n  uploads(req, resp)\n  s =>\n  files(req, resp)\n  n =>\n([name, type]) =>\n  files2(req, resp)\n   n =>\n  n =>\n  n =>\n(a, b) =>\n  name =>\n  file =>\n  file =>\n([file, rel]) =>\n(acc, [file, st]) =>\n  string(a, b)\n  number(a, b)\n([name, obj]) =>\n({ name }) =>\n  onConnect(ws, req)\n  .sendCommand = function(data)\n  onClose(ws, reason)\n  onHttp(ws, req, resp)\n  onOpen(name, filename)\n  onContent(name, data)\n  onClose(name, file)\n  f = x =>\n  onFinalize()\n   (match, p1, p0, p2, p3, offset) =>\n  onMessage(ws, data)\n  get connections()\n  get by_uuid()\n  uuid(data)\n  onFd(fd, rd, wr)\n  onClose(ws, reason)\n  onMessage(ws, data)\n  quit(why)",
			"settings":
			{
				"buffer_size": 1937,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					624,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12677,
								12705
							],
							[
								12979,
								13008
							],
							[
								13287,
								13314
							],
							[
								13437,
								13468
							],
							[
								13638,
								13655
							],
							[
								13780,
								13800
							],
							[
								13833,
								13850
							],
							[
								13927,
								13944
							],
							[
								14002,
								14017
							],
							[
								14057,
								14074
							],
							[
								14116,
								14130
							],
							[
								14261,
								14266
							],
							[
								14342,
								14351
							],
							[
								14448,
								14471
							],
							[
								15216,
								15232
							],
							[
								15706,
								15732
							],
							[
								15909,
								15920
							],
							[
								16385,
								16401
							],
							[
								16425,
								16430
							],
							[
								16507,
								16520
							],
							[
								17913,
								17960
							],
							[
								18361,
								18383
							],
							[
								18463,
								18479
							],
							[
								18609,
								18625
							],
							[
								19014,
								19050
							],
							[
								19083,
								19087
							],
							[
								19138,
								19178
							],
							[
								19207,
								19211
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					625,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12677,
								12705
							],
							[
								12979,
								13008
							],
							[
								13287,
								13314
							],
							[
								13437,
								13468
							],
							[
								13638,
								13655
							],
							[
								13780,
								13800
							],
							[
								13833,
								13850
							],
							[
								13927,
								13944
							],
							[
								14002,
								14017
							],
							[
								14057,
								14074
							],
							[
								14116,
								14130
							],
							[
								14261,
								14266
							],
							[
								14342,
								14351
							],
							[
								14448,
								14471
							],
							[
								15216,
								15232
							],
							[
								15706,
								15732
							],
							[
								15909,
								15920
							],
							[
								16385,
								16401
							],
							[
								16425,
								16430
							],
							[
								16507,
								16520
							],
							[
								17913,
								17960
							],
							[
								18361,
								18383
							],
							[
								18463,
								18479
							],
							[
								18609,
								18625
							],
							[
								19014,
								19050
							],
							[
								19083,
								19087
							],
							[
								19138,
								19178
							],
							[
								19207,
								19211
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					626,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12677,
								12705
							],
							[
								12979,
								13008
							],
							[
								13287,
								13314
							],
							[
								13437,
								13468
							],
							[
								13638,
								13655
							],
							[
								13780,
								13800
							],
							[
								13833,
								13850
							],
							[
								13927,
								13944
							],
							[
								14002,
								14017
							],
							[
								14057,
								14074
							],
							[
								14116,
								14130
							],
							[
								14261,
								14266
							],
							[
								14342,
								14351
							],
							[
								14448,
								14471
							],
							[
								15216,
								15232
							],
							[
								15706,
								15732
							],
							[
								15909,
								15920
							],
							[
								16385,
								16401
							],
							[
								16425,
								16430
							],
							[
								16507,
								16520
							],
							[
								17913,
								17960
							],
							[
								18361,
								18383
							],
							[
								18463,
								18479
							],
							[
								18609,
								18625
							],
							[
								19014,
								19050
							],
							[
								19083,
								19087
							],
							[
								19138,
								19178
							],
							[
								19207,
								19211
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					627,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					628,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					629,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					630,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AQAAAAAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					631,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					632,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					633,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AQAAAAAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					634,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					635,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BQAAAAAAAAAAAAAALQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0FAABEcmF3TGlzdAogIGNvbnN0cnVjdG9yKCkKICBpbnNlcnQoaXRlbSkKICAgaXQgPT4KICAgaXQgPT4KQWxsUGFyZW50cyhlbGVtKQogIGdldFRyYW5zZm9ybWF0aW9uTGlzdChlKQpEZWNvbXBvc2VUcmFuc2Zvcm1MaXN0KGVsZW0pCiAgZHJhd1JlY3QocmVjdCwgc3Ryb2tlID0gJyMwZjAnKQogIG1haW4oKQogIHN2Z0xheWVyOiAoKSA9PgogIGN1cnJlbnRVUkw6ICgpID0+CiAgY3VycmVudEZpbGU6ICgpID0+ClJlcGFyZW50KGNhbnZhcyA9IGRvY3VtZW50LgooJ2NhbnZhcycpWzBdKQpHZXRFbGVtZW50TWF0cml4KGVsZW1lbnQpClNldENyb3NzaGFpcihwb3MpCkV2ZW50UG9zaXRpb25zKGV2ZW50T3JUb3VjaCkKICBuID0+CiAgbiA9PgooYWNjLCBrZXkpID0+ClBvc2l0aW9uTWF0cml4KGNhbnZhcyA9IGNhbnZhc0VsZW1lbnQsIHJlY3QgPSBjYW52YXNSZWN0KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKICAgcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpCk1vdmVtZW50SXRlcmF0b3IoZWxlbWVudCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUmVwbGF5VHJhaWwodHJhaWwsIHRpbWUgPSBwZXJmb3JtYW5jZS4KICAgKyAyMCkKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpClJlc2l6ZUhhbmRsZXIoZSkKT3JpZW50YXRpb25DaGFuZ2UoZSkKSW5pdCgpCiAgY2FudmFzRWxlbWVudDogKCkgPT4KICBkaXZFbGVtZW50OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KICBkaXZSZWN0OiAoKSA9PgooKSA9PgogICB2YWx1ZSA9PgpTVkdDb21wb25lbnQgPSBwcm9wcyA9PgogIGZ1bmN0aW9uKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CiAgZnVuY3Rpb24oKQooKSA9PgogICAoKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQogIGdldFJlY3QoZWxlbSkKTmV3V1MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgAAAAAAAAAALQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0FAABEcmF3TGlzdAogIGNvbnN0cnVjdG9yKCkKICBpbnNlcnQoaXRlbSkKICAgaXQgPT4KICAgaXQgPT4KQWxsUGFyZW50cyhlbGVtKQogIGdldFRyYW5zZm9ybWF0aW9uTGlzdChlKQpEZWNvbXBvc2VUcmFuc2Zvcm1MaXN0KGVsZW0pCiAgZHJhd1JlY3QocmVjdCwgc3Ryb2tlID0gJyMwZjAnKQogIG1haW4oKQogIHN2Z0xheWVyOiAoKSA9PgogIGN1cnJlbnRVUkw6ICgpID0+CiAgY3VycmVudEZpbGU6ICgpID0+ClJlcGFyZW50KGNhbnZhcyA9IGRvY3VtZW50LgooJ2NhbnZhcycpWzBdKQpHZXRFbGVtZW50TWF0cml4KGVsZW1lbnQpClNldENyb3NzaGFpcihwb3MpCkV2ZW50UG9zaXRpb25zKGV2ZW50T3JUb3VjaCkKICBuID0+CiAgbiA9PgooYWNjLCBrZXkpID0+ClBvc2l0aW9uTWF0cml4KGNhbnZhcyA9IGNhbnZhc0VsZW1lbnQsIHJlY3QgPSBjYW52YXNSZWN0KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKICAgcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpCk1vdmVtZW50SXRlcmF0b3IoZWxlbWVudCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUmVwbGF5VHJhaWwodHJhaWwsIHRpbWUgPSBwZXJmb3JtYW5jZS4KICAgKyAyMCkKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpClJlc2l6ZUhhbmRsZXIoZSkKT3JpZW50YXRpb25DaGFuZ2UoZSkKSW5pdCgpCiAgY2FudmFzRWxlbWVudDogKCkgPT4KICBkaXZFbGVtZW50OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KICBkaXZSZWN0OiAoKSA9PgooKSA9PgogICB2YWx1ZSA9PgpTVkdDb21wb25lbnQgPSBwcm9wcyA9PgogIGZ1bmN0aW9uKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CiAgZnVuY3Rpb24oKQooKSA9PgogICAoKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQogIGdldFJlY3QoZWxlbSkKTmV3V1MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					636,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					637,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9274,
								9297
							],
							[
								9647,
								9673
							],
							[
								9993,
								10022
							],
							[
								10371,
								10375
							],
							[
								10386,
								10392
							],
							[
								10410,
								10415
							],
							[
								10442,
								10446
							],
							[
								10907,
								10930
							],
							[
								11037,
								11060
							],
							[
								11140,
								11181
							],
							[
								11186,
								11187
							],
							[
								11239,
								11276
							],
							[
								11647,
								11672
							],
							[
								11967,
								12016
							],
							[
								12021,
								12027
							],
							[
								12684,
								12712
							],
							[
								12986,
								13015
							],
							[
								13294,
								13321
							],
							[
								13444,
								13475
							],
							[
								13645,
								13662
							],
							[
								13787,
								13807
							],
							[
								13840,
								13857
							],
							[
								13934,
								13951
							],
							[
								14009,
								14024
							],
							[
								14064,
								14081
							],
							[
								14123,
								14137
							],
							[
								14268,
								14273
							],
							[
								14349,
								14358
							],
							[
								14455,
								14478
							],
							[
								15223,
								15239
							],
							[
								15713,
								15739
							],
							[
								15916,
								15927
							],
							[
								16392,
								16408
							],
							[
								16432,
								16437
							],
							[
								16514,
								16527
							],
							[
								17920,
								17967
							],
							[
								18368,
								18390
							],
							[
								18470,
								18486
							],
							[
								18616,
								18632
							],
							[
								19021,
								19057
							],
							[
								19090,
								19094
							],
							[
								19145,
								19185
							],
							[
								19214,
								19218
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					638,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					639,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9276,
								9299
							],
							[
								9649,
								9675
							],
							[
								9995,
								10024
							],
							[
								10373,
								10377
							],
							[
								10388,
								10394
							],
							[
								10412,
								10417
							],
							[
								10444,
								10448
							],
							[
								10909,
								10932
							],
							[
								11039,
								11062
							],
							[
								11142,
								11183
							],
							[
								11188,
								11189
							],
							[
								11241,
								11278
							],
							[
								11649,
								11674
							],
							[
								11969,
								12018
							],
							[
								12023,
								12029
							],
							[
								12675,
								12703
							],
							[
								12977,
								13006
							],
							[
								13293,
								13320
							],
							[
								13443,
								13474
							],
							[
								13644,
								13661
							],
							[
								13786,
								13806
							],
							[
								13839,
								13856
							],
							[
								13933,
								13950
							],
							[
								14008,
								14023
							],
							[
								14063,
								14080
							],
							[
								14122,
								14136
							],
							[
								14267,
								14272
							],
							[
								14348,
								14357
							],
							[
								14454,
								14477
							],
							[
								15222,
								15238
							],
							[
								15712,
								15738
							],
							[
								15915,
								15926
							],
							[
								16391,
								16407
							],
							[
								16431,
								16436
							],
							[
								16513,
								16526
							],
							[
								17919,
								17966
							],
							[
								18367,
								18389
							],
							[
								18469,
								18485
							],
							[
								18615,
								18631
							],
							[
								19030,
								19066
							],
							[
								19099,
								19103
							],
							[
								19154,
								19194
							],
							[
								19223,
								19227
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BQAAAAAAAAAAAAAALQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0FAABEcmF3TGlzdAogIGNvbnN0cnVjdG9yKCkKICBpbnNlcnQoaXRlbSkKICAgaXQgPT4KICAgaXQgPT4KQWxsUGFyZW50cyhlbGVtKQogIGdldFRyYW5zZm9ybWF0aW9uTGlzdChlKQpEZWNvbXBvc2VUcmFuc2Zvcm1MaXN0KGVsZW0pCiAgZHJhd1JlY3QocmVjdCwgc3Ryb2tlID0gJyMwZjAnKQogIG1haW4oKQogIHN2Z0xheWVyOiAoKSA9PgogIGN1cnJlbnRVUkw6ICgpID0+CiAgY3VycmVudEZpbGU6ICgpID0+ClJlcGFyZW50KGNhbnZhcyA9IGRvY3VtZW50LgooJ2NhbnZhcycpWzBdKQpHZXRFbGVtZW50TWF0cml4KGVsZW1lbnQpClNldENyb3NzaGFpcihwb3MpCkV2ZW50UG9zaXRpb25zKGV2ZW50T3JUb3VjaCkKICBuID0+CiAgbiA9PgooYWNjLCBrZXkpID0+ClBvc2l0aW9uTWF0cml4KGNhbnZhcyA9IGNhbnZhc0VsZW1lbnQsIHJlY3QgPSBjYW52YXNSZWN0KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKICAgcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpCk1vdmVtZW50SXRlcmF0b3IoZWxlbWVudCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUmVwbGF5VHJhaWwodHJhaWwsIHRpbWUgPSBwZXJmb3JtYW5jZS4KICAgKyAyMCkKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpClJlc2l6ZUhhbmRsZXIoZSkKT3JpZW50YXRpb25DaGFuZ2UoZSkKSW5pdCgpCiAgY2FudmFzRWxlbWVudDogKCkgPT4KICBkaXZFbGVtZW50OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KICBkaXZSZWN0OiAoKSA9PgooKSA9PgogICB2YWx1ZSA9PgpTVkdDb21wb25lbnQgPSBwcm9wcyA9PgogIGZ1bmN0aW9uKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CiAgZnVuY3Rpb24oKQooKSA9PgogICAoKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQogIGdldFJlY3QoZWxlbSkKTmV3V1MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgAAAAAAAAAALQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0FAABEcmF3TGlzdAogIGNvbnN0cnVjdG9yKCkKICBpbnNlcnQoaXRlbSkKICAgaXQgPT4KICAgaXQgPT4KQWxsUGFyZW50cyhlbGVtKQogIGdldFRyYW5zZm9ybWF0aW9uTGlzdChlKQpEZWNvbXBvc2VUcmFuc2Zvcm1MaXN0KGVsZW0pCiAgZHJhd1JlY3QocmVjdCwgc3Ryb2tlID0gJyMwZjAnKQogIG1haW4oKQogIHN2Z0xheWVyOiAoKSA9PgogIGN1cnJlbnRVUkw6ICgpID0+CiAgY3VycmVudEZpbGU6ICgpID0+ClJlcGFyZW50KGNhbnZhcyA9IGRvY3VtZW50LgooJ2NhbnZhcycpWzBdKQpHZXRFbGVtZW50TWF0cml4KGVsZW1lbnQpClNldENyb3NzaGFpcihwb3MpCkV2ZW50UG9zaXRpb25zKGV2ZW50T3JUb3VjaCkKICBuID0+CiAgbiA9PgooYWNjLCBrZXkpID0+ClBvc2l0aW9uTWF0cml4KGNhbnZhcyA9IGNhbnZhc0VsZW1lbnQsIHJlY3QgPSBjYW52YXNSZWN0KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKICAgcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpCk1vdmVtZW50SXRlcmF0b3IoZWxlbWVudCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUmVwbGF5VHJhaWwodHJhaWwsIHRpbWUgPSBwZXJmb3JtYW5jZS4KICAgKyAyMCkKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpClJlc2l6ZUhhbmRsZXIoZSkKT3JpZW50YXRpb25DaGFuZ2UoZSkKSW5pdCgpCiAgY2FudmFzRWxlbWVudDogKCkgPT4KICBkaXZFbGVtZW50OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KICBkaXZSZWN0OiAoKSA9PgooKSA9PgogICB2YWx1ZSA9PgpTVkdDb21wb25lbnQgPSBwcm9wcyA9PgogIGZ1bmN0aW9uKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CiAgZnVuY3Rpb24oKQooKSA9PgogICAoKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQogIGdldFJlY3QoZWxlbSkKTmV3V1MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					640,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1526,
								1534
							],
							[
								1558,
								1571
							],
							[
								1594,
								1606
							],
							[
								1643,
								1649
							],
							[
								2207,
								2213
							],
							[
								2569,
								2595
							],
							[
								2737,
								2770
							],
							[
								2872,
								2909
							],
							[
								3132,
								3172
							],
							[
								3352,
								3367
							],
							[
								3405,
								3420
							],
							[
								3929,
								3946
							],
							[
								3981,
								3999
							],
							[
								4276,
								4314
							],
							[
								4334,
								4348
							],
							[
								4461,
								4497
							],
							[
								4596,
								4624
							],
							[
								4869,
								4908
							],
							[
								4983,
								4987
							],
							[
								5042,
								5046
							],
							[
								5099,
								5112
							],
							[
								5228,
								5296
							],
							[
								5618,
								5689
							],
							[
								5744,
								5751
							],
							[
								5814,
								5845
							],
							[
								5892,
								5933
							],
							[
								7237,
								7246
							],
							[
								7909,
								7930
							],
							[
								7973,
								7991
							],
							[
								8072,
								8091
							],
							[
								8117,
								8138
							],
							[
								8293,
								8310
							],
							[
								8684,
								8693
							],
							[
								9276,
								9299
							],
							[
								9649,
								9675
							],
							[
								9995,
								10024
							],
							[
								10373,
								10377
							],
							[
								10388,
								10394
							],
							[
								10412,
								10417
							],
							[
								10444,
								10448
							],
							[
								10909,
								10932
							],
							[
								11039,
								11062
							],
							[
								11142,
								11183
							],
							[
								11188,
								11189
							],
							[
								11241,
								11278
							],
							[
								11649,
								11674
							],
							[
								11969,
								12018
							],
							[
								12023,
								12029
							],
							[
								12679,
								12707
							],
							[
								12981,
								13010
							],
							[
								13297,
								13324
							],
							[
								13447,
								13478
							],
							[
								13648,
								13665
							],
							[
								13790,
								13810
							],
							[
								13843,
								13860
							],
							[
								13937,
								13954
							],
							[
								14012,
								14027
							],
							[
								14067,
								14084
							],
							[
								14126,
								14140
							],
							[
								14271,
								14276
							],
							[
								14352,
								14361
							],
							[
								14458,
								14481
							],
							[
								15226,
								15242
							],
							[
								15716,
								15742
							],
							[
								15919,
								15930
							],
							[
								16395,
								16411
							],
							[
								16435,
								16440
							],
							[
								16517,
								16530
							],
							[
								17923,
								17970
							],
							[
								18371,
								18393
							],
							[
								18473,
								18489
							],
							[
								18619,
								18635
							],
							[
								19034,
								19070
							],
							[
								19103,
								19107
							],
							[
								19158,
								19198
							],
							[
								19227,
								19231
							]
						],
						"symlist":
						[
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function main()",
							"svgLayer: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							" function GetElementMatrix(element)",
							" function SetCrosshair(pos)",
							" function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							" function PositionMatrix(canvas = canvasElement, rect = canvasRect)",
							" function PositionProcessor(canvas = canvasElement, rect = canvasRect)",
							" pos =>",
							" function ProcessPosition(pos)",
							"async function* MovementIterator(element)",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function ReplayTrail(trail, time = performance.",
							" + 20)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							" function ResizeHandler(e)",
							" function OrientationChange(e)",
							" function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"windowRect: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"divRect: () =>",
							"() =>",
							" value =>",
							"SVGComponent = props =>",
							"async function()",
							" function KeyHandler(key)",
							"async () =>",
							"async function()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							"function getRect(elem)",
							"function NewWS()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAC0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					641,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.html",
						"symkeys":
						[
							[
								194,
								210
							],
							[
								292,
								296
							],
							[
								398,
								419
							],
							[
								463,
								469
							],
							[
								524,
								531
							],
							[
								664,
								670
							],
							[
								739,
								746
							],
							[
								1124,
								1130
							],
							[
								1464,
								1470
							],
							[
								1492,
								1501
							]
						],
						"symlist":
						[
							"body, html",
							"body",
							"canvas, #canvas",
							"canvas",
							"#canvas",
							"canvas",
							"#canvas",
							"canvas",
							"canvas",
							"crosshair"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAARHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCiAgIGl0ID0+CiAgIGl0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKICBtYWluKCkKICBzdmdMYXllcjogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSBjYW52YXNFbGVtZW50LCByZWN0ID0gY2FudmFzUmVjdCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gY2FudmFzRWxlbWVudCwgcmVjdCA9IGNhbnZhc1JlY3QpCiAgIHBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpNb3ZlbWVudEl0ZXJhdG9yKGVsZW1lbnQpCih2LCBpKSA9PgpMb29wKCkKICBsb2cgPSAodCwgbmFtZSkgPT4KICBmaXJlID0gKC4uLmFyZ3MpID0+CiAgcmVkcmF3ID0gKC4uLmFyZ3MpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAgKCkgPT4KICAgdiA9PgogIGIgPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCiAgICsgMjApClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQpSZXNpemVIYW5kbGVyKGUpCk9yaWVudGF0aW9uQ2hhbmdlKGUpCkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CiAgZGl2UmVjdDogKCkgPT4KKCkgPT4KICAgdmFsdWUgPT4KU1ZHQ29tcG9uZW50ID0gcHJvcHMgPT4KICBmdW5jdGlvbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgogIGZ1bmN0aW9uKCkKKCkgPT4KICAgKCkgPT4KU2VuZFRyYWlsKHN0YXJ0ID0gdGltZWdlbi5zdGFydCkKICBnZXRSZWN0KGVsZW0pCk5ld1dTKCkKICBmdW5jdGlvbigpCk1ha2VVVUlEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4KTWFrZUNsaWVudElEKHJuZyA9IE1hdGgucmFuZG9tKQogIG4gPT4AAAAAAAAAAGUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					642,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2012,
								2020
							],
							[
								2036,
								2056
							],
							[
								2585,
								2618
							],
							[
								2708,
								2739
							],
							[
								3065,
								3087
							],
							[
								3301,
								3342
							],
							[
								3353,
								3366
							],
							[
								3444,
								3479
							],
							[
								3524,
								3542
							],
							[
								3578,
								3620
							],
							[
								3686,
								3719
							],
							[
								3741,
								3745
							],
							[
								4134,
								4139
							],
							[
								4189,
								4193
							],
							[
								4220,
								4224
							],
							[
								4252,
								4256
							],
							[
								4279,
								4299
							],
							[
								4353,
								4357
							],
							[
								4427,
								4449
							],
							[
								4539,
								4544
							],
							[
								4576,
								4598
							],
							[
								4792,
								4814
							],
							[
								5237,
								5303
							],
							[
								5649,
								5658
							],
							[
								5763,
								5793
							],
							[
								6154,
								6189
							],
							[
								6221,
								6262
							],
							[
								6294,
								6360
							],
							[
								6393,
								6427
							],
							[
								6498,
								6545
							],
							[
								7081,
								7117
							],
							[
								7230,
								7239
							],
							[
								7475,
								7483
							],
							[
								7589,
								7596
							],
							[
								7646,
								7670
							],
							[
								8051,
								8062
							],
							[
								8152,
								8163
							],
							[
								8227,
								8238
							],
							[
								8292,
								8301
							],
							[
								8339,
								8350
							],
							[
								8438,
								8465
							],
							[
								8603,
								8607
							],
							[
								8631,
								8638
							],
							[
								8671,
								8687
							],
							[
								8816,
								8861
							],
							[
								9077,
								9135
							],
							[
								9447,
								9469
							],
							[
								9842,
								9852
							],
							[
								10096,
								10110
							],
							[
								11045,
								11069
							],
							[
								11195,
								11199
							],
							[
								11291,
								11305
							],
							[
								11405,
								11421
							],
							[
								11853,
								11866
							],
							[
								11884,
								11889
							],
							[
								11971,
								11978
							],
							[
								12006,
								12011
							],
							[
								12133,
								12158
							],
							[
								12333,
								12372
							],
							[
								12449,
								12460
							],
							[
								14039,
								14070
							],
							[
								14600,
								14633
							],
							[
								14905,
								14940
							],
							[
								15025,
								15058
							],
							[
								16002,
								16012
							],
							[
								16806,
								16810
							],
							[
								17226,
								17233
							],
							[
								17626,
								17662
							],
							[
								17874,
								17878
							],
							[
								18503,
								18535
							],
							[
								18828,
								18832
							],
							[
								19302,
								19319
							],
							[
								19464,
								19499
							],
							[
								20253,
								20258
							],
							[
								20985,
								20989
							],
							[
								21083,
								21087
							],
							[
								21207,
								21216
							],
							[
								21346,
								21353
							],
							[
								21634,
								21641
							],
							[
								21722,
								21729
							],
							[
								21793,
								21809
							],
							[
								21874,
								21894
							],
							[
								22593,
								22605
							],
							[
								22704,
								22716
							],
							[
								22918,
								22934
							],
							[
								23028,
								23041
							],
							[
								23317,
								23335
							],
							[
								23525,
								23554
							],
							[
								23962,
								23981
							],
							[
								24414,
								24435
							],
							[
								26026,
								26048
							],
							[
								26521,
								26542
							],
							[
								27093,
								27112
							],
							[
								27546,
								27554
							],
							[
								30257,
								30269
							],
							[
								32084,
								32119
							],
							[
								32702,
								32721
							],
							[
								32903,
								32920
							],
							[
								32965,
								32978
							],
							[
								33014,
								33024
							],
							[
								33878,
								33894
							],
							[
								34026,
								34045
							],
							[
								34056,
								34075
							],
							[
								34101,
								34121
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlAAAAICBib2R5LCBodG1sCiAgYm9keQogIGNhbnZhcywgI2NhbnZhcwogIGNhbnZhcwojY2FudmFzCiAgY2FudmFzCiNjYW52YXMKICBjYW52YXMKICBjYW52YXMKICBjcm9zc2hhaXIAAAAAAAAAAJEHAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					643,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACRBwAAICB2YWx1ZSA9PgogICAobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpFeGVjVG9vbChjbWQsIC4uLmFyZ3MpCkdldE1pbWUoZmlsZSkKTWF0Y2hlcihwYXR0ZXJuLCB0ID0gYXJnID0+IGFyZykKICAgKC4uLmFyZ3MpID0+CktleU9yVmFsdWVNYXRjaGVyKHBhdHRlcm4pCiAgIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAgKGEsIHYpID0+CiAgICh2LCBwdiwgbykgPT4KICAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KUGFyc2VCb2R5KGdlbikKICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAub3V0ID0gcyA9PgogIHRlc3QocmVxLCByZXNwKQogIHByb3h5KHJlcSwgcmVzcCkKICBjb25maWcocmVxLCByZXNwKQogIGZpbGUocmVxLCByZXNwKQooW2Rpcl0pID0+CiAgZiA9PgogIGZpbGUgPT4KICB1cGxvYWRzKHJlcSwgcmVzcCkKICBzID0+CiAgZmlsZXMocmVxLCByZXNwKQogIG4gPT4KKFtuYW1lLCB0eXBlXSkgPT4KICBmaWxlczIocmVxLCByZXNwKQogICBuID0+CiAgbiA9PgogIG4gPT4KKGEsIGIpID0+CiAgbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CihbZmlsZSwgcmVsXSkgPT4KKGFjYywgW2ZpbGUsIHN0XSkgPT4KICBzdHJpbmcoYSwgYikKICBudW1iZXIoYSwgYikKKFtuYW1lLCBvYmpdKSA9PgooeyBuYW1lIH0pID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRDb21tYW5kID0gZnVuY3Rpb24oZGF0YSkKICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25IdHRwKHdzLCByZXEsIHJlc3ApCiAgb25PcGVuKG5hbWUsIGZpbGVuYW1lKQogIG9uQ29udGVudChuYW1lLCBkYXRhKQogIG9uQ2xvc2UobmFtZSwgZmlsZSkKICBmID0geCA9PgogIG9uRmluYWxpemUoKQogICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IGJ5X3V1aWQoKQogIHV1aWQoZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					644,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
						"symkeys":
						[
							[
								340,
								396
							],
							[
								506,
								533
							],
							[
								741,
								777
							],
							[
								1157,
								1194
							],
							[
								1260,
								1270
							],
							[
								1318,
								1328
							],
							[
								1368,
								1373
							],
							[
								1427,
								1452
							],
							[
								1932,
								1960
							],
							[
								2313,
								2316
							],
							[
								2334,
								2354
							],
							[
								2735,
								2740
							],
							[
								2909,
								2921
							],
							[
								2959,
								2972
							],
							[
								3069,
								3082
							],
							[
								3416,
								3422
							],
							[
								3429,
								3438
							],
							[
								3544,
								3552
							],
							[
								3754,
								3769
							],
							[
								4009,
								4037
							],
							[
								4321,
								4331
							],
							[
								4542,
								4548
							],
							[
								4760,
								4774
							],
							[
								5395,
								5442
							],
							[
								5585,
								5601
							],
							[
								6273,
								6291
							],
							[
								6460,
								6478
							],
							[
								7190,
								7224
							],
							[
								7504,
								7509
							],
							[
								7603,
								7620
							],
							[
								8514,
								8530
							],
							[
								8619,
								8651
							],
							[
								9058,
								9076
							],
							[
								9127,
								9144
							],
							[
								9248,
								9253
							],
							[
								9304,
								9310
							],
							[
								9420,
								9440
							],
							[
								9537,
								9572
							],
							[
								9712,
								9726
							],
							[
								9744,
								9766
							],
							[
								9875,
								9879
							]
						],
						"symlist":
						[
							"function MakePrompt(prefix, suffix, commandMode = false)",
							"function FromDomain(buffer)",
							"function WriteFile(filename, buffer)",
							"function ToDomain(str, alpha = false)",
							" (a, s) =>",
							" (a, s) =>",
							"ch =>",
							"function DNSQuery(domain)",
							"function DNSResponse(buffer)",
							"CLI",
							"constructor(prompt2)",
							"() =>",
							"(...args) =>",
							" (...args) =>",
							"(acc, arg) =>",
							"help()",
							"show(arg)",
							"escape()",
							"handleCmd(data)",
							"async function main(...args)",
							" (a, v) =>",
							" () =>",
							" arg =>",
							" function createWS(url, callbacks, listen = 0)",
							" (level, msg) =>",
							"body: function* ()",
							"onConnect(ws, req)",
							"onClose(ws, status, reason, error)",
							"() =>",
							"onHttp(req, resp)",
							"onFd(fd, rd, wr)",
							"onMessage(ws, msg, first, final)",
							"onError(ws, error)",
							"get connections()",
							"() =>",
							"err =>",
							" function quit(why)",
							"function GetOpt(options = {}, args)",
							"findOpt = a =>",
							"([optname, option]) =>",
							"o =>"
						]
					},
					"AQAAAAAAAAAAAAAA1gIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					645,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/container/multibimap.js",
						"symkeys":
						[
							[
								21,
								25
							],
							[
								30,
								43
							],
							[
								79,
								96
							],
							[
								200,
								206
							],
							[
								229,
								238
							],
							[
								330,
								336
							],
							[
								374,
								383
							],
							[
								505,
								517
							],
							[
								646,
								652
							],
							[
								690,
								698
							],
							[
								820,
								830
							],
							[
								835,
								857
							],
							[
								1050,
								1059
							],
							[
								1143,
								1152
							],
							[
								1236,
								1256
							],
							[
								1594,
								1598
							],
							[
								1647,
								1651
							],
							[
								1771,
								1775
							],
							[
								1889,
								1893
							],
							[
								2002,
								2011
							],
							[
								2081,
								2090
							],
							[
								2131,
								2140
							],
							[
								2181,
								2193
							],
							[
								2299,
								2311
							],
							[
								2365,
								2377
							],
							[
								2582,
								2588
							],
							[
								2683,
								2691
							],
							[
								2791,
								2824
							],
							[
								2871,
								2875
							],
							[
								2928,
								2959
							]
						],
						"symlist":
						[
							"_Map",
							"constructor()",
							"addIterable(k, v)",
							"val =>",
							"add(k, v)",
							"get(k)",
							"has(k, v)",
							"delete(k, v)",
							"keys()",
							"values()",
							"MultiBiMap",
							"constructor(opts = {})",
							"getKey(k)",
							"getVal(v)",
							"add(k, v, opts = {})",
							"k =>",
							"v =>",
							"k =>",
							"v =>",
							"has(k, v)",
							"hasKey(k)",
							"hasVal(v)",
							"delete(k, v)",
							"deleteKey(k)",
							"deleteVal(v)",
							"keys()",
							"values()",
							"function deleteAll(a, aMap, bMap)",
							"b =>",
							"function deleteOnly(a, b, aMap)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADWAgAATWFrZVByb21wdChwcmVmaXgsIHN1ZmZpeCwgY29tbWFuZE1vZGUgPSBmYWxzZSkKRnJvbURvbWFpbihidWZmZXIpCldyaXRlRmlsZShmaWxlbmFtZSwgYnVmZmVyKQpUb0RvbWFpbihzdHIsIGFscGhhID0gZmFsc2UpCiAgIChhLCBzKSA9PgogICAoYSwgcykgPT4KICBjaCA9PgpETlNRdWVyeShkb21haW4pCkROU1Jlc3BvbnNlKGJ1ZmZlcikKQ0xJCiAgY29uc3RydWN0b3IocHJvbXB0MikKKCkgPT4KKC4uLmFyZ3MpID0+CiAgICguLi5hcmdzKSA9PgooYWNjLCBhcmcpID0+CiAgaGVscCgpCiAgc2hvdyhhcmcpCiAgZXNjYXBlKCkKICBoYW5kbGVDbWQoZGF0YSkKICBtYWluKC4uLmFyZ3MpCiAgIChhLCB2KSA9PgogICAoKSA9PgogICBhcmcgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuID0gMCkKICAgKGxldmVsLCBtc2cpID0+CiAgYm9keTogZnVuY3Rpb24qKCkKICBvbkNvbm5lY3Qod3MsIHJlcSkKICBvbkNsb3NlKHdzLCBzdGF0dXMsIHJlYXNvbiwgZXJyb3IpCigpID0+CiAgb25IdHRwKHJlcSwgcmVzcCkKICBvbkZkKGZkLCByZCwgd3IpCiAgb25NZXNzYWdlKHdzLCBtc2csIGZpcnN0LCBmaW5hbCkKICBvbkVycm9yKHdzLCBlcnJvcikKICBnZXQgY29ubmVjdGlvbnMoKQooKSA9PgogIGVyciA9PgogIHF1aXQod2h5KQpHZXRPcHQob3B0aW9ucyA9IHt9LCBhcmdzKQogIGZpbmRPcHQgPSBhID0+Cihbb3B0bmFtZSwgb3B0aW9uXSkgPT4KICBvID0+AAAAAAAAAACGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					646,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/container/deque.js",
						"symkeys":
						[
							[
								71,
								96
							],
							[
								338,
								388
							],
							[
								609,
								657
							],
							[
								1511,
								1553
							],
							[
								1778,
								1824
							],
							[
								2075,
								2129
							],
							[
								3217,
								3269
							],
							[
								3436,
								3490
							],
							[
								3575,
								3622
							],
							[
								3858,
								3908
							],
							[
								3944,
								3990
							],
							[
								4208,
								4260
							],
							[
								4303,
								4308
							],
							[
								4329,
								4334
							],
							[
								4355,
								4360
							],
							[
								4385,
								4390
							],
							[
								4408,
								4413
							],
							[
								4437,
								4442
							],
							[
								4458,
								4463
							],
							[
								4488,
								4493
							],
							[
								4513,
								4518
							],
							[
								4542,
								4547
							],
							[
								4564,
								4569
							],
							[
								4590,
								4595
							],
							[
								4612,
								4617
							],
							[
								4638,
								4643
							],
							[
								4661,
								4666
							],
							[
								4686,
								4691
							],
							[
								4734,
								4739
							],
							[
								4765,
								4770
							],
							[
								4805,
								4810
							],
							[
								4852,
								4920
							],
							[
								5021,
								5083
							],
							[
								5404,
								5457
							],
							[
								5575,
								5598
							],
							[
								5749,
								5779
							]
						],
						"symlist":
						[
							" function Deque(capacity)",
							"Deque.prototype.toArray = function Deque$toArray()",
							"Deque.prototype.push = function Deque$push(item)",
							"Deque.prototype.pop = function Deque$pop()",
							"Deque.prototype.shift = function Deque$shift()",
							"Deque.prototype.unshift = function Deque$unshift(item)",
							"Deque.prototype.peekBack = function Deque$peekBack()",
							"Deque.prototype.peekFront = function Deque$peekFront()",
							"Deque.prototype.get = function Deque$get(index)",
							"Deque.prototype.isEmpty = function Deque$isEmpty()",
							"Deque.prototype.clear = function Deque$clear()",
							"Deque.prototype.toString = function Deque$toString()",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"Deque",
							"get()",
							"set()",
							"Deque.prototype._checkCapacity = function Deque$_checkCapacity(size)",
							"Deque.prototype._resizeTo = function Deque$_resizeTo(capacity)",
							"function arrayMove(src, srcIndex, dst, dstIndex, len)",
							"function pow2AtLeast(n)",
							"function getCapacity(capacity)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAQAAICBfTWFwCiAgY29uc3RydWN0b3IoKQogIGFkZEl0ZXJhYmxlKGssIHYpCiAgdmFsID0+CiAgYWRkKGssIHYpCiAgZ2V0KGspCiAgaGFzKGssIHYpCiAgZGVsZXRlKGssIHYpCiAga2V5cygpCiAgdmFsdWVzKCkKTXVsdGlCaU1hcAogIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkKICBnZXRLZXkoaykKICBnZXRWYWwodikKICBhZGQoaywgdiwgb3B0cyA9IHt9KQogIGsgPT4KICB2ID0+CiAgayA9PgogIHYgPT4KICBoYXMoaywgdikKICBoYXNLZXkoaykKICBoYXNWYWwodikKICBkZWxldGUoaywgdikKICBkZWxldGVLZXkoaykKICBkZWxldGVWYWwodikKICBrZXlzKCkKICB2YWx1ZXMoKQogIGRlbGV0ZUFsbChhLCBhTWFwLCBiTWFwKQogIGIgPT4KICBkZWxldGVPbmx5KGEsIGIsIGFNYXApAAAAAAAAAACJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					647,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/container/sortedMap.js",
						"symkeys":
						[
							[
								97,
								120
							],
							[
								190,
								220
							],
							[
								513,
								522
							],
							[
								864,
								908
							],
							[
								1181,
								1188
							],
							[
								1245,
								1256
							],
							[
								1420,
								1430
							],
							[
								1514,
								1530
							],
							[
								1626,
								1632
							],
							[
								1685,
								1698
							],
							[
								1801,
								1813
							],
							[
								1840,
								1844
							],
							[
								1866,
								1876
							],
							[
								2008,
								2021
							],
							[
								2230,
								2239
							],
							[
								2316,
								2325
							],
							[
								2355,
								2364
							]
						],
						"symlist":
						[
							"CMP_DEFAULT = (a, b) =>",
							"function bisect(arr, cmp, val)",
							"SortedMap",
							"constructor(entries = [], cmp = CMP_DEFAULT)",
							"clear()",
							"delete(key)",
							"*entries()",
							"forEach(f, that)",
							"keys()",
							"findKey(pred)",
							"keyOf(value)",
							"v =>",
							"find(pred)",
							"set(key, val)",
							"*values()",
							"SortedMap",
							"SortedMap"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACJAwAARGVxdWUoY2FwYWNpdHkpCkRlcXVlLnByb3RvdHlwZS50b0FycmF5ID0gZnVuY3Rpb24gRGVxdWUkdG9BcnJheSgpCkRlcXVlLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gRGVxdWUkcHVzaChpdGVtKQpEZXF1ZS5wcm90b3R5cGUucG9wID0gZnVuY3Rpb24gRGVxdWUkcG9wKCkKRGVxdWUucHJvdG90eXBlLnNoaWZ0ID0gZnVuY3Rpb24gRGVxdWUkc2hpZnQoKQpEZXF1ZS5wcm90b3R5cGUudW5zaGlmdCA9IGZ1bmN0aW9uIERlcXVlJHVuc2hpZnQoaXRlbSkKRGVxdWUucHJvdG90eXBlLnBlZWtCYWNrID0gZnVuY3Rpb24gRGVxdWUkcGVla0JhY2soKQpEZXF1ZS5wcm90b3R5cGUucGVla0Zyb250ID0gZnVuY3Rpb24gRGVxdWUkcGVla0Zyb250KCkKRGVxdWUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIERlcXVlJGdldChpbmRleCkKRGVxdWUucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbiBEZXF1ZSRpc0VtcHR5KCkKRGVxdWUucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gRGVxdWUkY2xlYXIoKQpEZXF1ZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiBEZXF1ZSR0b1N0cmluZygpCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCkRlcXVlCiAgZ2V0KCkKICBzZXQoKQpEZXF1ZS5wcm90b3R5cGUuX2NoZWNrQ2FwYWNpdHkgPSBmdW5jdGlvbiBEZXF1ZSRfY2hlY2tDYXBhY2l0eShzaXplKQpEZXF1ZS5wcm90b3R5cGUuX3Jlc2l6ZVRvID0gZnVuY3Rpb24gRGVxdWUkX3Jlc2l6ZVRvKGNhcGFjaXR5KQogIGFycmF5TW92ZShzcmMsIHNyY0luZGV4LCBkc3QsIGRzdEluZGV4LCBsZW4pCiAgcG93MkF0TGVhc3QobikKICBnZXRDYXBhY2l0eShjYXBhY2l0eSkAAAAAAAAAAAgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					648,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/container/binaryTree.js",
						"symkeys":
						[
							[
								1,
								48
							],
							[
								108,
								112
							],
							[
								299,
								327
							],
							[
								502,
								536
							],
							[
								593,
								629
							],
							[
								878,
								888
							],
							[
								916,
								936
							],
							[
								1114,
								1133
							],
							[
								1189,
								1202
							],
							[
								1242,
								1256
							],
							[
								1297,
								1312
							],
							[
								1355,
								1378
							],
							[
								1486,
								1510
							],
							[
								1620,
								1645
							]
						],
						"symlist":
						[
							"function Node(value, left = null, right = null)",
							"Node",
							"Node.fromArray = function(a)",
							"Node.prototype.isLeaf = function()",
							"Node.prototype.toSource = function()",
							"BinaryTree",
							"constructor(...args)",
							"static fromArray(a)",
							"get inOrder()",
							"get preOrder()",
							"get postOrder()",
							"function* inOrder(node)",
							"function* preOrder(node)",
							"function* postOrder(node)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAQAAQ01QX0RFRkFVTFQgPSAoYSwgYikgPT4KICBiaXNlY3QoYXJyLCBjbXAsIHZhbCkKU29ydGVkTWFwCiAgY29uc3RydWN0b3IoZW50cmllcyA9IFtdLCBjbXAgPSBDTVBfREVGQVVMVCkKICBjbGVhcigpCiAgZGVsZXRlKGtleSkKKmVudHJpZXMoKQogIGZvckVhY2goZiwgdGhhdCkKICBrZXlzKCkKICBmaW5kS2V5KHByZWQpCiAga2V5T2YodmFsdWUpCiAgdiA9PgogIGZpbmQocHJlZCkKICBzZXQoa2V5LCB2YWwpCip2YWx1ZXMoKQpTb3J0ZWRNYXAKU29ydGVkTWFwAAAAAAAAAAAuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					649,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/container/linkedList.js",
						"symkeys":
						[
							[
								13,
								27
							],
							[
								63,
								79
							],
							[
								124,
								134
							],
							[
								187,
								209
							],
							[
								320,
								328
							],
							[
								382,
								393
							],
							[
								618,
								630
							],
							[
								798,
								823
							],
							[
								1153,
								1164
							],
							[
								1211,
								1221
							],
							[
								1280,
								1290
							],
							[
								1349,
								1361
							],
							[
								1469,
								1524
							],
							[
								1626,
								1631
							],
							[
								1689,
								1695
							],
							[
								2626,
								2662
							],
							[
								3065,
								3102
							],
							[
								3448,
								3459
							],
							[
								4473,
								4485
							],
							[
								4904,
								4916
							],
							[
								5335,
								5345
							],
							[
								5567,
								5576
							],
							[
								5621,
								5637
							]
						],
						"symlist":
						[
							"LinkedListItem",
							"constructor(val)",
							"LinkedList",
							"constructor(...values)",
							"value =>",
							"*iterator()",
							"search(pred)",
							"insertBefore(value, pred)",
							"get items()",
							"get head()",
							"get tail()",
							"get length()",
							"insert(val, previousItem, checkDuplicates /**/ = false)",
							"() =>",
							" it =>",
							"append(val, checkDuplicates = false)",
							"prepend(val, checkDuplicates = false)",
							"remove(val)",
							"removeHead()",
							"removeTail()",
							"first(num)",
							"toArray()",
							"isDuplicate(val)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAuAQAATm9kZSh2YWx1ZSwgbGVmdCA9IG51bGwsIHJpZ2h0ID0gbnVsbCkKTm9kZQpOb2RlLmZyb21BcnJheSA9IGZ1bmN0aW9uKGEpCk5vZGUucHJvdG90eXBlLmlzTGVhZiA9IGZ1bmN0aW9uKCkKTm9kZS5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCkJpbmFyeVRyZWUKICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIHN0YXRpYyBmcm9tQXJyYXkoYSkKICBnZXQgaW5PcmRlcigpCiAgZ2V0IHByZU9yZGVyKCkKICBnZXQgcG9zdE9yZGVyKCkKICBpbk9yZGVyKG5vZGUpCiAgcHJlT3JkZXIobm9kZSkKICBwb3N0T3JkZXIobm9kZSkAAAAAAAAAAK4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					650,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/preact/test/browser/svg.test.js",
						"symkeys":
						[
							[
								166,
								172
							],
							[
								202,
								207
							],
							[
								255,
								260
							],
							[
								324,
								330
							],
							[
								1076,
								1082
							],
							[
								1287,
								1293
							],
							[
								1304,
								1323
							],
							[
								2720,
								2726
							],
							[
								2737,
								2749
							],
							[
								3467,
								3473
							],
							[
								3675,
								3681
							],
							[
								3692,
								3709
							],
							[
								4580,
								4586
							],
							[
								4765,
								4771
							],
							[
								4960,
								4966
							],
							[
								5270,
								5276
							],
							[
								5564,
								5570
							]
						],
						"symlist":
						[
							" () =>",
							"() =>",
							"() =>",
							" () =>",
							" () =>",
							" () =>",
							"Demo = ({ url }) =>",
							" () =>",
							"Demo = () =>",
							" () =>",
							" () =>",
							"Demo = ({ c }) =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACuAQAATGlua2VkTGlzdEl0ZW0KICBjb25zdHJ1Y3Rvcih2YWwpCkxpbmtlZExpc3QKICBjb25zdHJ1Y3RvciguLi52YWx1ZXMpCiAgdmFsdWUgPT4KKml0ZXJhdG9yKCkKICBzZWFyY2gocHJlZCkKICBpbnNlcnRCZWZvcmUodmFsdWUsIHByZWQpCiAgZ2V0IGl0ZW1zKCkKICBnZXQgaGVhZCgpCiAgZ2V0IHRhaWwoKQogIGdldCBsZW5ndGgoKQogIGluc2VydCh2YWwsIHByZXZpb3VzSXRlbSwgY2hlY2tEdXBsaWNhdGVzIC8qKi8gPSBmYWxzZSkKKCkgPT4KICAgaXQgPT4KICBhcHBlbmQodmFsLCBjaGVja0R1cGxpY2F0ZXMgPSBmYWxzZSkKICBwcmVwZW5kKHZhbCwgY2hlY2tEdXBsaWNhdGVzID0gZmFsc2UpCiAgcmVtb3ZlKHZhbCkKICByZW1vdmVIZWFkKCkKICByZW1vdmVUYWlsKCkKICBmaXJzdChudW0pCiAgdG9BcnJheSgpCiAgaXNEdXBsaWNhdGUodmFsKQAAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					651,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/dom/svg.js",
						"symkeys":
						[
							[
								502,
								505
							],
							[
								526,
								594
							],
							[
								753,
								766
							],
							[
								789,
								804
							],
							[
								1169,
								1192
							],
							[
								1556,
								1567
							],
							[
								1639,
								1658
							],
							[
								1756,
								1782
							],
							[
								1896,
								1913
							],
							[
								2170,
								2175
							],
							[
								2283,
								2293
							],
							[
								3027,
								3057
							],
							[
								3297,
								3347
							],
							[
								3362,
								3393
							],
							[
								4132,
								4173
							],
							[
								4258,
								4289
							],
							[
								4350,
								4378
							],
							[
								4440,
								4466
							],
							[
								4515,
								4530
							],
							[
								4636,
								4655
							],
							[
								4991,
								5029
							],
							[
								5276,
								5371
							],
							[
								6045,
								6138
							],
							[
								6534,
								6547
							],
							[
								6720,
								6738
							],
							[
								6749,
								6783
							],
							[
								6988,
								6999
							],
							[
								7074,
								7087
							],
							[
								7123,
								7153
							],
							[
								7319,
								7357
							],
							[
								7489,
								7518
							],
							[
								7563,
								7573
							],
							[
								7598,
								7602
							],
							[
								7759,
								7770
							],
							[
								7900,
								7923
							],
							[
								8049,
								8071
							],
							[
								8109,
								8138
							],
							[
								8390,
								8398
							],
							[
								8486,
								8498
							],
							[
								8530,
								8537
							],
							[
								8566,
								8577
							],
							[
								8667,
								8674
							],
							[
								8712,
								8719
							],
							[
								8828,
								8836
							],
							[
								8887,
								8894
							],
							[
								8930,
								8957
							],
							[
								9060,
								9066
							],
							[
								9314,
								9331
							],
							[
								9898,
								9922
							],
							[
								10152,
								10168
							],
							[
								10480,
								10494
							],
							[
								10534,
								10541
							],
							[
								10588,
								10597
							],
							[
								10734,
								10762
							],
							[
								11062,
								11085
							],
							[
								11758,
								11800
							],
							[
								12099,
								12109
							],
							[
								12221,
								12231
							],
							[
								12412,
								12431
							],
							[
								12776,
								12802
							],
							[
								13620,
								13630
							],
							[
								14553,
								14575
							],
							[
								14688,
								14709
							],
							[
								14988,
								15010
							],
							[
								15681,
								15710
							],
							[
								16068,
								16090
							],
							[
								16334,
								16344
							],
							[
								16387,
								16407
							],
							[
								16480,
								16484
							],
							[
								16498,
								16504
							],
							[
								16662,
								16687
							],
							[
								16725,
								16731
							],
							[
								16930,
								16934
							],
							[
								16956,
								16989
							]
						],
						"symlist":
						[
							"SVG",
							"static create(name, { outerHTML, innerHTML, text, ...attr }, parent)",
							"attrfn = n =>",
							"attrfn = arg =>",
							"static factory(...args)",
							"create(tag)",
							"append_to(elem, to)",
							"setattr(elem, name, value)",
							"setcss(elem, css)",
							"() =>",
							"get root()",
							".append_to = function(elem, p)",
							"factory = function SVGFactory(tag, attr, children)",
							"create = (tag, attr, parent) =>",
							".derive = function(override = {}, parent)",
							".initialize = function(...args)",
							".setRoot = function(...args)",
							".parent = function(parent)",
							"append_to(elem)",
							".clear = function()",
							"static matrix(element, screen = false)",
							"static bbox(element, options = { parent: null, absolute: false, client: false, screen: false })",
							"static gradient(type, { stops, factory = SVG.create, parent = null, line = false, ...props })",
							"(color, o) =>",
							"static owner(elem)",
							"ret = function(tag, props, parent)",
							" function()",
							"static path()",
							"static getProperty(elem, name)",
							"static getProperties(elem, properties)",
							"static *coloredElements(elem)",
							" (e, d) =>",
							"a =>",
							"([k, v]) =>",
							"(acc, [name, value]) =>",
							"static allColors(elem)",
							"addColor = (c, item, prop) =>",
							"color =>",
							"get colors()",
							"item =>",
							"index(name)",
							"item =>",
							"name(i)",
							"get(arg)",
							"item =>",
							"set(index, color, elements)",
							"dump()",
							"adjacencyMatrix()",
							"replace(color, newColor)",
							"newColor = () =>",
							"replaceAll(fn)",
							"item =>",
							"(a, b) =>",
							"fn = (rgba, index, color) =>",
							"static *lineIterator(e)",
							"static *pathIterator(e, opts, fn = p => p)",
							"pos = i =>",
							"pos = i =>",
							"do_point = point =>",
							"pad = (str, n, s = ' ') =>",
							"toString()",
							"static parsePath(path)",
							"parseValues = args =>",
							" (_, command, args) =>",
							"static viewbox(element, rect)",
							"static splitPath(path)",
							"command =>",
							"([command, args]) =>",
							"m =>",
							"arg =>",
							"static pathToPoints(path)",
							"cmd =>",
							"n =>",
							"static *pathToPointIterator(path)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACqAAAAICAgKCkgPT4KKCkgPT4KKCkgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgKCkgPT4KRGVtbyA9ICh7IHVybCB9KSA9PgogICAoKSA9PgpEZW1vID0gKCkgPT4KICAgKCkgPT4KICAgKCkgPT4KRGVtbyA9ICh7IGMgfSkgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgKCkgPT4AAAAAAAAAAPIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					652,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/svg-crop-pad.js",
						"symkeys":
						[
							[
								1579,
								1603
							],
							[
								1823,
								1844
							],
							[
								2070,
								2086
							],
							[
								2640,
								2662
							],
							[
								2973,
								3003
							],
							[
								3163,
								3190
							],
							[
								3327,
								3341
							],
							[
								3447,
								3468
							],
							[
								3900,
								3904
							],
							[
								4064,
								4094
							],
							[
								4146,
								4160
							],
							[
								5296,
								5310
							],
							[
								5561,
								5597
							],
							[
								5708,
								5727
							],
							[
								5737,
								5746
							],
							[
								5760,
								5784
							],
							[
								5870,
								5898
							],
							[
								5988,
								6014
							],
							[
								6195,
								6238
							],
							[
								6261,
								6265
							],
							[
								6440,
								6476
							],
							[
								6537,
								6542
							],
							[
								6612,
								6649
							],
							[
								6880,
								6915
							],
							[
								7049,
								7086
							],
							[
								7167,
								7187
							],
							[
								7263,
								7287
							],
							[
								7629,
								7633
							],
							[
								8092,
								8096
							],
							[
								8121,
								8125
							],
							[
								8190,
								8201
							],
							[
								8406,
								8431
							],
							[
								8484,
								8522
							],
							[
								8544,
								8556
							],
							[
								8587,
								8599
							],
							[
								8630,
								8642
							],
							[
								8673,
								8680
							],
							[
								8714,
								8721
							],
							[
								8755,
								8783
							],
							[
								8881,
								8901
							],
							[
								8968,
								8988
							],
							[
								9055,
								9067
							],
							[
								9098,
								9158
							],
							[
								9379,
								9415
							],
							[
								9480,
								9486
							],
							[
								9536,
								9571
							],
							[
								9713,
								9737
							],
							[
								9793,
								9818
							],
							[
								9897,
								9901
							],
							[
								9935,
								9939
							],
							[
								9969,
								9995
							],
							[
								10054,
								10058
							],
							[
								10092,
								10141
							],
							[
								10156,
								10161
							],
							[
								10289,
								10299
							],
							[
								10412,
								10417
							],
							[
								10439,
								10443
							],
							[
								10700,
								10744
							],
							[
								10793,
								10798
							],
							[
								10862,
								10873
							],
							[
								10895,
								10926
							],
							[
								11215,
								11248
							],
							[
								11648,
								11672
							],
							[
								12179,
								12213
							],
							[
								12286,
								12308
							],
							[
								12392,
								12440
							],
							[
								13069,
								13102
							],
							[
								13156,
								13213
							],
							[
								13224,
								13233
							],
							[
								13291,
								13314
							],
							[
								13325,
								13334
							],
							[
								13380,
								13414
							],
							[
								13610,
								13635
							],
							[
								13692,
								13742
							],
							[
								14023,
								14056
							],
							[
								14156,
								14191
							],
							[
								14268,
								14290
							],
							[
								15055,
								15073
							],
							[
								15116,
								15122
							],
							[
								15156,
								15161
							],
							[
								15203,
								15208
							],
							[
								15368,
								15373
							],
							[
								15668,
								15694
							],
							[
								15795,
								15821
							],
							[
								17200,
								17204
							],
							[
								17383,
								17387
							],
							[
								17524,
								17533
							],
							[
								17921,
								17925
							]
						],
						"symlist":
						[
							"function parseSVGPath(s)",
							"parseValues = args =>",
							" (_, c, args) =>",
							"function splitPath(ps)",
							"function* pathToAbsolute(path)",
							"function pathToPoints(path)",
							"isUpper = s =>",
							"MakePoint = (x, y) =>",
							"n =>",
							"function* pointsToAbsolute(it)",
							"isUpper = s =>",
							"save(filename)",
							"function* NumericArgs(s, t = a => a)",
							"deref = p => obj =>",
							"(o, k) =>",
							"function* ParentPaths(p)",
							"function* CumulativePaths(p)",
							"function* AllParents(elem)",
							"function AllTransforms(elem, getter = e => ",
							"(e))",
							"function ElementTransformLists(elem)",
							" e =>",
							"function DecomposeTransformList(elem)",
							"function ElementTransformList(elem)",
							"function ElementTransformMatrix(elem)",
							"function GetXY(elem)",
							"function GetPoints(elem)",
							"p =>",
							"c =>",
							"a =>",
							"([x, y]) =>",
							"function GetSVGPath(elem)",
							"function PathCmdTransform(matrix, cmd)",
							"M: (x, y) =>",
							"Z: (x, y) =>",
							"L: (x, y) =>",
							"H: x =>",
							"V: y =>",
							"C: (x1, y1, x2, y2, x, y) =>",
							"S: (x2, y2, x, y) =>",
							"Q: (x1, y1, x, y) =>",
							"T: (x, y) =>",
							"A: (rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) =>",
							"function PathTransform(matrix, path)",
							"cmd =>",
							"function GetTransformedPoints(elem)",
							"function GetMatrix(elem)",
							"function IsClipPath(elem)",
							"e =>",
							"e =>",
							"function HasClipPath(elem)",
							"e =>",
							"function* PositionedElements(svgElem = svg, skip)",
							"() =>",
							" (v, p) =>",
							" e =>",
							"n =>",
							"function* TransformedElements(svgElem = svg)",
							" e =>",
							"(obj, p) =>",
							"function HasParent(elem, other)",
							"function GetBounds(svgElem = svg)",
							"function* ProcessPath(d)",
							"function getUnit(str, defaultUnit)",
							"function getValue(str)",
							"function unitConvToMM(value, defaultUnit = 'px')",
							"function unitConvFactor(from, to)",
							"function unitConvFunction(toUnit = 'mm', fromUnit = 'px')",
							" value =>",
							"function unitConv(unit)",
							" value =>",
							"function getViewBox(svgElem = svg)",
							"function XML2String(elem)",
							"function getWidthHeight(svgElem = svg, t = a => a)",
							"function getTransformationList(e)",
							"function getTransformationMatrix(e)",
							"function main(...args)",
							" (_x, _y, opts) =>",
							" () =>",
							" a =>",
							" a =>",
							" a =>",
							"print = (file, ...args) =>",
							"print = (file, ...args) =>",
							"n =>",
							"u =>",
							"(a, i) =>",
							"Rect"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyBgAAU1ZHCiAgc3RhdGljIGNyZWF0ZShuYW1lLCB7IG91dGVySFRNTCwgaW5uZXJIVE1MLCB0ZXh0LCAuLi5hdHRyIH0sIHBhcmVudCkKICBhdHRyZm4gPSBuID0+CiAgYXR0cmZuID0gYXJnID0+CiAgc3RhdGljIGZhY3RvcnkoLi4uYXJncykKICBjcmVhdGUodGFnKQogIGFwcGVuZF90byhlbGVtLCB0bykKICBzZXRhdHRyKGVsZW0sIG5hbWUsIHZhbHVlKQogIHNldGNzcyhlbGVtLCBjc3MpCigpID0+CiAgZ2V0IHJvb3QoKQogIC5hcHBlbmRfdG8gPSBmdW5jdGlvbihlbGVtLCBwKQogIGZhY3RvcnkgPSBmdW5jdGlvbiBTVkdGYWN0b3J5KHRhZywgYXR0ciwgY2hpbGRyZW4pCiAgY3JlYXRlID0gKHRhZywgYXR0ciwgcGFyZW50KSA9PgogIC5kZXJpdmUgPSBmdW5jdGlvbihvdmVycmlkZSA9IHt9LCBwYXJlbnQpCiAgLmluaXRpYWxpemUgPSBmdW5jdGlvbiguLi5hcmdzKQogIC5zZXRSb290ID0gZnVuY3Rpb24oLi4uYXJncykKICAucGFyZW50ID0gZnVuY3Rpb24ocGFyZW50KQogIGFwcGVuZF90byhlbGVtKQogIC5jbGVhciA9IGZ1bmN0aW9uKCkKICBzdGF0aWMgbWF0cml4KGVsZW1lbnQsIHNjcmVlbiA9IGZhbHNlKQogIHN0YXRpYyBiYm94KGVsZW1lbnQsIG9wdGlvbnMgPSB7IHBhcmVudDogbnVsbCwgYWJzb2x1dGU6IGZhbHNlLCBjbGllbnQ6IGZhbHNlLCBzY3JlZW46IGZhbHNlIH0pCiAgc3RhdGljIGdyYWRpZW50KHR5cGUsIHsgc3RvcHMsIGZhY3RvcnkgPSBTVkcuY3JlYXRlLCBwYXJlbnQgPSBudWxsLCBsaW5lID0gZmFsc2UsIC4uLnByb3BzIH0pCihjb2xvciwgbykgPT4KICBzdGF0aWMgb3duZXIoZWxlbSkKICByZXQgPSBmdW5jdGlvbih0YWcsIHByb3BzLCBwYXJlbnQpCiAgIGZ1bmN0aW9uKCkKICBzdGF0aWMgcGF0aCgpCiAgc3RhdGljIGdldFByb3BlcnR5KGVsZW0sIG5hbWUpCiAgc3RhdGljIGdldFByb3BlcnRpZXMoZWxlbSwgcHJvcGVydGllcykKICBzdGF0aWMgKmNvbG9yZWRFbGVtZW50cyhlbGVtKQogICAoZSwgZCkgPT4KICBhID0+Cihbaywgdl0pID0+CihhY2MsIFtuYW1lLCB2YWx1ZV0pID0+CiAgc3RhdGljIGFsbENvbG9ycyhlbGVtKQogIGFkZENvbG9yID0gKGMsIGl0ZW0sIHByb3ApID0+CiAgY29sb3IgPT4KICBnZXQgY29sb3JzKCkKICBpdGVtID0+CiAgaW5kZXgobmFtZSkKICBpdGVtID0+CiAgbmFtZShpKQogIGdldChhcmcpCiAgaXRlbSA9PgogIHNldChpbmRleCwgY29sb3IsIGVsZW1lbnRzKQogIGR1bXAoKQogIGFkamFjZW5jeU1hdHJpeCgpCiAgcmVwbGFjZShjb2xvciwgbmV3Q29sb3IpCiAgbmV3Q29sb3IgPSAoKSA9PgogIHJlcGxhY2VBbGwoZm4pCiAgaXRlbSA9PgooYSwgYikgPT4KICBmbiA9IChyZ2JhLCBpbmRleCwgY29sb3IpID0+CiAgc3RhdGljICpsaW5lSXRlcmF0b3IoZSkKICBzdGF0aWMgKnBhdGhJdGVyYXRvcihlLCBvcHRzLCBmbiA9IHAgPT4gcCkKICBwb3MgPSBpID0+CiAgcG9zID0gaSA9PgogIGRvX3BvaW50ID0gcG9pbnQgPT4KICBwYWQgPSAoc3RyLCBuLCBzID0gJyAnKSA9PgogIHRvU3RyaW5nKCkKICBzdGF0aWMgcGFyc2VQYXRoKHBhdGgpCiAgcGFyc2VWYWx1ZXMgPSBhcmdzID0+CiAgIChfLCBjb21tYW5kLCBhcmdzKSA9PgogIHN0YXRpYyB2aWV3Ym94KGVsZW1lbnQsIHJlY3QpCiAgc3RhdGljIHNwbGl0UGF0aChwYXRoKQogIGNvbW1hbmQgPT4KKFtjb21tYW5kLCBhcmdzXSkgPT4KICBtID0+CiAgYXJnID0+CiAgc3RhdGljIHBhdGhUb1BvaW50cyhwYXRoKQogIGNtZCA9PgogIG4gPT4KICBzdGF0aWMgKnBhdGhUb1BvaW50SXRlcmF0b3IocGF0aCkAAAAAAAAAAGUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					653,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/dir-helpers.js",
						"symkeys":
						[
							[
								166,
								197
							],
							[
								267,
								273
							],
							[
								787,
								876
							],
							[
								1032,
								1067
							],
							[
								1595,
								1648
							]
						],
						"symlist":
						[
							" function* DirIterator(...args)",
							" () =>",
							" function* RecursiveDirIterator(dir, pred = (entry, file, dir, depth) => true, depth = 0)",
							"pred = (entry, file, dir, depth) =>",
							" function* ReadDirRecursive(dir, maxDepth = Infinity)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABlBgAAICBwYXJzZVNWR1BhdGgocykKICBwYXJzZVZhbHVlcyA9IGFyZ3MgPT4KICAgKF8sIGMsIGFyZ3MpID0+CiAgc3BsaXRQYXRoKHBzKQogIHBhdGhUb0Fic29sdXRlKHBhdGgpCiAgcGF0aFRvUG9pbnRzKHBhdGgpCiAgaXNVcHBlciA9IHMgPT4KTWFrZVBvaW50ID0gKHgsIHkpID0+CiAgbiA9PgogIHBvaW50c1RvQWJzb2x1dGUoaXQpCiAgaXNVcHBlciA9IHMgPT4KICBzYXZlKGZpbGVuYW1lKQpOdW1lcmljQXJncyhzLCB0ID0gYSA9PiBhKQogIGRlcmVmID0gcCA9PiBvYmogPT4KKG8sIGspID0+ClBhcmVudFBhdGhzKHApCkN1bXVsYXRpdmVQYXRocyhwKQpBbGxQYXJlbnRzKGVsZW0pCkFsbFRyYW5zZm9ybXMoZWxlbSwgZ2V0dGVyID0gZSA9PiAKKGUpKQpFbGVtZW50VHJhbnNmb3JtTGlzdHMoZWxlbSkKICAgZSA9PgpEZWNvbXBvc2VUcmFuc2Zvcm1MaXN0KGVsZW0pCkVsZW1lbnRUcmFuc2Zvcm1MaXN0KGVsZW0pCkVsZW1lbnRUcmFuc2Zvcm1NYXRyaXgoZWxlbSkKR2V0WFkoZWxlbSkKR2V0UG9pbnRzKGVsZW0pCiAgcCA9PgogIGMgPT4KICBhID0+CihbeCwgeV0pID0+CkdldFNWR1BhdGgoZWxlbSkKUGF0aENtZFRyYW5zZm9ybShtYXRyaXgsIGNtZCkKTTogKHgsIHkpID0+Clo6ICh4LCB5KSA9PgpMOiAoeCwgeSkgPT4KSDogeCA9PgpWOiB5ID0+CkM6ICh4MSwgeTEsIHgyLCB5MiwgeCwgeSkgPT4KUzogKHgyLCB5MiwgeCwgeSkgPT4KUTogKHgxLCB5MSwgeCwgeSkgPT4KVDogKHgsIHkpID0+CkE6IChyeCwgcnksIHhBeGlzUm90YXRpb24sIGxhcmdlQXJjRmxhZywgc3dlZXBGbGFnLCB4LCB5KSA9PgpQYXRoVHJhbnNmb3JtKG1hdHJpeCwgcGF0aCkKICBjbWQgPT4KR2V0VHJhbnNmb3JtZWRQb2ludHMoZWxlbSkKR2V0TWF0cml4KGVsZW0pCklzQ2xpcFBhdGgoZWxlbSkKICBlID0+CiAgZSA9PgpIYXNDbGlwUGF0aChlbGVtKQogIGUgPT4KUG9zaXRpb25lZEVsZW1lbnRzKHN2Z0VsZW0gPSBzdmcsIHNraXApCigpID0+CiAgICh2LCBwKSA9PgogICBlID0+CiAgbiA9PgpUcmFuc2Zvcm1lZEVsZW1lbnRzKHN2Z0VsZW0gPSBzdmcpCiAgIGUgPT4KKG9iaiwgcCkgPT4KSGFzUGFyZW50KGVsZW0sIG90aGVyKQpHZXRCb3VuZHMoc3ZnRWxlbSA9IHN2ZykKUHJvY2Vzc1BhdGgoZCkKICBnZXRVbml0KHN0ciwgZGVmYXVsdFVuaXQpCiAgZ2V0VmFsdWUoc3RyKQogIHVuaXRDb252VG9NTSh2YWx1ZSwgZGVmYXVsdFVuaXQgPSAncHgnKQogIHVuaXRDb252RmFjdG9yKGZyb20sIHRvKQogIHVuaXRDb252RnVuY3Rpb24odG9Vbml0ID0gJ21tJywgZnJvbVVuaXQgPSAncHgnKQogICB2YWx1ZSA9PgogIHVuaXRDb252KHVuaXQpCiAgIHZhbHVlID0+CiAgZ2V0Vmlld0JveChzdmdFbGVtID0gc3ZnKQpYTUwyU3RyaW5nKGVsZW0pCiAgZ2V0V2lkdGhIZWlnaHQoc3ZnRWxlbSA9IHN2ZywgdCA9IGEgPT4gYSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKICBnZXRUcmFuc2Zvcm1hdGlvbk1hdHJpeChlKQogIG1haW4oLi4uYXJncykKICAgKF94LCBfeSwgb3B0cykgPT4KICAgKCkgPT4KICAgYSA9PgogICBhID0+CiAgIGEgPT4KICBwcmludCA9IChmaWxlLCAuLi5hcmdzKSA9PgogIHByaW50ID0gKGZpbGUsIC4uLmFyZ3MpID0+CiAgbiA9PgogIHUgPT4KKGEsIGkpID0+ClJlY3QAAAAAAAAAAL0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					654,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9AAAARGlySXRlcmF0b3IoLi4uYXJncykKICAgKCkgPT4KUmVjdXJzaXZlRGlySXRlcmF0b3IoZGlyLCBwcmVkID0gKGVudHJ5LCBmaWxlLCBkaXIsIGRlcHRoKSA9PiB0cnVlLCBkZXB0aCA9IDApCiAgcHJlZCA9IChlbnRyeSwgZmlsZSwgZGlyLCBkZXB0aCkgPT4KUmVhZERpclJlY3Vyc2l2ZShkaXIsIG1heERlcHRoID0gSW5maW5pdHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					655,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2012,
								2020
							],
							[
								2036,
								2056
							],
							[
								2585,
								2618
							],
							[
								2708,
								2739
							],
							[
								3065,
								3087
							],
							[
								3301,
								3342
							],
							[
								3353,
								3366
							],
							[
								3444,
								3479
							],
							[
								3524,
								3542
							],
							[
								3578,
								3620
							],
							[
								3686,
								3719
							],
							[
								3741,
								3745
							],
							[
								4134,
								4139
							],
							[
								4189,
								4193
							],
							[
								4220,
								4224
							],
							[
								4252,
								4256
							],
							[
								4279,
								4299
							],
							[
								4353,
								4357
							],
							[
								4427,
								4449
							],
							[
								4539,
								4544
							],
							[
								4576,
								4598
							],
							[
								4792,
								4814
							],
							[
								5237,
								5303
							],
							[
								5649,
								5658
							],
							[
								5763,
								5793
							],
							[
								6154,
								6189
							],
							[
								6221,
								6262
							],
							[
								6294,
								6360
							],
							[
								6393,
								6427
							],
							[
								6498,
								6545
							],
							[
								7081,
								7117
							],
							[
								7230,
								7239
							],
							[
								7475,
								7483
							],
							[
								7589,
								7596
							],
							[
								7646,
								7670
							],
							[
								8051,
								8062
							],
							[
								8152,
								8163
							],
							[
								8227,
								8238
							],
							[
								8292,
								8301
							],
							[
								8339,
								8350
							],
							[
								8438,
								8465
							],
							[
								8603,
								8607
							],
							[
								8631,
								8638
							],
							[
								8671,
								8687
							],
							[
								8816,
								8861
							],
							[
								9077,
								9135
							],
							[
								9447,
								9469
							],
							[
								9842,
								9852
							],
							[
								10096,
								10110
							],
							[
								11045,
								11069
							],
							[
								11195,
								11199
							],
							[
								11291,
								11305
							],
							[
								11405,
								11421
							],
							[
								11853,
								11866
							],
							[
								11884,
								11889
							],
							[
								11971,
								11978
							],
							[
								12006,
								12011
							],
							[
								12133,
								12158
							],
							[
								12333,
								12372
							],
							[
								12449,
								12460
							],
							[
								14039,
								14070
							],
							[
								14600,
								14633
							],
							[
								14905,
								14940
							],
							[
								15025,
								15058
							],
							[
								16002,
								16012
							],
							[
								16806,
								16810
							],
							[
								17226,
								17233
							],
							[
								17626,
								17662
							],
							[
								17874,
								17878
							],
							[
								18503,
								18535
							],
							[
								18828,
								18832
							],
							[
								19302,
								19319
							],
							[
								19464,
								19499
							],
							[
								20253,
								20258
							],
							[
								20985,
								20989
							],
							[
								21083,
								21087
							],
							[
								21207,
								21216
							],
							[
								21346,
								21353
							],
							[
								21634,
								21641
							],
							[
								21722,
								21729
							],
							[
								21793,
								21809
							],
							[
								21874,
								21894
							],
							[
								22593,
								22605
							],
							[
								22704,
								22716
							],
							[
								22918,
								22934
							],
							[
								23028,
								23041
							],
							[
								23317,
								23335
							],
							[
								23525,
								23554
							],
							[
								23962,
								23981
							],
							[
								24414,
								24435
							],
							[
								26026,
								26048
							],
							[
								26521,
								26542
							],
							[
								27093,
								27112
							],
							[
								27546,
								27554
							],
							[
								30257,
								30269
							],
							[
								32084,
								32119
							],
							[
								32702,
								32721
							],
							[
								32903,
								32920
							],
							[
								32965,
								32978
							],
							[
								33014,
								33024
							],
							[
								33878,
								33894
							],
							[
								34026,
								34045
							],
							[
								34056,
								34075
							],
							[
								34101,
								34121
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAkQcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "lib/dom/svg.js",
			"settings":
			{
				"buffer_size": 17321,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "svg-crop-pad.js",
			"settings":
			{
				"buffer_size": 18832,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/dom.js",
			"settings":
			{
				"buffer_size": 6394,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dir-helpers.js",
			"settings":
			{
				"buffer_size": 2066,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABYAAAAaW1wb3J0IHsgRGlySXRlcmF0b3IsIFJlY3Vyc2l2ZURpckl0ZXJhdG9yLCBSZWFkRGlyUmVjdXJzaXZlIH0gZnJvbSAnLi9kaXItaGVscGVycy5qcyc7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAFgAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 34456,
				"line_ending": "Unix"
			}
		},
		{
			"file": "io-helpers.js",
			"settings":
			{
				"buffer_size": 9246,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAALwEAAAAAAAAvQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAALwEAAAAAAAAvAQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9BAAAAAAAAL0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALwEAAAAAAAAvQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAL0EAAAAAAAAvgQAAAAAAAAAAAAAvgQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMEEAAAAAAAAAAAAAMEEAAAAAAAAwwQAAAAAAAAAAAAAvgQAAAAAAAC+BAAAAAAAAAIAAAAgIMEEAAAAAAAAwgQAAAAAAAAAAAAAwgQAAAAAAADDBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9BAAAAAAAAL0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAMMEAAAAAAAAxQQAAAAAAAAAAAAAxAQAAAAAAADGBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDBAAAAAAAAMMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAMUEAAAAAAAAxgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFBAAAAAAAAMUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					3,
					"right_delete",
					null,
					"AwAAAMYEAAAAAAAAxgQAAAAAAAABAAAAKcYEAAAAAAAAxgQAAAAAAAABAAAAKcYEAAAAAAAAxgQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGBAAAAAAAAMYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					2,
					"left_delete",
					null,
					"AgAAANgEAAAAAAAA2AQAAAAAAAABAAAAO9cEAAAAAAAA1wQAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZBAAAAAAAANkEAAAAAAAA////////738"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ")))"
					},
					"AwAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAADZBAAAAAAAANoEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXBAAAAAAAANcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANoEAAAAAAAA2wQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaBAAAAAAAANoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANsEAAAAAAAA3QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBAAAAAAAANsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"right_delete",
					null,
					"AQAAANwEAAAAAAAA3AQAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcBAAAAAAAANwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACcBQAAAAAAAAAAAACcBQAAAAAAAJ0FAAAAAAAAAAAAAJoFAAAAAAAAmgUAAAAAAAACAAAAICCaBQAAAAAAAJoFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZBQAAAAAAAJkFAAAAAAAAAAAAAAAAbUA"
				],
				[
					31,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbBQAAAAAAAJsFAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "workerScript.js",
			"settings":
			{
				"buffer_size": 978,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/leafletjs.com",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/stream"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/preact/test/browser/svg.test.js",
		"/home/roman/Projects/plot-cv/lib/container/linkedList.js",
		"/home/roman/Projects/plot-cv/lib/container/binaryTree.js",
		"/home/roman/Projects/plot-cv/lib/container/sortedMap.js",
		"/home/roman/Projects/plot-cv/lib/container/deque.js",
		"/home/roman/Projects/plot-cv/lib/container/multibimap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/fire/.prettierrc",
		"/home/roman/Projects/plot-cv/fire/asconfig.json",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/c.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mysql.js",
		"/home/roman/Dokumente/Eagle-Layouts/VCO-8038-board.svg",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/token.c",
		"/usr/local/bin/list-exports.js",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Luscious.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Deluxe.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/getdents.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjscalc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/an-tronics/eagle/ioboard2.brd",
		"/home/roman/Projects/an-tronics/eagle/mainboard2.brd",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser/ebnf.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/mariadb-10.3-10.3.38/include/mysql_com.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Downloads/quickjs-devel/0001-Add-C-Closures.patch",
		"/home/roman/Downloads/quickjs-devel/0003-Add-JS_SetRuntimeOpaque-and-JS_GetRuntimeOpaque.patch",
		"/home/roman/Downloads/quickjs-devel/0002-Add-JS_NewUncatchableError.patch",
		"/usr/include/mariadb/mysql.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-serial.c",
		"/usr/include/mariadb/mysql_com.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/revert.diff",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendMath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendObject.js",
		"/home/roman/Projects/plot-cv/quickjs/libbf.h",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt_storeresult.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt_sendlongdata.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt_fetch.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt_execute.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt_close.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_setcharset.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_rollback.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_query.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_prepare.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_ping.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_cursor.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_connect.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_commit.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_close.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_autocommit.c",
		"/home/roman/Projects/plot-cv/luafan/src/luamariadb.c",
		"/home/roman/Projects/plot-cv/luafan/src/mariadb/luamariadb_stmt.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_myql.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/bnf.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/ANSI-C-grammar-2011.y",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/Shell-Grammar.y",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/Shell-Grammar.l",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/memmem.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/tmp/*",
			"/home/roman/Projects/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Bresenha",
			"dequeue",
			"Bresenham",
			"dequeue",
			"PutArray2",
			"PutArray",
			"queue",
			"deq",
			"ReplayTrail",
			"queue\\(",
			"ReplayTrail\\(data\\.trail\\)",
			"ReplayTra",
			".dequeue",
			"drawList\\.dequ",
			"ReplayTrail",
			"queue\\(",
			"\\.queue\\(",
			"queue\\(",
			"Replay",
			"Blaze\\(",
			"fire\\(",
			"main",
			"randInt",
			"Bresenham\\(",
			"Bresenham",
			"Blaze\\(",
			"drawList",
			"Bresenham",
			"Blaze",
			"Blaze\\(",
			"pixels\\[",
			"pixels",
			"Blaze",
			"dequeue",
			"Blaze\\(",
			"dequeue",
			"Blaze\\(",
			"cid",
			"drawList",
			"drawList.insert",
			"Blaze",
			"ReplayTrail",
			"MakeClientID",
			"MakeClientId",
			"id",
			"uid",
			"uuid",
			"MovementIterator",
			"MovementIt",
			"drawList",
			"ReplayTrail",
			"receive",
			"Message",
			"Blaze",
			"before",
			"Blaze",
			"insert",
			"ll",
			"insert",
			"\\: number",
			"\\[\\] \\{",
			": boolean",
			"<T>",
			"\\: T",
			"this._",
			"private _",
			"bisect",
			"CMP_DEFAULT",
			"sortedMap",
			"Sorte",
			"List",
			"redraw",
			"Redraw",
			"JSON.string",
			"ReplayTrail",
			"rc =",
			"Blaze",
			"misc.js",
			"waitFor",
			"trail",
			"PutArray",
			"Handler",
			"PutArray",
			"Blaze",
			"keyup",
			"metaKey",
			"streamify",
			"Movement",
			"onMessage",
			"EventPositions",
			"MouseHandler",
			"rc =",
			"Blaze",
			"ReadFile",
			"ns =",
			"create",
			"createElement\\('svg'",
			"'svg'",
			"AttributeNS.*xml",
			"AttributeNS.*svg",
			"AttributeNS",
			"\n  ",
			"getTrans",
			"getTransformationList",
			"decompose",
			"getTransformationList",
			"decompose",
			"Cumulati",
			"parentEleme",
			"dom",
			"bottom",
			"\\.css",
			"onHttp",
			"ReadFile",
			"console.options",
			"console.options =",
			"customInspct",
			"customIns",
			"os\\.",
			"fs\\.",
			"DirIteratorc",
			"DirIterator",
			"onHttp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"upto",
			"",
			" {",
			"",
			"this.#",
			"#"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1937,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/upload-server.js",
							"function_name_status_row": 25,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									2012,
									2020
								],
								[
									2036,
									2056
								],
								[
									2585,
									2618
								],
								[
									2708,
									2739
								],
								[
									3065,
									3087
								],
								[
									3301,
									3342
								],
								[
									3353,
									3366
								],
								[
									3444,
									3479
								],
								[
									3524,
									3542
								],
								[
									3578,
									3620
								],
								[
									3686,
									3719
								],
								[
									3741,
									3745
								],
								[
									4134,
									4139
								],
								[
									4189,
									4193
								],
								[
									4220,
									4224
								],
								[
									4252,
									4256
								],
								[
									4279,
									4299
								],
								[
									4353,
									4357
								],
								[
									4427,
									4449
								],
								[
									4539,
									4544
								],
								[
									4576,
									4598
								],
								[
									4792,
									4814
								],
								[
									5237,
									5303
								],
								[
									5649,
									5658
								],
								[
									5763,
									5793
								],
								[
									6154,
									6189
								],
								[
									6221,
									6262
								],
								[
									6294,
									6360
								],
								[
									6393,
									6427
								],
								[
									6498,
									6545
								],
								[
									7081,
									7117
								],
								[
									7230,
									7239
								],
								[
									7475,
									7483
								],
								[
									7589,
									7596
								],
								[
									7646,
									7670
								],
								[
									8051,
									8062
								],
								[
									8152,
									8163
								],
								[
									8227,
									8238
								],
								[
									8292,
									8301
								],
								[
									8339,
									8350
								],
								[
									8438,
									8465
								],
								[
									8603,
									8607
								],
								[
									8631,
									8638
								],
								[
									8671,
									8687
								],
								[
									8816,
									8861
								],
								[
									9077,
									9135
								],
								[
									9447,
									9469
								],
								[
									9842,
									9852
								],
								[
									10096,
									10110
								],
								[
									11045,
									11069
								],
								[
									11195,
									11199
								],
								[
									11291,
									11305
								],
								[
									11405,
									11421
								],
								[
									11853,
									11866
								],
								[
									11884,
									11889
								],
								[
									11971,
									11978
								],
								[
									12006,
									12011
								],
								[
									12133,
									12158
								],
								[
									12333,
									12372
								],
								[
									12449,
									12460
								],
								[
									14039,
									14070
								],
								[
									14600,
									14633
								],
								[
									14905,
									14940
								],
								[
									15025,
									15058
								],
								[
									16002,
									16012
								],
								[
									16806,
									16810
								],
								[
									17226,
									17233
								],
								[
									17626,
									17662
								],
								[
									17874,
									17878
								],
								[
									18503,
									18535
								],
								[
									18828,
									18832
								],
								[
									19302,
									19319
								],
								[
									19464,
									19499
								],
								[
									20253,
									20258
								],
								[
									20985,
									20989
								],
								[
									21083,
									21087
								],
								[
									21207,
									21216
								],
								[
									21346,
									21353
								],
								[
									21634,
									21641
								],
								[
									21722,
									21729
								],
								[
									21793,
									21809
								],
								[
									21874,
									21894
								],
								[
									22593,
									22605
								],
								[
									22704,
									22716
								],
								[
									22918,
									22934
								],
								[
									23028,
									23041
								],
								[
									23317,
									23335
								],
								[
									23525,
									23554
								],
								[
									23962,
									23981
								],
								[
									24414,
									24435
								],
								[
									26026,
									26048
								],
								[
									26521,
									26542
								],
								[
									27093,
									27112
								],
								[
									27546,
									27554
								],
								[
									30257,
									30269
								],
								[
									32084,
									32119
								],
								[
									32702,
									32721
								],
								[
									32903,
									32920
								],
								[
									32965,
									32978
								],
								[
									33014,
									33024
								],
								[
									33878,
									33894
								],
								[
									34026,
									34045
								],
								[
									34056,
									34075
								],
								[
									34101,
									34121
								]
							],
							"symlist":
							[
								"  value =>",
								"\t(level, message) =>",
								"AsyncCollect(iter)",
								"ExecTool(cmd, ...args)",
								"GetMime(file)",
								"Matcher(pattern, t = arg => arg)",
								"\t(...args) =>",
								"KeyOrValueMatcher(pattern)",
								"\t([key, value]) =>",
								"GetRootDirectories(pattern = '*')",
								"MakeUUID = (rng = Math.random) =>",
								"  n =>",
								"  dd =>",
								"  d =>",
								"  d =>",
								"  d =>",
								"GetDir(dir)",
								"  n =>",
								"DirName(name)",
								"  it =>",
								"DateStr(date)",
								"ModeStr(mode)",
								"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
								"  script =>",
								"FilterForm = ({ ...props }) =>",
								"HTMLTable = ({ rows, ...props }) =>",
								"HTMLTableRow = ({ columns, ...props }) =>",
								"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
								"FileLink = ({ file, ...props }) =>",
								"FileObject = ({ file, stat = {}, ...props }) =>",
								"FileTable = ({ files, ...props }) =>",
								"(a, b) =>",
								"  field =>",
								"  file =>",
								"ReadExiv2(file)",
								"([k, v]) =>",
								"([k, v]) =>",
								"([k, v]) =>",
								"(a, b) =>",
								"([k, v]) =>",
								"ReadExiftool(file)",
								"  l =>",
								"  line =>",
								"([line, idx]) =>",
								"HeifConvert(src, dst, quality = 100)",
								"MagickResize(src, dst, rotate = 0, width, height)",
								"  main(...args)",
								"\t(a, v) =>",
								"\t(v, pv, o) =>",
								"\t(module, ...args) =>",
								"  m =>",
								"  .show = arg =>",
								"  .cleanup = () =>",
								"\t(...args) =>",
								"() =>",
								"  puts(s)",
								"() =>",
								"ParseBody(gen)",
								"  .createWS = (url, callbacks, listen) =>",
								"  .out = s =>",
								"  test(req, resp)",
								"  proxy(req, resp)",
								"  config(req, resp)",
								"  file(req, resp)",
								"([dir]) =>",
								"  f =>",
								"  file =>",
								"  uploads(req, resp)",
								"  s =>",
								"  files(req, resp)",
								"  n =>",
								"([name, type]) =>",
								"  files2(req, resp)",
								"\tn =>",
								"  n =>",
								"  n =>",
								"(a, b) =>",
								"  name =>",
								"  file =>",
								"  file =>",
								"([file, rel]) =>",
								"(acc, [file, st]) =>",
								"  string(a, b)",
								"  number(a, b)",
								"([name, obj]) =>",
								"({ name }) =>",
								"  onConnect(ws, req)",
								"  .sendCommand = function(data)",
								"  onClose(ws, reason)",
								"  onHttp(ws, req, resp)",
								"  onOpen(name, filename)",
								"  onContent(name, data)",
								"  onClose(name, file)",
								"  f = x =>",
								"  onFinalize()",
								"\t(match, p1, p0, p2, p3, offset) =>",
								"  onMessage(ws, data)",
								"  get connections()",
								"  get by_uuid()",
								"  uuid(data)",
								"  onFd(fd, rd, wr)",
								"  onClose(ws, reason)",
								"  onMessage(ws, data)",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tabs_extra_last_activated": 1681456159.77,
							"tabs_extra_last_activated_sheet_index": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/dom/svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17321,
						"regions":
						{
						},
						"selection":
						[
							[
								17321,
								17321
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 529,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681515785.05,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7570.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "svg-crop-pad.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18832,
						"regions":
						{
						},
						"selection":
						[
							[
								14022,
								14154
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 533,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681515786.29,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7660.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6394,
						"regions":
						{
						},
						"selection":
						[
							[
								1580,
								1580
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 34,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681456156.72,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dir-helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2066,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681515787.77,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "upload-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34456,
						"regions":
						{
							"col_0087FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										23452,
										23465
									],
									[
										31859,
										31872
									]
								],
								"scope": "col_0087FFFF"
							},
							"col_0087FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0087FFFF_circle.png",
								"regions":
								[
									[
										23431,
										23431
									],
									[
										31834,
										31834
									]
								],
								"scope": "col_gutter"
							},
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10873,
										10886
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										10826,
										10826
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10849,
										10863
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										10826,
										10826
									]
								],
								"scope": "col_gutter"
							},
							"col_FF87D7FF":
							{
								"flags": 16,
								"regions":
								[
									[
										32611,
										32625
									]
								],
								"scope": "col_FF87D7FF"
							},
							"col_FF87D7FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF87D7FF_circle.png",
								"regions":
								[
									[
										32586,
										32586
									]
								],
								"scope": "col_gutter"
							},
							"col_FFAF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										31659,
										31673
									]
								],
								"scope": "col_FFAF00FF"
							},
							"col_FFAF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFAF00FF_circle.png",
								"regions":
								[
									[
										31630,
										31630
									]
								],
								"scope": "col_gutter"
							},
							"col_FFD700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										24564,
										24578
									],
									[
										24670,
										24684
									],
									[
										24790,
										24804
									]
								],
								"scope": "col_FFD700FF"
							},
							"col_FFD700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFD700FF_circle.png",
								"regions":
								[
									[
										24537,
										24537
									],
									[
										24649,
										24649
									],
									[
										24759,
										24759
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681515789.37,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "io-helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9246,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681456156.65,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "workerScript.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 978,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681456156.63,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"sortedMap",
				"lib/container/sortedMap.js"
			],
			[
				"sorted",
				"lib/container/sortedMap.js"
			],
			[
				"deque",
				"lib/container/deque.js"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"worker",
				"workerScript.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"fire.html",
				"fire.html"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"dir-he",
				"dir-helpers.js"
			],
			[
				"index",
				"assembly/index.ts"
			],
			[
				"fire-debu",
				"~/Projects/plot-cv/fire/build/fire-debug.js"
			],
			[
				"fire.",
				"assembly/fire.ts"
			],
			[
				"packa",
				"package.json"
			],
			[
				"prettier",
				".prettierrc"
			],
			[
				"ascon",
				"asconfig.json"
			],
			[
				"index.",
				"assembly/index.ts"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"extendAr",
				"lib/extendArray.js"
			],
			[
				"extendArray",
				"lib/extendArray.js"
			],
			[
				"propery-enu",
				"src/property-enumeration.c"
			],
			[
				"vector.h",
				"include/vector.h"
			],
			[
				"vector.c",
				"src/vector.c"
			],
			[
				"tree-walk",
				"quickjs-tree-walker.c"
			],
			[
				"tree",
				"quickjs-tree-walker.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"extendGener",
				"lib/extendGenerator.js"
			],
			[
				"",
				"quickjs-tree-walker.c"
			],
			[
				"quickjs-tree",
				"quickjs-tree-walker.c"
			],
			[
				"xpath.",
				"lib/xpath.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"require.js",
				"lib/require.js"
			],
			[
				"c.js",
				"lib/lexer/c.js"
			],
			[
				"quickjs-in",
				"quickjs-internal.h"
			],
			[
				"test",
				"tests/test_mysql.js"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"xml-s",
				"xml-shell.js"
			],
			[
				"xml-she",
				"xml-shell.js"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"lexer.c",
				"src/lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"lexer.h",
				"include/lexer.h"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"lexer.",
				"quickjs-lexer.c"
			],
			[
				"token.h",
				"include/token.h"
			],
			[
				"token.c",
				"src/token.c"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"list-exports",
				"list-exports.js"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"predicate.h",
				"quickjs-predicate.h"
			],
			[
				"location.c",
				"src/location.c"
			],
			[
				"buffer-ut",
				"include/buffer-utils.h"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"Loc",
				"include/location.h"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"prop",
				"src/property-enumeration.c"
			],
			[
				"proper",
				"include/property-enumeration.h"
			],
			[
				"quickjs-dee",
				"quickjs-deep.c"
			],
			[
				"quickjs-inps",
				"quickjs-inspect.c"
			],
			[
				"-misc.c",
				"quickjs-misc.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"dom",
				"lib/dom.js"
			],
			[
				"-inspect",
				"quickjs-inspect.c"
			],
			[
				"cmake/",
				"cmake/QuickJSModule.cmake"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"process",
				"lib/process.js"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"ecmascript.js",
				"lib/lexer/ecmascript.js"
			],
			[
				"quickjs-int",
				"quickjs-internal.h"
			],
			[
				"ecmas",
				"lib/lexer/ecmascript.js"
			],
			[
				"ecma",
				"lib/lexer/ecmascript.js"
			],
			[
				"ecmasc",
				"lib/lexer/ecmascript.js"
			],
			[
				"lib/util",
				"lib/util.js"
			],
			[
				"quickjs-my",
				"quickjs-mysql.c"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"char-utils",
				"src/char-utils.c"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quicks.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"list-export",
				"list-exports.js"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"buffer",
				"include/buffer-utils.h"
			],
			[
				"quickjs-path",
				"quickjs-path.c"
			],
			[
				"ringbuf",
				"include/ringbuffer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"test_my",
				"tests/test_mysql.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"mysql.c",
				"quickjs-mysql.c"
			],
			[
				"mysql.h",
				"/usr/include/mariadb/mysql.h"
			],
			[
				"mysql_com",
				"~/Projects/mariadb-10.3-10.3.38/include/mysql_com.h"
			],
			[
				"-mysql",
				"quickjs-mysql.c"
			],
			[
				"buffer-u",
				"include/buffer-utils.h"
			],
			[
				"buffer-utils",
				"src/buffer-utils.c"
			],
			[
				"buffer-util",
				"include/buffer-utils.h"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"defines.h",
				"include/defines.h"
			],
			[
				"debug.h",
				"include/debug.h"
			],
			[
				"quickjs-inter",
				"quickjs-internal.h"
			],
			[
				"js-utils",
				"include/js-utils.h"
			],
			[
				"ecmascript",
				"lib/lexer/ecmascript.js"
			],
			[
				"funct",
				"cmake/functions.cmake"
			],
			[
				"CMakeLists",
				"CMakeLists.txt"
			],
			[
				"findQuick",
				"cmake/FindQuickJS.cmake"
			],
			[
				"QuickJSMo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"parser.",
				"lib/parser.js"
			],
			[
				".l",
				"tests/Shell-Grammar.l"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1017.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 308.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
