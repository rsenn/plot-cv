{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"getOwn",
				"getOwnPropertySymbols(...)"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  scriptName = (arg = scriptArgs[0]) =>\n() =>\nStartREPL(prefix = \n, suffix = '')\n  name =>\n  m =>\n() =>\n() =>\n(...args) =>\n  main(...args)\n  (a, v) =>\n  (v, pv, o) =>\n  .createWS = (url, callbacks, listen) =>\n  () =>\n  (level, str) =>\n  onConnect(ws, req)\n  .sendMessage = function(msg)\n  onClose(ws)\n  onError(ws)\n  onHttp(req, rsp)\n  onMessage(ws, data)\n  handleCommand(ws, data)\n  () =>\n  (dbg, sock) =>\n() =>\n  onFd(fd, rd, wr)\n  quit(why)",
			"settings":
			{
				"buffer_size": 443,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/clang-ast.js",
						"symkeys":
						[
							[
								715,
								742
							],
							[
								822,
								852
							],
							[
								919,
								927
							],
							[
								965,
								992
							],
							[
								1041,
								1068
							],
							[
								1150,
								1154
							],
							[
								1177,
								1210
							],
							[
								1397,
								1401
							],
							[
								1420,
								1440
							],
							[
								1596,
								1628
							],
							[
								1792,
								1810
							],
							[
								2062,
								2079
							],
							[
								2387,
								2398
							],
							[
								2422,
								2429
							],
							[
								2458,
								2467
							],
							[
								2597,
								2603
							],
							[
								2725,
								2733
							],
							[
								2858,
								2867
							],
							[
								2893,
								2902
							],
							[
								2933,
								2937
							],
							[
								2998,
								3002
							],
							[
								3078,
								3094
							],
							[
								3354,
								3369
							],
							[
								3436,
								3445
							],
							[
								3513,
								3521
							],
							[
								3576,
								3585
							],
							[
								3659,
								3669
							],
							[
								3723,
								3732
							],
							[
								3762,
								3771
							],
							[
								3881,
								3892
							],
							[
								4094,
								4098
							],
							[
								4753,
								4764
							],
							[
								5014,
								5028
							],
							[
								5078,
								5114
							],
							[
								5152,
								5157
							],
							[
								5198,
								5240
							],
							[
								5433,
								5437
							],
							[
								5471,
								5482
							],
							[
								5514,
								5533
							],
							[
								5852,
								5894
							],
							[
								5966,
								5976
							],
							[
								6197,
								6202
							],
							[
								6268,
								6275
							],
							[
								6392,
								6396
							],
							[
								6494,
								6516
							],
							[
								7007,
								7012
							],
							[
								8834,
								8838
							],
							[
								9619,
								9629
							],
							[
								9847,
								9859
							],
							[
								10000,
								10008
							],
							[
								10091,
								10102
							],
							[
								10189,
								10201
							],
							[
								10293,
								10302
							],
							[
								10373,
								10382
							],
							[
								10500,
								10516
							],
							[
								10586,
								10602
							],
							[
								10691,
								10704
							],
							[
								11237,
								11252
							],
							[
								11337,
								11342
							],
							[
								11594,
								11608
							],
							[
								11714,
								11726
							],
							[
								11795,
								11807
							],
							[
								11866,
								11883
							],
							[
								11969,
								11980
							],
							[
								12074,
								12087
							],
							[
								12227,
								12235
							],
							[
								12342,
								12352
							],
							[
								12554,
								12563
							],
							[
								14053,
								14063
							],
							[
								16946,
								16952
							],
							[
								17236,
								17247
							],
							[
								17347,
								17383
							],
							[
								17561,
								17569
							],
							[
								17629,
								17637
							],
							[
								19435,
								19465
							],
							[
								19544,
								19554
							],
							[
								19572,
								19594
							],
							[
								19774,
								19782
							],
							[
								19863,
								19871
							],
							[
								20050,
								20057
							],
							[
								20108,
								20122
							],
							[
								20531,
								20535
							],
							[
								20719,
								20724
							],
							[
								21354,
								21358
							],
							[
								22101,
								22111
							],
							[
								22186,
								22206
							],
							[
								22409,
								22417
							],
							[
								22539,
								22558
							],
							[
								22655,
								22663
							],
							[
								22681,
								22703
							],
							[
								22819,
								22827
							],
							[
								22932,
								22958
							],
							[
								23209,
								23217
							],
							[
								23332,
								23343
							],
							[
								23361,
								23383
							],
							[
								23451,
								23455
							],
							[
								23561,
								23571
							],
							[
								23631,
								23635
							],
							[
								23698,
								23702
							],
							[
								23752,
								23756
							],
							[
								24219,
								24229
							],
							[
								24267,
								24275
							],
							[
								24372,
								24381
							],
							[
								24399,
								24421
							],
							[
								24527,
								24531
							],
							[
								24931,
								24943
							],
							[
								24961,
								24983
							],
							[
								25173,
								25181
							],
							[
								25244,
								25252
							],
							[
								25442,
								25447
							],
							[
								25756,
								25775
							],
							[
								25836,
								25844
							],
							[
								25953,
								25960
							],
							[
								25978,
								26000
							],
							[
								26345,
								26353
							],
							[
								26450,
								26459
							],
							[
								26496,
								26507
							],
							[
								26525,
								26547
							],
							[
								26597,
								26608
							],
							[
								26626,
								26648
							],
							[
								26809,
								26817
							],
							[
								26920,
								26937
							],
							[
								26955,
								26977
							],
							[
								27233,
								27241
							],
							[
								27352,
								27360
							],
							[
								27365,
								27381
							],
							[
								27583,
								27596
							],
							[
								27631,
								27646
							],
							[
								27731,
								27741
							],
							[
								28054,
								28074
							],
							[
								28157,
								28203
							],
							[
								29656,
								29720
							],
							[
								29998,
								30002
							],
							[
								30756,
								30764
							],
							[
								30872,
								30880
							],
							[
								30955,
								30970
							],
							[
								31250,
								31257
							],
							[
								31311,
								31318
							],
							[
								31402,
								31409
							],
							[
								31586,
								31621
							],
							[
								31660,
								31680
							],
							[
								31710,
								31716
							],
							[
								31737,
								31745
							],
							[
								31851,
								31884
							],
							[
								32197,
								32222
							],
							[
								32617,
								32659
							],
							[
								33312,
								33365
							],
							[
								34286,
								34292
							],
							[
								34342,
								34348
							],
							[
								34476,
								34482
							],
							[
								34680,
								34696
							],
							[
								35063,
								35070
							],
							[
								35113,
								35117
							],
							[
								35137,
								35144
							],
							[
								35264,
								35291
							],
							[
								35349,
								35356
							],
							[
								35620,
								35627
							],
							[
								35687,
								35701
							],
							[
								35746,
								35761
							],
							[
								35786,
								35790
							],
							[
								35821,
								35832
							],
							[
								35865,
								35877
							],
							[
								35911,
								35924
							],
							[
								35996,
								36001
							],
							[
								36099,
								36103
							],
							[
								36127,
								36139
							],
							[
								36208,
								36213
							],
							[
								36273,
								36277
							],
							[
								36308,
								36317
							],
							[
								36330,
								36346
							],
							[
								36707,
								36711
							],
							[
								36735,
								36746
							],
							[
								36805,
								36809
							],
							[
								36847,
								36851
							],
							[
								36882,
								36898
							],
							[
								36936,
								36940
							],
							[
								36958,
								36962
							],
							[
								37005,
								37045
							],
							[
								37104,
								37120
							],
							[
								37482,
								37503
							],
							[
								37529,
								37533
							],
							[
								37976,
								37981
							],
							[
								38022,
								38049
							],
							[
								38243,
								38265
							],
							[
								39300,
								39341
							],
							[
								39421,
								39428
							],
							[
								39494,
								39501
							],
							[
								39538,
								39564
							],
							[
								39658,
								39666
							],
							[
								39732,
								39740
							],
							[
								39802,
								39813
							],
							[
								39960,
								39986
							],
							[
								40038,
								40057
							],
							[
								40133,
								40150
							],
							[
								40185,
								40209
							],
							[
								40455,
								40460
							],
							[
								40517,
								40524
							],
							[
								40605,
								40616
							],
							[
								41106,
								41116
							],
							[
								41162,
								41166
							],
							[
								41824,
								41835
							],
							[
								41846,
								41870
							],
							[
								41938,
								41970
							],
							[
								42126,
								42151
							],
							[
								42215,
								42251
							],
							[
								42321,
								42361
							],
							[
								42613,
								42641
							],
							[
								42688,
								42719
							],
							[
								42948,
								42990
							],
							[
								43193,
								43214
							],
							[
								43259,
								43278
							],
							[
								43612,
								43631
							],
							[
								43835,
								43870
							],
							[
								43988,
								44036
							],
							[
								44282,
								44309
							],
							[
								44927,
								44968
							],
							[
								45206,
								45233
							],
							[
								45376,
								45397
							],
							[
								45458,
								45485
							],
							[
								45530,
								45562
							],
							[
								45812,
								45838
							],
							[
								46032,
								46051
							],
							[
								46713,
								46738
							],
							[
								46786,
								46817
							],
							[
								46884,
								46899
							],
							[
								47094,
								47115
							],
							[
								47232,
								47268
							],
							[
								47488,
								47507
							],
							[
								47911,
								47932
							],
							[
								48149,
								48182
							],
							[
								48242,
								48265
							],
							[
								48328,
								48345
							],
							[
								48465,
								48469
							],
							[
								49296,
								49321
							],
							[
								49528,
								49555
							],
							[
								50020,
								50024
							],
							[
								50234,
								50238
							],
							[
								50437,
								50456
							],
							[
								50553,
								50558
							],
							[
								50712,
								50751
							],
							[
								50850,
								50893
							],
							[
								51103,
								51118
							],
							[
								51288,
								51324
							],
							[
								51420,
								51448
							],
							[
								51718,
								51762
							],
							[
								51824,
								51855
							],
							[
								51914,
								51935
							],
							[
								51994,
								52017
							],
							[
								52440,
								52466
							],
							[
								52534,
								52560
							],
							[
								52624,
								52643
							],
							[
								52684,
								52719
							],
							[
								52893,
								52935
							],
							[
								53120,
								53141
							],
							[
								53317,
								53347
							],
							[
								53567,
								53593
							],
							[
								54021,
								54040
							],
							[
								54101,
								54124
							],
							[
								54659,
								54686
							],
							[
								54736,
								54759
							],
							[
								54916,
								54952
							],
							[
								55022,
								55051
							],
							[
								55109,
								55132
							],
							[
								55310,
								55335
							],
							[
								55419,
								55461
							],
							[
								55560,
								55585
							],
							[
								55889,
								55944
							],
							[
								56186,
								56215
							],
							[
								56466,
								56510
							],
							[
								56642,
								56686
							],
							[
								56773,
								56801
							],
							[
								56945,
								56969
							],
							[
								57217,
								57261
							],
							[
								57583,
								57636
							],
							[
								57735,
								57780
							],
							[
								57855,
								57874
							],
							[
								57935,
								57956
							],
							[
								58133,
								58160
							],
							[
								58209,
								58239
							],
							[
								58251,
								58272
							],
							[
								58284,
								58316
							],
							[
								58458,
								58488
							],
							[
								58500,
								58541
							],
							[
								58553,
								58592
							],
							[
								58604,
								58627
							],
							[
								58639,
								58662
							],
							[
								58674,
								58693
							],
							[
								58705,
								58747
							],
							[
								58759,
								58784
							],
							[
								58796,
								58823
							],
							[
								58835,
								58873
							],
							[
								58885,
								58967
							],
							[
								58979,
								59046
							],
							[
								59058,
								59083
							],
							[
								59095,
								59137
							],
							[
								59149,
								59187
							],
							[
								59199,
								59256
							],
							[
								59268,
								59306
							],
							[
								59318,
								59343
							],
							[
								59355,
								59382
							],
							[
								59394,
								59432
							],
							[
								59444,
								59500
							],
							[
								59594,
								59645
							],
							[
								59657,
								59732
							],
							[
								59744,
								59775
							],
							[
								59787,
								59806
							],
							[
								59818,
								59854
							],
							[
								59950,
								59971
							],
							[
								59983,
								60013
							],
							[
								60025,
								60048
							],
							[
								60060,
								60103
							],
							[
								60115,
								60153
							],
							[
								60165,
								60209
							],
							[
								60221,
								60245
							],
							[
								60257,
								60287
							],
							[
								60299,
								60325
							],
							[
								60369,
								60416
							],
							[
								60428,
								60470
							],
							[
								60482,
								60520
							],
							[
								60532,
								60568
							],
							[
								60580,
								60627
							],
							[
								60639,
								60662
							],
							[
								60674,
								60708
							],
							[
								60720,
								60763
							],
							[
								60775,
								60827
							],
							[
								60931,
								60978
							],
							[
								60990,
								61018
							],
							[
								61030,
								61068
							],
							[
								61080,
								61121
							],
							[
								61133,
								61152
							],
							[
								61164,
								61193
							],
							[
								61205,
								61231
							],
							[
								61243,
								61271
							],
							[
								61283,
								61335
							],
							[
								61347,
								61375
							],
							[
								61387,
								61421
							],
							[
								61433,
								61454
							],
							[
								61466,
								61489
							],
							[
								61501,
								61539
							],
							[
								61551,
								61589
							],
							[
								61601,
								61622
							],
							[
								61634,
								61659
							],
							[
								61671,
								61696
							],
							[
								61708,
								61739
							],
							[
								61751,
								61770
							],
							[
								61782,
								61805
							],
							[
								61817,
								61858
							],
							[
								61870,
								61913
							],
							[
								61925,
								61952
							],
							[
								61964,
								62002
							],
							[
								62014,
								62047
							],
							[
								62059,
								62095
							],
							[
								62107,
								62126
							],
							[
								62138,
								62201
							],
							[
								62213,
								62269
							],
							[
								62281,
								62304
							],
							[
								62316,
								62351
							],
							[
								62363,
								62419
							],
							[
								62431,
								62484
							],
							[
								62496,
								62541
							],
							[
								62553,
								62598
							],
							[
								62610,
								62655
							],
							[
								62667,
								62697
							],
							[
								62709,
								62756
							],
							[
								62768,
								62793
							],
							[
								62805,
								62838
							],
							[
								62850,
								62880
							],
							[
								62892,
								62932
							],
							[
								62944,
								62997
							],
							[
								63009,
								63032
							],
							[
								63044,
								63065
							],
							[
								63077,
								63117
							],
							[
								63129,
								63163
							],
							[
								63175,
								63197
							],
							[
								63209,
								63243
							],
							[
								63255,
								63278
							],
							[
								63290,
								63332
							],
							[
								63344,
								63375
							],
							[
								63387,
								63413
							],
							[
								63426,
								63456
							],
							[
								64030,
								64070
							],
							[
								64280,
								64284
							],
							[
								65425,
								65465
							],
							[
								65847,
								65907
							],
							[
								66343,
								66369
							],
							[
								66477,
								66515
							],
							[
								66711,
								66715
							],
							[
								67002,
								67032
							],
							[
								67490,
								67494
							],
							[
								68146,
								68185
							],
							[
								68848,
								68905
							],
							[
								69226,
								69250
							],
							[
								69722,
								69752
							],
							[
								70015,
								70056
							],
							[
								70191,
								70230
							],
							[
								70242,
								70287
							],
							[
								70299,
								70327
							],
							[
								70339,
								70375
							],
							[
								70519,
								70557
							],
							[
								70569,
								70608
							],
							[
								70620,
								70661
							],
							[
								70673,
								70708
							],
							[
								70720,
								70767
							],
							[
								70779,
								70818
							],
							[
								70831,
								70865
							],
							[
								70877,
								70925
							],
							[
								70937,
								70980
							],
							[
								70992,
								71041
							],
							[
								71053,
								71103
							],
							[
								71115,
								71164
							],
							[
								71418,
								71442
							],
							[
								71497,
								71522
							],
							[
								71901,
								71930
							],
							[
								72109,
								72114
							],
							[
								72386,
								72407
							],
							[
								72474,
								72517
							],
							[
								72704,
								72708
							],
							[
								73290,
								73298
							],
							[
								73350,
								73358
							],
							[
								73470,
								73474
							],
							[
								73726,
								73751
							],
							[
								73786,
								73796
							],
							[
								73860,
								73871
							],
							[
								73945,
								73960
							],
							[
								73999,
								74003
							],
							[
								74082,
								74107
							],
							[
								74146,
								74154
							],
							[
								74195,
								74224
							],
							[
								74254,
								74258
							]
						],
						"symlist":
						[
							"function FileTime(filename)",
							"function Newer(file, ...other)",
							"other =>",
							"function Older(file, other)",
							"function GetSubscripts(str)",
							"m =>",
							"function TrimSubscripts(str, sub)",
							"List",
							"constructor(...args)",
							"filter(callback, thisArg = null)",
							"callback = elem =>",
							"slice(start, end)",
							"get first()",
							"elem =>",
							"entries()",
							"keys()",
							"values()",
							"toArray()",
							"(a, n) =>",
							"List",
							"Node",
							"constructor(ast)",
							"static get(ast)",
							"get ast()",
							"get id()",
							"get loc()",
							"get file()",
							" (v,k) =>",
							" (v,k) =>",
							"get range()",
							"r =>",
							"toJSON(obj)",
							"(node, ast) =>",
							" function PathOf(node, ast = $.data)",
							" n =>",
							" function Hier(node_or_path, ast = $.data)",
							"p =>",
							"([p, n]) =>",
							" ([p, n]) =>",
							" function FindType(typeName, ast = $.data)",
							"([tok]) =>",
							" n =>",
							"node =>",
							"Type",
							"constructor(node, ast)",
							" n =>",
							"n =>",
							" (n, p) =>",
							"get regExp()",
							"isEnum()",
							"isPointer()",
							"isFunction()",
							"isArray()",
							"arrayOf()",
							"get subscripts()",
							"trimSubscripts()",
							"get pointer()",
							"getPointer(ast)",
							" n =>",
							"get unsigned()",
							"get signed()",
							"isCompound()",
							"isFloatingPoint()",
							"get alias()",
							"get aliases()",
							"isEnum()",
							"isString()",
							"get ffi()",
							"get size()",
							"toJS()",
							"toJSON(obj)",
							"static get(name_or_id, ast = $.data)",
							" node =>",
							" node =>",
							"function RoundTo(value, align)",
							"RecordDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							"node =>",
							"(acc, node) =>",
							"i =>",
							" n =>",
							"n =>",
							"get size()",
							"(acc,[name,type]) =>",
							"toJSON()",
							"([name, member]) =>",
							"EnumDecl",
							"constructor(node, ast)",
							"child =>",
							"({ name, type, inner }) =>",
							"toJSON()",
							"TypedefDecl",
							"constructor(node, ast)",
							"n =>",
							" (v, k) =>",
							"n =>",
							"n =>",
							"n =>",
							"get size()",
							"toJSON()",
							"FieldDecl",
							"constructor(node, ast)",
							"n =>",
							"FunctionDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							" n =>",
							"({ name, type }) =>",
							"toJSON()",
							"VarDecl",
							"constructor(node, ast)",
							"toJSON()",
							"ClassDecl",
							"BuiltinType",
							"constructor(node, ast)",
							"PointerType",
							"constructor(node, ast)",
							"toJSON()",
							"ConstantArrayType",
							"constructor(node, ast)",
							"toJSON()",
							"Location",
							"constructor(loc)",
							" (t, ...c) =>",
							"'\\x1b[m' : t =>",
							"toString()",
							"localeCompare(other)",
							" function TypeFactory(node, ast, cache = true)",
							"async function SpawnCompiler(compiler, input, output, args = [])",
							"p =>",
							" data =>",
							" data =>",
							"async reader =>",
							"line =>",
							"line =>",
							"line =>",
							" function PipeReader(fd, callback)",
							"(resolve, reject) =>",
							" () =>",
							" data =>",
							" function ReadPipe(fd, callback)",
							" function ReadOutput(fd)",
							"async function SourceDependencies(...args)",
							"async function AstDump(compiler, source, args, force)",
							"size()",
							"json()",
							"data()",
							"SetFile = loc =>",
							"files()",
							"n =>",
							"file =>",
							"pred2 = (used, implicit) =>",
							"node =>",
							"types()",
							" n =>",
							" () =>",
							"List",
							"functions()",
							" n =>",
							" () =>",
							" n =>",
							"List",
							"namespaces()",
							" n =>",
							"List",
							"classes()",
							"predicate = n =>",
							"List",
							"variables()",
							"n =>",
							"List",
							"names(depth = 1)",
							"n =>",
							"n =>",
							" function NameFor(decl, ast = this.data)",
							" (value, key) =>",
							" function NodeType(n)",
							"t =>",
							" n =>",
							" function NodeName(n, name)",
							" function GetLoc(node)",
							" function GetTypeNode(node, ast = $.data)",
							"node =>",
							"node =>",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function NodePrinter(ast)",
							" function put(str)",
							" function trim()",
							"printer = function(node)",
							"get()",
							"value()",
							"value(node)",
							"toString()",
							"i =>",
							"NodePrinter",
							"AbiTagAttr(abi_tag_attr)",
							"AccessSpecDecl(access_spec_decl)",
							"AlignedAttr(aligned_attr)",
							"AlwaysInlineAttr(always_inline_attr)",
							"ArraySubscriptExpr(array_subscript_expr)",
							"AsmLabelAttr(asm_label_attr)",
							"BinaryOperator(binary_operator)",
							"BlockCommandComment(block_command_comment)",
							"BreakStmt(break_stmt)",
							"CallExpr(call_expr)",
							"CaseStmt(case_stmt)",
							"CharacterLiteral(character_literal)",
							"CompoundAssignOperator(compound_assign_operator)",
							"CompoundStmt(compound_stmt)",
							"ConditionalOperator(conditional_operator)",
							"ConstantExpr(constant_expr)",
							"ConstAttr(const_attr)",
							"ContinueStmt(continue_stmt)",
							"CStyleCastExpr(cstyle_cast_expr)",
							"DeclRefExpr(decl_ref_expr)",
							"DeclStmt(decl_stmt)",
							"DefaultStmt(default_stmt)",
							"DeprecatedAttr(deprecated_attr)",
							"DoStmt(do_stmt)",
							"EmptyDecl(empty_decl)",
							"EnumConstantDecl(enum_constant_decl)",
							"EnumDecl(enum_decl)",
							"FieldDecl(field_decl)",
							"FloatingLiteral(floating_literal)",
							"FormatAttr(format_attr)",
							"ForStmt(for_stmt)",
							"n =>",
							"FullComment(full_comment)",
							"FunctionDecl(function_decl)",
							"n =>",
							"n =>",
							"GotoStmt(goto_stmt)",
							" n =>",
							"HTMLEndTagComment(html_end_tag_comment)",
							"HTMLStartTagComment(html_start_tag_comment)",
							"IfStmt(if_stmt)",
							"ImplicitCastExpr(implicit_cast_expr)",
							"InitListExpr(init_list_expr)",
							"InlineCommandComment(inline_command_comment)",
							"IntegerLiteral(integer_literal)",
							"LabelStmt(label_stmt)",
							"MemberExpr(member_expr)",
							"NonNullAttr(non_null_attr)",
							"NoThrowAttr(no_throw_attr)",
							"NullStmt(null_stmt)",
							"ParagraphComment(paragraph_comment)",
							"ParamCommandComment(param_command_comment)",
							"ParenExpr(paren_expr)",
							"ParenListExpr(paren_list_expr)",
							"ParmVarDecl(parm_var_decl)",
							"PureAttr(pure_attr)",
							"RecordDecl(record_decl)",
							"RestrictAttr(restrict_attr)",
							"ReturnStmt(return_stmt)",
							"ReturnsTwiceAttr(returns_twice_attr)",
							"StringLiteral(string_literal)",
							"SwitchStmt(switch_stmt)",
							"TextComment(text_comment)",
							"TranslationUnitDecl(translation_unit_decl)",
							"TypedefDecl(typedef_decl)",
							"UnaryExprOrTypeTraitExpr(unary_expr_or_type_trait_expr)",
							"UnaryOperator(unary_operator)",
							"UnresolvedLookupExpr(unresolved_lookup_expr)",
							"UnresolvedMemberExpr(unresolved_member_expr)",
							"VarDecl(var_decl, base_type)",
							"([offset, subscript]) =>",
							"VerbatimBlockComment(verbatim_block_comment)",
							"VerbatimBlockLineComment(verbatim_block_line_comment)",
							"WarnUnusedResultAttr(warn_unused_result_attr)",
							"WeakAttr(weak_attr)",
							"WhileStmt(while_stmt)",
							"OverrideAttr(override_attr)",
							"AddrLabelExpr(addr_label_expr)",
							"AliasAttr(alias_attr)",
							"AlignValueAttr(align_value_attr)",
							"AllocSizeAttr(alloc_size_attr)",
							"ArrayInitIndexExpr(array_init_index_expr)",
							"ArrayInitLoopExpr(array_init_loop_expr)",
							"AtomicExpr(atomic_expr)",
							"AtomicType(atomic_type)",
							"AutoType(auto_type)",
							"BuiltinTemplateDecl(builtin_template_decl)",
							"BuiltinType(builtin_type)",
							"CallbackAttr(callback_attr)",
							"ClassTemplateDecl(class_template_decl)",
							"ClassTemplatePartialSpecializationDecl(class_template_partial_specialization_decl)",
							"ClassTemplateSpecializationDecl(class_template_specialization_decl)",
							"ComplexType(complex_type)",
							"CompoundLiteralExpr(compound_literal_expr)",
							"ConstantArrayType(constant_array_type)",
							"ConstructorUsingShadowDecl(constructor_using_shadow_decl)",
							"ConvertVectorExpr(convert_vector_expr)",
							"DecayedType(decayed_type)",
							"DecltypeType(decltype_type)",
							"DependentNameType(dependent_name_type)",
							"DependentScopeDeclRefExpr(dependent_scope_decl_ref_expr)",
							"DependentSizedArrayType(dependent_sized_array_type)",
							"DependentTemplateSpecializationType(dependent_template_specialization_type)",
							"ElaboratedType(elaborated_type)",
							"EnumType(enum_type)",
							"ExprWithCleanups(expr_with_cleanups)",
							"FinalAttr(final_attr)",
							"FormatArgAttr(format_arg_attr)",
							"FriendDecl(friend_decl)",
							"FunctionNoProtoType(function_no_proto_type)",
							"FunctionProtoType(function_proto_type)",
							"FunctionTemplateDecl(function_template_decl)",
							"GCCAsmStmt(gcc_asm_stmt)",
							"GNUInlineAttr(gnu_inline_attr)",
							"GNUNullExpr(gnu_null_expr)",
							"ImplicitValueInitExpr(implicit_value_init_expr)",
							"IncompleteArrayType(incomplete_array_type)",
							"IndirectFieldDecl(indirect_field_decl)",
							"IndirectGotoStmt(indirect_goto_stmt)",
							"InjectedClassNameType(injected_class_name_type)",
							"LambdaExpr(lambda_expr)",
							"LinkageSpecDecl(linkage_spec_decl)",
							"LValueReferenceType(l_value_reference_type)",
							"MaterializeTemporaryExpr(materialize_temporary_expr)",
							"MaxFieldAlignmentAttr(max_field_alignment_attr)",
							"MayAliasAttr(may_alias_attr)",
							"MemberPointerType(member_pointer_type)",
							"MinVectorWidthAttr(min_vector_width_attr)",
							"ModeAttr(mode_attr)",
							"NamespaceDecl(namespace_decl)",
							"NoDebugAttr(no_debug_attr)",
							"NoInlineAttr(no_inline_attr)",
							"NonTypeTemplateParmDecl(non_type_template_parm_decl)",
							"OffsetOfExpr(offset_of_expr)",
							"OpaqueValueExpr(opaque_value_expr)",
							"OwnerAttr(owner_attr)",
							"PackedAttr(packed_attr)",
							"PackExpansionExpr(pack_expansion_expr)",
							"PackExpansionType(pack_expansion_type)",
							"ParenType(paren_type)",
							"PointerAttr(pointer_attr)",
							"PointerType(pointer_type)",
							"PredefinedExpr(predefined_expr)",
							"QualType(qual_type)",
							"RecordType(record_type)",
							"ReturnsNonNullAttr(returns_non_null_attr)",
							"RValueReferenceType(r_value_reference_type)",
							"SentinelAttr(sentinel_attr)",
							"ShuffleVectorExpr(shuffle_vector_expr)",
							"SizeOfPackExpr(size_of_pack_expr)",
							"StaticAssertDecl(static_assert_decl)",
							"StmtExpr(stmt_expr)",
							"SubstNonTypeTemplateParmExpr(subst_non_type_template_parm_expr)",
							"SubstTemplateTypeParmType(subst_template_type_parm_type)",
							"TargetAttr(target_attr)",
							"TemplateArgument(template_argument)",
							"TemplateSpecializationType(template_specialization_type)",
							"TemplateTemplateParmDecl(template_template_parm_decl)",
							"TemplateTypeParmDecl(template_type_parm_decl)",
							"TemplateTypeParmType(template_type_parm_type)",
							"TParamCommandComment(t_param_command_comment)",
							"TypeAliasDecl(type_alias_decl)",
							"TypeAliasTemplateDecl(type_alias_template_decl)",
							"TypedefType(typedef_type)",
							"TypeOfExprType(type_of_expr_type)",
							"TypeTraitExpr(type_trait_expr)",
							"UnaryTransformType(unary_transform_type)",
							"UnresolvedUsingValueDecl(unresolved_using_value_decl)",
							"UnusedAttr(unused_attr)",
							"UsingDecl(using_decl)",
							"UsingDirectiveDecl(using_directive_decl)",
							"UsingShadowDecl(using_shadow_decl)",
							"VAArgExpr(va_arg_expr)",
							"VarTemplateDecl(var_template_decl)",
							"VectorType(vector_type)",
							"VerbatimLineComment(verbatim_line_comment)",
							"VisibilityAttr(visibility_attr)",
							"WeakRefAttr(weak_ref_attr)",
							"CXXRecordDecl(cxx_record_decl)",
							"CXXConstructorDecl(cxx_constructor_decl)",
							"n =>",
							"CXXCtorInitializer(cxx_ctor_initializer)",
							"CXXDependentScopeMemberExpr(cxx_dependent_scope_member_expr)",
							"CXXThisExpr(cxx_this_expr)",
							"CXXDestructorDecl(cxx_destructor_decl)",
							"n =>",
							"CXXMethodDecl(cxx_method_decl)",
							"n =>",
							"CXXStaticCastExpr(cxx_static_cast_expr)",
							"CXXUnresolvedConstructExpr(cxx_unresolved_construct_expr)",
							"CXXNewExpr(cxx_new_expr)",
							"CXXDeleteExpr(cxx_delete_expr)",
							"CXXBoolLiteralExpr(cxx_bool_literal_expr)",
							"CXX11NoReturnAttr(cxx11_no_return_attr)",
							"CXXBindTemporaryExpr(cxx_bind_temporary_expr)",
							"CXXCatchStmt(cxx_catch_stmt)",
							"CXXConstructExpr(cxx_construct_expr)",
							"CXXConversionDecl(cxx_conversion_decl)",
							"CXXDefaultArgExpr(cxx_default_arg_expr)",
							"CXXDefaultInitExpr(cxx_default_init_expr)",
							"CXXForRangeStmt(cxx_for_range_stmt)",
							"CXXFunctionalCastExpr(cxx_functional_cast_expr)",
							"CXXMemberCallExpr(cxx_member_call_expr)",
							"CXXNoexceptExpr(cxx_noexcept_expr)",
							"CXXNullPtrLiteralExpr(cxx_null_ptr_literal_expr)",
							"CXXOperatorCallExpr(cxx_operator_call_expr)",
							"CXXReinterpretCastExpr(cxx_reinterpret_cast_expr)",
							"CXXScalarValueInitExpr(cxx_scalar_value_init_expr)",
							"CXXTemporaryObjectExpr(cxx_temporary_object_expr)",
							"CXXTryStmt(cxx_try_stmt)",
							" function PrintNode(node)",
							" function PrintAst(node, ast)",
							"get()",
							" function isNode(obj)",
							" function GetType(name_or_id, ast = $.data)",
							"n =>",
							" node =>",
							" node =>",
							"r =>",
							" function GetFields(node)",
							" (v, k) =>",
							"([v, p]) =>",
							"([loc, ptr]) =>",
							"i =>",
							" function GetParams(node)",
							"child =>",
							" function PathRemoveLoc(path)",
							"p =>"
						]
					},
					"AQAAAAAAAAAAAAAA2icAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/clang-ast.js",
						"symkeys":
						[
							[
								715,
								742
							],
							[
								822,
								852
							],
							[
								919,
								927
							],
							[
								965,
								992
							],
							[
								1041,
								1068
							],
							[
								1150,
								1154
							],
							[
								1177,
								1210
							],
							[
								1397,
								1401
							],
							[
								1420,
								1440
							],
							[
								1596,
								1628
							],
							[
								1792,
								1810
							],
							[
								2062,
								2079
							],
							[
								2387,
								2398
							],
							[
								2422,
								2429
							],
							[
								2458,
								2467
							],
							[
								2597,
								2603
							],
							[
								2725,
								2733
							],
							[
								2858,
								2867
							],
							[
								2893,
								2902
							],
							[
								2933,
								2937
							],
							[
								2998,
								3002
							],
							[
								3078,
								3094
							],
							[
								3354,
								3369
							],
							[
								3436,
								3445
							],
							[
								3513,
								3521
							],
							[
								3576,
								3585
							],
							[
								3659,
								3669
							],
							[
								3723,
								3732
							],
							[
								3762,
								3771
							],
							[
								3881,
								3892
							],
							[
								4094,
								4098
							],
							[
								4753,
								4764
							],
							[
								5014,
								5028
							],
							[
								5078,
								5114
							],
							[
								5152,
								5157
							],
							[
								5198,
								5240
							],
							[
								5433,
								5437
							],
							[
								5471,
								5482
							],
							[
								5514,
								5533
							],
							[
								5852,
								5894
							],
							[
								5966,
								5976
							],
							[
								6197,
								6202
							],
							[
								6268,
								6275
							],
							[
								6392,
								6396
							],
							[
								6494,
								6516
							],
							[
								7007,
								7012
							],
							[
								8834,
								8838
							],
							[
								9619,
								9629
							],
							[
								9847,
								9859
							],
							[
								10000,
								10008
							],
							[
								10091,
								10102
							],
							[
								10189,
								10201
							],
							[
								10293,
								10302
							],
							[
								10373,
								10382
							],
							[
								10500,
								10516
							],
							[
								10586,
								10602
							],
							[
								10691,
								10704
							],
							[
								11237,
								11252
							],
							[
								11337,
								11342
							],
							[
								11594,
								11608
							],
							[
								11714,
								11726
							],
							[
								11795,
								11807
							],
							[
								11866,
								11883
							],
							[
								11969,
								11980
							],
							[
								12074,
								12087
							],
							[
								12227,
								12235
							],
							[
								12342,
								12352
							],
							[
								12554,
								12563
							],
							[
								14053,
								14063
							],
							[
								16946,
								16952
							],
							[
								17236,
								17247
							],
							[
								17347,
								17383
							],
							[
								17561,
								17569
							],
							[
								17629,
								17637
							],
							[
								19435,
								19465
							],
							[
								19544,
								19554
							],
							[
								19572,
								19594
							],
							[
								19774,
								19782
							],
							[
								19863,
								19871
							],
							[
								20050,
								20057
							],
							[
								20108,
								20122
							],
							[
								20531,
								20535
							],
							[
								20620,
								20625
							],
							[
								21122,
								21126
							],
							[
								21698,
								21708
							],
							[
								21783,
								21803
							],
							[
								22006,
								22014
							],
							[
								22136,
								22155
							],
							[
								22252,
								22260
							],
							[
								22278,
								22300
							],
							[
								22416,
								22424
							],
							[
								22529,
								22555
							],
							[
								22806,
								22814
							],
							[
								22929,
								22940
							],
							[
								22958,
								22980
							],
							[
								23048,
								23052
							],
							[
								23158,
								23168
							],
							[
								23228,
								23232
							],
							[
								23295,
								23299
							],
							[
								23349,
								23353
							],
							[
								23816,
								23826
							],
							[
								23864,
								23872
							],
							[
								23969,
								23978
							],
							[
								23996,
								24018
							],
							[
								24124,
								24128
							],
							[
								24528,
								24540
							],
							[
								24558,
								24580
							],
							[
								24770,
								24778
							],
							[
								24841,
								24849
							],
							[
								25039,
								25044
							],
							[
								25353,
								25372
							],
							[
								25433,
								25441
							],
							[
								25550,
								25557
							],
							[
								25575,
								25597
							],
							[
								25942,
								25950
							],
							[
								26047,
								26056
							],
							[
								26093,
								26104
							],
							[
								26122,
								26144
							],
							[
								26194,
								26205
							],
							[
								26223,
								26245
							],
							[
								26406,
								26414
							],
							[
								26517,
								26534
							],
							[
								26552,
								26574
							],
							[
								26830,
								26838
							],
							[
								26949,
								26957
							],
							[
								26962,
								26978
							],
							[
								27180,
								27193
							],
							[
								27228,
								27243
							],
							[
								27328,
								27338
							],
							[
								27651,
								27671
							],
							[
								27754,
								27800
							],
							[
								29253,
								29317
							],
							[
								29595,
								29599
							],
							[
								30353,
								30361
							],
							[
								30469,
								30477
							],
							[
								30552,
								30567
							],
							[
								30847,
								30854
							],
							[
								30908,
								30915
							],
							[
								30999,
								31006
							],
							[
								31183,
								31218
							],
							[
								31257,
								31277
							],
							[
								31307,
								31313
							],
							[
								31334,
								31342
							],
							[
								31448,
								31481
							],
							[
								31794,
								31819
							],
							[
								32214,
								32256
							],
							[
								32909,
								32962
							],
							[
								33883,
								33889
							],
							[
								33939,
								33945
							],
							[
								34073,
								34079
							],
							[
								34277,
								34293
							],
							[
								34660,
								34667
							],
							[
								34710,
								34714
							],
							[
								34734,
								34741
							],
							[
								34861,
								34888
							],
							[
								34946,
								34953
							],
							[
								35217,
								35224
							],
							[
								35284,
								35298
							],
							[
								35343,
								35358
							],
							[
								35383,
								35387
							],
							[
								35418,
								35429
							],
							[
								35462,
								35474
							],
							[
								35508,
								35521
							],
							[
								35593,
								35598
							],
							[
								35696,
								35700
							],
							[
								35724,
								35736
							],
							[
								35805,
								35810
							],
							[
								35870,
								35874
							],
							[
								35905,
								35914
							],
							[
								35927,
								35943
							],
							[
								36304,
								36308
							],
							[
								36332,
								36343
							],
							[
								36402,
								36406
							],
							[
								36444,
								36448
							],
							[
								36479,
								36495
							],
							[
								36533,
								36537
							],
							[
								36555,
								36559
							],
							[
								36602,
								36642
							],
							[
								36701,
								36717
							],
							[
								37079,
								37100
							],
							[
								37126,
								37130
							],
							[
								37573,
								37578
							],
							[
								37619,
								37646
							],
							[
								37840,
								37862
							],
							[
								38897,
								38938
							],
							[
								39018,
								39025
							],
							[
								39091,
								39098
							],
							[
								39135,
								39161
							],
							[
								39255,
								39263
							],
							[
								39329,
								39337
							],
							[
								39399,
								39410
							],
							[
								39557,
								39583
							],
							[
								39635,
								39654
							],
							[
								39730,
								39747
							],
							[
								39782,
								39806
							],
							[
								40052,
								40057
							],
							[
								40114,
								40121
							],
							[
								40202,
								40213
							],
							[
								40703,
								40713
							],
							[
								40759,
								40763
							],
							[
								41421,
								41432
							],
							[
								41443,
								41467
							],
							[
								41535,
								41567
							],
							[
								41723,
								41748
							],
							[
								41812,
								41848
							],
							[
								41918,
								41958
							],
							[
								42210,
								42238
							],
							[
								42285,
								42316
							],
							[
								42545,
								42587
							],
							[
								42790,
								42811
							],
							[
								42856,
								42875
							],
							[
								43209,
								43228
							],
							[
								43432,
								43467
							],
							[
								43585,
								43633
							],
							[
								43879,
								43906
							],
							[
								44524,
								44565
							],
							[
								44803,
								44830
							],
							[
								44973,
								44994
							],
							[
								45055,
								45082
							],
							[
								45127,
								45159
							],
							[
								45409,
								45435
							],
							[
								45629,
								45648
							],
							[
								46310,
								46335
							],
							[
								46383,
								46414
							],
							[
								46481,
								46496
							],
							[
								46691,
								46712
							],
							[
								46829,
								46865
							],
							[
								47085,
								47104
							],
							[
								47508,
								47529
							],
							[
								47746,
								47779
							],
							[
								47839,
								47862
							],
							[
								47925,
								47942
							],
							[
								48062,
								48066
							],
							[
								48893,
								48918
							],
							[
								49125,
								49152
							],
							[
								49617,
								49621
							],
							[
								49831,
								49835
							],
							[
								50034,
								50053
							],
							[
								50150,
								50155
							],
							[
								50309,
								50348
							],
							[
								50447,
								50490
							],
							[
								50700,
								50715
							],
							[
								50885,
								50921
							],
							[
								51017,
								51045
							],
							[
								51315,
								51359
							],
							[
								51421,
								51452
							],
							[
								51511,
								51532
							],
							[
								51591,
								51614
							],
							[
								52037,
								52063
							],
							[
								52131,
								52157
							],
							[
								52221,
								52240
							],
							[
								52281,
								52316
							],
							[
								52490,
								52532
							],
							[
								52717,
								52738
							],
							[
								52914,
								52944
							],
							[
								53164,
								53190
							],
							[
								53618,
								53637
							],
							[
								53698,
								53721
							],
							[
								54256,
								54283
							],
							[
								54333,
								54356
							],
							[
								54513,
								54549
							],
							[
								54619,
								54648
							],
							[
								54706,
								54729
							],
							[
								54907,
								54932
							],
							[
								55016,
								55058
							],
							[
								55157,
								55182
							],
							[
								55486,
								55541
							],
							[
								55783,
								55812
							],
							[
								56063,
								56107
							],
							[
								56239,
								56283
							],
							[
								56370,
								56398
							],
							[
								56542,
								56566
							],
							[
								56814,
								56858
							],
							[
								57180,
								57233
							],
							[
								57332,
								57377
							],
							[
								57452,
								57471
							],
							[
								57532,
								57553
							],
							[
								57730,
								57757
							],
							[
								57806,
								57836
							],
							[
								57848,
								57869
							],
							[
								57881,
								57913
							],
							[
								58055,
								58085
							],
							[
								58097,
								58138
							],
							[
								58150,
								58189
							],
							[
								58201,
								58224
							],
							[
								58236,
								58259
							],
							[
								58271,
								58290
							],
							[
								58302,
								58344
							],
							[
								58356,
								58381
							],
							[
								58393,
								58420
							],
							[
								58432,
								58470
							],
							[
								58482,
								58564
							],
							[
								58576,
								58643
							],
							[
								58655,
								58680
							],
							[
								58692,
								58734
							],
							[
								58746,
								58784
							],
							[
								58796,
								58853
							],
							[
								58865,
								58903
							],
							[
								58915,
								58940
							],
							[
								58952,
								58979
							],
							[
								58991,
								59029
							],
							[
								59041,
								59097
							],
							[
								59191,
								59242
							],
							[
								59254,
								59329
							],
							[
								59341,
								59372
							],
							[
								59384,
								59403
							],
							[
								59415,
								59451
							],
							[
								59547,
								59568
							],
							[
								59580,
								59610
							],
							[
								59622,
								59645
							],
							[
								59657,
								59700
							],
							[
								59712,
								59750
							],
							[
								59762,
								59806
							],
							[
								59818,
								59842
							],
							[
								59854,
								59884
							],
							[
								59896,
								59922
							],
							[
								59966,
								60013
							],
							[
								60025,
								60067
							],
							[
								60079,
								60117
							],
							[
								60129,
								60165
							],
							[
								60177,
								60224
							],
							[
								60236,
								60259
							],
							[
								60271,
								60305
							],
							[
								60317,
								60360
							],
							[
								60372,
								60424
							],
							[
								60528,
								60575
							],
							[
								60587,
								60615
							],
							[
								60627,
								60665
							],
							[
								60677,
								60718
							],
							[
								60730,
								60749
							],
							[
								60761,
								60790
							],
							[
								60802,
								60828
							],
							[
								60840,
								60868
							],
							[
								60880,
								60932
							],
							[
								60944,
								60972
							],
							[
								60984,
								61018
							],
							[
								61030,
								61051
							],
							[
								61063,
								61086
							],
							[
								61098,
								61136
							],
							[
								61148,
								61186
							],
							[
								61198,
								61219
							],
							[
								61231,
								61256
							],
							[
								61268,
								61293
							],
							[
								61305,
								61336
							],
							[
								61348,
								61367
							],
							[
								61379,
								61402
							],
							[
								61414,
								61455
							],
							[
								61467,
								61510
							],
							[
								61522,
								61549
							],
							[
								61561,
								61599
							],
							[
								61611,
								61644
							],
							[
								61656,
								61692
							],
							[
								61704,
								61723
							],
							[
								61735,
								61798
							],
							[
								61810,
								61866
							],
							[
								61878,
								61901
							],
							[
								61913,
								61948
							],
							[
								61960,
								62016
							],
							[
								62028,
								62081
							],
							[
								62093,
								62138
							],
							[
								62150,
								62195
							],
							[
								62207,
								62252
							],
							[
								62264,
								62294
							],
							[
								62306,
								62353
							],
							[
								62365,
								62390
							],
							[
								62402,
								62435
							],
							[
								62447,
								62477
							],
							[
								62489,
								62529
							],
							[
								62541,
								62594
							],
							[
								62606,
								62629
							],
							[
								62641,
								62662
							],
							[
								62674,
								62714
							],
							[
								62726,
								62760
							],
							[
								62772,
								62794
							],
							[
								62806,
								62840
							],
							[
								62852,
								62875
							],
							[
								62887,
								62929
							],
							[
								62941,
								62972
							],
							[
								62984,
								63010
							],
							[
								63023,
								63053
							],
							[
								63627,
								63667
							],
							[
								63877,
								63881
							],
							[
								65022,
								65062
							],
							[
								65444,
								65504
							],
							[
								65940,
								65966
							],
							[
								66074,
								66112
							],
							[
								66308,
								66312
							],
							[
								66599,
								66629
							],
							[
								67087,
								67091
							],
							[
								67743,
								67782
							],
							[
								68445,
								68502
							],
							[
								68823,
								68847
							],
							[
								69319,
								69349
							],
							[
								69612,
								69653
							],
							[
								69788,
								69827
							],
							[
								69839,
								69884
							],
							[
								69896,
								69924
							],
							[
								69936,
								69972
							],
							[
								70116,
								70154
							],
							[
								70166,
								70205
							],
							[
								70217,
								70258
							],
							[
								70270,
								70305
							],
							[
								70317,
								70364
							],
							[
								70376,
								70415
							],
							[
								70428,
								70462
							],
							[
								70474,
								70522
							],
							[
								70534,
								70577
							],
							[
								70589,
								70638
							],
							[
								70650,
								70700
							],
							[
								70712,
								70761
							],
							[
								71015,
								71039
							],
							[
								71094,
								71119
							],
							[
								71498,
								71527
							],
							[
								71706,
								71711
							],
							[
								71983,
								72004
							],
							[
								72071,
								72114
							],
							[
								72301,
								72305
							],
							[
								72887,
								72895
							],
							[
								72947,
								72955
							],
							[
								73067,
								73071
							],
							[
								73323,
								73348
							],
							[
								73383,
								73393
							],
							[
								73457,
								73468
							],
							[
								73542,
								73557
							],
							[
								73596,
								73600
							],
							[
								73679,
								73704
							],
							[
								73743,
								73751
							],
							[
								73792,
								73821
							],
							[
								73851,
								73855
							]
						],
						"symlist":
						[
							"function FileTime(filename)",
							"function Newer(file, ...other)",
							"other =>",
							"function Older(file, other)",
							"function GetSubscripts(str)",
							"m =>",
							"function TrimSubscripts(str, sub)",
							"List",
							"constructor(...args)",
							"filter(callback, thisArg = null)",
							"callback = elem =>",
							"slice(start, end)",
							"get first()",
							"elem =>",
							"entries()",
							"keys()",
							"values()",
							"toArray()",
							"(a, n) =>",
							"List",
							"Node",
							"constructor(ast)",
							"static get(ast)",
							"get ast()",
							"get id()",
							"get loc()",
							"get file()",
							" (v,k) =>",
							" (v,k) =>",
							"get range()",
							"r =>",
							"toJSON(obj)",
							"(node, ast) =>",
							" function PathOf(node, ast = $.data)",
							" n =>",
							" function Hier(node_or_path, ast = $.data)",
							"p =>",
							"([p, n]) =>",
							" ([p, n]) =>",
							" function FindType(typeName, ast = $.data)",
							"([tok]) =>",
							" n =>",
							"node =>",
							"Type",
							"constructor(node, ast)",
							" n =>",
							"n =>",
							" (n, p) =>",
							"get regExp()",
							"isEnum()",
							"isPointer()",
							"isFunction()",
							"isArray()",
							"arrayOf()",
							"get subscripts()",
							"trimSubscripts()",
							"get pointer()",
							"getPointer(ast)",
							" n =>",
							"get unsigned()",
							"get signed()",
							"isCompound()",
							"isFloatingPoint()",
							"get alias()",
							"get aliases()",
							"isEnum()",
							"isString()",
							"get ffi()",
							"get size()",
							"toJS()",
							"toJSON(obj)",
							"static get(name_or_id, ast = $.data)",
							" node =>",
							" node =>",
							"function RoundTo(value, align)",
							"RecordDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							"node =>",
							"(acc, node) =>",
							"i =>",
							" n =>",
							"n =>",
							"get size()",
							"(acc,[name,type]) =>",
							"toJSON()",
							"([name, member]) =>",
							"EnumDecl",
							"constructor(node, ast)",
							"child =>",
							"({ name, type, inner }) =>",
							"toJSON()",
							"TypedefDecl",
							"constructor(node, ast)",
							"n =>",
							" (v, k) =>",
							"n =>",
							"n =>",
							"n =>",
							"get size()",
							"toJSON()",
							"FieldDecl",
							"constructor(node, ast)",
							"n =>",
							"FunctionDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							" n =>",
							"({ name, type }) =>",
							"toJSON()",
							"VarDecl",
							"constructor(node, ast)",
							"toJSON()",
							"ClassDecl",
							"BuiltinType",
							"constructor(node, ast)",
							"PointerType",
							"constructor(node, ast)",
							"toJSON()",
							"ConstantArrayType",
							"constructor(node, ast)",
							"toJSON()",
							"Location",
							"constructor(loc)",
							" (t, ...c) =>",
							"'\\x1b[m' : t =>",
							"toString()",
							"localeCompare(other)",
							" function TypeFactory(node, ast, cache = true)",
							"async function SpawnCompiler(compiler, input, output, args = [])",
							"p =>",
							" data =>",
							" data =>",
							"async reader =>",
							"line =>",
							"line =>",
							"line =>",
							" function PipeReader(fd, callback)",
							"(resolve, reject) =>",
							" () =>",
							" data =>",
							" function ReadPipe(fd, callback)",
							" function ReadOutput(fd)",
							"async function SourceDependencies(...args)",
							"async function AstDump(compiler, source, args, force)",
							"size()",
							"json()",
							"data()",
							"SetFile = loc =>",
							"files()",
							"n =>",
							"file =>",
							"pred2 = (used, implicit) =>",
							"node =>",
							"types()",
							" n =>",
							" () =>",
							"List",
							"functions()",
							" n =>",
							" () =>",
							" n =>",
							"List",
							"namespaces()",
							" n =>",
							"List",
							"classes()",
							"predicate = n =>",
							"List",
							"variables()",
							"n =>",
							"List",
							"names(depth = 1)",
							"n =>",
							"n =>",
							" function NameFor(decl, ast = this.data)",
							" (value, key) =>",
							" function NodeType(n)",
							"t =>",
							" n =>",
							" function NodeName(n, name)",
							" function GetLoc(node)",
							" function GetTypeNode(node, ast = $.data)",
							"node =>",
							"node =>",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function NodePrinter(ast)",
							" function put(str)",
							" function trim()",
							"printer = function(node)",
							"get()",
							"value()",
							"value(node)",
							"toString()",
							"i =>",
							"NodePrinter",
							"AbiTagAttr(abi_tag_attr)",
							"AccessSpecDecl(access_spec_decl)",
							"AlignedAttr(aligned_attr)",
							"AlwaysInlineAttr(always_inline_attr)",
							"ArraySubscriptExpr(array_subscript_expr)",
							"AsmLabelAttr(asm_label_attr)",
							"BinaryOperator(binary_operator)",
							"BlockCommandComment(block_command_comment)",
							"BreakStmt(break_stmt)",
							"CallExpr(call_expr)",
							"CaseStmt(case_stmt)",
							"CharacterLiteral(character_literal)",
							"CompoundAssignOperator(compound_assign_operator)",
							"CompoundStmt(compound_stmt)",
							"ConditionalOperator(conditional_operator)",
							"ConstantExpr(constant_expr)",
							"ConstAttr(const_attr)",
							"ContinueStmt(continue_stmt)",
							"CStyleCastExpr(cstyle_cast_expr)",
							"DeclRefExpr(decl_ref_expr)",
							"DeclStmt(decl_stmt)",
							"DefaultStmt(default_stmt)",
							"DeprecatedAttr(deprecated_attr)",
							"DoStmt(do_stmt)",
							"EmptyDecl(empty_decl)",
							"EnumConstantDecl(enum_constant_decl)",
							"EnumDecl(enum_decl)",
							"FieldDecl(field_decl)",
							"FloatingLiteral(floating_literal)",
							"FormatAttr(format_attr)",
							"ForStmt(for_stmt)",
							"n =>",
							"FullComment(full_comment)",
							"FunctionDecl(function_decl)",
							"n =>",
							"n =>",
							"GotoStmt(goto_stmt)",
							" n =>",
							"HTMLEndTagComment(html_end_tag_comment)",
							"HTMLStartTagComment(html_start_tag_comment)",
							"IfStmt(if_stmt)",
							"ImplicitCastExpr(implicit_cast_expr)",
							"InitListExpr(init_list_expr)",
							"InlineCommandComment(inline_command_comment)",
							"IntegerLiteral(integer_literal)",
							"LabelStmt(label_stmt)",
							"MemberExpr(member_expr)",
							"NonNullAttr(non_null_attr)",
							"NoThrowAttr(no_throw_attr)",
							"NullStmt(null_stmt)",
							"ParagraphComment(paragraph_comment)",
							"ParamCommandComment(param_command_comment)",
							"ParenExpr(paren_expr)",
							"ParenListExpr(paren_list_expr)",
							"ParmVarDecl(parm_var_decl)",
							"PureAttr(pure_attr)",
							"RecordDecl(record_decl)",
							"RestrictAttr(restrict_attr)",
							"ReturnStmt(return_stmt)",
							"ReturnsTwiceAttr(returns_twice_attr)",
							"StringLiteral(string_literal)",
							"SwitchStmt(switch_stmt)",
							"TextComment(text_comment)",
							"TranslationUnitDecl(translation_unit_decl)",
							"TypedefDecl(typedef_decl)",
							"UnaryExprOrTypeTraitExpr(unary_expr_or_type_trait_expr)",
							"UnaryOperator(unary_operator)",
							"UnresolvedLookupExpr(unresolved_lookup_expr)",
							"UnresolvedMemberExpr(unresolved_member_expr)",
							"VarDecl(var_decl, base_type)",
							"([offset, subscript]) =>",
							"VerbatimBlockComment(verbatim_block_comment)",
							"VerbatimBlockLineComment(verbatim_block_line_comment)",
							"WarnUnusedResultAttr(warn_unused_result_attr)",
							"WeakAttr(weak_attr)",
							"WhileStmt(while_stmt)",
							"OverrideAttr(override_attr)",
							"AddrLabelExpr(addr_label_expr)",
							"AliasAttr(alias_attr)",
							"AlignValueAttr(align_value_attr)",
							"AllocSizeAttr(alloc_size_attr)",
							"ArrayInitIndexExpr(array_init_index_expr)",
							"ArrayInitLoopExpr(array_init_loop_expr)",
							"AtomicExpr(atomic_expr)",
							"AtomicType(atomic_type)",
							"AutoType(auto_type)",
							"BuiltinTemplateDecl(builtin_template_decl)",
							"BuiltinType(builtin_type)",
							"CallbackAttr(callback_attr)",
							"ClassTemplateDecl(class_template_decl)",
							"ClassTemplatePartialSpecializationDecl(class_template_partial_specialization_decl)",
							"ClassTemplateSpecializationDecl(class_template_specialization_decl)",
							"ComplexType(complex_type)",
							"CompoundLiteralExpr(compound_literal_expr)",
							"ConstantArrayType(constant_array_type)",
							"ConstructorUsingShadowDecl(constructor_using_shadow_decl)",
							"ConvertVectorExpr(convert_vector_expr)",
							"DecayedType(decayed_type)",
							"DecltypeType(decltype_type)",
							"DependentNameType(dependent_name_type)",
							"DependentScopeDeclRefExpr(dependent_scope_decl_ref_expr)",
							"DependentSizedArrayType(dependent_sized_array_type)",
							"DependentTemplateSpecializationType(dependent_template_specialization_type)",
							"ElaboratedType(elaborated_type)",
							"EnumType(enum_type)",
							"ExprWithCleanups(expr_with_cleanups)",
							"FinalAttr(final_attr)",
							"FormatArgAttr(format_arg_attr)",
							"FriendDecl(friend_decl)",
							"FunctionNoProtoType(function_no_proto_type)",
							"FunctionProtoType(function_proto_type)",
							"FunctionTemplateDecl(function_template_decl)",
							"GCCAsmStmt(gcc_asm_stmt)",
							"GNUInlineAttr(gnu_inline_attr)",
							"GNUNullExpr(gnu_null_expr)",
							"ImplicitValueInitExpr(implicit_value_init_expr)",
							"IncompleteArrayType(incomplete_array_type)",
							"IndirectFieldDecl(indirect_field_decl)",
							"IndirectGotoStmt(indirect_goto_stmt)",
							"InjectedClassNameType(injected_class_name_type)",
							"LambdaExpr(lambda_expr)",
							"LinkageSpecDecl(linkage_spec_decl)",
							"LValueReferenceType(l_value_reference_type)",
							"MaterializeTemporaryExpr(materialize_temporary_expr)",
							"MaxFieldAlignmentAttr(max_field_alignment_attr)",
							"MayAliasAttr(may_alias_attr)",
							"MemberPointerType(member_pointer_type)",
							"MinVectorWidthAttr(min_vector_width_attr)",
							"ModeAttr(mode_attr)",
							"NamespaceDecl(namespace_decl)",
							"NoDebugAttr(no_debug_attr)",
							"NoInlineAttr(no_inline_attr)",
							"NonTypeTemplateParmDecl(non_type_template_parm_decl)",
							"OffsetOfExpr(offset_of_expr)",
							"OpaqueValueExpr(opaque_value_expr)",
							"OwnerAttr(owner_attr)",
							"PackedAttr(packed_attr)",
							"PackExpansionExpr(pack_expansion_expr)",
							"PackExpansionType(pack_expansion_type)",
							"ParenType(paren_type)",
							"PointerAttr(pointer_attr)",
							"PointerType(pointer_type)",
							"PredefinedExpr(predefined_expr)",
							"QualType(qual_type)",
							"RecordType(record_type)",
							"ReturnsNonNullAttr(returns_non_null_attr)",
							"RValueReferenceType(r_value_reference_type)",
							"SentinelAttr(sentinel_attr)",
							"ShuffleVectorExpr(shuffle_vector_expr)",
							"SizeOfPackExpr(size_of_pack_expr)",
							"StaticAssertDecl(static_assert_decl)",
							"StmtExpr(stmt_expr)",
							"SubstNonTypeTemplateParmExpr(subst_non_type_template_parm_expr)",
							"SubstTemplateTypeParmType(subst_template_type_parm_type)",
							"TargetAttr(target_attr)",
							"TemplateArgument(template_argument)",
							"TemplateSpecializationType(template_specialization_type)",
							"TemplateTemplateParmDecl(template_template_parm_decl)",
							"TemplateTypeParmDecl(template_type_parm_decl)",
							"TemplateTypeParmType(template_type_parm_type)",
							"TParamCommandComment(t_param_command_comment)",
							"TypeAliasDecl(type_alias_decl)",
							"TypeAliasTemplateDecl(type_alias_template_decl)",
							"TypedefType(typedef_type)",
							"TypeOfExprType(type_of_expr_type)",
							"TypeTraitExpr(type_trait_expr)",
							"UnaryTransformType(unary_transform_type)",
							"UnresolvedUsingValueDecl(unresolved_using_value_decl)",
							"UnusedAttr(unused_attr)",
							"UsingDecl(using_decl)",
							"UsingDirectiveDecl(using_directive_decl)",
							"UsingShadowDecl(using_shadow_decl)",
							"VAArgExpr(va_arg_expr)",
							"VarTemplateDecl(var_template_decl)",
							"VectorType(vector_type)",
							"VerbatimLineComment(verbatim_line_comment)",
							"VisibilityAttr(visibility_attr)",
							"WeakRefAttr(weak_ref_attr)",
							"CXXRecordDecl(cxx_record_decl)",
							"CXXConstructorDecl(cxx_constructor_decl)",
							"n =>",
							"CXXCtorInitializer(cxx_ctor_initializer)",
							"CXXDependentScopeMemberExpr(cxx_dependent_scope_member_expr)",
							"CXXThisExpr(cxx_this_expr)",
							"CXXDestructorDecl(cxx_destructor_decl)",
							"n =>",
							"CXXMethodDecl(cxx_method_decl)",
							"n =>",
							"CXXStaticCastExpr(cxx_static_cast_expr)",
							"CXXUnresolvedConstructExpr(cxx_unresolved_construct_expr)",
							"CXXNewExpr(cxx_new_expr)",
							"CXXDeleteExpr(cxx_delete_expr)",
							"CXXBoolLiteralExpr(cxx_bool_literal_expr)",
							"CXX11NoReturnAttr(cxx11_no_return_attr)",
							"CXXBindTemporaryExpr(cxx_bind_temporary_expr)",
							"CXXCatchStmt(cxx_catch_stmt)",
							"CXXConstructExpr(cxx_construct_expr)",
							"CXXConversionDecl(cxx_conversion_decl)",
							"CXXDefaultArgExpr(cxx_default_arg_expr)",
							"CXXDefaultInitExpr(cxx_default_init_expr)",
							"CXXForRangeStmt(cxx_for_range_stmt)",
							"CXXFunctionalCastExpr(cxx_functional_cast_expr)",
							"CXXMemberCallExpr(cxx_member_call_expr)",
							"CXXNoexceptExpr(cxx_noexcept_expr)",
							"CXXNullPtrLiteralExpr(cxx_null_ptr_literal_expr)",
							"CXXOperatorCallExpr(cxx_operator_call_expr)",
							"CXXReinterpretCastExpr(cxx_reinterpret_cast_expr)",
							"CXXScalarValueInitExpr(cxx_scalar_value_init_expr)",
							"CXXTemporaryObjectExpr(cxx_temporary_object_expr)",
							"CXXTryStmt(cxx_try_stmt)",
							" function PrintNode(node)",
							" function PrintAst(node, ast)",
							"get()",
							" function isNode(obj)",
							" function GetType(name_or_id, ast = $.data)",
							"n =>",
							" node =>",
							" node =>",
							"r =>",
							" function GetFields(node)",
							" (v, k) =>",
							"([v, p]) =>",
							"([loc, ptr]) =>",
							"i =>",
							" function GetParams(node)",
							"child =>",
							" function PathRemoveLoc(path)",
							"p =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/clang-list.js",
						"symkeys":
						[
							[
								891,
								915
							],
							[
								1079,
								1085
							],
							[
								1130,
								1147
							],
							[
								1263,
								1300
							],
							[
								1333,
								1347
							],
							[
								1449,
								1478
							],
							[
								1511,
								1524
							],
							[
								1642,
								1670
							],
							[
								1793,
								1798
							],
							[
								1833,
								1838
							],
							[
								2004,
								2014
							],
							[
								2064,
								2074
							],
							[
								3048,
								3052
							],
							[
								3099,
								3103
							],
							[
								3201,
								3238
							],
							[
								3533,
								3580
							],
							[
								3592,
								3634
							],
							[
								3674,
								3681
							],
							[
								3725,
								3732
							],
							[
								4143,
								4154
							],
							[
								4201,
								4206
							],
							[
								4216,
								4221
							],
							[
								4234,
								4245
							],
							[
								4275,
								4280
							],
							[
								4293,
								4304
							],
							[
								4467,
								4473
							],
							[
								4891,
								4908
							],
							[
								5077,
								5087
							],
							[
								5384,
								5394
							],
							[
								5954,
								5959
							],
							[
								6102,
								6142
							],
							[
								6194,
								6227
							],
							[
								6417,
								6435
							],
							[
								6481,
								6497
							],
							[
								6513,
								6530
							],
							[
								6557,
								6580
							],
							[
								6596,
								6618
							],
							[
								6718,
								6729
							],
							[
								6857,
								6866
							],
							[
								6936,
								6947
							],
							[
								7175,
								7183
							],
							[
								7213,
								7221
							],
							[
								7239,
								7243
							],
							[
								7410,
								7421
							],
							[
								7476,
								7487
							],
							[
								7519,
								7528
							],
							[
								7677,
								7688
							],
							[
								7739,
								7753
							],
							[
								7892,
								7896
							],
							[
								8165,
								8204
							],
							[
								8298,
								8311
							],
							[
								8829,
								8861
							],
							[
								9025,
								9059
							]
						],
						"symlist":
						[
							"findLastIndex(predicate)",
							"tail()",
							"startsWith(start)",
							"WriteBJSON = async (filename, obj) =>",
							"({ write }) =>",
							"ReadBJSON = async filename =>",
							"({ read }) =>",
							"async function main(...args)",
							"fs =>",
							"fn =>",
							" (a, p) =>",
							" (a, p) =>",
							"d =>",
							"v =>",
							"async function processFiles(...files)",
							"async function ReadAST(outfile, load = f => fs.",
							"(f), save = WriteFile, parse = JSON.parse)",
							"name =>",
							"stat =>",
							"async () =>",
							" a =>",
							"() =>",
							"async () =>",
							"() =>",
							"async () =>",
							"err =>",
							" (v, p) =>",
							"toString()",
							"toString()",
							" v =>",
							" function ListNodes(sysinc = false)",
							"NoSystemIncludes = ([p, n, l]) =>",
							" ([path, decl]) =>",
							"names = decls =>",
							"([path, decl]) =>",
							"declarations = decls =>",
							"([path, decl, loc]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p]) =>",
							"([p]) =>",
							"p =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n, l]) =>",
							"k =>",
							"([path, node, id, name, type, kind]) =>",
							"(field, i) =>",
							"function writeOutput(name, data)",
							"function GetLibraryFor(symbolName)"
						]
					},
					"AQAAAAAAAAAAAAAANQMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAA1AwAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQpXcml0ZUJKU09OID0gKGZpbGVuYW1lLCBvYmopID0+Cih7IHdyaXRlIH0pID0+ClJlYWRCSlNPTiA9IGZpbGVuYW1lID0+Cih7IHJlYWQgfSkgPT4KICBtYWluKC4uLmFyZ3MpCiAgZnMgPT4KICBmbiA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQpSZWFkQVNUKG91dGZpbGUsIGxvYWQgPSBmID0+IGZzLgooZiksIHNhdmUgPSBXcml0ZUZpbGUsIHBhcnNlID0gSlNPTi5wYXJzZSkKICBuYW1lID0+CiAgc3RhdCA9PgooKSA9PgogIGEgPT4KKCkgPT4KKCkgPT4KKCkgPT4KKCkgPT4KICBlcnIgPT4KICAodiwgcCkgPT4KICB0b1N0cmluZygpCiAgdG9TdHJpbmcoKQogIHYgPT4KTGlzdE5vZGVzKHN5c2luYyA9IGZhbHNlKQpOb1N5c3RlbUluY2x1ZGVzID0gKFtwLCBuLCBsXSkgPT4KICAoW3BhdGgsIGRlY2xdKSA9PgogIG5hbWVzID0gZGVjbHMgPT4KKFtwYXRoLCBkZWNsXSkgPT4KICBkZWNsYXJhdGlvbnMgPSBkZWNscyA9PgooW3BhdGgsIGRlY2wsIGxvY10pID0+CihbcCwgbl0pID0+CihhLCBiKSA9PgooW3AsIG5dKSA9PgooW3BdKSA9PgooW3BdKSA9PgogIHAgPT4KKFtwLCBuXSkgPT4KKFtwLCBuXSkgPT4KKGEsIGIpID0+CihbcCwgbl0pID0+CihbcCwgbiwgbF0pID0+CiAgayA9PgooW3BhdGgsIG5vZGUsIGlkLCBuYW1lLCB0eXBlLCBraW5kXSkgPT4KKGZpZWxkLCBpKSA9PgogIHdyaXRlT3V0cHV0KG5hbWUsIGRhdGEpCkdldExpYnJhcnlGb3Ioc3ltYm9sTmFtZSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3574,
								3593
							],
							[
								3657,
								3678
							],
							[
								4020,
								4025
							],
							[
								4100,
								4115
							],
							[
								4207,
								4215
							],
							[
								4256,
								4264
							],
							[
								4509,
								4514
							],
							[
								4643,
								4716
							],
							[
								4720,
								4728
							],
							[
								4825,
								4855
							],
							[
								4890,
								4895
							],
							[
								4928,
								4935
							],
							[
								5047,
								5075
							],
							[
								5480,
								5487
							],
							[
								5506,
								5529
							],
							[
								5559,
								5566
							],
							[
								5597,
								5605
							],
							[
								5643,
								5650
							],
							[
								5859,
								5872
							],
							[
								6100,
								6143
							],
							[
								6176,
								6185
							],
							[
								6246,
								6250
							],
							[
								6298,
								6302
							],
							[
								6338,
								6352
							],
							[
								6459,
								6487
							],
							[
								6621,
								6646
							],
							[
								6744,
								6768
							],
							[
								6841,
								6845
							],
							[
								6963,
								6967
							],
							[
								7031,
								7045
							],
							[
								7118,
								7127
							],
							[
								7435,
								7449
							],
							[
								7598,
								7610
							],
							[
								7668,
								7693
							],
							[
								7742,
								7753
							],
							[
								7793,
								7804
							],
							[
								7941,
								7952
							],
							[
								8039,
								8052
							],
							[
								8133,
								8159
							],
							[
								8374,
								8403
							],
							[
								8414,
								8429
							],
							[
								8491,
								8510
							],
							[
								8718,
								8746
							],
							[
								8814,
								8861
							],
							[
								9128,
								9135
							],
							[
								11042,
								11100
							],
							[
								12143,
								12150
							],
							[
								12214,
								12221
							],
							[
								12231,
								12242
							],
							[
								12283,
								12309
							],
							[
								12425,
								12439
							],
							[
								12741,
								12760
							],
							[
								12787,
								12794
							],
							[
								12882,
								12912
							],
							[
								12978,
								13018
							],
							[
								13194,
								13245
							],
							[
								14211,
								14218
							],
							[
								14624,
								14650
							],
							[
								14895,
								14949
							],
							[
								15137,
								15149
							],
							[
								15176,
								15188
							],
							[
								15798,
								15858
							],
							[
								16440,
								16495
							],
							[
								16591,
								16603
							],
							[
								16608,
								16638
							],
							[
								16915,
								16937
							],
							[
								16983,
								17006
							],
							[
								17078,
								17093
							],
							[
								17621,
								17634
							],
							[
								17758,
								17777
							],
							[
								17829,
								17837
							],
							[
								17894,
								17909
							],
							[
								18067,
								18079
							],
							[
								18522,
								18536
							],
							[
								18636,
								18653
							],
							[
								18878,
								18900
							],
							[
								19017,
								19042
							],
							[
								19142,
								19159
							],
							[
								19213,
								19217
							],
							[
								19306,
								19310
							],
							[
								19361,
								19385
							],
							[
								19500,
								19540
							],
							[
								19600,
								19621
							],
							[
								19902,
								19934
							],
							[
								20517,
								20532
							],
							[
								20659,
								20684
							],
							[
								20920,
								20955
							],
							[
								21174,
								21181
							],
							[
								21276,
								21283
							],
							[
								21317,
								21326
							],
							[
								21362,
								21371
							],
							[
								21421,
								21429
							],
							[
								21471,
								21495
							],
							[
								21596,
								21612
							],
							[
								21651,
								21691
							],
							[
								21987,
								22030
							],
							[
								23003,
								23014
							],
							[
								23773,
								23823
							],
							[
								23845,
								23871
							],
							[
								23906,
								23935
							],
							[
								24289,
								24332
							],
							[
								24445,
								24449
							],
							[
								24465,
								24469
							],
							[
								24514,
								24601
							],
							[
								24768,
								24801
							],
							[
								24859,
								24864
							],
							[
								24942,
								24984
							],
							[
								25072,
								25087
							],
							[
								25226,
								25266
							],
							[
								25412,
								25417
							],
							[
								25482,
								25489
							],
							[
								25604,
								25608
							],
							[
								25687,
								25691
							],
							[
								25843,
								25850
							],
							[
								25954,
								25966
							],
							[
								26096,
								26112
							],
							[
								26225,
								26232
							],
							[
								26313,
								26317
							],
							[
								26377,
								26384
							],
							[
								26465,
								26472
							],
							[
								26537,
								26583
							],
							[
								26623,
								26633
							],
							[
								26834,
								26870
							],
							[
								26913,
								26925
							],
							[
								28467,
								28499
							],
							[
								28784,
								28789
							],
							[
								29981,
								29990
							],
							[
								30080,
								30089
							],
							[
								30202,
								30211
							],
							[
								30275,
								30284
							],
							[
								30538,
								30548
							],
							[
								30598,
								30608
							],
							[
								30656,
								30666
							],
							[
								31250,
								31261
							],
							[
								31297,
								31301
							],
							[
								31328,
								31332
							],
							[
								31356,
								31360
							],
							[
								31384,
								31388
							],
							[
								31416,
								31453
							],
							[
								31640,
								31695
							],
							[
								31834,
								31842
							],
							[
								31931,
								31939
							],
							[
								31985,
								31993
							],
							[
								32072,
								32108
							],
							[
								32197,
								32240
							],
							[
								32430,
								32435
							],
							[
								32536,
								32555
							],
							[
								32619,
								32624
							],
							[
								32883,
								32906
							],
							[
								33014,
								33019
							],
							[
								33131,
								33154
							],
							[
								33242,
								33247
							],
							[
								33349,
								33361
							],
							[
								33782,
								33787
							],
							[
								33847,
								33876
							],
							[
								33993,
								34007
							],
							[
								34924,
								34982
							],
							[
								35905,
								35916
							],
							[
								35949,
								35960
							],
							[
								36014,
								36020
							],
							[
								36073,
								36081
							],
							[
								36305,
								36332
							],
							[
								36361,
								36369
							],
							[
								36505,
								36509
							],
							[
								37248,
								37254
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AQAAAAAAAAAAAAAACAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIDAAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcGF0aCA9PgogIHAgPT4KICBwID0+CiAgbmFtZSA9PgogIG4gPT4KKFtub2RlLCBwdHJdKSA9PgogIHBhdGggPT4KICBwID0+CiAgbmFtZSA9PgogIG5hbWUgPT4KVW5zZXRMb2Mobm9kZSwgcHJlZCA9ICh2LCBwKSA9PiB0cnVlKQogICh2LCBrKSA9PgpNYWtlRkZJKG5vZGUsIGxpYiwgZXhwLCBmcCkKKCkKQVNUU2hlbGwoLi4uYXJncykKICBmbiA9PgogIG1vZHVsZSA9PgogIG1vZHVsZSA9PgogIG1vZHVsZSA9PgogIG1vZHVsZSA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIChhLCBwKSA9PgogIGdldCBmbGFncygpCiAgdiA9PgogIHYgPT4KICBkID0+CiAgbCA9PgpDb21waWxlKGZpbGUsIC4uLmFyZ3MpCiAgbmFtZU9ySWRQcmVkKG5hbWVfb3JfaWQsIHByZWQgPSBuID0+IHRydWUpCiAgbm9kZSA9PgogIG5vZGUgPT4KICBub2RlID0+CiAgc2VsZWN0KG5hbWVfb3JfaWQsIHByZWQgPSBuID0+IHRydWUpCiAgZ2V0QnlJZE9yTmFtZShuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG4gPT4KICBnZXRUeXBlKG5hbWVfb3JfaWQpCiAgbiA9PgogIGdldEZ1bmN0aW9uKG5hbWVfb3JfaWQpCiAgbiA9PgogIGdldFZhcmlhYmxlKG5hbWVfb3JfaWQpCiAgbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCiAgbiA9PgpQb2ludGVyLnByb3RvdHlwZS5jaGFpbiA9IGZ1bmN0aW9uKHN0ZXAsIGxpbWl0ID0gSW5maW5pdHkpCiAgLkYgPSBhcmcgPT4KICAuVCA9IGFyZyA9PgogICgpID0+CiAgbm9kZSA9PgogIHB1c2hVbmlxdWUgPSAoYXJyLCBpdGVtKSA9PgogIGVsZW0gPT4KICBzID0+CiAgZnIgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7410,
								7416
							],
							[
								8158,
								8173
							],
							[
								8341,
								8352
							],
							[
								11580,
								11596
							],
							[
								12525,
								12545
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1464,
								1508
							],
							[
								2440,
								2461
							],
							[
								2788,
								2794
							],
							[
								2902,
								2927
							],
							[
								4004,
								4027
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AQAAAAAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1601,
								1645
							],
							[
								2577,
								2598
							],
							[
								2925,
								2931
							],
							[
								3039,
								3064
							],
							[
								4141,
								4164
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1634,
								1678
							],
							[
								2610,
								2631
							],
							[
								2958,
								2964
							],
							[
								3072,
								3097
							],
							[
								4174,
								4197
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1636,
								1680
							],
							[
								2612,
								2633
							],
							[
								2960,
								2966
							],
							[
								3074,
								3099
							],
							[
								4176,
								4199
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1655,
								1699
							],
							[
								2631,
								2652
							],
							[
								2979,
								2985
							],
							[
								3093,
								3118
							],
							[
								4195,
								4218
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1667,
								1711
							],
							[
								2643,
								2664
							],
							[
								2991,
								2997
							],
							[
								3105,
								3130
							],
							[
								4207,
								4230
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1721,
								1765
							],
							[
								2697,
								2718
							],
							[
								3045,
								3051
							],
							[
								3159,
								3184
							],
							[
								4261,
								4284
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1723,
								1767
							],
							[
								2699,
								2720
							],
							[
								3047,
								3053
							],
							[
								3161,
								3186
							],
							[
								4263,
								4286
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1723,
								1767
							],
							[
								2699,
								2720
							],
							[
								3047,
								3053
							],
							[
								3161,
								3186
							],
							[
								4263,
								4286
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1674,
								1718
							],
							[
								2650,
								2671
							],
							[
								2998,
								3004
							],
							[
								3112,
								3137
							],
							[
								4214,
								4237
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH8AAABTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBjYWxsYmFjaykKVGVzdFdvcmtlcigpCiAgKCkgPT4KV29ya2VyTWVzc2FnZShlKQogIHNlbmQoaWQsIGJvZHkpAAAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								951,
								998
							],
							[
								1673,
								1717
							],
							[
								2649,
								2670
							],
							[
								2997,
								3003
							],
							[
								3111,
								3136
							],
							[
								4213,
								4236
							]
						],
						"symlist":
						[
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, callback)",
							"function TestWorker()",
							" () =>",
							"function WorkerMessage(e)",
							"function send(id, body)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12569,
								12589
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/AAAAU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgY2FsbGJhY2spClRlc3RXb3JrZXIoKQogICgpID0+Cldvcmtlck1lc3NhZ2UoZSkKICBzZW5kKGlkLCBib2R5KQAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsBAAAgIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIG5hbWUgPT4KICBtID0+CigpID0+CigpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKCkgPT4KICAobGV2ZWwsIHN0cikgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIHF1aXQod2h5KQAAAAAAAAAAuwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsBAAAgIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIG5hbWUgPT4KICBtID0+CigpID0+CigpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKCkgPT4KICAobGV2ZWwsIHN0cikgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIHF1aXQod2h5KQAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5473,
								5491
							],
							[
								5562,
								5590
							],
							[
								5794,
								5805
							],
							[
								5950,
								5961
							],
							[
								6021,
								6037
							],
							[
								6214,
								6233
							],
							[
								6319,
								6361
							],
							[
								7456,
								7462
							],
							[
								8204,
								8219
							],
							[
								8387,
								8398
							],
							[
								11626,
								11642
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAuwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5469,
								5487
							],
							[
								5558,
								5586
							],
							[
								5790,
								5801
							],
							[
								5946,
								5957
							],
							[
								6017,
								6033
							],
							[
								6210,
								6229
							],
							[
								6315,
								6357
							],
							[
								7452,
								7458
							],
							[
								8200,
								8215
							],
							[
								8383,
								8394
							],
							[
								11622,
								11638
							],
							[
								12563,
								12583
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12567,
								12587
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1183,
								1220
							],
							[
								1268,
								1273
							],
							[
								1381,
								1409
							],
							[
								1421,
								1435
							],
							[
								1665,
								1676
							],
							[
								1710,
								1714
							],
							[
								1788,
								1793
							],
							[
								1900,
								1905
							],
							[
								1973,
								1985
							],
							[
								2088,
								2110
							],
							[
								2379,
								2389
							],
							[
								2633,
								2647
							],
							[
								3570,
								3609
							],
							[
								3792,
								3798
							],
							[
								3811,
								3827
							],
							[
								5471,
								5489
							],
							[
								5560,
								5588
							],
							[
								5792,
								5803
							],
							[
								5948,
								5959
							],
							[
								6019,
								6035
							],
							[
								6212,
								6231
							],
							[
								6317,
								6359
							],
							[
								7454,
								7460
							],
							[
								8202,
								8217
							],
							[
								8385,
								8396
							],
							[
								11624,
								11640
							],
							[
								12565,
								12585
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							" name =>",
							"m =>",
							"() =>",
							"() =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" () =>",
							" (level, str) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC7AQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICBuYW1lID0+CiAgbSA9PgooKSA9PgooKSA9PgooLi4uYXJncykgPT4KICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogICgpID0+CiAgKGxldmVsLCBzdHIpID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgKCkgPT4KICAoZGJnLCBzb2NrKSA9PgooKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKICBxdWl0KHdoeSkAAAAAAAAAALsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "clang-ast.js",
			"settings":
			{
				"buffer_size": 74338,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAyQAAAAAAAADZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMkAAAAAAAAAyQAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\nnames"
					},
					"BwAAAA2QAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAASkAAAAAAAAAAAAAASkAAAAAAAABOQAAAAAAAAAAAAABOQAAAAAAAAFJAAAAAAAAAAAAAAFJAAAAAAAAAVkAAAAAAAAAAAAAAVkAAAAAAAABaQAAAAAAAAAAAAABaQAAAAAAAAF5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABeQAAAAAAAAGZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXkAAAAAAAABeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "depth"
					},
					"BQAAABiQAAAAAAAAGZAAAAAAAAAAAAAAGZAAAAAAAAAakAAAAAAAAAAAAAAakAAAAAAAABuQAAAAAAAAAAAAABuQAAAAAAAAHJAAAAAAAAAAAAAAHJAAAAAAAAAdkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYkAAAAAAAABiQAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " =1"
					},
					"AwAAAB2QAAAAAAAAHpAAAAAAAAAAAAAAHpAAAAAAAAAfkAAAAAAAAAAAAAAfkAAAAAAAACCQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdkAAAAAAAAB2QAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgkAAAAAAAACCQAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAACCQAAAAAAAAIJAAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgkAAAAAAAACCQAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAACCQAAAAAAAAIJAAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACCQAAAAAAAAIZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgkAAAAAAAACCQAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					2,
					"left_delete",
					null,
					"AgAAACCQAAAAAAAAIJAAAAAAAAABAAAAMR+QAAAAAAAAH5AAAAAAAAABAAAAMQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAB+QAAAAAAAAIJAAAAAAAAAAAAAAIJAAAAAAAAAhkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfkAAAAAAAAB+QAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACKQAAAAAAAAI5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAikAAAAAAAACKQAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACOQAAAAAAAAJZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjkAAAAAAAACOQAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAACSQAAAAAAAAJZAAAAAAAAAAAAAAJZAAAAAAAAApkAAAAAAAAAAAAAApkAAAAAAAACqQAAAAAAAAAAAAACqQAAAAAAAALpAAAAAAAAAAAAAAJZAAAAAAAAAlkAAAAAAAAAQAAAAgICAgJZAAAAAAAAArkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkkAAAAAAAACSQAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": ".thi"
					},
					"BAAAACuQAAAAAAAALJAAAAAAAAAAAAAALJAAAAAAAAAtkAAAAAAAAAAAAAAtkAAAAAAAAC6QAAAAAAAAAAAAAC6QAAAAAAAAL5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArkAAAAAAAACuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					3,
					"left_delete",
					null,
					"AwAAAC6QAAAAAAAALpAAAAAAAAABAAAAaS2QAAAAAAAALZAAAAAAAAABAAAAaCyQAAAAAAAALJAAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvkAAAAAAAAC+QAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "this.data.in"
					},
					"DAAAACyQAAAAAAAALZAAAAAAAAAAAAAALZAAAAAAAAAukAAAAAAAAAAAAAAukAAAAAAAAC+QAAAAAAAAAAAAAC+QAAAAAAAAMJAAAAAAAAAAAAAAMJAAAAAAAAAxkAAAAAAAAAAAAAAxkAAAAAAAADKQAAAAAAAAAAAAADKQAAAAAAAAM5AAAAAAAAAAAAAAM5AAAAAAAAA0kAAAAAAAAAAAAAA0kAAAAAAAADWQAAAAAAAAAAAAADWQAAAAAAAANpAAAAAAAAAAAAAANpAAAAAAAAA3kAAAAAAAAAAAAAA3kAAAAAAAADiQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAskAAAAAAAACyQAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "ner"
					},
					"AwAAADiQAAAAAAAAOZAAAAAAAAAAAAAAOZAAAAAAAAA6kAAAAAAAAAAAAAA6kAAAAAAAADuQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4kAAAAAAAADiQAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADuQAAAAAAAAPZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7kAAAAAAAADuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "this.filter"
					},
					"DAAAACqQAAAAAAAAK5AAAAAAAAAAAAAAK5AAAAAAAAArkAAAAAAAABMAAAAgLnRoaXMuZGF0YS5pbm5lcigpK5AAAAAAAAAskAAAAAAAAAAAAAAskAAAAAAAAC2QAAAAAAAAAAAAAC2QAAAAAAAALpAAAAAAAAAAAAAALpAAAAAAAAAvkAAAAAAAAAAAAAAvkAAAAAAAADCQAAAAAAAAAAAAADCQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAAAykAAAAAAAAAAAAAAykAAAAAAAADOQAAAAAAAAAAAAADOQAAAAAAAANJAAAAAAAAAAAAAANJAAAAAAAAA1kAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqkAAAAAAAAD2QAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADWQAAAAAAAAN5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1kAAAAAAAADWQAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAADaQAAAAAAAAN5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2kAAAAAAAADaQAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAADeQAAAAAAAAOJAAAAAAAAAAAAAAOJAAAAAAAAA5kAAAAAAAAAAAAAA5kAAAAAAAADqQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3kAAAAAAAADeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADqQAAAAAAAAO5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6kAAAAAAAADqQAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADuQAAAAAAAAPZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7kAAAAAAAADuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAADyQAAAAAAAAPZAAAAAAAAAAAAAAPZAAAAAAAAA+kAAAAAAAAAAAAAA+kAAAAAAAAD+QAAAAAAAAAAAAAD+QAAAAAAAAQJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8kAAAAAAAADyQAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEGQAAAAAAAAQpAAAAAAAAAAAAAAQpAAAAAAAABDkAAAAAAAAAAAAABDkAAAAAAAAESQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBkAAAAAAAAEGQAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAESQAAAAAAAARZAAAAAAAAAAAAAARZAAAAAAAABGkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEkAAAAAAAAESQAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ";:"
					},
					"AgAAAEeQAAAAAAAASJAAAAAAAAAAAAAASJAAAAAAAABJkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHkAAAAAAAAEeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					2,
					"left_delete",
					null,
					"AgAAAEiQAAAAAAAASJAAAAAAAAABAAAAOkeQAAAAAAAAR5AAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJkAAAAAAAAEmQAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEeQAAAAAAAASJAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHkAAAAAAAAEeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAEeQAAAAAAAAR5AAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIkAAAAAAAAEiQAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ".mna"
					},
					"BAAAAEeQAAAAAAAASJAAAAAAAAAAAAAASJAAAAAAAABJkAAAAAAAAAAAAABJkAAAAAAAAEqQAAAAAAAAAAAAAEqQAAAAAAAAS5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHkAAAAAAAAEeQAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					3,
					"left_delete",
					null,
					"AwAAAEqQAAAAAAAASpAAAAAAAAABAAAAYUmQAAAAAAAASZAAAAAAAAABAAAAbkiQAAAAAAAASJAAAAAAAAABAAAAbQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLkAAAAAAAAEuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "map"
					},
					"AwAAAEiQAAAAAAAASZAAAAAAAAAAAAAASZAAAAAAAABKkAAAAAAAAAAAAABKkAAAAAAAAEuQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIkAAAAAAAAEiQAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEuQAAAAAAAATZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLkAAAAAAAAEuQAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEyQAAAAAAAATZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMkAAAAAAAAEyQAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAE2QAAAAAAAATpAAAAAAAAAAAAAATpAAAAAAAABPkAAAAAAAAAAAAABPkAAAAAAAAFCQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNkAAAAAAAAE2QAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " n.name"
					},
					"BwAAAFCQAAAAAAAAUZAAAAAAAAAAAAAAUZAAAAAAAABSkAAAAAAAAAAAAABSkAAAAAAAAFOQAAAAAAAAAAAAAFOQAAAAAAAAVJAAAAAAAAAAAAAAVJAAAAAAAABVkAAAAAAAAAAAAABVkAAAAAAAAFaQAAAAAAAAAAAAAFaQAAAAAAAAV5AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQkAAAAAAAAFCQAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFiQAAAAAAAAWZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYkAAAAAAAAFiQAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAACqQAAAAAAAAK5AAAAAAAAAAAAAAK5AAAAAAAAAskAAAAAAAAAAAAAAskAAAAAAAAC2QAAAAAAAAAAAAAC2QAAAAAAAALpAAAAAAAAAAAAAALpAAAAAAAAAvkAAAAAAAAAAAAAAvkAAAAAAAADCQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqkAAAAAAAACqQAAAAAAAAAAAAAAAAREA"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADCQAAAAAAAAMZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwkAAAAAAAADCQAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "data.inner."
					},
					"CwAAADaQAAAAAAAAN5AAAAAAAAAAAAAAN5AAAAAAAAA4kAAAAAAAAAAAAAA4kAAAAAAAADmQAAAAAAAAAAAAADmQAAAAAAAAOpAAAAAAAAAAAAAAOpAAAAAAAAA7kAAAAAAAAAAAAAA7kAAAAAAAADyQAAAAAAAAAAAAADyQAAAAAAAAPZAAAAAAAAAAAAAAPZAAAAAAAAA+kAAAAAAAAAAAAAA+kAAAAAAAAD+QAAAAAAAAAAAAAD+QAAAAAAAAQJAAAAAAAAAAAAAAQJAAAAAAAABBkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2kAAAAAAAADaQAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"right_delete",
					null,
					"AQAAAFtQAAAAAAAAW1AAAAAAAABjAAAAICAgLy9jb25zb2xlLmxvZygnZGVlcCcsIGRlZXApOwogICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2RlZXAuUkVUVVJOX1BBVEgnLCBkZWVwLlJFVFVSTl9QQVRIKTsK",
					"AQAAAAAAAAABAAAAW1AAAAAAAAC+UAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"right_delete",
					null,
					"AQAAAPtQAAAAAAAA+1AAAAAAAAA4AAAAICAvL2NvbnNvbGUubG9nKCdSZWNvcmREZWNsJywgeyB0eXBlUGF0aCB9KTsKICAgICAgICAgICA",
					"AQAAAAAAAAABAAAA+1AAAAAAAAAzUQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"right_delete",
					null,
					"AQAAAGNRAAAAAAAAY1EAAAAAAABNAAAAICAgIC8vICBjb25zb2xlLmxvZygnbG9jOicsIHsga2luZCwgZmlsZSwgbGluZSwgY29sdW1uLCB0eXBlTm9kZX0pOwogICAgICAgICA",
					"AQAAAAAAAAABAAAAY1EAAAAAAACwUQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"right_delete",
					null,
					"AQAAAJ1UAAAAAAAAnVQAAAAAAACcAAAACiAgICAgICAgICAvKiAgcmV0dXJuIFsKICAgICAgICAgICAgbmFtZSwKICAgICAgICAgICAgbm9kZS5raW5kLAogICAgICAgICAgICBub2RlLmtpbmQuc3RhcnRzV2l0aCgnSW5kaXJlY3QnKSA/IG51bGwgOiBUeXBlRmFjdG9yeShub2RlLCBhc3QpCiAgICAgICAgICBdOyov",
					"AQAAAAAAAAABAAAAnVQAAAAAAAA5VQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"right_delete",
					null,
					"AQAAAAVUAAAAAAAABVQAAAAAAAAPAAAALypub2RlLmtpbmQsKi8g",
					"AQAAAAAAAAABAAAABVQAAAAAAAAUVAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAElEAAAAAAAAVUQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "clang-list.js",
			"settings":
			{
				"buffer_size": 9298,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "ast-shell.js",
			"settings":
			{
				"buffer_size": 37376,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 12912,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFDAAAAAAAABWMAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAFDAAAAAAAABWMAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAIMtAAAAAAAAgy0AAAAAAAAEAAAAICAvLw",
					"AQAAAAAAAAABAAAAhy0AAAAAAACDLQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAANkQAAAAAAAA2RAAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA2hAAAAAAAADaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADbEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADXEAAAAAAAAAUAAAAgICAvLw",
					"AQAAAAAAAAABAAAA2xAAAAAAAADWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANcQAAAAAAAA2RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1xAAAAAAAADXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "https"
					},
					"BgAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAMAAAB3c3NZMAAAAAAAAFowAAAAAAAAAAAAAFowAAAAAAAAWzAAAAAAAAAAAAAAWzAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAF0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDAAAAAAAABbMAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAF0wAAAAAAAAXjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTAAAAAAAABdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAF0wAAAAAAAAXTAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXjAAAAAAAABeMAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "wss"
					},
					"BAAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAUAAABodHRwc1kwAAAAAAAAWjAAAAAAAAAAAAAAWjAAAAAAAABbMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDAAAAAAAABdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "wss"
					},
					"BAAAAFgwAAAAAAAAWTAAAAAAAAAAAAAAWTAAAAAAAABZMAAAAAAAAAMAAAB3c3NZMAAAAAAAAFowAAAAAAAAAAAAAFowAAAAAAAAWzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDAAAAAAAABbMAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 4310,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"cut",
					null,
					"AQAAAO0EAAAAAAAA7QQAAAAAAABoAAAACiAgbGV0IGNoaWxkID0gY2hpbGRfcHJvY2Vzcy5zcGF3bigncWpzbScsIGFyZ3MsIHsKICAgIGVudiwKICAgIHN0ZGlvOiBbJ2luaGVyaXQnLCAncGlwZScsICdwaXBlJ10KICB9KTs",
					"AQAAAAAAAAABAAAA7QQAAAAAAABVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					2,
					"paste",
					null,
					"AgAAAO0EAAAAAAAAVQUAAAAAAAAAAAAAVQUAAAAAAAC9BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "pid"
					},
					"BAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABdBQAAAAAAAAUAAABjaGlsZF0FAAAAAAAAXgUAAAAAAAAAAAAAXgUAAAAAAABfBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "os.exec"
					},
					"BwAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAGkFAAAAAAAAaQUAAAAAAAATAAAAY2hpbGRfcHJvY2Vzcy5zcGF3bg",
					"AQAAAAAAAAABAAAAaQUAAAAAAAB8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAGoFAAAAAAAAawUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagUAAAAAAABqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "].on"
					},
					"BAAAAHEFAAAAAAAAcgUAAAAAAAAAAAAAcgUAAAAAAABzBQAAAAAAAAAAAABzBQAAAAAAAHQFAAAAAAAAAAAAAHQFAAAAAAAAdQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQUAAAAAAABxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAAHQFAAAAAAAAdAUAAAAAAAABAAAAbnMFAAAAAAAAcwUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAdQUAAAAAAAB1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "concat("
					},
					"BwAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB4BQAAAAAAAAAAAAB4BQAAAAAAAHkFAAAAAAAAAAAAAHkFAAAAAAAAegUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwUAAAAAAABzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					2,
					"right_delete",
					null,
					"AgAAAHoFAAAAAAAAegUAAAAAAAABAAAALHoFAAAAAAAAegUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAegUAAAAAAAB6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAH4FAAAAAAAAfwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgUAAAAAAAB+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " env,"
					},
					"BQAAAIIFAAAAAAAAgwUAAAAAAAAAAAAAgwUAAAAAAACEBQAAAAAAAAAAAACEBQAAAAAAAIUFAAAAAAAAAAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACHBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggUAAAAAAACCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcFAAAAAAAAiAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwUAAAAAAACHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "stdein"
					},
					"BgAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					6,
					"left_delete",
					null,
					"BgAAAI0FAAAAAAAAjQUAAAAAAAABAAAAbowFAAAAAAAAjAUAAAAAAAABAAAAaYsFAAAAAAAAiwUAAAAAAAABAAAAZYoFAAAAAAAAigUAAAAAAAABAAAAZIkFAAAAAAAAiQUAAAAAAAABAAAAdIgFAAAAAAAAiAUAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAjgUAAAAAAACOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "stdout:"
					},
					"BwAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAACKBQAAAAAAAIsFAAAAAAAAAAAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8FAAAAAAAAkAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwUAAAAAAACPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABYBQAAAAAAAAAAAABYBQAAAAAAAFkFAAAAAAAAAAAAAFkFAAAAAAAAWgUAAAAAAAAAAAAAWgUAAAAAAABbBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQUAAAAAAABVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAFsFAAAAAAAAXAUAAAAAAAAAAAAAXAUAAAAAAABdBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwUAAAAAAABbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAFwFAAAAAAAAXAUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAUAAAAAAABcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					3,
					"left_delete",
					null,
					"AwAAAF4FAAAAAAAAXgUAAAAAAAABAAAAdF0FAAAAAAAAXQUAAAAAAAABAAAAdVwFAAAAAAAAXAUAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "pipe"
					},
					"BAAAAFwFAAAAAAAAXQUAAAAAAAAAAAAAXQUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAUAAAAAAABcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIFAAAAAAAAYwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAF8FAAAAAAAAXwUAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "os.pipe"
					},
					"BwAAAGMFAAAAAAAAZAUAAAAAAAAAAAAAZAUAAAAAAABlBQAAAAAAAAAAAABlBQAAAAAAAGYFAAAAAAAAAAAAAGYFAAAAAAAAZwUAAAAAAAAAAAAAZwUAAAAAAABoBQAAAAAAAAAAAABoBQAAAAAAAGkFAAAAAAAAAAAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwUAAAAAAABjBQAAAAAAAP///////+9/"
				],
				[
					64,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGoFAAAAAAAAbAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagUAAAAAAABqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAG0FAAAAAAAAbgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQUAAAAAAABtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"paste",
					null,
					"AgAAAFwFAAAAAAAAYAUAAAAAAAAAAAAAYAUAAAAAAABgBQAAAAAAAAQAAABwaXBl",
					"AQAAAAAAAAABAAAAXAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"paste",
					null,
					"AQAAAKkFAAAAAAAArQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQUAAAAAAACpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0FAAAAAAAArgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAK0FAAAAAAAArQUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK0FAAAAAAAArwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAK4FAAAAAAAArwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALAFAAAAAAAAsQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAUAAAAAAACwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " stde"
					},
					"BQAAALEFAAAAAAAAsgUAAAAAAAAAAAAAsgUAAAAAAACzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAALQFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC2BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQUAAAAAAACxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAALUFAAAAAAAAtQUAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAtgUAAAAAAAC2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "err:"
					},
					"BAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQUAAAAAAAC1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " pipe√º"
					},
					"BgAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAC7BQAAAAAAALwFAAAAAAAAAAAAALwFAAAAAAAAvQUAAAAAAAAAAAAAvQUAAAAAAAC+BQAAAAAAAAAAAAC+BQAAAAAAAL8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQUAAAAAAAC5BQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAL4FAAAAAAAAvgUAAAAAAAACAAAAw7w",
					"AQAAAAAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAL4FAAAAAAAAwAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL8FAAAAAAAAwAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADDBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQUAAAAAAADBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAMMFAAAAAAAAxAUAAAAAAAAAAAAAxAUAAAAAAADFBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwUAAAAAAADDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFUFAAAAAAAAVwUAAAAAAAAAAAAAsgQAAAAAAAC0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQUAAAAAAACyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAADJA"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "\ncl"
					},
					"BgAAAP8FAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAACBgAAAAAAAAAAAAAABgAAAAAAAAAGAAAAAAAAAgAAACAgAAYAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					2,
					"left_delete",
					null,
					"AgAAAAEGAAAAAAAAAQYAAAAAAAABAAAAbAAGAAAAAAAAAAYAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "os.close"
					},
					"CAAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAABwYAAAAAAAAIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAgGAAAAAAAACgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAYAAAAAAAAIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "pipe"
					},
					"BAAAAAkGAAAAAAAACgYAAAAAAAAAAAAACgYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAwGAAAAAAAAAAAAAAwGAAAAAAAADQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAA0GAAAAAAAADwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQYAAAAAAAANBgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAA4GAAAAAAAADwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgYAAAAAAAAOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABEGAAAAAAAAEgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "block:false,"
					},
					"DAAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAChBQAAAAAAAKIFAAAAAAAAAAAAAKIFAAAAAAAAowUAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAACkBQAAAAAAAKUFAAAAAAAAAAAAAKUFAAAAAAAApgUAAAAAAAAAAAAApgUAAAAAAACnBQAAAAAAAAAAAACnBQAAAAAAAKgFAAAAAAAAAAAAAKgFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAACqBQAAAAAAAKsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwUAAAAAAACfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "retur"
					},
					"BQAAAGkGAAAAAAAAagYAAAAAAAAAAAAAagYAAAAAAABrBgAAAAAAAAAAAABrBgAAAAAAAGwGAAAAAAAAAAAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABuBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgYAAAAAAABuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAG4GAAAAAAAAbgYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAG4GAAAAAAAAbwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgYAAAAAAABuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG8GAAAAAAAAcAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwYAAAAAAABvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AgAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAggYAAAAAAACEBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEGAAAAAAAAcgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQYAAAAAAABxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "tsd"
					},
					"AwAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					3,
					"left_delete",
					null,
					"AwAAAHQGAAAAAAAAdAYAAAAAAAABAAAAZHMGAAAAAAAAcwYAAAAAAAABAAAAc3IGAAAAAAAAcgYAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "stdio:"
					},
					"BgAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAHUGAAAAAAAAAAAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgYAAAAAAAByBgAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgGAAAAAAAAeQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAYAAAAAAAB4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHkGAAAAAAAAewYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQYAAAAAAAB5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "undefined,"
					},
					"CgAAAHoGAAAAAAAAewYAAAAAAAAAAAAAewYAAAAAAAB8BgAAAAAAAAAAAAB8BgAAAAAAAH0GAAAAAAAAAAAAAH0GAAAAAAAAfgYAAAAAAAAAAAAAfgYAAAAAAAB/BgAAAAAAAAAAAAB/BgAAAAAAAIAGAAAAAAAAAAAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAIMGAAAAAAAAhAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegYAAAAAAAB6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " pipe"
					},
					"BQAAAIQGAAAAAAAAhQYAAAAAAAAAAAAAhQYAAAAAAACGBgAAAAAAAAAAAACGBgAAAAAAAIcGAAAAAAAAAAAAAIcGAAAAAAAAiAYAAAAAAAAAAAAAiAYAAAAAAACJBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIkGAAAAAAAAiwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIoGAAAAAAAAiwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigYAAAAAAACKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": ",pipe"
					},
					"BQAAAIwGAAAAAAAAjQYAAAAAAAAAAAAAjQYAAAAAAACOBgAAAAAAAAAAAACOBgAAAAAAAI8GAAAAAAAAAAAAAI8GAAAAAAAAkAYAAAAAAAAAAAAAkAYAAAAAAACRBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAYAAAAAAACMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJEGAAAAAAAAkwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQYAAAAAAACRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJIGAAAAAAAAkwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgYAAAAAAACSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJUGAAAAAAAAlgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQYAAAAAAACVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"left_delete",
					null,
					"AQAAAJUGAAAAAAAAlQYAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAlgYAAAAAAACWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUGAAAAAAAAlgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQYAAAAAAACVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " pid"
					},
					"BAAAAJYGAAAAAAAAlwYAAAAAAAAAAAAAlwYAAAAAAACYBgAAAAAAAAAAAACYBgAAAAAAAJkGAAAAAAAAAAAAAJkGAAAAAAAAmgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgYAAAAAAACWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAJoGAAAAAAAAmwYAAAAAAAAAAAAAmwYAAAAAAACcBgAAAAAAAAAAAACcBgAAAAAAAJ0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgYAAAAAAACaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"cut",
					null,
					"AQAAAGkGAAAAAAAAaQYAAAAAAAA1AAAAcmV0dXJuIHsgc3RkaW86IFt1bmRlZmluZWQsIHBpcGVbMF0scGlwZVswXV0sIHBpZCB9Owo",
					"AQAAAAAAAAABAAAAngYAAAAAAABpBgAAAAAAAAAAAAAAAAAA"
				],
				[
					255,
					1,
					"paste",
					null,
					"AQAAAB8GAAAAAAAAVAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwYAAAAAAAAfBgAAAAAAAAAAAAAAAAAA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAACgGAAAAAAAAKQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAC4GAAAAAAAALwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgYAAAAAAAAuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAC4GAAAAAAAALgYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAALwYAAAAAAAAvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAC4GAAAAAAAALwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgYAAAAAAAAuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"cut",
					null,
					"AQAAANoFAAAAAAAA2gUAAAAAAAAxAAAAZW52LAogICAgc3RkaW86IFsnaW5oZXJpdCcsICdwaXBlJywgJ3BpcGUnXQogIH0pOw",
					"AQAAAAAAAAABAAAA2gUAAAAAAAALBgAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAH8GAAAAAAAAfwYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAgAYAAAAAAACABgAAAAAAAAAAAAAAAEJA"
				],
				[
					303,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADYEAAAaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwppbXBvcnQgeyBidG9hIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgKiBhcyBwYXRoIGZyb20gJy4vbGliL3BhdGguanMnOwppbXBvcnQgKiBhcyBkZWVwIGZyb20gJy4vbGliL2RlZXAuanMnOwppbXBvcnQgeyB0b1N0cmluZyB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgY2hpbGRfcHJvY2VzcyBmcm9tICcuL2xpYi9jaGlsZFByb2Nlc3MuanMnOwppbXBvcnQgeyBTb2NrZXQsIFNvY2tBZGRyLCBBRl9JTkVULCBTT0NLX1NUUkVBTSwgSVBQUk9UT19UQ1AgfSBmcm9tICcuL3F1aWNranMvcWpzLWZmaS9saWIvc29ja2V0LmpzJzsKaW1wb3J0IHsgdG9TdHJpbmcgYXMgQXJyYXlCdWZmZXJUb1N0cmluZywgdG9BcnJheUJ1ZmZlciBhcyBTdHJpbmdUb0FycmF5QnVmZmVyIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CmltcG9ydCB7IERlYnVnZ2VyUHJvdG9jb2wgfSBmcm9tICcuL2RlYnVnZ2VycHJvdG9jb2wuanMnOwoKY29uc29sZS5sb2coCiAgJ3RvU3RyaW5nJywKICBBcnJheUJ1ZmZlclRvU3RyaW5nKG5ldyBVaW50OEFycmF5KFsweDYxLCAweDYyLCAweDY0LCAweDY1LCAweDY2LCAweDIwLCAweGMzLCAweGE0LCAweGMzLCAweGI2LCAweGMzLCAweGJjXSkuYnVmZmVyKQopOwpjb25zb2xlLmxvZygndG9BcnJheUJ1ZmZlcicsIFN0cmluZ1RvQXJyYXlCdWZmZXIoJ2JsYWggw6TDtsO8JykpOwpjb25zb2xlLmxvZygnY2hpbGRfcHJvY2VzcycsIGNoaWxkX3Byb2Nlc3Muc3Bhd24gKyAnJyk7Cgp2YXIgd29ya2VyOwp2YXIgY291bnRlcjsKbGV0IHNvY2tldHMgPSAoZ2xvYmFsVGhpcy5zb2NrZXRzID8/PSBuZXcgU2V0KCkpOwoKZXhwb3J0IGZ1bmN0aW9uIFN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykgewogIGxldCBlbnYgPSBwcm9jZXNzLmVudiA/PyB7fTsKICBhZGRyZXNzID8/PSAnMTI3LjAuMC4xOjk5MDEnOwogIGVudlsnRElTUExBWSddID8/PSAnOjAuMCc7CiAgaWYoY29ubmVjdCkgZW52WydRVUlDS0pTX0RFQlVHX0FERFJFU1MnXSA9IGFkZHJlc3M7CiAgZWxzZSBlbnZbJ1FVSUNLSlNfREVCVUdfTElTVEVOX0FERFJFU1MnXSA9IGFkZHJlc3M7CgovKiAgY29uc29sZS5sb2coJ2NoaWxkX3Byb2Nlc3Muc3Bhd24nLCBjaGlsZF9wcm9jZXNzLnNwYXduKTsKCiAgbGV0IGNoaWxkID0gY2hpbGRfcHJvY2Vzcy5zcGF3bigncWpzbScsIGFyZ3MsIHsKICAgIGVudiwKICAgIHN0ZGlvOiBbJ2luaGVyaXQnLCAncGlwZScsICdwaXBlJ10KICB9KTsqLwogIGxldCBwaXBlID0gb3MucGlwZSgpOyAKICBsZXQgcGlkID0gb3MuZXhlYyhbJ3Fqc20nXS5jb25jYXQoYXJncyksIHtibG9jazpmYWxzZSwgZW52LCBzdGRvdXQ6IHBpcGVbMV0sIHN0ZGVycjogcGlwZVsxXSB9KTsKICAgIApvcy5jbG9zZShwaXBlWzFdKTsKcmV0dXJuIHsgJ3N0ZGlvJzogW3VuZGVmaW5lZCwgcGlwZVswXSxwaXBlWzBdXSwgcGlkIH07CiAgLy9jb25zdCB7IHBpZCwgc3RkaW8gfSA9IGNoaWxkOwoKICBjb25zb2xlLmxvZygnU3RhcnREZWJ1Z2dlcicsIGNoaWxkKTsKICByZXR1cm4gY2hpbGQ7Cgp9CgpleHBvcnQgZnVuY3Rpb24gQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIGNhbGxiYWNrKSB7CiAgbGV0IGFkZHIgPSBuZXcgU29ja0FkZHIoQUZfSU5FVCwgLi4uYWRkcmVzcy5zcGxpdCgnOicpKTsKICBjb25zb2xlLmxvZygnQ29ubmVjdERlYnVnZ2VyJywgYWRkcik7CiAgbGV0IHNvY2sgPSBuZXcgU29ja2V0KEFGX0lORVQsIFNPQ0tfU1RSRUFNLCBJUFBST1RPX1RDUCk7CiAgbGV0IHJldCA9IHNvY2suY29ubmVjdChhZGRyKTsKCiAgaWYocmV0ID49IDApIHsKICAgIHNvY2submRlbGF5KHRydWUpOwogICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCcsICtzb2NrLCAndG8nLCBzb2NrLnJlbW90ZSk7CiAgICBzb2NrZXRzLmFkZChzb2NrKTsKICAgIGNvbnNvbGUubG9nKCdzb2NrZXRzJywgc29ja2V0cyk7CiAgfQoKICAvKiAgb3Muc2V0V3JpdGVIYW5kbGVyKCtzb2NrLCAoKSA9PiB7CiAgICBvcy5zZXRXcml0ZUhhbmRsZXIoK3NvY2ssIG51bGwpOwogICAgbGV0IGRiZyA9IG5ldyBEZWJ1Z2dlclByb3RvY29sKHNvY2spOwogIAogICAgb3Muc2V0UmVhZEhhbmRsZXIoK3NvY2ssICgpID0+IHsKICAgICAgaWYoZGJnKSB7CiAgICAgICAgbGV0IHIgPSBkYmcucmVhZCgpOwogICAgICBjb25zb2xlLmxvZygncmVhZGFibGUnLCB7IGZkOiArc29jaywgciB9KTsKICAgICAgICBpZihyIDw9IDApIHsKICAgICAgICAgIG9zLnNldFJlYWRIYW5kbGVyKCtzb2NrLCBudWxsKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCdyZWFkKCkgPScsIHIsIHNvY2suZXJyb3IsIGNhbGxiYWNrICsgJycpOwogICAgICAgICAgY2FsbGJhY2soZGJnLCBzb2NrKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0pOwoqLwogIC8vICBpZihyZXQgPCAwKSB0aHJvdyBuZXcgRXJyb3IoYENvbm5lY3Rpb24gZmFpbGVkOiAke3NvY2suZXJyb3J9YCk7CiAgY29uc29sZS5sb2coJ0Nvbm5lY3REZWJ1Z2dlcicsIHNvY2spOwoKICByZXR1cm4gc29jazsKfQoKZnVuY3Rpb24gVGVzdFdvcmtlcigpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7CiAgICBjb2xvcnM6IHRydWUsCiAgICBjb21wYWN0OiAxLAogICAgcHJlZml4OiAnXHgxYlszODs1OzIyMG1QQVJFTlRceDFiWzBtJwogIH0pOwogIGNvbnNvbGUubG9nKCdzY3JpcHRBcmdzJywgc2NyaXB0QXJncyk7CiAgd29ya2VyID0gbmV3IG9zLldvcmtlcignLi93cy13b3JrZXIuanMnKTsKICBjb3VudGVyID0gMDsKICB3b3JrZXIub25tZXNzYWdlID0gV29ya2VyTWVzc2FnZTsKICBjb25zb2xlLmxvZygnVGVzdFdvcmtlcicsIHdvcmtlci5vbm1lc3NhZ2UpOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBsaW5lID0gcHJvY2Vzcy5zdGRpbi5nZXRsaW5lKCk7CiAgICB3b3JrZXIucG9zdE1lc3NhZ2UoeyBsaW5lIH0pOwogIH0pOwp9CgpsZXQgc29jaywgY29ubmVjdGlvbjsKZnVuY3Rpb24gV29ya2VyTWVzc2FnZShlKSB7CiAgY29uc29sZS5sb2coJ1dvcmtlck1lc3NhZ2UnLCBlKTsKICB2YXIgZXYgPSBlLmRhdGE7CiAgY29uc3QgeyBtZXNzYWdlLCBpZCB9ID0gZXY7CiAgc3dpdGNoIChldi50eXBlKSB7CiAgICBjYXNlICdtZXNzYWdlJzogewogICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkgewogICAgICAgIGNhc2UgJ3N0YXJ0JzogewogICAgICAgICAgY29uc29sZS5sb2coJ1NUQVJUJywgbWVzc2FnZS5zdGFydCk7CiAgICAgICAgICBjb25zdCB7IGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MgfSA9IG1lc3NhZ2Uuc3RhcnQ7CiAgICAgICAgICBsZXQgY2hpbGQgPSBTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpOwogICAgICAgICAgb3Muc2xlZXAoMTAwMCk7CiAgICAgICAgICBzb2NrID0gQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIGRlZmF1bHQ6IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdGcm9tIFdPUktFUicsIGV2KTsKICAgICAgICAgIGNvbm5lY3Rpb24uc2VuZE1lc3NhZ2UobWVzc2FnZSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdudW0nOiB7CiAgICAgIHV0aWwuYXNzZXJ0KGV2Lm51bSwgY291bnRlcik7CiAgICAgIGNvdW50ZXIrKzsKICAgICAgaWYoY291bnRlciA9PSAxMCkgewogICAgICAgIGxldCBzYWIgPSBuZXcgU2hhcmVkQXJyYXlCdWZmZXIoMTApOwogICAgICAgIGxldCBidWYgPSBuZXcgVWludDhBcnJheShzYWIpOwogICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdzYWInLCBidWY6IGJ1ZiB9KTsKICAgICAgICBjb3VudGVyID0gMDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3NhYl9kb25lJzogewogICAgICBsZXQgYnVmID0gZXYuYnVmOwogICAgICB1dGlsLmFzc2VydChidWZbMl0sIDEwKTsKICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ2Fib3J0JyB9KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdkb25lJzogewogICAgICBicmVhazsKICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHNlbmQoaWQsIGJvZHkpIHsKICB3b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiAnc2VuZCcsIGlkLCBib2R5IH0pOwp9Ci8qVGVzdFdvcmtlcigpOyovCgAAAAAAAAAA1hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "make-bitmap.js",
			"settings":
			{
				"buffer_size": 2275,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components.js",
			"settings":
			{
				"buffer_size": 2831,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAWCwAAaW1wb3J0IFV0aWwgZnJvbSAnLi4vdXRpbC5qcyc7CmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJy4uL2RvbS9wcmVhY3RDb21wb25lbnQuanMnOwppbXBvcnQgeyBXaXJlIH0gZnJvbSAnLi9jb21wb25lbnRzL3dpcmUuanMnOwppbXBvcnQgeyBSZWN0YW5nbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvcmVjdGFuZ2xlLmpzJzsKaW1wb3J0IHsgUGluIH0gZnJvbSAnLi9jb21wb25lbnRzL3Bpbi5qcyc7CmltcG9ydCB7IENpcmNsZSB9IGZyb20gJy4vY29tcG9uZW50cy9jaXJjbGUuanMnOwppbXBvcnQgeyBDcm9zcyB9IGZyb20gJy4vY29tcG9uZW50cy9jcm9zcy5qcyc7CmltcG9ydCB7IEFyYyB9IGZyb20gJy4vY29tcG9uZW50cy9hcmMuanMnOwppbXBvcnQgeyBHcmlkLCBQYXR0ZXJuIH0gZnJvbSAnLi9jb21wb25lbnRzL2dyaWQuanMnOwppbXBvcnQgeyBUZXh0RWxlbWVudCB9IGZyb20gJy4vY29tcG9uZW50cy90ZXh0RWxlbWVudC5qcyc7CmltcG9ydCB7IFNWRyB9IGZyb20gJy4vY29tcG9uZW50cy9zdmcuanMnOwppbXBvcnQgeyBCYWNrZ3JvdW5kIH0gZnJvbSAnLi9jb21wb25lbnRzL2JhY2tncm91bmQuanMnOwppbXBvcnQgeyBEcmF3aW5nIH0gZnJvbSAnLi9jb21wb25lbnRzL2RyYXdpbmcuanMnOwppbXBvcnQgeyBQYWQgfSBmcm9tICcuL2NvbXBvbmVudHMvcGFkLmpzJzsKaW1wb3J0IHsgUG9seWdvbiB9IGZyb20gJy4vY29tcG9uZW50cy9wb2x5Z29uLmpzJzsKaW1wb3J0IHsgT3JpZ2luIH0gZnJvbSAnLi9jb21wb25lbnRzL29yaWdpbi5qcyc7CmltcG9ydCB7IEVsZW1lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZWxlbWVudC5qcyc7CmltcG9ydCB7IFdpcmVQYXRoIH0gZnJvbSAnLi9jb21wb25lbnRzL3dpcmVQYXRoLmpzJzsKaW1wb3J0IHsgUGFja2FnZSB9IGZyb20gJy4vY29tcG9uZW50cy9wYWNrYWdlLmpzJzsKaW1wb3J0IHsgU2NoZW1hdGljU3ltYm9sIH0gZnJvbSAnLi9jb21wb25lbnRzL3N5bWJvbC5qcyc7CmltcG9ydCB7IEhvbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvaG9sZS5qcyc7CmltcG9ydCB7IERpbWVuc2lvbiB9IGZyb20gJy4vY29tcG9uZW50cy9kaW1lbnNpb24uanMnOwppbXBvcnQgeyBTTUQgfSBmcm9tICcuL2NvbXBvbmVudHMvc21kLmpzJzsKaW1wb3J0IHsgVmlhIH0gZnJvbSAnLi9jb21wb25lbnRzL3ZpYS5qcyc7CmltcG9ydCB7IEluc3RhbmNlIH0gZnJvbSAnLi9jb21wb25lbnRzL2luc3RhbmNlLmpzJzsKaW1wb3J0IHsgU2hlZXQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2hlZXQuanMnOwoKZXhwb3J0IGNvbnN0IFByaW1pdGl2ZUNvbXBvbmVudHMgPSB7CiAgV2lyZSwKICBSZWN0YW5nbGUsCiAgUGluLAogIENpcmNsZSwKICBDcm9zcywKICBBcmMsCiAgVGV4dDogVGV4dEVsZW1lbnQsCiAgR3JpZCwKICBQYXR0ZXJuLAogIFBhZCwKICBWaWE6IFBhZCwKICBPcmlnaW4sCiAgUG9seWdvbiwKICBTeW1ib2w6IFNjaGVtYXRpY1N5bWJvbCwKICBQYWNrYWdlLAogIEhvbGUsCiAgRGltZW5zaW9uLAogIFNtZDogU01ELAogIFZpYSwKICBJbnN0YW5jZSwKICBTaGVldAp9OwoKbGV0IHByZXZOYW1lOwoKZXhwb3J0IGNvbnN0IEVsZW1lbnROYW1lVG9Db21wb25lbnQgPSBuYW1lID0+IHsKICBsZXQgY29tcCA9IFByaW1pdGl2ZUNvbXBvbmVudHNbVXRpbC51Y2ZpcnN0KG5hbWUpXTsKCiAgaWYoIWNvbXAgJiYgbmFtZSAhPSBwcmV2TmFtZSkgewogICAgY29uc29sZS5kZWJ1ZyhgTm90IHJlbmRlcmluZyBjb21wb25lbnQgJyR7bmFtZX0nYCk7CiAgICBwcmV2TmFtZSA9IG5hbWU7CiAgfQogIHJldHVybiBjb21wOwp9OwoKZXhwb3J0IGNvbnN0IEVsZW1lbnRUb0NvbXBvbmVudCA9IGVsZW1lbnQgPT4gRWxlbWVudE5hbWVUb0NvbXBvbmVudChlbGVtZW50LnRhZ05hbWUpOwoKZXhwb3J0IHsgV2lyZSB9IGZyb20gJy4vY29tcG9uZW50cy93aXJlLmpzJzsKZXhwb3J0IHsgUmVjdGFuZ2xlIH0gZnJvbSAnLi9jb21wb25lbnRzL3JlY3RhbmdsZS5qcyc7CmV4cG9ydCB7IFBpbiB9IGZyb20gJy4vY29tcG9uZW50cy9waW4uanMnOwpleHBvcnQgeyBDaXJjbGUgfSBmcm9tICcuL2NvbXBvbmVudHMvY2lyY2xlLmpzJzsKZXhwb3J0IHsgQ3Jvc3MgfSBmcm9tICcuL2NvbXBvbmVudHMvY3Jvc3MuanMnOwpleHBvcnQgeyBBcmMgfSBmcm9tICcuL2NvbXBvbmVudHMvYXJjLmpzJzsKZXhwb3J0IHsgR3JpZCwgUGF0dGVybiB9IGZyb20gJy4vY29tcG9uZW50cy9ncmlkLmpzJzsKZXhwb3J0IHsgVGV4dEVsZW1lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGV4dEVsZW1lbnQuanMnOwpleHBvcnQgeyBTVkcgfSBmcm9tICcuL2NvbXBvbmVudHMvc3ZnLmpzJzsKZXhwb3J0IHsgQmFja2dyb3VuZCB9IGZyb20gJy4vY29tcG9uZW50cy9iYWNrZ3JvdW5kLmpzJzsKZXhwb3J0IHsgRHJhd2luZyB9IGZyb20gJy4vY29tcG9uZW50cy9kcmF3aW5nLmpzJzsKZXhwb3J0IHsgUGFkIH0gZnJvbSAnLi9jb21wb25lbnRzL3BhZC5qcyc7CmV4cG9ydCB7IFBvbHlnb24gfSBmcm9tICcuL2NvbXBvbmVudHMvcG9seWdvbi5qcyc7CmV4cG9ydCB7IE9yaWdpbiB9IGZyb20gJy4vY29tcG9uZW50cy9vcmlnaW4uanMnOwpleHBvcnQgeyBXaXJlUGF0aCB9IGZyb20gJy4vY29tcG9uZW50cy93aXJlUGF0aC5qcyc7CmV4cG9ydCB7IFBhY2thZ2UgfSBmcm9tICcuL2NvbXBvbmVudHMvcGFja2FnZS5qcyc7CmV4cG9ydCB7IFNjaGVtYXRpY1N5bWJvbCB9IGZyb20gJy4vY29tcG9uZW50cy9zeW1ib2wuanMnOwpleHBvcnQgeyBJbnN0YW5jZSB9IGZyb20gJy4vY29tcG9uZW50cy9pbnN0YW5jZS5qcyc7CmV4cG9ydCB7IFNoZWV0IH0gZnJvbSAnLi9jb21wb25lbnRzL3NoZWV0LmpzJzsKAAAAAAAAAAAPCwAAAAAAAAAAAAAAAAAAAAAAAA8LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AwAAAAAAAH8DAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-imread.js",
			"settings":
			{
				"buffer_size": 4214,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAADwHAAAAAAAAawcAAAAAAAAAAAAAawcAAAAAAABrBwAAAAAAACMAAAAvaG9tZS9yb21hbi9Eb2t1bWVudGUvbm9raWE1NTEwLnBuZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8BwAAAAAAAF8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"cut",
					null,
					"AQAAADAHAAAAAAAAMAcAAAAAAAA8AAAAYXJnc1swXSA/PyAnL2hvbWUvcm9tYW4vRG9rdW1lbnRlL1VyemVpdGNvZGUvZm9udC0xNHgyNC5wbmcn",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBwAAAAAAAGwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAADAHAAAAAAAAMQcAAAAAAAAAAAAAMQcAAAAAAAAyBwAAAAAAAAAAAAAyBwAAAAAAADMHAAAAAAAAAAAAADMHAAAAAAAANAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADQHAAAAAAAANgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0BwAAAAAAADQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1BwAAAAAAADUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABgHAAAAAAAAGQcAAAAAAAAAAAAAGQcAAAAAAAAbBwAAAAAAAAAAAAAbBwAAAAAAABwHAAAAAAAAAAAAABwHAAAAAAAAHgcAAAAAAAAAAAAAGQcAAAAAAAAZBwAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYBwAAAAAAABgHAAAAAAAA////////738"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAABwHAAAAAAAAWAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcBwAAAAAAABwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACYHAAAAAAAAJwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmBwAAAAAAACYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFkHAAAAAAAAWgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBwAAAAAAAFkHAAAAAAAA////////738"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAAWwcAAAAAAABdBwAAAAAAAAAAAABdBwAAAAAAAF4HAAAAAAAAAAAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBwAAAAAAAFoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAABiBwAAAAAAAGMHAAAAAAAAAAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBwAAAAAAAGAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGUHAAAAAAAAZgcAAAAAAAAAAAAAZgcAAAAAAABnBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlBwAAAAAAAGUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " path.pa"
					},
					"CAAAAGcHAAAAAAAAaAcAAAAAAAAAAAAAaAcAAAAAAABpBwAAAAAAAAAAAABpBwAAAAAAAGoHAAAAAAAAAAAAAGoHAAAAAAAAawcAAAAAAAAAAAAAawcAAAAAAABsBwAAAAAAAAAAAABsBwAAAAAAAG0HAAAAAAAAAAAAAG0HAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABvBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnBwAAAAAAAGcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					2,
					"left_delete",
					null,
					"AgAAAG4HAAAAAAAAbgcAAAAAAAABAAAAYW0HAAAAAAAAbQcAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvBwAAAAAAAG8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "basename"
					},
					"CAAAAG0HAAAAAAAAbgcAAAAAAAAAAAAAbgcAAAAAAABvBwAAAAAAAAAAAABvBwAAAAAAAHAHAAAAAAAAAAAAAHAHAAAAAAAAcQcAAAAAAAAAAAAAcQcAAAAAAAByBwAAAAAAAAAAAAByBwAAAAAAAHMHAAAAAAAAAAAAAHMHAAAAAAAAdAcAAAAAAAAAAAAAdAcAAAAAAAB1BwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtBwAAAAAAAG0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUHAAAAAAAAdwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1BwAAAAAAAHUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAAB4BwAAAAAAAAAAAAB4BwAAAAAAAHkHAAAAAAAAAAAAAHkHAAAAAAAAegcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2BwAAAAAAAHYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHoHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6BwAAAAAAAHoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAHsHAAAAAAAAfAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7BwAAAAAAAHsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAH4HAAAAAAAAfwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+BwAAAAAAAH4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAH8HAAAAAAAAgAcAAAAAAAAAAAAAgAcAAAAAAACCBwAAAAAAAAAAAACCBwAAAAAAAIMHAAAAAAAAAAAAAIMHAAAAAAAAhAcAAAAAAAAAAAAAhAcAAAAAAACFBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/BwAAAAAAAH8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " reoslu"
					},
					"BwAAAIUHAAAAAAAAhgcAAAAAAAAAAAAAhgcAAAAAAACHBwAAAAAAAAAAAACHBwAAAAAAAIgHAAAAAAAAAAAAAIgHAAAAAAAAiQcAAAAAAAAAAAAAiQcAAAAAAACKBwAAAAAAAAAAAACKBwAAAAAAAIsHAAAAAAAAAAAAAIsHAAAAAAAAjAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFBwAAAAAAAIUHAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					4,
					"left_delete",
					null,
					"BAAAAIsHAAAAAAAAiwcAAAAAAAABAAAAdYoHAAAAAAAAigcAAAAAAAABAAAAbIkHAAAAAAAAiQcAAAAAAAABAAAAc4gHAAAAAAAAiAcAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMBwAAAAAAAIwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "df"
					},
					"AwAAAIYHAAAAAAAAhwcAAAAAAAAAAAAAhwcAAAAAAACHBwAAAAAAAAIAAAByZYcHAAAAAAAAiAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGBwAAAAAAAIgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAIcHAAAAAAAAhwcAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBwAAAAAAAIgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "im"
					},
					"AgAAAIcHAAAAAAAAiAcAAAAAAAAAAAAAiAcAAAAAAACJBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBwAAAAAAAIcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " =v"
					},
					"AwAAAIkHAAAAAAAAigcAAAAAAAAAAAAAigcAAAAAAACLBwAAAAAAAAAAAACLBwAAAAAAAIwHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJBwAAAAAAAIkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAIsHAAAAAAAAiwcAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMBwAAAAAAAIwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"paste",
					null,
					"AQAAAIsHAAAAAAAAzgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLBwAAAAAAAIsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					5,
					"left_delete",
					null,
					"BQAAAI8HAAAAAAAAjwcAAAAAAAAGAAAACnFqc20+jgcAAAAAAACOBwAAAAAAAAEAAABdjQcAAAAAAACNBwAAAAAAAAEAAAAgjAcAAAAAAACMBwAAAAAAAAEAAAA0iwcAAAAAAACLBwAAAAAAAAEAAAAy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVBwAAAAAAAI8HAAAAAAAA////////738"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BQAAAJAHAAAAAAAAkQcAAAAAAAAAAAAAkQcAAAAAAACRBwAAAAAAABAAAAAnZm9udC0xNHgyNC5wbmcnkQcAAAAAAACSBwAAAAAAAAAAAACSBwAAAAAAAJMHAAAAAAAAAAAAAJMHAAAAAAAAlAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBwAAAAAAAKAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALcHAAAAAAAAuAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BwAAAAAAALcHAAAAAAAA////////738"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAIwHAAAAAAAAjQcAAAAAAAAAAAAAjQcAAAAAAACOBwAAAAAAAAAAAACOBwAAAAAAAI8HAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMBwAAAAAAAIwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " cv.Size(."
					},
					"CgAAAI8HAAAAAAAAkAcAAAAAAAAAAAAAkAcAAAAAAACRBwAAAAAAAAAAAACRBwAAAAAAAJIHAAAAAAAAAAAAAJIHAAAAAAAAkwcAAAAAAAAAAAAAkwcAAAAAAACUBwAAAAAAAAAAAACUBwAAAAAAAJUHAAAAAAAAAAAAAJUHAAAAAAAAlgcAAAAAAAAAAAAAlgcAAAAAAACXBwAAAAAAAAAAAACXBwAAAAAAAJgHAAAAAAAAAAAAAJgHAAAAAAAAmQcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPBwAAAAAAAI8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJkHAAAAAAAAmgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZBwAAAAAAAJkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAJkHAAAAAAAAmQcAAAAAAAABAAAALpgHAAAAAAAAmAcAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaBwAAAAAAAJoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAAMMHAAAAAAAAwwcAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEBwAAAAAAAMQHAAAAAAAA////////738"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDBwAAAAAAAMMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"paste",
					null,
					"AQAAAMYHAAAAAAAA7QcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGBwAAAAAAAMYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"paste",
					null,
					"AgAAANUHAAAAAAAA2AcAAAAAAAAAAAAA2AcAAAAAAADYBwAAAAAAAAIAAABjdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVBwAAAAAAANcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"paste",
					null,
					"AgAAANsHAAAAAAAA3gcAAAAAAAAAAAAA3gcAAAAAAADeBwAAAAAAABAAAABmZWF0dXJlczJkX25hbWVz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBwAAAAAAAOsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "du"
					},
					"AwAAAGwKAAAAAAAAbQoAAAAAAAAAAAAAbQoAAAAAAABtCgAAAAAAABMAAABuZXcgY3YuU2l6ZSgxNCwgMjQpbQoAAAAAAABuCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsCgAAAAAAAH8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAG0KAAAAAAAAbQoAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuCgAAAAAAAG4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "im"
					},
					"AgAAAG0KAAAAAAAAbgoAAAAAAAAAAAAAbgoAAAAAAABvCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtCgAAAAAAAG0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "dim.width"
					},
					"CgAAAB0LAAAAAAAAHgsAAAAAAAAAAAAAHgsAAAAAAAAeCwAAAAAAAAIAAAAxNB4LAAAAAAAAHwsAAAAAAAAAAAAAHwsAAAAAAAAgCwAAAAAAAAAAAAAgCwAAAAAAACELAAAAAAAAAAAAACELAAAAAAAAIgsAAAAAAAAAAAAAIgsAAAAAAAAjCwAAAAAAAAAAAAAjCwAAAAAAACQLAAAAAAAAAAAAACQLAAAAAAAAJQsAAAAAAAAAAAAAJQsAAAAAAAAmCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdCwAAAAAAAB8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": ",pixelf"
					},
					"BwAAAJMEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACVBAAAAAAAAAAAAACVBAAAAAAAAJYEAAAAAAAAAAAAAJYEAAAAAAAAlwQAAAAAAAAAAAAAlwQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJkEAAAAAAAAAAAAAJkEAAAAAAAAmgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTBAAAAAAAAJMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAJoEAAAAAAAAmwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaBAAAAAAAAJoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJsEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACdBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbBAAAAAAAAJsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAAJ0EAAAAAAAAngQAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAACfBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAAoQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdBAAAAAAAAJ0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAKEEAAAAAAAAogQAAAAAAAAAAAAAogQAAAAAAACjBAAAAAAAAAAAAACjBAAAAAAAAKQEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChBAAAAAAAAKEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAAKQEAAAAAAAApQQAAAAAAAAAAAAApQQAAAAAAACmBAAAAAAAAAAAAACmBAAAAAAAAKcEAAAAAAAAAAAAAKcEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAKgEAAAAAAAAqQQAAAAAAAAAAAAAqQQAAAAAAACqBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoBAAAAAAAAKgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKoEAAAAAAAAqwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqBAAAAAAAAKoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKsEAAAAAAAArQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrBAAAAAAAAKsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "1:"
					},
					"AgAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsBAAAAAAAAKwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAK0EAAAAAAAArQQAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuBAAAAAAAAK4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAACwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuBAAAAAAAAK4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALAEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwBAAAAAAAALAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAALEEAAAAAAAAswQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxBAAAAAAAALEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALIEAAAAAAAAswQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyBAAAAAAAALIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "pixelfn("
					},
					"CAAAACIFAAAAAAAAIwUAAAAAAAAAAAAAIwUAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACUFAAAAAAAAAAAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAAqBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiBQAAAAAAACIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "="
					},
					"AgAAADgFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA5BQAAAAAAAAwAAAAgPyAnMScgOiAnMCc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BQAAAAAAAEQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					164,
					1,
					"left_delete",
					null,
					"AQAAADgFAAAAAAAAOAUAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5BQAAAAAAADkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADgFAAAAAAAAOQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BQAAAAAAADgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA8MAAAAAAAAEAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPDAAAAAAAAA8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " bit"
					},
					"BAAAABAMAAAAAAAAEQwAAAAAAAAAAAAAEQwAAAAAAAASDAAAAAAAAAAAAAASDAAAAAAAABMMAAAAAAAAAAAAABMMAAAAAAAAFAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQDAAAAAAAABAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUDAAAAAAAABQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcMAAAAAAAAGAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXDAAAAAAAABcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABgMAAAAAAAAGgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYDAAAAAAAABgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABgMAAAAAAAAGAwAAAAAAAABAAAAJxgMAAAAAAAAGAwAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZDAAAAAAAABkMAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "bit"
					},
					"AwAAABgMAAAAAAAAGQwAAAAAAAAAAAAAGQwAAAAAAAAaDAAAAAAAAAAAAAAaDAAAAAAAABsMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYDAAAAAAAABgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAABsMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAdDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbDAAAAAAAABsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0MAAAAAAAAHgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdDAAAAAAAAB0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB4MAAAAAAAAIAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeDAAAAAAAAB4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					2,
					"paste",
					null,
					"AgAAAB8MAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAhDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfDAAAAAAAAB8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAACIMAAAAAAAAIwwAAAAAAAAAAAAAIwwAAAAAAAAkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiDAAAAAAAACIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkDAAAAAAAACQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACUMAAAAAAAAJwwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlDAAAAAAAACUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAACYMAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmDAAAAAAAACYMAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 26752,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/events.js",
			"settings":
			{
				"buffer_size": 5255,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"Formatter: Beautify With Prettier"
			],
			[
				"json",
				"Pretty JSON: Format JSON"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/cmake",
		"/home/roman/Projects/plot-cv/lib"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/lib/deep.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/xml/util.js",
		"/home/roman/Projects/plot-cv/lib/tXml.js",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/test-bitset.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/127.0.0.1.har",
		"/home/roman/Projects/plot-cv/libs.js",
		"/home/roman/Projects/plot-cv/lib/color/rgba.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/lib/devtools.js",
		"/home/roman/Projects/plot-cv/check-discogs.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/test-glfw.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/tty.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/README.md",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/src/tutf8e.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e/iso_8859_15.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tutf8e/include/tutf8e.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_textcode.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/ecmascript.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/lexer/csv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/include/libutf.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/char-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/libutf/src/libutf.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/extract-structs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/token.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/err",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/doc/latex/unionVector.tex",
		"/home/roman/.config/sublime-text/Packages/User/Themes/[ Argonaut ].tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/usr/include/archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debug.h",
		"/home/roman/Projects/plot-cv/quickjs/cutils.c",
		"/home/roman/Projects/plot-cv/quickjs/cutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c.orig",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,*.js,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/qjs-opencv/opencv*/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/qjs-opencv/opencv*/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*,-*/opencv_contrib/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*,-*/disabled/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*,-*/imgui/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*,-*/glfw/*,-*/nanovg/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/(libwebsockets|glfw|nanovg)/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h,-*/libwebsockets/*",
			"/home/roman/Projects/plot-cv,*.cpp,*.c,*.hpp,*.h",
			"/home/roman/Projects/plot-cv,*.[ch]pp,*.[ch]",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"tls",
			"events",
			"Util.isObject =",
			"symme",
			"elector",
			"compact",
			"misc\\.",
			"Rect",
			"VSPLIT:",
			"hsplit",
			"function ws",
			"dl\\(",
			"rotate =",
			"rotate",
			"begin",
			"context",
			"new GL$",
			"GLFW",
			"context =",
			"interpolate",
			"1\\.0 -",
			"alpha, ",
			"1 -",
			"1\\.0 -",
			"WINDOW_",
			"GLFW",
			"Window"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"util."
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 443,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-server.js",
							"function_name_status_row": 5,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1183,
									1220
								],
								[
									1268,
									1273
								],
								[
									1381,
									1409
								],
								[
									1421,
									1435
								],
								[
									1665,
									1676
								],
								[
									1710,
									1714
								],
								[
									1788,
									1793
								],
								[
									1900,
									1905
								],
								[
									1973,
									1985
								],
								[
									2088,
									2110
								],
								[
									2379,
									2389
								],
								[
									2633,
									2647
								],
								[
									3570,
									3609
								],
								[
									3792,
									3798
								],
								[
									3811,
									3827
								],
								[
									5471,
									5489
								],
								[
									5560,
									5588
								],
								[
									5792,
									5803
								],
								[
									5948,
									5959
								],
								[
									6019,
									6035
								],
								[
									6212,
									6231
								],
								[
									6317,
									6359
								],
								[
									7454,
									7460
								],
								[
									8202,
									8217
								],
								[
									8385,
									8396
								],
								[
									11624,
									11640
								],
								[
									12565,
									12585
								]
							],
							"symlist":
							[
								"  scriptName = (arg = scriptArgs[0]) =>",
								"() =>",
								"StartREPL(prefix = ",
								", suffix = '')",
								"\tname =>",
								"  m =>",
								"() =>",
								"() =>",
								"(...args) =>",
								"  main(...args)",
								"\t(a, v) =>",
								"\t(v, pv, o) =>",
								"  .createWS = (url, callbacks, listen) =>",
								"\t() =>",
								"\t(level, str) =>",
								"  onConnect(ws, req)",
								"  .sendMessage = function(msg)",
								"  onClose(ws)",
								"  onError(ws)",
								"  onHttp(req, rsp)",
								"  onMessage(ws, data)",
								"  handleCommand(ws, data)",
								"\t() =>",
								"\t(dbg, sock) =>",
								"() =>",
								"  onFd(fd, rd, wr)",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648184020.32,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "clang-ast.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74338,
						"regions":
						{
						},
						"selection":
						[
							[
								20754,
								20757
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 697,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648345952.42,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11378.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "clang-list.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9298,
						"regions":
						{
						},
						"selection":
						[
							[
								1875,
								1878
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 24,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648345956.33,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ast-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37376,
						"regions":
						{
						},
						"selection":
						[
							[
								32197,
								32204
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1045,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648368658.26,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17551.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "debugger-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12912,
						"regions":
						{
						},
						"selection":
						[
							[
								12379,
								12379
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 363,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648436310.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5795.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4310,
						"regions":
						{
						},
						"selection":
						[
							[
								1663,
								1663
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 45,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648422479.77,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "make-bitmap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2275,
						"regions":
						{
						},
						"selection":
						[
							[
								896,
								896
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648117921.68,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/eagle/components.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2831,
						"regions":
						{
						},
						"selection":
						[
							[
								888,
								895
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648118818.7,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "test-imread.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4214,
						"regions":
						{
						},
						"selection":
						[
							[
								2384,
								2384
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 89,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648201264.59,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1008.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26752,
						"regions":
						{
						},
						"selection":
						[
							[
								950,
								956
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648201469.04,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/events.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5255,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1648344342.56,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139621681009616)":
	{
		"height": 0.0
	},
	"output.Protocol(139717987054208)":
	{
		"height": 0.0
	},
	"output.Protocol(139737090363696)":
	{
		"height": 0.0
	},
	"output.Protocol(139869175772064)":
	{
		"height": 0.0
	},
	"output.Protocol(140057995355088)":
	{
		"height": 0.0
	},
	"output.Protocol(140172266795888)":
	{
		"height": 0.0
	},
	"output.Protocol(140274144933008)":
	{
		"height": 0.0
	},
	"output.Protocol(140481508860304)":
	{
		"height": 0.0
	},
	"output.Protocol(140517145502288)":
	{
		"height": 0.0
	},
	"output.Protocol(140571426906992)":
	{
		"height": 0.0
	},
	"output.Protocol(140585354219824)":
	{
		"height": 0.0
	},
	"output.Protocol(140603239275824)":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"clang-lis",
				"clang-list.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-im",
				"test-imread.js"
			],
			[
				"compon",
				"lib/eagle/components.js"
			],
			[
				"make-bit",
				"make-bitmap.js"
			],
			[
				"bitmap",
				"make-bitmap.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"txml",
				"lib/tXml.js"
			],
			[
				"css.g4",
				"lib/grammars/css3.g4"
			],
			[
				"test-imread",
				"test-imread.js"
			],
			[
				"test-uma",
				"test-umat.js"
			],
			[
				"test-bitset",
				"test-bitset.js"
			],
			[
				"test_gif",
				"qjs-opencv/tests/test_gif.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"quickjs-libc",
				"quickjs/quickjs-libc.c"
			],
			[
				"devtoo",
				"lib/devtools.js"
			],
			[
				"check-disc",
				"check-discogs.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"draw-utils",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"rgba.js",
				"lib/color/rgba.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-glfw",
				"test-glfw.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"location.h",
				"include/location.h"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"l",
				"quickjs-lexer.c"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"path.c",
				"src/path.c"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"js-u",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"streams.js",
				"tests/test_streams.js"
			],
			[
				"buffer",
				"src/buffer-utils.c"
			],
			[
				"test_te",
				"tests/test_textcode.js"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"extract-str",
				"extract-structs.js"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"token.c",
				"token.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"jsutil",
				"js-utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"quickjs-location",
				"quickjs-location.h"
			],
			[
				"quickjs-loca",
				"quickjs-location.c"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"char-ut",
				"char-utils.h"
			],
			[
				"buff",
				"buffer-utils.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"location",
				"location.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"CMakeLi",
				"CMakeLists.txt"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"defines.h",
				"defines.h"
			],
			[
				"queue.c",
				"queue.c"
			],
			[
				"extend",
				"lib/extendArray.js"
			],
			[
				"quickjs-sockets",
				"quickjs-sockets.c"
			],
			[
				"lexer",
				"quickjs-lexer.c"
			],
			[
				"buffer-ut",
				"buffer-utils.h"
			],
			[
				"ringbuf",
				"ringbuffer.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"debug.c",
				"debug.c"
			],
			[
				"quickjs-lexer.c",
				"quickjs-lexer.c"
			],
			[
				"quickjs-loc",
				"quickjs-location.c"
			],
			[
				"xml.c",
				"quickjs-xml.c"
			],
			[
				"test-dia",
				"build/android64/CMakeFiles/qjs-predicate-static.dir/quickjs-predicate.c.o.d"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"resol",
				"resolve-imports.js"
			],
			[
				"quickjs-pa",
				"quickjs-path.c"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"location.c",
				"quickjs-location.c"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"extra",
				"extract-structs.js"
			],
			[
				"-inspe",
				"quickjs-inspect.c"
			],
			[
				"proper",
				"property-enumeration.h"
			],
			[
				"vector",
				"vector.h"
			],
			[
				"dom.j",
				"lib/dom.js"
			],
			[
				"res",
				"resolve-imports.js"
			],
			[
				"lexre",
				"lexer.c"
			],
			[
				"lexer.c",
				"quickjs-lexer.c"
			],
			[
				"pointer",
				"pointer.c"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"archive",
				"quickjs-archive.c"
			],
			[
				"pointer.c",
				"quickjs-pointer.c"
			],
			[
				"spect.c",
				"quickjs-inspect.c"
			],
			[
				"blob.c",
				"quickjs-blob.c"
			],
			[
				"repea",
				"quickjs-repeater.c"
			],
			[
				"loca",
				"quickjs-location.c"
			],
			[
				"bjson.c",
				"quickjs-bjson.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"predi",
				"predicate.h"
			],
			[
				"virtua",
				"virtual-properties.c"
			],
			[
				"pointre",
				"pointer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"child-",
				"child-process.c"
			],
			[
				"child-pro",
				"quickjs-child-process.c"
			],
			[
				"gpio.c",
				"quickjs-gpio.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"ointer.h",
				"pointer.h"
			],
			[
				"defin",
				"defines.h"
			],
			[
				"defines",
				"defines.h"
			],
			[
				"cutils.h",
				"char-utils.h"
			],
			[
				"debu",
				"debug.h"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"test_le",
				"tests/test_lexer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
