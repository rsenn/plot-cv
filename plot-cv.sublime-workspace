{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"MIDI",
				"MIDIMessageRead"
			],
			[
				"i",
				"is_dir"
			],
			[
				"getText",
				"getTextArray"
			],
			[
				"Lin",
				"LinearTransform"
			],
			[
				"CURL_LIB",
				"CURL_LIBRARY_DEBUG"
			],
			[
				"Circ",
				"CircuitJS"
			],
			[
				"dep",
				"dependency"
			],
			[
				"opt",
				"optimization"
			],
			[
				"OPENCV_LIB",
				"OPENCV_LIBRARIES"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"relat",
				"relativeTo"
			],
			[
				"max",
				"maxLineGap"
			],
			[
				"Pm_Op",
				"Pm_OpenInput"
			],
			[
				"Pm_Get",
				"Pm_GetDeviceInfo"
			],
			[
				"getOwnProp",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"getMem",
				"getMemberEntries"
			],
			[
				"break",
				"breakLength"
			],
			[
				"from",
				"fromCodePoint(...)"
			],
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0)\n  hue2rgb(t1, t2, hue)\n  luminance2contrast(relativeLuminance1, relativeLuminance2)\n  rgb2value(rgbR, rgbG, rgbB)\n  rgb2whiteness(rgbR, rgbG, rgbB)\n  matrix(params, mats)\n  mat =>\n  (acc, value, index) =>\n  atan2d = (y, x) =>\n  cosd = x =>\n  deg2rad = x =>\n  rad2deg = x =>\n  sind = x =>\n  rgb2hsl(rgbR, rgbG, rgbB, fallbackhue)\n  hsl2rgb(hslH, hslS, hslL)\n  rgb2hwb(rgbR, rgbG, rgbB, fallbackhue)\n  hwb2rgb(hwbH, hwbW, hwbB, fallbackhue)\n  v =>\n  rgb2hsv(rgbR, rgbG, rgbB, fallbackhue)\n  hsv2rgb(hsvH, hsvS, hsvV)\n  rgb2xyz(rgbR, rgbG, rgbB)\n  v =>\n  xyz2rgb(xyzX, xyzY, xyzZ)\n  v =>\n  hsl2hsv(hslH, hslS, hslL)\n  hsv2hsl(hsvH, hsvS, hsvV)\n  hwb2hsv(hwbH, hwbW, hwbB)\n  hsv2hwb(hsvH, hsvS, hsvV)\n  lab2xyz(labL, labA, labB)\n  xyz2lab(xyzX, xyzY, xyzZ)\n  value =>\n  lab2lch(labL, labA, labB)\n  lch2lab(lchL, lchC, lchH)\n  rgb2contrast(rgb1, rgb2)\n  rgb2luminance(rgbR, rgbG, rgbB)\n  adjustChannel = x =>\n  adjustGamma = x =>\n  hex2rgb(hex)\n  c =>\n  rgb2hex(rgbR, rgbG, rgbB)\n  keyword2rgb(keyword)\n  x =>\n  lab2ciede([L1, a1, b1], [L2, a2, b2])\n  rgb2lab(rgbR, rgbG, rgbB)\n  lab2rgb(labL, labA, labB)\n  rgb2lch(rgbR, rgbG, rgbB)\n  lch2rgb(lchL, lchC, lchH)\n  hwb2hsl(hwbH, hwbW, hwbB)\n  hsl2hwb(hslH, hslS, hslL)\n  hsl2lab(hslH, hslS, hslL)\n  lab2hsl(labL, labA, labB, fallbackhue)\n  hsl2lch(hslH, hslS, hslL)\n  lch2hsl(lchL, lchC, lchH, fallbackhue)\n  hsl2xyz(hslH, hslS, hslL)\n  xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue)\n  hwb2lab(hwbH, hwbW, hwbB)\n  lab2hwb(labL, labA, labB, fallbackhue)\n  hwb2lch(hwbH, hwbW, hwbB)\n  lch2hwb(lchL, lchC, lchH, fallbackhue)\n  hwb2xyz(hwbH, hwbW, hwbB)\n  xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue)\n  hsv2lab(hsvH, hsvS, hsvV)\n  lab2hsv(labL, labA, labB, fallbackhue)\n  hsv2lch(hsvH, hsvS, hsvV)\n  lch2hsv(lchL, lchC, lchH, fallbackhue)\n  hsv2xyz(hsvH, hsvS, hsvV)\n  xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue)\n  xyz2lch(xyzX, xyzY, xyzZ)\n  lch2xyz(lchL, lchC, lchH)\n  hex2hsl(hex)\n  hex2hsv(hex)\n  hex2hwb(hex)\n  hex2lab(hex)\n  hex2lch(hex)\n  hex2xyz(hex)\n  hsl2hex(hslH, hslS, hslL)\n  hsv2hex(hsvH, hsvS, hsvV)\n  hwb2hex(hwbH, hwbW, hwbB)\n  lab2hex(labL, labA, labB)\n  lch2hex(lchL, lchC, lchH)\n  xyz2hex(xyzX, xyzY, xyzZ)\n  hex2ciede(hex1, hex2)\n  hsl2ciede(hsl1, hsl2)\n  hsv2ciede(hsv1, hsv2)\n  hwb2ciede(hwb1, hwb2)\n  keyword2ciede(keyword1, keyword2)\n  lch2ciede(lch1, lch2)\n  rgb2ciede(rgb1, rgb2)\n  xyz2ciede(xyz1, xyz2)\n  hex2contrast(hex1, hex2)\n  hsl2contrast(hsl1, hsl2)\n  hsv2contrast(hsv1, hsv2)\n  hwb2contrast(hwb1, hwb2)\n  keyword2contrast(keyword1, keyword2)\n  lab2contrast(lab1, lab2)\n  lch2contrast(lch1, lch2)\n  xyz2contrast(xyz1, xyz2)\n  keyword2hex(keyword)\n  keyword2hsl(keyword)\n  keyword2hsv(keyword)\n  keyword2hwb(keyword)\n  keyword2lab(keyword)\n  keyword2lch(keyword)\n  keyword2xyz(keyword)",
			"settings":
			{
				"buffer_size": 2785,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					91,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAD0CwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					92,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/clang-ast.js",
						"symkeys":
						[
							[
								390,
								417
							],
							[
								497,
								527
							],
							[
								594,
								602
							],
							[
								640,
								667
							],
							[
								716,
								743
							],
							[
								825,
								829
							],
							[
								852,
								885
							],
							[
								1072,
								1076
							],
							[
								1095,
								1115
							],
							[
								1271,
								1303
							],
							[
								1467,
								1485
							],
							[
								1745,
								1762
							],
							[
								2070,
								2081
							],
							[
								2105,
								2112
							],
							[
								2141,
								2150
							],
							[
								2280,
								2286
							],
							[
								2408,
								2416
							],
							[
								2541,
								2550
							],
							[
								2576,
								2585
							],
							[
								2616,
								2620
							],
							[
								2681,
								2685
							],
							[
								2761,
								2777
							],
							[
								3037,
								3052
							],
							[
								3119,
								3128
							],
							[
								3196,
								3204
							],
							[
								3259,
								3268
							],
							[
								3342,
								3352
							],
							[
								3406,
								3415
							],
							[
								3445,
								3454
							],
							[
								3564,
								3575
							],
							[
								3777,
								3781
							],
							[
								4436,
								4447
							],
							[
								4697,
								4711
							],
							[
								4761,
								4797
							],
							[
								4835,
								4840
							],
							[
								4881,
								4923
							],
							[
								5116,
								5120
							],
							[
								5154,
								5165
							],
							[
								5197,
								5216
							],
							[
								5535,
								5577
							],
							[
								5649,
								5659
							],
							[
								5880,
								5885
							],
							[
								5951,
								5958
							],
							[
								6075,
								6079
							],
							[
								6177,
								6199
							],
							[
								6707,
								6712
							],
							[
								8549,
								8553
							],
							[
								9334,
								9344
							],
							[
								9562,
								9574
							],
							[
								9715,
								9723
							],
							[
								9806,
								9817
							],
							[
								9904,
								9916
							],
							[
								10008,
								10017
							],
							[
								10088,
								10097
							],
							[
								10215,
								10231
							],
							[
								10301,
								10317
							],
							[
								10406,
								10419
							],
							[
								10952,
								10967
							],
							[
								11052,
								11057
							],
							[
								11309,
								11323
							],
							[
								11429,
								11441
							],
							[
								11510,
								11522
							],
							[
								11581,
								11598
							],
							[
								11684,
								11695
							],
							[
								11789,
								11802
							],
							[
								11942,
								11950
							],
							[
								12057,
								12067
							],
							[
								12295,
								12304
							],
							[
								13794,
								13804
							],
							[
								16687,
								16693
							],
							[
								16983,
								16994
							],
							[
								17094,
								17130
							],
							[
								17333,
								17341
							],
							[
								17411,
								17419
							],
							[
								19224,
								19254
							],
							[
								19333,
								19343
							],
							[
								19361,
								19383
							],
							[
								19563,
								19571
							],
							[
								19652,
								19660
							],
							[
								19839,
								19846
							],
							[
								19897,
								19911
							],
							[
								20320,
								20324
							],
							[
								20508,
								20513
							],
							[
								21143,
								21147
							],
							[
								21890,
								21900
							],
							[
								21975,
								21995
							],
							[
								22198,
								22206
							],
							[
								22328,
								22347
							],
							[
								22444,
								22452
							],
							[
								22470,
								22492
							],
							[
								22608,
								22616
							],
							[
								22721,
								22747
							],
							[
								22998,
								23006
							],
							[
								23121,
								23132
							],
							[
								23150,
								23172
							],
							[
								23240,
								23244
							],
							[
								23350,
								23360
							],
							[
								23420,
								23424
							],
							[
								23487,
								23491
							],
							[
								23541,
								23545
							],
							[
								24018,
								24028
							],
							[
								24066,
								24074
							],
							[
								24171,
								24180
							],
							[
								24198,
								24220
							],
							[
								24326,
								24330
							],
							[
								24740,
								24752
							],
							[
								24770,
								24792
							],
							[
								24982,
								24990
							],
							[
								25053,
								25061
							],
							[
								25251,
								25256
							],
							[
								25565,
								25584
							],
							[
								25645,
								25653
							],
							[
								25762,
								25769
							],
							[
								25787,
								25809
							],
							[
								26154,
								26162
							],
							[
								26259,
								26268
							],
							[
								26305,
								26316
							],
							[
								26334,
								26356
							],
							[
								26406,
								26417
							],
							[
								26435,
								26457
							],
							[
								26628,
								26636
							],
							[
								26739,
								26756
							],
							[
								26774,
								26796
							],
							[
								27062,
								27070
							],
							[
								27181,
								27189
							],
							[
								27194,
								27210
							],
							[
								27412,
								27425
							],
							[
								27460,
								27475
							],
							[
								27560,
								27570
							],
							[
								27883,
								27903
							],
							[
								27986,
								28032
							],
							[
								29485,
								29549
							],
							[
								29846,
								29850
							],
							[
								30609,
								30617
							],
							[
								30725,
								30733
							],
							[
								30808,
								30823
							],
							[
								31103,
								31110
							],
							[
								31164,
								31171
							],
							[
								31259,
								31266
							],
							[
								31447,
								31482
							],
							[
								31521,
								31541
							],
							[
								31571,
								31577
							],
							[
								31598,
								31606
							],
							[
								31712,
								31745
							],
							[
								32058,
								32083
							],
							[
								32478,
								32520
							],
							[
								33173,
								33226
							],
							[
								34153,
								34159
							],
							[
								34209,
								34215
							],
							[
								34299,
								34305
							],
							[
								34503,
								34519
							],
							[
								34824,
								34831
							],
							[
								34874,
								34878
							],
							[
								34898,
								34905
							],
							[
								35025,
								35052
							],
							[
								35111,
								35126
							],
							[
								35460,
								35467
							],
							[
								35527,
								35541
							],
							[
								35586,
								35601
							],
							[
								35626,
								35630
							],
							[
								35661,
								35672
							],
							[
								35705,
								35717
							],
							[
								35751,
								35764
							],
							[
								35836,
								35841
							],
							[
								35939,
								35943
							],
							[
								35967,
								35979
							],
							[
								36048,
								36053
							],
							[
								36113,
								36117
							],
							[
								36148,
								36157
							],
							[
								36170,
								36186
							],
							[
								36547,
								36551
							],
							[
								36575,
								36586
							],
							[
								36645,
								36649
							],
							[
								36687,
								36691
							],
							[
								36744,
								36784
							],
							[
								36843,
								36859
							],
							[
								37221,
								37242
							],
							[
								37268,
								37272
							],
							[
								37715,
								37720
							],
							[
								37761,
								37788
							],
							[
								37982,
								38004
							],
							[
								39039,
								39080
							],
							[
								39160,
								39167
							],
							[
								39238,
								39245
							],
							[
								39282,
								39308
							],
							[
								39402,
								39410
							],
							[
								39476,
								39484
							],
							[
								39546,
								39557
							],
							[
								39704,
								39730
							],
							[
								39782,
								39801
							],
							[
								39877,
								39894
							],
							[
								39929,
								39953
							],
							[
								40199,
								40204
							],
							[
								40261,
								40268
							],
							[
								40349,
								40360
							],
							[
								40850,
								40860
							],
							[
								40906,
								40910
							],
							[
								41568,
								41579
							],
							[
								41590,
								41614
							],
							[
								41682,
								41714
							],
							[
								41870,
								41895
							],
							[
								41959,
								41995
							],
							[
								42065,
								42105
							],
							[
								42357,
								42385
							],
							[
								42432,
								42463
							],
							[
								42692,
								42734
							],
							[
								42937,
								42958
							],
							[
								43003,
								43022
							],
							[
								43356,
								43375
							],
							[
								43579,
								43614
							],
							[
								43732,
								43780
							],
							[
								44026,
								44053
							],
							[
								44671,
								44712
							],
							[
								44950,
								44977
							],
							[
								45120,
								45141
							],
							[
								45202,
								45229
							],
							[
								45274,
								45306
							],
							[
								45556,
								45582
							],
							[
								45776,
								45795
							],
							[
								46457,
								46482
							],
							[
								46530,
								46561
							],
							[
								46628,
								46643
							],
							[
								46838,
								46859
							],
							[
								46976,
								47012
							],
							[
								47232,
								47251
							],
							[
								47655,
								47676
							],
							[
								47893,
								47926
							],
							[
								47986,
								48009
							],
							[
								48072,
								48089
							],
							[
								48209,
								48213
							],
							[
								49040,
								49065
							],
							[
								49272,
								49299
							],
							[
								49764,
								49768
							],
							[
								49979,
								49995
							],
							[
								50205,
								50224
							],
							[
								50321,
								50326
							],
							[
								50480,
								50519
							],
							[
								50618,
								50661
							],
							[
								50871,
								50886
							],
							[
								51056,
								51092
							],
							[
								51188,
								51216
							],
							[
								51486,
								51530
							],
							[
								51592,
								51623
							],
							[
								51682,
								51703
							],
							[
								51762,
								51785
							],
							[
								52208,
								52234
							],
							[
								52302,
								52328
							],
							[
								52392,
								52411
							],
							[
								52452,
								52487
							],
							[
								52661,
								52703
							],
							[
								52888,
								52909
							],
							[
								53085,
								53115
							],
							[
								53335,
								53361
							],
							[
								53789,
								53808
							],
							[
								53869,
								53892
							],
							[
								54427,
								54454
							],
							[
								54504,
								54527
							],
							[
								54684,
								54720
							],
							[
								54790,
								54819
							],
							[
								54877,
								54900
							],
							[
								55078,
								55103
							],
							[
								55187,
								55229
							],
							[
								55328,
								55353
							],
							[
								55657,
								55712
							],
							[
								55966,
								55995
							],
							[
								56246,
								56290
							],
							[
								56422,
								56466
							],
							[
								56553,
								56581
							],
							[
								56725,
								56749
							],
							[
								56997,
								57041
							],
							[
								57363,
								57416
							],
							[
								57515,
								57560
							],
							[
								57635,
								57654
							],
							[
								57715,
								57736
							],
							[
								57913,
								57940
							],
							[
								57989,
								58019
							],
							[
								58031,
								58052
							],
							[
								58064,
								58096
							],
							[
								58238,
								58268
							],
							[
								58280,
								58321
							],
							[
								58333,
								58372
							],
							[
								58384,
								58407
							],
							[
								58419,
								58442
							],
							[
								58454,
								58473
							],
							[
								58485,
								58527
							],
							[
								58539,
								58564
							],
							[
								58576,
								58603
							],
							[
								58615,
								58653
							],
							[
								58665,
								58747
							],
							[
								58759,
								58826
							],
							[
								58838,
								58863
							],
							[
								58875,
								58917
							],
							[
								58929,
								58967
							],
							[
								58979,
								59036
							],
							[
								59048,
								59086
							],
							[
								59098,
								59123
							],
							[
								59135,
								59162
							],
							[
								59174,
								59212
							],
							[
								59224,
								59280
							],
							[
								59374,
								59425
							],
							[
								59437,
								59512
							],
							[
								59524,
								59555
							],
							[
								59567,
								59586
							],
							[
								59598,
								59634
							],
							[
								59730,
								59751
							],
							[
								59763,
								59793
							],
							[
								59805,
								59828
							],
							[
								59840,
								59883
							],
							[
								59895,
								59933
							],
							[
								59945,
								59989
							],
							[
								60001,
								60025
							],
							[
								60037,
								60067
							],
							[
								60079,
								60105
							],
							[
								60149,
								60196
							],
							[
								60208,
								60250
							],
							[
								60262,
								60300
							],
							[
								60312,
								60348
							],
							[
								60360,
								60407
							],
							[
								60419,
								60442
							],
							[
								60454,
								60488
							],
							[
								60500,
								60543
							],
							[
								60555,
								60607
							],
							[
								60711,
								60758
							],
							[
								60770,
								60798
							],
							[
								60810,
								60848
							],
							[
								60860,
								60901
							],
							[
								60913,
								60932
							],
							[
								60944,
								60973
							],
							[
								60985,
								61011
							],
							[
								61023,
								61051
							],
							[
								61063,
								61115
							],
							[
								61127,
								61155
							],
							[
								61167,
								61201
							],
							[
								61213,
								61234
							],
							[
								61246,
								61269
							],
							[
								61281,
								61319
							],
							[
								61331,
								61369
							],
							[
								61381,
								61402
							],
							[
								61414,
								61439
							],
							[
								61451,
								61476
							],
							[
								61488,
								61519
							],
							[
								61531,
								61550
							],
							[
								61562,
								61585
							],
							[
								61597,
								61638
							],
							[
								61650,
								61693
							],
							[
								61705,
								61732
							],
							[
								61744,
								61782
							],
							[
								61794,
								61827
							],
							[
								61839,
								61875
							],
							[
								61887,
								61906
							],
							[
								61918,
								61981
							],
							[
								61993,
								62049
							],
							[
								62061,
								62084
							],
							[
								62096,
								62131
							],
							[
								62143,
								62199
							],
							[
								62211,
								62264
							],
							[
								62276,
								62321
							],
							[
								62333,
								62378
							],
							[
								62390,
								62435
							],
							[
								62447,
								62477
							],
							[
								62489,
								62536
							],
							[
								62548,
								62573
							],
							[
								62585,
								62618
							],
							[
								62630,
								62660
							],
							[
								62672,
								62712
							],
							[
								62724,
								62777
							],
							[
								62789,
								62812
							],
							[
								62824,
								62845
							],
							[
								62857,
								62897
							],
							[
								62909,
								62943
							],
							[
								62955,
								62977
							],
							[
								62989,
								63023
							],
							[
								63035,
								63058
							],
							[
								63070,
								63112
							],
							[
								63124,
								63155
							],
							[
								63167,
								63193
							],
							[
								63206,
								63236
							],
							[
								63810,
								63850
							],
							[
								64072,
								64076
							],
							[
								65229,
								65269
							],
							[
								65651,
								65711
							],
							[
								66147,
								66173
							],
							[
								66281,
								66319
							],
							[
								66527,
								66531
							],
							[
								66830,
								66860
							],
							[
								67330,
								67334
							],
							[
								67998,
								68037
							],
							[
								68700,
								68757
							],
							[
								69078,
								69102
							],
							[
								69574,
								69604
							],
							[
								69867,
								69908
							],
							[
								70043,
								70082
							],
							[
								70094,
								70139
							],
							[
								70151,
								70179
							],
							[
								70191,
								70227
							],
							[
								70371,
								70409
							],
							[
								70421,
								70460
							],
							[
								70472,
								70513
							],
							[
								70525,
								70560
							],
							[
								70572,
								70619
							],
							[
								70631,
								70670
							],
							[
								70683,
								70717
							],
							[
								70729,
								70777
							],
							[
								70789,
								70832
							],
							[
								70844,
								70893
							],
							[
								70905,
								70955
							],
							[
								70967,
								71016
							],
							[
								71270,
								71294
							],
							[
								71349,
								71374
							],
							[
								71753,
								71782
							],
							[
								71961,
								71966
							],
							[
								72238,
								72259
							],
							[
								72326,
								72369
							],
							[
								72556,
								72560
							],
							[
								73161,
								73169
							],
							[
								73231,
								73239
							],
							[
								73358,
								73362
							],
							[
								73614,
								73639
							],
							[
								73679,
								73689
							],
							[
								73758,
								73769
							],
							[
								73843,
								73858
							],
							[
								73897,
								73901
							],
							[
								73980,
								74005
							],
							[
								74044,
								74052
							],
							[
								74093,
								74122
							],
							[
								74152,
								74156
							]
						],
						"symlist":
						[
							"function FileTime(filename)",
							"function Newer(file, ...other)",
							"other =>",
							"function Older(file, other)",
							"function GetSubscripts(str)",
							"m =>",
							"function TrimSubscripts(str, sub)",
							"List",
							"constructor(...args)",
							"filter(callback, thisArg = null)",
							"callback = elem =>",
							"slice(start, end)",
							"get first()",
							"elem =>",
							"entries()",
							"keys()",
							"values()",
							"toArray()",
							"(a, n) =>",
							"List",
							"Node",
							"constructor(ast)",
							"static get(ast)",
							"get ast()",
							"get id()",
							"get loc()",
							"get file()",
							" (v,k) =>",
							" (v,k) =>",
							"get range()",
							"r =>",
							"toJSON(obj)",
							"(node, ast) =>",
							" function PathOf(node, ast = $.data)",
							" n =>",
							" function Hier(node_or_path, ast = $.data)",
							"p =>",
							"([p, n]) =>",
							" ([p, n]) =>",
							" function FindType(typeName, ast = $.data)",
							"([tok]) =>",
							" n =>",
							"node =>",
							"Type",
							"constructor(node, ast)",
							" n =>",
							"n =>",
							" (n, p) =>",
							"get regExp()",
							"isEnum()",
							"isPointer()",
							"isFunction()",
							"isArray()",
							"arrayOf()",
							"get subscripts()",
							"trimSubscripts()",
							"get pointer()",
							"getPointer(ast)",
							" n =>",
							"get unsigned()",
							"get signed()",
							"isCompound()",
							"isFloatingPoint()",
							"get alias()",
							"get aliases()",
							"isEnum()",
							"isString()",
							"get ffi()",
							"get size()",
							"toJS()",
							"toJSON(obj)",
							"static get(name_or_id, ast = $.data)",
							" node =>",
							" node =>",
							"function RoundTo(value, align)",
							"RecordDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							"node =>",
							"(acc, node) =>",
							"i =>",
							" n =>",
							"n =>",
							"get size()",
							"(acc,[name,type]) =>",
							"toJSON()",
							"([name, member]) =>",
							"EnumDecl",
							"constructor(node, ast)",
							"child =>",
							"({ name, type, inner }) =>",
							"toJSON()",
							"TypedefDecl",
							"constructor(node, ast)",
							"n =>",
							" (v, k) =>",
							"n =>",
							"n =>",
							"n =>",
							"get size()",
							"toJSON()",
							"FieldDecl",
							"constructor(node, ast)",
							"n =>",
							"FunctionDecl",
							"constructor(node, ast)",
							"child =>",
							"child =>",
							" n =>",
							"({ name, type }) =>",
							"toJSON()",
							"VarDecl",
							"constructor(node, ast)",
							"toJSON()",
							"ClassDecl",
							"BuiltinType",
							"constructor(node, ast)",
							"PointerType",
							"constructor(node, ast)",
							"toJSON()",
							"ConstantArrayType",
							"constructor(node, ast)",
							"toJSON()",
							"Location",
							"constructor(loc)",
							" (t, ...c) =>",
							"'\\x1b[m' : t =>",
							"toString()",
							"localeCompare(other)",
							" function TypeFactory(node, ast, cache = true)",
							"async function SpawnCompiler(compiler, input, output, args = [])",
							"p =>",
							" data =>",
							" data =>",
							"async reader =>",
							"line =>",
							"line =>",
							"line =>",
							" function PipeReader(fd, callback)",
							"(resolve, reject) =>",
							" () =>",
							" data =>",
							" function ReadPipe(fd, callback)",
							" function ReadOutput(fd)",
							"async function SourceDependencies(...args)",
							"async function AstDump(compiler, source, args, force)",
							"size()",
							"json()",
							"data()",
							"SetFile = loc =>",
							"files()",
							"n =>",
							"file =>",
							"pred2 = (used, implicit) =>",
							" node =>",
							"types()",
							" n =>",
							" () =>",
							"List",
							"functions()",
							" n =>",
							" () =>",
							" n =>",
							"List",
							"namespaces()",
							" n =>",
							"List",
							"classes()",
							"predicate = n =>",
							"List",
							"variables()",
							"n =>",
							"List",
							" function NameFor(decl, ast = this.data)",
							" (value, key) =>",
							" function NodeType(n)",
							"t =>",
							" n =>",
							" function NodeName(n, name)",
							" function GetLoc(node)",
							" function GetTypeNode(node, ast = $.data)",
							"node =>",
							"node =>",
							" function GetTypeStr(node)",
							"inner =>",
							"inner =>",
							"([n, t]) =>",
							" function NodePrinter(ast)",
							" function put(str)",
							" function trim()",
							"printer = function(node)",
							"get()",
							"value()",
							"value(node)",
							"toString()",
							"i =>",
							"NodePrinter",
							"AbiTagAttr(abi_tag_attr)",
							"AccessSpecDecl(access_spec_decl)",
							"AlignedAttr(aligned_attr)",
							"AlwaysInlineAttr(always_inline_attr)",
							"ArraySubscriptExpr(array_subscript_expr)",
							"AsmLabelAttr(asm_label_attr)",
							"BinaryOperator(binary_operator)",
							"BlockCommandComment(block_command_comment)",
							"BreakStmt(break_stmt)",
							"CallExpr(call_expr)",
							"CaseStmt(case_stmt)",
							"CharacterLiteral(character_literal)",
							"CompoundAssignOperator(compound_assign_operator)",
							"CompoundStmt(compound_stmt)",
							"ConditionalOperator(conditional_operator)",
							"ConstantExpr(constant_expr)",
							"ConstAttr(const_attr)",
							"ContinueStmt(continue_stmt)",
							"CStyleCastExpr(cstyle_cast_expr)",
							"DeclRefExpr(decl_ref_expr)",
							"DeclStmt(decl_stmt)",
							"DefaultStmt(default_stmt)",
							"DeprecatedAttr(deprecated_attr)",
							"DoStmt(do_stmt)",
							"EmptyDecl(empty_decl)",
							"EnumConstantDecl(enum_constant_decl)",
							"EnumDecl(enum_decl)",
							"FieldDecl(field_decl)",
							"FloatingLiteral(floating_literal)",
							"FormatAttr(format_attr)",
							"ForStmt(for_stmt)",
							"n =>",
							"FullComment(full_comment)",
							"FunctionDecl(function_decl)",
							"n =>",
							" n =>",
							"GotoStmt(goto_stmt)",
							" n =>",
							"HTMLEndTagComment(html_end_tag_comment)",
							"HTMLStartTagComment(html_start_tag_comment)",
							"IfStmt(if_stmt)",
							"ImplicitCastExpr(implicit_cast_expr)",
							"InitListExpr(init_list_expr)",
							"InlineCommandComment(inline_command_comment)",
							"IntegerLiteral(integer_literal)",
							"LabelStmt(label_stmt)",
							"MemberExpr(member_expr)",
							"NonNullAttr(non_null_attr)",
							"NoThrowAttr(no_throw_attr)",
							"NullStmt(null_stmt)",
							"ParagraphComment(paragraph_comment)",
							"ParamCommandComment(param_command_comment)",
							"ParenExpr(paren_expr)",
							"ParenListExpr(paren_list_expr)",
							"ParmVarDecl(parm_var_decl)",
							"PureAttr(pure_attr)",
							"RecordDecl(record_decl)",
							"RestrictAttr(restrict_attr)",
							"ReturnStmt(return_stmt)",
							"ReturnsTwiceAttr(returns_twice_attr)",
							"StringLiteral(string_literal)",
							"SwitchStmt(switch_stmt)",
							"TextComment(text_comment)",
							"TranslationUnitDecl(translation_unit_decl)",
							"TypedefDecl(typedef_decl)",
							"UnaryExprOrTypeTraitExpr(unary_expr_or_type_trait_expr)",
							"UnaryOperator(unary_operator)",
							"UnresolvedLookupExpr(unresolved_lookup_expr)",
							"UnresolvedMemberExpr(unresolved_member_expr)",
							"VarDecl(var_decl, base_type)",
							"([offset, subscript]) =>",
							"VerbatimBlockComment(verbatim_block_comment)",
							"VerbatimBlockLineComment(verbatim_block_line_comment)",
							"WarnUnusedResultAttr(warn_unused_result_attr)",
							"WeakAttr(weak_attr)",
							"WhileStmt(while_stmt)",
							"OverrideAttr(override_attr)",
							"AddrLabelExpr(addr_label_expr)",
							"AliasAttr(alias_attr)",
							"AlignValueAttr(align_value_attr)",
							"AllocSizeAttr(alloc_size_attr)",
							"ArrayInitIndexExpr(array_init_index_expr)",
							"ArrayInitLoopExpr(array_init_loop_expr)",
							"AtomicExpr(atomic_expr)",
							"AtomicType(atomic_type)",
							"AutoType(auto_type)",
							"BuiltinTemplateDecl(builtin_template_decl)",
							"BuiltinType(builtin_type)",
							"CallbackAttr(callback_attr)",
							"ClassTemplateDecl(class_template_decl)",
							"ClassTemplatePartialSpecializationDecl(class_template_partial_specialization_decl)",
							"ClassTemplateSpecializationDecl(class_template_specialization_decl)",
							"ComplexType(complex_type)",
							"CompoundLiteralExpr(compound_literal_expr)",
							"ConstantArrayType(constant_array_type)",
							"ConstructorUsingShadowDecl(constructor_using_shadow_decl)",
							"ConvertVectorExpr(convert_vector_expr)",
							"DecayedType(decayed_type)",
							"DecltypeType(decltype_type)",
							"DependentNameType(dependent_name_type)",
							"DependentScopeDeclRefExpr(dependent_scope_decl_ref_expr)",
							"DependentSizedArrayType(dependent_sized_array_type)",
							"DependentTemplateSpecializationType(dependent_template_specialization_type)",
							"ElaboratedType(elaborated_type)",
							"EnumType(enum_type)",
							"ExprWithCleanups(expr_with_cleanups)",
							"FinalAttr(final_attr)",
							"FormatArgAttr(format_arg_attr)",
							"FriendDecl(friend_decl)",
							"FunctionNoProtoType(function_no_proto_type)",
							"FunctionProtoType(function_proto_type)",
							"FunctionTemplateDecl(function_template_decl)",
							"GCCAsmStmt(gcc_asm_stmt)",
							"GNUInlineAttr(gnu_inline_attr)",
							"GNUNullExpr(gnu_null_expr)",
							"ImplicitValueInitExpr(implicit_value_init_expr)",
							"IncompleteArrayType(incomplete_array_type)",
							"IndirectFieldDecl(indirect_field_decl)",
							"IndirectGotoStmt(indirect_goto_stmt)",
							"InjectedClassNameType(injected_class_name_type)",
							"LambdaExpr(lambda_expr)",
							"LinkageSpecDecl(linkage_spec_decl)",
							"LValueReferenceType(l_value_reference_type)",
							"MaterializeTemporaryExpr(materialize_temporary_expr)",
							"MaxFieldAlignmentAttr(max_field_alignment_attr)",
							"MayAliasAttr(may_alias_attr)",
							"MemberPointerType(member_pointer_type)",
							"MinVectorWidthAttr(min_vector_width_attr)",
							"ModeAttr(mode_attr)",
							"NamespaceDecl(namespace_decl)",
							"NoDebugAttr(no_debug_attr)",
							"NoInlineAttr(no_inline_attr)",
							"NonTypeTemplateParmDecl(non_type_template_parm_decl)",
							"OffsetOfExpr(offset_of_expr)",
							"OpaqueValueExpr(opaque_value_expr)",
							"OwnerAttr(owner_attr)",
							"PackedAttr(packed_attr)",
							"PackExpansionExpr(pack_expansion_expr)",
							"PackExpansionType(pack_expansion_type)",
							"ParenType(paren_type)",
							"PointerAttr(pointer_attr)",
							"PointerType(pointer_type)",
							"PredefinedExpr(predefined_expr)",
							"QualType(qual_type)",
							"RecordType(record_type)",
							"ReturnsNonNullAttr(returns_non_null_attr)",
							"RValueReferenceType(r_value_reference_type)",
							"SentinelAttr(sentinel_attr)",
							"ShuffleVectorExpr(shuffle_vector_expr)",
							"SizeOfPackExpr(size_of_pack_expr)",
							"StaticAssertDecl(static_assert_decl)",
							"StmtExpr(stmt_expr)",
							"SubstNonTypeTemplateParmExpr(subst_non_type_template_parm_expr)",
							"SubstTemplateTypeParmType(subst_template_type_parm_type)",
							"TargetAttr(target_attr)",
							"TemplateArgument(template_argument)",
							"TemplateSpecializationType(template_specialization_type)",
							"TemplateTemplateParmDecl(template_template_parm_decl)",
							"TemplateTypeParmDecl(template_type_parm_decl)",
							"TemplateTypeParmType(template_type_parm_type)",
							"TParamCommandComment(t_param_command_comment)",
							"TypeAliasDecl(type_alias_decl)",
							"TypeAliasTemplateDecl(type_alias_template_decl)",
							"TypedefType(typedef_type)",
							"TypeOfExprType(type_of_expr_type)",
							"TypeTraitExpr(type_trait_expr)",
							"UnaryTransformType(unary_transform_type)",
							"UnresolvedUsingValueDecl(unresolved_using_value_decl)",
							"UnusedAttr(unused_attr)",
							"UsingDecl(using_decl)",
							"UsingDirectiveDecl(using_directive_decl)",
							"UsingShadowDecl(using_shadow_decl)",
							"VAArgExpr(va_arg_expr)",
							"VarTemplateDecl(var_template_decl)",
							"VectorType(vector_type)",
							"VerbatimLineComment(verbatim_line_comment)",
							"VisibilityAttr(visibility_attr)",
							"WeakRefAttr(weak_ref_attr)",
							"CXXRecordDecl(cxx_record_decl)",
							"CXXConstructorDecl(cxx_constructor_decl)",
							"n =>",
							"CXXCtorInitializer(cxx_ctor_initializer)",
							"CXXDependentScopeMemberExpr(cxx_dependent_scope_member_expr)",
							"CXXThisExpr(cxx_this_expr)",
							"CXXDestructorDecl(cxx_destructor_decl)",
							"n =>",
							"CXXMethodDecl(cxx_method_decl)",
							"n =>",
							"CXXStaticCastExpr(cxx_static_cast_expr)",
							"CXXUnresolvedConstructExpr(cxx_unresolved_construct_expr)",
							"CXXNewExpr(cxx_new_expr)",
							"CXXDeleteExpr(cxx_delete_expr)",
							"CXXBoolLiteralExpr(cxx_bool_literal_expr)",
							"CXX11NoReturnAttr(cxx11_no_return_attr)",
							"CXXBindTemporaryExpr(cxx_bind_temporary_expr)",
							"CXXCatchStmt(cxx_catch_stmt)",
							"CXXConstructExpr(cxx_construct_expr)",
							"CXXConversionDecl(cxx_conversion_decl)",
							"CXXDefaultArgExpr(cxx_default_arg_expr)",
							"CXXDefaultInitExpr(cxx_default_init_expr)",
							"CXXForRangeStmt(cxx_for_range_stmt)",
							"CXXFunctionalCastExpr(cxx_functional_cast_expr)",
							"CXXMemberCallExpr(cxx_member_call_expr)",
							"CXXNoexceptExpr(cxx_noexcept_expr)",
							"CXXNullPtrLiteralExpr(cxx_null_ptr_literal_expr)",
							"CXXOperatorCallExpr(cxx_operator_call_expr)",
							"CXXReinterpretCastExpr(cxx_reinterpret_cast_expr)",
							"CXXScalarValueInitExpr(cxx_scalar_value_init_expr)",
							"CXXTemporaryObjectExpr(cxx_temporary_object_expr)",
							"CXXTryStmt(cxx_try_stmt)",
							" function PrintNode(node)",
							" function PrintAst(node, ast)",
							"get()",
							" function isNode(obj)",
							" function GetType(name_or_id, ast = $.data)",
							"n =>",
							" node =>",
							" node =>",
							"r =>",
							" function GetFields(node)",
							" (v, k) =>",
							"([v, p]) =>",
							"([loc, ptr]) =>",
							"i =>",
							" function GetParams(node)",
							"child =>",
							" function PathRemoveLoc(path)",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAC5JwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					93,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					94,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					95,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					96,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					97,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					98,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					99,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					101,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					102,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					103,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAD0CwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					104,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					105,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					106,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					107,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1689,
								1693
							],
							[
								1752,
								1756
							],
							[
								1786,
								1834
							],
							[
								1949,
								1958
							],
							[
								2073,
								2095
							],
							[
								2554,
								2576
							],
							[
								2953,
								2963
							],
							[
								3021,
								3031
							],
							[
								3099,
								3115
							],
							[
								3540,
								3559
							],
							[
								3623,
								3644
							],
							[
								3986,
								3991
							],
							[
								4066,
								4081
							],
							[
								4173,
								4181
							],
							[
								4222,
								4230
							],
							[
								4475,
								4480
							],
							[
								4609,
								4682
							],
							[
								4686,
								4694
							],
							[
								4791,
								4821
							],
							[
								4856,
								4861
							],
							[
								4894,
								4901
							],
							[
								5013,
								5041
							],
							[
								5446,
								5453
							],
							[
								5472,
								5495
							],
							[
								5525,
								5532
							],
							[
								5563,
								5571
							],
							[
								5609,
								5616
							],
							[
								5825,
								5838
							],
							[
								6066,
								6109
							],
							[
								6142,
								6151
							],
							[
								6212,
								6216
							],
							[
								6264,
								6268
							],
							[
								6304,
								6318
							],
							[
								6425,
								6453
							],
							[
								6587,
								6612
							],
							[
								6710,
								6734
							],
							[
								6807,
								6811
							],
							[
								6929,
								6933
							],
							[
								6997,
								7011
							],
							[
								7084,
								7093
							],
							[
								7401,
								7415
							],
							[
								7564,
								7576
							],
							[
								7634,
								7659
							],
							[
								7708,
								7719
							],
							[
								7759,
								7770
							],
							[
								7907,
								7918
							],
							[
								8005,
								8018
							],
							[
								8099,
								8125
							],
							[
								8340,
								8369
							],
							[
								8380,
								8395
							],
							[
								8457,
								8476
							],
							[
								8684,
								8712
							],
							[
								8780,
								8827
							],
							[
								9094,
								9101
							],
							[
								11008,
								11066
							],
							[
								12109,
								12116
							],
							[
								12180,
								12187
							],
							[
								12197,
								12208
							],
							[
								12249,
								12275
							],
							[
								12391,
								12405
							],
							[
								12707,
								12726
							],
							[
								12753,
								12760
							],
							[
								12848,
								12878
							],
							[
								12944,
								12984
							],
							[
								13160,
								13211
							],
							[
								14177,
								14184
							],
							[
								14590,
								14616
							],
							[
								14861,
								14915
							],
							[
								15103,
								15115
							],
							[
								15142,
								15154
							],
							[
								15764,
								15824
							],
							[
								16406,
								16461
							],
							[
								16557,
								16569
							],
							[
								16574,
								16604
							],
							[
								16881,
								16903
							],
							[
								16949,
								16972
							],
							[
								17044,
								17059
							],
							[
								17587,
								17600
							],
							[
								17724,
								17743
							],
							[
								17795,
								17803
							],
							[
								17860,
								17875
							],
							[
								18033,
								18045
							],
							[
								18488,
								18502
							],
							[
								18602,
								18619
							],
							[
								18844,
								18866
							],
							[
								18983,
								19008
							],
							[
								19108,
								19125
							],
							[
								19179,
								19183
							],
							[
								19272,
								19276
							],
							[
								19327,
								19351
							],
							[
								19466,
								19506
							],
							[
								19566,
								19587
							],
							[
								19868,
								19900
							],
							[
								20483,
								20498
							],
							[
								20625,
								20650
							],
							[
								20886,
								20921
							],
							[
								21140,
								21147
							],
							[
								21242,
								21249
							],
							[
								21283,
								21292
							],
							[
								21328,
								21337
							],
							[
								21387,
								21395
							],
							[
								21437,
								21461
							],
							[
								21562,
								21578
							],
							[
								21617,
								21657
							],
							[
								21953,
								21996
							],
							[
								22969,
								22980
							],
							[
								23739,
								23789
							],
							[
								23811,
								23837
							],
							[
								23872,
								23901
							],
							[
								24255,
								24298
							],
							[
								24411,
								24415
							],
							[
								24431,
								24435
							],
							[
								24480,
								24567
							],
							[
								24734,
								24767
							],
							[
								24825,
								24830
							],
							[
								24908,
								24950
							],
							[
								25038,
								25053
							],
							[
								25192,
								25232
							],
							[
								25378,
								25383
							],
							[
								25570,
								25574
							],
							[
								25653,
								25657
							],
							[
								25809,
								25816
							],
							[
								25920,
								25932
							],
							[
								26062,
								26078
							],
							[
								26279,
								26283
							],
							[
								26343,
								26350
							],
							[
								26431,
								26438
							],
							[
								26503,
								26549
							],
							[
								26589,
								26599
							],
							[
								26800,
								26836
							],
							[
								26879,
								26891
							],
							[
								28433,
								28465
							],
							[
								28750,
								28755
							],
							[
								29947,
								29956
							],
							[
								30046,
								30055
							],
							[
								30168,
								30177
							],
							[
								30241,
								30250
							],
							[
								30504,
								30514
							],
							[
								30564,
								30574
							],
							[
								30622,
								30632
							],
							[
								31216,
								31227
							],
							[
								31263,
								31267
							],
							[
								31294,
								31298
							],
							[
								31322,
								31326
							],
							[
								31350,
								31354
							],
							[
								31382,
								31419
							],
							[
								31606,
								31661
							],
							[
								31800,
								31808
							],
							[
								31897,
								31905
							],
							[
								31951,
								31959
							],
							[
								32038,
								32074
							],
							[
								32163,
								32206
							],
							[
								32396,
								32401
							],
							[
								32502,
								32521
							],
							[
								32585,
								32590
							],
							[
								32849,
								32872
							],
							[
								32980,
								32985
							],
							[
								33097,
								33120
							],
							[
								33208,
								33213
							],
							[
								33315,
								33327
							],
							[
								33748,
								33753
							],
							[
								33813,
								33842
							],
							[
								33959,
								33973
							],
							[
								34890,
								34948
							],
							[
								35871,
								35882
							],
							[
								35915,
								35926
							],
							[
								35980,
								35986
							],
							[
								36039,
								36047
							],
							[
								36271,
								36298
							],
							[
								36327,
								36335
							],
							[
								36471,
								36475
							],
							[
								37155,
								37161
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							"c(...args)",
							"l(...args)",
							".show = value =>",
							".printNode = arg =>",
							".debug = (...args) =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"() =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function Terminate(exitCode)",
							"function* GenerateInspectStruct(decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							" ([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"async function ASTShell(...args)",
							"fn =>",
							"module =>",
							"module =>",
							"module =>",
							"module =>",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							" function nameOrIdPred(name_or_id, pred = n => true)",
							" node =>",
							" node =>",
							" node =>",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							" n =>",
							"getType(name_or_id)",
							" n =>",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"pushUnique = (arr, item) =>",
							" elem =>",
							"s =>",
							" fr =>"
						]
					},
					"AQAAAAAAAAAAAAAA9AsAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					108,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD0CwAAICBkID0+CiAgZCA9PgpJbXBvcnRNb2R1bGUobW9kdWxlUGF0aCwgLi4uYXJncykKICBtb2R1bGUgPT4KICAoYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiAgYyguLi5hcmdzKQogIGwoLi4uYXJncykKICAuc2hvdyA9IHZhbHVlID0+CiAgLnByaW50Tm9kZSA9IGFyZyA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+CigpID0+CkluY2x1ZGVBbGwoZGlyLCBtYXhEZXB0aCA9IEluZmluaXR5LCBwcmVkID0gZW50cnkgPT4gL1wuW2NoXSQvLgooZW50cnkpKQpTZWxlY3RMb2NhdGlvbnMobm9kZSkKICBuID0+CiAgcHJvcCA9PgpMb2NhdGlvblN0cmluZyhsb2MpCiAgbm9kZSA9PgpTdHJ1Y3RzKG5vZGVzKQogIG5vZGUgPT4KICBmaWVsZCA9PgogIG5vZGUgPT4KKGZpZWxkLCBpKSA9PgpUYWJsZShsaXN0LCBwcmVkID0gKG4sIGwpID0+IHRydWUpCihuLCBpKSA9PgogIGUgPT4KICBrID0+CihbaSwgbCwgbl0pID0+CiAgcmV0dXJuVHlwZShuKQogIG51bUFyZ3MobikKUGFyYW1zKG4pCiAgcCA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KKGssIGopID0+CihhY2MsIG5hbWUpID0+CihuYW1lLCBpKSA9PgogIHBhZCA9IChjb2xzLCBwYWQsIHNlcCkgPT4KKGtleSwgaSkgPT4KKHMsIGNvbCkgPT4KKGFjYywgbikgPT4KKGFjYywgcm93KSA9PgpQcmludFJhbmdlKHJhbmdlKQpPdmVybGFwUmFuZ2UocjEsIHIyKQpHZXRSYW5nZSA9IHIgPT4KSW5SYW5nZSA9IChpLCByKSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCkdlbmVyYXRlSW5zcGVjdFN0cnVjdChkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgogIChbZmllbGQsIG1lbWJlcl0pID0+CkdlbmVyYXRlR2V0U2V0KG5hbWUsIG9mZnNldCwgdHlwZSwgZmZpUHJlZml4KQogIHRvSGV4ID0gdiA9PgogIHRvSGV4ID0gdiA9PgpCeXRlTGVuZ3RoMlR5cGVkQXJyYXkoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKQnl0ZUxlbmd0aDJWYWx1ZShieXRlTGVuZ3RoLCBzaWduZWQsIGZsb2F0aW5nKQpGRklfRnVuY3Rpb24KICBjb25zdHJ1Y3Rvcihub2RlLCBwcmVmaXggPSAnJykKKFtuYW1lLCB0eXBlXSwgaWR4KSA9PgogIGdlbmVyYXRlRGVmaW5lKGZwLCBsaWIpCiAgKG5hbWUsIGxpYikgPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQogIChmciwgaSkgPT4KUHJpbnRFQ01BU2NyaXB0KGFzdCwgY29tbWVudHMsIHByaW50ZXIgPSAKKHsgaW5kZW50OiA0IH0sIGNvbW1lbnRzKSkKUHJpbnRDQXJyYXkoc3RyaW5ncykKTmFtZXNwYWNlcyhub2RlUGF0aCwgYXN0ID0gJC5kYXRhKQogIHAgPT4KICBuID0+CkNvbnN0YW50cyhub2RlLCB0ID0gKG5hbWUsIHZhbHVlKSA9PiBbbmFtZSwgIWlzTmFOKCt2YWx1ZSkgPyArdmFsdWUgOiB2YWx1ZV0pCkdldEltcG9ydHMoYXN0ID0gJC5kYXRhKQogIG4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCiAgKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKICBuID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+CiAgbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcCA9PgogIG5hbWUgPT4KICBuYW1lID0+ClVuc2V0TG9jKG5vZGUsIHByZWQgPSAodiwgcCkgPT4gdHJ1ZSkKICAodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCkFTVFNoZWxsKC4uLmFyZ3MpCiAgZm4gPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICBtb2R1bGUgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICAoYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIG5hbWVPcklkUHJlZChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIG5vZGUgPT4KICBub2RlID0+CiAgbm9kZSA9PgogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBuID0+CiAgZ2V0VHlwZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQogIG4gPT4KICBnZXRWYXJpYWJsZShuYW1lX29yX2lkKQogIG4gPT4KICBnZXRMb2Mobm9kZSkKKCkgPT4KICBwYXRoT2YobmVlZGxlLCBtYXhEZXB0aCA9IDEwKQogIG4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KICAoKSA9PgogIG5vZGUgPT4KICBwdXNoVW5pcXVlID0gKGFyciwgaXRlbSkgPT4KICBlbGVtID0+CiAgcyA9PgogIGZyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					109,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/color/convert.js",
						"symkeys":
						[
							[
								464,
								516
							],
							[
								1364,
								1394
							],
							[
								2085,
								2153
							],
							[
								2588,
								2625
							],
							[
								2692,
								2733
							],
							[
								2904,
								2934
							],
							[
								2955,
								2961
							],
							[
								3039,
								3067
							],
							[
								3579,
								3597
							],
							[
								3659,
								3670
							],
							[
								3745,
								3759
							],
							[
								3809,
								3823
							],
							[
								3873,
								3884
							],
							[
								5141,
								5189
							],
							[
								6129,
								6164
							],
							[
								7011,
								7059
							],
							[
								7652,
								7700
							],
							[
								7772,
								7776
							],
							[
								8337,
								8385
							],
							[
								8988,
								9023
							],
							[
								10086,
								10121
							],
							[
								10179,
								10183
							],
							[
								10884,
								10919
							],
							[
								11182,
								11186
							],
							[
								11739,
								11774
							],
							[
								12318,
								12353
							],
							[
								13045,
								13080
							],
							[
								13578,
								13613
							],
							[
								14297,
								14332
							],
							[
								15557,
								15592
							],
							[
								15921,
								15929
							],
							[
								16636,
								16671
							],
							[
								17261,
								17296
							],
							[
								17557,
								17590
							],
							[
								18116,
								18157
							],
							[
								18334,
								18354
							],
							[
								18403,
								18421
							],
							[
								19064,
								19086
							],
							[
								19604,
								19608
							],
							[
								19919,
								19954
							],
							[
								20560,
								20589
							],
							[
								20679,
								20683
							],
							[
								25153,
								25199
							],
							[
								27889,
								27923
							],
							[
								28357,
								28391
							],
							[
								28925,
								28959
							],
							[
								29425,
								29459
							],
							[
								30048,
								30082
							],
							[
								30503,
								30537
							],
							[
								31079,
								31113
							],
							[
								31649,
								31696
							],
							[
								32316,
								32350
							],
							[
								32872,
								32919
							],
							[
								33590,
								33624
							],
							[
								34050,
								34097
							],
							[
								34656,
								34690
							],
							[
								35177,
								35224
							],
							[
								35840,
								35874
							],
							[
								36399,
								36446
							],
							[
								37113,
								37147
							],
							[
								37570,
								37617
							],
							[
								38177,
								38211
							],
							[
								38702,
								38749
							],
							[
								39366,
								39400
							],
							[
								39929,
								39976
							],
							[
								40644,
								40678
							],
							[
								41105,
								41152
							],
							[
								41717,
								41751
							],
							[
								42175,
								42209
							],
							[
								42632,
								42653
							],
							[
								42864,
								42885
							],
							[
								43092,
								43113
							],
							[
								43335,
								43356
							],
							[
								43579,
								43600
							],
							[
								43818,
								43839
							],
							[
								44260,
								44294
							],
							[
								44617,
								44651
							],
							[
								44973,
								45007
							],
							[
								45342,
								45376
							],
							[
								45693,
								45727
							],
							[
								46054,
								46088
							],
							[
								46464,
								46494
							],
							[
								46775,
								46805
							],
							[
								47092,
								47122
							],
							[
								47409,
								47439
							],
							[
								47751,
								47793
							],
							[
								48098,
								48128
							],
							[
								48420,
								48450
							],
							[
								48747,
								48777
							],
							[
								49161,
								49194
							],
							[
								49475,
								49508
							],
							[
								49795,
								49828
							],
							[
								50117,
								50150
							],
							[
								50461,
								50506
							],
							[
								50812,
								50845
							],
							[
								51140,
								51173
							],
							[
								51469,
								51502
							],
							[
								51877,
								51906
							],
							[
								52136,
								52165
							],
							[
								52395,
								52424
							],
							[
								52650,
								52679
							],
							[
								52920,
								52949
							],
							[
								53191,
								53220
							],
							[
								53457,
								53486
							]
						],
						"symlist":
						[
							" function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0)",
							" function hue2rgb(t1, t2, hue)",
							" function luminance2contrast(relativeLuminance1, relativeLuminance2)",
							" function rgb2value(rgbR, rgbG, rgbB)",
							" function rgb2whiteness(rgbR, rgbG, rgbB)",
							" function matrix(params, mats)",
							"mat =>",
							" (acc, value, index) =>",
							"atan2d = (y, x) =>",
							"cosd = x =>",
							"deg2rad = x =>",
							"rad2deg = x =>",
							"sind = x =>",
							" function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsl2rgb(hslH, hslS, hslL)",
							" function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue)",
							" function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue)",
							"v =>",
							" function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsv2rgb(hsvH, hsvS, hsvV)",
							" function rgb2xyz(rgbR, rgbG, rgbB)",
							"v =>",
							" function xyz2rgb(xyzX, xyzY, xyzZ)",
							"v =>",
							" function hsl2hsv(hslH, hslS, hslL)",
							" function hsv2hsl(hsvH, hsvS, hsvV)",
							" function hwb2hsv(hwbH, hwbW, hwbB)",
							" function hsv2hwb(hsvH, hsvS, hsvV)",
							" function lab2xyz(labL, labA, labB)",
							" function xyz2lab(xyzX, xyzY, xyzZ)",
							"value =>",
							" function lab2lch(labL, labA, labB)",
							" function lch2lab(lchL, lchC, lchH)",
							"function rgb2contrast(rgb1, rgb2)",
							" function rgb2luminance(rgbR, rgbG, rgbB)",
							"adjustChannel = x =>",
							"adjustGamma = x =>",
							" function hex2rgb(hex)",
							"c =>",
							" function rgb2hex(rgbR, rgbG, rgbB)",
							"function keyword2rgb(keyword)",
							"x =>",
							"function lab2ciede([L1, a1, b1], [L2, a2, b2])",
							"function rgb2lab(rgbR, rgbG, rgbB)",
							"function lab2rgb(labL, labA, labB)",
							"function rgb2lch(rgbR, rgbG, rgbB)",
							"function lch2rgb(lchL, lchC, lchH)",
							"function hwb2hsl(hwbH, hwbW, hwbB)",
							"function hsl2hwb(hslH, hslS, hslL)",
							"function hsl2lab(hslH, hslS, hslL)",
							"function lab2hsl(labL, labA, labB, fallbackhue)",
							"function hsl2lch(hslH, hslS, hslL)",
							"function lch2hsl(lchL, lchC, lchH, fallbackhue)",
							"function hsl2xyz(hslH, hslS, hslL)",
							"function xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hwb2lab(hwbH, hwbW, hwbB)",
							"function lab2hwb(labL, labA, labB, fallbackhue)",
							"function hwb2lch(hwbH, hwbW, hwbB)",
							"function lch2hwb(lchL, lchC, lchH, fallbackhue)",
							"function hwb2xyz(hwbH, hwbW, hwbB)",
							"function xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hsv2lab(hsvH, hsvS, hsvV)",
							"function lab2hsv(labL, labA, labB, fallbackhue)",
							"function hsv2lch(hsvH, hsvS, hsvV)",
							"function lch2hsv(lchL, lchC, lchH, fallbackhue)",
							"function hsv2xyz(hsvH, hsvS, hsvV)",
							"function xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue)",
							"function xyz2lch(xyzX, xyzY, xyzZ)",
							"function lch2xyz(lchL, lchC, lchH)",
							"function hex2hsl(hex)",
							"function hex2hsv(hex)",
							"function hex2hwb(hex)",
							"function hex2lab(hex)",
							"function hex2lch(hex)",
							"function hex2xyz(hex)",
							"function hsl2hex(hslH, hslS, hslL)",
							"function hsv2hex(hsvH, hsvS, hsvV)",
							"function hwb2hex(hwbH, hwbW, hwbB)",
							"function lab2hex(labL, labA, labB)",
							"function lch2hex(lchL, lchC, lchH)",
							"function xyz2hex(xyzX, xyzY, xyzZ)",
							"function hex2ciede(hex1, hex2)",
							"function hsl2ciede(hsl1, hsl2)",
							"function hsv2ciede(hsv1, hsv2)",
							"function hwb2ciede(hwb1, hwb2)",
							"function keyword2ciede(keyword1, keyword2)",
							"function lch2ciede(lch1, lch2)",
							"function rgb2ciede(rgb1, rgb2)",
							"function xyz2ciede(xyz1, xyz2)",
							"function hex2contrast(hex1, hex2)",
							"function hsl2contrast(hsl1, hsl2)",
							"function hsv2contrast(hsv1, hsv2)",
							"function hwb2contrast(hwb1, hwb2)",
							"function keyword2contrast(keyword1, keyword2)",
							"function lab2contrast(lab1, lab2)",
							"function lch2contrast(lch1, lch2)",
							"function xyz2contrast(xyz1, xyz2)",
							"function keyword2hex(keyword)",
							"function keyword2hsl(keyword)",
							"function keyword2hsv(keyword)",
							"function keyword2hwb(keyword)",
							"function keyword2lab(keyword)",
							"function keyword2lch(keyword)",
							"function keyword2xyz(keyword)"
						]
					},
					"AQAAAAAAAAAAAAAA4QoAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					110,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhCgAAICByZ2IyaHVlKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlID0gMCkKICBodWUycmdiKHQxLCB0MiwgaHVlKQogIGx1bWluYW5jZTJjb250cmFzdChyZWxhdGl2ZUx1bWluYW5jZTEsIHJlbGF0aXZlTHVtaW5hbmNlMikKICByZ2IydmFsdWUocmdiUiwgcmdiRywgcmdiQikKICByZ2Iyd2hpdGVuZXNzKHJnYlIsIHJnYkcsIHJnYkIpCiAgbWF0cml4KHBhcmFtcywgbWF0cykKICBtYXQgPT4KICAoYWNjLCB2YWx1ZSwgaW5kZXgpID0+CiAgYXRhbjJkID0gKHksIHgpID0+CiAgY29zZCA9IHggPT4KICBkZWcycmFkID0geCA9PgogIHJhZDJkZWcgPSB4ID0+CiAgc2luZCA9IHggPT4KICByZ2IyaHNsKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlKQogIGhzbDJyZ2IoaHNsSCwgaHNsUywgaHNsTCkKICByZ2IyaHdiKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlKQogIGh3YjJyZ2IoaHdiSCwgaHdiVywgaHdiQiwgZmFsbGJhY2todWUpCiAgdiA9PgogIHJnYjJoc3YocmdiUiwgcmdiRywgcmdiQiwgZmFsbGJhY2todWUpCiAgaHN2MnJnYihoc3ZILCBoc3ZTLCBoc3ZWKQogIHJnYjJ4eXoocmdiUiwgcmdiRywgcmdiQikKICB2ID0+CiAgeHl6MnJnYih4eXpYLCB4eXpZLCB4eXpaKQogIHYgPT4KICBoc2wyaHN2KGhzbEgsIGhzbFMsIGhzbEwpCiAgaHN2MmhzbChoc3ZILCBoc3ZTLCBoc3ZWKQogIGh3YjJoc3YoaHdiSCwgaHdiVywgaHdiQikKICBoc3YyaHdiKGhzdkgsIGhzdlMsIGhzdlYpCiAgbGFiMnh5eihsYWJMLCBsYWJBLCBsYWJCKQogIHh5ejJsYWIoeHl6WCwgeHl6WSwgeHl6WikKICB2YWx1ZSA9PgogIGxhYjJsY2gobGFiTCwgbGFiQSwgbGFiQikKICBsY2gybGFiKGxjaEwsIGxjaEMsIGxjaEgpCiAgcmdiMmNvbnRyYXN0KHJnYjEsIHJnYjIpCiAgcmdiMmx1bWluYW5jZShyZ2JSLCByZ2JHLCByZ2JCKQogIGFkanVzdENoYW5uZWwgPSB4ID0+CiAgYWRqdXN0R2FtbWEgPSB4ID0+CiAgaGV4MnJnYihoZXgpCiAgYyA9PgogIHJnYjJoZXgocmdiUiwgcmdiRywgcmdiQikKICBrZXl3b3JkMnJnYihrZXl3b3JkKQogIHggPT4KICBsYWIyY2llZGUoW0wxLCBhMSwgYjFdLCBbTDIsIGEyLCBiMl0pCiAgcmdiMmxhYihyZ2JSLCByZ2JHLCByZ2JCKQogIGxhYjJyZ2IobGFiTCwgbGFiQSwgbGFiQikKICByZ2IybGNoKHJnYlIsIHJnYkcsIHJnYkIpCiAgbGNoMnJnYihsY2hMLCBsY2hDLCBsY2hIKQogIGh3YjJoc2woaHdiSCwgaHdiVywgaHdiQikKICBoc2wyaHdiKGhzbEgsIGhzbFMsIGhzbEwpCiAgaHNsMmxhYihoc2xILCBoc2xTLCBoc2xMKQogIGxhYjJoc2wobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHNsMmxjaChoc2xILCBoc2xTLCBoc2xMKQogIGxjaDJoc2wobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHNsMnh5eihoc2xILCBoc2xTLCBoc2xMKQogIHh5ejJoc2woeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgaHdiMmxhYihod2JILCBod2JXLCBod2JCKQogIGxhYjJod2IobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHdiMmxjaChod2JILCBod2JXLCBod2JCKQogIGxjaDJod2IobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHdiMnh5eihod2JILCBod2JXLCBod2JCKQogIHh5ejJod2IoeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgaHN2MmxhYihoc3ZILCBoc3ZTLCBoc3ZWKQogIGxhYjJoc3YobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHN2MmxjaChoc3ZILCBoc3ZTLCBoc3ZWKQogIGxjaDJoc3YobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHN2Mnh5eihoc3ZILCBoc3ZTLCBoc3ZWKQogIHh5ejJoc3YoeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgeHl6MmxjaCh4eXpYLCB4eXpZLCB4eXpaKQogIGxjaDJ4eXoobGNoTCwgbGNoQywgbGNoSCkKICBoZXgyaHNsKGhleCkKICBoZXgyaHN2KGhleCkKICBoZXgyaHdiKGhleCkKICBoZXgybGFiKGhleCkKICBoZXgybGNoKGhleCkKICBoZXgyeHl6KGhleCkKICBoc2wyaGV4KGhzbEgsIGhzbFMsIGhzbEwpCiAgaHN2MmhleChoc3ZILCBoc3ZTLCBoc3ZWKQogIGh3YjJoZXgoaHdiSCwgaHdiVywgaHdiQikKICBsYWIyaGV4KGxhYkwsIGxhYkEsIGxhYkIpCiAgbGNoMmhleChsY2hMLCBsY2hDLCBsY2hIKQogIHh5ejJoZXgoeHl6WCwgeHl6WSwgeHl6WikKICBoZXgyY2llZGUoaGV4MSwgaGV4MikKICBoc2wyY2llZGUoaHNsMSwgaHNsMikKICBoc3YyY2llZGUoaHN2MSwgaHN2MikKICBod2IyY2llZGUoaHdiMSwgaHdiMikKICBrZXl3b3JkMmNpZWRlKGtleXdvcmQxLCBrZXl3b3JkMikKICBsY2gyY2llZGUobGNoMSwgbGNoMikKICByZ2IyY2llZGUocmdiMSwgcmdiMikKICB4eXoyY2llZGUoeHl6MSwgeHl6MikKICBoZXgyY29udHJhc3QoaGV4MSwgaGV4MikKICBoc2wyY29udHJhc3QoaHNsMSwgaHNsMikKICBoc3YyY29udHJhc3QoaHN2MSwgaHN2MikKICBod2IyY29udHJhc3QoaHdiMSwgaHdiMikKICBrZXl3b3JkMmNvbnRyYXN0KGtleXdvcmQxLCBrZXl3b3JkMikKICBsYWIyY29udHJhc3QobGFiMSwgbGFiMikKICBsY2gyY29udHJhc3QobGNoMSwgbGNoMikKICB4eXoyY29udHJhc3QoeHl6MSwgeHl6MikKICBrZXl3b3JkMmhleChrZXl3b3JkKQogIGtleXdvcmQyaHNsKGtleXdvcmQpCiAga2V5d29yZDJoc3Yoa2V5d29yZCkKICBrZXl3b3JkMmh3YihrZXl3b3JkKQogIGtleXdvcmQybGFiKGtleXdvcmQpCiAga2V5d29yZDJsY2goa2V5d29yZCkKICBrZXl3b3JkMnh5eihrZXl3b3JkKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					111,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/color/convert.js",
						"symkeys":
						[
							[
								464,
								516
							],
							[
								1364,
								1394
							],
							[
								2085,
								2153
							],
							[
								2588,
								2625
							],
							[
								2692,
								2733
							],
							[
								2904,
								2934
							],
							[
								2955,
								2961
							],
							[
								3039,
								3067
							],
							[
								3579,
								3597
							],
							[
								3659,
								3670
							],
							[
								3745,
								3759
							],
							[
								3809,
								3823
							],
							[
								3873,
								3884
							],
							[
								5141,
								5189
							],
							[
								6129,
								6164
							],
							[
								7011,
								7059
							],
							[
								7652,
								7700
							],
							[
								7772,
								7776
							],
							[
								8337,
								8385
							],
							[
								8988,
								9023
							],
							[
								10086,
								10121
							],
							[
								10179,
								10183
							],
							[
								10884,
								10919
							],
							[
								11182,
								11186
							],
							[
								11739,
								11774
							],
							[
								12318,
								12353
							],
							[
								13045,
								13080
							],
							[
								13578,
								13613
							],
							[
								14297,
								14332
							],
							[
								15557,
								15592
							],
							[
								15921,
								15929
							],
							[
								16636,
								16671
							],
							[
								17261,
								17296
							],
							[
								17557,
								17590
							],
							[
								18116,
								18157
							],
							[
								18334,
								18354
							],
							[
								18403,
								18421
							],
							[
								19064,
								19086
							],
							[
								19604,
								19608
							],
							[
								19919,
								19954
							],
							[
								20560,
								20589
							],
							[
								20679,
								20683
							],
							[
								25153,
								25199
							],
							[
								27889,
								27923
							],
							[
								28357,
								28391
							],
							[
								28925,
								28959
							],
							[
								29425,
								29459
							],
							[
								30048,
								30082
							],
							[
								30503,
								30537
							],
							[
								31079,
								31113
							],
							[
								31649,
								31696
							],
							[
								32316,
								32350
							],
							[
								32872,
								32919
							],
							[
								33590,
								33624
							],
							[
								34050,
								34097
							],
							[
								34656,
								34690
							],
							[
								35177,
								35224
							],
							[
								35840,
								35874
							],
							[
								36399,
								36446
							],
							[
								37113,
								37147
							],
							[
								37570,
								37617
							],
							[
								38177,
								38211
							],
							[
								38702,
								38749
							],
							[
								39366,
								39400
							],
							[
								39929,
								39976
							],
							[
								40644,
								40678
							],
							[
								41105,
								41152
							],
							[
								41717,
								41751
							],
							[
								42175,
								42209
							],
							[
								42632,
								42653
							],
							[
								42864,
								42885
							],
							[
								43092,
								43113
							],
							[
								43335,
								43356
							],
							[
								43579,
								43600
							],
							[
								43818,
								43839
							],
							[
								44260,
								44294
							],
							[
								44617,
								44651
							],
							[
								44973,
								45007
							],
							[
								45342,
								45376
							],
							[
								45693,
								45727
							],
							[
								46054,
								46088
							],
							[
								46464,
								46494
							],
							[
								46775,
								46805
							],
							[
								47092,
								47122
							],
							[
								47409,
								47439
							],
							[
								47751,
								47793
							],
							[
								48098,
								48128
							],
							[
								48420,
								48450
							],
							[
								48747,
								48777
							],
							[
								49161,
								49194
							],
							[
								49475,
								49508
							],
							[
								49795,
								49828
							],
							[
								50117,
								50150
							],
							[
								50461,
								50506
							],
							[
								50812,
								50845
							],
							[
								51140,
								51173
							],
							[
								51469,
								51502
							],
							[
								51877,
								51906
							],
							[
								52136,
								52165
							],
							[
								52395,
								52424
							],
							[
								52650,
								52679
							],
							[
								52920,
								52949
							],
							[
								53191,
								53220
							],
							[
								53457,
								53486
							]
						],
						"symlist":
						[
							" function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0)",
							" function hue2rgb(t1, t2, hue)",
							" function luminance2contrast(relativeLuminance1, relativeLuminance2)",
							" function rgb2value(rgbR, rgbG, rgbB)",
							" function rgb2whiteness(rgbR, rgbG, rgbB)",
							" function matrix(params, mats)",
							"mat =>",
							" (acc, value, index) =>",
							"atan2d = (y, x) =>",
							"cosd = x =>",
							"deg2rad = x =>",
							"rad2deg = x =>",
							"sind = x =>",
							" function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsl2rgb(hslH, hslS, hslL)",
							" function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue)",
							" function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue)",
							"v =>",
							" function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsv2rgb(hsvH, hsvS, hsvV)",
							" function rgb2xyz(rgbR, rgbG, rgbB)",
							"v =>",
							" function xyz2rgb(xyzX, xyzY, xyzZ)",
							"v =>",
							" function hsl2hsv(hslH, hslS, hslL)",
							" function hsv2hsl(hsvH, hsvS, hsvV)",
							" function hwb2hsv(hwbH, hwbW, hwbB)",
							" function hsv2hwb(hsvH, hsvS, hsvV)",
							" function lab2xyz(labL, labA, labB)",
							" function xyz2lab(xyzX, xyzY, xyzZ)",
							"value =>",
							" function lab2lch(labL, labA, labB)",
							" function lch2lab(lchL, lchC, lchH)",
							"function rgb2contrast(rgb1, rgb2)",
							" function rgb2luminance(rgbR, rgbG, rgbB)",
							"adjustChannel = x =>",
							"adjustGamma = x =>",
							" function hex2rgb(hex)",
							"c =>",
							" function rgb2hex(rgbR, rgbG, rgbB)",
							"function keyword2rgb(keyword)",
							"x =>",
							"function lab2ciede([L1, a1, b1], [L2, a2, b2])",
							"function rgb2lab(rgbR, rgbG, rgbB)",
							"function lab2rgb(labL, labA, labB)",
							"function rgb2lch(rgbR, rgbG, rgbB)",
							"function lch2rgb(lchL, lchC, lchH)",
							"function hwb2hsl(hwbH, hwbW, hwbB)",
							"function hsl2hwb(hslH, hslS, hslL)",
							"function hsl2lab(hslH, hslS, hslL)",
							"function lab2hsl(labL, labA, labB, fallbackhue)",
							"function hsl2lch(hslH, hslS, hslL)",
							"function lch2hsl(lchL, lchC, lchH, fallbackhue)",
							"function hsl2xyz(hslH, hslS, hslL)",
							"function xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hwb2lab(hwbH, hwbW, hwbB)",
							"function lab2hwb(labL, labA, labB, fallbackhue)",
							"function hwb2lch(hwbH, hwbW, hwbB)",
							"function lch2hwb(lchL, lchC, lchH, fallbackhue)",
							"function hwb2xyz(hwbH, hwbW, hwbB)",
							"function xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hsv2lab(hsvH, hsvS, hsvV)",
							"function lab2hsv(labL, labA, labB, fallbackhue)",
							"function hsv2lch(hsvH, hsvS, hsvV)",
							"function lch2hsv(lchL, lchC, lchH, fallbackhue)",
							"function hsv2xyz(hsvH, hsvS, hsvV)",
							"function xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue)",
							"function xyz2lch(xyzX, xyzY, xyzZ)",
							"function lch2xyz(lchL, lchC, lchH)",
							"function hex2hsl(hex)",
							"function hex2hsv(hex)",
							"function hex2hwb(hex)",
							"function hex2lab(hex)",
							"function hex2lch(hex)",
							"function hex2xyz(hex)",
							"function hsl2hex(hslH, hslS, hslL)",
							"function hsv2hex(hsvH, hsvS, hsvV)",
							"function hwb2hex(hwbH, hwbW, hwbB)",
							"function lab2hex(labL, labA, labB)",
							"function lch2hex(lchL, lchC, lchH)",
							"function xyz2hex(xyzX, xyzY, xyzZ)",
							"function hex2ciede(hex1, hex2)",
							"function hsl2ciede(hsl1, hsl2)",
							"function hsv2ciede(hsv1, hsv2)",
							"function hwb2ciede(hwb1, hwb2)",
							"function keyword2ciede(keyword1, keyword2)",
							"function lch2ciede(lch1, lch2)",
							"function rgb2ciede(rgb1, rgb2)",
							"function xyz2ciede(xyz1, xyz2)",
							"function hex2contrast(hex1, hex2)",
							"function hsl2contrast(hsl1, hsl2)",
							"function hsv2contrast(hsv1, hsv2)",
							"function hwb2contrast(hwb1, hwb2)",
							"function keyword2contrast(keyword1, keyword2)",
							"function lab2contrast(lab1, lab2)",
							"function lch2contrast(lch1, lch2)",
							"function xyz2contrast(xyz1, xyz2)",
							"function keyword2hex(keyword)",
							"function keyword2hsl(keyword)",
							"function keyword2hsv(keyword)",
							"function keyword2hwb(keyword)",
							"function keyword2lab(keyword)",
							"function keyword2lch(keyword)",
							"function keyword2xyz(keyword)"
						]
					},
					"AQAAAAAAAAAAAAAA4QoAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					112,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/color/convert.js",
						"symkeys":
						[
							[
								464,
								516
							],
							[
								1364,
								1394
							],
							[
								2085,
								2153
							],
							[
								2588,
								2625
							],
							[
								2692,
								2733
							],
							[
								2904,
								2934
							],
							[
								2955,
								2961
							],
							[
								3039,
								3067
							],
							[
								3579,
								3597
							],
							[
								3659,
								3670
							],
							[
								3745,
								3759
							],
							[
								3789,
								3803
							],
							[
								3833,
								3844
							],
							[
								5101,
								5149
							],
							[
								6089,
								6124
							],
							[
								6971,
								7019
							],
							[
								7612,
								7660
							],
							[
								7732,
								7736
							],
							[
								8297,
								8345
							],
							[
								8948,
								8983
							],
							[
								10046,
								10081
							],
							[
								10139,
								10143
							],
							[
								10844,
								10879
							],
							[
								11142,
								11146
							],
							[
								11699,
								11734
							],
							[
								12278,
								12313
							],
							[
								13005,
								13040
							],
							[
								13538,
								13573
							],
							[
								14257,
								14292
							],
							[
								15517,
								15552
							],
							[
								15881,
								15889
							],
							[
								16596,
								16631
							],
							[
								17221,
								17256
							],
							[
								17517,
								17550
							],
							[
								18076,
								18117
							],
							[
								18294,
								18314
							],
							[
								18363,
								18381
							],
							[
								19024,
								19046
							],
							[
								19564,
								19568
							],
							[
								19879,
								19914
							],
							[
								20520,
								20549
							],
							[
								20639,
								20643
							],
							[
								25113,
								25159
							],
							[
								27849,
								27883
							],
							[
								28317,
								28351
							],
							[
								28885,
								28919
							],
							[
								29385,
								29419
							],
							[
								30008,
								30042
							],
							[
								30463,
								30497
							],
							[
								31039,
								31073
							],
							[
								31609,
								31656
							],
							[
								32276,
								32310
							],
							[
								32832,
								32879
							],
							[
								33550,
								33584
							],
							[
								34010,
								34057
							],
							[
								34616,
								34650
							],
							[
								35137,
								35184
							],
							[
								35800,
								35834
							],
							[
								36359,
								36406
							],
							[
								37073,
								37107
							],
							[
								37530,
								37577
							],
							[
								38137,
								38171
							],
							[
								38662,
								38709
							],
							[
								39326,
								39360
							],
							[
								39889,
								39936
							],
							[
								40604,
								40638
							],
							[
								41065,
								41112
							],
							[
								41677,
								41711
							],
							[
								42135,
								42169
							],
							[
								42592,
								42613
							],
							[
								42824,
								42845
							],
							[
								43052,
								43073
							],
							[
								43295,
								43316
							],
							[
								43539,
								43560
							],
							[
								43778,
								43799
							],
							[
								44220,
								44254
							],
							[
								44577,
								44611
							],
							[
								44933,
								44967
							],
							[
								45302,
								45336
							],
							[
								45653,
								45687
							],
							[
								46014,
								46048
							],
							[
								46424,
								46454
							],
							[
								46735,
								46765
							],
							[
								47052,
								47082
							],
							[
								47369,
								47399
							],
							[
								47711,
								47753
							],
							[
								48058,
								48088
							],
							[
								48380,
								48410
							],
							[
								48707,
								48737
							],
							[
								49121,
								49154
							],
							[
								49435,
								49468
							],
							[
								49755,
								49788
							],
							[
								50077,
								50110
							],
							[
								50421,
								50466
							],
							[
								50772,
								50805
							],
							[
								51100,
								51133
							],
							[
								51429,
								51462
							],
							[
								51837,
								51866
							],
							[
								52096,
								52125
							],
							[
								52355,
								52384
							],
							[
								52610,
								52639
							],
							[
								52880,
								52909
							],
							[
								53151,
								53180
							],
							[
								53417,
								53446
							]
						],
						"symlist":
						[
							" function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0)",
							" function hue2rgb(t1, t2, hue)",
							" function luminance2contrast(relativeLuminance1, relativeLuminance2)",
							" function rgb2value(rgbR, rgbG, rgbB)",
							" function rgb2whiteness(rgbR, rgbG, rgbB)",
							" function matrix(params, mats)",
							"mat =>",
							" (acc, value, index) =>",
							"atan2d = (y, x) =>",
							"cosd = x =>",
							"deg2rad = x =>",
							"rad2deg = x =>",
							"sind = x =>",
							" function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsl2rgb(hslH, hslS, hslL)",
							" function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue)",
							" function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue)",
							"v =>",
							" function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue)",
							" function hsv2rgb(hsvH, hsvS, hsvV)",
							" function rgb2xyz(rgbR, rgbG, rgbB)",
							"v =>",
							" function xyz2rgb(xyzX, xyzY, xyzZ)",
							"v =>",
							" function hsl2hsv(hslH, hslS, hslL)",
							" function hsv2hsl(hsvH, hsvS, hsvV)",
							" function hwb2hsv(hwbH, hwbW, hwbB)",
							" function hsv2hwb(hsvH, hsvS, hsvV)",
							" function lab2xyz(labL, labA, labB)",
							" function xyz2lab(xyzX, xyzY, xyzZ)",
							"value =>",
							" function lab2lch(labL, labA, labB)",
							" function lch2lab(lchL, lchC, lchH)",
							"function rgb2contrast(rgb1, rgb2)",
							" function rgb2luminance(rgbR, rgbG, rgbB)",
							"adjustChannel = x =>",
							"adjustGamma = x =>",
							" function hex2rgb(hex)",
							"c =>",
							" function rgb2hex(rgbR, rgbG, rgbB)",
							"function keyword2rgb(keyword)",
							"x =>",
							"function lab2ciede([L1, a1, b1], [L2, a2, b2])",
							"function rgb2lab(rgbR, rgbG, rgbB)",
							"function lab2rgb(labL, labA, labB)",
							"function rgb2lch(rgbR, rgbG, rgbB)",
							"function lch2rgb(lchL, lchC, lchH)",
							"function hwb2hsl(hwbH, hwbW, hwbB)",
							"function hsl2hwb(hslH, hslS, hslL)",
							"function hsl2lab(hslH, hslS, hslL)",
							"function lab2hsl(labL, labA, labB, fallbackhue)",
							"function hsl2lch(hslH, hslS, hslL)",
							"function lch2hsl(lchL, lchC, lchH, fallbackhue)",
							"function hsl2xyz(hslH, hslS, hslL)",
							"function xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hwb2lab(hwbH, hwbW, hwbB)",
							"function lab2hwb(labL, labA, labB, fallbackhue)",
							"function hwb2lch(hwbH, hwbW, hwbB)",
							"function lch2hwb(lchL, lchC, lchH, fallbackhue)",
							"function hwb2xyz(hwbH, hwbW, hwbB)",
							"function xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue)",
							"function hsv2lab(hsvH, hsvS, hsvV)",
							"function lab2hsv(labL, labA, labB, fallbackhue)",
							"function hsv2lch(hsvH, hsvS, hsvV)",
							"function lch2hsv(lchL, lchC, lchH, fallbackhue)",
							"function hsv2xyz(hsvH, hsvS, hsvV)",
							"function xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue)",
							"function xyz2lch(xyzX, xyzY, xyzZ)",
							"function lch2xyz(lchL, lchC, lchH)",
							"function hex2hsl(hex)",
							"function hex2hsv(hex)",
							"function hex2hwb(hex)",
							"function hex2lab(hex)",
							"function hex2lch(hex)",
							"function hex2xyz(hex)",
							"function hsl2hex(hslH, hslS, hslL)",
							"function hsv2hex(hsvH, hsvS, hsvV)",
							"function hwb2hex(hwbH, hwbW, hwbB)",
							"function lab2hex(labL, labA, labB)",
							"function lch2hex(lchL, lchC, lchH)",
							"function xyz2hex(xyzX, xyzY, xyzZ)",
							"function hex2ciede(hex1, hex2)",
							"function hsl2ciede(hsl1, hsl2)",
							"function hsv2ciede(hsv1, hsv2)",
							"function hwb2ciede(hwb1, hwb2)",
							"function keyword2ciede(keyword1, keyword2)",
							"function lch2ciede(lch1, lch2)",
							"function rgb2ciede(rgb1, rgb2)",
							"function xyz2ciede(xyz1, xyz2)",
							"function hex2contrast(hex1, hex2)",
							"function hsl2contrast(hsl1, hsl2)",
							"function hsv2contrast(hsv1, hsv2)",
							"function hwb2contrast(hwb1, hwb2)",
							"function keyword2contrast(keyword1, keyword2)",
							"function lab2contrast(lab1, lab2)",
							"function lch2contrast(lch1, lch2)",
							"function xyz2contrast(xyz1, xyz2)",
							"function keyword2hex(keyword)",
							"function keyword2hsl(keyword)",
							"function keyword2hsv(keyword)",
							"function keyword2hwb(keyword)",
							"function keyword2lab(keyword)",
							"function keyword2lch(keyword)",
							"function keyword2xyz(keyword)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhCgAAICByZ2IyaHVlKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlID0gMCkKICBodWUycmdiKHQxLCB0MiwgaHVlKQogIGx1bWluYW5jZTJjb250cmFzdChyZWxhdGl2ZUx1bWluYW5jZTEsIHJlbGF0aXZlTHVtaW5hbmNlMikKICByZ2IydmFsdWUocmdiUiwgcmdiRywgcmdiQikKICByZ2Iyd2hpdGVuZXNzKHJnYlIsIHJnYkcsIHJnYkIpCiAgbWF0cml4KHBhcmFtcywgbWF0cykKICBtYXQgPT4KICAoYWNjLCB2YWx1ZSwgaW5kZXgpID0+CiAgYXRhbjJkID0gKHksIHgpID0+CiAgY29zZCA9IHggPT4KICBkZWcycmFkID0geCA9PgogIHJhZDJkZWcgPSB4ID0+CiAgc2luZCA9IHggPT4KICByZ2IyaHNsKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlKQogIGhzbDJyZ2IoaHNsSCwgaHNsUywgaHNsTCkKICByZ2IyaHdiKHJnYlIsIHJnYkcsIHJnYkIsIGZhbGxiYWNraHVlKQogIGh3YjJyZ2IoaHdiSCwgaHdiVywgaHdiQiwgZmFsbGJhY2todWUpCiAgdiA9PgogIHJnYjJoc3YocmdiUiwgcmdiRywgcmdiQiwgZmFsbGJhY2todWUpCiAgaHN2MnJnYihoc3ZILCBoc3ZTLCBoc3ZWKQogIHJnYjJ4eXoocmdiUiwgcmdiRywgcmdiQikKICB2ID0+CiAgeHl6MnJnYih4eXpYLCB4eXpZLCB4eXpaKQogIHYgPT4KICBoc2wyaHN2KGhzbEgsIGhzbFMsIGhzbEwpCiAgaHN2MmhzbChoc3ZILCBoc3ZTLCBoc3ZWKQogIGh3YjJoc3YoaHdiSCwgaHdiVywgaHdiQikKICBoc3YyaHdiKGhzdkgsIGhzdlMsIGhzdlYpCiAgbGFiMnh5eihsYWJMLCBsYWJBLCBsYWJCKQogIHh5ejJsYWIoeHl6WCwgeHl6WSwgeHl6WikKICB2YWx1ZSA9PgogIGxhYjJsY2gobGFiTCwgbGFiQSwgbGFiQikKICBsY2gybGFiKGxjaEwsIGxjaEMsIGxjaEgpCiAgcmdiMmNvbnRyYXN0KHJnYjEsIHJnYjIpCiAgcmdiMmx1bWluYW5jZShyZ2JSLCByZ2JHLCByZ2JCKQogIGFkanVzdENoYW5uZWwgPSB4ID0+CiAgYWRqdXN0R2FtbWEgPSB4ID0+CiAgaGV4MnJnYihoZXgpCiAgYyA9PgogIHJnYjJoZXgocmdiUiwgcmdiRywgcmdiQikKICBrZXl3b3JkMnJnYihrZXl3b3JkKQogIHggPT4KICBsYWIyY2llZGUoW0wxLCBhMSwgYjFdLCBbTDIsIGEyLCBiMl0pCiAgcmdiMmxhYihyZ2JSLCByZ2JHLCByZ2JCKQogIGxhYjJyZ2IobGFiTCwgbGFiQSwgbGFiQikKICByZ2IybGNoKHJnYlIsIHJnYkcsIHJnYkIpCiAgbGNoMnJnYihsY2hMLCBsY2hDLCBsY2hIKQogIGh3YjJoc2woaHdiSCwgaHdiVywgaHdiQikKICBoc2wyaHdiKGhzbEgsIGhzbFMsIGhzbEwpCiAgaHNsMmxhYihoc2xILCBoc2xTLCBoc2xMKQogIGxhYjJoc2wobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHNsMmxjaChoc2xILCBoc2xTLCBoc2xMKQogIGxjaDJoc2wobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHNsMnh5eihoc2xILCBoc2xTLCBoc2xMKQogIHh5ejJoc2woeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgaHdiMmxhYihod2JILCBod2JXLCBod2JCKQogIGxhYjJod2IobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHdiMmxjaChod2JILCBod2JXLCBod2JCKQogIGxjaDJod2IobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHdiMnh5eihod2JILCBod2JXLCBod2JCKQogIHh5ejJod2IoeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgaHN2MmxhYihoc3ZILCBoc3ZTLCBoc3ZWKQogIGxhYjJoc3YobGFiTCwgbGFiQSwgbGFiQiwgZmFsbGJhY2todWUpCiAgaHN2MmxjaChoc3ZILCBoc3ZTLCBoc3ZWKQogIGxjaDJoc3YobGNoTCwgbGNoQywgbGNoSCwgZmFsbGJhY2todWUpCiAgaHN2Mnh5eihoc3ZILCBoc3ZTLCBoc3ZWKQogIHh5ejJoc3YoeHl6WCwgeHl6WSwgeHl6WiwgZmFsbGJhY2todWUpCiAgeHl6MmxjaCh4eXpYLCB4eXpZLCB4eXpaKQogIGxjaDJ4eXoobGNoTCwgbGNoQywgbGNoSCkKICBoZXgyaHNsKGhleCkKICBoZXgyaHN2KGhleCkKICBoZXgyaHdiKGhleCkKICBoZXgybGFiKGhleCkKICBoZXgybGNoKGhleCkKICBoZXgyeHl6KGhleCkKICBoc2wyaGV4KGhzbEgsIGhzbFMsIGhzbEwpCiAgaHN2MmhleChoc3ZILCBoc3ZTLCBoc3ZWKQogIGh3YjJoZXgoaHdiSCwgaHdiVywgaHdiQikKICBsYWIyaGV4KGxhYkwsIGxhYkEsIGxhYkIpCiAgbGNoMmhleChsY2hMLCBsY2hDLCBsY2hIKQogIHh5ejJoZXgoeHl6WCwgeHl6WSwgeHl6WikKICBoZXgyY2llZGUoaGV4MSwgaGV4MikKICBoc2wyY2llZGUoaHNsMSwgaHNsMikKICBoc3YyY2llZGUoaHN2MSwgaHN2MikKICBod2IyY2llZGUoaHdiMSwgaHdiMikKICBrZXl3b3JkMmNpZWRlKGtleXdvcmQxLCBrZXl3b3JkMikKICBsY2gyY2llZGUobGNoMSwgbGNoMikKICByZ2IyY2llZGUocmdiMSwgcmdiMikKICB4eXoyY2llZGUoeHl6MSwgeHl6MikKICBoZXgyY29udHJhc3QoaGV4MSwgaGV4MikKICBoc2wyY29udHJhc3QoaHNsMSwgaHNsMikKICBoc3YyY29udHJhc3QoaHN2MSwgaHN2MikKICBod2IyY29udHJhc3QoaHdiMSwgaHdiMikKICBrZXl3b3JkMmNvbnRyYXN0KGtleXdvcmQxLCBrZXl3b3JkMikKICBsYWIyY29udHJhc3QobGFiMSwgbGFiMikKICBsY2gyY29udHJhc3QobGNoMSwgbGNoMikKICB4eXoyY29udHJhc3QoeHl6MSwgeHl6MikKICBrZXl3b3JkMmhleChrZXl3b3JkKQogIGtleXdvcmQyaHNsKGtleXdvcmQpCiAga2V5d29yZDJoc3Yoa2V5d29yZCkKICBrZXl3b3JkMmh3YihrZXl3b3JkKQogIGtleXdvcmQybGFiKGtleXdvcmQpCiAga2V5d29yZDJsY2goa2V5d29yZCkKICBrZXl3b3JkMnh5eihrZXl3b3JkKQAAAAAAAAAA4QoAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 24769,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1432,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAC0/AAAAAAAALj8AAAAAAAAAAAAALj8AAAAAAAAvPwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0/AAAAAAAALT8AAAAAAAAAAAAAAADwvw"
				],
				[
					1435,
					2,
					"left_delete",
					null,
					"AgAAAC4/AAAAAAAALj8AAAAAAAABAAAALy0/AAAAAAAALT8AAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8/AAAAAAAALz8AAAAAAAAAAAAAAADwvw"
				],
				[
					1451,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAALw/AAAAAAAAvT8AAAAAAAAAAAAAvT8AAAAAAAC+PwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALw/AAAAAAAAvD8AAAAAAAAAAAAAAADwvw"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4/AAAAAAAAvz8AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4/AAAAAAAAvj8AAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAALcEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC5BAAAAAAAAAAAAAC5BAAAAAAAALoEAAAAAAAAAAAAALoEAAAAAAAAuwQAAAAAAAAAAAAAuwQAAAAAAAC8BAAAAAAAAAAAAAC8BAAAAAAAAL0EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BAAAAAAAALcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0EAAAAAAAAvgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9BAAAAAAAAL0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL4EAAAAAAAAwAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+BAAAAAAAAL4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAL8EAAAAAAAAyAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/BAAAAAAAAL8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAMkEAAAAAAAAygQAAAAAAAAAAAAAygQAAAAAAADLBAAAAAAAAAAAAADLBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAAzQQAAAAAAAAAAAAAzQQAAAAAAADOBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJBAAAAAAAAMkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM4EAAAAAAAAzwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBAAAAAAAAM4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAM8EAAAAAAAA0QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBAAAAAAAAM8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAANAEAAAAAAAA0QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQBAAAAAAAANAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAANAEAAAAAAAA0AQAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRBAAAAAAAANEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "./midi-dt"
					},
					"CQAAANAEAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADSBAAAAAAAAAAAAADSBAAAAAAAANMEAAAAAAAAAAAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANYEAAAAAAAAAAAAANYEAAAAAAAA1wQAAAAAAAAAAAAA1wQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANkEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQBAAAAAAAANAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAANgEAAAAAAAA2AQAAAAAAAABAAAAdNcEAAAAAAAA1wQAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZBAAAAAAAANkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "tp"
					},
					"AgAAANcEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXBAAAAAAAANcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAANgEAAAAAAAA2AQAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZBAAAAAAAANkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "cp.js"
					},
					"BQAAANgEAAAAAAAA2QQAAAAAAAAAAAAA2QQAAAAAAADaBAAAAAAAAAAAAADaBAAAAAAAANsEAAAAAAAAAAAAANsEAAAAAAAA3AQAAAAAAAAAAAAA3AQAAAAAAADdBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYBAAAAAAAANgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeBAAAAAAAAN4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAN8EAAAAAAAA4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfBAAAAAAAAN8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAJE0AAAAAAAAkjQAAAAAAAAAAAAAkjQAAAAAAACWNAAAAAAAAAAAAACWNAAAAAAAAJc0AAAAAAAAAAAAAJc0AAAAAAAAmzQAAAAAAAAAAAAAkjQAAAAAAACSNAAAAAAAAAQAAAAgICAglzQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJw0AAAAAAAAAAAAAJM0AAAAAAAAkzQAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRNAAAAAAAAJE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAJY0AAAAAAAAljQAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYNAAAAAAAAJg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "ket"
					},
					"AwAAAJY0AAAAAAAAlzQAAAAAAAAAAAAAlzQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJk0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWNAAAAAAAAJY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJk0AAAAAAAAmjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZNAAAAAAAAJk0AAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					4,
					"left_delete",
					null,
					"BAAAAJk0AAAAAAAAmTQAAAAAAAABAAAAIJg0AAAAAAAAmDQAAAAAAAABAAAAdJc0AAAAAAAAlzQAAAAAAAABAAAAZZY0AAAAAAAAljQAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaNAAAAAAAAJo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJY0AAAAAAAAlzQAAAAAAAAAAAAAlzQAAAAAAACYNAAAAAAAAAAAAACYNAAAAAAAAJk0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWNAAAAAAAAJY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " midi"
					},
					"BQAAAJk0AAAAAAAAmjQAAAAAAAAAAAAAmjQAAAAAAACbNAAAAAAAAAAAAACbNAAAAAAAAJw0AAAAAAAAAAAAAJw0AAAAAAAAnTQAAAAAAAAAAAAAnTQAAAAAAACeNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZNAAAAAAAAJk0AAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJ40AAAAAAAAnzQAAAAAAAAAAAAAnzQAAAAAAACgNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeNAAAAAAAAJ40AAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAKA0AAAAAAAAoTQAAAAAAAAAAAAAoTQAAAAAAACiNAAAAAAAAAAAAACiNAAAAAAAAKM0AAAAAAAAAAAAAKM0AAAAAAAApDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgNAAAAAAAAKA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " M"
					},
					"AgAAAKQ0AAAAAAAApTQAAAAAAAAAAAAApTQAAAAAAACmNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkNAAAAAAAAKQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAAKU0AAAAAAAApTQAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmNAAAAAAAAKY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "TCPCli"
					},
					"BgAAAKU0AAAAAAAApjQAAAAAAAAAAAAApjQAAAAAAACnNAAAAAAAAAAAAACnNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAAqTQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAACqNAAAAAAAAKs0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClNAAAAAAAAKU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "ent"
					},
					"AwAAAKs0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACtNAAAAAAAAAAAAACtNAAAAAAAAK40AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrNAAAAAAAAKs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK40AAAAAAAAsDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuNAAAAAAAAK40AAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAK80AAAAAAAAsTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvNAAAAAAAAK80AAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"paste",
					null,
					"AQAAALA0AAAAAAAAxDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwNAAAAAAAALA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMY0AAAAAAAAxzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGNAAAAAAAAMY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n\ncons"
					},
					"CQAAAMc0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADKNAAAAAAAAAAAAADKNAAAAAAAAMs0AAAAAAAAAAAAAMs0AAAAAAAAzTQAAAAAAAAAAAAAyDQAAAAAAADINAAAAAAAAAIAAAAgIMs0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADNNAAAAAAAAAAAAADNNAAAAAAAAM40AAAAAAAAAAAAAM40AAAAAAAAzzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHNAAAAAAAAMc0AAAAAAAA////////738"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "log-"
					},
					"BQAAAMs0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADMNAAAAAAAAAQAAABjb25zzDQAAAAAAADNNAAAAAAAAAAAAADNNAAAAAAAAM40AAAAAAAAAAAAAM40AAAAAAAAzzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPNAAAAAAAAMs0AAAAAAAAAAAAAAAAMkA"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAM40AAAAAAAAzjQAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPNAAAAAAAAM80AAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": ".info"
					},
					"BQAAAM40AAAAAAAAzzQAAAAAAAAAAAAAzzQAAAAAAADQNAAAAAAAAAAAAADQNAAAAAAAANE0AAAAAAAAAAAAANE0AAAAAAAA0jQAAAAAAAAAAAAA0jQAAAAAAADTNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADONAAAAAAAAM40AAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANM0AAAAAAAA1TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTNAAAAAAAANM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "^"
					},
					"AQAAANQ0AAAAAAAA1TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUNAAAAAAAANQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"left_delete",
					null,
					"AQAAANQ0AAAAAAAA1DQAAAAAAAABAAAAXg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVNAAAAAAAANU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANQ0AAAAAAAA1jQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUNAAAAAAAANQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "midi"
					},
					"BAAAANU0AAAAAAAA1jQAAAAAAAAAAAAA1jQAAAAAAADXNAAAAAAAAAAAAADXNAAAAAAAANg0AAAAAAAAAAAAANg0AAAAAAAA2TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVNAAAAAAAANU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " client:"
					},
					"CAAAANk0AAAAAAAA2jQAAAAAAAAAAAAA2jQAAAAAAADbNAAAAAAAAAAAAADbNAAAAAAAANw0AAAAAAAAAAAAANw0AAAAAAAA3TQAAAAAAAAAAAAA3TQAAAAAAADeNAAAAAAAAAAAAADeNAAAAAAAAN80AAAAAAAAAAAAAN80AAAAAAAA4DQAAAAAAAAAAAAA4DQAAAAAAADhNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZNAAAAAAAANk0AAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOI0AAAAAAAA4zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiNAAAAAAAAOI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " midi"
					},
					"BQAAAOM0AAAAAAAA5DQAAAAAAAAAAAAA5DQAAAAAAADlNAAAAAAAAAAAAADlNAAAAAAAAOY0AAAAAAAAAAAAAOY0AAAAAAAA5zQAAAAAAAAAAAAA5zQAAAAAAADoNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjNAAAAAAAAOM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOk0AAAAAAAA6jQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpNAAAAAAAAOk0AAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrNAAAAAAAAOs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMY0AAAAAAAAxzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGNAAAAAAAAMY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " event"
					},
					"BgAAAMc0AAAAAAAAyDQAAAAAAAAAAAAAyDQAAAAAAADJNAAAAAAAAAAAAADJNAAAAAAAAMo0AAAAAAAAAAAAAMo0AAAAAAAAyzQAAAAAAAAAAAAAyzQAAAAAAADMNAAAAAAAAAAAAADMNAAAAAAAAM00AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHNAAAAAAAAMc0AAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAM00AAAAAAAAzjQAAAAAAAAAAAAAzjQAAAAAAADPNAAAAAAAAAAAAADPNAAAAAAAANA0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNNAAAAAAAAM00AAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANA0AAAAAAAA0TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQNAAAAAAAANA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANE0AAAAAAAA0zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRNAAAAAAAANE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANI0AAAAAAAA0zQAAAAAAAAAAAAA0zQAAAAAAADVNAAAAAAAAAAAAADVNAAAAAAAANY0AAAAAAAAAAAAANY0AAAAAAAA2DQAAAAAAAAAAAAA0zQAAAAAAADTNAAAAAAAAAIAAAAgINM0AAAAAAAA1zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSNAAAAAAAANI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAANc0AAAAAAAA2DQAAAAAAAAAAAAA2DQAAAAAAADZNAAAAAAAAAAAAADZNAAAAAAAANo0AAAAAAAAAAAAANo0AAAAAAAA2zQAAAAAAAAAAAAA2zQAAAAAAADcNAAAAAAAAAAAAADcNAAAAAAAAN00AAAAAAAAAAAAAN00AAAAAAAA3jQAAAAAAAAAAAAA3jQAAAAAAADfNAAAAAAAAAAAAADfNAAAAAAAAOA0AAAAAAAAAAAAAOA0AAAAAAAA4TQAAAAAAAAAAAAA4TQAAAAAAADiNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXNAAAAAAAANc0AAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOI0AAAAAAAA5DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiNAAAAAAAAOI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOM0AAAAAAAA5TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjNAAAAAAAAOM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "MIDI"
					},
					"BAAAAOQ0AAAAAAAA5TQAAAAAAAAAAAAA5TQAAAAAAADmNAAAAAAAAAAAAADmNAAAAAAAAOc0AAAAAAAAAAAAAOc0AAAAAAAA6DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkNAAAAAAAAOQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " event"
					},
					"BgAAAOg0AAAAAAAA6TQAAAAAAAAAAAAA6TQAAAAAAADqNAAAAAAAAAAAAADqNAAAAAAAAOs0AAAAAAAAAAAAAOs0AAAAAAAA7DQAAAAAAAAAAAAA7DQAAAAAAADtNAAAAAAAAAAAAADtNAAAAAAAAO40AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoNAAAAAAAAOg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO80AAAAAAAA8DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvNAAAAAAAAO80AAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " event"
					},
					"BgAAAPA0AAAAAAAA8TQAAAAAAAAAAAAA8TQAAAAAAADyNAAAAAAAAAAAAADyNAAAAAAAAPM0AAAAAAAAAAAAAPM0AAAAAAAA9DQAAAAAAAAAAAAA9DQAAAAAAAD1NAAAAAAAAAAAAAD1NAAAAAAAAPY0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwNAAAAAAAAPA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPc0AAAAAAAA+DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3NAAAAAAAAPc0AAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\ncon"
					},
					"BgAAANI0AAAAAAAA0zQAAAAAAAAAAAAA0zQAAAAAAADVNAAAAAAAAAAAAADVNAAAAAAAANc0AAAAAAAAAAAAANc0AAAAAAAA2DQAAAAAAAAAAAAA2DQAAAAAAADZNAAAAAAAAAAAAADZNAAAAAAAANo0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSNAAAAAAAANI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					2,
					"left_delete",
					null,
					"AgAAANk0AAAAAAAA2TQAAAAAAAABAAAAbtg0AAAAAAAA2DQAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaNAAAAAAAANo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "onst"
					},
					"BAAAANg0AAAAAAAA2TQAAAAAAAAAAAAA2TQAAAAAAADaNAAAAAAAAAAAAADaNAAAAAAAANs0AAAAAAAAAAAAANs0AAAAAAAA3DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYNAAAAAAAANg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANw0AAAAAAAA3TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcNAAAAAAAANw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAN00AAAAAAAA3zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdNAAAAAAAAN00AAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN40AAAAAAAA3zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeNAAAAAAAAN40AAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"right_delete",
					null,
					"AQAAAN80AAAAAAAA3zQAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfNAAAAAAAAN80AAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "type,"
					},
					"BQAAAN80AAAAAAAA4DQAAAAAAAAAAAAA4DQAAAAAAADhNAAAAAAAAAAAAADhNAAAAAAAAOI0AAAAAAAAAAAAAOI0AAAAAAAA4zQAAAAAAAAAAAAA4zQAAAAAAADkNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfNAAAAAAAAN80AAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " param¬ß1"
					},
					"CAAAAOQ0AAAAAAAA5TQAAAAAAAAAAAAA5TQAAAAAAADmNAAAAAAAAAAAAADmNAAAAAAAAOc0AAAAAAAAAAAAAOc0AAAAAAAA6DQAAAAAAAAAAAAA6DQAAAAAAADpNAAAAAAAAAAAAADpNAAAAAAAAOo0AAAAAAAAAAAAAOo0AAAAAAAA6zQAAAAAAAAAAAAA6zQAAAAAAADsNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkNAAAAAAAAOQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					2,
					"left_delete",
					null,
					"AgAAAOs0AAAAAAAA6zQAAAAAAAABAAAAMeo0AAAAAAAA6jQAAAAAAAACAAAAwqc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsNAAAAAAAAOw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "1,"
					},
					"AgAAAOo0AAAAAAAA6zQAAAAAAAAAAAAA6zQAAAAAAADsNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqNAAAAAAAAOo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " pa"
					},
					"AwAAAOw0AAAAAAAA7TQAAAAAAAAAAAAA7TQAAAAAAADuNAAAAAAAAAAAAADuNAAAAAAAAO80AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsNAAAAAAAAOw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					3,
					"left_delete",
					null,
					"AwAAAO40AAAAAAAA7jQAAAAAAAABAAAAYe00AAAAAAAA7TQAAAAAAAABAAAAcOw0AAAAAAAA7DQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvNAAAAAAAAO80AAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " param2,"
					},
					"CAAAAOw0AAAAAAAA7TQAAAAAAAAAAAAA7TQAAAAAAADuNAAAAAAAAAAAAADuNAAAAAAAAO80AAAAAAAAAAAAAO80AAAAAAAA8DQAAAAAAAAAAAAA8DQAAAAAAADxNAAAAAAAAAAAAADxNAAAAAAAAPI0AAAAAAAAAAAAAPI0AAAAAAAA8zQAAAAAAAAAAAAA8zQAAAAAAAD0NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsNAAAAAAAAOw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQ0AAAAAAAA9TQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0NAAAAAAAAPQ0AAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "channel"
					},
					"BwAAAPU0AAAAAAAA9jQAAAAAAAAAAAAA9jQAAAAAAAD3NAAAAAAAAAAAAAD3NAAAAAAAAPg0AAAAAAAAAAAAAPg0AAAAAAAA+TQAAAAAAAAAAAAA+TQAAAAAAAD6NAAAAAAAAAAAAAD6NAAAAAAAAPs0AAAAAAAAAAAAAPs0AAAAAAAA/DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1NAAAAAAAAPU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAPw0AAAAAAAA/TQAAAAAAAAAAAAA/TQAAAAAAAD+NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8NAAAAAAAAPw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAP40AAAAAAAA/zQAAAAAAAAAAAAA/zQAAAAAAAAANQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+NAAAAAAAAP40AAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " event;"
					},
					"BwAAAAA1AAAAAAAAATUAAAAAAAAAAAAAATUAAAAAAAACNQAAAAAAAAAAAAACNQAAAAAAAAM1AAAAAAAAAAAAAAM1AAAAAAAABDUAAAAAAAAAAAAABDUAAAAAAAAFNQAAAAAAAAAAAAAFNQAAAAAAAAY1AAAAAAAAAAAAAAY1AAAAAAAABzUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAc1AAAAAAAACDUAAAAAAAAAAAAACDUAAAAAAAAMNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHNQAAAAAAAAc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BgAAAAw1AAAAAAAADTUAAAAAAAAAAAAADTUAAAAAAAARNQAAAAAAAAAAAAAINQAAAAAAAAg1AAAAAAAABAAAACAgICANNQAAAAAAAA41AAAAAAAAAAAAAA41AAAAAAAADzUAAAAAAAAAAAAADzUAAAAAAAAQNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMNQAAAAAAAAw1AAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " control"
					},
					"CAAAABA1AAAAAAAAETUAAAAAAAAAAAAAETUAAAAAAAASNQAAAAAAAAAAAAASNQAAAAAAABM1AAAAAAAAAAAAABM1AAAAAAAAFDUAAAAAAAAAAAAAFDUAAAAAAAAVNQAAAAAAAAAAAAAVNQAAAAAAABY1AAAAAAAAAAAAABY1AAAAAAAAFzUAAAAAAAAAAAAAFzUAAAAAAAAYNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQNQAAAAAAABA1AAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABg1AAAAAAAAGTUAAAAAAAAAAAAAGTUAAAAAAAAaNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYNQAAAAAAABg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " channel"
					},
					"CAAAABo1AAAAAAAAGzUAAAAAAAAAAAAAGzUAAAAAAAAcNQAAAAAAAAAAAAAcNQAAAAAAAB01AAAAAAAAAAAAAB01AAAAAAAAHjUAAAAAAAAAAAAAHjUAAAAAAAAfNQAAAAAAAAAAAAAfNQAAAAAAACA1AAAAAAAAAAAAACA1AAAAAAAAITUAAAAAAAAAAAAAITUAAAAAAAAiNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaNQAAAAAAABo1AAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " <<"
					},
					"AwAAACI1AAAAAAAAIzUAAAAAAAAAAAAAIzUAAAAAAAAkNQAAAAAAAAAAAAAkNQAAAAAAACU1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiNQAAAAAAACI1AAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " 7)"
					},
					"AwAAACU1AAAAAAAAJjUAAAAAAAAAAAAAJjUAAAAAAAAnNQAAAAAAAAAAAAAnNQAAAAAAACg1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlNQAAAAAAACU1AAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAABs1AAAAAAAAHDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbNQAAAAAAABs1AAAAAAAAAAAAAABAZEA"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAACk1AAAAAAAAKjUAAAAAAAAAAAAAKjUAAAAAAAArNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApNQAAAAAAACk1AAAAAAAA////////738"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " paraj"
					},
					"BgAAACs1AAAAAAAALDUAAAAAAAAAAAAALDUAAAAAAAAtNQAAAAAAAAAAAAAtNQAAAAAAAC41AAAAAAAAAAAAAC41AAAAAAAALzUAAAAAAAAAAAAALzUAAAAAAAAwNQAAAAAAAAAAAAAwNQAAAAAAADE1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArNQAAAAAAACs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAADA1AAAAAAAAMDUAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxNQAAAAAAADE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "m1;"
					},
					"AwAAADA1AAAAAAAAMTUAAAAAAAAAAAAAMTUAAAAAAAAyNQAAAAAAAAAAAAAyNQAAAAAAADM1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwNQAAAAAAADA1AAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAADM1AAAAAAAANDUAAAAAAAAAAAAANDUAAAAAAAA4NQAAAAAAAAAAAAA4NQAAAAAAADk1AAAAAAAAAAAAADk1AAAAAAAAOjUAAAAAAAAAAAAAOjUAAAAAAAA7NQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzNQAAAAAAADM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAADs1AAAAAAAAPDUAAAAAAAAAAAAAPDUAAAAAAAA9NQAAAAAAAAAAAAA9NQAAAAAAAD41AAAAAAAAAAAAAD41AAAAAAAAPzUAAAAAAAAAAAAAPzUAAAAAAABANQAAAAAAAAAAAABANQAAAAAAAEE1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7NQAAAAAAADs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEE1AAAAAAAAQjUAAAAAAAAAAAAAQjUAAAAAAABDNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBNQAAAAAAAEE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " param2;"
					},
					"CAAAAEM1AAAAAAAARDUAAAAAAAAAAAAARDUAAAAAAABFNQAAAAAAAAAAAABFNQAAAAAAAEY1AAAAAAAAAAAAAEY1AAAAAAAARzUAAAAAAAAAAAAARzUAAAAAAABINQAAAAAAAAAAAABINQAAAAAAAEk1AAAAAAAAAAAAAEk1AAAAAAAASjUAAAAAAAAAAAAASjUAAAAAAABLNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDNQAAAAAAAEM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEs1AAAAAAAATDUAAAAAAAAAAAAATDUAAAAAAABQNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLNQAAAAAAAEs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AwAAAG81AAAAAAAAbzUAAAAAAAAFAAAAZXZlbnRvNQAAAAAAAHY1AAAAAAAAAAAAAEw1AAAAAAAATDUAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvNQAAAAAAAHQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGw1AAAAAAAAbTUAAAAAAAAAAAAAbTUAAAAAAABtNQAAAAAAAAUAAABldmVudA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsNQAAAAAAAHE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"paste",
					null,
					"AQAAAG01AAAAAAAAdDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtNQAAAAAAAG01AAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAHQ1AAAAAAAAdTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0NQAAAAAAAHQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " va"
					},
					"AwAAAHU1AAAAAAAAdjUAAAAAAAAAAAAAdjUAAAAAAAB3NQAAAAAAAAAAAAB3NQAAAAAAAHg1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1NQAAAAAAAHU1AAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					4,
					"left_delete",
					null,
					"BAAAAHc1AAAAAAAAdzUAAAAAAAABAAAAYXY1AAAAAAAAdjUAAAAAAAABAAAAdnU1AAAAAAAAdTUAAAAAAAABAAAAIHQ1AAAAAAAAdDUAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4NQAAAAAAAHg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAHQ1AAAAAAAAdTUAAAAAAAAAAAAAdTUAAAAAAAB2NQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0NQAAAAAAAHQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					2,
					"left_delete",
					null,
					"AgAAAHU1AAAAAAAAdTUAAAAAAAABAAAALHQ1AAAAAAAAdDUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2NQAAAAAAAHY1AAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHQ1AAAAAAAAdTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0NQAAAAAAAHQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAHU1AAAAAAAAdjUAAAAAAAAAAAAAdjUAAAAAAAB3NQAAAAAAAAAAAAB3NQAAAAAAAHg1AAAAAAAAAAAAAHg1AAAAAAAAeTUAAAAAAAAAAAAAeTUAAAAAAAB6NQAAAAAAAAAAAAB6NQAAAAAAAHs1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1NQAAAAAAAHU1AAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHs1AAAAAAAAfDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7NQAAAAAAAHs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL8BAAAAAAAAwAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AQAAAAAAAL8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " memoize"
					},
					"CAAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAADCAQAAAAAAAMMBAAAAAAAAAAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAQAAAAAAAMABAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "\n\nlet"
					},
					"CAAAAJw0AAAAAAAAnTQAAAAAAAAAAAAAnTQAAAAAAAChNAAAAAAAAAAAAAChNAAAAAAAAKI0AAAAAAAAAAAAAKI0AAAAAAAApjQAAAAAAAAAAAAAnTQAAAAAAACdNAAAAAAAAAQAAAAgICAgojQAAAAAAACjNAAAAAAAAAAAAACjNAAAAAAAAKQ0AAAAAAAAAAAAAKQ0AAAAAAAApTQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcNAAAAAAAAJw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": " controlMap"
					},
					"CwAAAKU0AAAAAAAApjQAAAAAAAAAAAAApjQAAAAAAACnNAAAAAAAAAAAAACnNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAAqTQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAACqNAAAAAAAAKs0AAAAAAAAAAAAAKs0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACtNAAAAAAAAAAAAACtNAAAAAAAAK40AAAAAAAAAAAAAK40AAAAAAAArzQAAAAAAAAAAAAArzQAAAAAAACwNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClNAAAAAAAAKU0AAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALA0AAAAAAAAsTQAAAAAAAAAAAAAsTQAAAAAAACyNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwNAAAAAAAALA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALI0AAAAAAAAszQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyNAAAAAAAALI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"paste",
					null,
					"AQAAALM0AAAAAAAAujQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzNAAAAAAAALM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					7,
					"left_delete",
					null,
					"BwAAALk0AAAAAAAAuTQAAAAAAAABAAAAbLg0AAAAAAAAuDQAAAAAAAABAAAAb7c0AAAAAAAAtzQAAAAAAAABAAAAcrY0AAAAAAAAtjQAAAAAAAABAAAAdLU0AAAAAAAAtTQAAAAAAAABAAAAbrQ0AAAAAAAAtDQAAAAAAAABAAAAb7M0AAAAAAAAszQAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6NAAAAAAAALo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "memoize"
					},
					"BwAAALM0AAAAAAAAtDQAAAAAAAAAAAAAtDQAAAAAAAC1NAAAAAAAAAAAAAC1NAAAAAAAALY0AAAAAAAAAAAAALY0AAAAAAAAtzQAAAAAAAAAAAAAtzQAAAAAAAC4NAAAAAAAAAAAAAC4NAAAAAAAALk0AAAAAAAAAAAAALk0AAAAAAAAujQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzNAAAAAAAALM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALo0AAAAAAAAvDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6NAAAAAAAALo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "control"
					},
					"BwAAALs0AAAAAAAAvDQAAAAAAAAAAAAAvDQAAAAAAAC9NAAAAAAAAAAAAAC9NAAAAAAAAL40AAAAAAAAAAAAAL40AAAAAAAAvzQAAAAAAAAAAAAAvzQAAAAAAADANAAAAAAAAAAAAADANAAAAAAAAME0AAAAAAAAAAAAAME0AAAAAAAAwjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7NAAAAAAAALs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMI0AAAAAAAAwzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCNAAAAAAAAMI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAMI0AAAAAAAAwjQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDNAAAAAAAAMM0AAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "Numb"
					},
					"BAAAAMI0AAAAAAAAwzQAAAAAAAAAAAAAwzQAAAAAAADENAAAAAAAAAAAAADENAAAAAAAAMU0AAAAAAAAAAAAAMU0AAAAAAAAxjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCNAAAAAAAAMI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMY0AAAAAAAAxzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGNAAAAAAAAMY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"left_delete",
					null,
					"AQAAAMY0AAAAAAAAxjQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHNAAAAAAAAMc0AAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAMY0AAAAAAAAxzQAAAAAAAAAAAAAxzQAAAAAAADINAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGNAAAAAAAAMY0AAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAMg0AAAAAAAAyTQAAAAAAAAAAAAAyTQAAAAAAADKNAAAAAAAAAAAAADKNAAAAAAAAMs0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADINAAAAAAAAMg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMs0AAAAAAAAzDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLNAAAAAAAAMs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMw0AAAAAAAAzjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMNAAAAAAAAMw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM00AAAAAAAAzjQAAAAAAAAAAAAAzjQAAAAAAADSNAAAAAAAAAAAAADSNAAAAAAAANM0AAAAAAAAAAAAANM0AAAAAAAA1zQAAAAAAAAAAAAAzjQAAAAAAADONAAAAAAAAAQAAAAgICAgzjQAAAAAAADUNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNNAAAAAAAAM00AAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAJ00AAAAAAAAnjQAAAAAAAAAAAAAzzQAAAAAAADPNAAAAAAAAAYAAAAgICAgICCeNAAAAAAAAJ80AAAAAAAAAAAAAJ80AAAAAAAAoDQAAAAAAAAAAAAAoDQAAAAAAAChNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdNAAAAAAAAJ00AAAAAAAAAAAAAAAAS0A"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKE0AAAAAAAAojQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChNAAAAAAAAKE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "controlInde"
					},
					"CwAAAKI0AAAAAAAAozQAAAAAAAAAAAAAozQAAAAAAACkNAAAAAAAAAAAAACkNAAAAAAAAKU0AAAAAAAAAAAAAKU0AAAAAAAApjQAAAAAAAAAAAAApjQAAAAAAACnNAAAAAAAAAAAAACnNAAAAAAAAKg0AAAAAAAAAAAAAKg0AAAAAAAAqTQAAAAAAAAAAAAAqTQAAAAAAACqNAAAAAAAAAAAAACqNAAAAAAAAKs0AAAAAAAAAAAAAKs0AAAAAAAArDQAAAAAAAAAAAAArDQAAAAAAACtNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiNAAAAAAAAKI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAK00AAAAAAAArjQAAAAAAAAAAAAArjQAAAAAAACvNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtNAAAAAAAAK00AAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					2,
					"left_delete",
					null,
					"AgAAAK40AAAAAAAArjQAAAAAAAABAAAAeK00AAAAAAAArTQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvNAAAAAAAAK80AAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAK00AAAAAAAArjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtNAAAAAAAAK00AAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " ?="
					},
					"AwAAAK40AAAAAAAArzQAAAAAAAAAAAAArzQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALE0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuNAAAAAAAAK40AAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALE0AAAAAAAAsjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxNAAAAAAAALE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					3,
					"left_delete",
					null,
					"AwAAALE0AAAAAAAAsTQAAAAAAAABAAAAILA0AAAAAAAAsDQAAAAAAAABAAAAPa80AAAAAAAArzQAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyNAAAAAAAALI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAK80AAAAAAAAsDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvNAAAAAAAAK80AAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAALA0AAAAAAAAsTQAAAAAAAAAAAAAsTQAAAAAAACyNAAAAAAAAAAAAACyNAAAAAAAALM0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwNAAAAAAAALA0AAAAAAAAAAAAAAAA8L8"
				],
				[
					253,
					1,
					"left_delete",
					null,
					"AQAAALE0AAAAAAAAsTQAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyNAAAAAAAALI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAALE0AAAAAAAAsjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxNAAAAAAAALE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"left_delete",
					null,
					"AQAAALE0AAAAAAAAsTQAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyNAAAAAAAALI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAALE0AAAAAAAAsjQAAAAAAAAAAAAAsjQAAAAAAACzNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxNAAAAAAAALE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "\nk"
					},
					"AgAAAJ00AAAAAAAAnjQAAAAAAAAAAAAAnjQAAAAAAACfNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdNAAAAAAAAJ00AAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					1,
					"left_delete",
					null,
					"AQAAAJ40AAAAAAAAnjQAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfNAAAAAAAAJ80AAAAAAAAAAAAAAAA8L8"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJ40AAAAAAAAnzQAAAAAAAAAAAAAnzQAAAAAAACgNAAAAAAAAAAAAACgNAAAAAAAAKE0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeNAAAAAAAAJ40AAAAAAAAAAAAAAAA8L8"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " paramNames"
					},
					"CwAAAKE0AAAAAAAAojQAAAAAAAAAAAAAojQAAAAAAACjNAAAAAAAAAAAAACjNAAAAAAAAKQ0AAAAAAAAAAAAAKQ0AAAAAAAApTQAAAAAAAAAAAAApTQAAAAAAACmNAAAAAAAAAAAAACmNAAAAAAAAKc0AAAAAAAAAAAAAKc0AAAAAAAAqDQAAAAAAAAAAAAAqDQAAAAAAACpNAAAAAAAAAAAAACpNAAAAAAAAKo0AAAAAAAAAAAAAKo0AAAAAAAAqzQAAAAAAAAAAAAAqzQAAAAAAACsNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChNAAAAAAAAKE0AAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKw0AAAAAAAArTQAAAAAAAAAAAAArTQAAAAAAACuNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsNAAAAAAAAKw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " Object.keys"
					},
					"DAAAAK40AAAAAAAArzQAAAAAAAAAAAAArzQAAAAAAACwNAAAAAAAAAAAAACwNAAAAAAAALE0AAAAAAAAAAAAALE0AAAAAAAAsjQAAAAAAAAAAAAAsjQAAAAAAACzNAAAAAAAAAAAAACzNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAAtTQAAAAAAAAAAAAAtTQAAAAAAAC2NAAAAAAAAAAAAAC2NAAAAAAAALc0AAAAAAAAAAAAALc0AAAAAAAAuDQAAAAAAAAAAAAAuDQAAAAAAAC5NAAAAAAAAAAAAAC5NAAAAAAAALo0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuNAAAAAAAAK40AAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALo0AAAAAAAAvDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6NAAAAAAAALo0AAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"insert",
					{
						"characters": "params"
					},
					"BgAAALs0AAAAAAAAvDQAAAAAAAAAAAAAvDQAAAAAAAC9NAAAAAAAAAAAAAC9NAAAAAAAAL40AAAAAAAAAAAAAL40AAAAAAAAvzQAAAAAAAAAAAAAvzQAAAAAAADANAAAAAAAAAAAAADANAAAAAAAAME0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7NAAAAAAAALs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMI0AAAAAAAAwzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCNAAAAAAAAMI0AAAAAAAAAAAAAAAA8L8"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "oara"
					},
					"BQAAAMg0AAAAAAAAyTQAAAAAAAAAAAAAyTQAAAAAAADJNAAAAAAAAAcAAABjb250cm9syTQAAAAAAADKNAAAAAAAAAAAAADKNAAAAAAAAMs0AAAAAAAAAAAAAMs0AAAAAAAAzDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADINAAAAAAAAM80AAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					4,
					"left_delete",
					null,
					"BAAAAMs0AAAAAAAAyzQAAAAAAAABAAAAYco0AAAAAAAAyjQAAAAAAAABAAAAcsk0AAAAAAAAyTQAAAAAAAABAAAAYcg0AAAAAAAAyDQAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMNAAAAAAAAMw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "parm"
					},
					"BAAAAMg0AAAAAAAAyTQAAAAAAAAAAAAAyTQAAAAAAADKNAAAAAAAAAAAAADKNAAAAAAAAMs0AAAAAAAAAAAAAMs0AAAAAAAAzDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADINAAAAAAAAMg0AAAAAAAAAAAAAAAA8L8"
				],
				[
					355,
					1,
					"left_delete",
					null,
					"AQAAAMs0AAAAAAAAyzQAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMNAAAAAAAAMw0AAAAAAAAAAAAAAAA8L8"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "am"
					},
					"AgAAAMs0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADNNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLNAAAAAAAAMs0AAAAAAAAAAAAAAAA8L8"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABA1AAAAAAAAETUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQNQAAAAAAABA1AAAAAAAAAAAAAABAVEA"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAk1AAAAAAAACjUAAAAAAAAAAAAACjUAAAAAAAALNQAAAAAAAAAAAAALNQAAAAAAAAw1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJNQAAAAAAAAk1AAAAAAAAAAAAAACAT0A"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": " param"
					},
					"BgAAAAw1AAAAAAAADTUAAAAAAAAAAAAADTUAAAAAAAAONQAAAAAAAAAAAAAONQAAAAAAAA81AAAAAAAAAAAAAA81AAAAAAAAEDUAAAAAAAAAAAAAEDUAAAAAAAARNQAAAAAAAAAAAAARNQAAAAAAABI1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMNQAAAAAAAAw1AAAAAAAAAAAAAAAA8L8"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABI1AAAAAAAAEzUAAAAAAAAAAAAAEzUAAAAAAAAUNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASNQAAAAAAABI1AAAAAAAAAAAAAAAA8L8"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": " params"
					},
					"BwAAABQ1AAAAAAAAFTUAAAAAAAAAAAAAFTUAAAAAAAAWNQAAAAAAAAAAAAAWNQAAAAAAABc1AAAAAAAAAAAAABc1AAAAAAAAGDUAAAAAAAAAAAAAGDUAAAAAAAAZNQAAAAAAAAAAAAAZNQAAAAAAABo1AAAAAAAAAAAAABo1AAAAAAAAGzUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUNQAAAAAAABQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					371,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABs1AAAAAAAAHTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbNQAAAAAAABs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "paramNamesa"
					},
					"CwAAABw1AAAAAAAAHTUAAAAAAAAAAAAAHTUAAAAAAAAeNQAAAAAAAAAAAAAeNQAAAAAAAB81AAAAAAAAAAAAAB81AAAAAAAAIDUAAAAAAAAAAAAAIDUAAAAAAAAhNQAAAAAAAAAAAAAhNQAAAAAAACI1AAAAAAAAAAAAACI1AAAAAAAAIzUAAAAAAAAAAAAAIzUAAAAAAAAkNQAAAAAAAAAAAAAkNQAAAAAAACU1AAAAAAAAAAAAACU1AAAAAAAAJjUAAAAAAAAAAAAAJjUAAAAAAAAnNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcNQAAAAAAABw1AAAAAAAAAAAAAAAA8L8"
				],
				[
					373,
					2,
					"left_delete",
					null,
					"AgAAACY1AAAAAAAAJjUAAAAAAAABAAAAYSU1AAAAAAAAJTUAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnNQAAAAAAACc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAACU1AAAAAAAAJjUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlNQAAAAAAACU1AAAAAAAAAAAAAAAA8L8"
				],
				[
					375,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACY1AAAAAAAAKDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmNQAAAAAAACY1AAAAAAAAAAAAAAAA8L8"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "++paramIndex"
					},
					"DAAAACc1AAAAAAAAKDUAAAAAAAAAAAAAKDUAAAAAAAApNQAAAAAAAAAAAAApNQAAAAAAACo1AAAAAAAAAAAAACo1AAAAAAAAKzUAAAAAAAAAAAAAKzUAAAAAAAAsNQAAAAAAAAAAAAAsNQAAAAAAAC01AAAAAAAAAAAAAC01AAAAAAAALjUAAAAAAAAAAAAALjUAAAAAAAAvNQAAAAAAAAAAAAAvNQAAAAAAADA1AAAAAAAAAAAAADA1AAAAAAAAMTUAAAAAAAAAAAAAMTUAAAAAAAAyNQAAAAAAAAAAAAAyNQAAAAAAADM1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnNQAAAAAAACc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADU1AAAAAAAANjUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1NQAAAAAAADU1AAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"cut",
					null,
					"AQAAAAk1AAAAAAAACTUAAAAAAAAuAAAAbGV0IHBhcmFtID0gcGFyYW1zW3BhcmFtTmFtZXNbKytwYXJhbUluZGV4XV07Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJNQAAAAAAADc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					2,
					"paste",
					null,
					"AgAAAAk1AAAAAAAANzUAAAAAAAAAAAAANzUAAAAAAABlNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJNQAAAAAAAAk1AAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BQAAABI1AAAAAAAAEzUAAAAAAAAAAAAAEzUAAAAAAAATNQAAAAAAAAoAAAAgPSBwYXJhbXNbEzUAAAAAAAAUNQAAAAAAAAAAAAAUNQAAAAAAABU1AAAAAAAAAAAAABU1AAAAAAAAFjUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASNQAAAAAAABw1AAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABY1AAAAAAAAFzUAAAAAAAAAAAAAFzUAAAAAAAAYNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWNQAAAAAAABY1AAAAAAAAAAAAAAAA8L8"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABg1AAAAAAAAGTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYNQAAAAAAABg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					1,
					"left_delete",
					null,
					"AQAAADE1AAAAAAAAMTUAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyNQAAAAAAADI1AAAAAAAAAAAAAAAA8L8"
				],
				[
					412,
					1,
					"left_delete",
					null,
					"AQAAAE81AAAAAAAATzUAAAAAAAAPAAAAc1srK3BhcmFtSW5kZXhd",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPNQAAAAAAAF41AAAAAAAAAAAAAAAA8L8"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAABE2AAAAAAAAEjYAAAAAAAAAAAAAEjYAAAAAAAAWNgAAAAAAAAAAAAAWNgAAAAAAABc2AAAAAAAAAAAAABc2AAAAAAAAGzYAAAAAAAAAAAAAEjYAAAAAAAASNgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARNgAAAAAAABE2AAAAAAAAAAAAAAAA8L8"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\n\ne"
					},
					"BAAAAFE1AAAAAAAAUjUAAAAAAAAAAAAAFDYAAAAAAAAUNgAAAAAAAAQAAAAgICAgUjUAAAAAAABTNQAAAAAAAAAAAABTNQAAAAAAAFQ1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRNQAAAAAAAFE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"left_delete",
					null,
					"AQAAAFM1AAAAAAAAUzUAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUNQAAAAAAAFQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAFM1AAAAAAAAVDUAAAAAAAAAAAAAVDUAAAAAAABVNQAAAAAAAAAAAABVNQAAAAAAAFY1AAAAAAAAAAAAAFY1AAAAAAAAVzUAAAAAAAAAAAAAVzUAAAAAAABYNQAAAAAAAAAAAABYNQAAAAAAAFk1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTNQAAAAAAAFM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAFk1AAAAAAAAWjUAAAAAAAAAAAAAWjUAAAAAAABbNQAAAAAAAAAAAABbNQAAAAAAAFw1AAAAAAAAAAAAAFw1AAAAAAAAXTUAAAAAAAAAAAAAXTUAAAAAAABeNQAAAAAAAAAAAABeNQAAAAAAAF81AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZNQAAAAAAAFk1AAAAAAAAAAAAAAAA8L8"
				],
				[
					469,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAF81AAAAAAAAYDUAAAAAAAAAAAAAYDUAAAAAAABhNQAAAAAAAAAAAABhNQAAAAAAAGI1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfNQAAAAAAAF81AAAAAAAAAAAAAAAA8L8"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGI1AAAAAAAAYzUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiNQAAAAAAAGI1AAAAAAAAAAAAAAAA8L8"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "param.alpha"
					},
					"CwAAAGM1AAAAAAAAZDUAAAAAAAAAAAAAZDUAAAAAAABlNQAAAAAAAAAAAABlNQAAAAAAAGY1AAAAAAAAAAAAAGY1AAAAAAAAZzUAAAAAAAAAAAAAZzUAAAAAAABoNQAAAAAAAAAAAABoNQAAAAAAAGk1AAAAAAAAAAAAAGk1AAAAAAAAajUAAAAAAAAAAAAAajUAAAAAAABrNQAAAAAAAAAAAABrNQAAAAAAAGw1AAAAAAAAAAAAAGw1AAAAAAAAbTUAAAAAAAAAAAAAbTUAAAAAAABuNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjNQAAAAAAAGM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG41AAAAAAAAbzUAAAAAAAAAAAAAbzUAAAAAAABwNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuNQAAAAAAAG41AAAAAAAAAAAAAAAA8L8"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAHA1AAAAAAAAcTUAAAAAAAAAAAAAcTUAAAAAAAByNQAAAAAAAAAAAAByNQAAAAAAAHM1AAAAAAAAAAAAAHM1AAAAAAAAdDUAAAAAAAAAAAAAdDUAAAAAAAB1NQAAAAAAAAAAAAB1NQAAAAAAAHY1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwNQAAAAAAAHA1AAAAAAAAAAAAAAAA8L8"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAHY1AAAAAAAAdzUAAAAAAAAAAAAAdzUAAAAAAAB4NQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2NQAAAAAAAHY1AAAAAAAAAAAAAAAA8L8"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": " 127"
					},
					"BAAAAHg1AAAAAAAAeTUAAAAAAAAAAAAAeTUAAAAAAAB6NQAAAAAAAAAAAAB6NQAAAAAAAHs1AAAAAAAAAAAAAHs1AAAAAAAAfDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4NQAAAAAAAHg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					478,
					1,
					"left_delete",
					null,
					"AQAAAHs1AAAAAAAAezUAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8NQAAAAAAAHw1AAAAAAAA////////738"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "7;"
					},
					"AgAAAHs1AAAAAAAAfDUAAAAAAAAAAAAAfDUAAAAAAAB9NQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7NQAAAAAAAHs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "\ncons"
					},
					"BQAAAFI1AAAAAAAAUzUAAAAAAAAAAAAAUzUAAAAAAABUNQAAAAAAAAAAAABUNQAAAAAAAFU1AAAAAAAAAAAAAFU1AAAAAAAAVjUAAAAAAAAAAAAAVjUAAAAAAABXNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSNQAAAAAAAFI1AAAAAAAAAAAAAAAAAAA"
				],
				[
					490,
					1,
					"insert",
					{
						"characters": "ole.log"
					},
					"BwAAAFc1AAAAAAAAWDUAAAAAAAAAAAAAWDUAAAAAAABZNQAAAAAAAAAAAABZNQAAAAAAAFo1AAAAAAAAAAAAAFo1AAAAAAAAWzUAAAAAAAAAAAAAWzUAAAAAAABcNQAAAAAAAAAAAABcNQAAAAAAAF01AAAAAAAAAAAAAF01AAAAAAAAXjUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXNQAAAAAAAFc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF41AAAAAAAAYDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeNQAAAAAAAF41AAAAAAAAAAAAAAAA8L8"
				],
				[
					492,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAF81AAAAAAAAYTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfNQAAAAAAAF81AAAAAAAAAAAAAAAA8L8"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "control"
					},
					"BwAAAGA1AAAAAAAAYTUAAAAAAAAAAAAAYTUAAAAAAABiNQAAAAAAAAAAAABiNQAAAAAAAGM1AAAAAAAAAAAAAGM1AAAAAAAAZDUAAAAAAAAAAAAAZDUAAAAAAABlNQAAAAAAAAAAAABlNQAAAAAAAGY1AAAAAAAAAAAAAGY1AAAAAAAAZzUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgNQAAAAAAAGA1AAAAAAAAAAAAAAAA8L8"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": " mapop"
					},
					"BgAAAGc1AAAAAAAAaDUAAAAAAAAAAAAAaDUAAAAAAABpNQAAAAAAAAAAAABpNQAAAAAAAGo1AAAAAAAAAAAAAGo1AAAAAAAAazUAAAAAAAAAAAAAazUAAAAAAABsNQAAAAAAAAAAAABsNQAAAAAAAG01AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnNQAAAAAAAGc1AAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					2,
					"left_delete",
					null,
					"AgAAAGw1AAAAAAAAbDUAAAAAAAABAAAAcGs1AAAAAAAAazUAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtNQAAAAAAAG01AAAAAAAAAAAAAAAA8L8"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "ped"
					},
					"AwAAAGs1AAAAAAAAbDUAAAAAAAAAAAAAbDUAAAAAAABtNQAAAAAAAAAAAABtNQAAAAAAAG41AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrNQAAAAAAAGs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					524,
					2,
					"left_delete",
					null,
					"AgAAAFw2AAAAAAAAXDYAAAAAAAABAAAACls2AAAAAAAAWzYAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdNgAAAAAAAF02AAAAAAAAAAAAAAAA8L8"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "\n\nl"
					},
					"BgAAAI82AAAAAAAAkDYAAAAAAAAAAAAAkDYAAAAAAACUNgAAAAAAAAAAAACUNgAAAAAAAJU2AAAAAAAAAAAAAJU2AAAAAAAAmTYAAAAAAAAAAAAAkDYAAAAAAACQNgAAAAAAAAQAAAAgICAglTYAAAAAAACWNgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPNgAAAAAAAI82AAAAAAAA////////738"
				],
				[
					528,
					1,
					"left_delete",
					null,
					"AQAAAJU2AAAAAAAAlTYAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWNgAAAAAAAJY2AAAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "controlMap"
					},
					"CgAAAJU2AAAAAAAAljYAAAAAAAAAAAAAljYAAAAAAACXNgAAAAAAAAAAAACXNgAAAAAAAJg2AAAAAAAAAAAAAJg2AAAAAAAAmTYAAAAAAAAAAAAAmTYAAAAAAACaNgAAAAAAAAAAAACaNgAAAAAAAJs2AAAAAAAAAAAAAJs2AAAAAAAAnDYAAAAAAAAAAAAAnDYAAAAAAACdNgAAAAAAAAAAAACdNgAAAAAAAJ42AAAAAAAAAAAAAJ42AAAAAAAAnzYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVNgAAAAAAAJU2AAAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ82AAAAAAAAoTYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfNgAAAAAAAJ82AAAAAAAAAAAAAAAA8L8"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": "coi"
					},
					"AwAAAKA2AAAAAAAAoTYAAAAAAAAAAAAAoTYAAAAAAACiNgAAAAAAAAAAAACiNgAAAAAAAKM2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgNgAAAAAAAKA2AAAAAAAAAAAAAAAA8L8"
				],
				[
					532,
					1,
					"left_delete",
					null,
					"AQAAAKI2AAAAAAAAojYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjNgAAAAAAAKM2AAAAAAAAAAAAAAAA8L8"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": "ntrol"
					},
					"BQAAAKI2AAAAAAAAozYAAAAAAAAAAAAAozYAAAAAAACkNgAAAAAAAAAAAACkNgAAAAAAAKU2AAAAAAAAAAAAAKU2AAAAAAAApjYAAAAAAAAAAAAApjYAAAAAAACnNgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiNgAAAAAAAKI2AAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKg2AAAAAAAAqjYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoNgAAAAAAAKg2AAAAAAAAAAAAAAAA8L8"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": "vas"
					},
					"AwAAAKk2AAAAAAAAqjYAAAAAAAAAAAAAqjYAAAAAAACrNgAAAAAAAAAAAACrNgAAAAAAAKw2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpNgAAAAAAAKk2AAAAAAAAAAAAAAAA8L8"
				],
				[
					539,
					2,
					"left_delete",
					null,
					"AgAAAKs2AAAAAAAAqzYAAAAAAAABAAAAc6o2AAAAAAAAqjYAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsNgAAAAAAAKw2AAAAAAAAAAAAAAAA8L8"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAKo2AAAAAAAAqzYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqNgAAAAAAAKo2AAAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"left_delete",
					null,
					"AQAAAKo2AAAAAAAAqjYAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrNgAAAAAAAKs2AAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "a√∂ui"
					},
					"BAAAAKo2AAAAAAAAqzYAAAAAAAAAAAAAqzYAAAAAAACsNgAAAAAAAAAAAACsNgAAAAAAAK02AAAAAAAAAAAAAK02AAAAAAAArjYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqNgAAAAAAAKo2AAAAAAAAAAAAAAAA8L8"
				],
				[
					543,
					3,
					"left_delete",
					null,
					"AwAAAK02AAAAAAAArTYAAAAAAAABAAAAaaw2AAAAAAAArDYAAAAAAAABAAAAdas2AAAAAAAAqzYAAAAAAAACAAAAw7Y",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuNgAAAAAAAK42AAAAAAAAAAAAAAAA8L8"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "lue"
					},
					"AwAAAKs2AAAAAAAArDYAAAAAAAAAAAAArDYAAAAAAACtNgAAAAAAAAAAAACtNgAAAAAAAK42AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrNgAAAAAAAKs2AAAAAAAAAAAAAAAA8L8"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK82AAAAAAAAsDYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvNgAAAAAAAK82AAAAAAAAAAAAAAAA8L8"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "'#"
					},
					"AgAAAGg1AAAAAAAAaTUAAAAAAAAAAAAAaTUAAAAAAABqNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoNQAAAAAAAGg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					2,
					"left_delete",
					null,
					"AgAAAGk1AAAAAAAAaTUAAAAAAAABAAAAI2g1AAAAAAAAaDUAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqNQAAAAAAAGo1AAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "#'+controlNumb"
					},
					"DgAAAGg1AAAAAAAAaTUAAAAAAAAAAAAAaTUAAAAAAABqNQAAAAAAAAAAAABqNQAAAAAAAGs1AAAAAAAAAAAAAGs1AAAAAAAAbDUAAAAAAAAAAAAAbDUAAAAAAABtNQAAAAAAAAAAAABtNQAAAAAAAG41AAAAAAAAAAAAAG41AAAAAAAAbzUAAAAAAAAAAAAAbzUAAAAAAABwNQAAAAAAAAAAAABwNQAAAAAAAHE1AAAAAAAAAAAAAHE1AAAAAAAAcjUAAAAAAAAAAAAAcjUAAAAAAABzNQAAAAAAAAAAAABzNQAAAAAAAHQ1AAAAAAAAAAAAAHQ1AAAAAAAAdTUAAAAAAAAAAAAAdTUAAAAAAAB2NQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoNQAAAAAAAGg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "er+'"
					},
					"BAAAAHY1AAAAAAAAdzUAAAAAAAAAAAAAdzUAAAAAAAB4NQAAAAAAAAAAAAB4NQAAAAAAAHk1AAAAAAAAAAAAAHk1AAAAAAAAejUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2NQAAAAAAAHY1AAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHo1AAAAAAAAezUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6NQAAAAAAAHo1AAAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": " o"
					},
					"AgAAAIE1AAAAAAAAgjUAAAAAAAAAAAAAgjUAAAAAAACDNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBNQAAAAAAAIE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					1,
					"left_delete",
					null,
					"AQAAAII1AAAAAAAAgjUAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDNQAAAAAAAIM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert",
					{
						"characters": "to"
					},
					"AgAAAII1AAAAAAAAgzUAAAAAAAAAAAAAgzUAAAAAAACENQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCNQAAAAAAAII1AAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAE02AAAAAAAATjYAAAAAAAAAAAAATjYAAAAAAABONgAAAAAAAAEAAAA3",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNNgAAAAAAAE42AAAAAAAAAAAAAAAA8L8"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": ".tot"
					},
					"BAAAAHg1AAAAAAAAeTUAAAAAAAAAAAAAeTUAAAAAAAB6NQAAAAAAAAAAAAB6NQAAAAAAAHs1AAAAAAAAAAAAAHs1AAAAAAAAfDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4NQAAAAAAAHg1AAAAAAAAAAAAAAAA8L8"
				],
				[
					586,
					1,
					"left_delete",
					null,
					"AQAAAHs1AAAAAAAAezUAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8NQAAAAAAAHw1AAAAAAAAAAAAAAAA8L8"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": "String/("
					},
					"CAAAAHs1AAAAAAAAfDUAAAAAAAAAAAAAfDUAAAAAAAB9NQAAAAAAAAAAAAB9NQAAAAAAAH41AAAAAAAAAAAAAH41AAAAAAAAfzUAAAAAAAAAAAAAfzUAAAAAAACANQAAAAAAAAAAAACANQAAAAAAAIE1AAAAAAAAAAAAAIE1AAAAAAAAgjUAAAAAAAAAAAAAgjUAAAAAAACDNQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7NQAAAAAAAHs1AAAAAAAAAAAAAAAA8L8"
				],
				[
					588,
					2,
					"left_delete",
					null,
					"AgAAAII1AAAAAAAAgjUAAAAAAAABAAAAKIE1AAAAAAAAgTUAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDNQAAAAAAAIM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": "(16)"
					},
					"BAAAAIE1AAAAAAAAgjUAAAAAAAAAAAAAgjUAAAAAAACDNQAAAAAAAAAAAACDNQAAAAAAAIQ1AAAAAAAAAAAAAIQ1AAAAAAAAhTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBNQAAAAAAAIE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJE1AAAAAAAAkjUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRNQAAAAAAAJE1AAAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAJM1AAAAAAAAlDUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTNQAAAAAAAJM1AAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"paste",
					null,
					"AQAAAJQ1AAAAAAAAnTUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUNQAAAAAAAJQ1AAAAAAAAAAAAAAAA8L8"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ41AAAAAAAAnzUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeNQAAAAAAAJ41AAAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHNgAAAAAAAEg2AAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "param.js",
			"settings":
			{
				"buffer_size": 4811,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-midi.js",
			"settings":
			{
				"buffer_size": 4506,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					36,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAJsNAAAAAAAAnA0AAAAAAAAAAAAAnA0AAAAAAACcDQAAAAAAAAIAAAAxNg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDQAAAAAAAJ0NAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAJsNAAAAAAAAmw0AAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcDQAAAAAAAJwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAJsNAAAAAAAAnA0AAAAAAAAAAAAAnA0AAAAAAACdDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDQAAAAAAAJsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAK0MAAAAAAAArgwAAAAAAAAAAAAArgwAAAAAAACvDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtDAAAAAAAAK0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8MAAAAAAAAsAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvDAAAAAAAAK8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					2,
					"left_delete",
					null,
					"AgAAAK8MAAAAAAAArwwAAAAAAAABAAAAIK4MAAAAAAAArgwAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwDAAAAAAAALAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " e.stack"
					},
					"CAAAAK4MAAAAAAAArwwAAAAAAAAAAAAArwwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALEMAAAAAAAAAAAAALEMAAAAAAAAsgwAAAAAAAAAAAAAsgwAAAAAAACzDAAAAAAAAAAAAACzDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAtQwAAAAAAAAAAAAAtQwAAAAAAAC2DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuDAAAAAAAAK4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKYLAAAAAAAApwsAAAAAAAAAAAAApwsAAAAAAACoCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmCwAAAAAAAKYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAKgNAAAAAAAAqg0AAAAAAAAAAAAAmA0AAAAAAACaDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYDQAAAAAAAKgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAIINAAAAAAAAgw0AAAAAAAAAAAAAgw0AAAAAAACDDQAAAAAAAAEAAAAx",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCDQAAAAAAAIMNAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACZEQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IHsgY2xpZW50LCBzZXRMb2csIExMTF9ERUJVRywgTExMX1dBUk4gfSBmcm9tICduZXQnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IE1JRElTdHJlYW0sIE1JRElFdmVudCB9IGZyb20gJy4vbGliL21pZGkuanMnOwppbXBvcnQgeyBxdW90ZSwgdG9TdHJpbmcgfSBmcm9tICcuL2xpYi9taXNjLmpzJzsKCi8qY29uc3QgTUlESV9OT1RFX09GRiA9IDB4ODA7CmNvbnN0IE1JRElfTk9URV9PTiA9IDB4OTA7CmNvbnN0IE1JRElfUE9MWVBIT05JQ19LRVlfUFJFU1NVUkUgPSAweEEwOwpjb25zdCBNSURJX0NPTlRST0xfQ0hBTkdFID0gMHhCMDsKY29uc3QgTUlESV9QUk9HUkFNX0NIQU5HRSA9IDB4QzA7CmNvbnN0IE1JRElfQ0hBTk5FTF9QUkVTU1VSRSA9IDB4RDA7CmNvbnN0IE1JRElfUElUQ0hfQkVORCA9IDB4RTA7CmNvbnN0IE1JRElfU1lTRVggPSAweGYwOwpjb25zdCBNSURJX1NPTkdfUE9TSVRJT04gPSAweGYyOwpjb25zdCBNSURJX1NPTkdfU0VMRUNUID0gMHhmMzsKY29uc3QgTUlESV9UVU5FX1JFUVVFU1QgPSAweGY2Owpjb25zdCBNSURJX0VPWCA9IDB4Zjc7CmNvbnN0IE1JRElfVElNSU5HX0NMT0NLID0gMHhmODsKY29uc3QgTUlESV9TVEFSVCA9IDB4ZmE7CmNvbnN0IE1JRElfQ09OVElOVUUgPSAweGZiOwpjb25zdCBNSURJX1NUT1AgPSAweGZjOwpjb25zdCBNSURJX0FDVElWRV9TRU5TSU5HID0gMHhmZTsKY29uc3QgTUlESV9SRVNFVCA9IDB4ZmYKKi8KLyogTUlESU1lc3NhZ2VMZW5ndGggLS0gaG93IG1hbnkgYnl0ZXMgaW4gYSBtZXNzYWdlPyAqLwpmdW5jdGlvbiBNSURJTWVzc2FnZUxlbmd0aChieXRlKSB7CiAgYnl0ZSAmPSAweGZmOwogIGlmKGJ5dGUgPCAweDgwKSB7CiAgICByZXR1cm4gMDsKICB9IGVsc2UgaWYoYnl0ZSA8IDB4ZjApIHsKICAgIGNvbnN0IGxlbmd0aCA9IFszLCAzLCAzLCAzLCAyLCAyLCAzXTsKICAgIHJldHVybiBsZW5ndGhbKGJ5dGUgLSAweDgwKSA+PiA0XTsKICB9IGVsc2UgewogICAgY29uc3QgbGVuZ3RoID0gWy0xLCAyLCAzLCAyLCAwLCAwLCAxLCAtMSwgMSwgMCwgMSwgMSwgMSwgMCwgMSwgMV07CiAgICByZXR1cm4gbGVuZ3RoW2J5dGUgLSAweGYwXTsKICB9Cn0KCmNsYXNzIE1JRElNZXNzYWdlIGV4dGVuZHMgQXJyYXlCdWZmZXIgewogIGNvbnN0cnVjdG9yKGJ5dGVzKSB7CiAgICBzdXBlcihieXRlcy5sZW5ndGgpOwogICAgbGV0IHU4ID0gbmV3IFVpbnQ4QXJyYXkodGhpcyk7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpKyspIHU4W2ldID0gYnl0ZXNbaV07CiAgfQoKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGNvbW1hbmQoKSB7IHJldHVybiBuZXcgVWludDhBcnJheSh0aGlzKVswXSAmIDB4ZjA7IH0KICAvKiBwcmV0dGllci1pZ25vcmUgKi8gc2V0IGNvbW1hbmQodmFsdWUpIHsgbGV0IGE9bmV3IFVpbnQ4QXJyYXkodGhpcylbMF07IGFbMF0gPSAoYVswXSAmIDB4MGYpIHwgKHZhbHVlICYgMHhmMCk7IH0KCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBjaGFubmVsKCkgeyByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodGhpcylbMF0gJiAweDBmOyB9CiAgLyogcHJldHRpZXItaWdub3JlICovIHNldCBjaGFubmVsKHZhbHVlKSB7IGxldCBhPW5ldyBVaW50OEFycmF5KHRoaXMpWzBdOyBhWzBdID0gKGFbMF0gJiAweGYwKSB8ICh2YWx1ZSAmIDB4MGYpOyB9CgogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgZGF0YSgpIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMsIDEpOyB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMpIHsKICAgIHJldHVybiBgTUlESU1lc3NhZ2UgYCArIGluc3BlY3QoWy4uLm5ldyBVaW50OEFycmF5KHRoaXMpXSwgeyBudW1iZXJCYXNlOiAxNiB9KTsKICB9Cn0KCmZ1bmN0aW9uIE1JRElNZXNzYWdlUmVhZChieXRlQXJyKSB7CiAgbGV0IGxlbjsKICB3aGlsZShieXRlQXJyLmxlbmd0aCAmJiAhKGxlbiA9IE1JRElNZXNzYWdlTGVuZ3RoKGJ5dGVBcnJbMF0pKSkgYnl0ZUFyci5zaGlmdCgpOwogIGlmKGxlbiAmJiBieXRlQXJyLmxlbmd0aCA+PSBsZW4pIHsKICAgIGNvbnNvbGUubG9nKCdNSURJTWVzc2FnZVJlYWQnLCB7IGxlbiB9KTsKICAgIHJldHVybiBuZXcgTUlESU1lc3NhZ2UoYnl0ZUFyci5zcGxpY2UoMCwgbGVuKSk7CiAgfQogIHJldHVybiBudWxsOwp9CgpmdW5jdGlvbiBNSURJTWVzc2FnZURlY29kZShieXRlQXJyKSB7CiAgY29uc3QgY29tbWFuZCA9IGJ5dGVBcnJbMF0gJiAweGYwOwogIGNvbnN0IGNoYW5uZWwgPSBieXRlQXJyWzBdICYgMHgwZjsKICBjb25zdCBsZW4gPSBNSURJTWVzc2FnZUxlbmd0aChieXRlQXJyWzBdKTsKICBjb25zdCBkYXRhID0gYnl0ZUFyci5zbGljZSgxLCBsZW4pOwogIHJldHVybiB7IGNvbW1hbmQsIGNoYW5uZWwsIGRhdGEgfTsKfQoKZnVuY3Rpb24gVENQQ2xpZW50KHVybCkgewogIGxldCByZWN2QnVmID0gW107CiAgbGV0IHN0YXR1cyA9IFtdOwogIHJldHVybiBjbGllbnQodXJsLCB7CiAgICBiaW5hcnk6IHRydWUsCiAgICBvbkNvbm5lY3Qod3MsIHJlcSkgewogICAgICBjb25zb2xlLmxvZygnb25Db25uZWN0JywgeyB3cywgcmVxIH0pOwogICAgfSwKICAgIG9uQ2xvc2Uod3MsIHJlYXNvbikgewogICAgICBjb25zb2xlLmxvZygnb25DbG9zZScsIHsgd3MsIHJlYXNvbiB9KTsKICAgIH0sCiAgICBvbkh0dHAocmVxLCByZXNwKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkh0dHAnLCB7IHJlcSwgcmVzcCB9KTsKICAgIH0sCiAgICBvbkZkKGZkLCByZCwgd3IpIHsKICAgICAgLy9jb25zb2xlLmxvZygnb25GZCcsIGZkLCByZCwgd3IpOwogICAgICBvcy5zZXRSZWFkSGFuZGxlcihmZCwgcmQpOwogICAgICBvcy5zZXRXcml0ZUhhbmRsZXIoZmQsIHdyKTsKICAgIH0sCiAgICBvbk1lc3NhZ2Uod3MsIGRhdGEpIHsKICAgICAgLy9jb25zb2xlLmxvZygnb25NZXNzYWdlJywgeyB3cywgZGF0YSB9KTsKICAgICAgdHJ5IHsKICAgICAgICBsZXQgc3RyZWFtID0gbmV3IE1JRElTdHJlYW0oZGF0YSk7CiAgICAgICAgbGV0IGV2ZW50ID0gTUlESUV2ZW50LnJlYWQoc3RyZWFtLCBzdGF0dXMpOwogICAgICAgIGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB7IGV2ZW50IH0pOwogICAgICB9IGNhdGNoKGUpIHsKICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlLmV4Y2VwdGlvbicsIGUubWVzc2FnZSwgZS5zdGFjayk7CiAgICAgIH0KICAgIH0sCgogICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coJ29uRXJyb3InLCB3cywgZXJyb3IpOwogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogeyBjb21wYWN0OiAyLCBjdXN0b21JbnNwZWN0OiB0cnVlLyosIG51bWJlckJhc2U6IDE2Ki8gfQogIH0pOwogIGNvbnNvbGUubG9nKCdtaWRpJywgT2JqZWN0LmtleXMoeyBNSURJRXZlbnQsIE1JRElTdHJlYW0gfSkpOwoKICBjb25zdCBkZWJ1ZyA9IGZhbHNlOwoKICBzZXRMb2coKChkZWJ1ZyA/IExMTF9ERUJVRyA6IExMTF9XQVJOKSA8PCAxKSAtIDEsIChsZXZlbCwgbXNnKSA9PiB7CiAgICBsZXQgcCA9CiAgICAgIFsnRVJSJywgJ1dBUk4nLCAnTk9USUNFJywgJ0lORk8nLCAnREVCVUcnLCAnUEFSU0VSJywgJ0hFQURFUicsICdFWFQnLCAnQ0xJRU5UJywgJ0xBVEVOQ1knLCAnTUlOTkVUJywgJ1RIUkVBRCddWwogICAgICAgIGxldmVsICYmIE1hdGgubG9nMihsZXZlbCkKICAgICAgXSA/PyBsZXZlbCArICcnOwogICAgbXNnID0gbXNnLnJlcGxhY2UoL1xuL2csICdcXG4nKS5yZXBsYWNlKC9cci9nLCAnXFxyJyk7CgogICAgaWYoIS9QT0xMLy50ZXN0KG1zZykgJiYgL01JTk5FVC8udGVzdChwKSkKICAgICAgaWYoZGVidWcgJiYgLyhjbGllbnR8aHR0cHxyZWFkfHdyaXRlKS9pLnRlc3QobXNnKSkgY29uc29sZS5sb2cocC5wYWRFbmQoOCksIG1zZyk7CiAgfSk7CgogIGxldCB1cmwgPSBhcmdzWzBdID8/ICd0Y3A6Ly8xMjcuMC4wLjE6Njk5OSc7CgogIG9zLnNpZ25hbChvcy5TSUdJTlQsIHVuZGVmaW5lZCk7CiAgb3MudHR5U2V0UmF3KDApOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBiID0gbmV3IEFycmF5QnVmZmVyKDEpOwogICAgbGV0IHIgPSBvcy5yZWFkKDAsIGIsIDAsIDEpOwogICAgaWYociA9PSAxKSB7CiAgICAgIGxldCBbbnVtXSA9IG5ldyBVaW50OEFycmF5KGIpOwogICAgICBsZXQgY2ggPSBTdHJpbmcuZnJvbUNoYXJDb2RlKG51bSk7CiAgICAgIGNvbnNvbGUubG9nKCdSZWFkIGJ5dGUgJywgbnVtLCBgICR7cXVvdGUoY2gsICInIil9YCk7CgogICAgICBpZihudW0gPT0gNCkgc3RkLmV4aXQoMCk7CiAgICB9CiAgfSk7CgogIFRDUENsaWVudCh1cmwpOwp9CgptYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwoAAAAAAAAAAJoRAAAAAAAAAAAAAAAAAAAAAAAAmhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvDwAAAAAAAAMQAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "midi-tcp.js",
			"settings":
			{
				"buffer_size": 4553,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAmREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAHkRAAAAAAAAehEAAAAAAAAAAAAAehEAAAAAAAB6EQAAAAAAACAAAAAKCm1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZEQAAAAAAAHkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "export"
					},
					"BgAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAeDQAAAAAAAAAAAAAeDQAAAAAAAB8NAAAAAAAAAAAAAB8NAAAAAAAAIA0AAAAAAAAAAAAAIA0AAAAAAAAhDQAAAAAAAAAAAAAhDQAAAAAAACINAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcDQAAAAAAABwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACINAAAAAAAAIw0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiDQAAAAAAACINAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "exoirt"
					},
					"BgAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAACtCQAAAAAAAK4JAAAAAAAAAAAAAK4JAAAAAAAArwkAAAAAAAAAAAAArwkAAAAAAACwCQAAAAAAAAAAAACwCQAAAAAAALEJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrCQAAAAAAAKsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEJAAAAAAAAsgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxCQAAAAAAALEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					5,
					"left_delete",
					null,
					"BQAAALEJAAAAAAAAsQkAAAAAAAABAAAAILAJAAAAAAAAsAkAAAAAAAABAAAAdK8JAAAAAAAArwkAAAAAAAABAAAAcq4JAAAAAAAArgkAAAAAAAABAAAAaa0JAAAAAAAArQkAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyCQAAAAAAALIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "port"
					},
					"BAAAAK0JAAAAAAAArgkAAAAAAAAAAAAArgkAAAAAAACvCQAAAAAAAAAAAACvCQAAAAAAALAJAAAAAAAAAAAAALAJAAAAAAAAsQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtCQAAAAAAAK0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEJAAAAAAAAsgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxCQAAAAAAALEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					2,
					"cut",
					null,
					"AgAAAKsJAAAAAAAAqwkAAAAAAAAHAAAAZXhwb3J0IKsJAAAAAAAAqwkAAAAAAAAaAAAAZnVuY3Rpb24gVENQQ2xpZW50KHVybCkgewo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyCQAAAAAAAKsJAAAAAAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"paste",
					null,
					"AQAAAKsJAAAAAAAAxQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrCQAAAAAAAKsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "export"
					},
					"BgAAAKsJAAAAAAAArAkAAAAAAAAAAAAArAkAAAAAAACtCQAAAAAAAAAAAACtCQAAAAAAAK4JAAAAAAAAAAAAAK4JAAAAAAAArwkAAAAAAAAAAAAArwkAAAAAAACwCQAAAAAAAAAAAACwCQAAAAAAALEJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrCQAAAAAAAKsJAAAAAAAAAAAAAAAAAAA"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALEJAAAAAAAAsgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxCQAAAAAAALEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAIgRAAAAAAAAiREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAT0A"
				],
				[
					105,
					1,
					"cut",
					null,
					"AQAAAAIOAAAAAAAAAg4AAAAAAADhAQAACiAgY29uc3QgZGVidWcgPSBmYWxzZTsKCiAgc2V0TG9nKCgoZGVidWcgPyBMTExfREVCVUcgOiBMTExfV0FSTikgPDwgMSkgLSAxLCAobGV2ZWwsIG1zZykgPT4gewogICAgbGV0IHAgPQogICAgICBbJ0VSUicsICdXQVJOJywgJ05PVElDRScsICdJTkZPJywgJ0RFQlVHJywgJ1BBUlNFUicsICdIRUFERVInLCAnRVhUJywgJ0NMSUVOVCcsICdMQVRFTkNZJywgJ01JTk5FVCcsICdUSFJFQUQnXVsKICAgICAgICBsZXZlbCAmJiBNYXRoLmxvZzIobGV2ZWwpCiAgICAgIF0gPz8gbGV2ZWwgKyAnJzsKICAgIG1zZyA9IG1zZy5yZXBsYWNlKC9cbi9nLCAnXFxuJykucmVwbGFjZSgvXHIvZywgJ1xccicpOwoKICAgIGlmKCEvUE9MTC8udGVzdChtc2cpICYmIC9NSU5ORVQvLnRlc3QocCkpCiAgICAgIGlmKGRlYnVnICYmIC8oY2xpZW50fGh0dHB8cmVhZHx3cml0ZSkvaS50ZXN0KG1zZykpIGNvbnNvbGUubG9nKHAucGFkRW5kKDgpLCBtc2cpOwogIH0pOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACDgAAAAAAAOMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAAAIOAAAAAAAA4w8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACDgAAAAAAAAIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"cut",
					null,
					"AQAAAAIOAAAAAAAAAg4AAAAAAADhAQAACiAgY29uc3QgZGVidWcgPSBmYWxzZTsKCiAgc2V0TG9nKCgoZGVidWcgPyBMTExfREVCVUcgOiBMTExfV0FSTikgPDwgMSkgLSAxLCAobGV2ZWwsIG1zZykgPT4gewogICAgbGV0IHAgPQogICAgICBbJ0VSUicsICdXQVJOJywgJ05PVElDRScsICdJTkZPJywgJ0RFQlVHJywgJ1BBUlNFUicsICdIRUFERVInLCAnRVhUJywgJ0NMSUVOVCcsICdMQVRFTkNZJywgJ01JTk5FVCcsICdUSFJFQUQnXVsKICAgICAgICBsZXZlbCAmJiBNYXRoLmxvZzIobGV2ZWwpCiAgICAgIF0gPz8gbGV2ZWwgKyAnJzsKICAgIG1zZyA9IG1zZy5yZXBsYWNlKC9cbi9nLCAnXFxuJykucmVwbGFjZSgvXHIvZywgJ1xccicpOwoKICAgIGlmKCEvUE9MTC8udGVzdChtc2cpICYmIC9NSU5ORVQvLnRlc3QocCkpCiAgICAgIGlmKGRlYnVnICYmIC8oY2xpZW50fGh0dHB8cmVhZHx3cml0ZSkvaS50ZXN0KG1zZykpIGNvbnNvbGUubG9nKHAucGFkRW5kKDgpLCBtc2cpOwogIH0pOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjDwAAAAAAAAIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMsJAAAAAAAAzAkAAAAAAAAAAAAAzAkAAAAAAADOCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLCQAAAAAAAMsJAAAAAAAA////////738"
				],
				[
					118,
					1,
					"paste",
					null,
					"AQAAAM4JAAAAAAAArwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOCQAAAAAAAM4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK8LAAAAAAAAsAsAAAAAAAAAAAAAsAsAAAAAAACyCwAAAAAAAAAAAADMCQAAAAAAAMwJAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvCwAAAAAAAK8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALALAAAAAAAAsgsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwCwAAAAAAALALAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACPEQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IHsgY2xpZW50LCBzZXRMb2csIExMTF9ERUJVRywgTExMX1dBUk4gfSBmcm9tICduZXQnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IE1JRElTdHJlYW0sIE1JRElFdmVudCB9IGZyb20gJy4vbGliL21pZGkuanMnOwppbXBvcnQgeyBxdW90ZSwgdG9TdHJpbmcgfSBmcm9tICcuL2xpYi9taXNjLmpzJzsKCi8qY29uc3QgTUlESV9OT1RFX09GRiA9IDB4ODA7CmNvbnN0IE1JRElfTk9URV9PTiA9IDB4OTA7CmNvbnN0IE1JRElfUE9MWVBIT05JQ19LRVlfUFJFU1NVUkUgPSAweEEwOwpjb25zdCBNSURJX0NPTlRST0xfQ0hBTkdFID0gMHhCMDsKY29uc3QgTUlESV9QUk9HUkFNX0NIQU5HRSA9IDB4QzA7CmNvbnN0IE1JRElfQ0hBTk5FTF9QUkVTU1VSRSA9IDB4RDA7CmNvbnN0IE1JRElfUElUQ0hfQkVORCA9IDB4RTA7CmNvbnN0IE1JRElfU1lTRVggPSAweGYwOwpjb25zdCBNSURJX1NPTkdfUE9TSVRJT04gPSAweGYyOwpjb25zdCBNSURJX1NPTkdfU0VMRUNUID0gMHhmMzsKY29uc3QgTUlESV9UVU5FX1JFUVVFU1QgPSAweGY2Owpjb25zdCBNSURJX0VPWCA9IDB4Zjc7CmNvbnN0IE1JRElfVElNSU5HX0NMT0NLID0gMHhmODsKY29uc3QgTUlESV9TVEFSVCA9IDB4ZmE7CmNvbnN0IE1JRElfQ09OVElOVUUgPSAweGZiOwpjb25zdCBNSURJX1NUT1AgPSAweGZjOwpjb25zdCBNSURJX0FDVElWRV9TRU5TSU5HID0gMHhmZTsKY29uc3QgTUlESV9SRVNFVCA9IDB4ZmYKKi8KLyogTUlESU1lc3NhZ2VMZW5ndGggLS0gaG93IG1hbnkgYnl0ZXMgaW4gYSBtZXNzYWdlPyAqLwpmdW5jdGlvbiBNSURJTWVzc2FnZUxlbmd0aChieXRlKSB7CiAgYnl0ZSAmPSAweGZmOwogIGlmKGJ5dGUgPCAweDgwKSB7CiAgICByZXR1cm4gMDsKICB9IGVsc2UgaWYoYnl0ZSA8IDB4ZjApIHsKICAgIGNvbnN0IGxlbmd0aCA9IFszLCAzLCAzLCAzLCAyLCAyLCAzXTsKICAgIHJldHVybiBsZW5ndGhbKGJ5dGUgLSAweDgwKSA+PiA0XTsKICB9IGVsc2UgewogICAgY29uc3QgbGVuZ3RoID0gWy0xLCAyLCAzLCAyLCAwLCAwLCAxLCAtMSwgMSwgMCwgMSwgMSwgMSwgMCwgMSwgMV07CiAgICByZXR1cm4gbGVuZ3RoW2J5dGUgLSAweGYwXTsKICB9Cn0KCmNsYXNzIE1JRElNZXNzYWdlIGV4dGVuZHMgQXJyYXlCdWZmZXIgewogIGNvbnN0cnVjdG9yKGJ5dGVzKSB7CiAgICBzdXBlcihieXRlcy5sZW5ndGgpOwogICAgbGV0IHU4ID0gbmV3IFVpbnQ4QXJyYXkodGhpcyk7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpKyspIHU4W2ldID0gYnl0ZXNbaV07CiAgfQoKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGNvbW1hbmQoKSB7IHJldHVybiBuZXcgVWludDhBcnJheSh0aGlzKVswXSAmIDB4ZjA7IH0KICAvKiBwcmV0dGllci1pZ25vcmUgKi8gc2V0IGNvbW1hbmQodmFsdWUpIHsgbGV0IGE9bmV3IFVpbnQ4QXJyYXkodGhpcylbMF07IGFbMF0gPSAoYVswXSAmIDB4MGYpIHwgKHZhbHVlICYgMHhmMCk7IH0KCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBjaGFubmVsKCkgeyByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodGhpcylbMF0gJiAweDBmOyB9CiAgLyogcHJldHRpZXItaWdub3JlICovIHNldCBjaGFubmVsKHZhbHVlKSB7IGxldCBhPW5ldyBVaW50OEFycmF5KHRoaXMpWzBdOyBhWzBdID0gKGFbMF0gJiAweGYwKSB8ICh2YWx1ZSAmIDB4MGYpOyB9CgogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgZGF0YSgpIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMsIDEpOyB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMpIHsKICAgIHJldHVybiBgTUlESU1lc3NhZ2UgYCArIGluc3BlY3QoWy4uLm5ldyBVaW50OEFycmF5KHRoaXMpXSwgeyBudW1iZXJCYXNlOiAxNiB9KTsKICB9Cn0KCmZ1bmN0aW9uIE1JRElNZXNzYWdlUmVhZChieXRlQXJyKSB7CiAgbGV0IGxlbjsKICB3aGlsZShieXRlQXJyLmxlbmd0aCAmJiAhKGxlbiA9IE1JRElNZXNzYWdlTGVuZ3RoKGJ5dGVBcnJbMF0pKSkgYnl0ZUFyci5zaGlmdCgpOwogIGlmKGxlbiAmJiBieXRlQXJyLmxlbmd0aCA+PSBsZW4pIHsKICAgIGNvbnNvbGUubG9nKCdNSURJTWVzc2FnZVJlYWQnLCB7IGxlbiB9KTsKICAgIHJldHVybiBuZXcgTUlESU1lc3NhZ2UoYnl0ZUFyci5zcGxpY2UoMCwgbGVuKSk7CiAgfQogIHJldHVybiBudWxsOwp9CgpmdW5jdGlvbiBNSURJTWVzc2FnZURlY29kZShieXRlQXJyKSB7CiAgY29uc3QgY29tbWFuZCA9IGJ5dGVBcnJbMF0gJiAweGYwOwogIGNvbnN0IGNoYW5uZWwgPSBieXRlQXJyWzBdICYgMHgwZjsKICBjb25zdCBsZW4gPSBNSURJTWVzc2FnZUxlbmd0aChieXRlQXJyWzBdKTsKICBjb25zdCBkYXRhID0gYnl0ZUFyci5zbGljZSgxLCBsZW4pOwogIHJldHVybiB7IGNvbW1hbmQsIGNoYW5uZWwsIGRhdGEgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFRDUENsaWVudCh1cmwpIHsKCiAgY29uc3QgZGVidWcgPSBmYWxzZTsKCiAgc2V0TG9nKCgoZGVidWcgPyBMTExfREVCVUcgOiBMTExfV0FSTikgPDwgMSkgLSAxLCAobGV2ZWwsIG1zZykgPT4gewogICAgbGV0IHAgPQogICAgICBbJ0VSUicsICdXQVJOJywgJ05PVElDRScsICdJTkZPJywgJ0RFQlVHJywgJ1BBUlNFUicsICdIRUFERVInLCAnRVhUJywgJ0NMSUVOVCcsICdMQVRFTkNZJywgJ01JTk5FVCcsICdUSFJFQUQnXVsKICAgICAgICBsZXZlbCAmJiBNYXRoLmxvZzIobGV2ZWwpCiAgICAgIF0gPz8gbGV2ZWwgKyAnJzsKICAgIG1zZyA9IG1zZy5yZXBsYWNlKC9cbi9nLCAnXFxuJykucmVwbGFjZSgvXHIvZywgJ1xccicpOwoKICAgIGlmKCEvUE9MTC8udGVzdChtc2cpICYmIC9NSU5ORVQvLnRlc3QocCkpCiAgICAgIGlmKGRlYnVnICYmIC8oY2xpZW50fGh0dHB8cmVhZHx3cml0ZSkvaS50ZXN0KG1zZykpIGNvbnNvbGUubG9nKHAucGFkRW5kKDgpLCBtc2cpOwogIH0pOwogICAgCiAgbGV0IHJlY3ZCdWYgPSBbXTsKICBsZXQgc3RhdHVzID0gW107CiAgcmV0dXJuIGNsaWVudCh1cmwsIHsKICAgIGJpbmFyeTogdHJ1ZSwKICAgIG9uQ29ubmVjdCh3cywgcmVxKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSk7CiAgICB9LAogICAgb25DbG9zZSh3cywgcmVhc29uKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkNsb3NlJywgeyB3cywgcmVhc29uIH0pOwogICAgfSwKICAgIG9uSHR0cChyZXEsIHJlc3ApIHsKICAgICAgY29uc29sZS5sb2coJ29uSHR0cCcsIHsgcmVxLCByZXNwIH0pOwogICAgfSwKICAgIG9uRmQoZmQsIHJkLCB3cikgewogICAgICAvL2NvbnNvbGUubG9nKCdvbkZkJywgZmQsIHJkLCB3cik7CiAgICAgIG9zLnNldFJlYWRIYW5kbGVyKGZkLCByZCk7CiAgICAgIG9zLnNldFdyaXRlSGFuZGxlcihmZCwgd3IpOwogICAgfSwKICAgIG9uTWVzc2FnZSh3cywgZGF0YSkgewogICAgICAvL2NvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB7IHdzLCBkYXRhIH0pOwogICAgICB0cnkgewogICAgICAgIGxldCBzdHJlYW0gPSBuZXcgTUlESVN0cmVhbShkYXRhKTsKICAgICAgICBsZXQgZXZlbnQgPSBNSURJRXZlbnQucmVhZChzdHJlYW0sIHN0YXR1cyk7CiAgICAgICAgY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgZXZlbnQgfSk7CiAgICAgIH0gY2F0Y2goZSkgewogICAgICAgIGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UuZXhjZXB0aW9uJywgZS5tZXNzYWdlLCBlLnN0YWNrKTsKICAgICAgfQogICAgfSwKCiAgICBvbkVycm9yKHdzLCBlcnJvcikgewogICAgICBjb25zb2xlLmxvZygnb25FcnJvcicsIHdzLCBlcnJvcik7CiAgICB9CiAgfSk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBtYWluKC4uLmFyZ3MpIHsKICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZShzdGQuZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogeyBjb21wYWN0OiAyLCBjdXN0b21JbnNwZWN0OiB0cnVlLyosIG51bWJlckJhc2U6IDE2Ki8gfQogIH0pOwogIGNvbnNvbGUubG9nKCdtaWRpJywgT2JqZWN0LmtleXMoeyBNSURJRXZlbnQsIE1JRElTdHJlYW0gfSkpOwoKCiAgbGV0IHVybCA9IGFyZ3NbMF0gPz8gJ3RjcDovLzEyNy4wLjAuMTo2OTk5JzsKCiAgb3Muc2lnbmFsKG9zLlNJR0lOVCwgdW5kZWZpbmVkKTsKICBvcy50dHlTZXRSYXcoMCk7CiAgb3Muc2V0UmVhZEhhbmRsZXIoMCwgKCkgPT4gewogICAgbGV0IGIgPSBuZXcgQXJyYXlCdWZmZXIoMSk7CiAgICBsZXQgciA9IG9zLnJlYWQoMCwgYiwgMCwgMSk7CiAgICBpZihyID09IDEpIHsKICAgICAgbGV0IFtudW1dID0gbmV3IFVpbnQ4QXJyYXkoYik7CiAgICAgIGxldCBjaCA9IFN0cmluZy5mcm9tQ2hhckNvZGUobnVtKTsKICAgICAgY29uc29sZS5sb2coJ1JlYWQgYnl0ZSAnLCBudW0sIGAgJHtxdW90ZShjaCwgIiciKX1gKTsKCiAgICAgIGlmKG51bSA9PSA0KSBzdGQuZXhpdCgwKTsKICAgIH0KICB9KTsKCiAgVENQQ2xpZW50KHVybCk7Cn0gCgAAAAAAAAAAiREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAI8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					2,
					"right_delete",
					null,
					"AgAAAEUOAAAAAAAARQ4AAAAAAAABAAAAe0UOAAAAAAAARQ4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFDgAAAAAAAEUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					2,
					"left_delete",
					null,
					"AgAAAEsOAAAAAAAASw4AAAAAAAABAAAAfUoOAAAAAAAASg4AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMDgAAAAAAAEwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMgJAAAAAAAAyQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADICQAAAAAAAMgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " hj"
					},
					"AwAAAMkJAAAAAAAAygkAAAAAAAAAAAAAygkAAAAAAADLCQAAAAAAAAAAAADLCQAAAAAAAMwJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJCQAAAAAAAMkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAAMsJAAAAAAAAywkAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMCQAAAAAAAMwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "amnd"
					},
					"BAAAAMsJAAAAAAAAzAkAAAAAAAAAAAAAzAkAAAAAAADNCQAAAAAAAAAAAADNCQAAAAAAAM4JAAAAAAAAAAAAAM4JAAAAAAAAzwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLCQAAAAAAAMsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					3,
					"left_delete",
					null,
					"AwAAAM4JAAAAAAAAzgkAAAAAAAABAAAAZM0JAAAAAAAAzQkAAAAAAAABAAAAbswJAAAAAAAAzAkAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPCQAAAAAAAM8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "ndler"
					},
					"BQAAAMwJAAAAAAAAzQkAAAAAAAAAAAAAzQkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMCQAAAAAAAMwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRCQAAAAAAANEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"left_delete",
					null,
					"AQAAANEJAAAAAAAA0QkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSCQAAAAAAANIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRCQAAAAAAANEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAANIJAAAAAAAA0gkAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTCQAAAAAAANMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANIJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSCQAAAAAAANIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " event"
					},
					"BgAAANMJAAAAAAAA1AkAAAAAAAAAAAAA1AkAAAAAAADVCQAAAAAAAAAAAADVCQAAAAAAANYJAAAAAAAAAAAAANYJAAAAAAAA1wkAAAAAAAAAAAAA1wkAAAAAAADYCQAAAAAAAAAAAADYCQAAAAAAANkJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTCQAAAAAAANMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAANkJAAAAAAAA2gkAAAAAAAAAAAAA2gkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZCQAAAAAAANkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwJAAAAAAAA3QkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcCQAAAAAAANwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAN0JAAAAAAAA3wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdCQAAAAAAAN0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAN8JAAAAAAAA4AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfCQAAAAAAAN8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n\nha"
					},
					"BwAAADoOAAAAAAAAOw4AAAAAAAAAAAAAOw4AAAAAAABDDgAAAAAAAAAAAABDDgAAAAAAAEQOAAAAAAAAAAAAAEQOAAAAAAAATA4AAAAAAAAAAAAAOw4AAAAAAAA7DgAAAAAAAAgAAAAgICAgICAgIEQOAAAAAAAARQ4AAAAAAAAAAAAARQ4AAAAAAABGDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6DgAAAAAAADoOAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "ndler"
					},
					"BQAAAEYOAAAAAAAARw4AAAAAAAAAAAAARw4AAAAAAABIDgAAAAAAAAAAAABIDgAAAAAAAEkOAAAAAAAAAAAAAEkOAAAAAAAASg4AAAAAAAAAAAAASg4AAAAAAABLDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGDgAAAAAAAEYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsOAAAAAAAATQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLDgAAAAAAAEsOAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEsOAAAAAAAASw4AAAAAAAABAAAAKEsOAAAAAAAASw4AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMDgAAAAAAAEwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsOAAAAAAAATQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLDgAAAAAAAEsOAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BQAAAEwOAAAAAAAATQ4AAAAAAAAAAAAATQ4AAAAAAABODgAAAAAAAAAAAABODgAAAAAAAE8OAAAAAAAAAAAAAE8OAAAAAAAAUA4AAAAAAAAAAAAAUA4AAAAAAABRDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMDgAAAAAAAEwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFIOAAAAAAAAUw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSDgAAAAAAAFIOAAAAAAAAAAAAAAAA8L8"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAFwOAAAAAAAAXQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcDgAAAAAAAFwOAAAAAAAAAAAAAAAAUkA"
				],
				[
					218,
					1,
					"left_delete",
					null,
					"AQAAAFwOAAAAAAAAXA4AAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdDgAAAAAAAF0OAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAFwOAAAAAAAAXQ4AAAAAAAAAAAAAXQ4AAAAAAABeDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcDgAAAAAAAFwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "\n\nb"
					},
					"BgAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAHgwAAAAAAAAAAAAAFQwAAAAAAAAVDAAAAAAAAAQAAAAgICAgGgwAAAAAAAAbDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUDAAAAAAAABQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					4,
					"left_delete",
					null,
					"BAAAABoMAAAAAAAAGgwAAAAAAAABAAAAYhgMAAAAAAAAGAwAAAAAAAACAAAAICAWDAAAAAAAABYMAAAAAAAAAgAAACAgFQwAAAAAAAAVDAAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbDAAAAAAAABsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "block:"
					},
					"BgAAABUMAAAAAAAAFgwAAAAAAAAAAAAAFgwAAAAAAAAXDAAAAAAAAAAAAAAXDAAAAAAAABgMAAAAAAAAAAAAABgMAAAAAAAAGQwAAAAAAAAAAAAAGQwAAAAAAAAaDAAAAAAAAAAAAAAaDAAAAAAAABsMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVDAAAAAAAABUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": " fales,"
					},
					"BwAAABsMAAAAAAAAHAwAAAAAAAAAAAAAHAwAAAAAAAAdDAAAAAAAAAAAAAAdDAAAAAAAAB4MAAAAAAAAAAAAAB4MAAAAAAAAHwwAAAAAAAAAAAAAHwwAAAAAAAAgDAAAAAAAAAAAAAAgDAAAAAAAACEMAAAAAAAAAAAAACEMAAAAAAAAIgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbDAAAAAAAABsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					3,
					"left_delete",
					null,
					"AwAAACEMAAAAAAAAIQwAAAAAAAABAAAALCAMAAAAAAAAIAwAAAAAAAABAAAAcx8MAAAAAAAAHwwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiDAAAAAAAACIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "se,"
					},
					"AwAAAB8MAAAAAAAAIAwAAAAAAAAAAAAAIAwAAAAAAAAhDAAAAAAAAAAAAAAhDAAAAAAAACIMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfDAAAAAAAAB8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAADFEQAAaW1wb3J0ICogYXMgb3MgZnJvbSAnb3MnOwppbXBvcnQgKiBhcyBzdGQgZnJvbSAnc3RkJzsKaW1wb3J0IHsgY2xpZW50LCBzZXRMb2csIExMTF9ERUJVRywgTExMX1dBUk4gfSBmcm9tICduZXQnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IE1JRElTdHJlYW0sIE1JRElFdmVudCB9IGZyb20gJy4vbGliL21pZGkuanMnOwppbXBvcnQgeyBxdW90ZSwgdG9TdHJpbmcgfSBmcm9tICcuL2xpYi9taXNjLmpzJzsKCi8qY29uc3QgTUlESV9OT1RFX09GRiA9IDB4ODA7CmNvbnN0IE1JRElfTk9URV9PTiA9IDB4OTA7CmNvbnN0IE1JRElfUE9MWVBIT05JQ19LRVlfUFJFU1NVUkUgPSAweEEwOwpjb25zdCBNSURJX0NPTlRST0xfQ0hBTkdFID0gMHhCMDsKY29uc3QgTUlESV9QUk9HUkFNX0NIQU5HRSA9IDB4QzA7CmNvbnN0IE1JRElfQ0hBTk5FTF9QUkVTU1VSRSA9IDB4RDA7CmNvbnN0IE1JRElfUElUQ0hfQkVORCA9IDB4RTA7CmNvbnN0IE1JRElfU1lTRVggPSAweGYwOwpjb25zdCBNSURJX1NPTkdfUE9TSVRJT04gPSAweGYyOwpjb25zdCBNSURJX1NPTkdfU0VMRUNUID0gMHhmMzsKY29uc3QgTUlESV9UVU5FX1JFUVVFU1QgPSAweGY2Owpjb25zdCBNSURJX0VPWCA9IDB4Zjc7CmNvbnN0IE1JRElfVElNSU5HX0NMT0NLID0gMHhmODsKY29uc3QgTUlESV9TVEFSVCA9IDB4ZmE7CmNvbnN0IE1JRElfQ09OVElOVUUgPSAweGZiOwpjb25zdCBNSURJX1NUT1AgPSAweGZjOwpjb25zdCBNSURJX0FDVElWRV9TRU5TSU5HID0gMHhmZTsKY29uc3QgTUlESV9SRVNFVCA9IDB4ZmYKKi8KLyogTUlESU1lc3NhZ2VMZW5ndGggLS0gaG93IG1hbnkgYnl0ZXMgaW4gYSBtZXNzYWdlPyAqLwpmdW5jdGlvbiBNSURJTWVzc2FnZUxlbmd0aChieXRlKSB7CiAgYnl0ZSAmPSAweGZmOwogIGlmKGJ5dGUgPCAweDgwKSB7CiAgICByZXR1cm4gMDsKICB9IGVsc2UgaWYoYnl0ZSA8IDB4ZjApIHsKICAgIGNvbnN0IGxlbmd0aCA9IFszLCAzLCAzLCAzLCAyLCAyLCAzXTsKICAgIHJldHVybiBsZW5ndGhbKGJ5dGUgLSAweDgwKSA+PiA0XTsKICB9IGVsc2UgewogICAgY29uc3QgbGVuZ3RoID0gWy0xLCAyLCAzLCAyLCAwLCAwLCAxLCAtMSwgMSwgMCwgMSwgMSwgMSwgMCwgMSwgMV07CiAgICByZXR1cm4gbGVuZ3RoW2J5dGUgLSAweGYwXTsKICB9Cn0KCmNsYXNzIE1JRElNZXNzYWdlIGV4dGVuZHMgQXJyYXlCdWZmZXIgewogIGNvbnN0cnVjdG9yKGJ5dGVzKSB7CiAgICBzdXBlcihieXRlcy5sZW5ndGgpOwogICAgbGV0IHU4ID0gbmV3IFVpbnQ4QXJyYXkodGhpcyk7CiAgICBmb3IobGV0IGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpKyspIHU4W2ldID0gYnl0ZXNbaV07CiAgfQoKICAvKiBwcmV0dGllci1pZ25vcmUgKi8gZ2V0IGNvbW1hbmQoKSB7IHJldHVybiBuZXcgVWludDhBcnJheSh0aGlzKVswXSAmIDB4ZjA7IH0KICAvKiBwcmV0dGllci1pZ25vcmUgKi8gc2V0IGNvbW1hbmQodmFsdWUpIHsgbGV0IGE9bmV3IFVpbnQ4QXJyYXkodGhpcylbMF07IGFbMF0gPSAoYVswXSAmIDB4MGYpIHwgKHZhbHVlICYgMHhmMCk7IH0KCiAgLyogcHJldHRpZXItaWdub3JlICovIGdldCBjaGFubmVsKCkgeyByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodGhpcylbMF0gJiAweDBmOyB9CiAgLyogcHJldHRpZXItaWdub3JlICovIHNldCBjaGFubmVsKHZhbHVlKSB7IGxldCBhPW5ldyBVaW50OEFycmF5KHRoaXMpWzBdOyBhWzBdID0gKGFbMF0gJiAweGYwKSB8ICh2YWx1ZSAmIDB4MGYpOyB9CgogIC8qIHByZXR0aWVyLWlnbm9yZSAqLyBnZXQgZGF0YSgpIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMsIDEpOyB9CgogIFtTeW1ib2wuaW5zcGVjdF0oZGVwdGgsIG9wdHMpIHsKICAgIHJldHVybiBgTUlESU1lc3NhZ2UgYCArIGluc3BlY3QoWy4uLm5ldyBVaW50OEFycmF5KHRoaXMpXSwgeyBudW1iZXJCYXNlOiAxNiB9KTsKICB9Cn0KCmZ1bmN0aW9uIE1JRElNZXNzYWdlUmVhZChieXRlQXJyKSB7CiAgbGV0IGxlbjsKICB3aGlsZShieXRlQXJyLmxlbmd0aCAmJiAhKGxlbiA9IE1JRElNZXNzYWdlTGVuZ3RoKGJ5dGVBcnJbMF0pKSkgYnl0ZUFyci5zaGlmdCgpOwogIGlmKGxlbiAmJiBieXRlQXJyLmxlbmd0aCA+PSBsZW4pIHsKICAgIGNvbnNvbGUubG9nKCdNSURJTWVzc2FnZVJlYWQnLCB7IGxlbiB9KTsKICAgIHJldHVybiBuZXcgTUlESU1lc3NhZ2UoYnl0ZUFyci5zcGxpY2UoMCwgbGVuKSk7CiAgfQogIHJldHVybiBudWxsOwp9CgpmdW5jdGlvbiBNSURJTWVzc2FnZURlY29kZShieXRlQXJyKSB7CiAgY29uc3QgY29tbWFuZCA9IGJ5dGVBcnJbMF0gJiAweGYwOwogIGNvbnN0IGNoYW5uZWwgPSBieXRlQXJyWzBdICYgMHgwZjsKICBjb25zdCBsZW4gPSBNSURJTWVzc2FnZUxlbmd0aChieXRlQXJyWzBdKTsKICBjb25zdCBkYXRhID0gYnl0ZUFyci5zbGljZSgxLCBsZW4pOwogIHJldHVybiB7IGNvbW1hbmQsIGNoYW5uZWwsIGRhdGEgfTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFRDUENsaWVudCh1cmwsIGhhbmRsZXIgPSBldmVudCA9PiB7fSkgewogIGNvbnN0IGRlYnVnID0gZmFsc2U7CgogIHNldExvZygoKGRlYnVnID8gTExMX0RFQlVHIDogTExMX1dBUk4pIDw8IDEpIC0gMSwgKGxldmVsLCBtc2cpID0+IHsKICAgIGxldCBwID0KICAgICAgWydFUlInLCAnV0FSTicsICdOT1RJQ0UnLCAnSU5GTycsICdERUJVRycsICdQQVJTRVInLCAnSEVBREVSJywgJ0VYVCcsICdDTElFTlQnLCAnTEFURU5DWScsICdNSU5ORVQnLCAnVEhSRUFEJ11bCiAgICAgICAgbGV2ZWwgJiYgTWF0aC5sb2cyKGxldmVsKQogICAgICBdID8/IGxldmVsICsgJyc7CiAgICBtc2cgPSBtc2cucmVwbGFjZSgvXG4vZywgJ1xcbicpLnJlcGxhY2UoL1xyL2csICdcXHInKTsKCiAgICBpZighL1BPTEwvLnRlc3QobXNnKSAmJiAvTUlOTkVULy50ZXN0KHApKQogICAgICBpZihkZWJ1ZyAmJiAvKGNsaWVudHxodHRwfHJlYWR8d3JpdGUpL2kudGVzdChtc2cpKSBjb25zb2xlLmxvZyhwLnBhZEVuZCg4KSwgbXNnKTsKICB9KTsKCiAgbGV0IHJlY3ZCdWYgPSBbXTsKICBsZXQgc3RhdHVzID0gW107CiAgcmV0dXJuIGNsaWVudCh1cmwsIHsKICAgIGJpbmFyeTogdHJ1ZSwKYmxvY2s6IGZhbHNlLAogICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgY29uc29sZS5sb2coJ29uQ29ubmVjdCcsIHsgd3MsIHJlcSB9KTsKICAgIH0sCiAgICBvbkNsb3NlKHdzLCByZWFzb24pIHsKICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCByZWFzb24gfSk7CiAgICB9LAogICAgb25IdHRwKHJlcSwgcmVzcCkgewogICAgICBjb25zb2xlLmxvZygnb25IdHRwJywgeyByZXEsIHJlc3AgfSk7CiAgICB9LAogICAgb25GZChmZCwgcmQsIHdyKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ29uRmQnLCBmZCwgcmQsIHdyKTsKICAgICAgb3Muc2V0UmVhZEhhbmRsZXIoZmQsIHJkKTsKICAgICAgb3Muc2V0V3JpdGVIYW5kbGVyKGZkLCB3cik7CiAgICB9LAogICAgb25NZXNzYWdlKHdzLCBkYXRhKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ29uTWVzc2FnZScsIHsgd3MsIGRhdGEgfSk7CiAgICAgIHRyeSB7CiAgICAgICAgbGV0IHN0cmVhbSA9IG5ldyBNSURJU3RyZWFtKGRhdGEpOwogICAgICAgIGxldCBldmVudCA9IE1JRElFdmVudC5yZWFkKHN0cmVhbSwgc3RhdHVzKTsKCiAgICAgICAgaGFuZGxlcihldmVudCk7CiAgICAgICAgLy9jb25zb2xlLmxvZygnb25NZXNzYWdlJywgZXZlbnQpOwogICAgICB9IGNhdGNoKGUpIHsKICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlLmV4Y2VwdGlvbicsIGUubWVzc2FnZSwgZS5zdGFjayk7CiAgICAgIH0KICAgIH0sCgogICAgb25FcnJvcih3cywgZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coJ29uRXJyb3InLCB3cywgZXJyb3IpOwogICAgfQogIH0pOwp9CgpleHBvcnQgZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoc3RkLmVyciwgewogICAgaW5zcGVjdE9wdGlvbnM6IHsgY29tcGFjdDogMiwgY3VzdG9tSW5zcGVjdDogdHJ1ZSAvKiwgbnVtYmVyQmFzZTogMTYqLyB9CiAgfSk7CiAgY29uc29sZS5sb2coJ21pZGknLCBPYmplY3Qua2V5cyh7IE1JRElFdmVudCwgTUlESVN0cmVhbSB9KSk7CgogIGxldCB1cmwgPSBhcmdzWzBdID8/ICd0Y3A6Ly8xMjcuMC4wLjE6Njk5OSc7CgogIG9zLnNpZ25hbChvcy5TSUdJTlQsIHVuZGVmaW5lZCk7CiAgb3MudHR5U2V0UmF3KDApOwogIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBiID0gbmV3IEFycmF5QnVmZmVyKDEpOwogICAgbGV0IHIgPSBvcy5yZWFkKDAsIGIsIDAsIDEpOwogICAgaWYociA9PSAxKSB7CiAgICAgIGxldCBbbnVtXSA9IG5ldyBVaW50OEFycmF5KGIpOwogICAgICBsZXQgY2ggPSBTdHJpbmcuZnJvbUNoYXJDb2RlKG51bSk7CiAgICAgIGNvbnNvbGUubG9nKCdSZWFkIGJ5dGUgJywgbnVtLCBgICR7cXVvdGUoY2gsICInIil9YCk7CgogICAgICBpZihudW0gPT0gNCkgc3RkLmV4aXQoMCk7CiAgICB9CiAgfSk7CgogIFRDUENsaWVudCh1cmwpOwp9CgAAAAAAAAAAyREAAAAAAAAAAAAAAAAAAAAAAADJEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiDAAAAAAAACIMAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 13624,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAB8TAAAAAAAAHxMAAAAAAAAuAAAAICAgICAgICAgIFsnLm1qcycsICdhcHBsaWNhdGlvbi9qYXZhc2NyaXB0J10sCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfEwAAAAAAAE0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					2,
					"paste",
					null,
					"AgAAAB8TAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAAB7EwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfEwAAAAAAAB8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AwAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABbEwAAAAAAAAMAAABtanNbEwAAAAAAAFwTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaEwAAAAAAAF0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "daemon,"
					},
					"BwAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAALUAAAAAAAAAtgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					2,
					"left_delete",
					null,
					"AgAAAPwAAAAAAAAA/AAAAAAAAAAMAAAAL2xpYi9taXNjLmpz+wAAAAAAAAD7AAAAAAAAAAEAAAAu",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AAAAAAAAAAgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "util"
					},
					"BAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AAAAAAAAAPsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"cut",
					null,
					"AQAAALsCAAAAAAAAuwIAAAAAAAAUAAAAZ2xvYmFsVGhpcy5mcyA9IGZzOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AgAAAAAAAM8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					2,
					"paste",
					null,
					"AgAAALsCAAAAAAAAzwIAAAAAAAAAAAAAzwIAAAAAAADjAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AgAAAAAAALsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAAM8CAAAAAAAAzwIAAAAAAAAUAAAAZ2xvYmFsVGhpcy5mcyA9IGZzOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAgAAAAAAAOMCAAAAAAAAAAAAAAAAAAA"
				],
				[
					115,
					7,
					"left_delete",
					null,
					"BwAAAGEHAAAAAAAAYQcAAAAAAAAFAAAAZmFsc2VgBwAAAAAAAGAHAAAAAAAAAQAAACBfBwAAAAAAAF8HAAAAAAAAAQAAACxeBwAAAAAAAF4HAAAAAAAAAQAAAGxdBwAAAAAAAF0HAAAAAAAAAQAAAGxcBwAAAAAAAFwHAAAAAAAAAQAAAHVbBwAAAAAAAFsHAAAAAAAAAQAAAG4",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhBwAAAAAAAGYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAB0JAAAAAAAAHwkAAAAAAAAAAAAAOAgAAAAAAAA6CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4CAAAAAAAAB0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "null,"
					},
					"BQAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABdBwAAAAAAAAAAAABdBwAAAAAAAF4HAAAAAAAAAAAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBwAAAAAAAFsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " fs"
					},
					"AwAAAGAHAAAAAAAAYQcAAAAAAAAAAAAAYQcAAAAAAABiBwAAAAAAAAAAAABiBwAAAAAAAGMHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBwAAAAAAAGAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"paste",
					null,
					"AQAAACoJAAAAAAAABAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqCQAAAAAAACoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADAJAAAAAAAAMQkAAAAAAAAAAAAAMQkAAAAAAAAxCQAAAAAAAAMAAAAgICI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzCQAAAAAAADAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					3,
					"left_delete",
					null,
					"AwAAAAAKAAAAAAAAAAoAAAAAAAABAAAAIv8JAAAAAAAA/wkAAAAAAAABAAAAbv4JAAAAAAAA/gkAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABCgAAAAAAAAEKAAAAAAAA////////738"
				],
				[
					243,
					1,
					"right_delete",
					null,
					"AQAAAIYJAAAAAAAAhgkAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGCQAAAAAAAIYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"left_delete",
					null,
					"AQAAAIkJAAAAAAAAiQkAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKCQAAAAAAAIoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"right_delete",
					null,
					"AQAAAI0JAAAAAAAAjQkAAAAAAAABAAAAXA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNCQAAAAAAAI0JAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"left_delete",
					null,
					"AQAAAEAJAAAAAAAAQAkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBCQAAAAAAAEEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEAJAAAAAAAAQQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABACQAAAAAAAEAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEEJAAAAAAAAQgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBCQAAAAAAAEEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					2,
					"left_delete",
					null,
					"AgAAAEEJAAAAAAAAQQkAAAAAAAABAAAAIEAJAAAAAAAAQAkAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCCQAAAAAAAEIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ".i"
					},
					"AgAAAEAJAAAAAAAAQQkAAAAAAAAAAAAAQQkAAAAAAABCCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABACQAAAAAAAEAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					263,
					6,
					"right_delete",
					null,
					"BgAAAEIJAAAAAAAAQgkAAAAAAAABAAAAPUIJAAAAAAAAQgkAAAAAAAABAAAAIEIJAAAAAAAAQgkAAAAAAAABAAAAe0IJAAAAAAAAQgkAAAAAAAABAAAAIEIJAAAAAAAAQgkAAAAAAAABAAAAaUIJAAAAAAAAQgkAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCCQAAAAAAAEIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAEIJAAAAAAAAQwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCCQAAAAAAAEIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMJAAAAAAAARAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDCQAAAAAAAEMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					2,
					"left_delete",
					null,
					"AgAAAPYJAAAAAAAA9gkAAAAAAAABAAAAffUJAAAAAAAA9QkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3CQAAAAAAAPcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					275,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqCQAAAAAAACoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIUxAAAAAAAAhjEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFMQAAAAAAAIUxAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "\ndaemon:"
					},
					"CQAAAIYxAAAAAAAAhzEAAAAAAAAAAAAAhzEAAAAAAACLMQAAAAAAAAAAAACLMQAAAAAAAIwxAAAAAAAAAAAAAIwxAAAAAAAAjTEAAAAAAAAAAAAAjTEAAAAAAACOMQAAAAAAAAAAAACOMQAAAAAAAI8xAAAAAAAAAAAAAI8xAAAAAAAAkDEAAAAAAAAAAAAAkDEAAAAAAACRMQAAAAAAAAAAAACRMQAAAAAAAJIxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGMQAAAAAAAIYxAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIxAAAAAAAAkzEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSMQAAAAAAAJIxAAAAAAAAAAAAAAAA8L8"
				],
				[
					295,
					2,
					"left_delete",
					null,
					"AgAAAJIxAAAAAAAAkjEAAAAAAAABAAAAIJExAAAAAAAAkTEAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTMQAAAAAAAJMxAAAAAAAAAAAAAAAA8L8"
				],
				[
					296,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJExAAAAAAAAkzEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRMQAAAAAAAJExAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMxAAAAAAAAlDEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTMQAAAAAAAJMxAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJQxAAAAAAAAljEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUMQAAAAAAAJQxAAAAAAAAAAAAAAAA8L8"
				],
				[
					300,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAJUxAAAAAAAAljEAAAAAAAAAAAAAljEAAAAAAACaMQAAAAAAAAAAAACaMQAAAAAAAJsxAAAAAAAAAAAAAJsxAAAAAAAAnzEAAAAAAAAAAAAAljEAAAAAAACWMQAAAAAAAAQAAAAgICAgljEAAAAAAACcMQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVMQAAAAAAAJUxAAAAAAAAAAAAAAAA8L8"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "repl-"
					},
					"BQAAAJwxAAAAAAAAnTEAAAAAAAAAAAAAnTEAAAAAAACeMQAAAAAAAAAAAACeMQAAAAAAAJ8xAAAAAAAAAAAAAJ8xAAAAAAAAoDEAAAAAAAAAAAAAoDEAAAAAAAChMQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcMQAAAAAAAJwxAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"left_delete",
					null,
					"AQAAAKAxAAAAAAAAoDEAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChMQAAAAAAAKExAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": ".stop"
					},
					"BQAAAKAxAAAAAAAAoTEAAAAAAAAAAAAAoTEAAAAAAACiMQAAAAAAAAAAAACiMQAAAAAAAKMxAAAAAAAAAAAAAKMxAAAAAAAApDEAAAAAAAAAAAAApDEAAAAAAAClMQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgMQAAAAAAAKAxAAAAAAAAAAAAAAAA8L8"
				],
				[
					306,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUxAAAAAAAApzEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClMQAAAAAAAKUxAAAAAAAAAAAAAAAA8L8"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKcxAAAAAAAAqDEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnMQAAAAAAAKcxAAAAAAAAAAAAAAAA8L8"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "\ndaemoin"
					},
					"CQAAAKgxAAAAAAAAqTEAAAAAAAAAAAAAqTEAAAAAAACvMQAAAAAAAAAAAACvMQAAAAAAALAxAAAAAAAAAAAAALAxAAAAAAAAsTEAAAAAAAAAAAAAsTEAAAAAAACyMQAAAAAAAAAAAACyMQAAAAAAALMxAAAAAAAAAAAAALMxAAAAAAAAtDEAAAAAAAAAAAAAtDEAAAAAAAC1MQAAAAAAAAAAAAC1MQAAAAAAALYxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoMQAAAAAAAKgxAAAAAAAAAAAAAAAA8L8"
				],
				[
					310,
					2,
					"left_delete",
					null,
					"AgAAALUxAAAAAAAAtTEAAAAAAAABAAAAbrQxAAAAAAAAtDEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2MQAAAAAAALYxAAAAAAAAAAAAAAAA8L8"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAALQxAAAAAAAAtTEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0MQAAAAAAALQxAAAAAAAAAAAAAAAA8L8"
				],
				[
					312,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALUxAAAAAAAAtzEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1MQAAAAAAALUxAAAAAAAAAAAAAAAA8L8"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "1,0"
					},
					"AwAAALYxAAAAAAAAtzEAAAAAAAAAAAAAtzEAAAAAAAC4MQAAAAAAAAAAAAC4MQAAAAAAALkxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2MQAAAAAAALYxAAAAAAAAAAAAAAAA8L8"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALoxAAAAAAAAuzEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6MQAAAAAAALoxAAAAAAAAAAAAAAAA8L8"
				],
				[
					336,
					1,
					"cut",
					null,
					"AQAAACsJAAAAAAAAKwkAAAAAAADsAAAAICByZXBsLmRpcmVjdGl2ZXMuaSA9IFsKICAgIG5hbWUgPT4KICAgICAgaW1wb3J0KG5hbWUpCiAgICAgICAgLnRoZW4obSA9PiAoZ2xvYmFsVGhpc1tuYW1lLnJlcGxhY2UoLyguKlwvfFwuW15cLy5dKyQpL2csICcnKV0gPSBtKSkKICAgICAgICAuY2F0Y2goKCkgPT4gcmVwbC5wcmludFN0YXR1cyhgRVJST1I6IG1vZHVsZSAnJHtuYW1lfScgbm90IGZvdW5kYCkpLAogICAgJ2ltcG9ydCBhIG1vZHVsZScKICBdOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArCQAAAAAAABcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					2,
					"paste",
					null,
					"AgAAACsJAAAAAAAAFwoAAAAAAAAAAAAAFwoAAAAAAAADCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArCQAAAAAAACsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AgAAACkKAAAAAAAAKgoAAAAAAAAAAAAAKgoAAAAAAAAqCgAAAAAAAAEAAABp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApCgAAAAAAACoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					347,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAADIKAAAAAAAAMgoAAAAAAAC0AAAAIG5hbWUgPT4KICAgICAgaW1wb3J0KG5hbWUpCiAgICAgICAgLnRoZW4obSA9PiAoZ2xvYmFsVGhpc1tuYW1lLnJlcGxhY2UoLyguKlwvfFwuW15cLy5dKyQpL2csICcnKV0gPSBtKSkKICAgICAgICAuY2F0Y2goKCkgPT4gcmVwbC5wcmludFN0YXR1cyhgRVJST1I6IG1vZHVsZSAnJHtuYW1lfScgbm90IGZvdW5kYCkpMgoAAAAAAADxCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyCgAAAAAAAOYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAADMKAAAAAAAANAoAAAAAAAAAAAAANAoAAAAAAAA0CgAAAAAAAL0AAAAgbmFtZSA9PgogICAgICAgICBpbXBvcnQobmFtZSkKICAgICAgICAgICAudGhlbihtID0+IChnbG9iYWxUaGlzW25hbWUucmVwbGFjZSgvKC4qXC98XC5bXlwvLl0rJCkvZywgJycpXSA9IG0pKQogICAgICAgICAgIC5jYXRjaCgoKSA9PiByZXBsLnByaW50U3RhdHVzKGBFUlJPUjogbW9kdWxlICcke25hbWV9JyBub3QgZm91bmRgKSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzCgAAAAAAAPAKAAAAAAAAAAAAAAAA8L8"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAADQKAAAAAAAANQoAAAAAAAAAAAAANQoAAAAAAAA2CgAAAAAAAAAAAAA2CgAAAAAAADcKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0CgAAAAAAADQKAAAAAAAAAAAAAAAA8L8"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " globalT"
					},
					"CAAAADcKAAAAAAAAOAoAAAAAAAAAAAAAOAoAAAAAAAA5CgAAAAAAAAAAAAA5CgAAAAAAADoKAAAAAAAAAAAAADoKAAAAAAAAOwoAAAAAAAAAAAAAOwoAAAAAAAA8CgAAAAAAAAAAAAA8CgAAAAAAAD0KAAAAAAAAAAAAAD0KAAAAAAAAPgoAAAAAAAAAAAAAPgoAAAAAAAA/CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3CgAAAAAAADcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "his.detch"
					},
					"CQAAAD8KAAAAAAAAQAoAAAAAAAAAAAAAQAoAAAAAAABBCgAAAAAAAAAAAABBCgAAAAAAAEIKAAAAAAAAAAAAAEIKAAAAAAAAQwoAAAAAAAAAAAAAQwoAAAAAAABECgAAAAAAAAAAAABECgAAAAAAAEUKAAAAAAAAAAAAAEUKAAAAAAAARgoAAAAAAAAAAAAARgoAAAAAAABHCgAAAAAAAAAAAABHCgAAAAAAAEgKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/CgAAAAAAAD8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					352,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgKAAAAAAAASgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICgAAAAAAAEgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEgKAAAAAAAASAoAAAAAAAABAAAAKEgKAAAAAAAASAoAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJCgAAAAAAAEkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					354,
					5,
					"left_delete",
					null,
					"BQAAAEcKAAAAAAAARwoAAAAAAAABAAAAaEYKAAAAAAAARgoAAAAAAAABAAAAY0UKAAAAAAAARQoAAAAAAAABAAAAdEQKAAAAAAAARAoAAAAAAAABAAAAZUMKAAAAAAAAQwoAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICgAAAAAAAEgKAAAAAAAAAAAAAAAA8L8"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "daemon"
					},
					"BgAAAEMKAAAAAAAARAoAAAAAAAAAAAAARAoAAAAAAABFCgAAAAAAAAAAAABFCgAAAAAAAEYKAAAAAAAAAAAAAEYKAAAAAAAARwoAAAAAAAAAAAAARwoAAAAAAABICgAAAAAAAAAAAABICgAAAAAAAEkKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDCgAAAAAAAEMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					356,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkKAAAAAAAASwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJCgAAAAAAAEkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					358,
					1,
					"right_delete",
					null,
					"AQAAAEsKAAAAAAAASwoAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLCgAAAAAAAEsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "detat"
					},
					"BgAAAFIKAAAAAAAAUwoAAAAAAAAAAAAAUwoAAAAAAABTCgAAAAAAAA8AAABpbXBvcnQgYSBtb2R1bGVTCgAAAAAAAFQKAAAAAAAAAAAAAFQKAAAAAAAAVQoAAAAAAAAAAAAAVQoAAAAAAABWCgAAAAAAAAAAAABWCgAAAAAAAFcKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSCgAAAAAAAGEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"left_delete",
					null,
					"AQAAAFYKAAAAAAAAVgoAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXCgAAAAAAAFcKAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAAFYKAAAAAAAAVwoAAAAAAAAAAAAAVwoAAAAAAABYCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWCgAAAAAAAFYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "\nstd.puts"
					},
					"CgAAAAMyAAAAAAAABDIAAAAAAAAAAAAABDIAAAAAAAAKMgAAAAAAAAAAAAAKMgAAAAAAAAsyAAAAAAAAAAAAAAsyAAAAAAAADDIAAAAAAAAAAAAADDIAAAAAAAANMgAAAAAAAAAAAAANMgAAAAAAAA4yAAAAAAAAAAAAAA4yAAAAAAAADzIAAAAAAAAAAAAADzIAAAAAAAAQMgAAAAAAAAAAAAAQMgAAAAAAABEyAAAAAAAAAAAAABEyAAAAAAAAEjIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADMgAAAAAAAAMyAAAAAAAAAAAAAAAA8L8"
				],
				[
					383,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABIyAAAAAAAAFDIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASMgAAAAAAABIyAAAAAAAAAAAAAAAA8L8"
				],
				[
					386,
					1,
					"cut",
					null,
					"AQAAAAQyAAAAAAAABDIAAAAAAAARAAAAICAgICAgc3RkLnB1dHMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVMgAAAAAAAAQyAAAAAAAAAAAAAAAAAAA"
				],
				[
					388,
					1,
					"paste",
					null,
					"AQAAAPExAAAAAAAAAjIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxMQAAAAAAAPExAAAAAAAAAAAAAAAAAAA"
				],
				[
					390,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAAyAAAAAAAAAjIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "\\ndetach"
					},
					"CAAAAAEyAAAAAAAAAjIAAAAAAAAAAAAAAjIAAAAAAAADMgAAAAAAAAAAAAADMgAAAAAAAAQyAAAAAAAAAAAAAAQyAAAAAAAABTIAAAAAAAAAAAAABTIAAAAAAAAGMgAAAAAAAAAAAAAGMgAAAAAAAAcyAAAAAAAAAAAAAAcyAAAAAAAACDIAAAAAAAAAAAAACDIAAAAAAAAJMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABMgAAAAAAAAEyAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "ing"
					},
					"AwAAAAkyAAAAAAAACjIAAAAAAAAAAAAACjIAAAAAAAALMgAAAAAAAAAAAAALMgAAAAAAAAwyAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJMgAAAAAAAAkyAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"left_delete",
					null,
					"AQAAAAwyAAAAAAAADDIAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANMgAAAAAAAA0yAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "\\n'"
					},
					"AwAAAAwyAAAAAAAADTIAAAAAAAAAAAAADTIAAAAAAAAOMgAAAAAAAAAAAAAOMgAAAAAAAA8yAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMMgAAAAAAAAwyAAAAAAAAAAAAAAAA8L8"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABAyAAAAAAAAETIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQMgAAAAAAABAyAAAAAAAAAAAAAAAA8L8"
				],
				[
					398,
					1,
					"left_delete",
					null,
					"AQAAABAyAAAAAAAAEDIAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARMgAAAAAAABEyAAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABAyAAAAAAAAETIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQMgAAAAAAABAyAAAAAAAAAAAAAAAA8L8"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABEyAAAAAAAAEjIAAAAAAAAAAAAAEjIAAAAAAAAYMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARMgAAAAAAABEyAAAAAAAAAAAAAAAA8L8"
				],
				[
					401,
					4,
					"left_delete",
					null,
					"BAAAABYyAAAAAAAAFjIAAAAAAAACAAAAICAUMgAAAAAAABQyAAAAAAAAAgAAACAgEjIAAAAAAAASMgAAAAAAAAIAAAAgIBEyAAAAAAAAETIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYMgAAAAAAABgyAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAAAwyAAAAAAAADTIAAAAAAAAAAAAADTIAAAAAAAAOMgAAAAAAAAAAAAAOMgAAAAAAAA8yAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMMgAAAAAAAAwyAAAAAAAAAAAAAAAA8L8"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAA8yAAAAAAAAETIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPMgAAAAAAAA8yAAAAAAAAAAAAAAAA8L8"
				],
				[
					413,
					2,
					"left_delete",
					null,
					"AgAAABAyAAAAAAAAEDIAAAAAAAABAAAAIA8yAAAAAAAADzIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARMgAAAAAAABEyAAAAAAAAAAAAAAAA8L8"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "atexit,"
					},
					"BwAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": "\n\natexit"
					},
					"CAAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAD0DAAAAAAAAPgMAAAAAAAAAAAAAPgMAAAAAAAA/AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					517,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8DAAAAAAAAQQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AwAAAAAAAD8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					519,
					1,
					"left_delete",
					null,
					"AQAAAEADAAAAAAAAQAMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAwAAAAAAAEEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					520,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEADAAAAAAAAQgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAwAAAAAAAEADAAAAAAAAAAAAAAAA8L8"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAwAAAAAAAEIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUDAAAAAAAARgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAwAAAAAAAEUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					524,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEYDAAAAAAAASAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAwAAAAAAAEYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					525,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABIAwAAAAAAAEoDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAwAAAAAAAEcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AwAAAEwDAAAAAAAATQMAAAAAAAAAAAAASAMAAAAAAABIAwAAAAAAAAIAAAAgIEsDAAAAAAAATAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAwAAAAAAAEwDAAAAAAAAAAAAAAAAMkA"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAwAAAAAAAEgDAAAAAAAAAAAAAAAAO0A"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAwAAAAAAAEoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": " sta"
					},
					"BAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAABPAwAAAAAAAFADAAAAAAAAAAAAAFADAAAAAAAAUQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAwAAAAAAAE0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					534,
					3,
					"left_delete",
					null,
					"AwAAAFADAAAAAAAAUAMAAAAAAAABAAAAYU8DAAAAAAAATwMAAAAAAAABAAAAdE4DAAAAAAAATgMAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRAwAAAAAAAFEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE4DAAAAAAAAUAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAwAAAAAAAE4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					536,
					1,
					"insert",
					{
						"characters": "stack"
					},
					"BQAAAE8DAAAAAAAAUAMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAABRAwAAAAAAAFIDAAAAAAAAAAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABUAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAwAAAAAAAE8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABXAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAwAAAAAAAFUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAwAAAAAAAFcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": " Error"
					},
					"BgAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAAXwMAAAAAAABgAwAAAAAAAAAAAABgAwAAAAAAAGEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAwAAAAAAAFsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					541,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGEDAAAAAAAAYwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAwAAAAAAAGEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGMDAAAAAAAAZAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					547,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGIDAAAAAAAAZAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAwAAAAAAAGIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "\nconsole."
					},
					"CgAAAGYDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABpAwAAAAAAAAAAAABpAwAAAAAAAGoDAAAAAAAAAAAAAGoDAAAAAAAAawMAAAAAAAAAAAAAawMAAAAAAABsAwAAAAAAAAAAAABsAwAAAAAAAG0DAAAAAAAAAAAAAG0DAAAAAAAAbgMAAAAAAAAAAAAAbgMAAAAAAABvAwAAAAAAAAAAAABvAwAAAAAAAHADAAAAAAAAAAAAAHADAAAAAAAAcQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAwAAAAAAAGYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "log"
					},
					"AwAAAHEDAAAAAAAAcgMAAAAAAAAAAAAAcgMAAAAAAABzAwAAAAAAAAAAAABzAwAAAAAAAHQDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAwAAAAAAAHEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHQDAAAAAAAAdgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AwAAAAAAAHQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHUDAAAAAAAAdwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AwAAAAAAAHUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "stack:"
					},
					"BgAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAB4AwAAAAAAAHkDAAAAAAAAAAAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AwAAAAAAAHYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": ",stak"
					},
					"BQAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAB/AwAAAAAAAIADAAAAAAAAAAAAAIADAAAAAAAAgQMAAAAAAAAAAAAAgQMAAAAAAACCAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AwAAAAAAAH0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					1,
					"left_delete",
					null,
					"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAwAAAAAAAIIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert",
					{
						"characters": "ck"
					},
					"AgAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAwAAAAAAAIEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIQDAAAAAAAAhQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAwAAAAAAAIQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					578,
					1,
					"cut",
					null,
					"AQAAAPUZAAAAAAAA9RkAAAAAAACZAAAAICAgICAgb25DbG9zZSh3cykgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB3cyk7CiAgICAgICAgICBkYmcuY2xvc2UoKTsKCiAgICAgICAgICBwcm90b2NvbC5kZWxldGUod3MpOwogICAgICAgICAgc29ja2V0cy5kZWxldGUod3MpOwogICAgICAgIH0s",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1GQAAAAAAAI4aAAAAAAAAAAAAAAAA8L8"
				],
				[
					579,
					2,
					"paste",
					null,
					"AgAAAPUZAAAAAAAAjhoAAAAAAAAAAAAAjhoAAAAAAAAnGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1GQAAAAAAAPUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "Error"
					},
					"BgAAAJYaAAAAAAAAlxoAAAAAAAAAAAAAlxoAAAAAAACXGgAAAAAAAAUAAABDbG9zZZcaAAAAAAAAmBoAAAAAAAAAAAAAmBoAAAAAAACZGgAAAAAAAAAAAACZGgAAAAAAAJoaAAAAAAAAAAAAAJoaAAAAAAAAmxoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWGgAAAAAAAJsaAAAAAAAAAAAAAAAA8L8"
				],
				[
					596,
					1,
					"paste",
					null,
					"AgAAALkaAAAAAAAAwBoAAAAAAAAAAAAAwBoAAAAAAADAGgAAAAAAAAcAAABvbkNsb3Nl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5GgAAAAAAAMAaAAAAAAAAAAAAAAAA8L8"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMcaAAAAAAAAyBoAAAAAAAAAAAAAyBoAAAAAAADSGgAAAAAAAAAAAADSGgAAAAAAANIaAAAAAAAAVQAAAAogICAgICAgICAgZGJnLmNsb3NlKCk7CgogICAgICAgICAgcHJvdG9jb2wuZGVsZXRlKHdzKTsKICAgICAgICAgIHNvY2tldHMuZGVsZXRlKHdzKTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcGwAAAAAAAMcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					607,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSGgAAAAAAANIaAAAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAAIAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABCAAAAAAAABgAAAAgIHJlcGwuaGVscCA9ICgpID0+IHt9Owo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAACAAAAAAAABgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"BAAAADgIAAAAAAAAOQgAAAAAAAAAAAAAOQgAAAAAAAA5CAAAAAAAAEkAAAAodHlwZW9mIGFyZyA9PSAnc3RyaW5nJyA/IGFyZyA6IGluc3BlY3QoYXJnLCByZXBsLmluc3BlY3RPcHRpb25zKSkgKyAnXG4nOQgAAAAAAAA6CAAAAAAAAAAAAAA6CAAAAAAAADsIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4CAAAAAAAAIEIAAAAAAAAAAAAAAAA8L8"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABwIAAAAAAAAHQgAAAAAAAAAAAAAHQgAAAAAAAAeCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcCAAAAAAAABwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAE0yAAAAAAAATjIAAAAAAAAAAAAATjIAAAAAAABOMgAAAAAAAAIAAABcbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNMgAAAAAAAE8yAAAAAAAAAAAAAAAA8L8"
				],
				[
					696,
					1,
					"left_delete",
					null,
					"AQAAAE0yAAAAAAAATTIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOMgAAAAAAAE4yAAAAAAAAAAAAAAAA8L8"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "\nstd.puts"
					},
					"CgAAAGQyAAAAAAAAZTIAAAAAAAAAAAAAZTIAAAAAAABrMgAAAAAAAAAAAABrMgAAAAAAAGwyAAAAAAAAAAAAAGwyAAAAAAAAbTIAAAAAAAAAAAAAbTIAAAAAAABuMgAAAAAAAAAAAABuMgAAAAAAAG8yAAAAAAAAAAAAAG8yAAAAAAAAcDIAAAAAAAAAAAAAcDIAAAAAAABxMgAAAAAAAAAAAABxMgAAAAAAAHIyAAAAAAAAAAAAAHIyAAAAAAAAczIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkMgAAAAAAAGQyAAAAAAAA////////738"
				],
				[
					700,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHMyAAAAAAAAdTIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzMgAAAAAAAHMyAAAAAAAAAAAAAAAA8L8"
				],
				[
					701,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAHQyAAAAAAAAdjIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0MgAAAAAAAHQyAAAAAAAAAAAAAAAA8L8"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": " PUI"
					},
					"BAAAAHUyAAAAAAAAdjIAAAAAAAAAAAAAdjIAAAAAAAB3MgAAAAAAAAAAAAB3MgAAAAAAAHgyAAAAAAAAAAAAAHgyAAAAAAAAeTIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1MgAAAAAAAHUyAAAAAAAAAAAAAAAA8L8"
				],
				[
					703,
					2,
					"left_delete",
					null,
					"AgAAAHgyAAAAAAAAeDIAAAAAAAABAAAASXcyAAAAAAAAdzIAAAAAAAABAAAAVQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5MgAAAAAAAHkyAAAAAAAAAAAAAAAA8L8"
				],
				[
					704,
					1,
					"insert",
					{
						"characters": "ID"
					},
					"AgAAAHcyAAAAAAAAeDIAAAAAAAAAAAAAeDIAAAAAAAB5MgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3MgAAAAAAAHcyAAAAAAAAAAAAAAAA8L8"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHkyAAAAAAAAejIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5MgAAAAAAAHkyAAAAAAAAAAAAAAAA8L8"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "+getp"
					},
					"BQAAAHsyAAAAAAAAfDIAAAAAAAAAAAAAfDIAAAAAAAB9MgAAAAAAAAAAAAB9MgAAAAAAAH4yAAAAAAAAAAAAAH4yAAAAAAAAfzIAAAAAAAAAAAAAfzIAAAAAAACAMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7MgAAAAAAAHsyAAAAAAAAAAAAAAAA8L8"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAIAyAAAAAAAAgTIAAAAAAAAAAAAAgTIAAAAAAACCMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAMgAAAAAAAIAyAAAAAAAAAAAAAAAA8L8"
				],
				[
					709,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIIyAAAAAAAAhDIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCMgAAAAAAAIIyAAAAAAAAAAAAAAAA8L8"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIUyAAAAAAAAhjIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFMgAAAAAAAIUyAAAAAAAAAAAAAAAA8L8"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAIQyAAAAAAAAhTIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEMgAAAAAAAIQyAAAAAAAAAAAAAAAA8L8"
				],
				[
					714,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIUyAAAAAAAAhzIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFMgAAAAAAAIUyAAAAAAAAAAAAAAAA8L8"
				],
				[
					715,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAAIYyAAAAAAAAhzIAAAAAAAAAAAAAhzIAAAAAAACIMgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGMgAAAAAAAIYyAAAAAAAAAAAAAAAA8L8"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": "getpid,"
					},
					"BwAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AAAAAAAAAL8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"cut",
					null,
					"AQAAAHIDAAAAAAAAcgMAAAAAAAAgAAAAICBjb25zb2xlLmxvZygnc3RhY2s6Jywgc3RhY2spOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAwAAAAAAAJIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					754,
					1,
					"paste",
					null,
					"AQAAAHIDAAAAAAAAkgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAwAAAAAAAHIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					757,
					1,
					"paste",
					null,
					"AQAAAFIDAAAAAAAAcgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSAwAAAAAAAFIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					767,
					1,
					"paste",
					null,
					"AgAAAGEDAAAAAAAAZwMAAAAAAAAAAAAAZwMAAAAAAABnAwAAAAAAAAUAAABzdGFjaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAwAAAAAAAGYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					770,
					1,
					"left_delete",
					null,
					"AQAAAGcDAAAAAAAAZwMAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAwAAAAAAAGgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					780,
					1,
					"paste",
					null,
					"AgAAAGoDAAAAAAAAcAMAAAAAAAAAAAAAcAMAAAAAAABwAwAAAAAAAAUAAABzdGFjaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAwAAAAAAAG8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAgwcAAAAAAACHBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "ast-shell.js",
			"settings":
			{
				"buffer_size": 37253,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					679,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAALAMAAAAAAAAsQwAAAAAAAAAAAAAsQwAAAAAAACxDAAAAAAAAA0AAAAgY29uc29sZS5sb2cosQwAAAAAAACyDAAAAAAAAAAAAACyDAAAAAAAALMMAAAAAAAAAAAAALMMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC1DAAAAAAAAAAAAAC1DAAAAAAAALYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAwAAAAAAAC9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALYMAAAAAAAAtwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgwAAAAAAAC2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"left_delete",
					null,
					"AQAAAMMMAAAAAAAAwwwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"cut",
					null,
					"AQAAAM4MAAAAAAAAzgwAAAAAAAA6AAAAaWYodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSBjb25zb2xlLmxvZyh2YWx1ZSk7CiAgICBlbHNlIA",
					"AQAAAAAAAAABAAAAzgwAAAAAAAAIDQAAAAAAAAAAAAAAQFRA"
				],
				[
					692,
					1,
					"paste",
					null,
					"AQAAADcMAAAAAAAAcQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwwAAAAAAAA3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAFQMAAAAAAAAVQwAAAAAAAAAAAAAVQwAAAAAAABWDAAAAAAAAAAAAABWDAAAAAAAAFcMAAAAAAAAAAAAAFcMAAAAAAAAWAwAAAAAAAAAAAAAWAwAAAAAAABZDAAAAAAAAAAAAABZDAAAAAAAAFoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAwAAAAAAABUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " value;"
					},
					"BwAAAFoMAAAAAAAAWwwAAAAAAAAAAAAAWwwAAAAAAABcDAAAAAAAAAAAAABcDAAAAAAAAF0MAAAAAAAAAAAAAF0MAAAAAAAAXgwAAAAAAAAAAAAAXgwAAAAAAABfDAAAAAAAAAAAAABfDAAAAAAAAGAMAAAAAAAAAAAAAGAMAAAAAAAAYQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgwAAAAAAABaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"right_delete",
					null,
					"AQAAAGEMAAAAAAAAYQwAAAAAAAATAAAAY29uc29sZS5sb2codmFsdWUpOw",
					"AQAAAAAAAAABAAAAYQwAAAAAAAB0DAAAAAAAAP///////+9/"
				],
				[
					706,
					1,
					"left_delete",
					null,
					"AQAAAAINAAAAAAAAAg0AAAAAAAAMAAAAY29uc29sZS5sb2co",
					"AQAAAAAAAAABAAAAAg0AAAAAAAAODQAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAAINAAAAAAAAAw0AAAAAAAAAAAAAAw0AAAAAAAAEDQAAAAAAAAAAAAAEDQAAAAAAAAUNAAAAAAAAAAAAAAUNAAAAAAAABg0AAAAAAAAAAAAABg0AAAAAAAAHDQAAAAAAAAAAAAAHDQAAAAAAAAgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAg0AAAAAAAACDQAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgNAAAAAAAACQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACA0AAAAAAAAIDQAAAAAAAAAAAAAAAPC/"
				],
				[
					710,
					2,
					"left_delete",
					null,
					"AgAAAFYNAAAAAAAAVg0AAAAAAAABAAAAO1UNAAAAAAAAVQ0AAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAVw0AAAAAAABXDQAAAAAAAP///////+9/"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFUNAAAAAAAAVg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQ0AAAAAAABVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"left_delete",
					null,
					"AQAAAFcNAAAAAAAAVw0AAAAAAAAYAAAAICAgIHN0ZC5vdXQucHV0cygnXG4nKTsK",
					"AQAAAAAAAAABAAAAVw0AAAAAAABvDQAAAAAAAAAAAAAAAAAA"
				],
				[
					721,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAVw0AAAAAAABXDQAAAAAAAAAAAAAAAPC/"
				],
				[
					729,
					1,
					"insert",
					{
						"characters": "isObject,"
					},
					"CQAAAGIDAAAAAAAAYwMAAAAAAAAAAAAAYwMAAAAAAABkAwAAAAAAAAAAAABkAwAAAAAAAGUDAAAAAAAAAAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABnAwAAAAAAAAAAAABnAwAAAAAAAGgDAAAAAAAAAAAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAABqAwAAAAAAAGsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgMAAAAAAABiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					730,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGsDAAAAAAAAbAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawMAAAAAAABrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					747,
					1,
					"",
					null,
					"AQAAAH8MAAAAAAAAhwwAAAAAAAANAAAAVXRpbC5pc09iamVjdA",
					"AQAAAAAAAAABAAAAfwwAAAAAAACMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"",
					null,
					"AQAAAMMMAAAAAAAAywwAAAAAAAANAAAAVXRpbC5pc09iamVjdA",
					"AQAAAAAAAAABAAAAwwwAAAAAAADQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					1,
					"",
					null,
					"AQAAAE6CAAAAAAAAVoIAAAAAAAANAAAAVXRpbC5pc09iamVjdA",
					"AQAAAAAAAAABAAAAToIAAAAAAABbggAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA1gwAAAAAAAD3DAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/color/convert.js",
			"settings":
			{
				"buffer_size": 54413,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAAAPAAAAAAAAAA8AAAAAAAATAAAALy8gcmFkaWFuIHRvIGRlZ3JlZf8OAAAAAAAA/w4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAA8AAAAAAAATDwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAL8OAAAAAAAAvw4AAAAAAAAUAAAAIC8vIGRlZ3JlZSB0byByYWRpYW4",
					"AQAAAAAAAAABAAAAvw4AAAAAAADTDgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "dom.es",
			"settings":
			{
				"buffer_size": 0,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "midi-client.js",
			"settings":
			{
				"buffer_size": 557,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/midi.js",
			"settings":
			{
				"buffer_size": 445,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/midi/MIDIEvent.js",
			"settings":
			{
				"buffer_size": 1129,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					52,
					1,
					"cut",
					null,
					"AQAAAK0BAAAAAAAArQEAAAAAAAAfAAAAICAgIHZhciBiID0gc3RyZWFtLnJlYWRCeXRlKCk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAQAAAAAAAMwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"paste",
					null,
					"AQAAAI0BAAAAAAAArAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAQAAAAAAAI0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\ntih"
					},
					"BAAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAQAAAAAAAIoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					3,
					"left_delete",
					null,
					"AwAAAI0BAAAAAAAAjQEAAAAAAAABAAAAaIwBAAAAAAAAjAEAAAAAAAABAAAAaYsBAAAAAAAAiwEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAQAAAAAAAI4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACNAQAAAAAAAAAAAACNAQAAAAAAAI4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAQAAAAAAAIsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " pos="
					},
					"BQAAAI4BAAAAAAAAjwEAAAAAAAAAAAAAjwEAAAAAAACQAQAAAAAAAAAAAACQAQAAAAAAAJEBAAAAAAAAAAAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAQAAAAAAAI4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					4,
					"left_delete",
					null,
					"BAAAAJIBAAAAAAAAkgEAAAAAAAABAAAAPZEBAAAAAAAAkQEAAAAAAAABAAAAc5ABAAAAAAAAkAEAAAAAAAABAAAAb48BAAAAAAAAjwEAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAQAAAAAAAJMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI8BAAAAAAAAkQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAQAAAAAAAI8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "positi"
					},
					"BgAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAQAAAAAAAJABAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAJUBAAAAAAAAlQEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAQAAAAAAAJYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAlgEAAAAAAACXAQAAAAAAAAAAAACXAQAAAAAAAJgBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAQAAAAAAAJUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "=stream;"
					},
					"CAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAQAAAAAAAJkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\nstream.po"
					},
					"CwAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADJAQAAAAAAAAAAAADJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAADPAQAAAAAAANABAAAAAAAAAAAAANABAAAAAAAA0QEAAAAAAAAAAAAA0QEAAAAAAADSAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAQAAAAAAAMIBAAAAAAAA////////738"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "sitio"
					},
					"BQAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAQAAAAAAANIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " n="
					},
					"AwAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAQAAAAAAANcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					3,
					"left_delete",
					null,
					"AwAAANkBAAAAAAAA2QEAAAAAAAABAAAAPdgBAAAAAAAA2AEAAAAAAAABAAAAbtcBAAAAAAAA1wEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAQAAAAAAANoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "n=position;"
					},
					"CwAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAANoBAAAAAAAA2wEAAAAAAAAAAAAA2wEAAAAAAADcAQAAAAAAAAAAAADcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAADfAQAAAAAAAOABAAAAAAAAAAAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAQAAAAAAANcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"cut",
					null,
					"AQAAAAkEAAAAAAAACQQAAAAAAAAvAAAAICAgIGNvbnNvbGUubG9nKCdNSURJRXZlbnQucmVhZCcsIHsgcmVzdWx0IH0pOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBAAAAAAAADgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"paste",
					null,
					"AQAAADAEAAAAAAAAXwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADAEAAAAAAAAMQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAAAAAA"
				],
				[
					97,
					2,
					"left_delete",
					null,
					"AgAAAAgEAAAAAAAACAQAAAAAAAABAAAACgcEAAAAAAAABwQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAAAA"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAcEAAAAAAAACQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHBAAAAAAAAAcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAAAgEAAAAAAAACAQAAAAAAAABAAAAIAcEAAAAAAAABwQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"cut",
					null,
					"AQAAAKIBAAAAAAAAogEAAAAAAAAhAAAAICAgICAgdmFyIGIgPSBzdHJlYW0ucmVhZEJ5dGUoKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"paste",
					null,
					"AQAAAMQBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAQAAAAAAAMQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"cut",
					null,
					"AQAAAOUBAAAAAAAA5QEAAAAAAAAdAAAAdmFyIGRlbHRhID0gc3RyZWFtLnJlYWRWTFYoKTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAQAAAAAAAAICAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"paste",
					null,
					"AQAAAKgBAAAAAAAAxQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAQAAAAAAAKgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADMAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAQAAAAAAAMUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAAgCAAAAAAAACAIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAgAAAAAAAAkCAAAAAAAAAAAAAAAAS0A"
				],
				[
					139,
					1,
					"cut",
					null,
					"AQAAAFMCAAAAAAAAUwIAAAAAAAAxAAAAICAgIGNvbnNvbGUubG9nKCdNSURJRXZlbnQucmVhZCcsIHsgZGVsdGEsIGIgfSk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AgAAACYEAAAAAAAAJwQAAAAAAAAAAAAAJwQAAAAAAAAnBAAAAAAAAAMAAAB7IHI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmBAAAAAAAACkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					2,
					"left_delete",
					null,
					"AgAAAC0EAAAAAAAALQQAAAAAAAABAAAAfSwEAAAAAAAALAQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuBAAAAAAAAC4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "Z"
					},
					"AQAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAWg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAQAAAAAAAEUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "&Z/"
					},
					"AwAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAABGAQAAAAAAAEcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					3,
					"left_delete",
					null,
					"AwAAAEYBAAAAAAAARgEAAAAAAAABAAAAL0UBAAAAAAAARQEAAAAAAAABAAAAWkQBAAAAAAAARAEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAQAAAAAAAEcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEQBAAAAAAAARQEAAAAAAAAAAAAARQEAAAAAAABGAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "/("
					},
					"AgAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAAMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKBAAAAAAAAAoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"left_delete",
					null,
					"AQAAAAsEAAAAAAAACwQAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMBAAAAAAAAAwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAAsEAAAAAAAADAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALBAAAAAAAAAsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"left_delete",
					null,
					"AQAAAE4EAAAAAAAATgQAAAAAAACqAAAALyoKZXhwb3J0IHsgTUlESUNvbnRyb2xFdmVudCB9IGZyb20gJy4vTUlESUNvbnRyb2xFdmVudC5qcyc7CmV4cG9ydCB7IE1JRElNZXRhRXZlbnQgfSBmcm9tICcuL01JRElNZXRhRXZlbnQuanMnOwpleHBvcnQgeyBNSURJU3lzRXhFdmVudCB9IGZyb20gJy4vTUlESVN5c0V4RXZlbnQuanMnOwoqLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBAAAAAAAAPgEAAAAAAAAAAAAAAAAAAA"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE4EAAAAAAAATwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBAAAAAAAAE4EAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "Searching 5232 files for \"out of bound\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/static/wasm/bpgdec.js:\n 1032  // a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n 1033  // function stringToUTF8Array() instead, which takes in a maximum length that can be used\n 1034: // to be secure from out of bounds writes.\n 1035  /** @deprecated\n 1036      @param {boolean=} dontAddNull */\n\n/home/roman/Projects/plot-cv/static/wasm/bpgdec8a.js:\n 1032  // a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n 1033  // function stringToUTF8Array() instead, which takes in a maximum length that can be used\n 1034: // to be secure from out of bounds writes.\n 1035  /** @deprecated\n 1036      @param {boolean=} dontAddNull */\n\n/home/roman/Projects/plot-cv/static/wasm/bpgdec8.js:\n 1032  // a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n 1033  // function stringToUTF8Array() instead, which takes in a maximum length that can be used\n 1034: // to be secure from out of bounds writes.\n 1035  /** @deprecated\n 1036      @param {boolean=} dontAddNull */\n\n/home/roman/Projects/plot-cv/quickjs/quickjs.c:\n 50408      return JS_ThrowTypeErrorDetachedArrayBuffer(ctx);\n 50409    if((pos + size) > ta->length)\n 50410:     return JS_ThrowRangeError(ctx, \"out of bound\");\n 50411    ptr = abuf->data + ta->offset + pos;\n 50412  \n .....\n 50532      return JS_ThrowTypeErrorDetachedArrayBuffer(ctx);\n 50533    if((pos + size) > ta->length)\n 50534:     return JS_ThrowRangeError(ctx, \"out of bound\");\n 50535    ptr = abuf->data + ta->offset + pos;\n 50536  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/imstb_truetype.h:\n 3188                    }\n 3189                 }\n 3190:                STBTT_assert(z->ey >= scan_y_top); // if we get really unlucky a tiny bit of an edge can be out of bounds\n 3191                 // insert at front\n 3192                 z->next = active;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/imgui_widgets.cpp:\n 3373  \n 3374  // Note that Drag/Slider functions are only forwarding the min/max values clamping values if the ImGuiSliderFlags_AlwaysClamp flag is set!\n 3375: // This is intended: this way we allow CTRL+Click manual input to set a value out of bounds, for maximum flexibility.\n 3376: // However this may not be ideal for all uses, as some user code may break on out of bound values.\n 3377  bool ImGui::TempInputScalar(const ImRect& bb, ImGuiID id, const char* label, ImGuiDataType data_type, void* p_data, const char* format, const void* p_clamp_min, const void* p_clamp_max)\n 3378  {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/imgui.h:\n 1607  {\n 1608      ImGuiSliderFlags_None                   = 0,\n 1609:     ImGuiSliderFlags_AlwaysClamp            = 1 << 4,       // Clamp value to min/max bounds when input manually with CTRL+Click. By default CTRL+Click allows going out of bounds.\n 1610      ImGuiSliderFlags_Logarithmic            = 1 << 5,       // Make the widget logarithmic (linear otherwise). Consider using ImGuiSliderFlags_NoRoundToFormat with this if using a format-string with small amount of digits.\n 1611      ImGuiSliderFlags_NoRoundToFormat        = 1 << 6,       // Disable rounding underlying value to match precision of the display format string (e.g. %.3f values are rounded to those 3 digits)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/imgui.cpp:\n 7273      IM_ASSERT(g.Style.WindowMenuButtonPosition == ImGuiDir_None || g.Style.WindowMenuButtonPosition == ImGuiDir_Left || g.Style.WindowMenuButtonPosition == ImGuiDir_Right);\n 7274      for (int n = 0; n < ImGuiKey_COUNT; n++)\n 7275:         IM_ASSERT(g.IO.KeyMap[n] >= -1 && g.IO.KeyMap[n] < IM_ARRAYSIZE(g.IO.KeysDown) && \"io.KeyMap[] contains an out of bound value (need to be 0..512, or -1 for unmapped key)\");\n 7276  \n 7277      // Check: required key mapping (we intentionally do NOT check all keys to not pressure user into setting up everything, but Space is required and was only added in 1.60 WIP)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/imgui_demo.cpp:\n 5993  \n 5994              // Post-baking font scaling. Note that this is NOT the nice way of scaling fonts, read below.\n 5995:             // (we enforce hard clamping manually as by default DragFloat/SliderFloat allows CTRL+Click text to get out of bounds).\n 5996              const float MIN_SCALE = 0.3f;\n 5997              const float MAX_SCALE = 2.0f;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-imgui/imgui/backends/imgui_impl_sdl.cpp:\n  344      {\n  345          // Single-viewport mode: mouse position in client window coordinates (io.MousePos is (0,0) when the mouse is on the upper-left corner of the app window)\n  346:         // Unlike local position obtained earlier this will be valid when straying out of bounds.\n  347          int mouse_x_global, mouse_y_global;\n  348          SDL_GetGlobalMouseState(&mouse_x_global, &mouse_y_global);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/stb_truetype.h:\n 3291                    }\n 3292                 }\n 3293:                STBTT_assert(z->ey >= scan_y_top); // if we get really unlucky a tiny bit of an edge can be out of bounds\n 3294                 // insert at front\n 3295                 z->next = active;\n\n/home/roman/Projects/plot-cv/imgui/imstb_truetype.h:\n 3496              }\n 3497            }\n 3498:           STBTT_assert(z->ey >= scan_y_top); // if we get really unlucky a tiny bit of an edge can be out of bounds\n 3499            // insert at front\n 3500            z->next = active;\n\n/home/roman/Projects/plot-cv/imgui/imgui.cpp:\n 4093      IM_ASSERT(\n 4094          g.IO.KeyMap[n] >= -1 && g.IO.KeyMap[n] < IM_ARRAYSIZE(g.IO.KeysDown) &&\n 4095:         \"io.KeyMap[] contains an out of bound value (need to be 0..512, or -1 for unmapped key)\");\n 4096  \n 4097    // Perform simple check: required key mapping (we intentionally do NOT check all keys to not\n ....\n 9249    g.NavMoveResultOther.Clear();\n 9250  \n 9251:   // When we have manually scrolled (without using navigation) and NavId becomes out of bounds, we\n 9252    // project its bounding box to the visible area to restart navigation within visible items\n 9253    if(g.NavMoveRequest && g.NavMoveFromClampedRefRect && g.NavLayer == 0) {\n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/rgbd/src/tsdf.cpp:\n  423                  float tmax       = min( {_maxAx[0], _maxAx[1], _maxAx[2]} );\n  424  \n  425:                 // precautions against getting coordinates out of bounds\n  426                  tmin = tmin + tstep;\n  427                  tmax = tmax - tstep;\n  ...\n  535                  float tmax = min({ maxAx.x, maxAx.y, maxAx.z });\n  536  \n  537:                 // precautions against getting coordinates out of bounds\n  538                  tmin = tmin + tstep;\n  539                  tmax = tmax - tstep;\n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/rgbd/src/dynafu_tsdf.cpp:\n  460                  float tmax =     min(min(maxAx.x, maxAx.y), min(maxAx.x, maxAx.z));\n  461  \n  462:                 // precautions against getting coordinates out of bounds\n  463                  tmin = tmin + tstep;\n  464                  tmax = tmax - tstep;\n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/rgbd/src/linemod.cpp:\n 1208      // the feature in the template\n 1209      Feature f = templ.features[i];\n 1210:     // Discard feature if out of bounds\n 1211      /// @todo Shouldn't actually see x or y < 0 here?\n 1212      if (f.x < 0 || f.x >= size.width || f.y < 0 || f.y >= size.height)\n ....\n 1287      f.x += offset_x;\n 1288      f.y += offset_y;\n 1289:     // Discard feature if out of bounds, possibly due to applying the offset\n 1290      if (f.x < 0 || f.y < 0 || f.x >= size.width || f.y >= size.height)\n 1291        continue;\n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/rgbd/src/colored_tsdf.cpp:\n  612                  float tmax = min({ _maxAx[0], _maxAx[1], _maxAx[2] });\n  613  \n  614:                 // precautions against getting coordinates out of bounds\n  615                  tmin = tmin + tstep;\n  616                  tmax = tmax - tstep;\n  ...\n  728                  float tmax = min({ maxAx.x, maxAx.y, maxAx.z });\n  729  \n  730:                 // precautions against getting coordinates out of bounds\n  731                  tmin = tmin + tstep;\n  732                  tmax = tmax - tstep;\n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/wechat_qrcode/src/zxing/common/grid_sampler.cpp:\n   46          if (outlier >= maxOutlier) {\n   47              ostringstream s;\n   48:             s << \"Over 30% points out of bounds.\";\n   49              err_handler = ReaderErrorHandler(s.str().c_str());\n   50              return Ref<BitMatrix>();\n   ..\n   77      // The Java code assumes that if the start and end points are in bounds, the\n   78      // rest will also be. However, in some unusual cases points in the middle\n   79:     // may also be out of bounds. Since we can't rely on an\n   80      // ArrayIndexOutOfBoundsException like Java, we check every point.\n   81  \n\n/home/roman/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/barcode/src/detector/bardetect.cpp:\n  297                      pt_to_grow = Point(pt.x + i[0], pt.y + i[1]);\n  298  \n  299:                     //check if out of boundary\n  300                      if (!isValidCoord(pt_to_grow, coherence.size()))\n  301                      {\n\n26 matches across 19 files\n\n\nSearching 5233 files for \"'SpawnCompiler'\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/clang-ast.js:\n 1047  \n 1048    console.log(\n 1049:     'SpawnCompiler',\n 1050      args //.map(p => (p.indexOf(' ') != -1 ? `'${p}'` : p)).join(' ') + (output ? ` 1>${output}` : '')\n 1051    );\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 9850,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
				[
					5,
					1,
					"",
					null,
					"AQAAAGgmAAAAAAAAeiYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4CUAAAAAAADgJQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "clang-ast.js",
			"settings":
			{
				"buffer_size": 74272,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					3,
					"join_lines",
					null,
					"CAAAAIZ1AAAAAAAAhnUAAAAAAAABAAAACoZ1AAAAAAAAhnUAAAAAAAAEAAAAICAgIJZ1AAAAAAAAlnUAAAAAAAABAAAACpZ1AAAAAAAAlnUAAAAAAAAEAAAAICAgIJZ1AAAAAAAAl3UAAAAAAAAAAAAA+XUAAAAAAAD5dQAAAAAAAAEAAAAK+XUAAAAAAAD5dQAAAAAAAAIAAAAgIPl1AAAAAAAA+nUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhnUAAAAAAACGdQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAJ11AAAAAAAAnnUAAAAAAAAAAAAAnnUAAAAAAACedQAAAAAAAAEAAAAv",
					"AQAAAAAAAAABAAAAnXUAAAAAAACedQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "*/"
					},
					"AgAAAPl1AAAAAAAA+nUAAAAAAAAAAAAA+nUAAAAAAAD7dQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+XUAAAAAAAD5dQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAHp1AAAAAAAAe3UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAenUAAAAAAAB6dQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAHp1AAAAAAAAenUAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAe3UAAAAAAAB7dQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "&/"
					},
					"AgAAAHp1AAAAAAAAe3UAAAAAAAAAAAAAe3UAAAAAAAB8dQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAenUAAAAAAAB6dQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAAHt1AAAAAAAAe3UAAAAAAAABAAAAL3p1AAAAAAAAenUAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAfHUAAAAAAAB8dQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAHp1AAAAAAAAe3UAAAAAAAAAAAAAe3UAAAAAAAB8dQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAenUAAAAAAAB6dQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/midi/MIDIStream.js",
			"settings":
			{
				"buffer_size": 2906,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\ncoibn"
					},
					"BwAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA7wEAAAAAAADwAQAAAAAAAAAAAADwAQAAAAAAAPEBAAAAAAAAAAAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoAQAAAAAAAOgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					3,
					"left_delete",
					null,
					"AwAAAPEBAAAAAAAA8QEAAAAAAAABAAAAbvABAAAAAAAA8AEAAAAAAAABAAAAYu8BAAAAAAAA7wEAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAQAAAAAAAPIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "sol"
					},
					"AwAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAQAAAAAAAO8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					3,
					"left_delete",
					null,
					"AwAAAPEBAAAAAAAA8QEAAAAAAAABAAAAbPABAAAAAAAA8AEAAAAAAAABAAAAb+8BAAAAAAAA7wEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAQAAAAAAAPIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "nsole.log"
					},
					"CQAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD3AQAAAAAAAAAAAAD3AQAAAAAAAPgBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAQAAAAAAAO8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgBAAAAAAAA+gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AQAAAAAAAPgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPkBAAAAAAAA+wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AQAAAAAAAPkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "readByte"
					},
					"CAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAD/AQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAACAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAMCAAAAAAAABAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " reslut"
					},
					"BwAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAcCAAAAAAAAAAAAAAcCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAoCAAAAAAAAAAAAAAoCAAAAAAAACwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEAgAAAAAAAAQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					4,
					"left_delete",
					null,
					"BAAAAAsCAAAAAAAACwIAAAAAAAABAAAAKQoCAAAAAAAACgIAAAAAAAABAAAAdAkCAAAAAAAACQIAAAAAAAABAAAAdQgCAAAAAAAACAIAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAgAAAAAAAAwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "ult);"
					},
					"BQAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAgAAAAAAAAgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"paste",
					null,
					"AQAAAOIDAAAAAAAABwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAwAAAAAAAOIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"paste",
					null,
					"AgAAAPMDAAAAAAAA+gMAAAAAAAAAAAAA+gMAAAAAAAD6AwAAAAAAAAgAAAByZWFkQnl0ZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAwAAAAAAAPsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "vakze"
					},
					"BgAAAP0DAAAAAAAA/gMAAAAAAAAAAAAA/gMAAAAAAAD+AwAAAAAAAAYAAAByZXN1bHT+AwAAAAAAAP8DAAAAAAAAAAAAAP8DAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AwAAAAAAAAMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					3,
					"left_delete",
					null,
					"AwAAAAEEAAAAAAAAAQQAAAAAAAABAAAAZQAEAAAAAAAAAAQAAAAAAAABAAAAev8DAAAAAAAA/wMAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "lue"
					},
					"AwAAAP8DAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AwAAAAAAAP8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\ntg"
					},
					"BQAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAQAAAAAAAKIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAAKgBAAAAAAAAqAEAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAQAAAAAAAKkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "his.dv"
					},
					"BgAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAQAAAAAAAKgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					2,
					"left_delete",
					null,
					"AgAAAK0BAAAAAAAArQEAAAAAAAABAAAAdqwBAAAAAAAArAEAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAQAAAAAAAK4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "_dv"
					},
					"AwAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAQAAAAAAAKwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACsAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAQAAAAAAAKcBAAAAAAAAAAAAAAAAQkA"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAQAAAAAAAKwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " length"
					},
					"BwAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAQAAAAAAAK4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AQAAAAAAALUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AQAAAAAAALcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALkBAAAAAAAAugEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AQAAAAAAALkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAQAAAAAAAMIBAAAAAAAA////////738"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "byteLength"
					},
					"DAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACwAQAAAAAAAAYAAABsZW5ndGi/AQAAAAAAAL8BAAAAAAAABAAAACAgICCwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAC2AQAAAAAAALcBAAAAAAAAAAAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAQAAAAAAALUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMYBAAAAAAAAxwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAQAAAAAAAMYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"left_delete",
					null,
					"AQAAAMYBAAAAAAAAxgEAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAQAAAAAAAMcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ".buffer"
					},
					"BwAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAQAAAAAAAMYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADoCAAAAAAAAOwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AgAAAAAAADoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsCAAAAAAAAPAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					2,
					"left_delete",
					null,
					"AgAAADsCAAAAAAAAOwIAAAAAAAABAAAAIDoCAAAAAAAAOgIAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AgAAAAAAADwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADoCAAAAAAAAOwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AgAAAAAAADoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsCAAAAAAAAPAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"paste",
					null,
					"AQAAADwCAAAAAAAASQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AgAAAAAAADwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEkCAAAAAAAASgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAgAAAAAAAEkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " byteLength"
					},
					"CwAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAABPAgAAAAAAAFACAAAAAAAAAAAAAFACAAAAAAAAUQIAAAAAAAAAAAAAUQIAAAAAAABSAgAAAAAAAAAAAABSAgAAAAAAAFMCAAAAAAAAAAAAAFMCAAAAAAAAVAIAAAAAAAAAAAAAVAIAAAAAAABVAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAgAAAAAAAEoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAC8EAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAAxBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					3,
					"left_delete",
					null,
					"AwAAADAEAAAAAAAAMAQAAAAAAAABAAAAJi8EAAAAAAAALwQAAAAAAAABAAAAJi4EAAAAAAAALgQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"left_delete",
					null,
					"AQAAACoEAAAAAAAAKgQAAAAAAAAkAAAAICAgICBjb25zb2xlLmxvZygncmVhZFZMVicsIHZhbHVlKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqBAAAAAAAAE4EAAAAAAAAAAAAAAAAAAA"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAABwCAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAeAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAgAAAAAAABwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					3,
					"left_delete",
					null,
					"AwAAAB0CAAAAAAAAHQIAAAAAAAABAAAAJhwCAAAAAAAAHAIAAAAAAAABAAAAJhoCAAAAAAAAGgIAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAgAAAAAAAB4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABoCAAAAAAAAGwIAAAAAAAAAAAAAGwIAAAAAAAAcAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAgAAAAAAABoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADTAQAAAAAAAAAAAADTAQAAAAAAANQBAAAAAAAAAAAAANQBAAAAAAAA2AEAAAAAAAAAAAAAzwEAAAAAAADPAQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAQAAAAAAAM4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAANQBAAAAAAAA1QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					1,
					"left_delete",
					null,
					"AQAAANQBAAAAAAAA1AEAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAQAAAAAAANUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANYBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					263,
					1,
					"paste",
					null,
					"AQAAANcBAAAAAAAA5AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAQAAAAAAANcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " >="
					},
					"AwAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAQAAAAAAAOQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " bt"
					},
					"AwAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAQAAAAAAAOcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAOkBAAAAAAAA6QEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAQAAAAAAAOoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "yteLength"
					},
					"CQAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAADuAQAAAAAAAO8BAAAAAAAAAAAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAQAAAAAAAOkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "\nthrow"
					},
					"CQAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA9AEAAAAAAAD4AQAAAAAAAAAAAAD0AQAAAAAAAPQBAAAAAAAABAAAACAgICD0AQAAAAAAAPoBAAAAAAAAAAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAQAAAAAAAPMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAICAAAAAAAAAAAAAAICAAAAAAAAAwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AQAAAAAAAP8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": " Ero"
					},
					"BAAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAYCAAAAAAAAAAAAAAYCAAAAAAAABwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAgAAAAAAAAMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					272,
					1,
					"left_delete",
					null,
					"AQAAAAYCAAAAAAAABgIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "ror"
					},
					"AwAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					274,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkCAAAAAAAACwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAgAAAAAAAAkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAAoCAAAAAAAACwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					276,
					1,
					"left_delete",
					null,
					"AQAAAAoCAAAAAAAACgIAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAoCAAAAAAAADAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAgAAAAAAAAoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"insert",
					{
						"characters": "buffero"
					},
					"BwAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAAQAgAAAAAAABECAAAAAAAAAAAAABECAAAAAAAAEgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"left_delete",
					null,
					"AQAAABECAAAAAAAAEQIAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAgAAAAAAABICAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": " overrun"
					},
					"CAAAABECAAAAAAAAEgIAAAAAAAAAAAAAEgIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAgAAAAAAABECAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABsCAAAAAAAAHAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAgAAAAAAABsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABwCAAAAAAAAHgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAgAAAAAAABwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					2,
					"left_delete",
					null,
					"AgAAAB0CAAAAAAAAHQIAAAAAAAABAAAAIBwCAAAAAAAAHAIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAgAAAAAAAB4CAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/midi/MIDIControlEvent.js",
			"settings":
			{
				"buffer_size": 3841,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					66,
					1,
					"paste",
					null,
					"AQAAABUKAAAAAAAAYgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVCgAAAAAAABUKAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE4KAAAAAAAATwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOCgAAAAAAAE4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " paramCount"
					},
					"CwAAAE8KAAAAAAAAUAoAAAAAAAAAAAAAUAoAAAAAAABRCgAAAAAAAAAAAABRCgAAAAAAAFIKAAAAAAAAAAAAAFIKAAAAAAAAUwoAAAAAAAAAAAAAUwoAAAAAAABUCgAAAAAAAAAAAABUCgAAAAAAAFUKAAAAAAAAAAAAAFUKAAAAAAAAVgoAAAAAAAAAAAAAVgoAAAAAAABXCgAAAAAAAAAAAABXCgAAAAAAAFgKAAAAAAAAAAAAAFgKAAAAAAAAWQoAAAAAAAAAAAAAWQoAAAAAAABaCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPCgAAAAAAAE8KAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABkKAAAAAAAAGgoAAAAAAAAAAAAAGgoAAAAAAAAbCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZCgAAAAAAABkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					2,
					"left_delete",
					null,
					"AgAAAK0GAAAAAAAArQYAAAAAAABNAAAAICAgIGNvbnNvbGUubG9nKCdNSURJQ29udHJvbEV2ZW50LnJlYWRCeXRlcycsIHsgYiwgaGlieXRlIH0sIHN0YXR1cy5sZW5ndGgpOwqsBgAAAAAAAKwGAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtBgAAAAAAAPoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAH4FAAAAAAAAfwUAAAAAAAAAAAAAfwUAAAAAAACABQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+BQAAAAAAAH4FAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "draw-utils.js",
			"settings":
			{
				"buffer_size": 5007,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"paste",
					null,
					"AQAAADgCAAAAAAAAYAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgCAAAAAAAAOAIAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"paste",
					null,
					"AgAAAEkCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABNAgAAAAAAAAkAAABoYW5kbGVQb3M",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkCAAAAAAAAUgIAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"paste",
					null,
					"AgAAAFICAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABoAgAAAAAAAAQAAAB4LCB5",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFICAAAAAAAAVgIAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAACoPAAAAAAAAKw8AAAAAAAAAAAAAKw8AAAAAAAArDwAAAAAAAAEAAAAgKw8AAAAAAAAsDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoPAAAAAAAAKw8AAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					2,
					"left_delete",
					null,
					"AgAAACsPAAAAAAAAKw8AAAAAAAABAAAALyoPAAAAAAAAKg8AAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwPAAAAAAAALA8AAAAAAAAAAAAAAIBGQA"
				],
				[
					66,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAADkPAAAAAAAAOw8AAAAAAAAAAAAAvQ4AAAAAAAC/DgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0OAAAAAAAAOQ8AAAAAAAD////////vfw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAD8PAAAAAAAAQA8AAAAAAAAAAAAAQA8AAAAAAABBDwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8PAAAAAAAAPw8AAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC4BAAAAAAAALwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4BAAAAAAAALgEAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " R"
					},
					"AgAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAADABAAAAAAAAMAEAAAAAAAABAAAAUi8BAAAAAAAALwEAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEBAAAAAAAAMQEAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " Rect"
					},
					"BQAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8BAAAAAAAALwEAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQBAAAAAAAANQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQBAAAAAAAANAEAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\nget"
					},
					"BQAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADtCwAAAAAAAAAAAADtCwAAAAAAAO4LAAAAAAAAAAAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoLAAAAAAAA6gsAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " ia"
					},
					"AwAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAADyCwAAAAAAAPMLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAA8AsAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAPILAAAAAAAA8gsAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMLAAAAAAAA8wsAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "mageRect"
					},
					"CAAAAPILAAAAAAAA8wsAAAAAAAAAAAAA8wsAAAAAAAD0CwAAAAAAAAAAAAD0CwAAAAAAAPULAAAAAAAAAAAAAPULAAAAAAAA9gsAAAAAAAAAAAAA9gsAAAAAAAD3CwAAAAAAAAAAAAD3CwAAAAAAAPgLAAAAAAAAAAAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPILAAAAAAAA8gsAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPoLAAAAAAAA/AsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoLAAAAAAAA+gsAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"cut",
					null,
					"AQAAAOsLAAAAAAAA6wsAAAAAAAASAAAAICBnZXQgaW1hZ2VSZWN0KCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsLAAAAAAAA/QsAAAAAAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0LAAAAAAAAvQsAAAAAAAD////////vfw"
				],
				[
					130,
					1,
					"insert_completion",
					{
						"completion": "mods",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mods"
					},
					"AgAAAL0LAAAAAAAAvQsAAAAAAAABAAAAbb0LAAAAAAAAwQsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4LAAAAAAAAvgsAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					4,
					"left_delete",
					null,
					"BAAAAMALAAAAAAAAwAsAAAAAAAABAAAAc78LAAAAAAAAvwsAAAAAAAABAAAAZL4LAAAAAAAAvgsAAAAAAAABAAAAb70LAAAAAAAAvQsAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMELAAAAAAAAwQsAAAAAAAAAAAAAAADwvw"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0LAAAAAAAAvQsAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\nimageRect"
					},
					"CwAAAL4LAAAAAAAAvwsAAAAAAAAAAAAAvwsAAAAAAADBCwAAAAAAAAAAAADBCwAAAAAAAMILAAAAAAAAAAAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAADECwAAAAAAAMULAAAAAAAAAAAAAMULAAAAAAAAxgsAAAAAAAAAAAAAxgsAAAAAAADHCwAAAAAAAAAAAADHCwAAAAAAAMgLAAAAAAAAAAAAAMgLAAAAAAAAyQsAAAAAAAAAAAAAyQsAAAAAAADKCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4LAAAAAAAAvgsAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoLAAAAAAAAywsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoLAAAAAAAAygsAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAMoLAAAAAAAAygsAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsLAAAAAAAAywsAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAMoLAAAAAAAAywsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoLAAAAAAAAygsAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMsLAAAAAAAAzAsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsLAAAAAAAAywsAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMwLAAAAAAAAzgsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwLAAAAAAAAzAsAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADQCwAAAAAAAAAAAADQCwAAAAAAANELAAAAAAAAAAAAANELAAAAAAAA0wsAAAAAAAAAAAAAzgsAAAAAAADOCwAAAAAAAAIAAAAgIM4LAAAAAAAA0gsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0LAAAAAAAAzQsAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAANILAAAAAAAA0wsAAAAAAAAAAAAA0wsAAAAAAADUCwAAAAAAAAAAAADUCwAAAAAAANULAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANILAAAAAAAA0gsAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANULAAAAAAAA1wsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANULAAAAAAAA1QsAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANcLAAAAAAAA2AsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcLAAAAAAAA1wsAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANgLAAAAAAAA2gsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgLAAAAAAAA2AsAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANkLAAAAAAAA2gsAAAAAAAAAAAAA2gsAAAAAAADeCwAAAAAAAAAAAADeCwAAAAAAAN8LAAAAAAAAAAAAAN8LAAAAAAAA4wsAAAAAAAAAAAAA2gsAAAAAAADaCwAAAAAAAAQAAAAgICAg2gsAAAAAAADgCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkLAAAAAAAA2QsAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAOALAAAAAAAA4QsAAAAAAAAAAAAA4QsAAAAAAADiCwAAAAAAAAAAAADiCwAAAAAAAOMLAAAAAAAAAAAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA5AsAAAAAAADlCwAAAAAAAAAAAADlCwAAAAAAAOYLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOALAAAAAAAA4AsAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " this.w"
					},
					"BwAAAOYLAAAAAAAA5wsAAAAAAAAAAAAA5wsAAAAAAADoCwAAAAAAAAAAAADoCwAAAAAAAOkLAAAAAAAAAAAAAOkLAAAAAAAA6gsAAAAAAAAAAAAA6gsAAAAAAADrCwAAAAAAAAAAAADrCwAAAAAAAOwLAAAAAAAAAAAAAOwLAAAAAAAA7QsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYLAAAAAAAA5gsAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAOwLAAAAAAAA7AsAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0LAAAAAAAA7QsAAAAAAAAAAAAAAADwvw"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcLAAAAAAAA5wsAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAAOcLAAAAAAAA5wsAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgLAAAAAAAA6AsAAAAAAAAAAAAAAADwvw"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA6AsAAAAAAADpCwAAAAAAAAAAAADpCwAAAAAAAOoLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcLAAAAAAAA5wsAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " Rect("
					},
					"BgAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADsCwAAAAAAAAAAAADsCwAAAAAAAO0LAAAAAAAAAAAAAO0LAAAAAAAA7gsAAAAAAAAAAAAA7gsAAAAAAADvCwAAAAAAAAAAAADvCwAAAAAAAPALAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoLAAAAAAAA6gsAAAAAAAAAAAAAAADwvw"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAA8AsAAAAAAAAAAAAAAADwvw"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAPALAAAAAAAA8AsAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPELAAAAAAAA8QsAAAAAAAAAAAAAAADwvw"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAA8AsAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAPALAAAAAAAA8AsAAAAAAAABAAAAWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPELAAAAAAAA8QsAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "...this.t"
					},
					"CQAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAADyCwAAAAAAAPMLAAAAAAAAAAAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAD1CwAAAAAAAAAAAAD1CwAAAAAAAPYLAAAAAAAAAAAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAD4CwAAAAAAAPkLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAA8AsAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAPgLAAAAAAAA+AsAAAAAAAABAAAAdA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkLAAAAAAAA+QsAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "wnd"
					},
					"AwAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA+QsAAAAAAAD6CwAAAAAAAAAAAAD6CwAAAAAAAPsLAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgLAAAAAAAA+AsAAAAAAAAAAAAAAADwvw"
				],
				[
					165,
					2,
					"left_delete",
					null,
					"AgAAAPoLAAAAAAAA+gsAAAAAAAABAAAAZPkLAAAAAAAA+QsAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsLAAAAAAAA+wsAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "indo"
					},
					"BAAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAD7CwAAAAAAAAAAAAD7CwAAAAAAAPwLAAAAAAAAAAAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkLAAAAAAAA+QsAAAAAAAAAAAAAAADwvw"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAPwLAAAAAAAA/AsAAAAAAAABAAAAbw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0LAAAAAAAA/QsAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "ow.position,"
					},
					"DAAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA/QsAAAAAAAD+CwAAAAAAAAAAAAD+CwAAAAAAAP8LAAAAAAAAAAAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwLAAAAAAAA/AsAAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " ...this."
					},
					"CQAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABEMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgMAAAAAAAACAwAAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "window.suize"
					},
					"DAAAABEMAAAAAAAAEgwAAAAAAAAAAAAAEgwAAAAAAAATDAAAAAAAAAAAAAATDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEMAAAAAAAAEQwAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					4,
					"left_delete",
					null,
					"BAAAABwMAAAAAAAAHAwAAAAAAAABAAAAZRsMAAAAAAAAGwwAAAAAAAABAAAAehoMAAAAAAAAGgwAAAAAAAABAAAAaRkMAAAAAAAAGQwAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0MAAAAAAAAHQwAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "ize);"
					},
					"BQAAABkMAAAAAAAAGgwAAAAAAAAAAAAAGgwAAAAAAAAbDAAAAAAAAAAAAAAbDAAAAAAAABwMAAAAAAAAAAAAABwMAAAAAAAAHQwAAAAAAAAAAAAAHQwAAAAAAAAeDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkMAAAAAAAAGQwAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"cut",
					null,
					"AQAAAB4MAAAAAAAAHgwAAAAAAAAFAAAAdGhpcy4",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4MAAAAAAAAIwwAAAAAAAD////////vfw"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAPALAAAAAAAA8AsAAAAAAAAXAAAALi4udGhpcy53aW5kb3cucG9zaXRpb27wCwAAAAAAAAkMAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAABwwAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAPELAAAAAAAA8gsAAAAAAAAAAAAA8gsAAAAAAADyCwAAAAAAABcAAAAuLi50aGlzLndpbmRvdy5wb3NpdGlvbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPELAAAAAAAACAwAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"left_delete",
					null,
					"AQAAAPELAAAAAAAA8QsAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPILAAAAAAAA8gsAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPALAAAAAAAA8AsAAAAAAAABAAAAJ/ALAAAAAAAA8AsAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPELAAAAAAAA8QsAAAAAAAAAAAAAAADwvw"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "0."
					},
					"AgAAAPALAAAAAAAA8QsAAAAAAAAAAAAA8QsAAAAAAADyCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPALAAAAAAAA8AsAAAAAAAAAAAAAAADwvw"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAAPELAAAAAAAA8QsAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPILAAAAAAAA8gsAAAAAAAAAAAAAAADwvw"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": ",0"
					},
					"AgAAAPELAAAAAAAA8gsAAAAAAAAAAAAA8gsAAAAAAADzCwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPELAAAAAAAA8QsAAAAAAAAAAAAAAADwvw"
				],
				[
					229,
					2,
					"right_delete",
					null,
					"AgAAAP0LAAAAAAAA/QsAAAAAAAAGAAAAd2luZG93/QsAAAAAAAD9CwAAAAAAAAEAAAAu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0LAAAAAAAAAwwAAAAAAAAAAAAAAADwvw"
				],
				[
					239,
					1,
					"left_delete",
					null,
					"AQAAAL0LAAAAAAAAvQsAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4LAAAAAAAAvgsAAAAAAAD////////vfw"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAL0LAAAAAAAAvgsAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0LAAAAAAAAvQsAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACCEwAAaW1wb3J0IHsgQ09OVEVYVF9WRVJTSU9OX01BSk9SLCBDT05URVhUX1ZFUlNJT05fTUlOT1IsIE9QRU5HTF9DT1JFX1BST0ZJTEUsIE9QRU5HTF9GT1JXQVJEX0NPTVBBVCwgT1BFTkdMX1BST0ZJTEUsIFJFU0laQUJMRSwgU0FNUExFUywgV2luZG93LCBTaXplLCBQb3NpdGlvbiwgY29udGV4dCwgcG9sbCB9IGZyb20gJ2dsZncnOwpleHBvcnQgeyBXaW5kb3csIFNpemUsIFBvc2l0aW9uIH0gZnJvbSAnZ2xmdyc7CmltcG9ydCAqIGFzIG52ZyBmcm9tICduYW5vdmcnOwppbXBvcnQge01hdCxjdnRDb2xvciwgQ09MT1JfQkdSMlJHQkEsIFJlY3QgfSBmcm9tICdvcGVuY3YnOwppbXBvcnQgeyBSR0JBIH0gZnJvbSAnLi9saWIvY29sb3IuanMnOwppbXBvcnQgeyBhc3NlcnQgfSBmcm9tICd1dGlsJzsKaW1wb3J0IHsgZ2xDbGVhciwgZ2xDbGVhckNvbG9yLCBnbFZpZXdwb3J0LCBHTF9DT0xPUl9CVUZGRVJfQklULCBHTF9ERVBUSF9CVUZGRVJfQklULCBHTF9TVEVOQ0lMX0JVRkZFUl9CSVQgfSBmcm9tICcuL2dsLmpzJzsKCmV4cG9ydCBmdW5jdGlvbiBHTEZXKHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgPSB7fSkgewogICAgY29uc29sZS5sb2coJ0dMRlcnLCB7IHdpZHRoLCBoZWlnaHQsIG9wdGlvbnMgfSk7CiAgbGV0IHJlc29sdXRpb24gPSBuZXcgU2l6ZSh3aWR0aCwgaGVpZ2h0KTsKICBjb25zdCB7CiAgICByZXNpemFibGUgPSBmYWxzZSwKICAgIHNhbXBsZXMgPSA0LAogICAgY29udGV4dFZlcnNpb25NYWpvciA9IDMsCiAgICBjb250ZXh0VmVyc2lvbk1pbm9yID0gMiwKICAgIG9wZW5nbFByb2ZpbGUgPSBPUEVOR0xfQ09SRV9QUk9GSUxFLAogICAgb3BlbmdsRm9yd2FyZENvbXBhdCA9IHRydWUsCiAgICB0aXRsZSA9ICdPcGVuR0wnLAogICAgLi4uaGFuZGxlcnMKICB9ID0gb3B0aW9uczsKICBjb25zdCBoaW50cyA9IFsKICAgIFtDT05URVhUX1ZFUlNJT05fTUFKT1IsIGNvbnRleHRWZXJzaW9uTWFqb3JdLAogICAgW0NPTlRFWFRfVkVSU0lPTl9NSU5PUiwgY29udGV4dFZlcnNpb25NaW5vcl0sCiAgICBbT1BFTkdMX1BST0ZJTEUsIG9wZW5nbFByb2ZpbGVdLAogICAgW09QRU5HTF9GT1JXQVJEX0NPTVBBVCwgb3BlbmdsRm9yd2FyZENvbXBhdF0sCiAgICBbUkVTSVpBQkxFLCByZXNpemFibGVdLAogICAgW1NBTVBMRVMsIHNhbXBsZXNdCiAgXTsKCiAgZm9yKGxldCBbcHJvcCwgdmFsdWVdIG9mIGhpbnRzKSBXaW5kb3cuaGludChwcm9wLCB2YWx1ZSk7CgogIGxldCB3aW5kb3cgPSAoY29udGV4dC5jdXJyZW50ID0gbmV3IFdpbmRvdyhyZXNvbHV0aW9uLndpZHRoLCByZXNvbHV0aW9uLmhlaWdodCwgdGl0bGUpKTsKCiAgT2JqZWN0LmFzc2lnbih3aW5kb3csIHsgLi4uR0xGVy5kZWZhdWx0Q2FsbGJhY2tzLCAuLi5oYW5kbGVycyB9KTsKCiAgbnZnLkNyZWF0ZUdMMyhudmcuU1RFTkNJTF9TVFJPS0VTIHwgbnZnLkFOVElBTElBUyB8IG52Zy5ERUJVRyk7CgogIHJldHVybiBPYmplY3QuYXNzaWduKHRoaXMsIHsgcmVzb2x1dGlvbiwgdGl0bGUsIHdpbmRvdyB9KTsKfQoKR0xGVy5kZWZhdWx0Q2FsbGJhY2tzID0gewogIGhhbmRsZVBvcyh4LCB5KSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlUG9zJywgeyB4LCB5IH0pOwogIH0sCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlU2l6ZScsIHsgd2lkdGgsIGhlaWdodCB9KTsKICB9LAogIGhhbmRsZUNsb3NlKHdpbmRvdyA9IHRoaXMpIHsKICAgIGNvbnNvbGUubG9nKCdoYW5kbGVDbG9zZScsIHsgd2luZG93IH0pOwogIH0sCiAgaGFuZGxlUmVmcmVzaCh3aW5kb3cgPSB0aGlzKSB7CiAgICAvL2NvbnNvbGUubG9nKCdoYW5kbGVSZWZyZXNoJywgeyB3aW5kb3cgfSk7CiAgfSwKICBoYW5kbGVGb2N1cyhmb2N1c2VkKSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlRm9jdXMnLCB7IGZvY3VzZWQgfSk7CiAgfSwKICBoYW5kbGVJY29uaWZ5KGljb25pZmllZCkgewogICAgY29uc29sZS5sb2coJ2hhbmRsZUljb25pZnknLCB7IGljb25pZmllZCB9KTsKICB9LAogIGhhbmRsZUZyYW1lYnVmZmVyU2l6ZSh3aWR0aCwgaGVpZ2h0KSB7CiAgICAvL2NvbnNvbGUubG9nKCdoYW5kbGVGcmFtZWJ1ZmZlclNpemUnLCB7IHdpZHRoLCBoZWlnaHQgfSk7CiAgfSwKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykgewogICAgY29uc29sZS5sb2coJ2hhbmRsZU1vdXNlQnV0dG9uJywgeyBidXR0b24sIGFjdGlvbiwgbW9kcyB9KTsKICB9LAogIGhhbmRsZUN1cnNvclBvcyh4LCB5KSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlQ3Vyc29yUG9zJywgeyB4LCB5IH0pOwogIH0sCiAgaGFuZGxlQ3Vyc29yRW50ZXIoY3VyKSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlQ3Vyc29yRW50ZXInLCB7IGN1ciB9KTsKICB9LAogIGhhbmRsZVNjcm9sbCh4b2Zmc2V0LCB5b2Zmc2V0KSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlU2Nyb2xsJywgeyB4b2Zmc2V0LCB5b2Zmc2V0IH0pOwogIH0sCiAgaGFuZGxlS2V5KGtleSwgc2NhbmNvZGUsIGFjdGlvbiwgbW9kcykgewogICAgY29uc29sZS5sb2coJ2hhbmRsZUtleScsIHsga2V5LCBzY2FuY29kZSwgYWN0aW9uLCBtb2RzIH0pOwogIH0sCiAgaGFuZGxlQ2hhcihjKSB7CiAgICBjb25zb2xlLmxvZygnaGFuZGxlQ2hhcicsIHsgYyB9KTsKICB9LAogIGhhbmRsZUNoYXJNb2RzKGMsIG1vZHMpIHsKICAgIGNvbnNvbGUubG9nKCdoYW5kbGVDaGFyTW9kcycsIHsgYywgbW9kcyB9KTsKICB9LAogIGhhbmRsZURyb3AoYXJnYywgYXJndikgewogICAgY29uc29sZS5sb2coJ2hhbmRsZURyb3AnLCB7IGFyZ2MsIGFyZ3YgfSk7CiAgfQp9OwoKT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoR0xGVy5wcm90b3R5cGUsIHsKICBzaXplOiB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLndpbmRvdy5zaXplOwogICAgfQogIH0sCiAgcG9zaXRpb246IHsKICAgIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMud2luZG93LnBvc2l0aW9uOwogICAgfQogIH0sCiAgaW1hZ2VSZWN0OiB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiBuZXcgUmVjdCgwLDAsIC4uLnRoaXMuc2l6ZSk7CiAgICB9CiAgfQp9KTsKCk9iamVjdC5hc3NpZ24oR0xGVy5wcm90b3R5cGUsIHsKICBwb2xsLAogIG1vdmUoLi4uYXJncykgewogICAgY29uc3QgeyB3aW5kb3cgfSA9IHRoaXM7CiAgICB3aW5kb3cucG9zaXRpb24gPSBuZXcgUG9zaXRpb24oLi4uYXJncyk7CiAgfSwKICByZXNpemUoLi4uYXJncykgewogICAgY29uc3QgeyB3aW5kb3cgfSA9IHRoaXM7CiAgICB3aW5kb3cuc2l6ZSA9IG5ldyBTaXplKC4uLmFyZ3MpOwogIH0sCiAgc2V0VGl0bGUodGl0bGUpIHsKICAgIGNvbnN0IHsgd2luZG93IH0gPSB0aGlzOwogICAgd2luZG93LnRpdGxlID0gdGhpcy50aXRsZSA9IHRpdGxlOwogIH0sCiAgYmVnaW4oY2xlYXJDb2xvciA9IG5ldyBSR0JBKDAsIDAsIDAsIDI1NSkpIHsKICAgIGNvbnN0IHsgcmVzb2x1dGlvbiB9ID0gdGhpczsKICAgIGdsVmlld3BvcnQoMCwgMCwgcmVzb2x1dGlvbi53aWR0aCwgcmVzb2x1dGlvbi5oZWlnaHQpOwoKICAgIGlmKGNsZWFyQ29sb3IgaW5zdGFuY2VvZiBSR0JBKSBjbGVhckNvbG9yID0gY2xlYXJDb2xvci5ub3JtYWxpemUoKTsKCiAgICBnbENsZWFyQ29sb3IoLi4uY2xlYXJDb2xvcik7CiAgICBnbENsZWFyKEdMX0NPTE9SX0JVRkZFUl9CSVQgfCBHTF9ERVBUSF9CVUZGRVJfQklUIHwgR0xfU1RFTkNJTF9CVUZGRVJfQklUKTsKICB9LAogIGVuZCgpIHsKICAgIGNvbnN0IHsgd2luZG93IH0gPSB0aGlzOwogICAgd2luZG93LnN3YXBCdWZmZXJzKCk7CiAgICBwb2xsKCk7CiAgfSwKICBzaG93KG1hdCkgewogICAgdGhpcy5iZWdpbigpOwogICAvKiBsZXQgaW1nID0gTWF0MkltYWdlKG1hdCk7CiAgICAgbGV0IHNpemUgPSBudmcuSW1hZ2VTaXplKGltZyk7CiBjb25zb2xlLmxvZygnR0xGVy5zaG93Jywge21hdCxpbWcsc2l6ZX0pOwogICBEcmF3SW1hZ2UoaW1nKTsqLwogLy8gICB0aGlzLmVuZCgpOwogIH0KfSk7CgpleHBvcnQgZnVuY3Rpb24gTWF0MkltYWdlKG1hdCkgewoKICBpZihtYXQuY2hhbm5lbHMgPT0gMykgewogICAgbGV0IHRtcCA9IG5ldyBNYXQoKTsKICAgIGN2dENvbG9yKG1hdCwgdG1wLCBDT0xPUl9CR1IyUkdCQSk7CiAgICBtYXQ9dG1wOwogIH0KICBhc3NlcnQobWF0LmNoYW5uZWxzLCA0LCAiY2hhbm5lbHMgPT0gNCIpCiAgY29uc3Qge2NvbHMscm93cywgZGVwdGgsIGNoYW5uZWxzLCBzdGVwLCBlbGVtU2l6ZSwgZWxlbVNpemUxIH0gPSBtYXQ7CiAgY29uc29sZS5sb2coJ01hdDJJbWFnZScsIHtkZXB0aCxjaGFubmVscywgc3RlcDogc3RlcC9lbGVtU2l6ZSwgY29scywgcm93cywgZWxlbVNpemUsIGVsZW1TaXplMX0pOwoKICAgcmV0dXJuIG52Zy5DcmVhdGVJbWFnZVJHQkEobWF0LmNvbHMsIG1hdC5yb3dzLCAwLCBtYXQuYnVmZmVyKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdJbWFnZShpbWFnZSwgcG9zKSB7CiAgY29uc3Qgc2l6ZSA9IG52Zy5JbWFnZVNpemUoaW1hZ2UpOwogIG52Zy5TYXZlKCk7CiAgaWYocG9zKSBudmcuVHJhbnNsYXRlKC4uLnBvcyk7CiAgbnZnLkJlZ2luUGF0aCgpOwogIG52Zy5SZWN0KDAsIDAsIC4uLnNpemUpOwogIG52Zy5GaWxsUGFpbnQobnZnLkltYWdlUGF0dGVybigwLCAwLCAuLi5zaXplLCAwLCBpbWFnZSwgMSkpOwogIG52Zy5GaWxsKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIERyYXdDaXJjbGUocG9zLCByYWRpdXMpIHsKICBudmcuU2F2ZSgpOwogIG52Zy5UcmFuc2xhdGUoLi4ucG9zKTsKICBudmcuQmVnaW5QYXRoKCk7CiAgbnZnLlN0cm9rZUNvbG9yKG52Zy5SR0IoMjU1LCAyNTUsIDI1NSkpOwogIG52Zy5TdHJva2VXaWR0aCg1KTsKICBudmcuRmlsbENvbG9yKG52Zy5SR0JBKDI1NSwgMCwgMCwgOTYpKTsKICBudmcuQ2lyY2xlKDAsIDAsIHJhZGl1cyk7CiAgbnZnLkZpbGwoKTsKICBudmcuU3Ryb2tlKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoAAAAAAAAAAI8TAAAAAAAAAAAAAAAAAAAAAAAAjxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+CwAAAAAAAL4LAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"shfo",
				"Pretty Shell: Format"
			],
			[
				"format",
				"Formatter: Beautify With Prettier"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIControlEvent.js",
		"/home/roman/Schreibtisch/Reichelt - PIC Prozessoren 2.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDISysExEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIInstrument.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIFile.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIMetaEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIEvent.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDITrack.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDIStream.js",
		"/home/roman/Projects/plot-cv/lib/midi.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/test-midi.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/midi-client.js",
		"/home/roman/Projects/plot-cv/lib/midi/MIDI.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/glfw.sh",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/midi.html",
		"/home/roman/Projects/plot-cv/lib/grammars/css3.g4",
		"/home/roman/Projects/plot-cv/lib/grammars/xpath.g4",
		"/home/roman/Projects/plot-cv/lib/spawn.js",
		"/home/roman/Projects/plot-cv/trkl.es",
		"/home/roman/Projects/plot-cv/deep.es",
		"/home/roman/Projects/plot-cv/preact.es",
		"/home/roman/Projects/plot-cv/preact.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/discogs.js",
		"/home/roman/Projects/plot-cv/lscache.es",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg-qjs.h",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-104",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/check-discogs.js",
		"/home/roman/Projects/plot-cv/libs.js",
		"/home/roman/Projects/plot-cv/tmp/discogs/8369022-102",
		"/home/roman/Projects/plot-cv/discogs.es",
		"/home/roman/Projects/plot-cv/date-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js.orig",
		"/home/roman/Projects/plot-cv/test-imread.js",
		"/home/roman/Projects/plot-cv/childProcess.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/config.js",
		"/home/roman/Projects/plot-cv/make-bitmap.js",
		"/home/roman/Projects/plot-cv/diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/a.out",
		"/home/roman/Projects/plot-cv/test-autoplacer.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/lib/geom/size.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/size.js",
		"/home/roman/Projects/plot-cv/test-rpc.js",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/workerScript.js",
		"/home/roman/Projects/plot-cv/videoSource.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_clahe.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/plot-cv/test-diagram.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Sources/opencv/modules/videoio/src/cap_ffmpeg_impl.hpp",
		"/home/roman/Sources/opencv/modules/videoio/src/cap_ffmpeg.cpp",
		"/home/roman/Projects/ffmpeg-audio/orange-ffmpeg/ffmpeg-libs/static/ffmpeg/share/ffmpeg/examples/demuxing_decoding.c",
		"/home/roman/Projects/plot-cv/opencv-video.c",
		"/home/roman/Projects/plot-cv/simplest_ffmpeg_audio_decoder.cpp",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/fetch-post-prices.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/printer.js",
		"/home/roman/Projects/plot-cv/jack-session-client.c",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/lib/mics.js",
		"/home/roman/Projects/plot-cv/create-tamper.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser2.js",
		"/home/roman/Projects/plot-cv/time-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point_iterator.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/JSBindings.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/Functions.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/scripts/collapse-imports.sh",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/lib/eda/circuitjs.js",
		"/home/roman/Projects/plot-cv/lib/eda/values.js",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/an-tronics/eagle/Headphone-Amplifier-ClassAB-alt.sch",
		"/home/roman/Projects/plot-cv/lib/json/path.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 185.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,-*/opencv/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"'t",
			"this.show",
			"show",
			"show =",
			"new REPL",
			"Util\\.",
			"Util.isObject",
			"Util\\.",
			"std\\.",
			"new REPL",
			"getFunc",
			"REPL done",
			"SUCCESS'",
			"'SpawnCompiler'",
			"outputLog",
			"REPL",
			"onError",
			"daemon",
			"quit",
			"^(im|ex)port",
			"import",
			"ParamNav",
			"controlNumb",
			"TCP",
			"delta",
			"byteLength",
			"out of bound",
			"out of",
			"MIDIEvent",
			"GLFW",
			"COLOR_BGR2RGBA",
			"new Window",
			"opts\\.",
			"opts",
			"$",
			"main",
			"Param",
			"',].",
			"seek",
			"seekMsecs",
			"imgSz_2",
			"center",
			"pattern",
			"ImagePattern",
			"img2Sz",
			"this\\.window",
			"this",
			"glfw\\.",
			"cv\\.",
			"cv\\",
			"cv\\.",
			"glfw\\.",
			"Window",
			"Rect",
			"Size",
			"glfw\\.",
			"resolution",
			"handlers",
			"\\)  }\\)",
			"{}$",
			"{}",
			"glfw\\.",
			"glfw.Position",
			"glfw\\.",
			"glfw",
			"Size",
			"nvg",
			"glfw\\.",
			"^function",
			"new GLFW",
			"CreateImageRGBA",
			"imageRect",
			"mageRect",
			"'video'",
			"^(\\s*)console",
			"^\\s*console",
			"\\.capture'",
			"capture'",
			"'video'",
			"globalThis.globalThis\\.",
			"child_globalThis.process",
			"globalThis.process",
			"process\\.",
			"format",
			"status",
			"MIDIContr",
			"MIDIEvent\\.",
			"TYPE_META",
			"MIDIEvent\\.",
			" default as ",
			"MIDIControlEvent",
			"MIDIEvent\\.",
			"MIDIStream",
			"MIDITrack.prototype.(.*) = function",
			"MIDISysExEvent.prototype.(.*) = function",
			"MIDIStream.prototype.(.*) = function",
			"MIDIMetaEvent\\.",
			"MIDIMetaEvent.prototype.(.*) = function",
			"MThd",
			"readHeader",
			"MIDIFile.prototype.(.*) = function",
			"^MIDIControlEvent\\.",
			"MIDIControlEvent.prototype.(.*) = function",
			"hibyte",
			" MIDIEvent\\.",
			"\\.read",
			"status",
			" MIDIEvent\\.[a-z]",
			"MIDIEvent\\.[a-z]",
			"stream",
			"MIDI",
			"mIDI",
			"^import",
			"import ([^ ]*) ",
			"mIDI",
			"lib/midi/",
			"CONST ",
			"0X",
			"net\\.",
			"127.0.0.1",
			"selectors",
			"DJS_SHARED_LIBRARY",
			"Shipping Address",
			"/\\*",
			"thread_content",
			"diskosenn",
			"import\\(",
			"ReadJSON"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"isObject",
			"",
			"window",
			"",
			"options",
			" }\\)",
			"{},",
			"Position",
			"export function",
			"\\1//console",
			"globalThis.",
			"child_process",
			"globalThis.process\\.",
			" ",
			"\\1",
			"static ",
			"\\1 ",
			"static ",
			"\\1",
			"MIDI",
			"export",
			"export { default as \\1 } ",
			"MIDI",
			"",
			"const ",
			"0x",
			"",
			"ordersGetList",
			"getCacheValue",
			"tlsv",
			"\\1",
			"http",
			"fs.",
			",\\n    '-H', ",
			"Size.getOther(",
			"matrix",
			" cv::CV_",
			"CV_RGB(0, 0, 0)",
			"",
			"point",
			"\\\\D",
			"\\\\d",
			"\\.deref",
			"is_alphanumeric_char",
			"is_whitespace_char",
			"length",
			"{ const",
			"{ return",
			"const  {flags}=this;\\nreturn flags",
			"defines",
			"",
			"fs.\\1Sync",
			"define",
			",",
			"file",
			"target_compile_definitions",
			"msg",
			"PmDeviceInfo",
			"export function",
			"libportmidi",
			"\\1//\\2",
			"text",
			"\\1",
			"export function",
			"export &",
			"fs.",
			"array",
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2785,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/lib/color/convert.js",
							"function_name_status_row": 10,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									464,
									516
								],
								[
									1364,
									1394
								],
								[
									2085,
									2153
								],
								[
									2588,
									2625
								],
								[
									2692,
									2733
								],
								[
									2904,
									2934
								],
								[
									2955,
									2961
								],
								[
									3039,
									3067
								],
								[
									3579,
									3597
								],
								[
									3659,
									3670
								],
								[
									3745,
									3759
								],
								[
									3789,
									3803
								],
								[
									3833,
									3844
								],
								[
									5101,
									5149
								],
								[
									6089,
									6124
								],
								[
									6971,
									7019
								],
								[
									7612,
									7660
								],
								[
									7732,
									7736
								],
								[
									8297,
									8345
								],
								[
									8948,
									8983
								],
								[
									10046,
									10081
								],
								[
									10139,
									10143
								],
								[
									10844,
									10879
								],
								[
									11142,
									11146
								],
								[
									11699,
									11734
								],
								[
									12278,
									12313
								],
								[
									13005,
									13040
								],
								[
									13538,
									13573
								],
								[
									14257,
									14292
								],
								[
									15517,
									15552
								],
								[
									15881,
									15889
								],
								[
									16596,
									16631
								],
								[
									17221,
									17256
								],
								[
									17517,
									17550
								],
								[
									18076,
									18117
								],
								[
									18294,
									18314
								],
								[
									18363,
									18381
								],
								[
									19024,
									19046
								],
								[
									19564,
									19568
								],
								[
									19879,
									19914
								],
								[
									20520,
									20549
								],
								[
									20639,
									20643
								],
								[
									25113,
									25159
								],
								[
									27849,
									27883
								],
								[
									28317,
									28351
								],
								[
									28885,
									28919
								],
								[
									29385,
									29419
								],
								[
									30008,
									30042
								],
								[
									30463,
									30497
								],
								[
									31039,
									31073
								],
								[
									31609,
									31656
								],
								[
									32276,
									32310
								],
								[
									32832,
									32879
								],
								[
									33550,
									33584
								],
								[
									34010,
									34057
								],
								[
									34616,
									34650
								],
								[
									35137,
									35184
								],
								[
									35800,
									35834
								],
								[
									36359,
									36406
								],
								[
									37073,
									37107
								],
								[
									37530,
									37577
								],
								[
									38137,
									38171
								],
								[
									38662,
									38709
								],
								[
									39326,
									39360
								],
								[
									39889,
									39936
								],
								[
									40604,
									40638
								],
								[
									41065,
									41112
								],
								[
									41677,
									41711
								],
								[
									42135,
									42169
								],
								[
									42592,
									42613
								],
								[
									42824,
									42845
								],
								[
									43052,
									43073
								],
								[
									43295,
									43316
								],
								[
									43539,
									43560
								],
								[
									43778,
									43799
								],
								[
									44220,
									44254
								],
								[
									44577,
									44611
								],
								[
									44933,
									44967
								],
								[
									45302,
									45336
								],
								[
									45653,
									45687
								],
								[
									46014,
									46048
								],
								[
									46424,
									46454
								],
								[
									46735,
									46765
								],
								[
									47052,
									47082
								],
								[
									47369,
									47399
								],
								[
									47711,
									47753
								],
								[
									48058,
									48088
								],
								[
									48380,
									48410
								],
								[
									48707,
									48737
								],
								[
									49121,
									49154
								],
								[
									49435,
									49468
								],
								[
									49755,
									49788
								],
								[
									50077,
									50110
								],
								[
									50421,
									50466
								],
								[
									50772,
									50805
								],
								[
									51100,
									51133
								],
								[
									51429,
									51462
								],
								[
									51837,
									51866
								],
								[
									52096,
									52125
								],
								[
									52355,
									52384
								],
								[
									52610,
									52639
								],
								[
									52880,
									52909
								],
								[
									53151,
									53180
								],
								[
									53417,
									53446
								]
							],
							"symlist":
							[
								"  rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0)",
								"  hue2rgb(t1, t2, hue)",
								"  luminance2contrast(relativeLuminance1, relativeLuminance2)",
								"  rgb2value(rgbR, rgbG, rgbB)",
								"  rgb2whiteness(rgbR, rgbG, rgbB)",
								"  matrix(params, mats)",
								"  mat =>",
								"\t(acc, value, index) =>",
								"  atan2d = (y, x) =>",
								"  cosd = x =>",
								"  deg2rad = x =>",
								"  rad2deg = x =>",
								"  sind = x =>",
								"  rgb2hsl(rgbR, rgbG, rgbB, fallbackhue)",
								"  hsl2rgb(hslH, hslS, hslL)",
								"  rgb2hwb(rgbR, rgbG, rgbB, fallbackhue)",
								"  hwb2rgb(hwbH, hwbW, hwbB, fallbackhue)",
								"  v =>",
								"  rgb2hsv(rgbR, rgbG, rgbB, fallbackhue)",
								"  hsv2rgb(hsvH, hsvS, hsvV)",
								"  rgb2xyz(rgbR, rgbG, rgbB)",
								"  v =>",
								"  xyz2rgb(xyzX, xyzY, xyzZ)",
								"  v =>",
								"  hsl2hsv(hslH, hslS, hslL)",
								"  hsv2hsl(hsvH, hsvS, hsvV)",
								"  hwb2hsv(hwbH, hwbW, hwbB)",
								"  hsv2hwb(hsvH, hsvS, hsvV)",
								"  lab2xyz(labL, labA, labB)",
								"  xyz2lab(xyzX, xyzY, xyzZ)",
								"  value =>",
								"  lab2lch(labL, labA, labB)",
								"  lch2lab(lchL, lchC, lchH)",
								"  rgb2contrast(rgb1, rgb2)",
								"  rgb2luminance(rgbR, rgbG, rgbB)",
								"  adjustChannel = x =>",
								"  adjustGamma = x =>",
								"  hex2rgb(hex)",
								"  c =>",
								"  rgb2hex(rgbR, rgbG, rgbB)",
								"  keyword2rgb(keyword)",
								"  x =>",
								"  lab2ciede([L1, a1, b1], [L2, a2, b2])",
								"  rgb2lab(rgbR, rgbG, rgbB)",
								"  lab2rgb(labL, labA, labB)",
								"  rgb2lch(rgbR, rgbG, rgbB)",
								"  lch2rgb(lchL, lchC, lchH)",
								"  hwb2hsl(hwbH, hwbW, hwbB)",
								"  hsl2hwb(hslH, hslS, hslL)",
								"  hsl2lab(hslH, hslS, hslL)",
								"  lab2hsl(labL, labA, labB, fallbackhue)",
								"  hsl2lch(hslH, hslS, hslL)",
								"  lch2hsl(lchL, lchC, lchH, fallbackhue)",
								"  hsl2xyz(hslH, hslS, hslL)",
								"  xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue)",
								"  hwb2lab(hwbH, hwbW, hwbB)",
								"  lab2hwb(labL, labA, labB, fallbackhue)",
								"  hwb2lch(hwbH, hwbW, hwbB)",
								"  lch2hwb(lchL, lchC, lchH, fallbackhue)",
								"  hwb2xyz(hwbH, hwbW, hwbB)",
								"  xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue)",
								"  hsv2lab(hsvH, hsvS, hsvV)",
								"  lab2hsv(labL, labA, labB, fallbackhue)",
								"  hsv2lch(hsvH, hsvS, hsvV)",
								"  lch2hsv(lchL, lchC, lchH, fallbackhue)",
								"  hsv2xyz(hsvH, hsvS, hsvV)",
								"  xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue)",
								"  xyz2lch(xyzX, xyzY, xyzZ)",
								"  lch2xyz(lchL, lchC, lchH)",
								"  hex2hsl(hex)",
								"  hex2hsv(hex)",
								"  hex2hwb(hex)",
								"  hex2lab(hex)",
								"  hex2lch(hex)",
								"  hex2xyz(hex)",
								"  hsl2hex(hslH, hslS, hslL)",
								"  hsv2hex(hsvH, hsvS, hsvV)",
								"  hwb2hex(hwbH, hwbW, hwbB)",
								"  lab2hex(labL, labA, labB)",
								"  lch2hex(lchL, lchC, lchH)",
								"  xyz2hex(xyzX, xyzY, xyzZ)",
								"  hex2ciede(hex1, hex2)",
								"  hsl2ciede(hsl1, hsl2)",
								"  hsv2ciede(hsv1, hsv2)",
								"  hwb2ciede(hwb1, hwb2)",
								"  keyword2ciede(keyword1, keyword2)",
								"  lch2ciede(lch1, lch2)",
								"  rgb2ciede(rgb1, rgb2)",
								"  xyz2ciede(xyz1, xyz2)",
								"  hex2contrast(hex1, hex2)",
								"  hsl2contrast(hsl1, hsl2)",
								"  hsv2contrast(hsv1, hsv2)",
								"  hwb2contrast(hwb1, hwb2)",
								"  keyword2contrast(keyword1, keyword2)",
								"  lab2contrast(lab1, lab2)",
								"  lch2contrast(lch1, lch2)",
								"  xyz2contrast(xyz1, xyz2)",
								"  keyword2hex(keyword)",
								"  keyword2hsl(keyword)",
								"  keyword2hsv(keyword)",
								"  keyword2hwb(keyword)",
								"  keyword2lab(keyword)",
								"  keyword2lch(keyword)",
								"  keyword2xyz(keyword)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646267373.73,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-video.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24769,
						"regions":
						{
						},
						"selection":
						[
							[
								13895,
								13896
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 428,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646130965.29,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6800.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "param.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4811,
						"regions":
						{
						},
						"selection":
						[
							[
								3936,
								3942
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 161,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646130300.85,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_moving":
							[
								16,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1581.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test-midi.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4506,
						"regions":
						{
						},
						"selection":
						[
							[
								3354,
								3354
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 112,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646267329.79,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1904.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "midi-tcp.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4553,
						"regions":
						{
						},
						"selection":
						[
							[
								3106,
								3106
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 96,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646267329.34,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1259.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13624,
						"regions":
						{
						},
						"selection":
						[
							[
								1923,
								1927
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 59,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646267328.74,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 562.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ast-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37253,
						"regions":
						{
						},
						"selection":
						[
							[
								3286,
								3319
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 100,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646284666.11,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1334.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/color/convert.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54413,
						"regions":
						{
						},
						"selection":
						[
							[
								3981,
								4308
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 123,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646365808.68,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1555.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "dom.es",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646261994.48,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "midi-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 557,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646128787.75,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/midi.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 445,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tabs_extra_last_activated": 1646123281.78,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/midi/MIDIEvent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1129,
						"regions":
						{
						},
						"selection":
						[
							[
								578,
								584
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 21,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646126178.04,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9850,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										336,
										348
									],
									[
										699,
										711
									],
									[
										1061,
										1073
									],
									[
										1345,
										1357
									],
									[
										1570,
										1582
									],
									[
										1879,
										1891
									],
									[
										2286,
										2298
									],
									[
										2411,
										2423
									],
									[
										2934,
										2946
									],
									[
										3799,
										3811
									],
									[
										4372,
										4384
									],
									[
										4840,
										4852
									],
									[
										5221,
										5233
									],
									[
										5519,
										5531
									],
									[
										5800,
										5812
									],
									[
										6117,
										6129
									],
									[
										6558,
										6570
									],
									[
										6812,
										6824
									],
									[
										7169,
										7181
									],
									[
										7474,
										7486
									],
									[
										7722,
										7734
									],
									[
										8117,
										8129
									],
									[
										8371,
										8383
									],
									[
										8707,
										8719
									],
									[
										9043,
										9055
									],
									[
										9389,
										9401
									],
									[
										9692,
										9707
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								9696,
								9696
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 180,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1646267191.77,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3128.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "clang-ast.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74272,
						"regions":
						{
						},
						"selection":
						[
							[
								30088,
								30090
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1047,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646268340.19,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17373.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/midi/MIDIStream.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2906,
						"regions":
						{
						},
						"selection":
						[
							[
								540,
								540
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646125385.65,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1377.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/midi/MIDIControlEvent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3841,
						"regions":
						{
						},
						"selection":
						[
							[
								1604,
								1611
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 67,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646128785.31,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1071.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "draw-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5007,
						"regions":
						{
						},
						"selection":
						[
							[
								3006,
								3006
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 99,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1646121653.79,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1275.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.846927086596,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.Protocol":
	{
		"height": 0.0
	},
	"output.Protocol(139700989367200)":
	{
		"height": 0.0
	},
	"output.Protocol(139713492737424)":
	{
		"height": 0.0
	},
	"output.Protocol(140020110213280)":
	{
		"height": 0.0
	},
	"output.Protocol(140125752054832)":
	{
		"height": 0.0
	},
	"output.Protocol(140156680251040)":
	{
		"height": 0.0
	},
	"output.Protocol(140190209186352)":
	{
		"height": 0.0
	},
	"output.Protocol(140264240155856)":
	{
		"height": 0.0
	},
	"output.Protocol(140329702042448)":
	{
		"height": 0.0
	},
	"output.Protocol(140490298408144)":
	{
		"height": 0.0
	},
	"output.Protocol(140502873410144)":
	{
		"height": 0.0
	},
	"output.Protocol(140569677500528)":
	{
		"height": 0.0
	},
	"output.Protocol(140614610778000)":
	{
		"height": 0.0
	},
	"output.Protocol(140627243657680)":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"convert.",
				"lib/color/convert.js"
			],
			[
				"ast",
				"ast-shell.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"debugger-",
				"debugger-server.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"param",
				"param.js"
			],
			[
				"midi",
				"midi-client.js"
			],
			[
				"MIDIEV",
				"lib/midi/MIDIEvent.js"
			],
			[
				"test-midi",
				"test-midi.js"
			],
			[
				"draw",
				"draw-utils.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"cvPip",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"glfw.s",
				"glfw.sh"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"cvHigh",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"test-mid",
				"test-midi.js"
			],
			[
				"midi.js",
				"lib/midi.js"
			],
			[
				"midi-clie",
				"midi-client.js"
			],
			[
				"midi.html",
				"midi.html"
			],
			[
				"css",
				"lib/grammars/css3.g4"
			],
			[
				"xpath",
				"lib/grammars/xpath.g4"
			],
			[
				"console",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"libs.js",
				"libs.js"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"disco",
				"discogs.js"
			],
			[
				"spawn.",
				"lib/spawn.js"
			],
			[
				"helpers",
				"io-helpers.js.orig"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"child-",
				"quickjs/qjs-modules/child-process.c"
			],
			[
				"package.j",
				"package.json"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"test-imrea",
				"test-imread.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"cvpipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"events.js",
				"quickjs/qjs-modules/lib/events.js"
			],
			[
				"test-vi",
				"test-video.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"size.js",
				"lib/geom/size.js"
			],
			[
				"test-rpc",
				"test-rpc.js"
			],
			[
				"server",
				"server.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"test-wor",
				"test-worker.js"
			],
			[
				"ws-work",
				"ws-worker.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"cvVi",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"ideoSou",
				"videoSource.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"documen",
				"lib/eagle/document.js"
			],
			[
				"cvPipe",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"test-video",
				"test-video.js"
			],
			[
				"dia",
				"diagram.js"
			],
			[
				"diagra",
				"diagram.js"
			],
			[
				"diag",
				"diagram.js"
			],
			[
				"opencv-vi",
				"opencv-video.c"
			],
			[
				"opencv-vide",
				"opencv-video.c"
			],
			[
				"simplest",
				"simplest_ffmpeg_audio_decoder.cpp"
			],
			[
				"util.",
				"lib/util.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"js",
				"jack-session-client.c"
			],
			[
				"package.js",
				"package.json"
			],
			[
				"printer",
				"lib/ecmascript/printer.js"
			],
			[
				"parser2.",
				"lib/ecmascript/parser2.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"diagram",
				"diagram.js"
			],
			[
				"point.hpp",
				"qjs-opencv/js_point.hpp"
			],
			[
				"jsbind",
				"qjs-opencv/jsbindings.hpp"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"help",
				"time-helpers.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"server.",
				"server.js"
			],
			[
				"image",
				"imagePipeline.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"minnet-http",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"minnet-server",
				"quickjs/qjs-net/minnet-server.c"
			],
			[
				"minnet.c",
				"quickjs/qjs-net/minnet.c"
			],
			[
				"time-help",
				"time-helpers.js"
			],
			[
				"io-helpers",
				"io-helpers.js"
			],
			[
				"test-bjson",
				"test-bjson.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"commands.j",
				"commands.js"
			],
			[
				"render",
				"lib/eagle/renderer.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"diff.js",
				"lib/json/diff.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"repl",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"circuit",
				"lib/eda/circuitjs.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-shell.js",
				"cv-shell.js"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"queue.h",
				"quickjs/qjs-modules/queue.h"
			],
			[
				"queue.c",
				"quickjs/qjs-modules/queue.c"
			],
			[
				"char-utils",
				"quickjs/qjs-modules/char-utils.h"
			],
			[
				"quickjs-misc.",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"predicate.c",
				"quickjs/qjs-modules/predicate.c"
			],
			[
				"debugger-tran",
				"quickjs/quickjs-debugger-transport-win.c"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger-transport-unix.c"
			],
			[
				"defs",
				"quickjs/defs.cmake"
			],
			[
				"quickjs/CMakeLi",
				"quickjs/CMakeLists.txt"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-pred",
				"quickjs/qjs-modules/quickjs-predicate.c"
			],
			[
				"package",
				"package.json"
			],
			[
				"xpath.js",
				"lib/dom/xpath.js"
			],
			[
				"compileComm",
				"lib/build/compileCommand.js"
			],
			[
				"compile_com",
				"compile_commands.js"
			],
			[
				"quickjs-pat",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"test-child",
				"test-childprocess.js"
			],
			[
				"test-ini",
				"test-ini.js"
			],
			[
				"fn.js",
				"lib/parse/fn.js"
			],
			[
				"test-css",
				"test-css3.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"grammar-css3",
				"grammar-css3.js"
			],
			[
				"css3",
				"lib/grammars/css3.g4"
			],
			[
				"grammar.js",
				"lib/parse/grammar.js"
			],
			[
				"test-parse",
				"test-parse.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 286.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
