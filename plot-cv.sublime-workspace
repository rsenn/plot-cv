{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Extra",
				"ExtractRotation"
			],
			[
				"tra",
				"transformation"
			],
			[
				"define",
				"defineProperties"
			],
			[
				"getters",
				"gettersSetters"
			],
			[
				"circui",
				"circuitFilePath"
			],
			[
				"Conn",
				"ConnectionPoint"
			],
			[
				"parseCom",
				"parseCommentOrEmpty"
			],
			[
				"circ",
				"circuitFilePath"
			],
			[
				"built",
				"builtin_attr"
			],
			[
				"dep",
				"depthOrPred"
			],
			[
				"exte",
				"extendAsyncGenerator"
			],
			[
				"extend",
				"extendArray"
			],
			[
				"allo",
				"allowedDirs"
			],
			[
				"getOwnPr",
				"getOwnPropertyNames(...)"
			],
			[
				"Prom",
				"PromiseWorker"
			],
			[
				"trans",
				"transformation"
			],
			[
				"allow",
				"allowedDirs"
			],
			[
				"Get",
				"GetElementsBySignal"
			],
			[
				"GetEle",
				"GetElementsBySignal"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"ColorSi",
				"ColorSignals"
			],
			[
				"HTML",
				"HTMLTableRow"
			],
			[
				"HTMLTable",
				"HTMLTableColumn"
			],
			[
				"rend",
				"renderToString"
			],
			[
				"Pack",
				"Package2Circuit"
			],
			[
				"lazyP",
				"lazyProperties"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					43,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18610,
								18642
							],
							[
								19245,
								19249
							],
							[
								19770,
								19787
							],
							[
								20089,
								20124
							],
							[
								20972,
								20977
							],
							[
								21704,
								21708
							],
							[
								21802,
								21806
							],
							[
								21926,
								21935
							],
							[
								22065,
								22072
							],
							[
								22353,
								22360
							],
							[
								22441,
								22448
							],
							[
								22512,
								22528
							],
							[
								22593,
								22613
							],
							[
								23312,
								23324
							],
							[
								23423,
								23435
							],
							[
								23637,
								23653
							],
							[
								23747,
								23760
							],
							[
								24036,
								24054
							],
							[
								24244,
								24273
							],
							[
								24681,
								24700
							],
							[
								25133,
								25154
							],
							[
								26183,
								26205
							],
							[
								26678,
								26699
							],
							[
								27250,
								27269
							],
							[
								27703,
								27711
							],
							[
								30414,
								30426
							],
							[
								32273,
								32308
							],
							[
								32981,
								33000
							],
							[
								33108,
								33124
							],
							[
								33259,
								33276
							],
							[
								33321,
								33334
							],
							[
								33370,
								33380
							],
							[
								34234,
								34250
							],
							[
								34339,
								34358
							],
							[
								34369,
								34388
							],
							[
								34414,
								34434
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18621,
								18653
							],
							[
								19256,
								19260
							],
							[
								19781,
								19798
							],
							[
								20100,
								20135
							],
							[
								20983,
								20988
							],
							[
								21715,
								21719
							],
							[
								21813,
								21817
							],
							[
								21937,
								21946
							],
							[
								22076,
								22083
							],
							[
								22364,
								22371
							],
							[
								22452,
								22459
							],
							[
								22523,
								22539
							],
							[
								22604,
								22624
							],
							[
								23323,
								23335
							],
							[
								23434,
								23446
							],
							[
								23648,
								23664
							],
							[
								23758,
								23771
							],
							[
								24047,
								24065
							],
							[
								24255,
								24284
							],
							[
								24692,
								24711
							],
							[
								25144,
								25165
							],
							[
								26194,
								26216
							],
							[
								26689,
								26710
							],
							[
								27261,
								27280
							],
							[
								27714,
								27722
							],
							[
								30425,
								30437
							],
							[
								32284,
								32319
							],
							[
								32992,
								33011
							],
							[
								33119,
								33135
							],
							[
								33270,
								33287
							],
							[
								33332,
								33345
							],
							[
								33381,
								33391
							],
							[
								34245,
								34261
							],
							[
								34350,
								34369
							],
							[
								34380,
								34399
							],
							[
								34425,
								34445
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwcAACAgdmFsdWUgPT4KICAobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpFeGVjVG9vbChjbWQsIC4uLmFyZ3MpCkdldE1pbWUoZmlsZSkKTWF0Y2hlcihwYXR0ZXJuLCB0ID0gYXJnID0+IGFyZykKICAoLi4uYXJncykgPT4KS2V5T3JWYWx1ZU1hdGNoZXIocGF0dGVybikKICAoW2tleSwgdmFsdWVdKSA9PgpHZXRSb290RGlyZWN0b3JpZXMocGF0dGVybiA9ICcqJykKTWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIGRkID0+CiAgZCA9PgogIGQgPT4KICBkID0+CkdldERpcihkaXIpCiAgbiA9PgpEaXJOYW1lKG5hbWUpCiAgaXQgPT4KRGF0ZVN0cihkYXRlKQpNb2RlU3RyKG1vZGUpCkhUTUxQYWdlID0gKHsgdGl0bGUsIHN0eWxlLCBzY3JpcHRzID0gW10sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIHNjcmlwdCA9PgpGaWx0ZXJGb3JtID0gKHsgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlID0gKHsgcm93cywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlUm93ID0gKHsgY29sdW1ucywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlQ29sdW1uID0gKHsgY29sdW1ucywgY2hpbGRyZW4sIHRhZyA9ICd0ZCcsIC4uLnByb3BzIH0pID0+CkZpbGVMaW5rID0gKHsgZmlsZSwgLi4ucHJvcHMgfSkgPT4KRmlsZU9iamVjdCA9ICh7IGZpbGUsIHN0YXQgPSB7fSwgLi4ucHJvcHMgfSkgPT4KRmlsZVRhYmxlID0gKHsgZmlsZXMsIC4uLnByb3BzIH0pID0+CihhLCBiKSA9PgogIGZpZWxkID0+CiAgZmlsZSA9PgpSZWFkRXhpdjIoZmlsZSkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKGEsIGIpID0+Cihbaywgdl0pID0+ClJlYWRFeGlmdG9vbChmaWxlKQogIGwgPT4KICBsaW5lID0+CihbbGluZSwgaWR4XSkgPT4KSGVpZkNvbnZlcnQoc3JjLCBkc3QsIHF1YWxpdHkgPSAxMDApCk1hZ2lja1Jlc2l6ZShzcmMsIGRzdCwgcm90YXRlID0gMCwgd2lkdGgsIGhlaWdodCkKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KUGFyc2VCb2R5KGdlbikKICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAub3V0ID0gcyA9PgogIHRlc3QocmVxLCByZXNwKQogIHByb3h5KHJlcSwgcmVzcCkKICBjb25maWcocmVxLCByZXNwKQogIGZpbGUocmVxLCByZXNwKQooW2Rpcl0pID0+CiAgZiA9PgogIGZpbGUgPT4KICB1cGxvYWRzKHJlcSwgcmVzcCkKICBzID0+CiAgZmlsZXMocmVxLCByZXNwKQogIG4gPT4KKFtuYW1lLCB0eXBlXSkgPT4KICBmaWxlczIocmVxLCByZXNwKQogIG4gPT4KICBuID0+CiAgbiA9PgooYSwgYikgPT4KICBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KKFtmaWxlLCByZWxdKSA9PgooYWNjLCBbZmlsZSwgc3RdKSA9PgogIHN0cmluZyhhLCBiKQogIG51bWJlcihhLCBiKQooW25hbWUsIG9ial0pID0+Cih7IG5hbWUgfSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZENvbW1hbmQgPSBmdW5jdGlvbihkYXRhKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkh0dHAod3MsIHJlcSwgcmVzcCkKICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGRhdGEpCiAgb25DbG9zZShuYW1lLCBmaWxlKQogIGYgPSB4ID0+CiAgb25GaW5hbGl6ZSgpCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgYnlfdXVpZCgpCiAgdXVpZChkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIHF1aXQod2h5KQAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwcAACAgdmFsdWUgPT4KICAobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpFeGVjVG9vbChjbWQsIC4uLmFyZ3MpCkdldE1pbWUoZmlsZSkKTWF0Y2hlcihwYXR0ZXJuLCB0ID0gYXJnID0+IGFyZykKICAoLi4uYXJncykgPT4KS2V5T3JWYWx1ZU1hdGNoZXIocGF0dGVybikKICAoW2tleSwgdmFsdWVdKSA9PgpHZXRSb290RGlyZWN0b3JpZXMocGF0dGVybiA9ICcqJykKTWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIGRkID0+CiAgZCA9PgogIGQgPT4KICBkID0+CkdldERpcihkaXIpCiAgbiA9PgpEaXJOYW1lKG5hbWUpCiAgaXQgPT4KRGF0ZVN0cihkYXRlKQpNb2RlU3RyKG1vZGUpCkhUTUxQYWdlID0gKHsgdGl0bGUsIHN0eWxlLCBzY3JpcHRzID0gW10sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIHNjcmlwdCA9PgpGaWx0ZXJGb3JtID0gKHsgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlID0gKHsgcm93cywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlUm93ID0gKHsgY29sdW1ucywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlQ29sdW1uID0gKHsgY29sdW1ucywgY2hpbGRyZW4sIHRhZyA9ICd0ZCcsIC4uLnByb3BzIH0pID0+CkZpbGVMaW5rID0gKHsgZmlsZSwgLi4ucHJvcHMgfSkgPT4KRmlsZU9iamVjdCA9ICh7IGZpbGUsIHN0YXQgPSB7fSwgLi4ucHJvcHMgfSkgPT4KRmlsZVRhYmxlID0gKHsgZmlsZXMsIC4uLnByb3BzIH0pID0+CihhLCBiKSA9PgogIGZpZWxkID0+CiAgZmlsZSA9PgpSZWFkRXhpdjIoZmlsZSkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKGEsIGIpID0+Cihbaywgdl0pID0+ClJlYWRFeGlmdG9vbChmaWxlKQogIGwgPT4KICBsaW5lID0+CihbbGluZSwgaWR4XSkgPT4KSGVpZkNvbnZlcnQoc3JjLCBkc3QsIHF1YWxpdHkgPSAxMDApCk1hZ2lja1Jlc2l6ZShzcmMsIGRzdCwgcm90YXRlID0gMCwgd2lkdGgsIGhlaWdodCkKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KUGFyc2VCb2R5KGdlbikKICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAub3V0ID0gcyA9PgogIHRlc3QocmVxLCByZXNwKQogIHByb3h5KHJlcSwgcmVzcCkKICBjb25maWcocmVxLCByZXNwKQogIGZpbGUocmVxLCByZXNwKQooW2Rpcl0pID0+CiAgZiA9PgogIGZpbGUgPT4KICB1cGxvYWRzKHJlcSwgcmVzcCkKICBzID0+CiAgZmlsZXMocmVxLCByZXNwKQogIG4gPT4KKFtuYW1lLCB0eXBlXSkgPT4KICBmaWxlczIocmVxLCByZXNwKQogIG4gPT4KICBuID0+CiAgbiA9PgooYSwgYikgPT4KICBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KKFtmaWxlLCByZWxdKSA9PgooYWNjLCBbZmlsZSwgc3RdKSA9PgogIHN0cmluZyhhLCBiKQogIG51bWJlcihhLCBiKQooW25hbWUsIG9ial0pID0+Cih7IG5hbWUgfSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZENvbW1hbmQgPSBmdW5jdGlvbihkYXRhKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkh0dHAod3MsIHJlcSwgcmVzcCkKICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGRhdGEpCiAgb25DbG9zZShuYW1lLCBmaWxlKQogIGYgPSB4ID0+CiAgb25GaW5hbGl6ZSgpCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgYnlfdXVpZCgpCiAgdXVpZChkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIHF1aXQod2h5KQAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwcAACAgdmFsdWUgPT4KICAobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpFeGVjVG9vbChjbWQsIC4uLmFyZ3MpCkdldE1pbWUoZmlsZSkKTWF0Y2hlcihwYXR0ZXJuLCB0ID0gYXJnID0+IGFyZykKICAoLi4uYXJncykgPT4KS2V5T3JWYWx1ZU1hdGNoZXIocGF0dGVybikKICAoW2tleSwgdmFsdWVdKSA9PgpHZXRSb290RGlyZWN0b3JpZXMocGF0dGVybiA9ICcqJykKTWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIGRkID0+CiAgZCA9PgogIGQgPT4KICBkID0+CkdldERpcihkaXIpCiAgbiA9PgpEaXJOYW1lKG5hbWUpCiAgaXQgPT4KRGF0ZVN0cihkYXRlKQpNb2RlU3RyKG1vZGUpCkhUTUxQYWdlID0gKHsgdGl0bGUsIHN0eWxlLCBzY3JpcHRzID0gW10sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIHNjcmlwdCA9PgpGaWx0ZXJGb3JtID0gKHsgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlID0gKHsgcm93cywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlUm93ID0gKHsgY29sdW1ucywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlQ29sdW1uID0gKHsgY29sdW1ucywgY2hpbGRyZW4sIHRhZyA9ICd0ZCcsIC4uLnByb3BzIH0pID0+CkZpbGVMaW5rID0gKHsgZmlsZSwgLi4ucHJvcHMgfSkgPT4KRmlsZU9iamVjdCA9ICh7IGZpbGUsIHN0YXQgPSB7fSwgLi4ucHJvcHMgfSkgPT4KRmlsZVRhYmxlID0gKHsgZmlsZXMsIC4uLnByb3BzIH0pID0+CihhLCBiKSA9PgogIGZpZWxkID0+CiAgZmlsZSA9PgpSZWFkRXhpdjIoZmlsZSkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKGEsIGIpID0+Cihbaywgdl0pID0+ClJlYWRFeGlmdG9vbChmaWxlKQogIGwgPT4KICBsaW5lID0+CihbbGluZSwgaWR4XSkgPT4KSGVpZkNvbnZlcnQoc3JjLCBkc3QsIHF1YWxpdHkgPSAxMDApCk1hZ2lja1Jlc2l6ZShzcmMsIGRzdCwgcm90YXRlID0gMCwgd2lkdGgsIGhlaWdodCkKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KUGFyc2VCb2R5KGdlbikKICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAub3V0ID0gcyA9PgogIHRlc3QocmVxLCByZXNwKQogIHByb3h5KHJlcSwgcmVzcCkKICBjb25maWcocmVxLCByZXNwKQogIGZpbGUocmVxLCByZXNwKQooW2Rpcl0pID0+CiAgZiA9PgogIGZpbGUgPT4KICB1cGxvYWRzKHJlcSwgcmVzcCkKICBzID0+CiAgZmlsZXMocmVxLCByZXNwKQogIG4gPT4KKFtuYW1lLCB0eXBlXSkgPT4KICBmaWxlczIocmVxLCByZXNwKQogIG4gPT4KICBuID0+CiAgbiA9PgooYSwgYikgPT4KICBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KKFtmaWxlLCByZWxdKSA9PgooYWNjLCBbZmlsZSwgc3RdKSA9PgogIHN0cmluZyhhLCBiKQogIG51bWJlcihhLCBiKQooW25hbWUsIG9ial0pID0+Cih7IG5hbWUgfSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZENvbW1hbmQgPSBmdW5jdGlvbihkYXRhKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkh0dHAod3MsIHJlcSwgcmVzcCkKICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGRhdGEpCiAgb25DbG9zZShuYW1lLCBmaWxlKQogIGYgPSB4ID0+CiAgb25GaW5hbGl6ZSgpCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgYnlfdXVpZCgpCiAgdXVpZChkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIHF1aXQod2h5KQAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload.js",
						"symkeys":
						[
							[
								744,
								777
							],
							[
								799,
								803
							],
							[
								1322,
								1366
							],
							[
								1377,
								1396
							],
							[
								1418,
								1422
							],
							[
								1456,
								1465
							],
							[
								1499,
								1522
							],
							[
								1638,
								1663
							],
							[
								1743,
								1784
							],
							[
								1889,
								1895
							],
							[
								1988,
								1995
							],
							[
								2093,
								2139
							],
							[
								2355,
								2370
							],
							[
								2389,
								2404
							],
							[
								2420,
								2435
							],
							[
								2459,
								2474
							],
							[
								2496,
								2511
							],
							[
								2532,
								2547
							],
							[
								2565,
								2580
							],
							[
								2603,
								2618
							],
							[
								2717,
								2756
							],
							[
								3122,
								3141
							],
							[
								3776,
								3789
							],
							[
								3869,
								3909
							],
							[
								3989,
								3996
							],
							[
								4060,
								4065
							],
							[
								4517,
								4522
							],
							[
								4661,
								4666
							],
							[
								4864,
								4869
							],
							[
								5095,
								5101
							],
							[
								5179,
								5186
							],
							[
								5389,
								5394
							],
							[
								5880,
								5920
							],
							[
								6091,
								6095
							],
							[
								6110,
								6137
							],
							[
								6302,
								6328
							],
							[
								6392,
								6396
							],
							[
								6466,
								6475
							],
							[
								6526,
								6535
							],
							[
								6624,
								6631
							],
							[
								7010,
								7036
							],
							[
								7263,
								7267
							],
							[
								7382,
								7388
							],
							[
								7527,
								7554
							],
							[
								7611,
								7624
							],
							[
								7765,
								7784
							],
							[
								7970,
								7995
							],
							[
								8021,
								8026
							],
							[
								8095,
								8112
							],
							[
								9035,
								9049
							],
							[
								9095,
								9110
							],
							[
								9199,
								9214
							],
							[
								9301,
								9329
							],
							[
								9482,
								9499
							],
							[
								9779,
								9808
							]
						],
						"symlist":
						[
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							" function prioritySort(arr, predicates = [])",
							"matchPred = item =>",
							"p =>",
							"(a, b) =>",
							"function setLabel(text)",
							"function isComponent(obj)",
							"Table = ({ children, rows, ...props }) =>",
							"row =>",
							"cell =>",
							"PropertyList = ({ data, filter, ...props }) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							"FileItem = ({ file, ref, ...props }) =>",
							"filter: ([k, v]) =>",
							"(coord, i) =>",
							"FileList = ({ files, ref, ...props }) =>",
							"file =>",
							" e =>",
							" e =>",
							" e =>",
							" e =>",
							"err =>",
							"resp =>",
							" e =>",
							"function FileAction(cmd, file, contents)",
							"r =>",
							"function UploadFiles(files)",
							"async function ListFiles()",
							"r =>",
							"upload =>",
							"(a, b) =>",
							"file =>",
							"function UploadFile(files)",
							"f =>",
							"err =>",
							"function UploadDone(upload)",
							"({ name }) =>",
							"function CreateWS()",
							"restart = (delay = 10) =>",
							"() =>",
							".onmessage = e =>",
							".onopen = e =>",
							".onclose = e =>",
							".onerror = e =>",
							"function XHRUpload(formData)",
							" function(e)",
							"function FileSelectHandler(e)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACGAwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAwAATWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIHByaW9yaXR5U29ydChhcnIsIHByZWRpY2F0ZXMgPSBbXSkKICBtYXRjaFByZWQgPSBpdGVtID0+CiAgcCA9PgooYSwgYikgPT4KICBzZXRMYWJlbCh0ZXh0KQogIGlzQ29tcG9uZW50KG9iaikKVGFibGUgPSAoeyBjaGlsZHJlbiwgcm93cywgLi4ucHJvcHMgfSkgPT4KICByb3cgPT4KICBjZWxsID0+ClByb3BlcnR5TGlzdCA9ICh7IGRhdGEsIGZpbHRlciwgLi4ucHJvcHMgfSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CkZpbGVJdGVtID0gKHsgZmlsZSwgcmVmLCAuLi5wcm9wcyB9KSA9PgogIGZpbHRlcjogKFtrLCB2XSkgPT4KKGNvb3JkLCBpKSA9PgpGaWxlTGlzdCA9ICh7IGZpbGVzLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlcnIgPT4KICByZXNwID0+CiAgZSA9PgpGaWxlQWN0aW9uKGNtZCwgZmlsZSwgY29udGVudHMpCiAgciA9PgpVcGxvYWRGaWxlcyhmaWxlcykKTGlzdEZpbGVzKCkKICByID0+CiAgdXBsb2FkID0+CihhLCBiKSA9PgogIGZpbGUgPT4KVXBsb2FkRmlsZShmaWxlcykKICBmID0+CiAgZXJyID0+ClVwbG9hZERvbmUodXBsb2FkKQooeyBuYW1lIH0pID0+CkNyZWF0ZVdTKCkKICByZXN0YXJ0ID0gKGRlbGF5ID0gMTApID0+CigpID0+CiAgLm9ubWVzc2FnZSA9IGUgPT4KICAub25vcGVuID0gZSA9PgogIC5vbmNsb3NlID0gZSA9PgogIC5vbmVycm9yID0gZSA9PgpYSFJVcGxvYWQoZm9ybURhdGEpCiAgZnVuY3Rpb24oZSkKRmlsZVNlbGVjdEhhbmRsZXIoZSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					53,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					54,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload.js",
						"symkeys":
						[
							[
								744,
								777
							],
							[
								799,
								803
							],
							[
								1322,
								1366
							],
							[
								1377,
								1396
							],
							[
								1418,
								1422
							],
							[
								1456,
								1465
							],
							[
								1499,
								1522
							],
							[
								1638,
								1663
							],
							[
								1743,
								1784
							],
							[
								1889,
								1895
							],
							[
								1988,
								1995
							],
							[
								2093,
								2139
							],
							[
								2355,
								2370
							],
							[
								2389,
								2404
							],
							[
								2420,
								2435
							],
							[
								2459,
								2474
							],
							[
								2496,
								2511
							],
							[
								2532,
								2547
							],
							[
								2565,
								2580
							],
							[
								2603,
								2618
							],
							[
								2717,
								2756
							],
							[
								3122,
								3141
							],
							[
								3776,
								3789
							],
							[
								3869,
								3909
							],
							[
								3989,
								3996
							],
							[
								4060,
								4065
							],
							[
								4517,
								4522
							],
							[
								4661,
								4666
							],
							[
								4864,
								4869
							],
							[
								5095,
								5101
							],
							[
								5179,
								5186
							],
							[
								5389,
								5394
							],
							[
								5880,
								5920
							],
							[
								6091,
								6095
							],
							[
								6110,
								6137
							],
							[
								6302,
								6328
							],
							[
								6392,
								6396
							],
							[
								6466,
								6475
							],
							[
								6526,
								6535
							],
							[
								6624,
								6631
							],
							[
								7010,
								7036
							],
							[
								7263,
								7267
							],
							[
								7382,
								7388
							],
							[
								7527,
								7554
							],
							[
								7611,
								7624
							],
							[
								7765,
								7784
							],
							[
								7970,
								7995
							],
							[
								8021,
								8026
							],
							[
								8095,
								8112
							],
							[
								9035,
								9049
							],
							[
								9095,
								9110
							],
							[
								9199,
								9214
							],
							[
								9301,
								9329
							],
							[
								9482,
								9499
							],
							[
								9779,
								9808
							]
						],
						"symlist":
						[
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							" function prioritySort(arr, predicates = [])",
							"matchPred = item =>",
							"p =>",
							"(a, b) =>",
							"function setLabel(text)",
							"function isComponent(obj)",
							"Table = ({ children, rows, ...props }) =>",
							"row =>",
							"cell =>",
							"PropertyList = ({ data, filter, ...props }) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							"FileItem = ({ file, ref, ...props }) =>",
							"filter: ([k, v]) =>",
							"(coord, i) =>",
							"FileList = ({ files, ref, ...props }) =>",
							"file =>",
							" e =>",
							" e =>",
							" e =>",
							" e =>",
							"err =>",
							"resp =>",
							" e =>",
							"function FileAction(cmd, file, contents)",
							"r =>",
							"function UploadFiles(files)",
							"async function ListFiles()",
							"r =>",
							"upload =>",
							"(a, b) =>",
							"file =>",
							"function UploadFile(files)",
							"f =>",
							"err =>",
							"function UploadDone(upload)",
							"({ name }) =>",
							"function CreateWS()",
							"restart = (delay = 10) =>",
							"() =>",
							".onmessage = e =>",
							".onopen = e =>",
							".onclose = e =>",
							".onerror = e =>",
							"function XHRUpload(formData)",
							" function(e)",
							"function FileSelectHandler(e)"
						]
					},
					"AQAAAAAAAAAAAAAAhgMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					55,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload.js",
						"symkeys":
						[
							[
								744,
								777
							],
							[
								799,
								803
							],
							[
								1322,
								1366
							],
							[
								1377,
								1396
							],
							[
								1418,
								1422
							],
							[
								1456,
								1465
							],
							[
								1499,
								1522
							],
							[
								1638,
								1663
							],
							[
								1743,
								1784
							],
							[
								1889,
								1895
							],
							[
								1988,
								1995
							],
							[
								2093,
								2139
							],
							[
								2355,
								2370
							],
							[
								2389,
								2404
							],
							[
								2420,
								2435
							],
							[
								2459,
								2474
							],
							[
								2496,
								2511
							],
							[
								2532,
								2547
							],
							[
								2565,
								2580
							],
							[
								2603,
								2618
							],
							[
								2717,
								2756
							],
							[
								3122,
								3141
							],
							[
								3759,
								3772
							],
							[
								3852,
								3892
							],
							[
								3972,
								3979
							],
							[
								4043,
								4048
							],
							[
								4500,
								4505
							],
							[
								4644,
								4649
							],
							[
								4847,
								4852
							],
							[
								5078,
								5084
							],
							[
								5162,
								5169
							],
							[
								5372,
								5377
							],
							[
								5863,
								5903
							],
							[
								6074,
								6078
							],
							[
								6093,
								6120
							],
							[
								6285,
								6311
							],
							[
								6375,
								6379
							],
							[
								6449,
								6458
							],
							[
								6509,
								6518
							],
							[
								6607,
								6614
							],
							[
								6993,
								7019
							],
							[
								7246,
								7250
							],
							[
								7365,
								7371
							],
							[
								7510,
								7537
							],
							[
								7594,
								7607
							],
							[
								7748,
								7767
							],
							[
								7953,
								7978
							],
							[
								8004,
								8009
							],
							[
								8078,
								8095
							],
							[
								9018,
								9032
							],
							[
								9078,
								9093
							],
							[
								9182,
								9197
							],
							[
								9284,
								9312
							],
							[
								9465,
								9482
							],
							[
								9762,
								9791
							]
						],
						"symlist":
						[
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							" function prioritySort(arr, predicates = [])",
							"matchPred = item =>",
							"p =>",
							"(a, b) =>",
							"function setLabel(text)",
							"function isComponent(obj)",
							"Table = ({ children, rows, ...props }) =>",
							"row =>",
							"cell =>",
							"PropertyList = ({ data, filter, ...props }) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							"FileItem = ({ file, ref, ...props }) =>",
							"filter: ([k, v]) =>",
							"(coord, i) =>",
							"FileList = ({ files, ref, ...props }) =>",
							"file =>",
							" e =>",
							" e =>",
							" e =>",
							" e =>",
							"err =>",
							"resp =>",
							" e =>",
							"function FileAction(cmd, file, contents)",
							"r =>",
							"function UploadFiles(files)",
							"async function ListFiles()",
							"r =>",
							"upload =>",
							"(a, b) =>",
							"file =>",
							"function UploadFile(files)",
							"f =>",
							"err =>",
							"function UploadDone(upload)",
							"({ name }) =>",
							"function CreateWS()",
							"restart = (delay = 10) =>",
							"() =>",
							".onmessage = e =>",
							".onopen = e =>",
							".onclose = e =>",
							".onerror = e =>",
							"function XHRUpload(formData)",
							" function(e)",
							"function FileSelectHandler(e)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACGAwAATWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIHByaW9yaXR5U29ydChhcnIsIHByZWRpY2F0ZXMgPSBbXSkKICBtYXRjaFByZWQgPSBpdGVtID0+CiAgcCA9PgooYSwgYikgPT4KICBzZXRMYWJlbCh0ZXh0KQogIGlzQ29tcG9uZW50KG9iaikKVGFibGUgPSAoeyBjaGlsZHJlbiwgcm93cywgLi4ucHJvcHMgfSkgPT4KICByb3cgPT4KICBjZWxsID0+ClByb3BlcnR5TGlzdCA9ICh7IGRhdGEsIGZpbHRlciwgLi4ucHJvcHMgfSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CkZpbGVJdGVtID0gKHsgZmlsZSwgcmVmLCAuLi5wcm9wcyB9KSA9PgogIGZpbHRlcjogKFtrLCB2XSkgPT4KKGNvb3JkLCBpKSA9PgpGaWxlTGlzdCA9ICh7IGZpbGVzLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlcnIgPT4KICByZXNwID0+CiAgZSA9PgpGaWxlQWN0aW9uKGNtZCwgZmlsZSwgY29udGVudHMpCiAgciA9PgpVcGxvYWRGaWxlcyhmaWxlcykKTGlzdEZpbGVzKCkKICByID0+CiAgdXBsb2FkID0+CihhLCBiKSA9PgogIGZpbGUgPT4KVXBsb2FkRmlsZShmaWxlcykKICBmID0+CiAgZXJyID0+ClVwbG9hZERvbmUodXBsb2FkKQooeyBuYW1lIH0pID0+CkNyZWF0ZVdTKCkKICByZXN0YXJ0ID0gKGRlbGF5ID0gMTApID0+CigpID0+CiAgLm9ubWVzc2FnZSA9IGUgPT4KICAub25vcGVuID0gZSA9PgogIC5vbmNsb3NlID0gZSA9PgogIC5vbmVycm9yID0gZSA9PgpYSFJVcGxvYWQoZm9ybURhdGEpCiAgZnVuY3Rpb24oZSkKRmlsZVNlbGVjdEhhbmRsZXIoZSkAAAAAAAAAAIYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGAwAATWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIHByaW9yaXR5U29ydChhcnIsIHByZWRpY2F0ZXMgPSBbXSkKICBtYXRjaFByZWQgPSBpdGVtID0+CiAgcCA9PgooYSwgYikgPT4KICBzZXRMYWJlbCh0ZXh0KQogIGlzQ29tcG9uZW50KG9iaikKVGFibGUgPSAoeyBjaGlsZHJlbiwgcm93cywgLi4ucHJvcHMgfSkgPT4KICByb3cgPT4KICBjZWxsID0+ClByb3BlcnR5TGlzdCA9ICh7IGRhdGEsIGZpbHRlciwgLi4ucHJvcHMgfSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CkZpbGVJdGVtID0gKHsgZmlsZSwgcmVmLCAuLi5wcm9wcyB9KSA9PgogIGZpbHRlcjogKFtrLCB2XSkgPT4KKGNvb3JkLCBpKSA9PgpGaWxlTGlzdCA9ICh7IGZpbGVzLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlcnIgPT4KICByZXNwID0+CiAgZSA9PgpGaWxlQWN0aW9uKGNtZCwgZmlsZSwgY29udGVudHMpCiAgciA9PgpVcGxvYWRGaWxlcyhmaWxlcykKTGlzdEZpbGVzKCkKICByID0+CiAgdXBsb2FkID0+CihhLCBiKSA9PgogIGZpbGUgPT4KVXBsb2FkRmlsZShmaWxlcykKICBmID0+CiAgZXJyID0+ClVwbG9hZERvbmUodXBsb2FkKQooeyBuYW1lIH0pID0+CkNyZWF0ZVdTKCkKICByZXN0YXJ0ID0gKGRlbGF5ID0gMTApID0+CigpID0+CiAgLm9ubWVzc2FnZSA9IGUgPT4KICAub25vcGVuID0gZSA9PgogIC5vbmNsb3NlID0gZSA9PgogIC5vbmVycm9yID0gZSA9PgpYSFJVcGxvYWQoZm9ybURhdGEpCiAgZnVuY3Rpb24oZSkKRmlsZVNlbGVjdEhhbmRsZXIoZSkAAAAAAAAAAIYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACGAwAATWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIHByaW9yaXR5U29ydChhcnIsIHByZWRpY2F0ZXMgPSBbXSkKICBtYXRjaFByZWQgPSBpdGVtID0+CiAgcCA9PgooYSwgYikgPT4KICBzZXRMYWJlbCh0ZXh0KQogIGlzQ29tcG9uZW50KG9iaikKVGFibGUgPSAoeyBjaGlsZHJlbiwgcm93cywgLi4ucHJvcHMgfSkgPT4KICByb3cgPT4KICBjZWxsID0+ClByb3BlcnR5TGlzdCA9ICh7IGRhdGEsIGZpbHRlciwgLi4ucHJvcHMgfSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CkZpbGVJdGVtID0gKHsgZmlsZSwgcmVmLCAuLi5wcm9wcyB9KSA9PgogIGZpbHRlcjogKFtrLCB2XSkgPT4KKGNvb3JkLCBpKSA9PgpGaWxlTGlzdCA9ICh7IGZpbGVzLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlcnIgPT4KICByZXNwID0+CiAgZSA9PgpGaWxlQWN0aW9uKGNtZCwgZmlsZSwgY29udGVudHMpCiAgciA9PgpVcGxvYWRGaWxlcyhmaWxlcykKTGlzdEZpbGVzKCkKICByID0+CiAgdXBsb2FkID0+CihhLCBiKSA9PgogIGZpbGUgPT4KVXBsb2FkRmlsZShmaWxlcykKICBmID0+CiAgZXJyID0+ClVwbG9hZERvbmUodXBsb2FkKQooeyBuYW1lIH0pID0+CkNyZWF0ZVdTKCkKICByZXN0YXJ0ID0gKGRlbGF5ID0gMTApID0+CigpID0+CiAgLm9ubWVzc2FnZSA9IGUgPT4KICAub25vcGVuID0gZSA9PgogIC5vbmNsb3NlID0gZSA9PgogIC5vbmVycm9yID0gZSA9PgpYSFJVcGxvYWQoZm9ybURhdGEpCiAgZnVuY3Rpb24oZSkKRmlsZVNlbGVjdEhhbmRsZXIoZSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					57,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload.js",
						"symkeys":
						[
							[
								744,
								777
							],
							[
								799,
								803
							],
							[
								1322,
								1366
							],
							[
								1377,
								1396
							],
							[
								1418,
								1422
							],
							[
								1456,
								1465
							],
							[
								1499,
								1522
							],
							[
								1638,
								1663
							],
							[
								1743,
								1784
							],
							[
								1889,
								1895
							],
							[
								1988,
								1995
							],
							[
								2093,
								2139
							],
							[
								2355,
								2370
							],
							[
								2389,
								2404
							],
							[
								2420,
								2435
							],
							[
								2459,
								2474
							],
							[
								2496,
								2511
							],
							[
								2532,
								2547
							],
							[
								2565,
								2580
							],
							[
								2603,
								2618
							],
							[
								2717,
								2756
							],
							[
								3122,
								3141
							],
							[
								3759,
								3772
							],
							[
								3852,
								3892
							],
							[
								3972,
								3979
							],
							[
								4043,
								4048
							],
							[
								4500,
								4505
							],
							[
								4644,
								4649
							],
							[
								4847,
								4852
							],
							[
								5078,
								5084
							],
							[
								5162,
								5169
							],
							[
								5372,
								5377
							],
							[
								5863,
								5903
							],
							[
								6074,
								6078
							],
							[
								6093,
								6120
							],
							[
								6285,
								6311
							],
							[
								6375,
								6379
							],
							[
								6449,
								6458
							],
							[
								6509,
								6518
							],
							[
								6607,
								6614
							],
							[
								6993,
								7019
							],
							[
								7246,
								7250
							],
							[
								7365,
								7371
							],
							[
								7510,
								7537
							],
							[
								7594,
								7607
							],
							[
								7748,
								7767
							],
							[
								7953,
								7978
							],
							[
								8004,
								8009
							],
							[
								8078,
								8095
							],
							[
								9018,
								9032
							],
							[
								9078,
								9093
							],
							[
								9182,
								9197
							],
							[
								9284,
								9312
							],
							[
								9465,
								9482
							],
							[
								9762,
								9791
							]
						],
						"symlist":
						[
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							" function prioritySort(arr, predicates = [])",
							"matchPred = item =>",
							"p =>",
							"(a, b) =>",
							"function setLabel(text)",
							"function isComponent(obj)",
							"Table = ({ children, rows, ...props }) =>",
							"row =>",
							"cell =>",
							"PropertyList = ({ data, filter, ...props }) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							" ([k, v]) =>",
							"FileItem = ({ file, ref, ...props }) =>",
							"filter: ([k, v]) =>",
							"(coord, i) =>",
							"FileList = ({ files, ref, ...props }) =>",
							"file =>",
							" e =>",
							" e =>",
							" e =>",
							" e =>",
							"err =>",
							"resp =>",
							" e =>",
							"function FileAction(cmd, file, contents)",
							"r =>",
							"function UploadFiles(files)",
							"async function ListFiles()",
							"r =>",
							"upload =>",
							"(a, b) =>",
							"file =>",
							"function UploadFile(files)",
							"f =>",
							"err =>",
							"function UploadDone(upload)",
							"({ name }) =>",
							"function CreateWS()",
							"restart = (delay = 10) =>",
							"() =>",
							".onmessage = e =>",
							".onopen = e =>",
							".onclose = e =>",
							".onerror = e =>",
							"function XHRUpload(formData)",
							" function(e)",
							"function FileSelectHandler(e)"
						]
					},
					"AwAAAAAAAAAAAAAAhgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIYDAABNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgcHJpb3JpdHlTb3J0KGFyciwgcHJlZGljYXRlcyA9IFtdKQogIG1hdGNoUHJlZCA9IGl0ZW0gPT4KICBwID0+CihhLCBiKSA9PgogIHNldExhYmVsKHRleHQpCiAgaXNDb21wb25lbnQob2JqKQpUYWJsZSA9ICh7IGNoaWxkcmVuLCByb3dzLCAuLi5wcm9wcyB9KSA9PgogIHJvdyA9PgogIGNlbGwgPT4KUHJvcGVydHlMaXN0ID0gKHsgZGF0YSwgZmlsdGVyLCAuLi5wcm9wcyB9KSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KRmlsZUl0ZW0gPSAoeyBmaWxlLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsdGVyOiAoW2ssIHZdKSA9PgooY29vcmQsIGkpID0+CkZpbGVMaXN0ID0gKHsgZmlsZXMsIHJlZiwgLi4ucHJvcHMgfSkgPT4KICBmaWxlID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGVyciA9PgogIHJlc3AgPT4KICBlID0+CkZpbGVBY3Rpb24oY21kLCBmaWxlLCBjb250ZW50cykKICByID0+ClVwbG9hZEZpbGVzKGZpbGVzKQpMaXN0RmlsZXMoKQogIHIgPT4KICB1cGxvYWQgPT4KKGEsIGIpID0+CiAgZmlsZSA9PgpVcGxvYWRGaWxlKGZpbGVzKQogIGYgPT4KICBlcnIgPT4KVXBsb2FkRG9uZSh1cGxvYWQpCih7IG5hbWUgfSkgPT4KQ3JlYXRlV1MoKQogIHJlc3RhcnQgPSAoZGVsYXkgPSAxMCkgPT4KKCkgPT4KICAub25tZXNzYWdlID0gZSA9PgogIC5vbm9wZW4gPSBlID0+CiAgLm9uY2xvc2UgPSBlID0+CiAgLm9uZXJyb3IgPSBlID0+ClhIUlVwbG9hZChmb3JtRGF0YSkKICBmdW5jdGlvbihlKQpGaWxlU2VsZWN0SGFuZGxlcihlKQAAAAAAAAAAhgMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					58,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACGAwAATWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIHByaW9yaXR5U29ydChhcnIsIHByZWRpY2F0ZXMgPSBbXSkKICBtYXRjaFByZWQgPSBpdGVtID0+CiAgcCA9PgooYSwgYikgPT4KICBzZXRMYWJlbCh0ZXh0KQogIGlzQ29tcG9uZW50KG9iaikKVGFibGUgPSAoeyBjaGlsZHJlbiwgcm93cywgLi4ucHJvcHMgfSkgPT4KICByb3cgPT4KICBjZWxsID0+ClByb3BlcnR5TGlzdCA9ICh7IGRhdGEsIGZpbHRlciwgLi4ucHJvcHMgfSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CiAgKFtrLCB2XSkgPT4KICAoW2ssIHZdKSA9PgogIChbaywgdl0pID0+CkZpbGVJdGVtID0gKHsgZmlsZSwgcmVmLCAuLi5wcm9wcyB9KSA9PgogIGZpbHRlcjogKFtrLCB2XSkgPT4KKGNvb3JkLCBpKSA9PgpGaWxlTGlzdCA9ICh7IGZpbGVzLCByZWYsIC4uLnByb3BzIH0pID0+CiAgZmlsZSA9PgogIGUgPT4KICBlID0+CiAgZSA9PgogIGUgPT4KICBlcnIgPT4KICByZXNwID0+CiAgZSA9PgpGaWxlQWN0aW9uKGNtZCwgZmlsZSwgY29udGVudHMpCiAgciA9PgpVcGxvYWRGaWxlcyhmaWxlcykKTGlzdEZpbGVzKCkKICByID0+CiAgdXBsb2FkID0+CihhLCBiKSA9PgogIGZpbGUgPT4KVXBsb2FkRmlsZShmaWxlcykKICBmID0+CiAgZXJyID0+ClVwbG9hZERvbmUodXBsb2FkKQooeyBuYW1lIH0pID0+CkNyZWF0ZVdTKCkKICByZXN0YXJ0ID0gKGRlbGF5ID0gMTApID0+CigpID0+CiAgLm9ubWVzc2FnZSA9IGUgPT4KICAub25vcGVuID0gZSA9PgogIC5vbmNsb3NlID0gZSA9PgogIC5vbmVycm9yID0gZSA9PgpYSFJVcGxvYWQoZm9ybURhdGEpCiAgZnVuY3Rpb24oZSkKRmlsZVNlbGVjdEhhbmRsZXIoZSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					59,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					60,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					61,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					62,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					63,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmwcAACAgdmFsdWUgPT4KICAobGV2ZWwsIG1lc3NhZ2UpID0+CkFzeW5jQ29sbGVjdChpdGVyKQpFeGVjVG9vbChjbWQsIC4uLmFyZ3MpCkdldE1pbWUoZmlsZSkKTWF0Y2hlcihwYXR0ZXJuLCB0ID0gYXJnID0+IGFyZykKICAoLi4uYXJncykgPT4KS2V5T3JWYWx1ZU1hdGNoZXIocGF0dGVybikKICAoW2tleSwgdmFsdWVdKSA9PgpHZXRSb290RGlyZWN0b3JpZXMocGF0dGVybiA9ICcqJykKTWFrZVVVSUQgPSAocm5nID0gTWF0aC5yYW5kb20pID0+CiAgbiA9PgogIGRkID0+CiAgZCA9PgogIGQgPT4KICBkID0+CkdldERpcihkaXIpCiAgbiA9PgpEaXJOYW1lKG5hbWUpCiAgaXQgPT4KRGF0ZVN0cihkYXRlKQpNb2RlU3RyKG1vZGUpCkhUTUxQYWdlID0gKHsgdGl0bGUsIHN0eWxlLCBzY3JpcHRzID0gW10sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIHNjcmlwdCA9PgpGaWx0ZXJGb3JtID0gKHsgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlID0gKHsgcm93cywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlUm93ID0gKHsgY29sdW1ucywgLi4ucHJvcHMgfSkgPT4KSFRNTFRhYmxlQ29sdW1uID0gKHsgY29sdW1ucywgY2hpbGRyZW4sIHRhZyA9ICd0ZCcsIC4uLnByb3BzIH0pID0+CkZpbGVMaW5rID0gKHsgZmlsZSwgLi4ucHJvcHMgfSkgPT4KRmlsZU9iamVjdCA9ICh7IGZpbGUsIHN0YXQgPSB7fSwgLi4ucHJvcHMgfSkgPT4KRmlsZVRhYmxlID0gKHsgZmlsZXMsIC4uLnByb3BzIH0pID0+CihhLCBiKSA9PgogIGZpZWxkID0+CiAgZmlsZSA9PgpSZWFkRXhpdjIoZmlsZSkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KKGEsIGIpID0+Cihbaywgdl0pID0+ClJlYWRFeGlmdG9vbChmaWxlKQogIGwgPT4KICBsaW5lID0+CihbbGluZSwgaWR4XSkgPT4KSGVpZkNvbnZlcnQoc3JjLCBkc3QsIHF1YWxpdHkgPSAxMDApCk1hZ2lja1Jlc2l6ZShzcmMsIGRzdCwgcm90YXRlID0gMCwgd2lkdGgsIGhlaWdodCkKICBtYWluKC4uLmFyZ3MpCiAgKGEsIHYpID0+CiAgKHYsIHB2LCBvKSA9PgogIChtb2R1bGUsIC4uLmFyZ3MpID0+CiAgbSA9PgogIC5zaG93ID0gYXJnID0+CiAgLmNsZWFudXAgPSAoKSA9PgogICguLi5hcmdzKSA9PgooKSA9PgogIHB1dHMocykKKCkgPT4KUGFyc2VCb2R5KGdlbikKICAuY3JlYXRlV1MgPSAodXJsLCBjYWxsYmFja3MsIGxpc3RlbikgPT4KICAub3V0ID0gcyA9PgogIHRlc3QocmVxLCByZXNwKQogIHByb3h5KHJlcSwgcmVzcCkKICBjb25maWcocmVxLCByZXNwKQogIGZpbGUocmVxLCByZXNwKQooW2Rpcl0pID0+CiAgZiA9PgogIGZpbGUgPT4KICB1cGxvYWRzKHJlcSwgcmVzcCkKICBzID0+CiAgZmlsZXMocmVxLCByZXNwKQogIG4gPT4KKFtuYW1lLCB0eXBlXSkgPT4KICBmaWxlczIocmVxLCByZXNwKQogIG4gPT4KICBuID0+CiAgbiA9PgooYSwgYikgPT4KICBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KKFtmaWxlLCByZWxdKSA9PgooYWNjLCBbZmlsZSwgc3RdKSA9PgogIHN0cmluZyhhLCBiKQogIG51bWJlcihhLCBiKQooW25hbWUsIG9ial0pID0+Cih7IG5hbWUgfSkgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICAuc2VuZENvbW1hbmQgPSBmdW5jdGlvbihkYXRhKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbkh0dHAod3MsIHJlcSwgcmVzcCkKICBvbk9wZW4obmFtZSwgZmlsZW5hbWUpCiAgb25Db250ZW50KG5hbWUsIGRhdGEpCiAgb25DbG9zZShuYW1lLCBmaWxlKQogIGYgPSB4ID0+CiAgb25GaW5hbGl6ZSgpCiAgKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICBnZXQgYnlfdXVpZCgpCiAgdXVpZChkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBvbkNsb3NlKHdzLCByZWFzb24pCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIHF1aXQod2h5KQAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAACbBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					65,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					66,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					67,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					68,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					69,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					70,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					71,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					72,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					73,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					74,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					75,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								2010,
								2018
							],
							[
								2034,
								2054
							],
							[
								2625,
								2658
							],
							[
								2748,
								2779
							],
							[
								3105,
								3127
							],
							[
								3341,
								3382
							],
							[
								3393,
								3406
							],
							[
								3484,
								3519
							],
							[
								3564,
								3582
							],
							[
								3618,
								3660
							],
							[
								3726,
								3759
							],
							[
								3781,
								3785
							],
							[
								4174,
								4179
							],
							[
								4229,
								4233
							],
							[
								4260,
								4264
							],
							[
								4292,
								4296
							],
							[
								4319,
								4339
							],
							[
								4393,
								4397
							],
							[
								4467,
								4489
							],
							[
								4579,
								4584
							],
							[
								4616,
								4638
							],
							[
								4832,
								4854
							],
							[
								5277,
								5343
							],
							[
								5689,
								5698
							],
							[
								5803,
								5833
							],
							[
								6194,
								6229
							],
							[
								6261,
								6302
							],
							[
								6334,
								6400
							],
							[
								6433,
								6467
							],
							[
								6538,
								6585
							],
							[
								7121,
								7157
							],
							[
								7270,
								7279
							],
							[
								7515,
								7523
							],
							[
								7629,
								7636
							],
							[
								7686,
								7710
							],
							[
								8091,
								8102
							],
							[
								8192,
								8203
							],
							[
								8267,
								8278
							],
							[
								8332,
								8341
							],
							[
								8379,
								8390
							],
							[
								8478,
								8505
							],
							[
								8643,
								8647
							],
							[
								8671,
								8678
							],
							[
								8711,
								8727
							],
							[
								8856,
								8901
							],
							[
								9117,
								9175
							],
							[
								9487,
								9509
							],
							[
								9858,
								9868
							],
							[
								10112,
								10126
							],
							[
								11079,
								11103
							],
							[
								11229,
								11233
							],
							[
								11325,
								11339
							],
							[
								11439,
								11455
							],
							[
								11809,
								11822
							],
							[
								11840,
								11845
							],
							[
								11927,
								11934
							],
							[
								11962,
								11967
							],
							[
								12089,
								12114
							],
							[
								12289,
								12328
							],
							[
								12405,
								12416
							],
							[
								14003,
								14034
							],
							[
								14697,
								14730
							],
							[
								15002,
								15037
							],
							[
								15122,
								15155
							],
							[
								16103,
								16113
							],
							[
								16945,
								16949
							],
							[
								17392,
								17399
							],
							[
								17792,
								17828
							],
							[
								18042,
								18046
							],
							[
								18642,
								18674
							],
							[
								19277,
								19281
							],
							[
								19802,
								19819
							],
							[
								20121,
								20156
							],
							[
								21004,
								21009
							],
							[
								21736,
								21740
							],
							[
								21834,
								21838
							],
							[
								21958,
								21967
							],
							[
								22097,
								22104
							],
							[
								22385,
								22392
							],
							[
								22473,
								22480
							],
							[
								22544,
								22560
							],
							[
								22625,
								22645
							],
							[
								23344,
								23356
							],
							[
								23455,
								23467
							],
							[
								23669,
								23685
							],
							[
								23779,
								23792
							],
							[
								24068,
								24086
							],
							[
								24276,
								24305
							],
							[
								24713,
								24732
							],
							[
								25165,
								25186
							],
							[
								26215,
								26237
							],
							[
								26710,
								26731
							],
							[
								27282,
								27301
							],
							[
								27735,
								27743
							],
							[
								30446,
								30458
							],
							[
								32305,
								32340
							],
							[
								33013,
								33032
							],
							[
								33140,
								33156
							],
							[
								33291,
								33308
							],
							[
								33353,
								33366
							],
							[
								33402,
								33412
							],
							[
								34266,
								34282
							],
							[
								34371,
								34390
							],
							[
								34401,
								34420
							],
							[
								34446,
								34466
							]
						],
						"symlist":
						[
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function ExecTool(cmd, ...args)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks, listen) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							"([name, type]) =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							".sendCommand = function(data)",
							"onClose(ws, reason)",
							"onHttp(ws, req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAmwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					76,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbBwAAICB2YWx1ZSA9PgogIChsZXZlbCwgbWVzc2FnZSkgPT4KQXN5bmNDb2xsZWN0KGl0ZXIpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykKR2V0TWltZShmaWxlKQpNYXRjaGVyKHBhdHRlcm4sIHQgPSBhcmcgPT4gYXJnKQogICguLi5hcmdzKSA9PgpLZXlPclZhbHVlTWF0Y2hlcihwYXR0ZXJuKQogIChba2V5LCB2YWx1ZV0pID0+CkdldFJvb3REaXJlY3RvcmllcyhwYXR0ZXJuID0gJyonKQpNYWtlVVVJRCA9IChybmcgPSBNYXRoLnJhbmRvbSkgPT4KICBuID0+CiAgZGQgPT4KICBkID0+CiAgZCA9PgogIGQgPT4KR2V0RGlyKGRpcikKICBuID0+CkRpck5hbWUobmFtZSkKICBpdCA9PgpEYXRlU3RyKGRhdGUpCk1vZGVTdHIobW9kZSkKSFRNTFBhZ2UgPSAoeyB0aXRsZSwgc3R5bGUsIHNjcmlwdHMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+CiAgc2NyaXB0ID0+CkZpbHRlckZvcm0gPSAoeyAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGUgPSAoeyByb3dzLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVSb3cgPSAoeyBjb2x1bW5zLCAuLi5wcm9wcyB9KSA9PgpIVE1MVGFibGVDb2x1bW4gPSAoeyBjb2x1bW5zLCBjaGlsZHJlbiwgdGFnID0gJ3RkJywgLi4ucHJvcHMgfSkgPT4KRmlsZUxpbmsgPSAoeyBmaWxlLCAuLi5wcm9wcyB9KSA9PgpGaWxlT2JqZWN0ID0gKHsgZmlsZSwgc3RhdCA9IHt9LCAuLi5wcm9wcyB9KSA9PgpGaWxlVGFibGUgPSAoeyBmaWxlcywgLi4ucHJvcHMgfSkgPT4KKGEsIGIpID0+CiAgZmllbGQgPT4KICBmaWxlID0+ClJlYWRFeGl2MihmaWxlKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgooYSwgYikgPT4KKFtrLCB2XSkgPT4KUmVhZEV4aWZ0b29sKGZpbGUpCiAgbCA9PgogIGxpbmUgPT4KKFtsaW5lLCBpZHhdKSA9PgpIZWlmQ29udmVydChzcmMsIGRzdCwgcXVhbGl0eSA9IDEwMCkKTWFnaWNrUmVzaXplKHNyYywgZHN0LCByb3RhdGUgPSAwLCB3aWR0aCwgaGVpZ2h0KQogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgKC4uLmFyZ3MpID0+CigpID0+CiAgcHV0cyhzKQooKSA9PgpQYXJzZUJvZHkoZ2VuKQogIC5jcmVhdGVXUyA9ICh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSA9PgogIC5vdXQgPSBzID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgcHJveHkocmVxLCByZXNwKQogIGNvbmZpZyhyZXEsIHJlc3ApCiAgZmlsZShyZXEsIHJlc3ApCihbZGlyXSkgPT4KICBmID0+CiAgZmlsZSA9PgogIHVwbG9hZHMocmVxLCByZXNwKQogIHMgPT4KICBmaWxlcyhyZXEsIHJlc3ApCiAgbiA9PgooW25hbWUsIHR5cGVdKSA9PgogIGZpbGVzMihyZXEsIHJlc3ApCiAgbiA9PgogIG4gPT4KICBuID0+CihhLCBiKSA9PgogIG5hbWUgPT4KICBmaWxlID0+CiAgZmlsZSA9PgooW2ZpbGUsIHJlbF0pID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgc3RyaW5nKGEsIGIpCiAgbnVtYmVyKGEsIGIpCihbbmFtZSwgb2JqXSkgPT4KKHsgbmFtZSB9KSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kQ29tbWFuZCA9IGZ1bmN0aW9uKGRhdGEpCiAgb25DbG9zZSh3cywgcmVhc29uKQogIG9uSHR0cCh3cywgcmVxLCByZXNwKQogIG9uT3BlbihuYW1lLCBmaWxlbmFtZSkKICBvbkNvbnRlbnQobmFtZSwgZGF0YSkKICBvbkNsb3NlKG5hbWUsIGZpbGUpCiAgZiA9IHggPT4KICBvbkZpbmFsaXplKCkKICAobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBieV91dWlkKCkKICB1dWlkKGRhdGEpCiAgb25GZChmZCwgcmQsIHdyKQogIG9uQ2xvc2Uod3MsIHJlYXNvbikKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgcXVpdCh3aHkpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					77,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/alea.js",
						"symkeys":
						[
							[
								61,
								84
							],
							[
								207,
								226
							],
							[
								417,
								437
							],
							[
								495,
								514
							],
							[
								587,
								607
							],
							[
								654,
								675
							],
							[
								775,
								794
							],
							[
								904,
								929
							],
							[
								1387,
								1412
							],
							[
								1599,
								1624
							],
							[
								2114,
								2133
							],
							[
								2226,
								2251
							],
							[
								2295,
								2321
							],
							[
								2433,
								2448
							],
							[
								2480,
								2501
							],
							[
								2913,
								2943
							],
							[
								3019,
								3047
							],
							[
								3089,
								3095
							]
						],
						"symlist":
						[
							" function Alea(...args)",
							"random = function()",
							".uint32 = function()",
							".int32 = function()",
							".signed = function()",
							".fract53 = function()",
							".color = function()",
							".seed = function(...args)",
							".seed = function(...args)",
							".mash = function(...args)",
							".clone = function()",
							".exportState = function()",
							".importState = function(i)",
							"function Mash()",
							"mash = function(data)",
							"Alea.importState = function(i)",
							"Alea.uint32 = function(seed)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAmwEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					78,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACbAQAAQWxlYSguLi5hcmdzKQogIHJhbmRvbSA9IGZ1bmN0aW9uKCkKICAudWludDMyID0gZnVuY3Rpb24oKQogIC5pbnQzMiA9IGZ1bmN0aW9uKCkKICAuc2lnbmVkID0gZnVuY3Rpb24oKQogIC5mcmFjdDUzID0gZnVuY3Rpb24oKQogIC5jb2xvciA9IGZ1bmN0aW9uKCkKICAuc2VlZCA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgLnNlZWQgPSBmdW5jdGlvbiguLi5hcmdzKQogIC5tYXNoID0gZnVuY3Rpb24oLi4uYXJncykKICAuY2xvbmUgPSBmdW5jdGlvbigpCiAgLmV4cG9ydFN0YXRlID0gZnVuY3Rpb24oKQogIC5pbXBvcnRTdGF0ZSA9IGZ1bmN0aW9uKGkpCk1hc2goKQogIG1hc2ggPSBmdW5jdGlvbihkYXRhKQpBbGVhLmltcG9ydFN0YXRlID0gZnVuY3Rpb24oaSkKQWxlYS51aW50MzIgPSBmdW5jdGlvbihzZWVkKQogICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					79,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					80,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					81,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					82,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "io-helpers.js",
			"settings":
			{
				"buffer_size": 11744,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					22,
					1,
					"cut",
					null,
					"AQAAACwMAAAAAAAALAwAAAAAAAAOAAAAY29tcGFjdCA9IHRydWU",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsDAAAAAAAADoMAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "...args"
					},
					"BwAAACwMAAAAAAAALQwAAAAAAAAAAAAALQwAAAAAAAAuDAAAAAAAAAAAAAAuDAAAAAAAAC8MAAAAAAAAAAAAAC8MAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAAxDAAAAAAAAAAAAAAxDAAAAAAAADIMAAAAAAAAAAAAADIMAAAAAAAAMwwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsDAAAAAAAACwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAADYMAAAAAAAANwwAAAAAAAAAAAAANwwAAAAAAAA5DAAAAAAAAAAAAAA5DAAAAAAAADoMAAAAAAAAAAAAADoMAAAAAAAAOwwAAAAAAAAAAAAAOwwAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAAD0MAAAAAAAAAAAAAD0MAAAAAAAAPgwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2DAAAAAAAADYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4MAAAAAAAAPwwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+DAAAAAAAAD4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD8MAAAAAAAAQQwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/DAAAAAAAAD8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "compat"
					},
					"BgAAAEAMAAAAAAAAQQwAAAAAAAAAAAAAQQwAAAAAAABCDAAAAAAAAAAAAABCDAAAAAAAAEMMAAAAAAAAAAAAAEMMAAAAAAAARAwAAAAAAAAAAAAARAwAAAAAAABFDAAAAAAAAAAAAABFDAAAAAAAAEYMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABADAAAAAAAAEAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAEUMAAAAAAAARQwAAAAAAAABAAAAdA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGDAAAAAAAAEYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "ct=true"
					},
					"BwAAAEUMAAAAAAAARgwAAAAAAAAAAAAARgwAAAAAAABHDAAAAAAAAAAAAABHDAAAAAAAAEgMAAAAAAAAAAAAAEgMAAAAAAAASQwAAAAAAAAAAAAASQwAAAAAAABKDAAAAAAAAAAAAABKDAAAAAAAAEsMAAAAAAAAAAAAAEsMAAAAAAAATAwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFDAAAAAAAAEUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAE0MAAAAAAAATgwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNDAAAAAAAAE0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " args;"
					},
					"BgAAAE4MAAAAAAAATwwAAAAAAAAAAAAATwwAAAAAAABQDAAAAAAAAAAAAABQDAAAAAAAAFEMAAAAAAAAAAAAAFEMAAAAAAAAUgwAAAAAAAAAAAAAUgwAAAAAAABTDAAAAAAAAAAAAABTDAAAAAAAAFQMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABODAAAAAAAAE4MAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFQMAAAAAAAAVQwAAAAAAAAAAAAAVQwAAAAAAABXDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUDAAAAAAAAFQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"cut",
					null,
					"AQAAAEcMAAAAAAAARwwAAAAAAAAFAAAAPXRydWU",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHDAAAAAAAAEwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAE8MAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABSDAAAAAAAAAAAAABTDAAAAAAAAFMMAAAAAAAAAgAAACAgUgwAAAAAAABTDAAAAAAAAAAAAABTDAAAAAAAAFQMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPDAAAAAAAAE8MAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFQMAAAAAAAAVgwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUDAAAAAAAAFQMAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "typeof"
					},
					"BgAAAFUMAAAAAAAAVgwAAAAAAAAAAAAAVgwAAAAAAABXDAAAAAAAAAAAAABXDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAWQwAAAAAAAAAAAAAWQwAAAAAAABaDAAAAAAAAAAAAABaDAAAAAAAAFsMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVDAAAAAAAAFUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " compact"
					},
					"CAAAAFsMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABdDAAAAAAAAAAAAABdDAAAAAAAAF4MAAAAAAAAAAAAAF4MAAAAAAAAXwwAAAAAAAAAAAAAXwwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGEMAAAAAAAAAAAAAGEMAAAAAAAAYgwAAAAAAAAAAAAAYgwAAAAAAABjDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbDAAAAAAAAFsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAGMMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjDAAAAAAAAGMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYMAAAAAAAAZwwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmDAAAAAAAAGYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAGcMAAAAAAAAaQwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnDAAAAAAAAGcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "boolean"
					},
					"BwAAAGgMAAAAAAAAaQwAAAAAAAAAAAAAaQwAAAAAAABqDAAAAAAAAAAAAABqDAAAAAAAAGsMAAAAAAAAAAAAAGsMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABtDAAAAAAAAAAAAABtDAAAAAAAAG4MAAAAAAAAAAAAAG4MAAAAAAAAbwwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoDAAAAAAAAGgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "‚Åæ"
					},
					"AQAAAHAMAAAAAAAAcQwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwDAAAAAAAAHAMAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAHAMAAAAAAAAcAwAAAAAAAADAAAA4oG+",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxDAAAAAAAAHEMAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\nargs"
					},
					"CAAAAHEMAAAAAAAAcgwAAAAAAAAAAAAAcgwAAAAAAAB0DAAAAAAAAAAAAAByDAAAAAAAAHIMAAAAAAAAAgAAACAgcgwAAAAAAAB2DAAAAAAAAAAAAAB2DAAAAAAAAHcMAAAAAAAAAAAAAHcMAAAAAAAAeAwAAAAAAAAAAAAAeAwAAAAAAAB5DAAAAAAAAAAAAAB5DAAAAAAAAHoMAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxDAAAAAAAAHEMAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					4,
					"left_delete",
					null,
					"BAAAAHkMAAAAAAAAeQwAAAAAAAABAAAAc3gMAAAAAAAAeAwAAAAAAAABAAAAZ3cMAAAAAAAAdwwAAAAAAAABAAAAcnYMAAAAAAAAdgwAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6DAAAAAAAAHoMAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "args="
					},
					"BQAAAHYMAAAAAAAAdwwAAAAAAAAAAAAAdwwAAAAAAAB4DAAAAAAAAAAAAAB4DAAAAAAAAHkMAAAAAAAAAAAAAHkMAAAAAAAAegwAAAAAAAAAAAAAegwAAAAAAAB7DAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2DAAAAAAAAHYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsMAAAAAAAAfAwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7DAAAAAAAAHsMAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert_completion",
					{
						"completion": "LogCall(fn, thisObj);",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "function LogCall"
					},
					"AQAAAHwMAAAAAAAAkQwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8DAAAAAAAAHwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"cut",
					null,
					"AQAAAMUMAAAAAAAAxQwAAAAAAAAYAAAAY29tcGFjdCA/IFtdIDogW251bGwsIDJd",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFDAAAAAAAAN0MAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAMUMAAAAAAAA3QwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFDAAAAAAAAMUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"paste",
					null,
					"AgAAAHsMAAAAAAAAkwwAAAAAAAAAAAAAkwwAAAAAAACTDAAAAAAAABYAAAAgTG9nQ2FsbChmbiwgdGhpc09iaik7",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7DAAAAAAAAJEMAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJMMAAAAAAAAlAwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTDAAAAAAAAJMMAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"left_delete",
					null,
					"AQAAAMgMAAAAAAAAyAwAAAAAAAAaAAAAY29tcGFjdCA/IFtdIDogW251bGwsIDJdKSk",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIDAAAAAAAAOIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMcMAAAAAAAAxwwAAAAAAAABAAAAKMcMAAAAAAAAxwwAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIDAAAAAAAAMgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "arfgs"
					},
					"BQAAAMcMAAAAAAAAyAwAAAAAAAAAAAAAyAwAAAAAAADJDAAAAAAAAAAAAADJDAAAAAAAAMoMAAAAAAAAAAAAAMoMAAAAAAAAywwAAAAAAAAAAAAAywwAAAAAAADMDAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHDAAAAAAAAMcMAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					3,
					"left_delete",
					null,
					"AwAAAMsMAAAAAAAAywwAAAAAAAABAAAAc8oMAAAAAAAAygwAAAAAAAABAAAAZ8kMAAAAAAAAyQwAAAAAAAABAAAAZg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMDAAAAAAAAMwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "gs))"
					},
					"BAAAAMkMAAAAAAAAygwAAAAAAAAAAAAAygwAAAAAAADLDAAAAAAAAAAAAADLDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAAzQwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJDAAAAAAAAMkMAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "upload.js",
			"settings":
			{
				"buffer_size": 10049,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"",
					null,
					"AgAAANUYAAAAAAAA6xgAAAAAAAAAAAAA6xgAAAAAAADrGAAAAAAAAAcAAAB1cGxvYWRz",
					"AQAAAAAAAAABAAAA1RgAAAAAAADcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAOEYAAAAAAAA4RgAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA4hgAAAAAAADiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "uploads"
					},
					"BwAAANUYAAAAAAAA1hgAAAAAAAAAAAAA1hgAAAAAAADXGAAAAAAAAAAAAADXGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAA2RgAAAAAAADaGAAAAAAAAAAAAADaGAAAAAAAANsYAAAAAAAAAAAAANsYAAAAAAAA3BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RgAAAAAAADVGAAAAAAAAAAAAAAAQG1A"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAgZAAAAAAAACRkAAAAAAAAAAAAACRkAAAAAAAALGQAAAAAAAAAAAAALGQAAAAAAAAwZAAAAAAAAAAAAAAwZAAAAAAAADhkAAAAAAAAAAAAACRkAAAAAAAAJGQAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAACBkAAAAAAAAIGQAAAAAAAP///////+9/"
				],
				[
					64,
					1,
					"paste",
					null,
					"AQAAAAwZAAAAAAAAMRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBkAAAAAAAAMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"paste",
					null,
					"AgAAABsZAAAAAAAAHxkAAAAAAAAAAAAAHxkAAAAAAAAfGQAAAAAAAAsAAABVcGxvYWRGaWxlcw",
					"AQAAAAAAAAABAAAAGxkAAAAAAAAmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"paste",
					null,
					"AgAAACUZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAApGQAAAAAAAAEAAABl",
					"AQAAAAAAAAABAAAAJRkAAAAAAAAmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"paste",
					null,
					"AgAAACIZAAAAAAAAJhkAAAAAAAAAAAAAJhkAAAAAAAAmGQAAAAAAAAgAAABmaWxyZXNwcw",
					"AQAAAAAAAAABAAAAIhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADobAAAAAAAAOxsAAAAAAAAAAAAAOxsAAAAAAAA/GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhsAAAAAAAA6GwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAABcbAAAAAAAAGBsAAAAAAAAAAAAAGBsAAAAAAAAZGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxsAAAAAAAAXGwAAAAAAAAAAAAAAAEJA"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKYZAAAAAAAApxkAAAAAAAAAAAAApxkAAAAAAACoGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphkAAAAAAACmGQAAAAAAAAAAAAAAAEJA"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgZAAAAAAAAqRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBkAAAAAAACoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAA4ZAAAAAAAADxkAAAAAAAAAAAAADxkAAAAAAAAQGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhkAAAAAAAAOGQAAAAAAAAAAAAAAAEJA"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAD4ZAAAAAAAAPxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhkAAAAAAAA+GQAAAAAAAAAAAAAAAEJA"
				],
				[
					124,
					1,
					"left_delete",
					null,
					"AQAAAD4ZAAAAAAAAPhkAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAPxkAAAAAAAA/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAAGcZAAAAAAAAaBkAAAAAAAAAAAAAaBkAAAAAAABpGQAAAAAAAAAAAABpGQAAAAAAAGoZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxkAAAAAAABnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "00"
					},
					"AgAAAOgYAAAAAAAA6RgAAAAAAAAAAAAA6RgAAAAAAADqGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAAOkYAAAAAAAA6RgAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA6hgAAAAAAADqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					2,
					"left_delete",
					null,
					"AgAAAOgYAAAAAAAA6BgAAAAAAAABAAAAMOcYAAAAAAAA5xgAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA6RgAAAAAAADpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAANwYAAAAAAAA3RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAANwYAAAAAAAA3BgAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAA3RgAAAAAAADdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAANwYAAAAAAAA3RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAANwYAAAAAAAA3BgAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAA3RgAAAAAAADdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAANwYAAAAAAAA3RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BgAAAAAAADcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAOgYAAAAAAAA6RgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BgAAAAAAADoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAOgYAAAAAAAA6BgAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA6RgAAAAAAADpGAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAANwYAAAAAAAA3BgAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA3RgAAAAAAADdGAAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AgAAABIOAAAAAAAAEw4AAAAAAAAAAAAAEw4AAAAAAAATDgAAAAAAABIAAAA/YWN0aW9uPWxvYWQmZmlsZT0",
					"AQAAAAAAAAABAAAAEg4AAAAAAAAkDgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 34801,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					44,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAIFHAAAAAAAAgkcAAAAAAAAAAAAAgkcAAAAAAACORwAAAAAAAAAAAACORwAAAAAAAI9HAAAAAAAAAAAAAI9HAAAAAAAAm0cAAAAAAAAAAAAAgkcAAAAAAACCRwAAAAAAAAwAAAAgICAgICAgICAgICCPRwAAAAAAAJBHAAAAAAAAAAAAAJBHAAAAAAAAnEcAAAAAAAAAAAAAg0cAAAAAAACDRwAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAgUcAAAAAAACBRwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAAINHAAAAAAAAhEcAAAAAAAAAAAAAhUcAAAAAAACFRwAAAAAAAAwAAAAgICAgICAgICAgICCERwAAAAAAAIVHAAAAAAAAAAAAAIVHAAAAAAAAhkcAAAAAAAAAAAAAhkcAAAAAAACHRwAAAAAAAAAAAACHRwAAAAAAAIhHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAg0cAAAAAAACDRwAAAAAAAAAAAAAAAFtA"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIhHAAAAAAAAiUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiEcAAAAAAACIRwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIlHAAAAAAAAi0cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiUcAAAAAAACJRwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "storage,"
					},
					"CAAAAIpHAAAAAAAAi0cAAAAAAAAAAAAAi0cAAAAAAACMRwAAAAAAAAAAAACMRwAAAAAAAI1HAAAAAAAAAAAAAI1HAAAAAAAAjkcAAAAAAAAAAAAAjkcAAAAAAACPRwAAAAAAAAAAAACPRwAAAAAAAJBHAAAAAAAAAAAAAJBHAAAAAAAAkUcAAAAAAAAAAAAAkUcAAAAAAACSRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAikcAAAAAAACKRwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "filenmae,"
					},
					"CQAAAJJHAAAAAAAAk0cAAAAAAAAAAAAAk0cAAAAAAACURwAAAAAAAAAAAACURwAAAAAAAJVHAAAAAAAAAAAAAJVHAAAAAAAAlkcAAAAAAAAAAAAAlkcAAAAAAACXRwAAAAAAAAAAAACXRwAAAAAAAJhHAAAAAAAAAAAAAJhHAAAAAAAAmUcAAAAAAAAAAAAAmUcAAAAAAACaRwAAAAAAAAAAAACaRwAAAAAAAJtHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkkcAAAAAAACSRwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					4,
					"left_delete",
					null,
					"BAAAAJpHAAAAAAAAmkcAAAAAAAABAAAALJlHAAAAAAAAmUcAAAAAAAABAAAAZZhHAAAAAAAAmEcAAAAAAAABAAAAYZdHAAAAAAAAl0cAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAm0cAAAAAAACbRwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "ame,iup"
					},
					"BwAAAJdHAAAAAAAAmEcAAAAAAAAAAAAAmEcAAAAAAACZRwAAAAAAAAAAAACZRwAAAAAAAJpHAAAAAAAAAAAAAJpHAAAAAAAAm0cAAAAAAAAAAAAAm0cAAAAAAACcRwAAAAAAAAAAAACcRwAAAAAAAJ1HAAAAAAAAAAAAAJ1HAAAAAAAAnkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAl0cAAAAAAACXRwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					3,
					"left_delete",
					null,
					"AwAAAJ1HAAAAAAAAnUcAAAAAAAABAAAAcJxHAAAAAAAAnEcAAAAAAAABAAAAdZtHAAAAAAAAm0cAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAnkcAAAAAAACeRwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "uploaded,"
					},
					"CQAAAJtHAAAAAAAAnEcAAAAAAAAAAAAAnEcAAAAAAACdRwAAAAAAAAAAAACdRwAAAAAAAJ5HAAAAAAAAAAAAAJ5HAAAAAAAAn0cAAAAAAAAAAAAAn0cAAAAAAACgRwAAAAAAAAAAAACgRwAAAAAAAKFHAAAAAAAAAAAAAKFHAAAAAAAAokcAAAAAAAAAAAAAokcAAAAAAACjRwAAAAAAAAAAAACjRwAAAAAAAKRHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAm0cAAAAAAACbRwAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "address,"
					},
					"CAAAAKRHAAAAAAAApUcAAAAAAAAAAAAApUcAAAAAAACmRwAAAAAAAAAAAACmRwAAAAAAAKdHAAAAAAAAAAAAAKdHAAAAAAAAqEcAAAAAAAAAAAAAqEcAAAAAAACpRwAAAAAAAAAAAACpRwAAAAAAAKpHAAAAAAAAAAAAAKpHAAAAAAAAq0cAAAAAAAAAAAAAq0cAAAAAAACsRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApEcAAAAAAACkRwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "exif,thumbnail"
					},
					"DgAAAKxHAAAAAAAArUcAAAAAAAAAAAAArUcAAAAAAACuRwAAAAAAAAAAAACuRwAAAAAAAK9HAAAAAAAAAAAAAK9HAAAAAAAAsEcAAAAAAAAAAAAAsEcAAAAAAACxRwAAAAAAAAAAAACxRwAAAAAAALJHAAAAAAAAAAAAALJHAAAAAAAAs0cAAAAAAAAAAAAAs0cAAAAAAAC0RwAAAAAAAAAAAAC0RwAAAAAAALVHAAAAAAAAAAAAALVHAAAAAAAAtkcAAAAAAAAAAAAAtkcAAAAAAAC3RwAAAAAAAAAAAAC3RwAAAAAAALhHAAAAAAAAAAAAALhHAAAAAAAAuUcAAAAAAAAAAAAAuUcAAAAAAAC6RwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArEcAAAAAAACsRwAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "=jsoin;"
					},
					"BwAAALtHAAAAAAAAvEcAAAAAAAAAAAAAvEcAAAAAAAC9RwAAAAAAAAAAAAC9RwAAAAAAAL5HAAAAAAAAAAAAAL5HAAAAAAAAv0cAAAAAAAAAAAAAv0cAAAAAAADARwAAAAAAAAAAAADARwAAAAAAAMFHAAAAAAAAAAAAAMFHAAAAAAAAwkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAu0cAAAAAAAC7RwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					3,
					"left_delete",
					null,
					"AwAAAMFHAAAAAAAAwUcAAAAAAAABAAAAO8BHAAAAAAAAwEcAAAAAAAABAAAAbr9HAAAAAAAAv0cAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAwkcAAAAAAADCRwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "n;"
					},
					"AgAAAL9HAAAAAAAAwEcAAAAAAAAAAAAAwEcAAAAAAADBRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAv0cAAAAAAAC/RwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMFHAAAAAAAAwkcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwUcAAAAAAADBRwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\njson.f"
					},
					"BwAAAMJHAAAAAAAAw0cAAAAAAAAAAAAAw0cAAAAAAADERwAAAAAAAAAAAADERwAAAAAAAMVHAAAAAAAAAAAAAMVHAAAAAAAAxkcAAAAAAAAAAAAAxkcAAAAAAADHRwAAAAAAAAAAAADHRwAAAAAAAMhHAAAAAAAAAAAAAMhHAAAAAAAAyUcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwkcAAAAAAADCRwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAAMhHAAAAAAAAyEcAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAyUcAAAAAAADJRwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "size="
					},
					"BQAAAMhHAAAAAAAAyUcAAAAAAAAAAAAAyUcAAAAAAADKRwAAAAAAAAAAAADKRwAAAAAAAMtHAAAAAAAAAAAAAMtHAAAAAAAAzEcAAAAAAAAAAAAAzEcAAAAAAADNRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyEcAAAAAAADIRwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "fs.size"
					},
					"BwAAAM1HAAAAAAAAzkcAAAAAAAAAAAAAzkcAAAAAAADPRwAAAAAAAAAAAADPRwAAAAAAANBHAAAAAAAAAAAAANBHAAAAAAAA0UcAAAAAAAAAAAAA0UcAAAAAAADSRwAAAAAAAAAAAADSRwAAAAAAANNHAAAAAAAAAAAAANNHAAAAAAAA1EcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzUcAAAAAAADNRwAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "Sync"
					},
					"BAAAANRHAAAAAAAA1UcAAAAAAAAAAAAA1UcAAAAAAADWRwAAAAAAAAAAAADWRwAAAAAAANdHAAAAAAAAAAAAANdHAAAAAAAA2EcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1EcAAAAAAADURwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANhHAAAAAAAA2kcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2EcAAAAAAADYRwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "storage"
					},
					"BwAAANlHAAAAAAAA2kcAAAAAAAAAAAAA2kcAAAAAAADbRwAAAAAAAAAAAADbRwAAAAAAANxHAAAAAAAAAAAAANxHAAAAAAAA3UcAAAAAAAAAAAAA3UcAAAAAAADeRwAAAAAAAAAAAADeRwAAAAAAAN9HAAAAAAAAAAAAAN9HAAAAAAAA4EcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2UcAAAAAAADZRwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOFHAAAAAAAA4kcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4UcAAAAAAADhRwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/alea.js",
			"settings":
			{
				"buffer_size": 3138,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 45 files for \"Alea.singleton\" (regex, case sensitive)\n\n0 matches",
			"settings":
			{
				"buffer_size": 74,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"pre",
				"Project: Edit Project"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"",
				"Auto indent"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/usr/include/sqlite3.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/test-sqlite3.js",
		"/home/roman/Projects/plot-cv/sqlite3.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/scripts/mysql_system_tables.sql",
		"/home/roman/Projects/plot-cv/test-bjson.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/mariadb-10.3-10.3.38/scripts/fill_help_tables.sql",
		"/home/roman/Projects/plot-cv/quickjs/run-test262.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build-libwebsockets.sh",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/build/build.ninja",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/textElement.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/555-PWM-Motor-Speed-Controller-alt-schematic.svg",
		"/home/roman/Projects/plot-cv/555-PWM-Motor-Speed-Controller-alt-board.svg",
		"/home/roman/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.brd",
		"/home/roman/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.sch",
		"/home/roman/Projects/plot-cv/lib/geom/matrix.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/dsp/util.js",
		"/home/roman/Projects/plot-cv/Zeichnung.svg",
		"/home/roman/Projects/plot-cv/lib/eagle/svg/ZoomRedraw.svg",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/text.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/geom/size.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/common.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/elementProxy.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wirePath.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderer.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/circle.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/lib/eagle/libraryRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components.js",
		"/home/roman/Projects/plot-cv/quickjs/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/lib/container/spatial-hash.js",
		"/home/roman/Projects/plot-cv/lib/container/Hash-Multimap.js",
		"/home/roman/Projects/plot-cv/lib/container/componentMap.js",
		"/home/roman/Projects/plot-cv/lib/container/multikeymap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/util-w-2.diff",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/new.diff",
		"/home/roman/Projects/plot-cv/lib/eda/colorCoding.js",
		"/home/roman/Projects/plot-cv/eagle-commands.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/lib/color/rgba.js",
		"/home/roman/Projects/plot-cv/lib/delegate.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/package.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/origin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/board.js",
		"/home/roman/Projects/plot-cv/lib/json/pathMapper.js",
		"/home/roman/Projects/plot-cv/eagle-query.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Dokumente/Electronics/example.circuit",
		"/home/roman/Projects/plot-cv/circuit.js",
		"/home/roman/Projects/pictest/eagle/OpenProg-18F2550.brd",
		"/home/roman/Projects/plot-cv/OpenProg-18F2550.circuit",
		"/home/roman/Projects/plot-cv/read.hex",
		"/home/roman/Projects/plot-cv/test-bitset.js",
		"/home/roman/Projects/plot-cv/example.circuit",
		"/home/roman/Projects/plot-cv/test-circuit.js",
		"/home/roman/Projects/plot-cv/OProg-18F2550.hex",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/lib/async/websocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/eagle2gerber.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_treewalker.js",
		"/home/roman/Projects/plot-cv/lib/geom/bbox.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/svg-crop-pad.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/plugins/mirror.c",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/lib/stream/utils.js",
		"/home/roman/Projects/plot-cv/string-helpers.js",
		"/home/roman/Projects/plot-cv/bjson.js",
		"/home/roman/Projects/plot-cv/openlayers/examples/wms-tiled-wrap-180.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/lib/stream.js",
		"/home/roman/Projects/plot-cv/filelist.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/minnet-server-http.c",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncIterator.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useAsyncGenerator.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv/lib/eagle,*.js,-*/build/*,-*/inst/*",
			"<open files>,/home/roman/Projects/plot-cv,*.js,-*/build/*,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/build/*,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/build/*",
			"/home/roman/Projects/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Alea.singleton",
			"singleton",
			"RootStore.loadItems",
			"\\.load",
			"action=",
			"action=lo",
			"'uploads'",
			"'uploads",
			"uploads'",
			"create table",
			"path",
			"pathj",
			"path",
			"pr\\[",
			"'pr",
			"isNative",
			"is[A-Za-z]*Function",
			"is.*Function",
			"returnType",
			"FunctionDecl",
			", js_value_typestr(ctx, stack)",
			"stack",
			"error_prin",
			"str",
			"error_prin",
			"jsm_dump",
			"print_err",
			"js_load_file",
			"js_eval_file",
			"generateDoc",
			"exp",
			"MakeFFI",
			"function.*FFI",
			"PROMISE_REJE",
			"JS_GetBigInt",
			"cur_func = fd",
			"goto except",
			"JS_FreeValue.*m->module",
			"js_dynamic_import_reject\\(",
			"JS_MarkValue.*module_ns",
			"_call2\\(",
			"call2",
			"js_evaluate_module",
			"js_evaluate_moduel",
			"NewClass1",
			"emit_op\\(s, OP_ret",
			"has_ex",
			"clean:",
			"eval_has",
			"eval_has_ex",
			"\\(JS_IsEx",
			"JS_IsEx",
			"JSPromiseFunctionDataResolved",
			"emit_op.*OP_return_undef",
			"OP_return_undef",
			"eval_has_ex",
			"module_ns",
			"module_nas",
			"struct JSModuleDef",
			"JSModuleDef",
			"3\\.1\\.0",
			"\\.\\.\\/",
			"range",
			"range =",
			"Tracked",
			"'kind'",
			"kind",
			"'kind'",
			"map\\(",
			"roundTo",
			"R",
			"R2",
			"parentRot",
			"log",
			"const",
			"TransformationList",
			"rot=\"M",
			"transformation",
			"vec",
			"transform",
			"R2<",
			"R2",
			"children.push(\n      h('circle', {\n        class: 'pin-x',\n        stroke: '#ff00ff',\n        fill: 'none',\n        cx: tp.x,\n        cy: tp.y,\n        r: 0.5,\n        'stroke-width': 0.1\n      })\n    );\n    children.push(\n      h('circle', {\n        class: 'pin-y',\n        stroke: '#4219ff',\n        opacity: 0.8,\n        fill: 'none',\n        cx: x,\n        cy: y,\n        r: 0.75,\n        'stroke-width': 0.1\n      })\n    );",
			"IC1<",
			"font-size:",
			"console\\.",
			");\n",
			"<pin",
			"transform",
			"tp =",
			"IC1\"",
			"IC1",
			"name",
			"555_ALT",
			"IC1\"",
			"IC1",
			"Fragment",
			")]));",
			"'SVGRenderer",
			"Renderer\\.render",
			"\\.render",
			"svg\\(",
			"elem",
			"555_ALT3",
			"IC1\"",
			"isNumeric.*parseFloat",
			"indexOf",
			"'value'",
			"'element'",
			"'element'w",
			"'element'",
			"'value'",
			"get value",
			"D1\"",
			"renderItem",
			"renderItem'",
			"round =",
			"roundTo =",
			"round =",
			"inspect",
			"toStringTag",
			"getBounds",
			"getOther",
			"getOther =",
			"getOther",
			"getOther =",
			"getOther",
			"quot ="
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"3.0.2",
			"$srcdir/",
			"",
			"'EagleSVGRenderer",
			"this.debug",
			"\\1//console.",
			"isFunction(\\1)",
			"",
			"\\1",
			"is",
			"define",
			"!isString(\\1)",
			"!isFunction(\\1)",
			"isObject(\\1)",
			"isFunction(\\1)",
			"diff --git a/lib/util.js b/lib/util.js\nindex ab76720..001e53e 100644\n--- a/lib/util.js\n+++ b/lib/util.js\n@@",
			"function \\1(\\2) {",
			"function \\1(\\2)",
			"!isString(\\1)",
			"types.isBigInt(\\1)",
			"!isObject(\\1)",
			"isSymbol(\\1)",
			"isString(\\1)",
			"isObject(\\1)",
			"isNumber(\\1)",
			"!isFunction(\\1)",
			"!isString(\\1)",
			"isNumber(\\1)",
			"isString(\\1)",
			"isObject(\\1)",
			"isFunction(\\1)",
			"",
			"^\\1//this.debug",
			"'./components",
			"}\\n\\n\\1",
			"this.circuit",
			"",
			"\\1//console",
			"packageToPosMap",
			"(this.parse",
			"line",
			"maxDepthOrPred",
			"define",
			"isObject",
			"\\1//\\2",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 35,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679687296.4,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "io-helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11744,
						"regions":
						{
						},
						"selection":
						[
							[
								1188,
								1188
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679687252.52,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 389.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "upload.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10049,
						"regions":
						{
						},
						"selection":
						[
							[
								3878,
								3879
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 115,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679688263.39,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1394.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "upload-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34801,
						"regions":
						{
						},
						"selection":
						[
							[
								16109,
								16109
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 523,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679705231.42,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8551.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/alea.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3138,
						"regions":
						{
						},
						"selection":
						[
							[
								36,
								40
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1679705237.73,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": -1,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1679707379.6,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"alea",
				"lib/alea.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"jsut",
				"quickjs/qjs-modules/src/js-utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"run-test",
				"quickjs/run-test262.c"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"build-libwe",
				"quickjs/qjs-net/build-libwebsockets.sh"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"matrix.js",
				"lib/geom/matrix.js"
			],
			[
				"transform",
				"lib/geom/transformation.js"
			],
			[
				"pin.js",
				"lib/eagle/components/pin.js"
			],
			[
				"",
				"~/Projects/an-tronics/eagle/555-PWM-Motor-Speed-Controller-alt.sch"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"symb",
				"lib/eagle/components/symbol.js"
			],
			[
				"schematicren",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"svgre",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardren",
				"lib/eagle/boardRenderer.js"
			],
			[
				"element",
				"lib/eagle/element.js"
			],
			[
				"svgRend",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardRen",
				"lib/eagle/boardRenderer.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"boardRe",
				"lib/eagle/boardRenderer.js"
			],
			[
				"renderUtil",
				"lib/eagle/renderUtils.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"project.js",
				"lib/eagle/project.js"
			],
			[
				"text.js",
				"lib/eagle/components/text.js"
			],
			[
				"project",
				"lib/eagle/project.js"
			],
			[
				"nodeList",
				"lib/eagle/nodeList.js"
			],
			[
				"lib/util.js",
				"lib/util.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"common",
				"lib/eagle/common.js"
			],
			[
				"ref.js",
				"lib/eagle/ref.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"element.js",
				"lib/eagle/element.js"
			],
			[
				"common.j",
				"lib/eagle/common.js"
			],
			[
				"nodeLi",
				"lib/eagle/nodeList.js"
			],
			[
				"common.js",
				"lib/eagle/common.js"
			],
			[
				"elementP",
				"lib/eagle/elementProxy.js"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"wirePa",
				"lib/eagle/components/wirePath.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"nodeMap",
				"lib/eagle/nodeMap.js"
			],
			[
				"renderer.js",
				"lib/eagle/renderer.js"
			],
			[
				"functions.cmake",
				"qjs-opencv/cmake/functions.cmake"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"textEle",
				"lib/eagle/components/textElement.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"drawing",
				"lib/eagle/components/drawing.js"
			],
			[
				"pathMapper",
				"lib/json/pathMapper.js"
			],
			[
				"xml-shell",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				"server.js",
				"upload-server.js"
			],
			[
				"delega",
				"lib/delegate.js"
			],
			[
				"rgba",
				"lib/color/rgba.js"
			],
			[
				"eagle-com",
				"eagle-commands.js"
			],
			[
				"colorCod",
				"lib/eda/colorCoding.js"
			],
			[
				"eagle-qu",
				"eagle-query.js"
			],
			[
				"eagle-q",
				"eagle-query.js"
			],
			[
				"read.hex",
				"read.hex"
			],
			[
				"exam",
				"example.circuit"
			],
			[
				"xpath.js",
				"quickjs/qjs-modules/lib/xpath.js"
			],
			[
				"Document",
				"lib/eagle/document.js"
			],
			[
				"test-",
				"test-bitset.js"
			],
			[
				"circuit",
				"circuit.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"eagle2ger",
				"eagle2gerber.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"websock",
				"lib/async/websocket.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"websocket.js",
				"lib/async/websocket.js"
			],
			[
				"test-bj",
				"test-bjson.js"
			],
			[
				"bjson",
				"bjson.js"
			],
			[
				"string-he",
				"string-helpers.js"
			],
			[
				"quickjs-po",
				"quickjs/qjs-modules/quickjs-pointer.c"
			],
			[
				"list-exp",
				"quickjs/qjs-modules/list-exports.js"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"utils.js",
				"lib/stream/utils.js"
			],
			[
				"mirror",
				"quickjs/qjs-net/src/plugins/mirror.c"
			],
			[
				"list-ex",
				"quickjs/qjs-modules/list-exports.js"
			],
			[
				"fire.html",
				"fire.html"
			],
			[
				"server-htt",
				"quickjs/qjs-net/minnet-server-http.c"
			],
			[
				"-ws.c",
				"quickjs/qjs-net/minnet-server-ws.c"
			],
			[
				"filelist",
				"filelist.js"
			],
			[
				"filelist.js",
				"filelist.js"
			],
			[
				"extendGe",
				"quickjs/qjs-modules/lib/extendGenerator.js"
			],
			[
				"test-debugger",
				"test-debuggerprotocol.js"
			],
			[
				"fire.htm",
				"fire.html"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"fontsample",
				"fontsample.js"
			],
			[
				"upload.htm",
				"upload.html"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"test-gpio",
				"test-gpio.js"
			],
			[
				"index.html",
				"index.html"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"test-minnet",
				"test-minnet.js"
			],
			[
				"list-dir",
				"list-directory.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"transformation",
				"lib/geom/transformation.js"
			],
			[
				"element.",
				"lib/dom/element.js"
			],
			[
				"crosskit",
				"lib/crosskit.js"
			],
			[
				"fire-es",
				"fire-es.html"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"fire-es.h",
				"fire-es.html"
			],
			[
				"fire-es.js",
				"fire-es.js"
			],
			[
				"fire.es",
				"fire.es"
			],
			[
				"quickjs",
				"qjs-opencv/cmake/QuickJSModule.cmake"
			],
			[
				"test-strea",
				"test-stream.js"
			],
			[
				"worker.js",
				"worker.js"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/include/vector.h"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 784.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
