{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PaStream",
				"PaStreamParameters"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"PaE",
				"PaHostErrorInfo"
			],
			[
				"hostApi",
				"hostApiSpecificStreamInfo"
			],
			[
				"host",
				"hostApiType"
			],
			[
				"defaultHi",
				"defaultHighOutputLatency"
			],
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "CMAKE_BUILD_TYPE\nCMAKE_BUILD_TYPE\nBROTLI_BUNDLED_MODE\nBROTLI_BUNDLED_MODE\n  hex_to_dec\nHEXADECIMAL\n  _decimal\n  _tail\n  _decimal\n  _tail\n  _tail\n  _decimal\n  _decimal\n  _decimal\n  _decimal\n  _decimal\n  _decimal\n  _decimal\n  _digit\n  _tail\nDECIMAL\n  _decimal\nPARENT_SCOPE\n  _brotli_version_line\n  _brotli_version_hex\n  _brotli_version\n  _brotli_version\n  _brotli_version\nBROTLI_VERSION\nBROTLI_VERSION_MAJOR\nBROTLI_VERSION_MINOR\nBROTLI_VERSION_PATCH\n  _brotli_abi_info_line\n  _brotli_abi_info_hex\n  _brotli_abi_info\n  _brotli_abi_info\n  _brotli_abi_info\nBROTLI_ABI_CURRENT\nBROTLI_ABI_AGE\nCMAKE_C_FLAGS\nCMAKE_C_FLAGS\nENABLE_SANITIZER\nCMAKE_CXX_FLAGS\nCMAKE_CXX_FLAGS\nENABLE_SANITIZER\nCMAKE_EXE_LINKER_FLAGS\nCMAKE_EXE_LINKER_FLAGS\nENABLE_SANITIZER\nLIBM_LIBRARY\n  orig_req_libs\nCMAKE_REQUIRED_LIBRARIES\nCMAKE_REQUIRED_LIBRARIES\nCMAKE_REQUIRED_LIBRARIES\nLIBM_LIBRARY\nCMAKE_REQUIRED_LIBRARIES\n  orig_req_libs\nBROTLI_INCLUDE_DIRS\nCMAKE_CURRENT_SOURCE_DIR\nBROTLI_LIBRARIES_CORE\nBROTLI_LIBRARIES\nBROTLI_LIBRARIES_CORE\nLIBM_LIBRARY\nBROTLI_LIBRARIES_CORE_STATIC\nBROTLI_LIBRARIES_STATIC\nBROTLI_LIBRARIES_CORE_STATIC\nLIBM_LIBRARY\nCMAKE_SYSTEM_NAME\nCMAKE_SYSTEM_NAME\nCMAKE_SYSTEM_NAME\n  transform_sources_list\nINPUT_FILE\nTEXT\nTEXT\nTEXT\nOUTPUT_FILE\nTEXT\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_CURRENT_BINARY_DIR\nBROTLI_SHARED_LIBS\nBROTLI_SHARED_LIBS\nBROTLI_COMMON_C\nBROTLI_DEC_C\nBROTLI_ENC_C\nBROTLI_STATIC_LIBS\nBROTLI_COMMON_C\nBROTLI_DEC_C\nBROTLI_ENC_C\nBROTLI_INCLUDE_DIRS\n  lib\n  lib\n  lib\nLIB\n  lib\nLIBM_LIBRARY\n  lib\nBROTLI_INCLUDE_DIRS\n  lib\nBROTLI_ABI_COMPATIBILITY\nBROTLI_ABI_AGE\nBROTLI_ABI_REVISION\nBROTLI_ABI_COMPATIBILITY\n  lib\n  lib\nBROTLI_INCLUDE_DIRS\nBROTLI_INCLUDE_DIRS\nBROTLI_INCLUDE_DIRS\nBROTLI_LIBRARIES\nBROTLI_LIBRARIES\nBROTLI_CLI_C\nBROTLI_LIBRARIES_STATIC\nCMAKE_INSTALL_BINDIR\nBROTLI_LIBRARIES_CORE\nCMAKE_INSTALL_LIBDIR\nCMAKE_INSTALL_LIBDIR\nCMAKE_INSTALL_BINDIR\nBROTLI_LIBRARIES_CORE_STATIC\nCMAKE_INSTALL_LIBDIR\nCMAKE_INSTALL_LIBDIR\nCMAKE_INSTALL_BINDIR\nBROTLI_INCLUDE_DIRS\nCMAKE_INSTALL_INCLUDEDIR\nBROTLI_DISABLE_TESTS\nCMAKE_C_COMPILER\nBROTLI_WRAPPER\nBROTLI_WRAPPER_LD_PREFIX\nCMAKE_C_COMPILER\nBROTLI_WRAPPER\nBROTLI_WRAPPER_LD_PREFIX\nCMAKE_C_COMPILER\nBROTLI_WRAPPER\nBROTLI_WRAPPER_LD_PREFIX\nROUNDTRIP_INPUTS\nROUNDTRIP_INPUTS\nINPUT\nOUTPUT_FILE\nCMAKE_CURRENT_BINARY_DIR\nOUTPUT_NAME\nINPUT_FILE\nCMAKE_CURRENT_SOURCE_DIR\nINPUT\nINPUT_FILE\nBROTLI_TEST_PREFIX\nINPUT\n  quality\nCMAKE_COMMAND\nBROTLI_WRAPPER\nBROTLI_WRAPPER_LD_PREFIX\nTARGET_FILE\n  brotli\n  quality\nINPUT_FILE\nOUTPUT_FILE\n  quality\nCMAKE_CURRENT_SOURCE_DIR\nINPUT\nCMAKE_CURRENT_SOURCE_DIR\nCOMPATIBILITY_INPUTS\nBROTLI_TEST_PREFIX\nINPUT\nCMAKE_COMMAND\nBROTLI_WRAPPER\nBROTLI_WRAPPER_LD_PREFIX\nTARGET_FILE\n  brotli\nCMAKE_CURRENT_SOURCE_DIR\nINPUT\nCMAKE_CURRENT_SOURCE_DIR\n  generate_pkg_config_path\n  path\n  path_args\nARGV\n  outvar\n  path\n  value\n  value\n  outvar\n  name\n  path\n  value_length\n  path\n  value_length\n  path\n  value_length\n  outvar\n  name\n  suffix\n  outvar\n  outvar\n  transform_pc_file\nINPUT_FILE\nPREFIX\nCMAKE_INSTALL_PREFIX\nPREFIX\nTEXT\nPREFIX\nTEXT\nCMAKE_INSTALL_FULL_LIBDIR\nPREFIX\nLIBDIR\nTEXT\nCMAKE_INSTALL_FULL_INCLUDEDIR\nPREFIX\nINCLUDEDIR\nTEXT\nVERSION\nTEXT\nOUTPUT_FILE\nTEXT\nCMAKE_CURRENT_BINARY_DIR\nBROTLI_VERSION\nCMAKE_CURRENT_BINARY_DIR\nBROTLI_VERSION\nCMAKE_CURRENT_BINARY_DIR\nBROTLI_VERSION\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_INSTALL_LIBDIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_INSTALL_LIBDIR\nCMAKE_CURRENT_BINARY_DIR\nCMAKE_INSTALL_LIBDIR",
			"settings":
			{
				"buffer_size": 3388,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA9EwAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKTElCTUFHSUNfTElCUkFSWV9ESVIKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfSU5DTFVERV9ESVIKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfTElCUkFSWQogIG1hZ2ljX0xJQlJBUklFUwpMSUJNQUdJQ19MSUJSQVJZCiAgbWFnaWNfTU9EVUxFCiAgbWFnaWNfTU9EVUxFCkxJQk1BR0lDX0RCCiAgbWFnaWNfTU9EVUxFCkxJQk1BUklBREJfTElCUkFSWQogIHBrZ2NmZ19saWJfTUFSSUFEQl9tYXJpYWRiCkxJQk1BUklBREJfTElCUkFSWV9ESVIKTElCTUFSSUFEQl9MSUJSQVJZCiAgbXlzcWxfTElCUkFSSUVTCkxJQk1BUklBREJfTElCUkFSWQpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9MSUJQUV9wcQpMSUJQUV9MSUJSQVJZX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGdzcWxfTElCUkFSSUVTCkxJQlBRX0xJQlJBUlkKTElCUFFfTElCUkFSWQpMSUJQUV9MSUJSQVJZCkxJQlBRX0xJQlJBUlkKTElCUFFfSU5DTFVERV9ESVIKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTElCUFFfTElCUkFSWQpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19ICkNPTU1PTl9IRUFERVJTCkNVVElMU19IClFVSUNLSlNfSAogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIHhtbF9MSUJSQVJJRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKQ01BS0VfU1lTVEVNX05BTUUKICBzb2NrZXRzX0xJQlJBUklFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwpIQVZFX0lORVRfUFRPTgogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIGdwaW9fU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCiAgYXJjaGl2ZV9MSUJSQVJJRVMKTGliQXJjaGl2ZV9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJTRVJJQUxQT1JUX0xJQlJBUlkKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKICBzZXJpYWxfREVQUwogIHNlcmlhbF9MSUJSQVJJRVMKTElCU0VSSUFMUE9SVF9MSUJSQVJZClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpRVUlDS0pTX0xJQlJBUlkKUVVJQ0tKU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU00KVEVTVApURVNUUwpRVUlDS0pTX01PRFVMRVMKU0hBUkVEX1RBUkdFVFMKUUpTTV9MSUJESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1NZU1RFTV9OQU1FCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1BSRUZJWApDTUFLRV9JTVBPUlRfTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKUUpTTV9MSUJESVIKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgogIHByZWRpY2F0ZV9MSUJSQVJJRVMKTElCTQogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTElCSlMKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQkxFWEVSClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJYTUwKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkNPTU1PTl9NT0RVTEVTCiAgY29uc29sZV9NT0RVTEVTCiAgZGJfTU9EVUxFUwogIGZzX01PRFVMRVMKICBpb19NT0RVTEVTCiAgcGFyc2VyX01PRFVMRVMKICBwcm9jZXNzX01PRFVMRVMKICByZXBsX01PRFVMRVMKICByZXF1aXJlX01PRFVMRVMKICBwZXJmX2hvb2tzX01PRFVMRVMKICBzdGFja19NT0RVTEVTCiAgdXRpbF9NT0RVTEVTCkxJQl9NT0RVTEVTCk1PRExJU1QKQ09NTU9OX01PRFVMRVMKTElCX01PRFVMRQogIF9NT0RVTEVTCkxJQl9NT0RVTEUKQ01BS0VfQklOQVJZX0RJUgpMSUJfTU9EVUxFCk1PRExJU1QKTElCX01PRFVMRVMKTElCUkFSWV9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIGxpYmJjcnlwdF9TT1VSQ0VTCkNPTVBJTEVEX01PRFVMRVMKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpOQVRJVkVfQlVJTFRJTlMKTkFUSVZFX0JVSUxUSU5TCk5BVElWRV9CVUlMVElOClFKU01fU09VUkNFUwpDT01QSUxFRF9UQVJHRVRTCkxJQkRMClFKU01fTElCRElSCkNNQUtFX0VYRV9MSU5LRVJfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpRSlNNX0xJQkRJUgpMSU5LX0VYUE9SVApRSlNNX0xJQkRJUgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSClFKU01fTERBREQKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX0xJQlJBUlkKTElCUFRIUkVBRApMSUJNCkxJQldTMl8zMgpRVUlDS0pTX1ZFUlNJT04KUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApMSUJNQUdJQ19EQgpJTlNUQUxMX1NDUklQVFMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								122,
								138
							],
							[
								624,
								641
							],
							[
								673,
								696
							],
							[
								770,
								787
							],
							[
								825,
								842
							],
							[
								956,
								973
							],
							[
								1025,
								1057
							],
							[
								1360,
								1384
							],
							[
								1419,
								1443
							],
							[
								1480,
								1504
							],
							[
								1542,
								1566
							],
							[
								1605,
								1629
							],
							[
								1779,
								1798
							],
							[
								2016,
								2035
							],
							[
								2136,
								2160
							],
							[
								2201,
								2225
							],
							[
								2272,
								2275
							],
							[
								2279,
								2303
							],
							[
								2366,
								2370
							],
							[
								2374,
								2398
							],
							[
								2549,
								2569
							],
							[
								5085,
								5109
							],
							[
								5113,
								5137
							],
							[
								5169,
								5189
							],
							[
								5211,
								5230
							],
							[
								5238,
								5253
							],
							[
								5829,
								5853
							],
							[
								5885,
								5909
							],
							[
								5984,
								6000
							],
							[
								6035,
								6048
							],
							[
								6094,
								6114
							],
							[
								6194,
								6216
							],
							[
								6256,
								6272
							],
							[
								6365,
								6389
							],
							[
								6625,
								6640
							],
							[
								6651,
								6666
							],
							[
								6808,
								6828
							],
							[
								6852,
								6873
							],
							[
								6877,
								6900
							],
							[
								6974,
								6994
							],
							[
								7077,
								7100
							],
							[
								7104,
								7125
							],
							[
								7214,
								7230
							],
							[
								7278,
								7293
							],
							[
								7296,
								7312
							],
							[
								7323,
								7335
							],
							[
								7390,
								7402
							],
							[
								7488,
								7499
							],
							[
								7606,
								7618
							],
							[
								7754,
								7772
							],
							[
								7776,
								7802
							],
							[
								7970,
								7992
							],
							[
								8047,
								8065
							],
							[
								8249,
								8264
							],
							[
								8267,
								8285
							],
							[
								8297,
								8319
							],
							[
								8323,
								8343
							],
							[
								8431,
								8453
							],
							[
								8484,
								8506
							],
							[
								8587,
								8609
							],
							[
								8641,
								8663
							],
							[
								8667,
								8689
							],
							[
								8771,
								8793
							],
							[
								8862,
								8884
							],
							[
								8916,
								8938
							],
							[
								9087,
								9100
							],
							[
								9104,
								9123
							],
							[
								9276,
								9293
							],
							[
								9350,
								9363
							],
							[
								9534,
								9549
							],
							[
								9552,
								9565
							],
							[
								9579,
								9592
							],
							[
								9680,
								9693
							],
							[
								9709,
								9722
							],
							[
								9752,
								9769
							],
							[
								9773,
								9793
							],
							[
								9818,
								9831
							],
							[
								9873,
								9890
							],
							[
								9924,
								9941
							],
							[
								10023,
								10040
							],
							[
								10078,
								10095
							],
							[
								10099,
								10116
							],
							[
								10166,
								10183
							],
							[
								10187,
								10204
							],
							[
								10302,
								10319
							],
							[
								10394,
								10411
							],
							[
								10443,
								10460
							],
							[
								10599,
								10614
							],
							[
								10617,
								10632
							],
							[
								10717,
								10732
							],
							[
								10735,
								10750
							],
							[
								10845,
								10854
							],
							[
								10864,
								10878
							],
							[
								10881,
								10889
							],
							[
								10893,
								10902
							],
							[
								10976,
								10989
							],
							[
								10992,
								11005
							],
							[
								11107,
								11120
							],
							[
								11123,
								11136
							],
							[
								11180,
								11194
							],
							[
								11273,
								11286
							],
							[
								11339,
								11351
							],
							[
								11354,
								11366
							],
							[
								11411,
								11426
							],
							[
								11466,
								11483
							],
							[
								11510,
								11527
							],
							[
								11550,
								11565
							],
							[
								11568,
								11583
							],
							[
								11615,
								11629
							],
							[
								12231,
								12246
							],
							[
								12249,
								12264
							],
							[
								12338,
								12353
							],
							[
								12356,
								12371
							],
							[
								12743,
								12755
							],
							[
								12917,
								12940
							],
							[
								12944,
								12968
							],
							[
								13007,
								13031
							],
							[
								13053,
								13070
							],
							[
								13073,
								13093
							],
							[
								13206,
								13230
							],
							[
								13263,
								13287
							],
							[
								13361,
								13381
							],
							[
								13421,
								13437
							],
							[
								13510,
								13523
							],
							[
								13567,
								13587
							],
							[
								13629,
								13651
							],
							[
								13689,
								13705
							],
							[
								13853,
								13877
							],
							[
								13901,
								13922
							],
							[
								13941,
								13966
							],
							[
								13969,
								13993
							],
							[
								14117,
								14128
							],
							[
								14148,
								14164
							],
							[
								14167,
								14188
							],
							[
								14212,
								14227
							],
							[
								14230,
								14245
							],
							[
								14306,
								14321
							],
							[
								14324,
								14339
							],
							[
								14355,
								14367
							],
							[
								14370,
								14382
							],
							[
								14590,
								14610
							],
							[
								14903,
								14922
							],
							[
								14950,
								14969
							],
							[
								14973,
								14992
							],
							[
								15051,
								15070
							],
							[
								15181,
								15200
							],
							[
								15230,
								15249
							],
							[
								15253,
								15272
							],
							[
								15333,
								15352
							],
							[
								15472,
								15491
							],
							[
								15523,
								15542
							],
							[
								15546,
								15565
							],
							[
								15628,
								15647
							],
							[
								15772,
								15787
							],
							[
								15828,
								15847
							],
							[
								15956,
								15980
							],
							[
								15985,
								15990
							],
							[
								16042,
								16047
							],
							[
								16071,
								16075
							],
							[
								16117,
								16121
							],
							[
								16153,
								16157
							],
							[
								16181,
								16205
							],
							[
								16249,
								16265
							],
							[
								16269,
								16293
							],
							[
								16313,
								16317
							],
							[
								16332,
								16336
							],
							[
								16360,
								16365
							],
							[
								16796,
								16811
							],
							[
								16851,
								16865
							],
							[
								16892,
								16903
							],
							[
								16907,
								16931
							],
							[
								16971,
								16988
							],
							[
								17022,
								17049
							],
							[
								17062,
								17089
							],
							[
								17122,
								17139
							],
							[
								17578,
								17589
							],
							[
								17593,
								17618
							],
							[
								17637,
								17656
							],
							[
								17659,
								17663
							],
							[
								17683,
								17697
							],
							[
								17726,
								17730
							],
							[
								17737,
								17747
							],
							[
								17886,
								17899
							],
							[
								17907,
								17911
							],
							[
								17915,
								17939
							],
							[
								18095,
								18108
							],
							[
								18147,
								18171
							],
							[
								18177,
								18188
							],
							[
								18215,
								18226
							],
							[
								18252,
								18261
							],
							[
								18285,
								18309
							],
							[
								18333,
								18337
							],
							[
								18351,
								18362
							],
							[
								18392,
								18405
							],
							[
								18427,
								18451
							],
							[
								18484,
								18508
							],
							[
								18545,
								18569
							],
							[
								18961,
								18966
							],
							[
								18983,
								19004
							],
							[
								19024,
								19032
							],
							[
								19049,
								19070
							],
							[
								19096,
								19102
							],
							[
								19119,
								19140
							],
							[
								19153,
								19164
							],
							[
								19342,
								19353
							],
							[
								19407,
								19421
							],
							[
								19440,
								19455
							],
							[
								19462,
								19472
							],
							[
								19483,
								19493
							],
							[
								19521,
								19531
							],
							[
								19542,
								19556
							],
							[
								19572,
								19587
							],
							[
								19603,
								19615
							],
							[
								19637,
								19652
							],
							[
								19663,
								19681
							],
							[
								19692,
								19705
							],
							[
								19720,
								19732
							],
							[
								19766,
								19777
							],
							[
								19831,
								19838
							],
							[
								19841,
								19855
							],
							[
								19861,
								19871
							],
							[
								19872,
								19880
							],
							[
								19907,
								19917
							],
							[
								19925,
								19941
							],
							[
								19953,
								19963
							],
							[
								19970,
								19977
							],
							[
								20004,
								20015
							],
							[
								20048,
								20063
							],
							[
								20086,
								20100
							],
							[
								20131,
								20145
							],
							[
								20149,
								20166
							],
							[
								20261,
								20277
							],
							[
								20284,
								20300
							],
							[
								20340,
								20355
							],
							[
								20374,
								20383
							],
							[
								20432,
								20441
							],
							[
								20472,
								20483
							],
							[
								20594,
								20609
							],
							[
								20625,
								20649
							],
							[
								20672,
								20692
							],
							[
								20695,
								20719
							],
							[
								20738,
								20758
							],
							[
								20784,
								20804
							],
							[
								20877,
								20896
							],
							[
								20900,
								20920
							],
							[
								20949,
								20968
							],
							[
								20986,
								21010
							],
							[
								21032,
								21044
							],
							[
								21103,
								21118
							],
							[
								21303,
								21318
							],
							[
								21359,
								21373
							],
							[
								21414,
								21426
							],
							[
								21477,
								21493
							],
							[
								21550,
								21555
							],
							[
								21591,
								21602
							],
							[
								21610,
								21632
							],
							[
								21636,
								21658
							],
							[
								21664,
								21675
							],
							[
								21733,
								21744
							],
							[
								21750,
								21761
							],
							[
								21956,
								21978
							],
							[
								21982,
								22001
							],
							[
								22041,
								22063
							],
							[
								22067,
								22086
							],
							[
								22164,
								22188
							],
							[
								22192,
								22211
							],
							[
								22251,
								22261
							],
							[
								22265,
								22281
							],
							[
								22285,
								22300
							],
							[
								22338,
								22348
							],
							[
								22352,
								22356
							],
							[
								22360,
								22369
							],
							[
								22450,
								22465
							],
							[
								22496,
								22518
							],
							[
								22536,
								22547
							],
							[
								22659,
								22674
							],
							[
								22851,
								22871
							],
							[
								22925,
								22945
							],
							[
								23000,
								23020
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIBMAGIC_LIBRARY_DIR",
							"old_REQUIRED_INCLUDES",
							"CMAKE_REQUIRED_INCLUDES",
							"LIBMAGIC_INCLUDE_DIR",
							"CMAKE_REQUIRED_INCLUDES",
							"old_REQUIRED_INCLUDES",
							"LIBMAGIC_LIBRARY",
							"magic_LIBRARIES",
							"LIBMAGIC_LIBRARY",
							"magic_MODULE",
							"magic_MODULE",
							"LIBMAGIC_DB",
							"magic_MODULE",
							"LIBMARIADB_LIBRARY",
							"pkgcfg_lib_MARIADB_mariadb",
							"LIBMARIADB_LIBRARY_DIR",
							"LIBMARIADB_LIBRARY",
							"mysql_LIBRARIES",
							"LIBMARIADB_LIBRARY",
							"LIBMARIADB_INCLUDE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBPQ_LIBRARY",
							"pkgcfg_lib_LIBPQ_pq",
							"LIBPQ_LIBRARY_DIR",
							"LIBPQ_LIBRARY",
							"pgsql_LIBRARIES",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_INCLUDE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"LIBPQ_LIBRARY",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"deep_LIBRARIES",
							"xml_LIBRARIES",
							"path_SOURCES",
							"path_SOURCES",
							"lexer_LIBRARIES",
							"CMAKE_SYSTEM_NAME",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"HAVE_INET_PTON",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"gpio_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBSERIALPORT_LIBRARY",
							"LIBSERIALPORT_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"serial_DEPS",
							"serial_LIBRARIES",
							"LIBSERIALPORT_LIBRARY",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"QUICKJS_LIBRARY",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSM",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QJSM_LIBDIR",
							"LIBSERIALPORT_LIBRARY_DIR",
							"predicate_LIBRARIES",
							"LIBM",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM",
							"TEST_SOURCE",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIBLEXER",
							"QUICKJS_JS_MODULE_DIR",
							"LIBXML",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"COMMON_MODULES",
							"console_MODULES",
							"db_MODULES",
							"fs_MODULES",
							"io_MODULES",
							"parser_MODULES",
							"process_MODULES",
							"repl_MODULES",
							"require_MODULES",
							"perf_hooks_MODULES",
							"stack_MODULES",
							"util_MODULES",
							"LIB_MODULES",
							"MODLIST",
							"COMMON_MODULES",
							"LIB_MODULE",
							"_MODULES",
							"LIB_MODULE",
							"CMAKE_BINARY_DIR",
							"LIB_MODULE",
							"MODLIST",
							"LIB_MODULES",
							"LIBRARY_SOURCES",
							"tutf8e_SOURCES",
							"libutf_SOURCES",
							"libbcrypt_SOURCES",
							"COMPILED_MODULES",
							"COMMON_LIBRARIES",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"NATIVE_BUILTINS",
							"NATIVE_BUILTINS",
							"NATIVE_BUILTIN",
							"QJSM_SOURCES",
							"COMPILED_TARGETS",
							"LIBDL",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"QJSM_LDADD",
							"COMMON_LIBRARIES",
							"QUICKJS_LIBRARY",
							"LIBPTHREAD",
							"LIBM",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"LIBMAGIC_DB",
							"INSTALL_SCRIPTS",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX"
						]
					},
					"AQAAAAAAAAAAAAAAPRMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					3,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA9EwAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKTElCTUFHSUNfTElCUkFSWV9ESVIKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfSU5DTFVERV9ESVIKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfTElCUkFSWQogIG1hZ2ljX0xJQlJBUklFUwpMSUJNQUdJQ19MSUJSQVJZCiAgbWFnaWNfTU9EVUxFCiAgbWFnaWNfTU9EVUxFCkxJQk1BR0lDX0RCCiAgbWFnaWNfTU9EVUxFCkxJQk1BUklBREJfTElCUkFSWQogIHBrZ2NmZ19saWJfTUFSSUFEQl9tYXJpYWRiCkxJQk1BUklBREJfTElCUkFSWV9ESVIKTElCTUFSSUFEQl9MSUJSQVJZCiAgbXlzcWxfTElCUkFSSUVTCkxJQk1BUklBREJfTElCUkFSWQpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9MSUJQUV9wcQpMSUJQUV9MSUJSQVJZX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGdzcWxfTElCUkFSSUVTCkxJQlBRX0xJQlJBUlkKTElCUFFfTElCUkFSWQpMSUJQUV9MSUJSQVJZCkxJQlBRX0xJQlJBUlkKTElCUFFfSU5DTFVERV9ESVIKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTElCUFFfTElCUkFSWQpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19ICkNPTU1PTl9IRUFERVJTCkNVVElMU19IClFVSUNLSlNfSAogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIHhtbF9MSUJSQVJJRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKQ01BS0VfU1lTVEVNX05BTUUKICBzb2NrZXRzX0xJQlJBUklFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwpIQVZFX0lORVRfUFRPTgogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIGdwaW9fU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCiAgYXJjaGl2ZV9MSUJSQVJJRVMKTGliQXJjaGl2ZV9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJTRVJJQUxQT1JUX0xJQlJBUlkKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKICBzZXJpYWxfREVQUwogIHNlcmlhbF9MSUJSQVJJRVMKTElCU0VSSUFMUE9SVF9MSUJSQVJZClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpRVUlDS0pTX0xJQlJBUlkKUVVJQ0tKU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU00KVEVTVApURVNUUwpRVUlDS0pTX01PRFVMRVMKU0hBUkVEX1RBUkdFVFMKUUpTTV9MSUJESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1NZU1RFTV9OQU1FCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1BSRUZJWApDTUFLRV9JTVBPUlRfTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKUUpTTV9MSUJESVIKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgogIHByZWRpY2F0ZV9MSUJSQVJJRVMKTElCTQogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTElCSlMKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQkxFWEVSClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJYTUwKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkNPTU1PTl9NT0RVTEVTCiAgY29uc29sZV9NT0RVTEVTCiAgZGJfTU9EVUxFUwogIGZzX01PRFVMRVMKICBpb19NT0RVTEVTCiAgcGFyc2VyX01PRFVMRVMKICBwcm9jZXNzX01PRFVMRVMKICByZXBsX01PRFVMRVMKICByZXF1aXJlX01PRFVMRVMKICBwZXJmX2hvb2tzX01PRFVMRVMKICBzdGFja19NT0RVTEVTCiAgdXRpbF9NT0RVTEVTCkxJQl9NT0RVTEVTCk1PRExJU1QKQ09NTU9OX01PRFVMRVMKTElCX01PRFVMRQogIF9NT0RVTEVTCkxJQl9NT0RVTEUKQ01BS0VfQklOQVJZX0RJUgpMSUJfTU9EVUxFCk1PRExJU1QKTElCX01PRFVMRVMKTElCUkFSWV9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIGxpYmJjcnlwdF9TT1VSQ0VTCkNPTVBJTEVEX01PRFVMRVMKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpOQVRJVkVfQlVJTFRJTlMKTkFUSVZFX0JVSUxUSU5TCk5BVElWRV9CVUlMVElOClFKU01fU09VUkNFUwpDT01QSUxFRF9UQVJHRVRTCkxJQkRMClFKU01fTElCRElSCkNNQUtFX0VYRV9MSU5LRVJfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpRSlNNX0xJQkRJUgpMSU5LX0VYUE9SVApRSlNNX0xJQkRJUgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSClFKU01fTERBREQKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX0xJQlJBUlkKTElCUFRIUkVBRApMSUJNCkxJQldTMl8zMgpRVUlDS0pTX1ZFUlNJT04KUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApMSUJNQUdJQ19EQgpJTlNUQUxMX1NDUklQVFMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
						"symkeys":
						[
							[
								6,
								19
							],
							[
								658,
								676
							],
							[
								703,
								721
							],
							[
								951,
								977
							],
							[
								1008,
								1033
							],
							[
								1046,
								1071
							],
							[
								1113,
								1139
							],
							[
								1217,
								1237
							],
							[
								1352,
								1371
							],
							[
								1435,
								1454
							],
							[
								1578,
								1593
							],
							[
								1632,
								1651
							],
							[
								1670,
								1694
							],
							[
								1721,
								1745
							],
							[
								1802,
								1817
							],
							[
								1890,
								1905
							],
							[
								1995,
								2012
							],
							[
								2053,
								2070
							],
							[
								2095,
								2113
							],
							[
								2172,
								2188
							],
							[
								2229,
								2248
							],
							[
								2283,
								2298
							],
							[
								2339,
								2358
							],
							[
								2404,
								2428
							],
							[
								2471,
								2492
							],
							[
								2610,
								2618
							],
							[
								2671,
								2700
							],
							[
								2745,
								2768
							],
							[
								2819,
								2848
							],
							[
								2901,
								2932
							],
							[
								2974,
								2994
							],
							[
								3114,
								3133
							],
							[
								3213,
								3232
							],
							[
								3242,
								3246
							],
							[
								3293,
								3312
							],
							[
								3324,
								3337
							],
							[
								3393,
								3412
							],
							[
								3430,
								3443
							],
							[
								3455,
								3465
							],
							[
								3507,
								3517
							],
							[
								3891,
								3906
							],
							[
								3969,
								3984
							],
							[
								4024,
								4039
							],
							[
								4043,
								4062
							],
							[
								4089,
								4104
							],
							[
								4135,
								4145
							],
							[
								4168,
								4188
							],
							[
								4257,
								4277
							],
							[
								4317,
								4337
							],
							[
								4341,
								4360
							],
							[
								4387,
								4407
							],
							[
								4493,
								4503
							],
							[
								4527,
								4549
							],
							[
								4622,
								4644
							],
							[
								4684,
								4706
							],
							[
								4710,
								4729
							],
							[
								4756,
								4778
							],
							[
								4866,
								4876
							],
							[
								4902,
								4919
							],
							[
								4923,
								4938
							],
							[
								4942,
								4964
							],
							[
								4968,
								4988
							],
							[
								5044,
								5063
							],
							[
								5067,
								5077
							],
							[
								5132,
								5151
							],
							[
								5155,
								5165
							],
							[
								5262,
								5279
							],
							[
								5330,
								5349
							],
							[
								5400,
								5419
							]
						],
						"symlist":
						[
							"build_mbedtls",
							"MBEDTLS_BUILD_TYPE",
							"MBEDTLS_BUILD_TYPE",
							"MBEDTLS_PREINCLUDE_C_FLAGS",
							"MBEDTLS_PREINCLUDE_PREFIX",
							"MBEDTLS_PREINCLUDE_HEADER",
							"MBEDTLS_PREINCLUDE_C_FLAGS",
							"ARM_CPU_ARCHITECTURE",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_VERSION",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"MBEDTLS_VERSION",
							"MBEDTLS_VERSION",
							"CMAKE_MODULE_PATH",
							"CMAKE_SYSTEM_NAME",
							"MBEDTLS_BUILD_TYPE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_COMPILER_ID",
							"MBEDTLS_C_FLAGS",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_MINSIZEREL",
							"CMAKE_C_FLAGS_RELEASE",
							"CMAKE_AR",
							"CMAKE_C_CREATE_STATIC_LIBRARY",
							"CMAKE_C_LINK_EXECUTABLE",
							"CMAKE_STATIC_LIBRARY_PREFIX_C",
							"CMAKE_STATIC_LIBRARY_PREFIX_CXX",
							"CMAKE_INSTALL_PREFIX",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_TARGET_NAME",
							"ARGN",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_COMMAND",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_COMMAND",
							"BINARY_DIR",
							"BINARY_DIR",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_X509_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_CRYPTO_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_LIBRARY_DIR",
							"BINARY_DIR",
							"MBEDTLS_INCLUDE_DIR",
							"SOURCE_DIR",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_LIBRARY_DIR",
							"MBEDTLS_INCLUDE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAAICBidWlsZF9tYmVkdGxzCk1CRURUTFNfQlVJTERfVFlQRQpNQkVEVExTX0JVSUxEX1RZUEUKTUJFRFRMU19QUkVJTkNMVURFX0NfRkxBR1MKTUJFRFRMU19QUkVJTkNMVURFX1BSRUZJWApNQkVEVExTX1BSRUlOQ0xVREVfSEVBREVSCk1CRURUTFNfUFJFSU5DTFVERV9DX0ZMQUdTCkFSTV9DUFVfQVJDSElURUNUVVJFCk1CRURUTFNfVEFSR0VUX05BTUUKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX1ZFUlNJT04KTUJFRFRMU19UQVJHRVRfTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk1CRURUTFNfVkVSU0lPTgpNQkVEVExTX1ZFUlNJT04KQ01BS0VfTU9EVUxFX1BBVEgKQ01BS0VfU1lTVEVNX05BTUUKTUJFRFRMU19CVUlMRF9UWVBFCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfQ19DT01QSUxFUl9JRApNQkVEVExTX0NfRkxBR1MKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX01JTlNJWkVSRUwKQ01BS0VfQ19GTEFHU19SRUxFQVNFCkNNQUtFX0FSCkNNQUtFX0NfQ1JFQVRFX1NUQVRJQ19MSUJSQVJZCkNNQUtFX0NfTElOS19FWEVDVVRBQkxFCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1BSRUZJWF9DCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1BSRUZJWF9DWFgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX1RBUkdFVF9OQU1FCkFSR04KTUJFRFRMU19UQVJHRVRfTkFNRQpDTUFLRV9DT01NQU5ECk1CRURUTFNfVEFSR0VUX05BTUUKQ01BS0VfQ09NTUFORApCSU5BUllfRElSCkJJTkFSWV9ESVIKTUJFRFRMU19MSUJSQVJZCk1CRURUTFNfTElCUkFSWQpNQkVEVExTX0xJQlJBUlkKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX0xJQlJBUlkKQklOQVJZX0RJUgpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1RBUkdFVF9OQU1FCk1CRURUTFNfWDUwOV9MSUJSQVJZCkJJTkFSWV9ESVIKTUJFRFRMU19DUllQVE9fTElCUkFSWQpNQkVEVExTX0NSWVBUT19MSUJSQVJZCk1CRURUTFNfQ1JZUFRPX0xJQlJBUlkKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX0NSWVBUT19MSUJSQVJZCkJJTkFSWV9ESVIKTUJFRFRMU19MSUJSQVJJRVMKTUJFRFRMU19MSUJSQVJZCk1CRURUTFNfQ1JZUFRPX0xJQlJBUlkKTUJFRFRMU19YNTA5X0xJQlJBUlkKTUJFRFRMU19MSUJSQVJZX0RJUgpCSU5BUllfRElSCk1CRURUTFNfSU5DTFVERV9ESVIKU09VUkNFX0RJUgpNQkVEVExTX0xJQlJBUklFUwpNQkVEVExTX0xJQlJBUllfRElSCk1CRURUTFNfSU5DTFVERV9ESVIAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								152,
								158
							],
							[
								182,
								188
							],
							[
								312,
								318
							],
							[
								458,
								474
							],
							[
								519,
								550
							],
							[
								582,
								598
							],
							[
								642,
								655
							],
							[
								659,
								679
							],
							[
								790,
								805
							],
							[
								838,
								862
							],
							[
								1254,
								1264
							],
							[
								1352,
								1362
							],
							[
								1398,
								1414
							],
							[
								1417,
								1427
							],
							[
								1487,
								1503
							],
							[
								1506,
								1516
							],
							[
								1572,
								1584
							]
						],
						"symlist":
						[
							"build_glfw",
							"SOURCE",
							"BINARY",
							"SOURCE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GLFW_INCLUDE_DIR",
							"SOURCE_DIR",
							"GLFW_LIBRARY_DIR",
							"BINARY_DIR",
							"GLFW_LIBRARY"
						]
					},
					"AQAAAAAAAAAAAAAACgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								152,
								158
							],
							[
								182,
								188
							],
							[
								312,
								318
							],
							[
								458,
								474
							],
							[
								519,
								550
							],
							[
								582,
								598
							],
							[
								642,
								655
							],
							[
								659,
								679
							],
							[
								790,
								805
							],
							[
								838,
								862
							],
							[
								1254,
								1264
							],
							[
								1352,
								1362
							],
							[
								1398,
								1414
							],
							[
								1417,
								1427
							],
							[
								1487,
								1503
							],
							[
								1506,
								1516
							],
							[
								1572,
								1584
							]
						],
						"symlist":
						[
							"build_glfw",
							"SOURCE",
							"BINARY",
							"SOURCE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GLFW_INCLUDE_DIR",
							"SOURCE_DIR",
							"GLFW_LIBRARY_DIR",
							"BINARY_DIR",
							"GLFW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAKAQAAICBidWlsZF9nbGZ3ClNPVVJDRQpCSU5BUlkKU09VUkNFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX0NfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfR0VORVJBVE9SCkNNQUtFX0dFTkVSQVRPUl9QTEFURk9STQpCSU5BUllfRElSCkJJTkFSWV9ESVIKR0xGV19JTkNMVURFX0RJUgpTT1VSQ0VfRElSCkdMRldfTElCUkFSWV9ESVIKQklOQVJZX0RJUgpHTEZXX0xJQlJBUlkAAAAAAAAAAAoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAKAQAAICBidWlsZF9nbGZ3ClNPVVJDRQpCSU5BUlkKU09VUkNFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX0NfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfR0VORVJBVE9SCkNNQUtFX0dFTkVSQVRPUl9QTEFURk9STQpCSU5BUllfRElSCkJJTkFSWV9ESVIKR0xGV19JTkNMVURFX0RJUgpTT1VSQ0VfRElSCkdMRldfTElCUkFSWV9ESVIKQklOQVJZX0RJUgpHTEZXX0xJQlJBUlkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-client.js",
						"symkeys":
						[
							[
								1213,
								1222
							],
							[
								1238,
								1254
							],
							[
								1450,
								1459
							],
							[
								1528,
								1535
							],
							[
								1600,
								1607
							],
							[
								1885,
								1890
							],
							[
								2081,
								2092
							],
							[
								2228,
								2233
							],
							[
								2677,
								2729
							],
							[
								3107,
								3143
							],
							[
								3232,
								3248
							],
							[
								3406,
								3418
							],
							[
								3709,
								3727
							],
							[
								3794,
								3815
							],
							[
								4090,
								4098
							],
							[
								4664,
								4699
							],
							[
								4805,
								4834
							],
							[
								4890,
								4915
							],
							[
								4966,
								5024
							],
							[
								5804,
								5840
							],
							[
								5977,
								5996
							],
							[
								6452,
								6463
							],
							[
								7623,
								7660
							],
							[
								7769,
								7777
							],
							[
								7876,
								7884
							],
							[
								9376,
								9399
							],
							[
								9586,
								9614
							],
							[
								9935,
								9965
							],
							[
								10035,
								10066
							],
							[
								10372,
								10395
							],
							[
								10458,
								10482
							],
							[
								10546,
								10567
							],
							[
								10628,
								10653
							],
							[
								10693,
								10715
							],
							[
								10777,
								10812
							],
							[
								10868,
								10895
							],
							[
								11194,
								11234
							],
							[
								11369,
								11389
							],
							[
								11684,
								11703
							]
						],
						"symlist":
						[
							"WebSocket",
							"sendMessage(msg)",
							"source =>",
							"line =>",
							"line =>",
							" e =>",
							"async () =>",
							" e =>",
							"SourceLine = ({ lineno, text, active, children }) =>",
							"SourceText = ({ text, filename }) =>",
							"numDigits = n =>",
							"(line, i) =>",
							"([type, token]) =>",
							"SourceFile = props =>",
							" resp =>",
							"async function LoadSource(filename)",
							"function Start(args, address)",
							"function Connect(address)",
							"function Initiate(command, address, connect = false, args)",
							"function* TokenizeJS(data, filename)",
							"(acc, [type, c]) =>",
							"(acc, l) =>",
							"async function CreateSocket(endpoint)",
							"onOpen()",
							"get ws()",
							"async process(callback)",
							".sendMessage = function(msg)",
							"function GetVariables(ref = 0)",
							"async function UpdatePosition()",
							"async function StepIn()",
							"async function StepOut()",
							"async function Next()",
							"async function Continue()",
							"async function Pause()",
							"async function Evaluate(expression)",
							"async function StackTrace()",
							"function SendRequest(command, args = {})",
							"(resolve, reject) =>",
							"function RenderUI()"
						]
					},
					"AQAAAAAAAAAAAAAAtQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAC1AgAAV2ViU29ja2V0CiAgc2VuZE1lc3NhZ2UobXNnKQogIHNvdXJjZSA9PgogIGxpbmUgPT4KICBsaW5lID0+CmUgPT4KKCkgPT4KZSA9PgpTb3VyY2VMaW5lID0gKHsgbGluZW5vLCB0ZXh0LCBhY3RpdmUsIGNoaWxkcmVuIH0pID0+ClNvdXJjZVRleHQgPSAoeyB0ZXh0LCBmaWxlbmFtZSB9KSA9PgogIG51bURpZ2l0cyA9IG4gPT4KKGxpbmUsIGkpID0+CihbdHlwZSwgdG9rZW5dKSA9PgpTb3VyY2VGaWxlID0gcHJvcHMgPT4KcmVzcCA9PgpMb2FkU291cmNlKGZpbGVuYW1lKQpTdGFydChhcmdzLCBhZGRyZXNzKQpDb25uZWN0KGFkZHJlc3MpCkluaXRpYXRlKGNvbW1hbmQsIGFkZHJlc3MsIGNvbm5lY3QgPSBmYWxzZSwgYXJncykKVG9rZW5pemVKUyhkYXRhLCBmaWxlbmFtZSkKKGFjYywgW3R5cGUsIGNdKSA9PgooYWNjLCBsKSA9PgpDcmVhdGVTb2NrZXQoZW5kcG9pbnQpCiAgb25PcGVuKCkKICBnZXQgd3MoKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24obXNnKQpHZXRWYXJpYWJsZXMocmVmID0gMCkKVXBkYXRlUG9zaXRpb24oKQpTdGVwSW4oKQpTdGVwT3V0KCkKTmV4dCgpCkNvbnRpbnVlKCkKUGF1c2UoKQpFdmFsdWF0ZShleHByZXNzaW9uKQpTdGFja1RyYWNlKCkKU2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9KQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpSZW5kZXJVSSgpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					3,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								24,
								34
							],
							[
								232,
								256
							],
							[
								288,
								297
							],
							[
								348,
								357
							],
							[
								451,
								475
							],
							[
								507,
								516
							],
							[
								657,
								681
							],
							[
								1210,
								1222
							],
							[
								1245,
								1261
							],
							[
								1265,
								1289
							],
							[
								1308,
								1324
							],
							[
								1328,
								1352
							],
							[
								1390,
								1414
							]
						],
						"symlist":
						[
							"build_curl",
							"BUILD_CURL",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CURL_REPO",
							"CURL_REPO",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CURL_REPO",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CURL_LIBRARY",
							"CURL_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CURL_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR"
						]
					},
					"AQAAAAAAAAAAAAAA+gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD6AAAAICBidWlsZF9jdXJsCkJVSUxEX0NVUkwKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNVUkxfUkVQTwpDVVJMX1JFUE8KQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNVUkxfUkVQTwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ1VSTF9MSUJSQVJZCkNVUkxfTElCUkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNVUkxfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								79,
								103
							],
							[
								219,
								243
							],
							[
								341,
								365
							],
							[
								391,
								415
							],
							[
								520,
								544
							],
							[
								691,
								707
							],
							[
								752,
								783
							],
							[
								815,
								831
							],
							[
								860,
								873
							],
							[
								877,
								897
							],
							[
								1026,
								1041
							],
							[
								1076,
								1100
							],
							[
								1459,
								1469
							],
							[
								1563,
								1573
							],
							[
								1711,
								1727
							],
							[
								1731,
								1741
							],
							[
								1806,
								1822
							],
							[
								1826,
								1836
							],
							[
								1893,
								1905
							],
							[
								1980,
								1996
							],
							[
								2017,
								2041
							]
						],
						"symlist":
						[
							"build_gl3w",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GL3W_INCLUDE_DIR",
							"BINARY_DIR",
							"GL3W_LIBRARY_DIR",
							"BINARY_DIR",
							"GL3W_LIBRARY",
							"GL3W_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAnAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACcAQAAICBidWlsZF9nbDN3CkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfQ19GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9HRU5FUkFUT1IKQ01BS0VfR0VORVJBVE9SX1BMQVRGT1JNCkJJTkFSWV9ESVIKQklOQVJZX0RJUgpHTDNXX0lOQ0xVREVfRElSCkJJTkFSWV9ESVIKR0wzV19MSUJSQVJZX0RJUgpCSU5BUllfRElSCkdMM1dfTElCUkFSWQpHTDNXX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								79,
								103
							],
							[
								219,
								243
							],
							[
								341,
								365
							],
							[
								391,
								415
							],
							[
								520,
								544
							],
							[
								691,
								707
							],
							[
								752,
								783
							],
							[
								815,
								831
							],
							[
								860,
								873
							],
							[
								877,
								897
							],
							[
								1026,
								1041
							],
							[
								1076,
								1100
							],
							[
								1459,
								1469
							],
							[
								1563,
								1573
							],
							[
								1711,
								1727
							],
							[
								1731,
								1741
							],
							[
								1806,
								1822
							],
							[
								1826,
								1836
							],
							[
								1893,
								1905
							],
							[
								1980,
								1996
							],
							[
								2017,
								2041
							]
						],
						"symlist":
						[
							"build_gl3w",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GL3W_INCLUDE_DIR",
							"BINARY_DIR",
							"GL3W_LIBRARY_DIR",
							"BINARY_DIR",
							"GL3W_LIBRARY",
							"GL3W_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAnAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACcAQAAICBidWlsZF9nbDN3CkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfQ19GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9HRU5FUkFUT1IKQ01BS0VfR0VORVJBVE9SX1BMQVRGT1JNCkJJTkFSWV9ESVIKQklOQVJZX0RJUgpHTDNXX0lOQ0xVREVfRElSCkJJTkFSWV9ESVIKR0wzV19MSUJSQVJZX0RJUgpCSU5BUllfRElSCkdMM1dfTElCUkFSWQpHTDNXX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								152,
								158
							],
							[
								182,
								188
							],
							[
								312,
								318
							],
							[
								458,
								474
							],
							[
								519,
								550
							],
							[
								582,
								598
							],
							[
								642,
								655
							],
							[
								659,
								679
							],
							[
								790,
								805
							],
							[
								838,
								862
							],
							[
								1254,
								1264
							],
							[
								1352,
								1362
							],
							[
								1398,
								1414
							],
							[
								1417,
								1427
							],
							[
								1487,
								1503
							],
							[
								1506,
								1516
							],
							[
								1572,
								1584
							]
						],
						"symlist":
						[
							"build_glfw",
							"SOURCE",
							"BINARY",
							"SOURCE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GLFW_INCLUDE_DIR",
							"SOURCE_DIR",
							"GLFW_LIBRARY_DIR",
							"BINARY_DIR",
							"GLFW_LIBRARY"
						]
					},
					"AQAAAAAAAAAAAAAACgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAKAQAAICBidWlsZF9nbGZ3ClNPVVJDRQpCSU5BUlkKU09VUkNFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX0NfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfR0VORVJBVE9SCkNNQUtFX0dFTkVSQVRPUl9QTEFURk9STQpCSU5BUllfRElSCkJJTkFSWV9ESVIKR0xGV19JTkNMVURFX0RJUgpTT1VSQ0VfRElSCkdMRldfTElCUkFSWV9ESVIKQklOQVJZX0RJUgpHTEZXX0xJQlJBUlkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt",
						"symkeys":
						[
							[
								326,
								350
							],
							[
								385,
								409
							],
							[
								824,
								848
							],
							[
								876,
								900
							],
							[
								1011,
								1027
							],
							[
								1150,
								1166
							],
							[
								1204,
								1222
							],
							[
								1255,
								1268
							],
							[
								1272,
								1292
							],
							[
								1327,
								1342
							],
							[
								1346,
								1366
							],
							[
								1400,
								1415
							],
							[
								1419,
								1439
							],
							[
								1597,
								1616
							],
							[
								1620,
								1630
							],
							[
								1670,
								1689
							],
							[
								1761,
								1785
							],
							[
								1822,
								1846
							],
							[
								1880,
								1905
							],
							[
								1912,
								1931
							],
							[
								1943,
								1962
							],
							[
								1997,
								2015
							],
							[
								2022,
								2041
							],
							[
								2069,
								2088
							],
							[
								2123,
								2142
							],
							[
								2271,
								2296
							]
						],
						"symlist":
						[
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_C_COMPILER",
							"CMAKE_CXX_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CXX_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CXX_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"LABSOUND_BINARY_DIR",
							"BINARY_DIR",
							"LABSOUND_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"labsound_LINK_DIRECTORIES",
							"LABSOUND_BINARY_DIR",
							"LABSOUND_BINARY_DIR",
							"labsound_LIBRARIES",
							"LABSOUND_BINARY_DIR",
							"LABSOUND_BINARY_DIR",
							"LABSOUND_BINARY_DIR",
							"labsound_LINK_DIRECTORIES"
						]
					},
					"AQAAAAAAAAAAAAAAGwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAbAgAAQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ19DT01QSUxFUgpDTUFLRV9DWFhfQ09NUElMRVIKQ01BS0VfQ19GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DWFhfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfQ1hYX0ZMQUdTCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkxBQlNPVU5EX0JJTkFSWV9ESVIKQklOQVJZX0RJUgpMQUJTT1VORF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKICBsYWJzb3VuZF9MSU5LX0RJUkVDVE9SSUVTCkxBQlNPVU5EX0JJTkFSWV9ESVIKTEFCU09VTkRfQklOQVJZX0RJUgogIGxhYnNvdW5kX0xJQlJBUklFUwpMQUJTT1VORF9CSU5BUllfRElSCkxBQlNPVU5EX0JJTkFSWV9ESVIKTEFCU09VTkRfQklOQVJZX0RJUgogIGxhYnNvdW5kX0xJTktfRElSRUNUT1JJRVMAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
						"symkeys":
						[
							[
								35,
								54
							],
							[
								253,
								273
							],
							[
								286,
								309
							],
							[
								322,
								343
							],
							[
								356,
								379
							],
							[
								392,
								417
							],
							[
								465,
								480
							],
							[
								539,
								554
							],
							[
								691,
								716
							],
							[
								778,
								803
							],
							[
								827,
								852
							],
							[
								864,
								889
							],
							[
								951,
								975
							],
							[
								1078,
								1103
							],
							[
								1137,
								1161
							],
							[
								1187,
								1211
							],
							[
								1233,
								1257
							],
							[
								1289,
								1308
							],
							[
								1414,
								1428
							],
							[
								1457,
								1480
							],
							[
								1504,
								1518
							],
							[
								1554,
								1577
							],
							[
								1581,
								1598
							],
							[
								1602,
								1625
							],
							[
								1691,
								1714
							],
							[
								1718,
								1735
							],
							[
								1739,
								1762
							],
							[
								1829,
								1847
							],
							[
								1988,
								2006
							],
							[
								2009,
								2027
							],
							[
								2090,
								2110
							],
							[
								2176,
								2194
							],
							[
								2206,
								2224
							],
							[
								2259,
								2276
							],
							[
								2307,
								2324
							],
							[
								2390,
								2408
							],
							[
								2420,
								2438
							],
							[
								2473,
								2488
							],
							[
								2519,
								2534
							],
							[
								2602,
								2620
							],
							[
								2632,
								2650
							],
							[
								2682,
								2701
							],
							[
								2732,
								2751
							],
							[
								2786,
								2805
							],
							[
								2877,
								2895
							],
							[
								2907,
								2925
							],
							[
								2957,
								2976
							],
							[
								3014,
								3033
							],
							[
								3071,
								3090
							],
							[
								3124,
								3143
							],
							[
								3177,
								3196
							],
							[
								3269,
								3287
							],
							[
								3299,
								3317
							],
							[
								3349,
								3369
							],
							[
								3407,
								3427
							],
							[
								3465,
								3484
							],
							[
								3518,
								3538
							],
							[
								3572,
								3591
							],
							[
								3663,
								3681
							],
							[
								3693,
								3711
							],
							[
								3745,
								3763
							],
							[
								3816,
								3839
							],
							[
								3861,
								3884
							],
							[
								3910,
								3933
							],
							[
								3948,
								3971
							],
							[
								4011,
								4034
							],
							[
								4038,
								4061
							],
							[
								4427,
								4450
							],
							[
								4454,
								4477
							],
							[
								4527,
								4552
							],
							[
								4556,
								4581
							],
							[
								4642,
								4667
							],
							[
								4670,
								4694
							],
							[
								4899,
								4917
							],
							[
								5303,
								5314
							],
							[
								5367,
								5381
							],
							[
								5414,
								5428
							],
							[
								5449,
								5460
							],
							[
								5619,
								5645
							],
							[
								5718,
								5739
							],
							[
								5754,
								5771
							],
							[
								5774,
								5791
							],
							[
								5795,
								5821
							],
							[
								5989,
								6007
							],
							[
								6020,
								6038
							],
							[
								6073,
								6090
							],
							[
								6138,
								6157
							],
							[
								6218,
								6236
							],
							[
								6353,
								6371
							],
							[
								6495,
								6513
							],
							[
								6528,
								6546
							],
							[
								6581,
								6598
							],
							[
								6648,
								6667
							],
							[
								6742,
								6760
							],
							[
								6772,
								6790
							],
							[
								6820,
								6840
							],
							[
								6906,
								6924
							],
							[
								6928,
								6946
							],
							[
								6979,
								6995
							],
							[
								7374,
								7410
							],
							[
								7434,
								7470
							],
							[
								7533,
								7569
							],
							[
								8179,
								8197
							],
							[
								8256,
								8260
							],
							[
								8319,
								8337
							],
							[
								8400,
								8424
							],
							[
								8457,
								8481
							],
							[
								8568,
								8584
							],
							[
								8628,
								8649
							],
							[
								8797,
								8819
							],
							[
								8869,
								8888
							],
							[
								8935,
								8951
							],
							[
								8998,
								9016
							],
							[
								11785,
								11795
							],
							[
								14261,
								14279
							],
							[
								14352,
								14372
							],
							[
								14406,
								14422
							],
							[
								14464,
								14488
							],
							[
								15118,
								15122
							]
						],
						"symlist":
						[
							"build_libwebsockets",
							"LWS_WITHOUT_TESTAPPS",
							"LWS_WITHOUT_TEST_SERVER",
							"LWS_WITHOUT_TEST_PING",
							"LWS_WITHOUT_TEST_CLIENT",
							"LWS_LINK_TESTAPPS_DYNAMIC",
							"LWS_WITH_STATIC",
							"LWS_HAVE_LIBCAP",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_FOUND",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"MBEDTLS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_TOOLCHAIN_FILE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY",
							"OPENSSL_LIBRARY",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_EXECUTABLE",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_DIR",
							"WOLFSSL_CONFIG",
							"WOLFSSL_CONFIG",
							"WOLFSSL_DIR",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"WOLFSSL_LIBRARIES_DIR",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_LIBRARIES",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_LIBRARY_RELEASE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_INCLUDE_DIR",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LIBWEBSOCKETS_ARGS",
							"ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"LIBWEBSOCKETS_C_FLAGS",
							"CMAKE_VERBOSE_MAKEFILE",
							"MBEDTLS_LIBRARY_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_LIBRARY_PATH",
							"WITH_HTTP2",
							"LIBWEBSOCKETS_ARGS",
							"LWS_WITH_PLUGINS_API",
							"LWS_WITH_PLUGINS",
							"LWS_WITH_PLUGINS_BUILTIN",
							"ARGN"
						]
					},
					"AQAAAAAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAICBidWlsZF9saWJ3ZWJzb2NrZXRzCkxXU19XSVRIT1VUX1RFU1RBUFBTCkxXU19XSVRIT1VUX1RFU1RfU0VSVkVSCkxXU19XSVRIT1VUX1RFU1RfUElORwpMV1NfV0lUSE9VVF9URVNUX0NMSUVOVApMV1NfTElOS19URVNUQVBQU19EWU5BTUlDCkxXU19XSVRIX1NUQVRJQwpMV1NfSEFWRV9MSUJDQVAKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0ZPVU5ECkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk9QRU5TU0xfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk1CRURUTFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJJRVMKT1BFTlNTTF9MSUJSQVJJRVMKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0xJQlJBUlkKT1BFTlNTTF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJZX0RJUgpPUEVOU1NMX0xJQlJBUllfRElSCk9QRU5TU0xfTElCUkFSWV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKT1BFTlNTTF9JTkNMVURFX0RJUgpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVJTCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0VYRUNVVEFCTEUKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkxJQldFQlNPQ0tFVFNfQVJHUwpXT0xGU1NMX0RJUgpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0RJUgogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCldPTEZTU0xfTElCUkFSSUVTX0RJUgpXT0xGU1NMX0xJQlJBUklFUwpXT0xGU1NMX0xJQlJBUklFUwogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKV09MRlNTTF9MSUJSQVJJRVMKV09MRlNTTF9JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTUJFRFRMU19MSUJSQVJJRVMKTUJFRFRMU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTClpMSUJfTElCUkFSWV9SRUxFQVNFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKWkxJQl9JTkNMVURFX0RJUgpMV1NfSEFWRV9YNTA5X1ZFUklGWV9QQVJBTV9zZXQxX2hvc3QKTFdTX0hBVkVfWDUwOV9WRVJJRllfUEFSQU1fc2V0MV9ob3N0CkxXU19IQVZFX1g1MDlfVkVSSUZZX1BBUkFNX3NldDFfaG9zdApMSUJXRUJTT0NLRVRTX0FSR1MKQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkxJQldFQlNPQ0tFVFNfQ19GTEFHUwpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCk1CRURUTFNfTElCUkFSWV9ESVIKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9MSUJSQVJZX1BBVEgKV0lUSF9IVFRQMgpMSUJXRUJTT0NLRVRTX0FSR1MKTFdTX1dJVEhfUExVR0lOU19BUEkKTFdTX1dJVEhfUExVR0lOUwpMV1NfV0lUSF9QTFVHSU5TX0JVSUxUSU4KQVJHTgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
						"symkeys":
						[
							[
								35,
								54
							],
							[
								253,
								273
							],
							[
								286,
								309
							],
							[
								322,
								343
							],
							[
								356,
								379
							],
							[
								392,
								417
							],
							[
								465,
								480
							],
							[
								539,
								554
							],
							[
								691,
								716
							],
							[
								778,
								803
							],
							[
								827,
								852
							],
							[
								864,
								889
							],
							[
								951,
								975
							],
							[
								1078,
								1103
							],
							[
								1137,
								1161
							],
							[
								1187,
								1211
							],
							[
								1233,
								1257
							],
							[
								1289,
								1308
							],
							[
								1414,
								1428
							],
							[
								1457,
								1480
							],
							[
								1504,
								1518
							],
							[
								1554,
								1577
							],
							[
								1581,
								1598
							],
							[
								1602,
								1625
							],
							[
								1691,
								1714
							],
							[
								1718,
								1735
							],
							[
								1739,
								1762
							],
							[
								1829,
								1847
							],
							[
								1988,
								2006
							],
							[
								2009,
								2027
							],
							[
								2090,
								2110
							],
							[
								2176,
								2194
							],
							[
								2206,
								2224
							],
							[
								2259,
								2276
							],
							[
								2307,
								2324
							],
							[
								2390,
								2408
							],
							[
								2420,
								2438
							],
							[
								2473,
								2488
							],
							[
								2519,
								2534
							],
							[
								2602,
								2620
							],
							[
								2632,
								2650
							],
							[
								2682,
								2701
							],
							[
								2732,
								2751
							],
							[
								2786,
								2805
							],
							[
								2877,
								2895
							],
							[
								2907,
								2925
							],
							[
								2957,
								2976
							],
							[
								3014,
								3033
							],
							[
								3071,
								3090
							],
							[
								3124,
								3143
							],
							[
								3177,
								3196
							],
							[
								3269,
								3287
							],
							[
								3299,
								3317
							],
							[
								3349,
								3369
							],
							[
								3407,
								3427
							],
							[
								3465,
								3484
							],
							[
								3518,
								3538
							],
							[
								3572,
								3591
							],
							[
								3663,
								3681
							],
							[
								3693,
								3711
							],
							[
								3745,
								3763
							],
							[
								3816,
								3839
							],
							[
								3861,
								3884
							],
							[
								3910,
								3933
							],
							[
								3948,
								3971
							],
							[
								4011,
								4034
							],
							[
								4038,
								4061
							],
							[
								4427,
								4450
							],
							[
								4454,
								4477
							],
							[
								4527,
								4552
							],
							[
								4556,
								4581
							],
							[
								4642,
								4667
							],
							[
								4670,
								4694
							],
							[
								4899,
								4917
							],
							[
								5303,
								5314
							],
							[
								5367,
								5381
							],
							[
								5414,
								5428
							],
							[
								5449,
								5460
							],
							[
								5619,
								5645
							],
							[
								5718,
								5739
							],
							[
								5754,
								5771
							],
							[
								5774,
								5791
							],
							[
								5795,
								5821
							],
							[
								5989,
								6007
							],
							[
								6020,
								6038
							],
							[
								6073,
								6090
							],
							[
								6138,
								6157
							],
							[
								6218,
								6236
							],
							[
								6353,
								6371
							],
							[
								6495,
								6513
							],
							[
								6528,
								6546
							],
							[
								6581,
								6598
							],
							[
								6648,
								6667
							],
							[
								6742,
								6760
							],
							[
								6772,
								6790
							],
							[
								6820,
								6840
							],
							[
								6906,
								6924
							],
							[
								6928,
								6946
							],
							[
								6979,
								6995
							],
							[
								7374,
								7410
							],
							[
								7434,
								7470
							],
							[
								7533,
								7569
							],
							[
								8179,
								8197
							],
							[
								8256,
								8260
							],
							[
								8319,
								8337
							],
							[
								8400,
								8424
							],
							[
								8457,
								8481
							],
							[
								8568,
								8584
							],
							[
								8628,
								8649
							],
							[
								8797,
								8819
							],
							[
								8869,
								8888
							],
							[
								8935,
								8951
							],
							[
								8998,
								9016
							],
							[
								11785,
								11795
							],
							[
								14261,
								14279
							],
							[
								14352,
								14372
							],
							[
								14406,
								14422
							],
							[
								14464,
								14488
							],
							[
								15118,
								15122
							]
						],
						"symlist":
						[
							"build_libwebsockets",
							"LWS_WITHOUT_TESTAPPS",
							"LWS_WITHOUT_TEST_SERVER",
							"LWS_WITHOUT_TEST_PING",
							"LWS_WITHOUT_TEST_CLIENT",
							"LWS_LINK_TESTAPPS_DYNAMIC",
							"LWS_WITH_STATIC",
							"LWS_HAVE_LIBCAP",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_FOUND",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"MBEDTLS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_TOOLCHAIN_FILE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY",
							"OPENSSL_LIBRARY",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_EXECUTABLE",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_DIR",
							"WOLFSSL_CONFIG",
							"WOLFSSL_CONFIG",
							"WOLFSSL_DIR",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"WOLFSSL_LIBRARIES_DIR",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_LIBRARIES",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_LIBRARY_RELEASE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_INCLUDE_DIR",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LIBWEBSOCKETS_ARGS",
							"ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"LIBWEBSOCKETS_C_FLAGS",
							"CMAKE_VERBOSE_MAKEFILE",
							"MBEDTLS_LIBRARY_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_LIBRARY_PATH",
							"WITH_HTTP2",
							"LIBWEBSOCKETS_ARGS",
							"LWS_WITH_PLUGINS_API",
							"LWS_WITH_PLUGINS",
							"LWS_WITH_PLUGINS_BUILTIN",
							"ARGN"
						]
					},
					"AQAAAAAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					32,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAACmCQAAICBidWlsZF9saWJ3ZWJzb2NrZXRzCkxXU19XSVRIT1VUX1RFU1RBUFBTCkxXU19XSVRIT1VUX1RFU1RfU0VSVkVSCkxXU19XSVRIT1VUX1RFU1RfUElORwpMV1NfV0lUSE9VVF9URVNUX0NMSUVOVApMV1NfTElOS19URVNUQVBQU19EWU5BTUlDCkxXU19XSVRIX1NUQVRJQwpMV1NfSEFWRV9MSUJDQVAKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0ZPVU5ECkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk9QRU5TU0xfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk1CRURUTFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJJRVMKT1BFTlNTTF9MSUJSQVJJRVMKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0xJQlJBUlkKT1BFTlNTTF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJZX0RJUgpPUEVOU1NMX0xJQlJBUllfRElSCk9QRU5TU0xfTElCUkFSWV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKT1BFTlNTTF9JTkNMVURFX0RJUgpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVJTCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0VYRUNVVEFCTEUKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkxJQldFQlNPQ0tFVFNfQVJHUwpXT0xGU1NMX0RJUgpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0RJUgogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCldPTEZTU0xfTElCUkFSSUVTX0RJUgpXT0xGU1NMX0xJQlJBUklFUwpXT0xGU1NMX0xJQlJBUklFUwogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKV09MRlNTTF9MSUJSQVJJRVMKV09MRlNTTF9JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTUJFRFRMU19MSUJSQVJJRVMKTUJFRFRMU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTClpMSUJfTElCUkFSWV9SRUxFQVNFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKWkxJQl9JTkNMVURFX0RJUgpMV1NfSEFWRV9YNTA5X1ZFUklGWV9QQVJBTV9zZXQxX2hvc3QKTFdTX0hBVkVfWDUwOV9WRVJJRllfUEFSQU1fc2V0MV9ob3N0CkxXU19IQVZFX1g1MDlfVkVSSUZZX1BBUkFNX3NldDFfaG9zdApMSUJXRUJTT0NLRVRTX0FSR1MKQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkxJQldFQlNPQ0tFVFNfQ19GTEFHUwpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCk1CRURUTFNfTElCUkFSWV9ESVIKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9MSUJSQVJZX1BBVEgKV0lUSF9IVFRQMgpMSUJXRUJTT0NLRVRTX0FSR1MKTFdTX1dJVEhfUExVR0lOU19BUEkKTFdTX1dJVEhfUExVR0lOUwpMV1NfV0lUSF9QTFVHSU5TX0JVSUxUSU4KQVJHTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
						"symkeys":
						[
							[
								35,
								54
							],
							[
								253,
								273
							],
							[
								286,
								309
							],
							[
								322,
								343
							],
							[
								356,
								379
							],
							[
								392,
								417
							],
							[
								465,
								480
							],
							[
								539,
								554
							],
							[
								691,
								716
							],
							[
								778,
								803
							],
							[
								827,
								852
							],
							[
								864,
								889
							],
							[
								951,
								975
							],
							[
								1078,
								1103
							],
							[
								1137,
								1161
							],
							[
								1187,
								1211
							],
							[
								1233,
								1257
							],
							[
								1289,
								1308
							],
							[
								1414,
								1428
							],
							[
								1457,
								1480
							],
							[
								1504,
								1518
							],
							[
								1554,
								1577
							],
							[
								1581,
								1598
							],
							[
								1602,
								1625
							],
							[
								1691,
								1714
							],
							[
								1718,
								1735
							],
							[
								1739,
								1762
							],
							[
								1829,
								1847
							],
							[
								1988,
								2006
							],
							[
								2009,
								2027
							],
							[
								2090,
								2110
							],
							[
								2176,
								2194
							],
							[
								2206,
								2224
							],
							[
								2259,
								2276
							],
							[
								2307,
								2324
							],
							[
								2390,
								2408
							],
							[
								2420,
								2438
							],
							[
								2473,
								2488
							],
							[
								2519,
								2534
							],
							[
								2602,
								2620
							],
							[
								2632,
								2650
							],
							[
								2682,
								2701
							],
							[
								2732,
								2751
							],
							[
								2786,
								2805
							],
							[
								2877,
								2895
							],
							[
								2907,
								2925
							],
							[
								2957,
								2976
							],
							[
								3014,
								3033
							],
							[
								3071,
								3090
							],
							[
								3124,
								3143
							],
							[
								3177,
								3196
							],
							[
								3269,
								3287
							],
							[
								3299,
								3317
							],
							[
								3349,
								3369
							],
							[
								3407,
								3427
							],
							[
								3465,
								3484
							],
							[
								3518,
								3538
							],
							[
								3572,
								3591
							],
							[
								3663,
								3681
							],
							[
								3693,
								3711
							],
							[
								3745,
								3763
							],
							[
								3816,
								3839
							],
							[
								3861,
								3884
							],
							[
								3910,
								3933
							],
							[
								3948,
								3971
							],
							[
								4011,
								4034
							],
							[
								4038,
								4061
							],
							[
								4427,
								4450
							],
							[
								4454,
								4477
							],
							[
								4527,
								4552
							],
							[
								4556,
								4581
							],
							[
								4642,
								4667
							],
							[
								4670,
								4694
							],
							[
								4899,
								4917
							],
							[
								5303,
								5314
							],
							[
								5367,
								5381
							],
							[
								5414,
								5428
							],
							[
								5449,
								5460
							],
							[
								5619,
								5645
							],
							[
								5718,
								5739
							],
							[
								5754,
								5771
							],
							[
								5774,
								5791
							],
							[
								5795,
								5821
							],
							[
								5989,
								6007
							],
							[
								6020,
								6038
							],
							[
								6073,
								6090
							],
							[
								6138,
								6157
							],
							[
								6218,
								6236
							],
							[
								6353,
								6371
							],
							[
								6495,
								6513
							],
							[
								6528,
								6546
							],
							[
								6581,
								6598
							],
							[
								6648,
								6667
							],
							[
								6742,
								6760
							],
							[
								6772,
								6790
							],
							[
								6820,
								6840
							],
							[
								6906,
								6924
							],
							[
								6928,
								6946
							],
							[
								6979,
								6995
							],
							[
								7374,
								7410
							],
							[
								7434,
								7470
							],
							[
								7533,
								7569
							],
							[
								8179,
								8197
							],
							[
								8256,
								8260
							],
							[
								8319,
								8337
							],
							[
								8400,
								8424
							],
							[
								8457,
								8481
							],
							[
								8568,
								8584
							],
							[
								8628,
								8649
							],
							[
								8797,
								8819
							],
							[
								8869,
								8888
							],
							[
								8935,
								8951
							],
							[
								8998,
								9016
							],
							[
								11785,
								11795
							],
							[
								14261,
								14279
							],
							[
								14352,
								14372
							],
							[
								14406,
								14422
							],
							[
								14464,
								14488
							],
							[
								15118,
								15122
							]
						],
						"symlist":
						[
							"build_libwebsockets",
							"LWS_WITHOUT_TESTAPPS",
							"LWS_WITHOUT_TEST_SERVER",
							"LWS_WITHOUT_TEST_PING",
							"LWS_WITHOUT_TEST_CLIENT",
							"LWS_LINK_TESTAPPS_DYNAMIC",
							"LWS_WITH_STATIC",
							"LWS_HAVE_LIBCAP",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_FOUND",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBCAP_LIBRARY",
							"LIBWEBSOCKETS_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"MBEDTLS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_TOOLCHAIN_FILE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARIES",
							"OPENSSL_LIBRARIES",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY",
							"OPENSSL_LIBRARY",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"OPENSSL_LIBRARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"OPENSSL_INCLUDE_DIRS",
							"OPENSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"OPENSSL_EXECUTABLE",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_LIBRARIES",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_INCLUDE_DIR",
							"LIBWEBSOCKETS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_DIR",
							"WOLFSSL_CONFIG",
							"WOLFSSL_CONFIG",
							"WOLFSSL_DIR",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"WOLFSSL_LIBRARIES_DIR",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_LIBRARIES",
							"pkgcfg_lib_WOLFSSL_wolfssl",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"WOLFSSL_LIBRARIES",
							"WOLFSSL_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_INCLUDE_DIR",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_LIBRARY_RELEASE",
							"LIBWEBSOCKETS_ARGS",
							"LIBWEBSOCKETS_ARGS",
							"ZLIB_INCLUDE_DIR",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LWS_HAVE_X509_VERIFY_PARAM_set1_host",
							"LIBWEBSOCKETS_ARGS",
							"ARGS",
							"LIBWEBSOCKETS_ARGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"LIBWEBSOCKETS_C_FLAGS",
							"CMAKE_VERBOSE_MAKEFILE",
							"MBEDTLS_LIBRARY_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_LIBRARY_PATH",
							"WITH_HTTP2",
							"LIBWEBSOCKETS_ARGS",
							"LWS_WITH_PLUGINS_API",
							"LWS_WITH_PLUGINS",
							"LWS_WITH_PLUGINS_BUILTIN",
							"ARGN"
						]
					},
					"AQAAAAAAAAAAAAAApgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
						"symkeys":
						[
							[
								122,
								138
							],
							[
								624,
								641
							],
							[
								673,
								696
							],
							[
								770,
								787
							],
							[
								825,
								842
							],
							[
								956,
								973
							],
							[
								1025,
								1057
							],
							[
								1360,
								1384
							],
							[
								1419,
								1443
							],
							[
								1480,
								1504
							],
							[
								1542,
								1566
							],
							[
								1605,
								1629
							],
							[
								1779,
								1798
							],
							[
								2016,
								2035
							],
							[
								2136,
								2160
							],
							[
								2201,
								2225
							],
							[
								2272,
								2275
							],
							[
								2279,
								2303
							],
							[
								2366,
								2370
							],
							[
								2374,
								2398
							],
							[
								2549,
								2569
							],
							[
								5085,
								5109
							],
							[
								5113,
								5137
							],
							[
								5169,
								5189
							],
							[
								5211,
								5230
							],
							[
								5238,
								5253
							],
							[
								5829,
								5853
							],
							[
								5885,
								5909
							],
							[
								5984,
								6000
							],
							[
								6035,
								6048
							],
							[
								6094,
								6114
							],
							[
								6194,
								6216
							],
							[
								6256,
								6272
							],
							[
								6365,
								6389
							],
							[
								6625,
								6640
							],
							[
								6651,
								6666
							],
							[
								6808,
								6828
							],
							[
								6852,
								6873
							],
							[
								6877,
								6900
							],
							[
								6974,
								6994
							],
							[
								7077,
								7100
							],
							[
								7104,
								7125
							],
							[
								7214,
								7230
							],
							[
								7278,
								7293
							],
							[
								7296,
								7312
							],
							[
								7323,
								7335
							],
							[
								7390,
								7402
							],
							[
								7488,
								7499
							],
							[
								7606,
								7618
							],
							[
								7754,
								7772
							],
							[
								7776,
								7802
							],
							[
								7970,
								7992
							],
							[
								8047,
								8065
							],
							[
								8249,
								8264
							],
							[
								8267,
								8285
							],
							[
								8297,
								8319
							],
							[
								8323,
								8343
							],
							[
								8431,
								8453
							],
							[
								8484,
								8506
							],
							[
								8587,
								8609
							],
							[
								8641,
								8663
							],
							[
								8667,
								8689
							],
							[
								8771,
								8793
							],
							[
								8862,
								8884
							],
							[
								8916,
								8938
							],
							[
								9087,
								9100
							],
							[
								9104,
								9123
							],
							[
								9276,
								9293
							],
							[
								9350,
								9363
							],
							[
								9534,
								9549
							],
							[
								9552,
								9565
							],
							[
								9579,
								9592
							],
							[
								9680,
								9693
							],
							[
								9709,
								9722
							],
							[
								9752,
								9769
							],
							[
								9773,
								9793
							],
							[
								9818,
								9831
							],
							[
								9873,
								9890
							],
							[
								9924,
								9941
							],
							[
								10023,
								10040
							],
							[
								10078,
								10095
							],
							[
								10099,
								10116
							],
							[
								10166,
								10183
							],
							[
								10187,
								10204
							],
							[
								10302,
								10319
							],
							[
								10394,
								10411
							],
							[
								10443,
								10460
							],
							[
								10599,
								10614
							],
							[
								10617,
								10632
							],
							[
								10717,
								10732
							],
							[
								10735,
								10750
							],
							[
								10845,
								10854
							],
							[
								10864,
								10878
							],
							[
								10881,
								10889
							],
							[
								10893,
								10902
							],
							[
								10976,
								10989
							],
							[
								10992,
								11005
							],
							[
								11107,
								11120
							],
							[
								11123,
								11136
							],
							[
								11180,
								11194
							],
							[
								11273,
								11286
							],
							[
								11339,
								11351
							],
							[
								11354,
								11366
							],
							[
								11411,
								11426
							],
							[
								11466,
								11483
							],
							[
								11510,
								11527
							],
							[
								11550,
								11565
							],
							[
								11568,
								11583
							],
							[
								11615,
								11629
							],
							[
								12231,
								12246
							],
							[
								12249,
								12264
							],
							[
								12338,
								12353
							],
							[
								12356,
								12371
							],
							[
								12743,
								12755
							],
							[
								12917,
								12940
							],
							[
								12944,
								12968
							],
							[
								13007,
								13031
							],
							[
								13053,
								13070
							],
							[
								13073,
								13093
							],
							[
								13206,
								13230
							],
							[
								13263,
								13287
							],
							[
								13361,
								13381
							],
							[
								13421,
								13437
							],
							[
								13510,
								13523
							],
							[
								13567,
								13587
							],
							[
								13629,
								13651
							],
							[
								13689,
								13705
							],
							[
								13853,
								13877
							],
							[
								13901,
								13922
							],
							[
								13941,
								13966
							],
							[
								13969,
								13993
							],
							[
								14117,
								14128
							],
							[
								14148,
								14164
							],
							[
								14167,
								14188
							],
							[
								14212,
								14227
							],
							[
								14230,
								14245
							],
							[
								14306,
								14321
							],
							[
								14324,
								14339
							],
							[
								14355,
								14367
							],
							[
								14370,
								14382
							],
							[
								14590,
								14610
							],
							[
								14903,
								14922
							],
							[
								14950,
								14969
							],
							[
								14973,
								14992
							],
							[
								15051,
								15070
							],
							[
								15181,
								15200
							],
							[
								15230,
								15249
							],
							[
								15253,
								15272
							],
							[
								15333,
								15352
							],
							[
								15472,
								15491
							],
							[
								15523,
								15542
							],
							[
								15546,
								15565
							],
							[
								15628,
								15647
							],
							[
								15772,
								15787
							],
							[
								15828,
								15847
							],
							[
								15956,
								15980
							],
							[
								15985,
								15990
							],
							[
								16042,
								16047
							],
							[
								16071,
								16075
							],
							[
								16117,
								16121
							],
							[
								16153,
								16157
							],
							[
								16181,
								16205
							],
							[
								16249,
								16265
							],
							[
								16269,
								16293
							],
							[
								16313,
								16317
							],
							[
								16332,
								16336
							],
							[
								16360,
								16365
							],
							[
								16796,
								16811
							],
							[
								16851,
								16865
							],
							[
								16892,
								16903
							],
							[
								16907,
								16931
							],
							[
								16971,
								16988
							],
							[
								17022,
								17049
							],
							[
								17062,
								17089
							],
							[
								17122,
								17139
							],
							[
								17578,
								17589
							],
							[
								17593,
								17618
							],
							[
								17637,
								17656
							],
							[
								17659,
								17663
							],
							[
								17683,
								17697
							],
							[
								17726,
								17730
							],
							[
								17737,
								17747
							],
							[
								17886,
								17899
							],
							[
								17907,
								17911
							],
							[
								17915,
								17939
							],
							[
								18095,
								18108
							],
							[
								18147,
								18171
							],
							[
								18177,
								18188
							],
							[
								18215,
								18226
							],
							[
								18252,
								18261
							],
							[
								18285,
								18309
							],
							[
								18333,
								18337
							],
							[
								18351,
								18362
							],
							[
								18392,
								18405
							],
							[
								18427,
								18451
							],
							[
								18484,
								18508
							],
							[
								18545,
								18569
							],
							[
								18961,
								18966
							],
							[
								18983,
								19004
							],
							[
								19024,
								19032
							],
							[
								19049,
								19070
							],
							[
								19096,
								19102
							],
							[
								19119,
								19140
							],
							[
								19153,
								19164
							],
							[
								19342,
								19353
							],
							[
								19407,
								19421
							],
							[
								19440,
								19455
							],
							[
								19462,
								19472
							],
							[
								19483,
								19493
							],
							[
								19521,
								19531
							],
							[
								19542,
								19556
							],
							[
								19572,
								19587
							],
							[
								19603,
								19615
							],
							[
								19637,
								19652
							],
							[
								19663,
								19681
							],
							[
								19692,
								19705
							],
							[
								19720,
								19732
							],
							[
								19766,
								19777
							],
							[
								19831,
								19838
							],
							[
								19841,
								19855
							],
							[
								19861,
								19871
							],
							[
								19872,
								19880
							],
							[
								19907,
								19917
							],
							[
								19925,
								19941
							],
							[
								19953,
								19963
							],
							[
								19970,
								19977
							],
							[
								20004,
								20015
							],
							[
								20048,
								20063
							],
							[
								20086,
								20100
							],
							[
								20131,
								20145
							],
							[
								20149,
								20166
							],
							[
								20261,
								20277
							],
							[
								20284,
								20300
							],
							[
								20340,
								20355
							],
							[
								20374,
								20383
							],
							[
								20432,
								20441
							],
							[
								20472,
								20483
							],
							[
								20594,
								20609
							],
							[
								20625,
								20649
							],
							[
								20672,
								20692
							],
							[
								20695,
								20719
							],
							[
								20738,
								20758
							],
							[
								20784,
								20804
							],
							[
								20877,
								20896
							],
							[
								20900,
								20920
							],
							[
								20949,
								20968
							],
							[
								20986,
								21010
							],
							[
								21032,
								21044
							],
							[
								21103,
								21118
							],
							[
								21303,
								21318
							],
							[
								21359,
								21373
							],
							[
								21414,
								21426
							],
							[
								21477,
								21493
							],
							[
								21550,
								21555
							],
							[
								21591,
								21602
							],
							[
								21610,
								21632
							],
							[
								21636,
								21658
							],
							[
								21664,
								21675
							],
							[
								21733,
								21744
							],
							[
								21750,
								21761
							],
							[
								21956,
								21978
							],
							[
								21982,
								22001
							],
							[
								22041,
								22063
							],
							[
								22067,
								22086
							],
							[
								22164,
								22188
							],
							[
								22192,
								22211
							],
							[
								22251,
								22261
							],
							[
								22265,
								22281
							],
							[
								22285,
								22300
							],
							[
								22338,
								22348
							],
							[
								22352,
								22356
							],
							[
								22360,
								22369
							],
							[
								22450,
								22465
							],
							[
								22496,
								22518
							],
							[
								22536,
								22547
							],
							[
								22659,
								22674
							],
							[
								22851,
								22871
							],
							[
								22925,
								22945
							],
							[
								23000,
								23020
							]
						],
						"symlist":
						[
							"CMAKE_C_STANDARD",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_EXECUTABLE_SUFFIX",
							"BUILD_SHARED_LIBS",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJS",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSC",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIRS",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"LIBMAGIC_LIBRARY_DIR",
							"old_REQUIRED_INCLUDES",
							"CMAKE_REQUIRED_INCLUDES",
							"LIBMAGIC_INCLUDE_DIR",
							"CMAKE_REQUIRED_INCLUDES",
							"old_REQUIRED_INCLUDES",
							"LIBMAGIC_LIBRARY",
							"magic_LIBRARIES",
							"LIBMAGIC_LIBRARY",
							"magic_MODULE",
							"magic_MODULE",
							"LIBMAGIC_DB",
							"magic_MODULE",
							"LIBMARIADB_LIBRARY",
							"pkgcfg_lib_MARIADB_mariadb",
							"LIBMARIADB_LIBRARY_DIR",
							"LIBMARIADB_LIBRARY",
							"mysql_LIBRARIES",
							"LIBMARIADB_LIBRARY",
							"LIBMARIADB_INCLUDE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBMARIADB_INCLUDE_DIR",
							"LIBPQ_LIBRARY",
							"pkgcfg_lib_LIBPQ_pq",
							"LIBPQ_LIBRARY_DIR",
							"LIBPQ_LIBRARY",
							"pgsql_LIBRARIES",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_LIBRARY",
							"LIBPQ_INCLUDE_DIR",
							"CMAKE_INSTALL_PREFIX",
							"LIBPQ_LIBRARY",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"LIBPQ_INCLUDE_DIR",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_H",
							"COMMON_HEADERS",
							"CUTILS_H",
							"QUICKJS_H",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"utils_SOURCES",
							"deep_LIBRARIES",
							"xml_LIBRARIES",
							"path_SOURCES",
							"path_SOURCES",
							"lexer_LIBRARIES",
							"CMAKE_SYSTEM_NAME",
							"sockets_LIBRARIES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"HAVE_INET_PTON",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"sockets_SOURCES",
							"gpio_SOURCES",
							"LibArchive_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"archive_LIBRARIES",
							"LibArchive_LIBRARIES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_C_COMPILER",
							"CMAKE_SYSROOT",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_VERBOSE_MAKEFILE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_CURRENT_BINARY_DIR",
							"LIBSERIALPORT_LIBRARY",
							"LIBSERIALPORT_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"serial_DEPS",
							"serial_LIBRARIES",
							"LIBSERIALPORT_LIBRARY",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"QUICKJS_MODULES",
							"mmap_SOURCES",
							"mmap_SOURCES",
							"CMAKE_REQUIRED_QUIET",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_DEBUG",
							"QUICKJS_LIBRARY",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TESTS",
							"TESTS",
							"TEST",
							"BASE",
							"BASE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QJSM",
							"TEST",
							"TESTS",
							"QUICKJS_MODULES",
							"SHARED_TARGETS",
							"QJSM_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_IMPORT_LIBRARY_PREFIX",
							"CMAKE_IMPORT_LIBRARY_SUFFIX",
							"CMAKE_SYSTEM_NAME",
							"QJSM_LIBDIR",
							"LIBSERIALPORT_LIBRARY_DIR",
							"predicate_LIBRARIES",
							"LIBM",
							"deep_LIBRARIES",
							"LIBM",
							"lexer_DEPS",
							"TESTS_SOURCES",
							"QJSM",
							"CMAKE_CURRENT_BINARY_DIR",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"TEST_SOURCE",
							"TEST_SOURCE",
							"TEST_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM",
							"TEST_SOURCE",
							"TESTS_SOURCES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"LIBJS",
							"QUICKJS_JS_MODULE_DIR",
							"LIBLEXER",
							"QUICKJS_JS_MODULE_DIR",
							"LIBXML",
							"QUICKJS_JS_MODULE_DIR",
							"LIB_MODULES",
							"LIB_MODULES",
							"COMMON_MODULES",
							"console_MODULES",
							"db_MODULES",
							"fs_MODULES",
							"io_MODULES",
							"parser_MODULES",
							"process_MODULES",
							"repl_MODULES",
							"require_MODULES",
							"perf_hooks_MODULES",
							"stack_MODULES",
							"util_MODULES",
							"LIB_MODULES",
							"MODLIST",
							"COMMON_MODULES",
							"LIB_MODULE",
							"_MODULES",
							"LIB_MODULE",
							"CMAKE_BINARY_DIR",
							"LIB_MODULE",
							"MODLIST",
							"LIB_MODULES",
							"LIBRARY_SOURCES",
							"tutf8e_SOURCES",
							"libutf_SOURCES",
							"libbcrypt_SOURCES",
							"COMPILED_MODULES",
							"COMMON_LIBRARIES",
							"QUICKJS_MODULES",
							"JS_MODULE",
							"JS_MODULE",
							"QJSM_MODULE",
							"QUICKJS_MODULES",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"QUICKJS_SOURCES_ROOT",
							"QUICKJS_INCLUDE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QJSM_SOURCES",
							"NATIVE_BUILTINS",
							"NATIVE_BUILTINS",
							"NATIVE_BUILTIN",
							"QJSM_SOURCES",
							"COMPILED_TARGETS",
							"LIBDL",
							"QJSM_LIBDIR",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"QJSM_LIBDIR",
							"LINK_EXPORT",
							"QJSM_LIBDIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"QUICKJS_INSTALL_PREFIX",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"QJSM_LDADD",
							"COMMON_LIBRARIES",
							"QUICKJS_LIBRARY",
							"LIBPTHREAD",
							"LIBM",
							"LIBWS2_32",
							"QUICKJS_VERSION",
							"QUICKJS_INSTALL_PREFIX",
							"LIBMAGIC_DB",
							"INSTALL_SCRIPTS",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX",
							"CMAKE_INSTALL_PREFIX"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACmCQAAICBidWlsZF9saWJ3ZWJzb2NrZXRzCkxXU19XSVRIT1VUX1RFU1RBUFBTCkxXU19XSVRIT1VUX1RFU1RfU0VSVkVSCkxXU19XSVRIT1VUX1RFU1RfUElORwpMV1NfV0lUSE9VVF9URVNUX0NMSUVOVApMV1NfTElOS19URVNUQVBQU19EWU5BTUlDCkxXU19XSVRIX1NUQVRJQwpMV1NfSEFWRV9MSUJDQVAKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJXRUJTT0NLRVRTX0ZPVU5ECkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQkNBUF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk9QRU5TU0xfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCk1CRURUTFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfTElCUkFSSUVTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJJRVMKT1BFTlNTTF9MSUJSQVJJRVMKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0xJQlJBUlkKT1BFTlNTTF9MSUJSQVJZCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKT1BFTlNTTF9MSUJSQVJZX0RJUgpPUEVOU1NMX0xJQlJBUllfRElSCk9QRU5TU0xfTElCUkFSWV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKT1BFTlNTTF9JTkNMVURFX0RJUgpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSUwpPUEVOU1NMX0lOQ0xVREVfRElSCk9QRU5TU0xfSU5DTFVERV9ESVJTCk9QRU5TU0xfSU5DTFVERV9ESVIKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpPUEVOU1NMX0VYRUNVVEFCTEUKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19MSUJSQVJJRVMKTElCV0VCU09DS0VUU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0lOQ0xVREVfRElSCkxJQldFQlNPQ0tFVFNfTElCUkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkxJQldFQlNPQ0tFVFNfQVJHUwpXT0xGU1NMX0RJUgpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0NPTkZJRwpXT0xGU1NMX0RJUgogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCldPTEZTU0xfTElCUkFSSUVTX0RJUgpXT0xGU1NMX0xJQlJBUklFUwpXT0xGU1NMX0xJQlJBUklFUwogIHBrZ2NmZ19saWJfV09MRlNTTF93b2xmc3NsCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKV09MRlNTTF9MSUJSQVJJRVMKV09MRlNTTF9JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKTUJFRFRMU19MSUJSQVJJRVMKTUJFRFRMU19JTkNMVURFX0RJUgpMSUJXRUJTT0NLRVRTX0FSR1MKTElCV0VCU09DS0VUU19BUkdTClpMSUJfTElCUkFSWV9SRUxFQVNFCkxJQldFQlNPQ0tFVFNfQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKWkxJQl9JTkNMVURFX0RJUgpMV1NfSEFWRV9YNTA5X1ZFUklGWV9QQVJBTV9zZXQxX2hvc3QKTFdTX0hBVkVfWDUwOV9WRVJJRllfUEFSQU1fc2V0MV9ob3N0CkxXU19IQVZFX1g1MDlfVkVSSUZZX1BBUkFNX3NldDFfaG9zdApMSUJXRUJTT0NLRVRTX0FSR1MKQVJHUwpMSUJXRUJTT0NLRVRTX0FSR1MKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DX0NPTVBJTEVSCkxJQldFQlNPQ0tFVFNfQ19GTEFHUwpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCk1CRURUTFNfTElCUkFSWV9ESVIKQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9MSUJSQVJZX1BBVEgKV0lUSF9IVFRQMgpMSUJXRUJTT0NLRVRTX0FSR1MKTFdTX1dJVEhfUExVR0lOU19BUEkKTFdTX1dJVEhfUExVR0lOUwpMV1NfV0lUSF9QTFVHSU5TX0JVSUxUSU4KQVJHTgAAAAAAAAAAPRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
						"symkeys":
						[
							[
								6,
								16
							],
							[
								152,
								158
							],
							[
								182,
								188
							],
							[
								312,
								318
							],
							[
								458,
								474
							],
							[
								519,
								550
							],
							[
								582,
								598
							],
							[
								642,
								655
							],
							[
								659,
								679
							],
							[
								790,
								805
							],
							[
								838,
								862
							],
							[
								1254,
								1264
							],
							[
								1352,
								1362
							],
							[
								1398,
								1414
							],
							[
								1417,
								1427
							],
							[
								1487,
								1503
							],
							[
								1506,
								1516
							],
							[
								1572,
								1584
							]
						],
						"symlist":
						[
							"build_glfw",
							"SOURCE",
							"BINARY",
							"SOURCE",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"GLFW_INCLUDE_DIR",
							"SOURCE_DIR",
							"GLFW_LIBRARY_DIR",
							"BINARY_DIR",
							"GLFW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA9EwAAQ01BS0VfQ19TVEFOREFSRApDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9FWEVDVVRBQkxFX1NVRkZJWApCVUlMRF9TSEFSRURfTElCUwpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9XSU5ET1dTX0VYUE9SVF9BTExfU1lNQk9MUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKUwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKUUpTQwpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfUkVRVUlSRURfUVVJRVQKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSUwpRVUlDS0pTX0xJQlJBUllfRElSClFVSUNLSlNfTU9EVUxFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfU1lTUk9PVApDTUFLRV9UT09MQ0hBSU5fRklMRQpDTUFLRV9WRVJCT1NFX01BS0VGSUxFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKTElCTUFHSUNfTElCUkFSWV9ESVIKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfSU5DTFVERV9ESVIKQ01BS0VfUkVRVUlSRURfSU5DTFVERVMKICBvbGRfUkVRVUlSRURfSU5DTFVERVMKTElCTUFHSUNfTElCUkFSWQogIG1hZ2ljX0xJQlJBUklFUwpMSUJNQUdJQ19MSUJSQVJZCiAgbWFnaWNfTU9EVUxFCiAgbWFnaWNfTU9EVUxFCkxJQk1BR0lDX0RCCiAgbWFnaWNfTU9EVUxFCkxJQk1BUklBREJfTElCUkFSWQogIHBrZ2NmZ19saWJfTUFSSUFEQl9tYXJpYWRiCkxJQk1BUklBREJfTElCUkFSWV9ESVIKTElCTUFSSUFEQl9MSUJSQVJZCiAgbXlzcWxfTElCUkFSSUVTCkxJQk1BUklBREJfTElCUkFSWQpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkNNQUtFX0lOU1RBTExfUFJFRklYCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJNQVJJQURCX0lOQ0xVREVfRElSCkxJQk1BUklBREJfSU5DTFVERV9ESVIKTElCTUFSSUFEQl9JTkNMVURFX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGtnY2ZnX2xpYl9MSUJQUV9wcQpMSUJQUV9MSUJSQVJZX0RJUgpMSUJQUV9MSUJSQVJZCiAgcGdzcWxfTElCUkFSSUVTCkxJQlBRX0xJQlJBUlkKTElCUFFfTElCUkFSWQpMSUJQUV9MSUJSQVJZCkxJQlBRX0xJQlJBUlkKTElCUFFfSU5DTFVERV9ESVIKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTElCUFFfTElCUkFSWQpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpMSUJQUV9JTkNMVURFX0RJUgpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19ICkNPTU1PTl9IRUFERVJTCkNVVElMU19IClFVSUNLSlNfSAogIHV0aWxzX1NPVVJDRVMKICB1dGlsc19TT1VSQ0VTCiAgdXRpbHNfU09VUkNFUwogIHV0aWxzX1NPVVJDRVMKICBkZWVwX0xJQlJBUklFUwogIHhtbF9MSUJSQVJJRVMKICBwYXRoX1NPVVJDRVMKICBwYXRoX1NPVVJDRVMKICBsZXhlcl9MSUJSQVJJRVMKQ01BS0VfU1lTVEVNX05BTUUKICBzb2NrZXRzX0xJQlJBUklFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwpIQVZFX0lORVRfUFRPTgogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIHNvY2tldHNfU09VUkNFUwogIGdwaW9fU09VUkNFUwpMaWJBcmNoaXZlX0lOQ0xVREVfRElSUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCiAgYXJjaGl2ZV9MSUJSQVJJRVMKTGliQXJjaGl2ZV9MSUJSQVJJRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX1NZU1JPT1QKQ01BS0VfVE9PTENIQUlOX0ZJTEUKQ01BS0VfVkVSQk9TRV9NQUtFRklMRQpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpMSUJTRVJJQUxQT1JUX0xJQlJBUlkKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKICBzZXJpYWxfREVQUwogIHNlcmlhbF9MSUJSQVJJRVMKTElCU0VSSUFMUE9SVF9MSUJSQVJZClFVSUNLSlNfTU9EVUxFUwpRVUlDS0pTX01PRFVMRVMKUVVJQ0tKU19NT0RVTEVTClFVSUNLSlNfTU9EVUxFUwogIG1tYXBfU09VUkNFUwogIG1tYXBfU09VUkNFUwpDTUFLRV9SRVFVSVJFRF9RVUlFVApDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX0RFQlVHCkNNQUtFX0NfRkxBR1NfREVCVUcKQ01BS0VfQ19GTEFHU19ERUJVRwpRVUlDS0pTX0xJQlJBUlkKUVVJQ0tKU19JTkNMVURFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVFMKVEVTVFMKVEVTVApCQVNFCkJBU0UKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0JJTkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSClFKU00KVEVTVApURVNUUwpRVUlDS0pTX01PRFVMRVMKU0hBUkVEX1RBUkdFVFMKUUpTTV9MSUJESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX1NZU1RFTV9OQU1FCkNNQUtFX0lNUE9SVF9MSUJSQVJZX1BSRUZJWApDTUFLRV9JTVBPUlRfTElCUkFSWV9TVUZGSVgKQ01BS0VfU1lTVEVNX05BTUUKUUpTTV9MSUJESVIKTElCU0VSSUFMUE9SVF9MSUJSQVJZX0RJUgogIHByZWRpY2F0ZV9MSUJSQVJJRVMKTElCTQogIGRlZXBfTElCUkFSSUVTCkxJQk0KICBsZXhlcl9ERVBTClRFU1RTX1NPVVJDRVMKUUpTTQpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKVEVTVFNfU09VUkNFUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKVEVTVF9TT1VSQ0UKVEVTVF9TT1VSQ0UKVEVTVF9OQU1FCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRSlNNClRFU1RfU09VUkNFClRFU1RTX1NPVVJDRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTElCSlMKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQkxFWEVSClFVSUNLSlNfSlNfTU9EVUxFX0RJUgpMSUJYTUwKUVVJQ0tKU19KU19NT0RVTEVfRElSCkxJQl9NT0RVTEVTCkxJQl9NT0RVTEVTCkNPTU1PTl9NT0RVTEVTCiAgY29uc29sZV9NT0RVTEVTCiAgZGJfTU9EVUxFUwogIGZzX01PRFVMRVMKICBpb19NT0RVTEVTCiAgcGFyc2VyX01PRFVMRVMKICBwcm9jZXNzX01PRFVMRVMKICByZXBsX01PRFVMRVMKICByZXF1aXJlX01PRFVMRVMKICBwZXJmX2hvb2tzX01PRFVMRVMKICBzdGFja19NT0RVTEVTCiAgdXRpbF9NT0RVTEVTCkxJQl9NT0RVTEVTCk1PRExJU1QKQ09NTU9OX01PRFVMRVMKTElCX01PRFVMRQogIF9NT0RVTEVTCkxJQl9NT0RVTEUKQ01BS0VfQklOQVJZX0RJUgpMSUJfTU9EVUxFCk1PRExJU1QKTElCX01PRFVMRVMKTElCUkFSWV9TT1VSQ0VTCiAgdHV0ZjhlX1NPVVJDRVMKICBsaWJ1dGZfU09VUkNFUwogIGxpYmJjcnlwdF9TT1VSQ0VTCkNPTVBJTEVEX01PRFVMRVMKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX01PRFVMRVMKSlNfTU9EVUxFCkpTX01PRFVMRQpRSlNNX01PRFVMRQpRVUlDS0pTX01PRFVMRVMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfU09VUkNFU19ST09UCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX1NPVVJDRVNfUk9PVApRVUlDS0pTX0lOQ0xVREVfRElSClFVSUNLSlNfU09VUkNFU19ST09UClFVSUNLSlNfSU5DTFVERV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFKU01fU09VUkNFUwpOQVRJVkVfQlVJTFRJTlMKTkFUSVZFX0JVSUxUSU5TCk5BVElWRV9CVUlMVElOClFKU01fU09VUkNFUwpDT01QSUxFRF9UQVJHRVRTCkxJQkRMClFKU01fTElCRElSCkNNQUtFX0VYRV9MSU5LRVJfRkxBR1MKQ01BS0VfRVhFX0xJTktFUl9GTEFHUwpRSlNNX0xJQkRJUgpMSU5LX0VYUE9SVApRSlNNX0xJQkRJUgpRVUlDS0pTX0lOU1RBTExfUFJFRklYClFVSUNLSlNfTElCUkFSWV9ESVIKUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSClFKU01fTERBREQKQ09NTU9OX0xJQlJBUklFUwpRVUlDS0pTX0xJQlJBUlkKTElCUFRIUkVBRApMSUJNCkxJQldTMl8zMgpRVUlDS0pTX1ZFUlNJT04KUVVJQ0tKU19JTlNUQUxMX1BSRUZJWApMSUJNQUdJQ19EQgpJTlNUQUxMX1NDUklQVFMKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgAAAAAAAAAAAoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					37,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAKAQAAICBidWlsZF9nbGZ3ClNPVVJDRQpCSU5BUlkKU09VUkNFCkNNQUtFX0JVSUxEX1RZUEUKQ01BS0VfUE9TSVRJT05fSU5ERVBFTkRFTlRfQ09ERQpDTUFLRV9DX0NPTVBJTEVSCkNNQUtFX0NfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfR0VORVJBVE9SCkNNQUtFX0dFTkVSQVRPUl9QTEFURk9STQpCSU5BUllfRElSCkJJTkFSWV9ESVIKR0xGV19JTkNMVURFX0RJUgpTT1VSQ0VfRElSCkdMRldfTElCUkFSWV9ESVIKQklOQVJZX0RJUgpHTEZXX0xJQlJBUlkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
						"symkeys":
						[
							[
								119,
								135
							],
							[
								299,
								306
							],
							[
								342,
								360
							],
							[
								364,
								371
							],
							[
								379,
								400
							],
							[
								412,
								432
							],
							[
								457,
								490
							],
							[
								494,
								501
							],
							[
								505,
								520
							],
							[
								528,
								537
							],
							[
								547,
								554
							],
							[
								567,
								578
							],
							[
								648,
								659
							],
							[
								696,
								713
							],
							[
								716,
								733
							],
							[
								738,
								756
							],
							[
								808,
								828
							],
							[
								950,
								974
							],
							[
								992,
								1006
							],
							[
								1133,
								1157
							],
							[
								1296,
								1320
							],
							[
								1489,
								1497
							],
							[
								1508,
								1522
							],
							[
								1525,
								1533
							],
							[
								1537,
								1545
							],
							[
								1549,
								1557
							],
							[
								1592,
								1606
							],
							[
								1623,
								1636
							],
							[
								1646,
								1659
							],
							[
								1705,
								1715
							],
							[
								1751,
								1762
							],
							[
								1779,
								1790
							],
							[
								1801,
								1812
							],
							[
								1816,
								1826
							],
							[
								1858,
								1869
							],
							[
								1925,
								1936
							],
							[
								1953,
								1975
							],
							[
								2034,
								2045
							],
							[
								2107,
								2127
							],
							[
								2168,
								2179
							],
							[
								2201,
								2213
							]
						],
						"symlist":
						[
							"CMAKE_BUILD_TYPE",
							"PACKAGE",
							"CPACK_PACKAGE_NAME",
							"PACKAGE",
							"CPACK_PACKAGE_VERSION",
							"CPACK_PACKAGE_VENDOR",
							"CPACK_PACKAGE_DESCRIPTION_SUMMARY",
							"PACKAGE",
							"PACKAGE_VERSION",
							"SOVERSION",
							"VERSION",
							"PLUGIN_NAME",
							"PLUGIN_SRCS",
							"CMAKE_MODULE_PATH",
							"CMAKE_MODULE_PATH",
							"PROJECT_SOURCE_DIR",
							"CMAKE_TOOLCHAIN_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GIT_EXECUTABLE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GIT_USER",
							"LWS_BUILD_HASH",
							"GIT_USER",
							"GIT_HOST",
							"GIT_HASH",
							"LWS_BUILD_HASH",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"PLUGIN_HDR",
							"PLUGIN_SRCS",
							"PLUGIN_NAME",
							"PLUGIN_SRCS",
							"PLUGIN_HDR",
							"PLUGIN_NAME",
							"PLUGIN_NAME",
							"LIBWEBSOCKETS_DEP_LIBS",
							"PLUGIN_NAME",
							"CMAKE_INSTALL_PREFIX",
							"PLUGIN_NAME",
							"PLUGINS_LIST"
						]
					},
					"AQAAAAAAAAAAAAAAaQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					40,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABpAgAAQ01BS0VfQlVJTERfVFlQRQpQQUNLQUdFCkNQQUNLX1BBQ0tBR0VfTkFNRQpQQUNLQUdFCkNQQUNLX1BBQ0tBR0VfVkVSU0lPTgpDUEFDS19QQUNLQUdFX1ZFTkRPUgpDUEFDS19QQUNLQUdFX0RFU0NSSVBUSU9OX1NVTU1BUlkKUEFDS0FHRQpQQUNLQUdFX1ZFUlNJT04KU09WRVJTSU9OClZFUlNJT04KUExVR0lOX05BTUUKUExVR0lOX1NSQ1MKQ01BS0VfTU9EVUxFX1BBVEgKQ01BS0VfTU9EVUxFX1BBVEgKUFJPSkVDVF9TT1VSQ0VfRElSCkNNQUtFX1RPT0xDSEFJTl9GSUxFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHSVRfRVhFQ1VUQUJMRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkdJVF9VU0VSCkxXU19CVUlMRF9IQVNICkdJVF9VU0VSCkdJVF9IT1NUCkdJVF9IQVNICkxXU19CVUlMRF9IQVNICkNNQUtFX0NfRkxBR1MKQ01BS0VfQ19GTEFHUwpQTFVHSU5fSERSClBMVUdJTl9TUkNTClBMVUdJTl9OQU1FClBMVUdJTl9TUkNTClBMVUdJTl9IRFIKUExVR0lOX05BTUUKUExVR0lOX05BTUUKTElCV0VCU09DS0VUU19ERVBfTElCUwpQTFVHSU5fTkFNRQpDTUFLRV9JTlNUQUxMX1BSRUZJWApQTFVHSU5fTkFNRQpQTFVHSU5TX0xJU1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
						"symkeys":
						[
							[
								421,
								437
							],
							[
								538,
								554
							],
							[
								1382,
								1401
							],
							[
								1423,
								1442
							],
							[
								1776,
								1786
							],
							[
								1828,
								1839
							],
							[
								1855,
								1863
							],
							[
								1886,
								1891
							],
							[
								1967,
								1975
							],
							[
								2008,
								2013
							],
							[
								2052,
								2057
							],
							[
								2129,
								2137
							],
							[
								2207,
								2215
							],
							[
								2285,
								2293
							],
							[
								2363,
								2371
							],
							[
								2441,
								2449
							],
							[
								2519,
								2527
							],
							[
								2575,
								2583
							],
							[
								2589,
								2595
							],
							[
								2632,
								2637
							],
							[
								2675,
								2682
							],
							[
								2686,
								2694
							],
							[
								2696,
								2708
							],
							[
								2957,
								2977
							],
							[
								2995,
								3014
							],
							[
								3068,
								3083
							],
							[
								3128,
								3143
							],
							[
								3195,
								3210
							],
							[
								3225,
								3239
							],
							[
								3243,
								3263
							],
							[
								3267,
								3287
							],
							[
								3291,
								3311
							],
							[
								3648,
								3669
							],
							[
								3687,
								3707
							],
							[
								3760,
								3776
							],
							[
								3820,
								3836
							],
							[
								3882,
								3898
							],
							[
								3947,
								3965
							],
							[
								3971,
								3985
							],
							[
								4115,
								4128
							],
							[
								4133,
								4146
							],
							[
								4161,
								4177
							],
							[
								4187,
								4202
							],
							[
								4207,
								4222
							],
							[
								4237,
								4253
							],
							[
								4263,
								4285
							],
							[
								4289,
								4311
							],
							[
								4326,
								4342
							],
							[
								4622,
								4634
							],
							[
								4696,
								4709
							],
							[
								4713,
								4737
							],
							[
								4747,
								4771
							],
							[
								4775,
								4799
							],
							[
								4877,
								4889
							],
							[
								5005,
								5029
							],
							[
								5033,
								5046
							],
							[
								5172,
								5191
							],
							[
								5195,
								5219
							],
							[
								5276,
								5297
							],
							[
								5336,
								5352
							],
							[
								5355,
								5376
							],
							[
								5380,
								5392
							],
							[
								5435,
								5463
							],
							[
								5523,
								5546
							],
							[
								5549,
								5577
							],
							[
								5581,
								5593
							],
							[
								5644,
								5661
							],
							[
								5719,
								5736
							],
							[
								5798,
								5815
							],
							[
								5884,
								5906
							],
							[
								5945,
								5955
							],
							[
								6019,
								6023
							],
							[
								6119,
								6123
							],
							[
								6172,
								6176
							],
							[
								6194,
								6205
							],
							[
								6209,
								6213
							],
							[
								6279,
								6303
							],
							[
								6336,
								6360
							],
							[
								6411,
								6429
							],
							[
								6447,
								6465
							],
							[
								6536,
								6551
							],
							[
								6587,
								6599
							],
							[
								6635,
								6647
							],
							[
								6663,
								6681
							],
							[
								6778,
								6793
							],
							[
								6834,
								6846
							],
							[
								6887,
								6899
							],
							[
								6998,
								7017
							],
							[
								7093,
								7096
							],
							[
								7155,
								7158
							],
							[
								7193,
								7196
							],
							[
								7226,
								7229
							],
							[
								7352,
								7355
							],
							[
								7359,
								7371
							],
							[
								7398,
								7401
							],
							[
								7441,
								7460
							],
							[
								7489,
								7492
							],
							[
								7520,
								7544
							],
							[
								7548,
								7562
							],
							[
								7566,
								7585
							],
							[
								7605,
								7629
							],
							[
								7689,
								7692
							],
							[
								7771,
								7774
							],
							[
								7825,
								7844
							],
							[
								8423,
								8442
							],
							[
								8446,
								8465
							],
							[
								8488,
								8504
							],
							[
								8508,
								8524
							],
							[
								8604,
								8616
							],
							[
								8650,
								8673
							],
							[
								8803,
								8823
							],
							[
								8856,
								8877
							],
							[
								8906,
								8926
							],
							[
								8956,
								8976
							],
							[
								9006,
								9026
							],
							[
								9059,
								9087
							],
							[
								9116,
								9136
							],
							[
								9166,
								9186
							],
							[
								9216,
								9236
							],
							[
								9271,
								9290
							],
							[
								9318,
								9342
							],
							[
								9715,
								9735
							],
							[
								9932,
								9948
							],
							[
								10067,
								10081
							],
							[
								10102,
								10126
							],
							[
								10175,
								10191
							],
							[
								10306,
								10320
							],
							[
								10341,
								10365
							],
							[
								10412,
								10428
							],
							[
								10543,
								10557
							],
							[
								10582,
								10606
							],
							[
								10724,
								10740
							],
							[
								10950,
								10966
							],
							[
								11011,
								11016
							],
							[
								11034,
								11045
							],
							[
								11049,
								11073
							],
							[
								11077,
								11088
							],
							[
								11100,
								11110
							],
							[
								11114,
								11138
							],
							[
								11142,
								11147
							],
							[
								11170,
								11180
							],
							[
								11241,
								11259
							],
							[
								11272,
								11277
							],
							[
								11281,
								11288
							],
							[
								11312,
								11325
							],
							[
								11359,
								11373
							],
							[
								11416,
								11440
							],
							[
								11469,
								11480
							],
							[
								11481,
								11487
							],
							[
								11513,
								11520
							],
							[
								11544,
								11554
							],
							[
								11579,
								11590
							],
							[
								11594,
								11601
							],
							[
								11620,
								11644
							],
							[
								11743,
								11748
							],
							[
								11856,
								11880
							],
							[
								11935,
								11955
							],
							[
								11979,
								11997
							],
							[
								12014,
								12019
							],
							[
								12039,
								12052
							],
							[
								12082,
								12096
							],
							[
								12135,
								12159
							],
							[
								12184,
								12195
							],
							[
								12196,
								12202
							],
							[
								12222,
								12246
							],
							[
								12250,
								12255
							],
							[
								12270,
								12294
							],
							[
								12396,
								12420
							],
							[
								12453,
								12457
							],
							[
								12480,
								12489
							],
							[
								12492,
								12496
							],
							[
								12586,
								12592
							],
							[
								12598,
								12602
							],
							[
								12751,
								12756
							],
							[
								12790,
								12795
							],
							[
								12889,
								12895
							],
							[
								12904,
								12908
							],
							[
								13296,
								13300
							],
							[
								13305,
								13317
							],
							[
								13381,
								13385
							],
							[
								13392,
								13404
							],
							[
								13468,
								13472
							],
							[
								13478,
								13490
							],
							[
								13521,
								13527
							],
							[
								13536,
								13540
							],
							[
								13544,
								13550
							],
							[
								13719,
								13725
							],
							[
								13733,
								13739
							],
							[
								13805,
								13822
							],
							[
								13869,
								13879
							],
							[
								13894,
								13900
							],
							[
								13904,
								13924
							],
							[
								13965,
								13971
							],
							[
								13981,
								13985
							],
							[
								14030,
								14036
							],
							[
								14046,
								14050
							],
							[
								14091,
								14116
							],
							[
								14129,
								14135
							],
							[
								14176,
								14182
							],
							[
								14192,
								14196
							],
							[
								14241,
								14270
							],
							[
								14283,
								14289
							],
							[
								14334,
								14344
							],
							[
								14354,
								14358
							],
							[
								14408,
								14415
							],
							[
								14425,
								14429
							],
							[
								14448,
								14459
							],
							[
								14463,
								14467
							],
							[
								14538,
								14562
							],
							[
								14587,
								14601
							],
							[
								14656,
								14680
							],
							[
								14702,
								14716
							],
							[
								14771,
								14795
							],
							[
								14817,
								14831
							],
							[
								14909,
								14933
							],
							[
								14974,
								14994
							],
							[
								15027,
								15051
							],
							[
								15089,
								15109
							],
							[
								15142,
								15166
							],
							[
								15204,
								15224
							]
						],
						"symlist":
						[
							"CMAKE_BUILD_TYPE",
							"CMAKE_BUILD_TYPE",
							"BROTLI_BUNDLED_MODE",
							"BROTLI_BUNDLED_MODE",
							"hex_to_dec",
							"HEXADECIMAL",
							"_decimal",
							"_tail",
							"_decimal",
							"_tail",
							"_tail",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_digit",
							"_tail",
							"DECIMAL",
							"_decimal",
							"PARENT_SCOPE",
							"_brotli_version_line",
							"_brotli_version_hex",
							"_brotli_version",
							"_brotli_version",
							"_brotli_version",
							"BROTLI_VERSION",
							"BROTLI_VERSION_MAJOR",
							"BROTLI_VERSION_MINOR",
							"BROTLI_VERSION_PATCH",
							"_brotli_abi_info_line",
							"_brotli_abi_info_hex",
							"_brotli_abi_info",
							"_brotli_abi_info",
							"_brotli_abi_info",
							"BROTLI_ABI_CURRENT",
							"BROTLI_ABI_AGE",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"ENABLE_SANITIZER",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_FLAGS",
							"ENABLE_SANITIZER",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"ENABLE_SANITIZER",
							"LIBM_LIBRARY",
							"orig_req_libs",
							"CMAKE_REQUIRED_LIBRARIES",
							"CMAKE_REQUIRED_LIBRARIES",
							"CMAKE_REQUIRED_LIBRARIES",
							"LIBM_LIBRARY",
							"CMAKE_REQUIRED_LIBRARIES",
							"orig_req_libs",
							"BROTLI_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BROTLI_LIBRARIES_CORE",
							"BROTLI_LIBRARIES",
							"BROTLI_LIBRARIES_CORE",
							"LIBM_LIBRARY",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"BROTLI_LIBRARIES_STATIC",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"LIBM_LIBRARY",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"transform_sources_list",
							"INPUT_FILE",
							"TEXT",
							"TEXT",
							"TEXT",
							"OUTPUT_FILE",
							"TEXT",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_SHARED_LIBS",
							"BROTLI_SHARED_LIBS",
							"BROTLI_COMMON_C",
							"BROTLI_DEC_C",
							"BROTLI_ENC_C",
							"BROTLI_STATIC_LIBS",
							"BROTLI_COMMON_C",
							"BROTLI_DEC_C",
							"BROTLI_ENC_C",
							"BROTLI_INCLUDE_DIRS",
							"lib",
							"lib",
							"lib",
							"LIB",
							"lib",
							"LIBM_LIBRARY",
							"lib",
							"BROTLI_INCLUDE_DIRS",
							"lib",
							"BROTLI_ABI_COMPATIBILITY",
							"BROTLI_ABI_AGE",
							"BROTLI_ABI_REVISION",
							"BROTLI_ABI_COMPATIBILITY",
							"lib",
							"lib",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_LIBRARIES",
							"BROTLI_LIBRARIES",
							"BROTLI_CLI_C",
							"BROTLI_LIBRARIES_STATIC",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_LIBRARIES_CORE",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_INCLUDE_DIRS",
							"CMAKE_INSTALL_INCLUDEDIR",
							"BROTLI_DISABLE_TESTS",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"ROUNDTRIP_INPUTS",
							"ROUNDTRIP_INPUTS",
							"INPUT",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_NAME",
							"INPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"INPUT_FILE",
							"BROTLI_TEST_PREFIX",
							"INPUT",
							"quality",
							"CMAKE_COMMAND",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"TARGET_FILE",
							"brotli",
							"quality",
							"INPUT_FILE",
							"OUTPUT_FILE",
							"quality",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"COMPATIBILITY_INPUTS",
							"BROTLI_TEST_PREFIX",
							"INPUT",
							"CMAKE_COMMAND",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"TARGET_FILE",
							"brotli",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"generate_pkg_config_path",
							"path",
							"path_args",
							"ARGV",
							"outvar",
							"path",
							"value",
							"value",
							"outvar",
							"name",
							"path",
							"value_length",
							"path",
							"value_length",
							"path",
							"value_length",
							"outvar",
							"name",
							"suffix",
							"outvar",
							"outvar",
							"transform_pc_file",
							"INPUT_FILE",
							"PREFIX",
							"CMAKE_INSTALL_PREFIX",
							"PREFIX",
							"TEXT",
							"PREFIX",
							"TEXT",
							"CMAKE_INSTALL_FULL_LIBDIR",
							"PREFIX",
							"LIBDIR",
							"TEXT",
							"CMAKE_INSTALL_FULL_INCLUDEDIR",
							"PREFIX",
							"INCLUDEDIR",
							"TEXT",
							"VERSION",
							"TEXT",
							"OUTPUT_FILE",
							"TEXT",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR"
						]
					},
					"AQAAAAAAAAAAAAAAPA0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8DQAAQ01BS0VfQlVJTERfVFlQRQpDTUFLRV9CVUlMRF9UWVBFCkJST1RMSV9CVU5ETEVEX01PREUKQlJPVExJX0JVTkRMRURfTU9ERQogIGhleF90b19kZWMKSEVYQURFQ0lNQUwKICBfZGVjaW1hbAogIF90YWlsCiAgX2RlY2ltYWwKICBfdGFpbAogIF90YWlsCiAgX2RlY2ltYWwKICBfZGVjaW1hbAogIF9kZWNpbWFsCiAgX2RlY2ltYWwKICBfZGVjaW1hbAogIF9kZWNpbWFsCiAgX2RlY2ltYWwKICBfZGlnaXQKICBfdGFpbApERUNJTUFMCiAgX2RlY2ltYWwKUEFSRU5UX1NDT1BFCiAgX2Jyb3RsaV92ZXJzaW9uX2xpbmUKICBfYnJvdGxpX3ZlcnNpb25faGV4CiAgX2Jyb3RsaV92ZXJzaW9uCiAgX2Jyb3RsaV92ZXJzaW9uCiAgX2Jyb3RsaV92ZXJzaW9uCkJST1RMSV9WRVJTSU9OCkJST1RMSV9WRVJTSU9OX01BSk9SCkJST1RMSV9WRVJTSU9OX01JTk9SCkJST1RMSV9WRVJTSU9OX1BBVENICiAgX2Jyb3RsaV9hYmlfaW5mb19saW5lCiAgX2Jyb3RsaV9hYmlfaW5mb19oZXgKICBfYnJvdGxpX2FiaV9pbmZvCiAgX2Jyb3RsaV9hYmlfaW5mbwogIF9icm90bGlfYWJpX2luZm8KQlJPVExJX0FCSV9DVVJSRU5UCkJST1RMSV9BQklfQUdFCkNNQUtFX0NfRkxBR1MKQ01BS0VfQ19GTEFHUwpFTkFCTEVfU0FOSVRJWkVSCkNNQUtFX0NYWF9GTEFHUwpDTUFLRV9DWFhfRkxBR1MKRU5BQkxFX1NBTklUSVpFUgpDTUFLRV9FWEVfTElOS0VSX0ZMQUdTCkNNQUtFX0VYRV9MSU5LRVJfRkxBR1MKRU5BQkxFX1NBTklUSVpFUgpMSUJNX0xJQlJBUlkKICBvcmlnX3JlcV9saWJzCkNNQUtFX1JFUVVJUkVEX0xJQlJBUklFUwpDTUFLRV9SRVFVSVJFRF9MSUJSQVJJRVMKQ01BS0VfUkVRVUlSRURfTElCUkFSSUVTCkxJQk1fTElCUkFSWQpDTUFLRV9SRVFVSVJFRF9MSUJSQVJJRVMKICBvcmlnX3JlcV9saWJzCkJST1RMSV9JTkNMVURFX0RJUlMKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkJST1RMSV9MSUJSQVJJRVNfQ09SRQpCUk9UTElfTElCUkFSSUVTCkJST1RMSV9MSUJSQVJJRVNfQ09SRQpMSUJNX0xJQlJBUlkKQlJPVExJX0xJQlJBUklFU19DT1JFX1NUQVRJQwpCUk9UTElfTElCUkFSSUVTX1NUQVRJQwpCUk9UTElfTElCUkFSSUVTX0NPUkVfU1RBVElDCkxJQk1fTElCUkFSWQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQpDTUFLRV9TWVNURU1fTkFNRQogIHRyYW5zZm9ybV9zb3VyY2VzX2xpc3QKSU5QVVRfRklMRQpURVhUClRFWFQKVEVYVApPVVRQVVRfRklMRQpURVhUCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQlJPVExJX1NIQVJFRF9MSUJTCkJST1RMSV9TSEFSRURfTElCUwpCUk9UTElfQ09NTU9OX0MKQlJPVExJX0RFQ19DCkJST1RMSV9FTkNfQwpCUk9UTElfU1RBVElDX0xJQlMKQlJPVExJX0NPTU1PTl9DCkJST1RMSV9ERUNfQwpCUk9UTElfRU5DX0MKQlJPVExJX0lOQ0xVREVfRElSUwogIGxpYgogIGxpYgogIGxpYgpMSUIKICBsaWIKTElCTV9MSUJSQVJZCiAgbGliCkJST1RMSV9JTkNMVURFX0RJUlMKICBsaWIKQlJPVExJX0FCSV9DT01QQVRJQklMSVRZCkJST1RMSV9BQklfQUdFCkJST1RMSV9BQklfUkVWSVNJT04KQlJPVExJX0FCSV9DT01QQVRJQklMSVRZCiAgbGliCiAgbGliCkJST1RMSV9JTkNMVURFX0RJUlMKQlJPVExJX0lOQ0xVREVfRElSUwpCUk9UTElfSU5DTFVERV9ESVJTCkJST1RMSV9MSUJSQVJJRVMKQlJPVExJX0xJQlJBUklFUwpCUk9UTElfQ0xJX0MKQlJPVExJX0xJQlJBUklFU19TVEFUSUMKQ01BS0VfSU5TVEFMTF9CSU5ESVIKQlJPVExJX0xJQlJBUklFU19DT1JFCkNNQUtFX0lOU1RBTExfTElCRElSCkNNQUtFX0lOU1RBTExfTElCRElSCkNNQUtFX0lOU1RBTExfQklORElSCkJST1RMSV9MSUJSQVJJRVNfQ09SRV9TVEFUSUMKQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfSU5TVEFMTF9CSU5ESVIKQlJPVExJX0lOQ0xVREVfRElSUwpDTUFLRV9JTlNUQUxMX0lOQ0xVREVESVIKQlJPVExJX0RJU0FCTEVfVEVTVFMKQ01BS0VfQ19DT01QSUxFUgpCUk9UTElfV1JBUFBFUgpCUk9UTElfV1JBUFBFUl9MRF9QUkVGSVgKQ01BS0VfQ19DT01QSUxFUgpCUk9UTElfV1JBUFBFUgpCUk9UTElfV1JBUFBFUl9MRF9QUkVGSVgKQ01BS0VfQ19DT01QSUxFUgpCUk9UTElfV1JBUFBFUgpCUk9UTElfV1JBUFBFUl9MRF9QUkVGSVgKUk9VTkRUUklQX0lOUFVUUwpST1VORFRSSVBfSU5QVVRTCklOUFVUCk9VVFBVVF9GSUxFCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpPVVRQVVRfTkFNRQpJTlBVVF9GSUxFCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpJTlBVVApJTlBVVF9GSUxFCkJST1RMSV9URVNUX1BSRUZJWApJTlBVVAogIHF1YWxpdHkKQ01BS0VfQ09NTUFORApCUk9UTElfV1JBUFBFUgpCUk9UTElfV1JBUFBFUl9MRF9QUkVGSVgKVEFSR0VUX0ZJTEUKICBicm90bGkKICBxdWFsaXR5CklOUFVUX0ZJTEUKT1VUUFVUX0ZJTEUKICBxdWFsaXR5CkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpJTlBVVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ09NUEFUSUJJTElUWV9JTlBVVFMKQlJPVExJX1RFU1RfUFJFRklYCklOUFVUCkNNQUtFX0NPTU1BTkQKQlJPVExJX1dSQVBQRVIKQlJPVExJX1dSQVBQRVJfTERfUFJFRklYClRBUkdFVF9GSUxFCiAgYnJvdGxpCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpJTlBVVApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKICBnZW5lcmF0ZV9wa2dfY29uZmlnX3BhdGgKICBwYXRoCiAgcGF0aF9hcmdzCkFSR1YKICBvdXR2YXIKICBwYXRoCiAgdmFsdWUKICB2YWx1ZQogIG91dHZhcgogIG5hbWUKICBwYXRoCiAgdmFsdWVfbGVuZ3RoCiAgcGF0aAogIHZhbHVlX2xlbmd0aAogIHBhdGgKICB2YWx1ZV9sZW5ndGgKICBvdXR2YXIKICBuYW1lCiAgc3VmZml4CiAgb3V0dmFyCiAgb3V0dmFyCiAgdHJhbnNmb3JtX3BjX2ZpbGUKSU5QVVRfRklMRQpQUkVGSVgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKUFJFRklYClRFWFQKUFJFRklYClRFWFQKQ01BS0VfSU5TVEFMTF9GVUxMX0xJQkRJUgpQUkVGSVgKTElCRElSClRFWFQKQ01BS0VfSU5TVEFMTF9GVUxMX0lOQ0xVREVESVIKUFJFRklYCklOQ0xVREVESVIKVEVYVApWRVJTSU9OClRFWFQKT1VUUFVUX0ZJTEUKVEVYVApDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQlJPVExJX1ZFUlNJT04KQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkJST1RMSV9WRVJTSU9OCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpCUk9UTElfVkVSU0lPTgpDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVIKQ01BS0VfSU5TVEFMTF9MSUJESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0lOU1RBTExfTElCRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
						"symkeys":
						[
							[
								6,
								19
							],
							[
								212,
								228
							],
							[
								355,
								372
							],
							[
								376,
								392
							],
							[
								497,
								517
							],
							[
								560,
								580
							],
							[
								717,
								737
							],
							[
								868,
								888
							],
							[
								1019,
								1039
							],
							[
								1288,
								1307
							],
							[
								1449,
								1467
							],
							[
								1609,
								1627
							],
							[
								1769,
								1787
							],
							[
								1841,
								1866
							],
							[
								1888,
								1910
							],
							[
								1929,
								1951
							],
							[
								1979,
								2004
							],
							[
								2024,
								2046
							],
							[
								2065,
								2087
							],
							[
								2154,
								2179
							],
							[
								2222,
								2239
							],
							[
								2243,
								2259
							],
							[
								2306,
								2328
							],
							[
								2371,
								2388
							],
							[
								2392,
								2408
							],
							[
								2455,
								2477
							],
							[
								2520,
								2537
							],
							[
								2541,
								2557
							],
							[
								2567,
								2585
							],
							[
								2588,
								2608
							],
							[
								2612,
								2632
							],
							[
								2636,
								2659
							],
							[
								2723,
								2737
							],
							[
								3309,
								3329
							],
							[
								3467,
								3490
							],
							[
								3672,
								3692
							],
							[
								3843,
								3863
							],
							[
								4045,
								4065
							],
							[
								4219,
								4239
							],
							[
								4352,
								4369
							],
							[
								4387,
								4398
							],
							[
								4402,
								4419
							],
							[
								4447,
								4464
							],
							[
								4552,
								4572
							],
							[
								4621,
								4632
							],
							[
								4678,
								4690
							],
							[
								4714,
								4725
							],
							[
								4738,
								4758
							],
							[
								4762,
								4773
							],
							[
								4825,
								4845
							],
							[
								4849,
								4869
							]
						],
						"symlist":
						[
							"find_libressl",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"VERSION_STRING_LINE",
							"VERSION_MAJOR_LINE",
							"VERSION_MINOR_LINE",
							"VERSION_PATCH_LINE",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"_LIBRESSL_SSL_LIB_NAME",
							"_LIBRESSL_TLS_LIB_NAME",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"_LIBRESSL_SSL_LIB_NAME",
							"_LIBRESSL_TLS_LIB_NAME",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"_LIBRESSL_SSL_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"_LIBRESSL_TLS_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_LIBRARIES",
							"LIBRESSL_TLS_LIBRARY",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRESSL_CRYPTO_LIBRARY",
							"LIBRESSL_FOUND",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_CRYPTO_LIBRARY",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_TLS_LIBRARY",
							"LIBRESSL_ROOT_DIR",
							"LIBRARY_DIR",
							"LIBRESSL_ROOT_DIR",
							"LIBRESSL_ROOT_DIR",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRARY_DIR",
							"LIBRARY_PATH",
							"LIBRARY_DIR",
							"LIBRESSL_LIBRARY_DIR",
							"LIBRARY_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAAgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACBAAAICBmaW5kX2xpYnJlc3NsCiAgX0VYVFJBX0ZJTkRfQVJHUwpMSUJSRVNTTF9ST09UX0RJUgogIF9FWFRSQV9GSU5EX0FSR1MKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKVkVSU0lPTl9TVFJJTkdfTElORQpWRVJTSU9OX01BSk9SX0xJTkUKVkVSU0lPTl9NSU5PUl9MSU5FClZFUlNJT05fUEFUQ0hfTElORQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKICBfTElCUkVTU0xfU1NMX0xJQl9OQU1FCiAgX0xJQlJFU1NMX1RMU19MSUJfTkFNRQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKICBfTElCUkVTU0xfU1NMX0xJQl9OQU1FCiAgX0xJQlJFU1NMX1RMU19MSUJfTkFNRQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKTElCUkVTU0xfUk9PVF9ESVIKICBfRVhUUkFfRklORF9BUkdTCiAgX0xJQlJFU1NMX1NTTF9MSUJfTkFNRQpMSUJSRVNTTF9ST09UX0RJUgogIF9FWFRSQV9GSU5EX0FSR1MKICBfTElCUkVTU0xfVExTX0xJQl9OQU1FCkxJQlJFU1NMX1JPT1RfRElSCiAgX0VYVFJBX0ZJTkRfQVJHUwpMSUJSRVNTTF9MSUJSQVJJRVMKTElCUkVTU0xfVExTX0xJQlJBUlkKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkVTU0xfQ1JZUFRPX0xJQlJBUlkKTElCUkVTU0xfRk9VTkQKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfQ1JZUFRPX0xJQlJBUlkKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfVExTX0xJQlJBUlkKTElCUkVTU0xfUk9PVF9ESVIKTElCUkFSWV9ESVIKTElCUkVTU0xfUk9PVF9ESVIKTElCUkVTU0xfUk9PVF9ESVIKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkFSWV9ESVIKTElCUkFSWV9QQVRICkxJQlJBUllfRElSCkxJQlJFU1NMX0xJQlJBUllfRElSCkxJQlJBUllfRElSCkxJQlJFU1NMX0lOQ0xVREVfRElSCkxJQlJFU1NMX0lOQ0xVREVfRElSAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
						"symkeys":
						[
							[
								6,
								19
							],
							[
								658,
								676
							],
							[
								703,
								721
							],
							[
								951,
								977
							],
							[
								1008,
								1033
							],
							[
								1046,
								1071
							],
							[
								1113,
								1139
							],
							[
								1217,
								1237
							],
							[
								1352,
								1371
							],
							[
								1435,
								1454
							],
							[
								1578,
								1593
							],
							[
								1632,
								1651
							],
							[
								1670,
								1694
							],
							[
								1721,
								1745
							],
							[
								1802,
								1817
							],
							[
								1890,
								1905
							],
							[
								1995,
								2012
							],
							[
								2053,
								2070
							],
							[
								2095,
								2113
							],
							[
								2172,
								2188
							],
							[
								2229,
								2248
							],
							[
								2283,
								2298
							],
							[
								2339,
								2358
							],
							[
								2404,
								2428
							],
							[
								2471,
								2492
							],
							[
								2610,
								2618
							],
							[
								2671,
								2700
							],
							[
								2745,
								2768
							],
							[
								2819,
								2848
							],
							[
								2901,
								2932
							],
							[
								2974,
								2994
							],
							[
								3114,
								3133
							],
							[
								3213,
								3232
							],
							[
								3242,
								3246
							],
							[
								3293,
								3312
							],
							[
								3324,
								3337
							],
							[
								3393,
								3412
							],
							[
								3430,
								3443
							],
							[
								3455,
								3465
							],
							[
								3507,
								3517
							],
							[
								3891,
								3906
							],
							[
								3969,
								3984
							],
							[
								4024,
								4039
							],
							[
								4043,
								4062
							],
							[
								4089,
								4104
							],
							[
								4135,
								4145
							],
							[
								4168,
								4188
							],
							[
								4257,
								4277
							],
							[
								4317,
								4337
							],
							[
								4341,
								4360
							],
							[
								4387,
								4407
							],
							[
								4493,
								4503
							],
							[
								4527,
								4549
							],
							[
								4622,
								4644
							],
							[
								4684,
								4706
							],
							[
								4710,
								4729
							],
							[
								4756,
								4778
							],
							[
								4866,
								4876
							],
							[
								4902,
								4919
							],
							[
								4923,
								4938
							],
							[
								4942,
								4964
							],
							[
								4968,
								4988
							],
							[
								5044,
								5063
							],
							[
								5067,
								5077
							],
							[
								5132,
								5151
							],
							[
								5155,
								5165
							],
							[
								5262,
								5279
							],
							[
								5330,
								5349
							],
							[
								5400,
								5419
							]
						],
						"symlist":
						[
							"build_mbedtls",
							"MBEDTLS_BUILD_TYPE",
							"MBEDTLS_BUILD_TYPE",
							"MBEDTLS_PREINCLUDE_C_FLAGS",
							"MBEDTLS_PREINCLUDE_PREFIX",
							"MBEDTLS_PREINCLUDE_HEADER",
							"MBEDTLS_PREINCLUDE_C_FLAGS",
							"ARM_CPU_ARCHITECTURE",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_VERSION",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"MBEDTLS_VERSION",
							"MBEDTLS_VERSION",
							"CMAKE_MODULE_PATH",
							"CMAKE_SYSTEM_NAME",
							"MBEDTLS_BUILD_TYPE",
							"CMAKE_C_COMPILER",
							"CMAKE_C_COMPILER_ID",
							"MBEDTLS_C_FLAGS",
							"CMAKE_C_FLAGS_DEBUG",
							"CMAKE_C_FLAGS_MINSIZEREL",
							"CMAKE_C_FLAGS_RELEASE",
							"CMAKE_AR",
							"CMAKE_C_CREATE_STATIC_LIBRARY",
							"CMAKE_C_LINK_EXECUTABLE",
							"CMAKE_STATIC_LIBRARY_PREFIX_C",
							"CMAKE_STATIC_LIBRARY_PREFIX_CXX",
							"CMAKE_INSTALL_PREFIX",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_TARGET_NAME",
							"ARGN",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_COMMAND",
							"MBEDTLS_TARGET_NAME",
							"CMAKE_COMMAND",
							"BINARY_DIR",
							"BINARY_DIR",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_X509_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_TARGET_NAME",
							"MBEDTLS_CRYPTO_LIBRARY",
							"BINARY_DIR",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_LIBRARY",
							"MBEDTLS_CRYPTO_LIBRARY",
							"MBEDTLS_X509_LIBRARY",
							"MBEDTLS_LIBRARY_DIR",
							"BINARY_DIR",
							"MBEDTLS_INCLUDE_DIR",
							"SOURCE_DIR",
							"MBEDTLS_LIBRARIES",
							"MBEDTLS_LIBRARY_DIR",
							"MBEDTLS_INCLUDE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAALQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAtBQAAICBidWlsZF9tYmVkdGxzCk1CRURUTFNfQlVJTERfVFlQRQpNQkVEVExTX0JVSUxEX1RZUEUKTUJFRFRMU19QUkVJTkNMVURFX0NfRkxBR1MKTUJFRFRMU19QUkVJTkNMVURFX1BSRUZJWApNQkVEVExTX1BSRUlOQ0xVREVfSEVBREVSCk1CRURUTFNfUFJFSU5DTFVERV9DX0ZMQUdTCkFSTV9DUFVfQVJDSElURUNUVVJFCk1CRURUTFNfVEFSR0VUX05BTUUKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX1ZFUlNJT04KTUJFRFRMU19UQVJHRVRfTkFNRQpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCk1CRURUTFNfVkVSU0lPTgpNQkVEVExTX1ZFUlNJT04KQ01BS0VfTU9EVUxFX1BBVEgKQ01BS0VfU1lTVEVNX05BTUUKTUJFRFRMU19CVUlMRF9UWVBFCkNNQUtFX0NfQ09NUElMRVIKQ01BS0VfQ19DT01QSUxFUl9JRApNQkVEVExTX0NfRkxBR1MKQ01BS0VfQ19GTEFHU19ERUJVRwpDTUFLRV9DX0ZMQUdTX01JTlNJWkVSRUwKQ01BS0VfQ19GTEFHU19SRUxFQVNFCkNNQUtFX0FSCkNNQUtFX0NfQ1JFQVRFX1NUQVRJQ19MSUJSQVJZCkNNQUtFX0NfTElOS19FWEVDVVRBQkxFCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1BSRUZJWF9DCkNNQUtFX1NUQVRJQ19MSUJSQVJZX1BSRUZJWF9DWFgKQ01BS0VfSU5TVEFMTF9QUkVGSVgKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX1RBUkdFVF9OQU1FCkFSR04KTUJFRFRMU19UQVJHRVRfTkFNRQpDTUFLRV9DT01NQU5ECk1CRURUTFNfVEFSR0VUX05BTUUKQ01BS0VfQ09NTUFORApCSU5BUllfRElSCkJJTkFSWV9ESVIKTUJFRFRMU19MSUJSQVJZCk1CRURUTFNfTElCUkFSWQpNQkVEVExTX0xJQlJBUlkKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX0xJQlJBUlkKQklOQVJZX0RJUgpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1g1MDlfTElCUkFSWQpNQkVEVExTX1RBUkdFVF9OQU1FCk1CRURUTFNfWDUwOV9MSUJSQVJZCkJJTkFSWV9ESVIKTUJFRFRMU19DUllQVE9fTElCUkFSWQpNQkVEVExTX0NSWVBUT19MSUJSQVJZCk1CRURUTFNfQ1JZUFRPX0xJQlJBUlkKTUJFRFRMU19UQVJHRVRfTkFNRQpNQkVEVExTX0NSWVBUT19MSUJSQVJZCkJJTkFSWV9ESVIKTUJFRFRMU19MSUJSQVJJRVMKTUJFRFRMU19MSUJSQVJZCk1CRURUTFNfQ1JZUFRPX0xJQlJBUlkKTUJFRFRMU19YNTA5X0xJQlJBUlkKTUJFRFRMU19MSUJSQVJZX0RJUgpCSU5BUllfRElSCk1CRURUTFNfSU5DTFVERV9ESVIKU09VUkNFX0RJUgpNQkVEVExTX0xJQlJBUklFUwpNQkVEVExTX0xJQlJBUllfRElSCk1CRURUTFNfSU5DTFVERV9ESVIAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
						"symkeys":
						[
							[
								6,
								19
							],
							[
								212,
								228
							],
							[
								355,
								372
							],
							[
								376,
								392
							],
							[
								497,
								517
							],
							[
								560,
								580
							],
							[
								717,
								737
							],
							[
								868,
								888
							],
							[
								1019,
								1039
							],
							[
								1288,
								1307
							],
							[
								1449,
								1467
							],
							[
								1609,
								1627
							],
							[
								1769,
								1787
							],
							[
								1841,
								1866
							],
							[
								1888,
								1910
							],
							[
								1929,
								1951
							],
							[
								1979,
								2004
							],
							[
								2024,
								2046
							],
							[
								2065,
								2087
							],
							[
								2154,
								2179
							],
							[
								2222,
								2239
							],
							[
								2243,
								2259
							],
							[
								2306,
								2328
							],
							[
								2371,
								2388
							],
							[
								2392,
								2408
							],
							[
								2455,
								2477
							],
							[
								2520,
								2537
							],
							[
								2541,
								2557
							],
							[
								2567,
								2585
							],
							[
								2588,
								2608
							],
							[
								2612,
								2632
							],
							[
								2636,
								2659
							],
							[
								2723,
								2737
							],
							[
								3309,
								3329
							],
							[
								3467,
								3490
							],
							[
								3672,
								3692
							],
							[
								3843,
								3863
							],
							[
								4045,
								4065
							],
							[
								4219,
								4239
							],
							[
								4352,
								4369
							],
							[
								4387,
								4398
							],
							[
								4402,
								4419
							],
							[
								4447,
								4464
							],
							[
								4552,
								4572
							],
							[
								4621,
								4632
							],
							[
								4678,
								4690
							],
							[
								4714,
								4725
							],
							[
								4738,
								4758
							],
							[
								4762,
								4773
							],
							[
								4825,
								4845
							],
							[
								4849,
								4869
							]
						],
						"symlist":
						[
							"find_libressl",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"VERSION_STRING_LINE",
							"VERSION_MAJOR_LINE",
							"VERSION_MINOR_LINE",
							"VERSION_PATCH_LINE",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"_LIBRESSL_SSL_LIB_NAME",
							"_LIBRESSL_TLS_LIB_NAME",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"_LIBRESSL_SSL_LIB_NAME",
							"_LIBRESSL_TLS_LIB_NAME",
							"_LIBRESSL_CRYPTO_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"_LIBRESSL_SSL_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"_LIBRESSL_TLS_LIB_NAME",
							"LIBRESSL_ROOT_DIR",
							"_EXTRA_FIND_ARGS",
							"LIBRESSL_LIBRARIES",
							"LIBRESSL_TLS_LIBRARY",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRESSL_CRYPTO_LIBRARY",
							"LIBRESSL_FOUND",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_CRYPTO_LIBRARY",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_TLS_LIBRARY",
							"LIBRESSL_ROOT_DIR",
							"LIBRARY_DIR",
							"LIBRESSL_ROOT_DIR",
							"LIBRESSL_ROOT_DIR",
							"LIBRESSL_SSL_LIBRARY",
							"LIBRARY_DIR",
							"LIBRARY_PATH",
							"LIBRARY_DIR",
							"LIBRESSL_LIBRARY_DIR",
							"LIBRARY_DIR",
							"LIBRESSL_INCLUDE_DIR",
							"LIBRESSL_INCLUDE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAAgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					53,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
						"symkeys":
						[
							[
								421,
								437
							],
							[
								538,
								554
							],
							[
								1382,
								1401
							],
							[
								1423,
								1442
							],
							[
								1776,
								1786
							],
							[
								1828,
								1839
							],
							[
								1855,
								1863
							],
							[
								1886,
								1891
							],
							[
								1967,
								1975
							],
							[
								2008,
								2013
							],
							[
								2052,
								2057
							],
							[
								2129,
								2137
							],
							[
								2207,
								2215
							],
							[
								2285,
								2293
							],
							[
								2363,
								2371
							],
							[
								2441,
								2449
							],
							[
								2519,
								2527
							],
							[
								2575,
								2583
							],
							[
								2589,
								2595
							],
							[
								2632,
								2637
							],
							[
								2675,
								2682
							],
							[
								2686,
								2694
							],
							[
								2696,
								2708
							],
							[
								2957,
								2977
							],
							[
								2995,
								3014
							],
							[
								3068,
								3083
							],
							[
								3128,
								3143
							],
							[
								3195,
								3210
							],
							[
								3225,
								3239
							],
							[
								3243,
								3263
							],
							[
								3267,
								3287
							],
							[
								3291,
								3311
							],
							[
								3648,
								3669
							],
							[
								3687,
								3707
							],
							[
								3760,
								3776
							],
							[
								3820,
								3836
							],
							[
								3882,
								3898
							],
							[
								3947,
								3965
							],
							[
								3971,
								3985
							],
							[
								4115,
								4128
							],
							[
								4133,
								4146
							],
							[
								4161,
								4177
							],
							[
								4187,
								4202
							],
							[
								4207,
								4222
							],
							[
								4237,
								4253
							],
							[
								4263,
								4285
							],
							[
								4289,
								4311
							],
							[
								4326,
								4342
							],
							[
								4622,
								4634
							],
							[
								4696,
								4709
							],
							[
								4713,
								4737
							],
							[
								4747,
								4771
							],
							[
								4775,
								4799
							],
							[
								4877,
								4889
							],
							[
								5005,
								5029
							],
							[
								5033,
								5046
							],
							[
								5172,
								5191
							],
							[
								5195,
								5219
							],
							[
								5276,
								5297
							],
							[
								5336,
								5352
							],
							[
								5355,
								5376
							],
							[
								5380,
								5392
							],
							[
								5435,
								5463
							],
							[
								5523,
								5546
							],
							[
								5549,
								5577
							],
							[
								5581,
								5593
							],
							[
								5644,
								5661
							],
							[
								5719,
								5736
							],
							[
								5798,
								5815
							],
							[
								5884,
								5906
							],
							[
								5945,
								5955
							],
							[
								6019,
								6023
							],
							[
								6119,
								6123
							],
							[
								6172,
								6176
							],
							[
								6194,
								6205
							],
							[
								6209,
								6213
							],
							[
								6279,
								6303
							],
							[
								6336,
								6360
							],
							[
								6411,
								6429
							],
							[
								6447,
								6465
							],
							[
								6536,
								6551
							],
							[
								6587,
								6599
							],
							[
								6635,
								6647
							],
							[
								6663,
								6681
							],
							[
								6778,
								6793
							],
							[
								6834,
								6846
							],
							[
								6887,
								6899
							],
							[
								6998,
								7017
							],
							[
								7093,
								7096
							],
							[
								7155,
								7158
							],
							[
								7193,
								7196
							],
							[
								7226,
								7229
							],
							[
								7352,
								7355
							],
							[
								7359,
								7371
							],
							[
								7398,
								7401
							],
							[
								7441,
								7460
							],
							[
								7489,
								7492
							],
							[
								7520,
								7544
							],
							[
								7548,
								7562
							],
							[
								7566,
								7585
							],
							[
								7605,
								7629
							],
							[
								7689,
								7692
							],
							[
								7771,
								7774
							],
							[
								7825,
								7844
							],
							[
								8423,
								8442
							],
							[
								8446,
								8465
							],
							[
								8488,
								8504
							],
							[
								8508,
								8524
							],
							[
								8604,
								8616
							],
							[
								8650,
								8673
							],
							[
								8803,
								8823
							],
							[
								8856,
								8877
							],
							[
								8906,
								8926
							],
							[
								8956,
								8976
							],
							[
								9006,
								9026
							],
							[
								9059,
								9087
							],
							[
								9116,
								9136
							],
							[
								9166,
								9186
							],
							[
								9216,
								9236
							],
							[
								9271,
								9290
							],
							[
								9318,
								9342
							],
							[
								9715,
								9735
							],
							[
								9932,
								9948
							],
							[
								10067,
								10081
							],
							[
								10102,
								10126
							],
							[
								10175,
								10191
							],
							[
								10306,
								10320
							],
							[
								10341,
								10365
							],
							[
								10412,
								10428
							],
							[
								10543,
								10557
							],
							[
								10582,
								10606
							],
							[
								10724,
								10740
							],
							[
								10950,
								10966
							],
							[
								11011,
								11016
							],
							[
								11034,
								11045
							],
							[
								11049,
								11073
							],
							[
								11077,
								11088
							],
							[
								11100,
								11110
							],
							[
								11114,
								11138
							],
							[
								11142,
								11147
							],
							[
								11170,
								11180
							],
							[
								11241,
								11259
							],
							[
								11272,
								11277
							],
							[
								11281,
								11288
							],
							[
								11312,
								11325
							],
							[
								11359,
								11373
							],
							[
								11416,
								11440
							],
							[
								11469,
								11480
							],
							[
								11481,
								11487
							],
							[
								11513,
								11520
							],
							[
								11544,
								11554
							],
							[
								11579,
								11590
							],
							[
								11594,
								11601
							],
							[
								11620,
								11644
							],
							[
								11743,
								11748
							],
							[
								11856,
								11880
							],
							[
								11935,
								11955
							],
							[
								11979,
								11997
							],
							[
								12014,
								12019
							],
							[
								12039,
								12052
							],
							[
								12082,
								12096
							],
							[
								12135,
								12159
							],
							[
								12184,
								12195
							],
							[
								12196,
								12202
							],
							[
								12222,
								12246
							],
							[
								12250,
								12255
							],
							[
								12270,
								12294
							],
							[
								12396,
								12420
							],
							[
								12453,
								12457
							],
							[
								12480,
								12489
							],
							[
								12492,
								12496
							],
							[
								12586,
								12592
							],
							[
								12598,
								12602
							],
							[
								12751,
								12756
							],
							[
								12790,
								12795
							],
							[
								12889,
								12895
							],
							[
								12904,
								12908
							],
							[
								13296,
								13300
							],
							[
								13305,
								13317
							],
							[
								13381,
								13385
							],
							[
								13392,
								13404
							],
							[
								13468,
								13472
							],
							[
								13478,
								13490
							],
							[
								13521,
								13527
							],
							[
								13536,
								13540
							],
							[
								13544,
								13550
							],
							[
								13719,
								13725
							],
							[
								13733,
								13739
							],
							[
								13805,
								13822
							],
							[
								13869,
								13879
							],
							[
								13894,
								13900
							],
							[
								13904,
								13924
							],
							[
								13965,
								13971
							],
							[
								13981,
								13985
							],
							[
								14030,
								14036
							],
							[
								14046,
								14050
							],
							[
								14091,
								14116
							],
							[
								14129,
								14135
							],
							[
								14176,
								14182
							],
							[
								14192,
								14196
							],
							[
								14241,
								14270
							],
							[
								14283,
								14289
							],
							[
								14334,
								14344
							],
							[
								14354,
								14358
							],
							[
								14408,
								14415
							],
							[
								14425,
								14429
							],
							[
								14448,
								14459
							],
							[
								14463,
								14467
							],
							[
								14538,
								14562
							],
							[
								14587,
								14601
							],
							[
								14656,
								14680
							],
							[
								14702,
								14716
							],
							[
								14771,
								14795
							],
							[
								14817,
								14831
							],
							[
								14909,
								14933
							],
							[
								14974,
								14994
							],
							[
								15027,
								15051
							],
							[
								15089,
								15109
							],
							[
								15142,
								15166
							],
							[
								15204,
								15224
							]
						],
						"symlist":
						[
							"CMAKE_BUILD_TYPE",
							"CMAKE_BUILD_TYPE",
							"BROTLI_BUNDLED_MODE",
							"BROTLI_BUNDLED_MODE",
							"hex_to_dec",
							"HEXADECIMAL",
							"_decimal",
							"_tail",
							"_decimal",
							"_tail",
							"_tail",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_decimal",
							"_digit",
							"_tail",
							"DECIMAL",
							"_decimal",
							"PARENT_SCOPE",
							"_brotli_version_line",
							"_brotli_version_hex",
							"_brotli_version",
							"_brotli_version",
							"_brotli_version",
							"BROTLI_VERSION",
							"BROTLI_VERSION_MAJOR",
							"BROTLI_VERSION_MINOR",
							"BROTLI_VERSION_PATCH",
							"_brotli_abi_info_line",
							"_brotli_abi_info_hex",
							"_brotli_abi_info",
							"_brotli_abi_info",
							"_brotli_abi_info",
							"BROTLI_ABI_CURRENT",
							"BROTLI_ABI_AGE",
							"CMAKE_C_FLAGS",
							"CMAKE_C_FLAGS",
							"ENABLE_SANITIZER",
							"CMAKE_CXX_FLAGS",
							"CMAKE_CXX_FLAGS",
							"ENABLE_SANITIZER",
							"CMAKE_EXE_LINKER_FLAGS",
							"CMAKE_EXE_LINKER_FLAGS",
							"ENABLE_SANITIZER",
							"LIBM_LIBRARY",
							"orig_req_libs",
							"CMAKE_REQUIRED_LIBRARIES",
							"CMAKE_REQUIRED_LIBRARIES",
							"CMAKE_REQUIRED_LIBRARIES",
							"LIBM_LIBRARY",
							"CMAKE_REQUIRED_LIBRARIES",
							"orig_req_libs",
							"BROTLI_INCLUDE_DIRS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"BROTLI_LIBRARIES_CORE",
							"BROTLI_LIBRARIES",
							"BROTLI_LIBRARIES_CORE",
							"LIBM_LIBRARY",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"BROTLI_LIBRARIES_STATIC",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"LIBM_LIBRARY",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"CMAKE_SYSTEM_NAME",
							"transform_sources_list",
							"INPUT_FILE",
							"TEXT",
							"TEXT",
							"TEXT",
							"OUTPUT_FILE",
							"TEXT",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_SHARED_LIBS",
							"BROTLI_SHARED_LIBS",
							"BROTLI_COMMON_C",
							"BROTLI_DEC_C",
							"BROTLI_ENC_C",
							"BROTLI_STATIC_LIBS",
							"BROTLI_COMMON_C",
							"BROTLI_DEC_C",
							"BROTLI_ENC_C",
							"BROTLI_INCLUDE_DIRS",
							"lib",
							"lib",
							"lib",
							"LIB",
							"lib",
							"LIBM_LIBRARY",
							"lib",
							"BROTLI_INCLUDE_DIRS",
							"lib",
							"BROTLI_ABI_COMPATIBILITY",
							"BROTLI_ABI_AGE",
							"BROTLI_ABI_REVISION",
							"BROTLI_ABI_COMPATIBILITY",
							"lib",
							"lib",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_INCLUDE_DIRS",
							"BROTLI_LIBRARIES",
							"BROTLI_LIBRARIES",
							"BROTLI_CLI_C",
							"BROTLI_LIBRARIES_STATIC",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_LIBRARIES_CORE",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_LIBRARIES_CORE_STATIC",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_INSTALL_BINDIR",
							"BROTLI_INCLUDE_DIRS",
							"CMAKE_INSTALL_INCLUDEDIR",
							"BROTLI_DISABLE_TESTS",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"CMAKE_C_COMPILER",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"ROUNDTRIP_INPUTS",
							"ROUNDTRIP_INPUTS",
							"INPUT",
							"OUTPUT_FILE",
							"CMAKE_CURRENT_BINARY_DIR",
							"OUTPUT_NAME",
							"INPUT_FILE",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"INPUT_FILE",
							"BROTLI_TEST_PREFIX",
							"INPUT",
							"quality",
							"CMAKE_COMMAND",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"TARGET_FILE",
							"brotli",
							"quality",
							"INPUT_FILE",
							"OUTPUT_FILE",
							"quality",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"COMPATIBILITY_INPUTS",
							"BROTLI_TEST_PREFIX",
							"INPUT",
							"CMAKE_COMMAND",
							"BROTLI_WRAPPER",
							"BROTLI_WRAPPER_LD_PREFIX",
							"TARGET_FILE",
							"brotli",
							"CMAKE_CURRENT_SOURCE_DIR",
							"INPUT",
							"CMAKE_CURRENT_SOURCE_DIR",
							"generate_pkg_config_path",
							"path",
							"path_args",
							"ARGV",
							"outvar",
							"path",
							"value",
							"value",
							"outvar",
							"name",
							"path",
							"value_length",
							"path",
							"value_length",
							"path",
							"value_length",
							"outvar",
							"name",
							"suffix",
							"outvar",
							"outvar",
							"transform_pc_file",
							"INPUT_FILE",
							"PREFIX",
							"CMAKE_INSTALL_PREFIX",
							"PREFIX",
							"TEXT",
							"PREFIX",
							"TEXT",
							"CMAKE_INSTALL_FULL_LIBDIR",
							"PREFIX",
							"LIBDIR",
							"TEXT",
							"CMAKE_INSTALL_FULL_INCLUDEDIR",
							"PREFIX",
							"INCLUDEDIR",
							"TEXT",
							"VERSION",
							"TEXT",
							"OUTPUT_FILE",
							"TEXT",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"BROTLI_VERSION",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_INSTALL_LIBDIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAACBAAAICBmaW5kX2xpYnJlc3NsCiAgX0VYVFJBX0ZJTkRfQVJHUwpMSUJSRVNTTF9ST09UX0RJUgogIF9FWFRSQV9GSU5EX0FSR1MKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfSU5DTFVERV9ESVIKVkVSU0lPTl9TVFJJTkdfTElORQpWRVJTSU9OX01BSk9SX0xJTkUKVkVSU0lPTl9NSU5PUl9MSU5FClZFUlNJT05fUEFUQ0hfTElORQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKICBfTElCUkVTU0xfU1NMX0xJQl9OQU1FCiAgX0xJQlJFU1NMX1RMU19MSUJfTkFNRQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKICBfTElCUkVTU0xfU1NMX0xJQl9OQU1FCiAgX0xJQlJFU1NMX1RMU19MSUJfTkFNRQogIF9MSUJSRVNTTF9DUllQVE9fTElCX05BTUUKTElCUkVTU0xfUk9PVF9ESVIKICBfRVhUUkFfRklORF9BUkdTCiAgX0xJQlJFU1NMX1NTTF9MSUJfTkFNRQpMSUJSRVNTTF9ST09UX0RJUgogIF9FWFRSQV9GSU5EX0FSR1MKICBfTElCUkVTU0xfVExTX0xJQl9OQU1FCkxJQlJFU1NMX1JPT1RfRElSCiAgX0VYVFJBX0ZJTkRfQVJHUwpMSUJSRVNTTF9MSUJSQVJJRVMKTElCUkVTU0xfVExTX0xJQlJBUlkKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkVTU0xfQ1JZUFRPX0xJQlJBUlkKTElCUkVTU0xfRk9VTkQKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfQ1JZUFRPX0xJQlJBUlkKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkVTU0xfSU5DTFVERV9ESVIKTElCUkVTU0xfVExTX0xJQlJBUlkKTElCUkVTU0xfUk9PVF9ESVIKTElCUkFSWV9ESVIKTElCUkVTU0xfUk9PVF9ESVIKTElCUkVTU0xfUk9PVF9ESVIKTElCUkVTU0xfU1NMX0xJQlJBUlkKTElCUkFSWV9ESVIKTElCUkFSWV9QQVRICkxJQlJBUllfRElSCkxJQlJFU1NMX0xJQlJBUllfRElSCkxJQlJBUllfRElSCkxJQlJFU1NMX0lOQ0xVREVfRElSCkxJQlJFU1NMX0lOQ0xVREVfRElSAAAAAAAAAAA8DQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 12667,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"paste",
					null,
					"AQAAAFUCAAAAAAAAGgQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUCAAAAAAAAVQIAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAEYDAAAAAAAARgMAAAAAAAABAAAACg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcDAAAAAAAARwMAAAAAAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABgEAAAAAAAAGQQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"paste",
					null,
					"AQAAAL4bAAAAAAAAVx0AAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4bAAAAAAAAvhsAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAL4bAAAAAAAA2BsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4bAAAAAAAAvhsAAAAAAAAAAAAAAADwvw"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHEdAAAAAAAAch0AAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAD////////vfw"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAHEdAAAAAAAAcR0AAAAAAAABAAAAIA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIdAAAAAAAAch0AAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEdAAAAAAAAcx0AAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHEdAAAAAAAAcR0AAAAAAAABAAAAKHEdAAAAAAAAcR0AAAAAAAABAAAAKQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIdAAAAAAAAch0AAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAHEdAAAAAAAAch0AAAAAAAAAAAAAch0AAAAAAABzHQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEdAAAAAAAAcR0AAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAJcCAAAAAAAAnwIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcCAAAAAAAAlwIAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ8CAAAAAAAAoAIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8CAAAAAAAAnwIAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKACAAAAAAAAoAIAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAOMbAAAAAAAA6xsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMbAAAAAAAA4xsAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOsbAAAAAAAA7BsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsbAAAAAAAA6xsAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"paste",
					null,
					"AQAAAOMbAAAAAAAA7xsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMbAAAAAAAA4xsAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAO8bAAAAAAAA7xsAAAAAAAABAAAAbQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAbAAAAAAAA8BsAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA8BsAAAAAAADxGwAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					2,
					"left_delete",
					null,
					"AgAAAPAbAAAAAAAA8BsAAAAAAAABAAAALO8bAAAAAAAA7xsAAAAAAAABAAAAbQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEbAAAAAAAA8RsAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO8bAAAAAAAA8BsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8bAAAAAAAA7xsAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAbAAAAAAAA8BsAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "test-nanovg.js",
			"settings":
			{
				"buffer_size": 6907,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 10085 files for \"ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  234  \n  235    if(TARGET libmbedtls)\n  236:     #ExternalProject_Add_StepDependencies(libwebsockets configure libmbedtls)\n  237      #add_dependencies(libwebsockets libmbedtls)\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11  \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    4    include(ExternalProject)\n    5  \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193  \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   51    set(MBEDTLS_VERSION 2.27.0)\n   52  \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87  \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   51    set(LIBRESSL_VERSION 3.5.1)\n   52  \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87  \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    4    include(ExternalProject)\n    5  \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   12      include(ExternalProject)\n   13  \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  153  # if(BUILD_PIGPIO)\n  154  #   include(ExternalProject)\n  155: #   ExternalProject_Add(\n  156  #     pigpio\n  157  #     SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/pigpio\n  ...\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    4    include(ExternalProject)\n    5  \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   12      include(ExternalProject)\n   13  \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n27 matches across 11 files\n\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n24 matches across 11 files\n\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n24 matches across 11 files\n\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n24 matches across 11 files\n\n\nSearching 10085 files for \"BUILD_COMMAND\" (regex, case sensitive)\n\n0 matches\n\nSearching 10085 files for \"BUILD_COMMAND\" (regex, case sensitive)\n\n0 matches\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   13  \n   14  include(ExternalProject)\n   15: \n   16: ExternalProject_Add(\n   17    LabSound\n   18    SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/LabSound\"\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n25 matches across 12 files\n\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   13  \n   14  include(ExternalProject)\n   15: \n   16: ExternalProject_Add(\n   17    LabSound\n   18    SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/LabSound\"\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n25 matches across 12 files\n\n\nSearching 10085 files for \"^\\s*ExternalProject_\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n    9    else()\n   10      set(CURL_REPO \"https://github.com/curl/curl.git\")\n   11: \n   12:     ExternalProject_Add(\n   13        curl\n   14        SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/curl\"\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      libbrotli\n    8      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/brotli\n    .\n   23      #LOG_CONFIGURE ON\n   24      LOG_BUILD ON)\n   25: \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  191    message(\"libwebsockets configuration arguments:\\n\\t${ARGS}\")\n  192    string(REGEX REPLACE \"[ ]\" \";\" LIBWEBSOCKETS_ARGS \"${LIBWEBSOCKETS_ARGS}\")\n  193: \n  194:   ExternalProject_Add(\n  195      libwebsockets\n  196      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libwebsockets\n  ...\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   50  \n   51    set(MBEDTLS_VERSION 2.27.0)\n   52: \n   53:   ExternalProject_Add(\n   54      ${MBEDTLS_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mbedtls\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   50  \n   51    set(LIBRESSL_VERSION 3.5.1)\n   52: \n   53:   ExternalProject_Add(\n   54      ${LIBRESSL_TARGET_NAME}\n   55      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libressl\n   ..\n   79      #LOG_CONFIGURE ON\n   80      LOG_BUILD ON)\n   81: \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87: \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   22      # USES_TERMINAL_CONFIGURE OFF\n   23      USES_TERMINAL_BUILD ON)\n   24: \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   28        LOG_CONFIGURE ON\n   29        USES_TERMINAL_BUILD ON)\n   30: \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   13  \n   14  include(ExternalProject)\n   15: \n   16: ExternalProject_Add(\n   17    LabSound\n   18    SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/LabSound\"\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  191    if(BUILD_LIBARCHIVE)\n  192      include(ExternalProject)\n  193:     ExternalProject_Add(\n  194        libarchive\n  195        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libarchive\n  ...\n  418  if(BUILD_LIBSERIALPORT)\n  419    include(ExternalProject)\n  420:   ExternalProject_Add(\n  421      libserialport\n  422      SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libserialport\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n    3  \n    4    include(ExternalProject)\n    5: \n    6:   ExternalProject_Add(\n    7      glfw\n    8      SOURCE_DIR ${SOURCE}/glfw\n    .\n   29      # USES_TERMINAL_CONFIGURE OFF\n   30      USES_TERMINAL_BUILD ON)\n   31: \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   11  \n   12      include(ExternalProject)\n   13: \n   14:     ExternalProject_Add(\n   15        libgl3w\n   16        SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/gl3w\n   ..\n   34        LOG_CONFIGURE ON\n   35        USES_TERMINAL_BUILD ON)\n   36: \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n25 matches across 12 files\n\n\nSearching 10085 files for \"ExternalProject_Get_property\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n1 match in 1 file\n\n\nSearching 10085 files for \"ExternalProject_Get_property\" (regex)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n\n9 matches across 9 files\n\n\nSearching 10085 files for \"get_property\" (regex)\n\n~/Projects/plot-cv/data/qjs.structs.js:\n  351    get has_property() { return new BigUint64Array(this, 32)[0]; }\n  352  \n  353:   /* 40: JSValue (*)(JSContext *, JSValue, JSAtom, JSValue) get_property@8 */\n  354:   set get_property(v) { new BigUint64Array(this, 40)[0] = BigInt(v); }\n  355:   get get_property() { return new BigUint64Array(this, 40)[0]; }\n  356  \n  357    /* 48: int (*)(JSContext *, JSValue, JSAtom, JSValue, JSValue, int) set_property@8 */\n  ...\n  360  \n  361    toString() {\n  362:     const { get_own_property, get_own_property_names, delete_property, define_own_property, has_property, get_property, set_property } = this;\n  363: <skipped 174 characters> ...roperty},\\n\\t.define_own_property = ${define_own_property},\\n\\t.has_property = ${has_property},\\n\\t.get_property = ${get_property},\\n\\t.set_property = ${set_property}\\n}`;\n  364    }\n  365  }\n\n~/Projects/plot-cv/data/test-websocket.structs.js:\n  314    get has_property() { return new BigUint64Array(this, 32)[0]; }\n  315  \n  316:   /* 40: JSValue (*)(JSContext *, JSValue, JSAtom, JSValue) get_property@8 */\n  317:   set get_property(v) { new BigUint64Array(this, 40)[0] = BigInt(v); }\n  318:   get get_property() { return new BigUint64Array(this, 40)[0]; }\n  319  \n  320    /* 48: int (*)(JSContext *, JSValue, JSAtom, JSValue, JSValue, int) set_property@8 */\n  ...\n  323  \n  324    toString() {\n  325:     const { get_own_property, get_own_property_names, delete_property, define_own_property, has_property, get_property, set_property } = this;\n  326: <skipped 174 characters> ...roperty},\\n\\t.define_own_property = ${define_own_property},\\n\\t.has_property = ${has_property},\\n\\t.get_property = ${get_property},\\n\\t.set_property = ${set_property}\\n}`;\n  327    }\n  328  }\n\n~/Projects/plot-cv/quickjs/CMakeLists.txt:\n  676  \n  677  if(DLL_TARGETS)\n  678:   get_target_property(SO_OUTPUT ${SO_NAME} OUTPUT_NAME)\n  679:   get_target_property(SO_PREFIX ${SO_NAME} PREFIX)\n  680  \n  681    set(SHARED_LIBRARY_NAME \"${SO_PREFIX}${SO_OUTPUT}${CONFIG_SHEXT}\")\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  364      SOURCES\n  365      TYPE)\n  366:     get_target_property(VALUE \"${TARGET}\" \"${PROP}\")\n  367      if(VALUE)\n  368        message(\"${ESC}[1;33m${TARGET} ${ESC}[1;31m${PROP} = ${ESC}[1;36m'${VALUE}'${ESC}[0m\")\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt:\n  396  \t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n  397  \tendif()\n  398: \tget_property(_CURR DIRECTORY PROPERTY INCLUDE_DIRECTORIES) \n  399  \tset(_CMAKE_INC_LIST ${_CURR} PARENT_SCOPE)\n  400  \tif (LWS_LIB_BUILD_INC_PATHS)\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/CMakeLists.txt:\n  249  \n  250  if (LWS_WITH_SHARED)\n  251: \tget_target_property(LWS_LIB_INCLUDES websockets_shared INCLUDE_DIRECTORIES)\n  252  else()\n  253: \tget_target_property(LWS_LIB_INCLUDES websockets INCLUDE_DIRECTORIES)\n  254  endif()\n  255  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake:\n   16        include(${LIBWEBSOCKETS_DIR}/LibwebsocketsTargets.cmake)\n   17  \n   18:       get_target_property(pkgcfg_lib_LIBWEBSOCKETS_websockets websockets INTERFACE_LINK_LIBRARIES)\n   19:       get_target_property(LIBWEBSOCKETS_INCLUDE_DIR websockets INTERFACE_INCLUDE_DIRECTORIES)\n   20  \n   21        #set_target_properties(  websockets  PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  128        include(${WOLFSSL_DIR}/wolfssl-config.cmake)\n  129  \n  130:       get_target_property(pkgcfg_lib_WOLFSSL_wolfssl wolfssl IMPORTED_LOCATION_RELWITHDEBINFO)\n  131  \n  132        dirname(WOLFSSL_LIBRARIES_DIR ${pkgcfg_lib_WOLFSSL_wolfssl})\n  ...\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   92      endif()\n   93  \n   94:     get_target_property(LIBRESSL_LIBRARY_LOCATION libressl IMPORTED_LOCATION)\n   95  \n   96      if(EXISTS \"${LIBRESSL_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   89      endif()\n   90  \n   91:     get_target_property(MBEDTLS_LIBRARY_LOCATION mbedtls IMPORTED_LOCATION)\n   92  \n   93      if(EXISTS \"${MBEDTLS_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   40      endif()\n   41  \n   42:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   43      # dump(GL3W_LIBRARY_FILE)\n   44  \n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/ios-toolchain.cmake:\n  169  # Unset the FORCE on cache variables if in try_compile()\n  170  set(FORCE_CACHE FORCE)\n  171: get_property(_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n  172  if(_CMAKE_IN_TRY_COMPILE)\n  173    unset(FORCE_CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/CMakeLists.txt:\n   30  # Set a value type to properly display CMAKE_BUILD_TYPE on GUI if the\n   31  # value type is \"UNINITIALIZED\".\n   32: GET_PROPERTY(cached_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n   33  IF(\"${cached_type}\" STREQUAL \"UNINITIALIZED\")\n   34    SET(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING \"Build Type\" FORCE)\n   ..\n  381        # checked with are changed.\n  382        SET(VAR_WITH_LIB \"${VAR}_WITH_LIB\")\n  383:       GET_PROPERTY(PREV_VAR_WITH_LIB VARIABLE PROPERTY ${VAR_WITH_LIB})\n  384        IF(NOT \"${PREV_VAR_WITH_LIB}\" STREQUAL \"${LIBRARIES}\")\n  385          UNSET(${VAR} CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-modules/doc/html/search/all_a.js:\n  274    ['js_5fget_5ffilter_1065',['js_get_filter',['../group__quickjs-tree-walker.html#ga9a57dea2ccff73eb9fdd6700c6acdfe4',1,'quickjs-tree-walker.c']]],\n  275    ['js_5fget_5fpointer_1066',['js_get_pointer',['../group__quickjs-misc.html#ga51c98feba25e63832e794c134c9af445',1,'quickjs-misc.c']]],\n  276:   ['js_5fget_5fproperty_5fstring_1067',['js_get_property_string',['../group__utils.html#ga07f5403d3e222778ec46d7628c0a35ca',1,'utils.c']]],\n  277:   ['js_5fget_5fpropertyatom_5fvalue_1068',['js_get_propertyatom_value',['../group__utils.html#ga849fd1a65705ca6a5863b050c29c1cdb',1,'utils.c']]],\n  278:   ['js_5fget_5fpropertydescriptor_1069',['js_get_propertydescriptor',['../group__utils.html#gac5a8944eec6240b25a0f0159fb4b7b87',1,'utils.c']]],\n  279:   ['js_5fget_5fpropertyint_5fcstring_1070',['js_get_propertyint_cstring',['../group__utils.html#ga593b5c0c29f57abef8cea940d3ed8b50',1,'utils.c']]],\n  280:   ['js_5fget_5fpropertyint_5fint32_1071',['js_get_propertyint_int32',['../group__utils.html#ga6e5a646c99906ca3d89df842b4f9482e',1,'utils.c']]],\n  281:   ['js_5fget_5fpropertystr_5fatom_1072',['js_get_propertystr_atom',['../group__utils.html#ga21981d0e969333db3f2c574ff9826573',1,'utils.c']]],\n  282:   ['js_5fget_5fpropertystr_5fbool_1073',['js_get_propertystr_bool',['../group__utils.html#gad52fee6a05d1265b90121e2817cde299',1,'utils.c']]],\n  283:   ['js_5fget_5fpropertystr_5fcstring_1074',['js_get_propertystr_cstring',['../group__utils.html#ga748ac40a8615f221e09f26bc23c5957e',1,'utils.c']]],\n  284:   ['js_5fget_5fpropertystr_5fcstringlen_1075',['js_get_propertystr_cstringlen',['../group__utils.html#ga7c3807587be720cc0752a021757bddb3',1,'utils.c']]],\n  285:   ['js_5fget_5fpropertystr_5fint32_1076',['js_get_propertystr_int32',['../group__utils.html#ga6a02a310cf278f92f10c398352af53dc',1,'utils.c']]],\n  286:   ['js_5fget_5fpropertystr_5fint64_1077',['js_get_propertystr_int64',['../group__utils.html#gaa93394e0183e622fb2cc744aa4bea386',1,'utils.c']]],\n  287:   ['js_5fget_5fpropertystr_5fstring_1078',['js_get_propertystr_string',['../group__utils.html#ga49ef49db03a0d797b2639e130514ed56',1,'utils.c']]],\n  288:   ['js_5fget_5fpropertystr_5fstringlen_1079',['js_get_propertystr_stringlen',['../group__utils.html#ga66c824838eb791a0f3bcd46958f3a916',1,'utils.c']]],\n  289:   ['js_5fget_5fpropertystr_5fuint64_1080',['js_get_propertystr_uint64',['../group__utils.html#ga1f11c26a189f07d689344dede1997481',1,'utils.c']]],\n  290:   ['js_5fget_5fpropertyvalue_1081',['js_get_propertyvalue',['../group__utils.html#ga2c4ffcda06ab1b30bbf348ce71ae639b',1,'utils.h']]],\n  291    ['js_5fget_5ftostringtag_5fcstr_1082',['js_get_tostringtag_cstr',['../group__utils.html#ga083a2620abd6a484694d86a1b2ce9b9e',1,'utils.c']]],\n  292    ['js_5fget_5ftostringtag_5fstr_1083',['js_get_tostringtag_str',['../group__utils.html#gaf902a625c22765f9bc1dd4b971a46c72',1,'utils.h']]],\n  ...\n  427    ['js_5flist_5fget_1218',['js_list_get',['../group__quickjs-list.html#ga3b941e0286c927c0d413900331975887',1,'quickjs-list.c']]],\n  428    ['js_5flist_5fget_5fown_5fproperty_1219',['js_list_get_own_property',['../group__quickjs-list.html#ga804e4dde0a4006cac432ab7e4d65e326',1,'quickjs-list.c']]],\n  429:   ['js_5flist_5fget_5fproperty_1220',['js_list_get_property',['../group__quickjs-list.html#gaad9d7cef699ed25659d481c765c9648c',1,'quickjs-list.c']]],\n  430    ['js_5flist_5fhas_5fproperty_1221',['js_list_has_property',['../group__quickjs-list.html#gaab03ff25df75def60c8f337a4adefd42',1,'quickjs-list.c']]],\n  431    ['js_5flist_5finit_1222',['js_list_init',['../group__quickjs-list.html#ga22707dc80a8b3f6344e713adc4f71a9e',1,'quickjs-list.c']]],\n  ...\n  733    ['js_5fpointer_5fget_5fown_5fproperty_1524',['js_pointer_get_own_property',['../group__quickjs-pointer.html#ga46c346293afcaa12693e1fcda47962e7',1,'quickjs-pointer.c']]],\n  734    ['js_5fpointer_5fget_5fown_5fproperty_5fnames_1525',['js_pointer_get_own_property_names',['../group__quickjs-pointer.html#ga3b99e3d341da377533a7a183e963e0cf',1,'quickjs-pointer.c']]],\n  735:   ['js_5fpointer_5fget_5fproperty_1526',['js_pointer_get_property',['../group__quickjs-pointer.html#ga58db16feaf17ebcb5aaf56480833f8a3',1,'quickjs-pointer.c']]],\n  736    ['js_5fpointer_5fhas_5fproperty_1527',['js_pointer_has_property',['../group__quickjs-pointer.html#ga388de95f5f5f6203023d73f626e0eb4b',1,'quickjs-pointer.c']]],\n  737    ['js_5fpointer_5finit_1528',['js_pointer_init',['../group__quickjs-pointer.html#ga3e8afd327d34b74e4296a14663648068',1,'quickjs-pointer.c']]],\n\n~/Projects/plot-cv/quickjs/qjs-modules/doc/html/search/functions_a.js:\n  219    ['js_5fget_5ffilter_4300',['js_get_filter',['../group__quickjs-tree-walker.html#ga9a57dea2ccff73eb9fdd6700c6acdfe4',1,'quickjs-tree-walker.c']]],\n  220    ['js_5fget_5fpointer_4301',['js_get_pointer',['../group__quickjs-misc.html#ga51c98feba25e63832e794c134c9af445',1,'quickjs-misc.c']]],\n  221:   ['js_5fget_5fproperty_5fstring_4302',['js_get_property_string',['../group__utils.html#ga07f5403d3e222778ec46d7628c0a35ca',1,'utils.c']]],\n  222:   ['js_5fget_5fpropertyatom_5fvalue_4303',['js_get_propertyatom_value',['../group__utils.html#ga849fd1a65705ca6a5863b050c29c1cdb',1,'utils.c']]],\n  223:   ['js_5fget_5fpropertydescriptor_4304',['js_get_propertydescriptor',['../group__utils.html#gac5a8944eec6240b25a0f0159fb4b7b87',1,'utils.c']]],\n  224:   ['js_5fget_5fpropertyint_5fcstring_4305',['js_get_propertyint_cstring',['../group__utils.html#ga593b5c0c29f57abef8cea940d3ed8b50',1,'utils.c']]],\n  225:   ['js_5fget_5fpropertyint_5fint32_4306',['js_get_propertyint_int32',['../group__utils.html#ga6e5a646c99906ca3d89df842b4f9482e',1,'utils.c']]],\n  226:   ['js_5fget_5fpropertystr_5fatom_4307',['js_get_propertystr_atom',['../group__utils.html#ga21981d0e969333db3f2c574ff9826573',1,'utils.c']]],\n  227:   ['js_5fget_5fpropertystr_5fbool_4308',['js_get_propertystr_bool',['../group__utils.html#gad52fee6a05d1265b90121e2817cde299',1,'utils.c']]],\n  228:   ['js_5fget_5fpropertystr_5fcstring_4309',['js_get_propertystr_cstring',['../group__utils.html#ga748ac40a8615f221e09f26bc23c5957e',1,'utils.c']]],\n  229:   ['js_5fget_5fpropertystr_5fcstringlen_4310',['js_get_propertystr_cstringlen',['../group__utils.html#ga7c3807587be720cc0752a021757bddb3',1,'utils.c']]],\n  230:   ['js_5fget_5fpropertystr_5fint32_4311',['js_get_propertystr_int32',['../group__utils.html#ga6a02a310cf278f92f10c398352af53dc',1,'utils.c']]],\n  231:   ['js_5fget_5fpropertystr_5fint64_4312',['js_get_propertystr_int64',['../group__utils.html#gaa93394e0183e622fb2cc744aa4bea386',1,'utils.c']]],\n  232:   ['js_5fget_5fpropertystr_5fstring_4313',['js_get_propertystr_string',['../group__utils.html#ga49ef49db03a0d797b2639e130514ed56',1,'utils.c']]],\n  233:   ['js_5fget_5fpropertystr_5fstringlen_4314',['js_get_propertystr_stringlen',['../group__utils.html#ga66c824838eb791a0f3bcd46958f3a916',1,'utils.c']]],\n  234:   ['js_5fget_5fpropertystr_5fuint64_4315',['js_get_propertystr_uint64',['../group__utils.html#ga1f11c26a189f07d689344dede1997481',1,'utils.c']]],\n  235:   ['js_5fget_5fpropertyvalue_4316',['js_get_propertyvalue',['../group__utils.html#ga2c4ffcda06ab1b30bbf348ce71ae639b',1,'utils.h']]],\n  236    ['js_5fget_5ftostringtag_5fcstr_4317',['js_get_tostringtag_cstr',['../group__utils.html#ga083a2620abd6a484694d86a1b2ce9b9e',1,'utils.c']]],\n  237    ['js_5fget_5ftostringtag_5fstr_4318',['js_get_tostringtag_str',['../group__utils.html#gaf902a625c22765f9bc1dd4b971a46c72',1,'utils.h']]],\n  ...\n  358    ['js_5flist_5fget_4439',['js_list_get',['../group__quickjs-list.html#ga3b941e0286c927c0d413900331975887',1,'quickjs-list.c']]],\n  359    ['js_5flist_5fget_5fown_5fproperty_4440',['js_list_get_own_property',['../group__quickjs-list.html#ga804e4dde0a4006cac432ab7e4d65e326',1,'quickjs-list.c']]],\n  360:   ['js_5flist_5fget_5fproperty_4441',['js_list_get_property',['../group__quickjs-list.html#gaad9d7cef699ed25659d481c765c9648c',1,'quickjs-list.c']]],\n  361    ['js_5flist_5fhas_5fproperty_4442',['js_list_has_property',['../group__quickjs-list.html#gaab03ff25df75def60c8f337a4adefd42',1,'quickjs-list.c']]],\n  362    ['js_5flist_5finit_4443',['js_list_init',['../group__quickjs-list.html#ga22707dc80a8b3f6344e713adc4f71a9e',1,'quickjs-list.c']]],\n  ...\n  610    ['js_5fpointer_5fget_5fown_5fproperty_4691',['js_pointer_get_own_property',['../group__quickjs-pointer.html#ga46c346293afcaa12693e1fcda47962e7',1,'quickjs-pointer.c']]],\n  611    ['js_5fpointer_5fget_5fown_5fproperty_5fnames_4692',['js_pointer_get_own_property_names',['../group__quickjs-pointer.html#ga3b99e3d341da377533a7a183e963e0cf',1,'quickjs-pointer.c']]],\n  612:   ['js_5fpointer_5fget_5fproperty_4693',['js_pointer_get_property',['../group__quickjs-pointer.html#ga58db16feaf17ebcb5aaf56480833f8a3',1,'quickjs-pointer.c']]],\n  613    ['js_5fpointer_5fhas_5fproperty_4694',['js_pointer_has_property',['../group__quickjs-pointer.html#ga388de95f5f5f6203023d73f626e0eb4b',1,'quickjs-pointer.c']]],\n  614    ['js_5fpointer_5finit_4695',['js_pointer_init',['../group__quickjs-pointer.html#ga3e8afd327d34b74e4296a14663648068',1,'quickjs-pointer.c']]],\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   46      endif()\n   47  \n   48:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   49      #dump(GL3W_LIBRARY_FILE)\n   50  \n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/CMakeLists.txt:\n  155  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11) # See ocv_target_include_directories() implementation\n  156    if(TARGET ${the_module})\n  157:     get_target_property(__include_dirs ${the_module} INCLUDE_DIRECTORIES)\n  158      include_directories(${__include_dirs})\n  159    endif()\n\n~/Projects/plot-cv/qjs-opencv/opencv/CMakeLists.txt:\n 1679        set(__msg \"YES (${INF_ENGINE_RELEASE} / ${INF_ENGINE_VERSION})\")\n 1680        ocv_get_imported_target(ie_target \"${ie_target}\")\n 1681:       get_target_property(_lib ${ie_target} IMPORTED_LOCATION)\n 1682:       get_target_property(_lib_imp_rel ${ie_target} IMPORTED_IMPLIB_RELEASE)\n 1683:       get_target_property(_lib_imp_dbg ${ie_target} IMPORTED_IMPLIB_DEBUG)\n 1684:       get_target_property(_lib_rel ${ie_target} IMPORTED_LOCATION_RELEASE)\n 1685:       get_target_property(_lib_dbg ${ie_target} IMPORTED_LOCATION_DEBUG)\n 1686        ocv_build_features_string(\n 1687          _lib\n ....\n 1712          ELSE\n 1713          \"unknown\")\n 1714:       get_target_property(_inc ${ie_target} INTERFACE_INCLUDE_DIRECTORIES)\n 1715        status(\"    Inference Engine:\" \"${__msg}\")\n 1716        status(\"        * libs:\" \"${_lib}\")\n ....\n 1724        ocv_get_imported_target(__target ngraph::ngraph)\n 1725        set(__msg \"YES (${ngraph_VERSION})\")\n 1726:       get_target_property(_lib ${__target} IMPORTED_LOCATION)\n 1727:       get_target_property(_lib_imp_rel ${__target} IMPORTED_IMPLIB_RELEASE)\n 1728:       get_target_property(_lib_imp_dbg ${__target} IMPORTED_IMPLIB_DEBUG)\n 1729:       get_target_property(_lib_rel ${__target} IMPORTED_LOCATION_RELEASE)\n 1730:       get_target_property(_lib_dbg ${__target} IMPORTED_LOCATION_DEBUG)\n 1731        ocv_build_features_string(\n 1732          _lib\n ....\n 1757          ELSE\n 1758          \"unknown\")\n 1759:       get_target_property(_inc ${__target} INTERFACE_INCLUDE_DIRECTORIES)\n 1760        status(\"    nGraph:\" \"${__msg}\")\n 1761        status(\"        * libs:\" \"${_lib}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/openjpeg/CMakeLists.txt:\n  190  set(OPENJPEG_MINOR_VERSION ${OPENJPEG_VERSION_MINOR} PARENT_SCOPE)\n  191  set(OPENJPEG_BUILD_VERSION ${OPENJPEG_VERSION_BUILD} PARENT_SCOPE)\n  192: get_target_property(_openjpeg_include_dirs ${OPENJPEG_LIBRARY_NAME} INCLUDE_DIRECTORIES)\n  193  set(OPENJPEG_INCLUDE_DIRS  ${_openjpeg_include_dirs} PARENT_SCOPE)\n  194  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/carotene/hal/CMakeLists.txt:\n   67  include_directories(\"${CAROTENE_DIR}/include\")\n   68  \n   69: get_target_property(carotene_defs carotene_objs INTERFACE_COMPILE_DEFINITIONS)\n   70  set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS ${carotene_defs})\n   71  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n   30      if((__variableName MATCHES \"${regex}\" OR __variableName_lower MATCHES \"${regex_lower}\")\n   31         AND NOT __variableName_lower MATCHES \"^__\")\n   32:       get_property(__value VARIABLE PROPERTY \"${__variableName}\")\n   33        set(__VARS \"${__VARS}${__variableName}=${__value}\\n\")\n   34      endif()\n   ..\n  311  endfunction()\n  312  \n  313: function(ocv_append_target_property target prop)\n  314:   get_target_property(val ${target} ${prop})\n  315    if(val)\n  316      set(val \"${val} ${ARGN}\")\n  ...\n  413  macro(ocv_clear_internal_cache_vars)\n  414    foreach(_var ${ARGN})\n  415:     get_property(_propertySet CACHE ${_var} PROPERTY TYPE SET)\n  416      if(_propertySet)\n  417:       get_property(_type CACHE ${_var} PROPERTY TYPE)\n  418        if(_type STREQUAL \"INTERNAL\")\n  419          message(\"Cleaning INTERNAL cached variable: ${_var}\")\n  ...\n 1254      if(INSTALL_PDB AND NOT INSTALL_IGNORE_PDB AND NOT OPENCV_${__target}_PDB_SKIP)\n 1255        set(__location_key \"ARCHIVE\") # static libs\n 1256:       get_target_property(__target_type ${__target} TYPE)\n 1257        if(\"${__target_type}\" STREQUAL \"SHARED_LIBRARY\")\n 1258          set(__location_key \"RUNTIME\") # shared libs (.DLL)\n ....\n 1303              install(\n 1304                FILES\n 1305:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1306                DESTINATION \"${__dst}\"\n 1307                CONFIGURATIONS Debug\n ....\n 1310              install(\n 1311                FILES\n 1312:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1313                DESTINATION \"${__dst}\"\n 1314                CONFIGURATIONS Release\n ....\n 1629  function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631:   get_target_property(__type \"${__result}\" TYPE)\n 1632    if(__type STREQUAL \"INTERFACE_LIBRARY\")\n 1633:     get_target_property(__libs \"${__result}\" INTERFACE_LINK_LIBRARIES)\n 1634      list(GET __libs 0 __interface)\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n ....\n 1657    foreach(m ${OPENCV_MODULES_PUBLIC})\n 1658      if(TARGET ${m})\n 1659:       get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES)\n 1660        if(NOT deps)\n 1661          set(deps \"\")\n ....\n 1680          endif()\n 1681          if(TARGET ${dep})\n 1682:           get_target_property(_type ${dep} TYPE)\n 1683            if((_type STREQUAL \"STATIC_LIBRARY\" AND BUILD_SHARED_LIBS) OR _type STREQUAL\n 1684                                                                          \"INTERFACE_LIBRARY\"\n ....\n 1687              # nothing\n 1688            else()\n 1689:             get_target_property(_output ${dep} IMPORTED_LOCATION)\n 1690              if(NOT _output)\n 1691:               get_target_property(_output ${dep} ARCHIVE_OUTPUT_DIRECTORY)\n 1692:               get_target_property(_output_name ${dep} OUTPUT_NAME)\n 1693                if(NOT _output_name)\n 1694                  set(_output_name \"${dep}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVModule.cmake:\n 1036    endif()\n 1037  \n 1038:   get_target_property(_target_type ${the_module} TYPE)\n 1039    if(OPENCV_MODULE_${the_module}_CLASS STREQUAL \"PUBLIC\" AND\n 1040        (\"${_target_type}\" STREQUAL \"SHARED_LIBRARY\" OR (NOT BUILD_SHARED_LIBS OR NOT INSTALL_CREATE_DISTRIB)))\n ....\n 1332        )\n 1333  \n 1334:       ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"__OPENCV_TESTS=1\")\n 1335  \n 1336        if(ENABLE_SOLUTION_FOLDERS)\n ....\n 1339  \n 1340        if(OPENCV_TEST_BIGDATA)\n 1341:         ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"OPENCV_TEST_BIGDATA=1\")\n 1342        endif()\n 1343  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVPCHSupport.cmake:\n   39    if(CV_GCC)\n   40  \n   41:     get_target_property(_targetType ${_PCH_current_target} TYPE)\n   42      if(${_targetType} STREQUAL SHARED_LIBRARY AND NOT WIN32)\n   43        list(APPEND ${_out_compile_flags} \"-fPIC\")\n   44      endif()\n   45  \n   46:     # Processed via $<TARGET_PROPERTY:target,COMPILE_DEFINITIONS>\n   47:     #GET_PROPERTY(_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\n   48:     #GET_TARGET_PROPERTY(_target_definitions ${_PCH_current_target} COMPILE_DEFINITIONS)\n   49  \n   50:     get_target_property(_cxx_standard ${_PCH_current_target} CXX_STANDARD)\n   51      if(_cxx_standard)\n   52:       get_target_property(_cxx_extensions ${_PCH_current_target} CXX_EXTENSIONS)\n   53        if(_cxx_extensions)\n   54          list(APPEND ${_out_compile_flags} \"${CMAKE_CXX${_cxx_standard}_EXTENSION_COMPILE_OPTION}\")\n   ..\n   74    endforeach(item)\n   75  \n   76:   get_target_property(DIRINC ${_PCH_current_target} INCLUDE_DIRECTORIES)\n   77    foreach(item ${DIRINC})\n   78      ocv_is_opencv_directory(__result ${item})\n   ..\n  194    endif()\n  195  \n  196:   get_target_property(_sources ${_targetName} SOURCES)\n  197    foreach(src ${_sources})\n  198      if(NOT \"${src}\" MATCHES \"\\\\.mm$\" AND NOT \"${src}\" MATCHES \"\\\\.rc$\")\n  ...\n  243    list(APPEND _compile_FLAGS \"${_PCH_include_prefix}\\\"${_path}\\\"\")\n  244  \n  245:   get_target_property(type ${_targetName} TYPE)\n  246    if(type STREQUAL \"SHARED_LIBRARY\")\n  247:     get_target_property(__DEFINES ${_targetName} DEFINE_SYMBOL)\n  248      if(NOT __DEFINES MATCHES __DEFINES-NOTFOUND)\n  249        list(APPEND _compile_FLAGS \"${_PCH_define_prefix}${__DEFINES}\")\n  ...\n  252  \n  253    if(type STREQUAL \"SHARED_LIBRARY\" OR type STREQUAL \"STATIC_LIBRARY\")\n  254:     get_target_property(__pic ${_targetName} POSITION_INDEPENDENT_CODE)\n  255      if(__pic AND CMAKE_CXX_COMPILE_OPTIONS_PIC AND NOT OPENCV_SKIP_PCH_PIC_HANDLING\n  256         AND NOT OPENCV_SKIP_PCH_PIC_HANDLING_${_targetName})\n  ...\n  258      endif()\n  259    elseif(type STREQUAL \"EXECUTABLE\")\n  260:     get_target_property(__pie ${_targetName} POSITION_INDEPENDENT_CODE)\n  261      if(__pie AND CMAKE_CXX_COMPILE_OPTIONS_PIE AND NOT OPENCV_SKIP_PCH_PIE_HANDLING\n  262         AND NOT OPENCV_SKIP_PCH_PIE_HANDLING_${_targetName})\n  ...\n  265    endif()\n  266  \n  267:   get_target_property(DIRINC ${_targetName} INCLUDE_DIRECTORIES)\n  268    set_target_properties(${_targetName}_pch_dephelp PROPERTIES INCLUDE_DIRECTORIES \"${DIRINC}\")\n  269  \n  ...\n  291    tail -n1 \\$0\n  292  fi\n  293: ${_command} '-D$<JOIN:$<TARGET_PROPERTY:${_targetName},COMPILE_DEFINITIONS>,' '-D>'\n  294  \")\n  295    get_filename_component(_outdir ${_output} PATH)\n  ...\n  340      # and I don't want to specify /F- for each moc/res/ui generated files (using Qt)\n  341  \n  342:     get_target_property(_sources ${_targetName} SOURCES)\n  343      foreach(src ${_sources})\n  344        if(\"${src}\" MATCHES \"\\\\.c(pp|xx)?$\")\n  ...\n  355  \n  356      #also include ${oldProps} to have the same compile options\n  357:     get_target_property(oldProps ${_targetName} COMPILE_FLAGS)\n  358      if(oldProps MATCHES NOTFOUND)\n  359        set(oldProps \"\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLAPACK.cmake:\n   82      )\n   83        # workaround DEFAULTLIB:tbb12.lib issue\n   84:       get_target_property(_tbb_lib tbb IMPORTED_LOCATION)\n   85        if(NOT _tbb_lib)\n   86:         get_target_property(_tbb_lib tbb IMPORTED_LOCATION_RELEASE)\n   87        endif()\n   88        if(_tbb_lib AND NOT OPENCV_SKIP_WORKAROUND_MKL_LINK_DIRECTORIES_TBB)\n   ..\n  102      # TODO add cache for try_compile() inputs/results\n  103  \n  104:     get_property(__link_directories DIRECTORY PROPERTY LINK_DIRECTORIES)\n  105      if(LAPACK_LINK_LIBRARIES)\n  106        list(APPEND __link_directories ${LAPACK_LINK_LIBRARIES})\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptimizations.cmake:\n  788          target_include_directories(\n  789            ${TARGET_BASE_NAME}_${OPT}\n  790:           PRIVATE $<TARGET_PROPERTY:${TARGET_BASE_NAME},INCLUDE_DIRECTORIES>)\n  791          #list(APPEND __result_libs ${TARGET_BASE_NAME}_${OPT})\n  792          list(APPEND __result \"$<TARGET_OBJECTS:${TARGET_BASE_NAME}_${OPT}>\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVGenAndroidMK.cmake:\n   30        set(lib_name \"${lib}\")\n   31        if(TARGET ${lib})\n   32:         get_target_property(_output ${lib} IMPORTED_LOCATION)\n   33          if(NOT _output)\n   34:           get_target_property(output_name ${lib} OUTPUT_NAME)\n   35            if(output_name)\n   36              set(lib_name \"${output_name}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptions.cmake:\n   15    if(CCACHE_PROGRAM)\n   16      message(STATUS \"Looking for ccache - found (${CCACHE_PROGRAM})\")\n   17:     get_property(__OLD_RULE_LAUNCH_COMPILE GLOBAL PROPERTY RULE_LAUNCH_COMPILE)\n   18      if(CMAKE_GENERATOR MATCHES \"Xcode\")\n   19        configure_file(\"${CMAKE_CURRENT_LIST_DIR}/templates/xcode-launch-c.in\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   26          return()\n   27        endif()\n   28:       get_target_property(_lib TBB::tbb IMPORTED_LOCATION_RELEASE)\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30:       get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31        add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   76    if(NOT BUILD_PROTOBUF)\n   77      if(TARGET \"${Protobuf_LIBRARIES}\")\n   78:       get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION_RELEASE)\n   79        if(NOT __location)\n   80:         get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION)\n   81        endif()\n   82      elseif(Protobuf_LIBRARY)\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/objdetect/CMakeLists.txt:\n   14  \n   15  if(HAVE_QUIRC)\n   16:     get_property(QUIRC_INCLUDE GLOBAL PROPERTY QUIRC_INCLUDE_DIR)\n   17      ocv_include_directories(${QUIRC_INCLUDE})\n   18      ocv_target_link_libraries(${the_module} quirc)\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/ios/cmake/Toolchains/common-ios-toolchain.cmake:\n    1  # load settings in case of \"try compile\"\n    2  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    3: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    4  if(__IN_TRY_COMPILE)\n    5    set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/linux/gnu.toolchain.cmake:\n    3  # load settings in case of \"try compile\"\n    4  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    5: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    6  if(__IN_TRY_COMPILE)\n    7    include(\"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\" OPTIONAL) # CMAKE_BINARY_DIR is different\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/android/android.toolchain.cmake:\n  202  \n  203  # inherit settings in recursive loads\n  204: get_property( _CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )\n  205  if( _CMAKE_IN_TRY_COMPILE )\n  206   include( \"${CMAKE_CURRENT_SOURCE_DIR}/../android.toolchain.config.cmake\" OPTIONAL )\n\n141 matches across 39 files\n\n\nSearching 1044 files for \"get_property\" (regex)\n\n~/Projects/plot-cv/quickjs/CMakeLists.txt:\n  676  \n  677  if(DLL_TARGETS)\n  678:   get_target_property(SO_OUTPUT ${SO_NAME} OUTPUT_NAME)\n  679:   get_target_property(SO_PREFIX ${SO_NAME} PREFIX)\n  680  \n  681    set(SHARED_LIBRARY_NAME \"${SO_PREFIX}${SO_OUTPUT}${CONFIG_SHEXT}\")\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  364      SOURCES\n  365      TYPE)\n  366:     get_target_property(VALUE \"${TARGET}\" \"${PROP}\")\n  367      if(VALUE)\n  368        message(\"${ESC}[1;33m${TARGET} ${ESC}[1;31m${PROP} = ${ESC}[1;36m'${VALUE}'${ESC}[0m\")\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt:\n  396  \t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n  397  \tendif()\n  398: \tget_property(_CURR DIRECTORY PROPERTY INCLUDE_DIRECTORIES) \n  399  \tset(_CMAKE_INC_LIST ${_CURR} PARENT_SCOPE)\n  400  \tif (LWS_LIB_BUILD_INC_PATHS)\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/CMakeLists.txt:\n  249  \n  250  if (LWS_WITH_SHARED)\n  251: \tget_target_property(LWS_LIB_INCLUDES websockets_shared INCLUDE_DIRECTORIES)\n  252  else()\n  253: \tget_target_property(LWS_LIB_INCLUDES websockets INCLUDE_DIRECTORIES)\n  254  endif()\n  255  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake:\n   16        include(${LIBWEBSOCKETS_DIR}/LibwebsocketsTargets.cmake)\n   17  \n   18:       get_target_property(pkgcfg_lib_LIBWEBSOCKETS_websockets websockets INTERFACE_LINK_LIBRARIES)\n   19:       get_target_property(LIBWEBSOCKETS_INCLUDE_DIR websockets INTERFACE_INCLUDE_DIRECTORIES)\n   20  \n   21        #set_target_properties(  websockets  PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  128        include(${WOLFSSL_DIR}/wolfssl-config.cmake)\n  129  \n  130:       get_target_property(pkgcfg_lib_WOLFSSL_wolfssl wolfssl IMPORTED_LOCATION_RELWITHDEBINFO)\n  131  \n  132        dirname(WOLFSSL_LIBRARIES_DIR ${pkgcfg_lib_WOLFSSL_wolfssl})\n  ...\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   92      endif()\n   93  \n   94:     get_target_property(LIBRESSL_LIBRARY_LOCATION libressl IMPORTED_LOCATION)\n   95  \n   96      if(EXISTS \"${LIBRESSL_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   89      endif()\n   90  \n   91:     get_target_property(MBEDTLS_LIBRARY_LOCATION mbedtls IMPORTED_LOCATION)\n   92  \n   93      if(EXISTS \"${MBEDTLS_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   40      endif()\n   41  \n   42:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   43      # dump(GL3W_LIBRARY_FILE)\n   44  \n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/ios-toolchain.cmake:\n  169  # Unset the FORCE on cache variables if in try_compile()\n  170  set(FORCE_CACHE FORCE)\n  171: get_property(_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n  172  if(_CMAKE_IN_TRY_COMPILE)\n  173    unset(FORCE_CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/CMakeLists.txt:\n   30  # Set a value type to properly display CMAKE_BUILD_TYPE on GUI if the\n   31  # value type is \"UNINITIALIZED\".\n   32: GET_PROPERTY(cached_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n   33  IF(\"${cached_type}\" STREQUAL \"UNINITIALIZED\")\n   34    SET(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING \"Build Type\" FORCE)\n   ..\n  381        # checked with are changed.\n  382        SET(VAR_WITH_LIB \"${VAR}_WITH_LIB\")\n  383:       GET_PROPERTY(PREV_VAR_WITH_LIB VARIABLE PROPERTY ${VAR_WITH_LIB})\n  384        IF(NOT \"${PREV_VAR_WITH_LIB}\" STREQUAL \"${LIBRARIES}\")\n  385          UNSET(${VAR} CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   46      endif()\n   47  \n   48:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   49      #dump(GL3W_LIBRARY_FILE)\n   50  \n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/CMakeLists.txt:\n  155  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11) # See ocv_target_include_directories() implementation\n  156    if(TARGET ${the_module})\n  157:     get_target_property(__include_dirs ${the_module} INCLUDE_DIRECTORIES)\n  158      include_directories(${__include_dirs})\n  159    endif()\n\n~/Projects/plot-cv/qjs-opencv/opencv/CMakeLists.txt:\n 1679        set(__msg \"YES (${INF_ENGINE_RELEASE} / ${INF_ENGINE_VERSION})\")\n 1680        ocv_get_imported_target(ie_target \"${ie_target}\")\n 1681:       get_target_property(_lib ${ie_target} IMPORTED_LOCATION)\n 1682:       get_target_property(_lib_imp_rel ${ie_target} IMPORTED_IMPLIB_RELEASE)\n 1683:       get_target_property(_lib_imp_dbg ${ie_target} IMPORTED_IMPLIB_DEBUG)\n 1684:       get_target_property(_lib_rel ${ie_target} IMPORTED_LOCATION_RELEASE)\n 1685:       get_target_property(_lib_dbg ${ie_target} IMPORTED_LOCATION_DEBUG)\n 1686        ocv_build_features_string(\n 1687          _lib\n ....\n 1712          ELSE\n 1713          \"unknown\")\n 1714:       get_target_property(_inc ${ie_target} INTERFACE_INCLUDE_DIRECTORIES)\n 1715        status(\"    Inference Engine:\" \"${__msg}\")\n 1716        status(\"        * libs:\" \"${_lib}\")\n ....\n 1724        ocv_get_imported_target(__target ngraph::ngraph)\n 1725        set(__msg \"YES (${ngraph_VERSION})\")\n 1726:       get_target_property(_lib ${__target} IMPORTED_LOCATION)\n 1727:       get_target_property(_lib_imp_rel ${__target} IMPORTED_IMPLIB_RELEASE)\n 1728:       get_target_property(_lib_imp_dbg ${__target} IMPORTED_IMPLIB_DEBUG)\n 1729:       get_target_property(_lib_rel ${__target} IMPORTED_LOCATION_RELEASE)\n 1730:       get_target_property(_lib_dbg ${__target} IMPORTED_LOCATION_DEBUG)\n 1731        ocv_build_features_string(\n 1732          _lib\n ....\n 1757          ELSE\n 1758          \"unknown\")\n 1759:       get_target_property(_inc ${__target} INTERFACE_INCLUDE_DIRECTORIES)\n 1760        status(\"    nGraph:\" \"${__msg}\")\n 1761        status(\"        * libs:\" \"${_lib}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/openjpeg/CMakeLists.txt:\n  190  set(OPENJPEG_MINOR_VERSION ${OPENJPEG_VERSION_MINOR} PARENT_SCOPE)\n  191  set(OPENJPEG_BUILD_VERSION ${OPENJPEG_VERSION_BUILD} PARENT_SCOPE)\n  192: get_target_property(_openjpeg_include_dirs ${OPENJPEG_LIBRARY_NAME} INCLUDE_DIRECTORIES)\n  193  set(OPENJPEG_INCLUDE_DIRS  ${_openjpeg_include_dirs} PARENT_SCOPE)\n  194  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/carotene/hal/CMakeLists.txt:\n   67  include_directories(\"${CAROTENE_DIR}/include\")\n   68  \n   69: get_target_property(carotene_defs carotene_objs INTERFACE_COMPILE_DEFINITIONS)\n   70  set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS ${carotene_defs})\n   71  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n   30      if((__variableName MATCHES \"${regex}\" OR __variableName_lower MATCHES \"${regex_lower}\")\n   31         AND NOT __variableName_lower MATCHES \"^__\")\n   32:       get_property(__value VARIABLE PROPERTY \"${__variableName}\")\n   33        set(__VARS \"${__VARS}${__variableName}=${__value}\\n\")\n   34      endif()\n   ..\n  311  endfunction()\n  312  \n  313: function(ocv_append_target_property target prop)\n  314:   get_target_property(val ${target} ${prop})\n  315    if(val)\n  316      set(val \"${val} ${ARGN}\")\n  ...\n  413  macro(ocv_clear_internal_cache_vars)\n  414    foreach(_var ${ARGN})\n  415:     get_property(_propertySet CACHE ${_var} PROPERTY TYPE SET)\n  416      if(_propertySet)\n  417:       get_property(_type CACHE ${_var} PROPERTY TYPE)\n  418        if(_type STREQUAL \"INTERNAL\")\n  419          message(\"Cleaning INTERNAL cached variable: ${_var}\")\n  ...\n 1254      if(INSTALL_PDB AND NOT INSTALL_IGNORE_PDB AND NOT OPENCV_${__target}_PDB_SKIP)\n 1255        set(__location_key \"ARCHIVE\") # static libs\n 1256:       get_target_property(__target_type ${__target} TYPE)\n 1257        if(\"${__target_type}\" STREQUAL \"SHARED_LIBRARY\")\n 1258          set(__location_key \"RUNTIME\") # shared libs (.DLL)\n ....\n 1303              install(\n 1304                FILES\n 1305:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1306                DESTINATION \"${__dst}\"\n 1307                CONFIGURATIONS Debug\n ....\n 1310              install(\n 1311                FILES\n 1312:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1313                DESTINATION \"${__dst}\"\n 1314                CONFIGURATIONS Release\n ....\n 1629  function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631:   get_target_property(__type \"${__result}\" TYPE)\n 1632    if(__type STREQUAL \"INTERFACE_LIBRARY\")\n 1633:     get_target_property(__libs \"${__result}\" INTERFACE_LINK_LIBRARIES)\n 1634      list(GET __libs 0 __interface)\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n ....\n 1657    foreach(m ${OPENCV_MODULES_PUBLIC})\n 1658      if(TARGET ${m})\n 1659:       get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES)\n 1660        if(NOT deps)\n 1661          set(deps \"\")\n ....\n 1680          endif()\n 1681          if(TARGET ${dep})\n 1682:           get_target_property(_type ${dep} TYPE)\n 1683            if((_type STREQUAL \"STATIC_LIBRARY\" AND BUILD_SHARED_LIBS) OR _type STREQUAL\n 1684                                                                          \"INTERFACE_LIBRARY\"\n ....\n 1687              # nothing\n 1688            else()\n 1689:             get_target_property(_output ${dep} IMPORTED_LOCATION)\n 1690              if(NOT _output)\n 1691:               get_target_property(_output ${dep} ARCHIVE_OUTPUT_DIRECTORY)\n 1692:               get_target_property(_output_name ${dep} OUTPUT_NAME)\n 1693                if(NOT _output_name)\n 1694                  set(_output_name \"${dep}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVModule.cmake:\n 1036    endif()\n 1037  \n 1038:   get_target_property(_target_type ${the_module} TYPE)\n 1039    if(OPENCV_MODULE_${the_module}_CLASS STREQUAL \"PUBLIC\" AND\n 1040        (\"${_target_type}\" STREQUAL \"SHARED_LIBRARY\" OR (NOT BUILD_SHARED_LIBS OR NOT INSTALL_CREATE_DISTRIB)))\n ....\n 1332        )\n 1333  \n 1334:       ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"__OPENCV_TESTS=1\")\n 1335  \n 1336        if(ENABLE_SOLUTION_FOLDERS)\n ....\n 1339  \n 1340        if(OPENCV_TEST_BIGDATA)\n 1341:         ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"OPENCV_TEST_BIGDATA=1\")\n 1342        endif()\n 1343  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVPCHSupport.cmake:\n   39    if(CV_GCC)\n   40  \n   41:     get_target_property(_targetType ${_PCH_current_target} TYPE)\n   42      if(${_targetType} STREQUAL SHARED_LIBRARY AND NOT WIN32)\n   43        list(APPEND ${_out_compile_flags} \"-fPIC\")\n   44      endif()\n   45  \n   46:     # Processed via $<TARGET_PROPERTY:target,COMPILE_DEFINITIONS>\n   47:     #GET_PROPERTY(_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\n   48:     #GET_TARGET_PROPERTY(_target_definitions ${_PCH_current_target} COMPILE_DEFINITIONS)\n   49  \n   50:     get_target_property(_cxx_standard ${_PCH_current_target} CXX_STANDARD)\n   51      if(_cxx_standard)\n   52:       get_target_property(_cxx_extensions ${_PCH_current_target} CXX_EXTENSIONS)\n   53        if(_cxx_extensions)\n   54          list(APPEND ${_out_compile_flags} \"${CMAKE_CXX${_cxx_standard}_EXTENSION_COMPILE_OPTION}\")\n   ..\n   74    endforeach(item)\n   75  \n   76:   get_target_property(DIRINC ${_PCH_current_target} INCLUDE_DIRECTORIES)\n   77    foreach(item ${DIRINC})\n   78      ocv_is_opencv_directory(__result ${item})\n   ..\n  194    endif()\n  195  \n  196:   get_target_property(_sources ${_targetName} SOURCES)\n  197    foreach(src ${_sources})\n  198      if(NOT \"${src}\" MATCHES \"\\\\.mm$\" AND NOT \"${src}\" MATCHES \"\\\\.rc$\")\n  ...\n  243    list(APPEND _compile_FLAGS \"${_PCH_include_prefix}\\\"${_path}\\\"\")\n  244  \n  245:   get_target_property(type ${_targetName} TYPE)\n  246    if(type STREQUAL \"SHARED_LIBRARY\")\n  247:     get_target_property(__DEFINES ${_targetName} DEFINE_SYMBOL)\n  248      if(NOT __DEFINES MATCHES __DEFINES-NOTFOUND)\n  249        list(APPEND _compile_FLAGS \"${_PCH_define_prefix}${__DEFINES}\")\n  ...\n  252  \n  253    if(type STREQUAL \"SHARED_LIBRARY\" OR type STREQUAL \"STATIC_LIBRARY\")\n  254:     get_target_property(__pic ${_targetName} POSITION_INDEPENDENT_CODE)\n  255      if(__pic AND CMAKE_CXX_COMPILE_OPTIONS_PIC AND NOT OPENCV_SKIP_PCH_PIC_HANDLING\n  256         AND NOT OPENCV_SKIP_PCH_PIC_HANDLING_${_targetName})\n  ...\n  258      endif()\n  259    elseif(type STREQUAL \"EXECUTABLE\")\n  260:     get_target_property(__pie ${_targetName} POSITION_INDEPENDENT_CODE)\n  261      if(__pie AND CMAKE_CXX_COMPILE_OPTIONS_PIE AND NOT OPENCV_SKIP_PCH_PIE_HANDLING\n  262         AND NOT OPENCV_SKIP_PCH_PIE_HANDLING_${_targetName})\n  ...\n  265    endif()\n  266  \n  267:   get_target_property(DIRINC ${_targetName} INCLUDE_DIRECTORIES)\n  268    set_target_properties(${_targetName}_pch_dephelp PROPERTIES INCLUDE_DIRECTORIES \"${DIRINC}\")\n  269  \n  ...\n  291    tail -n1 \\$0\n  292  fi\n  293: ${_command} '-D$<JOIN:$<TARGET_PROPERTY:${_targetName},COMPILE_DEFINITIONS>,' '-D>'\n  294  \")\n  295    get_filename_component(_outdir ${_output} PATH)\n  ...\n  340      # and I don't want to specify /F- for each moc/res/ui generated files (using Qt)\n  341  \n  342:     get_target_property(_sources ${_targetName} SOURCES)\n  343      foreach(src ${_sources})\n  344        if(\"${src}\" MATCHES \"\\\\.c(pp|xx)?$\")\n  ...\n  355  \n  356      #also include ${oldProps} to have the same compile options\n  357:     get_target_property(oldProps ${_targetName} COMPILE_FLAGS)\n  358      if(oldProps MATCHES NOTFOUND)\n  359        set(oldProps \"\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLAPACK.cmake:\n   82      )\n   83        # workaround DEFAULTLIB:tbb12.lib issue\n   84:       get_target_property(_tbb_lib tbb IMPORTED_LOCATION)\n   85        if(NOT _tbb_lib)\n   86:         get_target_property(_tbb_lib tbb IMPORTED_LOCATION_RELEASE)\n   87        endif()\n   88        if(_tbb_lib AND NOT OPENCV_SKIP_WORKAROUND_MKL_LINK_DIRECTORIES_TBB)\n   ..\n  102      # TODO add cache for try_compile() inputs/results\n  103  \n  104:     get_property(__link_directories DIRECTORY PROPERTY LINK_DIRECTORIES)\n  105      if(LAPACK_LINK_LIBRARIES)\n  106        list(APPEND __link_directories ${LAPACK_LINK_LIBRARIES})\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptimizations.cmake:\n  788          target_include_directories(\n  789            ${TARGET_BASE_NAME}_${OPT}\n  790:           PRIVATE $<TARGET_PROPERTY:${TARGET_BASE_NAME},INCLUDE_DIRECTORIES>)\n  791          #list(APPEND __result_libs ${TARGET_BASE_NAME}_${OPT})\n  792          list(APPEND __result \"$<TARGET_OBJECTS:${TARGET_BASE_NAME}_${OPT}>\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVGenAndroidMK.cmake:\n   30        set(lib_name \"${lib}\")\n   31        if(TARGET ${lib})\n   32:         get_target_property(_output ${lib} IMPORTED_LOCATION)\n   33          if(NOT _output)\n   34:           get_target_property(output_name ${lib} OUTPUT_NAME)\n   35            if(output_name)\n   36              set(lib_name \"${output_name}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptions.cmake:\n   15    if(CCACHE_PROGRAM)\n   16      message(STATUS \"Looking for ccache - found (${CCACHE_PROGRAM})\")\n   17:     get_property(__OLD_RULE_LAUNCH_COMPILE GLOBAL PROPERTY RULE_LAUNCH_COMPILE)\n   18      if(CMAKE_GENERATOR MATCHES \"Xcode\")\n   19        configure_file(\"${CMAKE_CURRENT_LIST_DIR}/templates/xcode-launch-c.in\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   26          return()\n   27        endif()\n   28:       get_target_property(_lib TBB::tbb IMPORTED_LOCATION_RELEASE)\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30:       get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31        add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   76    if(NOT BUILD_PROTOBUF)\n   77      if(TARGET \"${Protobuf_LIBRARIES}\")\n   78:       get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION_RELEASE)\n   79        if(NOT __location)\n   80:         get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION)\n   81        endif()\n   82      elseif(Protobuf_LIBRARY)\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/objdetect/CMakeLists.txt:\n   14  \n   15  if(HAVE_QUIRC)\n   16:     get_property(QUIRC_INCLUDE GLOBAL PROPERTY QUIRC_INCLUDE_DIR)\n   17      ocv_include_directories(${QUIRC_INCLUDE})\n   18      ocv_target_link_libraries(${the_module} quirc)\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/ios/cmake/Toolchains/common-ios-toolchain.cmake:\n    1  # load settings in case of \"try compile\"\n    2  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    3: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    4  if(__IN_TRY_COMPILE)\n    5    set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/linux/gnu.toolchain.cmake:\n    3  # load settings in case of \"try compile\"\n    4  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    5: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    6  if(__IN_TRY_COMPILE)\n    7    include(\"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\" OPTIONAL) # CMAKE_BINARY_DIR is different\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/android/android.toolchain.cmake:\n  202  \n  203  # inherit settings in recursive loads\n  204: get_property( _CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )\n  205  if( _CMAKE_IN_TRY_COMPILE )\n  206   include( \"${CMAKE_CURRENT_SOURCE_DIR}/../android.toolchain.config.cmake\" OPTIONAL )\n\n95 matches across 35 files\n\n\nSearching 1044 files for \"ExternalProject_Add_Step\" (regex)\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  234  \n  235    if(TARGET libmbedtls)\n  236:     #ExternalProject_Add_StepDependencies(libwebsockets configure libmbedtls)\n  237      #add_dependencies(libwebsockets libmbedtls)\n  238    endif(TARGET libmbedtls)\n  239    if(TARGET libbrotli)\n  240:     ExternalProject_Add_StepDependencies(libwebsockets configure libbrotli)\n  241      #add_dependencies(libwebsockets libbrotli)\n  242    endif(TARGET libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  339  \n  340    if(ARGN)\n  341:     ExternalProject_Add_StepDependencies(libwebsockets build ${ARGN})\n  342    endif(ARGN)\n  343  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${MBEDTLS_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87  \n   88:   ExternalProject_Add_Step(${MBEDTLS_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target clean)\n   89  \n   90    add_custom_target(\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   83  \n   84    if(ARGN)\n   85:     ExternalProject_Add_StepDependencies(${LIBRESSL_TARGET_NAME} build ${ARGN})\n   86    endif(ARGN)\n   87  \n   88:   ExternalProject_Add_Step(${LIBRESSL_TARGET_NAME} COMMAND ${CMAKE_COMMAND} --build . --target\n   89                                                             clean)\n   90  \n\n7 matches across 4 files\n\n$\nSearching 1044 files for \"get_target_property\" (regex)\n\n~/Projects/plot-cv/quickjs/CMakeLists.txt:\n  676  \n  677  if(DLL_TARGETS)\n  678:   get_target_property(SO_OUTPUT ${SO_NAME} OUTPUT_NAME)\n  679:   get_target_property(SO_PREFIX ${SO_NAME} PREFIX)\n  680  \n  681    set(SHARED_LIBRARY_NAME \"${SO_PREFIX}${SO_OUTPUT}${CONFIG_SHEXT}\")\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  364      SOURCES\n  365      TYPE)\n  366:     get_target_property(VALUE \"${TARGET}\" \"${PROP}\")\n  367      if(VALUE)\n  368        message(\"${ESC}[1;33m${TARGET} ${ESC}[1;31m${PROP} = ${ESC}[1;36m'${VALUE}'${ESC}[0m\")\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/CMakeLists.txt:\n  249  \n  250  if (LWS_WITH_SHARED)\n  251: \tget_target_property(LWS_LIB_INCLUDES websockets_shared INCLUDE_DIRECTORIES)\n  252  else()\n  253: \tget_target_property(LWS_LIB_INCLUDES websockets INCLUDE_DIRECTORIES)\n  254  endif()\n  255  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake:\n   16        include(${LIBWEBSOCKETS_DIR}/LibwebsocketsTargets.cmake)\n   17  \n   18:       get_target_property(pkgcfg_lib_LIBWEBSOCKETS_websockets websockets INTERFACE_LINK_LIBRARIES)\n   19:       get_target_property(LIBWEBSOCKETS_INCLUDE_DIR websockets INTERFACE_INCLUDE_DIRECTORIES)\n   20  \n   21        #set_target_properties(  websockets  PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  128        include(${WOLFSSL_DIR}/wolfssl-config.cmake)\n  129  \n  130:       get_target_property(pkgcfg_lib_WOLFSSL_wolfssl wolfssl IMPORTED_LOCATION_RELWITHDEBINFO)\n  131  \n  132        dirname(WOLFSSL_LIBRARIES_DIR ${pkgcfg_lib_WOLFSSL_wolfssl})\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   92      endif()\n   93  \n   94:     get_target_property(LIBRESSL_LIBRARY_LOCATION libressl IMPORTED_LOCATION)\n   95  \n   96      if(EXISTS \"${LIBRESSL_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   89      endif()\n   90  \n   91:     get_target_property(MBEDTLS_LIBRARY_LOCATION mbedtls IMPORTED_LOCATION)\n   92  \n   93      if(EXISTS \"${MBEDTLS_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   40      endif()\n   41  \n   42:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   43      # dump(GL3W_LIBRARY_FILE)\n   44  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   46      endif()\n   47  \n   48:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   49      #dump(GL3W_LIBRARY_FILE)\n   50  \n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/CMakeLists.txt:\n  155  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11) # See ocv_target_include_directories() implementation\n  156    if(TARGET ${the_module})\n  157:     get_target_property(__include_dirs ${the_module} INCLUDE_DIRECTORIES)\n  158      include_directories(${__include_dirs})\n  159    endif()\n\n~/Projects/plot-cv/qjs-opencv/opencv/CMakeLists.txt:\n 1679        set(__msg \"YES (${INF_ENGINE_RELEASE} / ${INF_ENGINE_VERSION})\")\n 1680        ocv_get_imported_target(ie_target \"${ie_target}\")\n 1681:       get_target_property(_lib ${ie_target} IMPORTED_LOCATION)\n 1682:       get_target_property(_lib_imp_rel ${ie_target} IMPORTED_IMPLIB_RELEASE)\n 1683:       get_target_property(_lib_imp_dbg ${ie_target} IMPORTED_IMPLIB_DEBUG)\n 1684:       get_target_property(_lib_rel ${ie_target} IMPORTED_LOCATION_RELEASE)\n 1685:       get_target_property(_lib_dbg ${ie_target} IMPORTED_LOCATION_DEBUG)\n 1686        ocv_build_features_string(\n 1687          _lib\n ....\n 1712          ELSE\n 1713          \"unknown\")\n 1714:       get_target_property(_inc ${ie_target} INTERFACE_INCLUDE_DIRECTORIES)\n 1715        status(\"    Inference Engine:\" \"${__msg}\")\n 1716        status(\"        * libs:\" \"${_lib}\")\n ....\n 1724        ocv_get_imported_target(__target ngraph::ngraph)\n 1725        set(__msg \"YES (${ngraph_VERSION})\")\n 1726:       get_target_property(_lib ${__target} IMPORTED_LOCATION)\n 1727:       get_target_property(_lib_imp_rel ${__target} IMPORTED_IMPLIB_RELEASE)\n 1728:       get_target_property(_lib_imp_dbg ${__target} IMPORTED_IMPLIB_DEBUG)\n 1729:       get_target_property(_lib_rel ${__target} IMPORTED_LOCATION_RELEASE)\n 1730:       get_target_property(_lib_dbg ${__target} IMPORTED_LOCATION_DEBUG)\n 1731        ocv_build_features_string(\n 1732          _lib\n ....\n 1757          ELSE\n 1758          \"unknown\")\n 1759:       get_target_property(_inc ${__target} INTERFACE_INCLUDE_DIRECTORIES)\n 1760        status(\"    nGraph:\" \"${__msg}\")\n 1761        status(\"        * libs:\" \"${_lib}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/openjpeg/CMakeLists.txt:\n  190  set(OPENJPEG_MINOR_VERSION ${OPENJPEG_VERSION_MINOR} PARENT_SCOPE)\n  191  set(OPENJPEG_BUILD_VERSION ${OPENJPEG_VERSION_BUILD} PARENT_SCOPE)\n  192: get_target_property(_openjpeg_include_dirs ${OPENJPEG_LIBRARY_NAME} INCLUDE_DIRECTORIES)\n  193  set(OPENJPEG_INCLUDE_DIRS  ${_openjpeg_include_dirs} PARENT_SCOPE)\n  194  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/carotene/hal/CMakeLists.txt:\n   67  include_directories(\"${CAROTENE_DIR}/include\")\n   68  \n   69: get_target_property(carotene_defs carotene_objs INTERFACE_COMPILE_DEFINITIONS)\n   70  set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS ${carotene_defs})\n   71  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n  312  \n  313  function(ocv_append_target_property target prop)\n  314:   get_target_property(val ${target} ${prop})\n  315    if(val)\n  316      set(val \"${val} ${ARGN}\")\n  ...\n 1254      if(INSTALL_PDB AND NOT INSTALL_IGNORE_PDB AND NOT OPENCV_${__target}_PDB_SKIP)\n 1255        set(__location_key \"ARCHIVE\") # static libs\n 1256:       get_target_property(__target_type ${__target} TYPE)\n 1257        if(\"${__target_type}\" STREQUAL \"SHARED_LIBRARY\")\n 1258          set(__location_key \"RUNTIME\") # shared libs (.DLL)\n ....\n 1629  function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631:   get_target_property(__type \"${__result}\" TYPE)\n 1632    if(__type STREQUAL \"INTERFACE_LIBRARY\")\n 1633:     get_target_property(__libs \"${__result}\" INTERFACE_LINK_LIBRARIES)\n 1634      list(GET __libs 0 __interface)\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n ....\n 1657    foreach(m ${OPENCV_MODULES_PUBLIC})\n 1658      if(TARGET ${m})\n 1659:       get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES)\n 1660        if(NOT deps)\n 1661          set(deps \"\")\n ....\n 1680          endif()\n 1681          if(TARGET ${dep})\n 1682:           get_target_property(_type ${dep} TYPE)\n 1683            if((_type STREQUAL \"STATIC_LIBRARY\" AND BUILD_SHARED_LIBS) OR _type STREQUAL\n 1684                                                                          \"INTERFACE_LIBRARY\"\n ....\n 1687              # nothing\n 1688            else()\n 1689:             get_target_property(_output ${dep} IMPORTED_LOCATION)\n 1690              if(NOT _output)\n 1691:               get_target_property(_output ${dep} ARCHIVE_OUTPUT_DIRECTORY)\n 1692:               get_target_property(_output_name ${dep} OUTPUT_NAME)\n 1693                if(NOT _output_name)\n 1694                  set(_output_name \"${dep}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVModule.cmake:\n 1036    endif()\n 1037  \n 1038:   get_target_property(_target_type ${the_module} TYPE)\n 1039    if(OPENCV_MODULE_${the_module}_CLASS STREQUAL \"PUBLIC\" AND\n 1040        (\"${_target_type}\" STREQUAL \"SHARED_LIBRARY\" OR (NOT BUILD_SHARED_LIBS OR NOT INSTALL_CREATE_DISTRIB)))\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVPCHSupport.cmake:\n   39    if(CV_GCC)\n   40  \n   41:     get_target_property(_targetType ${_PCH_current_target} TYPE)\n   42      if(${_targetType} STREQUAL SHARED_LIBRARY AND NOT WIN32)\n   43        list(APPEND ${_out_compile_flags} \"-fPIC\")\n   ..\n   46      # Processed via $<TARGET_PROPERTY:target,COMPILE_DEFINITIONS>\n   47      #GET_PROPERTY(_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\n   48:     #GET_TARGET_PROPERTY(_target_definitions ${_PCH_current_target} COMPILE_DEFINITIONS)\n   49  \n   50:     get_target_property(_cxx_standard ${_PCH_current_target} CXX_STANDARD)\n   51      if(_cxx_standard)\n   52:       get_target_property(_cxx_extensions ${_PCH_current_target} CXX_EXTENSIONS)\n   53        if(_cxx_extensions)\n   54          list(APPEND ${_out_compile_flags} \"${CMAKE_CXX${_cxx_standard}_EXTENSION_COMPILE_OPTION}\")\n   ..\n   74    endforeach(item)\n   75  \n   76:   get_target_property(DIRINC ${_PCH_current_target} INCLUDE_DIRECTORIES)\n   77    foreach(item ${DIRINC})\n   78      ocv_is_opencv_directory(__result ${item})\n   ..\n  194    endif()\n  195  \n  196:   get_target_property(_sources ${_targetName} SOURCES)\n  197    foreach(src ${_sources})\n  198      if(NOT \"${src}\" MATCHES \"\\\\.mm$\" AND NOT \"${src}\" MATCHES \"\\\\.rc$\")\n  ...\n  243    list(APPEND _compile_FLAGS \"${_PCH_include_prefix}\\\"${_path}\\\"\")\n  244  \n  245:   get_target_property(type ${_targetName} TYPE)\n  246    if(type STREQUAL \"SHARED_LIBRARY\")\n  247:     get_target_property(__DEFINES ${_targetName} DEFINE_SYMBOL)\n  248      if(NOT __DEFINES MATCHES __DEFINES-NOTFOUND)\n  249        list(APPEND _compile_FLAGS \"${_PCH_define_prefix}${__DEFINES}\")\n  ...\n  252  \n  253    if(type STREQUAL \"SHARED_LIBRARY\" OR type STREQUAL \"STATIC_LIBRARY\")\n  254:     get_target_property(__pic ${_targetName} POSITION_INDEPENDENT_CODE)\n  255      if(__pic AND CMAKE_CXX_COMPILE_OPTIONS_PIC AND NOT OPENCV_SKIP_PCH_PIC_HANDLING\n  256         AND NOT OPENCV_SKIP_PCH_PIC_HANDLING_${_targetName})\n  ...\n  258      endif()\n  259    elseif(type STREQUAL \"EXECUTABLE\")\n  260:     get_target_property(__pie ${_targetName} POSITION_INDEPENDENT_CODE)\n  261      if(__pie AND CMAKE_CXX_COMPILE_OPTIONS_PIE AND NOT OPENCV_SKIP_PCH_PIE_HANDLING\n  262         AND NOT OPENCV_SKIP_PCH_PIE_HANDLING_${_targetName})\n  ...\n  265    endif()\n  266  \n  267:   get_target_property(DIRINC ${_targetName} INCLUDE_DIRECTORIES)\n  268    set_target_properties(${_targetName}_pch_dephelp PROPERTIES INCLUDE_DIRECTORIES \"${DIRINC}\")\n  269  \n  ...\n  340      # and I don't want to specify /F- for each moc/res/ui generated files (using Qt)\n  341  \n  342:     get_target_property(_sources ${_targetName} SOURCES)\n  343      foreach(src ${_sources})\n  344        if(\"${src}\" MATCHES \"\\\\.c(pp|xx)?$\")\n  ...\n  355  \n  356      #also include ${oldProps} to have the same compile options\n  357:     get_target_property(oldProps ${_targetName} COMPILE_FLAGS)\n  358      if(oldProps MATCHES NOTFOUND)\n  359        set(oldProps \"\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLAPACK.cmake:\n   82      )\n   83        # workaround DEFAULTLIB:tbb12.lib issue\n   84:       get_target_property(_tbb_lib tbb IMPORTED_LOCATION)\n   85        if(NOT _tbb_lib)\n   86:         get_target_property(_tbb_lib tbb IMPORTED_LOCATION_RELEASE)\n   87        endif()\n   88        if(_tbb_lib AND NOT OPENCV_SKIP_WORKAROUND_MKL_LINK_DIRECTORIES_TBB)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVGenAndroidMK.cmake:\n   30        set(lib_name \"${lib}\")\n   31        if(TARGET ${lib})\n   32:         get_target_property(_output ${lib} IMPORTED_LOCATION)\n   33          if(NOT _output)\n   34:           get_target_property(output_name ${lib} OUTPUT_NAME)\n   35            if(output_name)\n   36              set(lib_name \"${output_name}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   26          return()\n   27        endif()\n   28:       get_target_property(_lib TBB::tbb IMPORTED_LOCATION_RELEASE)\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30:       get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31        add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   76    if(NOT BUILD_PROTOBUF)\n   77      if(TARGET \"${Protobuf_LIBRARIES}\")\n   78:       get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION_RELEASE)\n   79        if(NOT __location)\n   80:         get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION)\n   81        endif()\n   82      elseif(Protobuf_LIBRARY)\n\n58 matches across 20 files\n\n\nSearching 1044 files for \"(define|get|set)(|_target)_property\" (regex)\n\n~/Projects/plot-cv/CMakeLists.txt:\n    9  \n   10  if(CACHE{CMAKE_BUILD_TYPE})\n   11:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/3rdparty/glfw/CMakeLists.txt:\n   16  set(GLFW_VERSION_FULL \"${GLFW_VERSION}.${GLFW_VERSION_PATCH}${GLFW_VERSION_EXTRA}\")\n   17  \n   18: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   19  \n   20  option(BUILD_SHARED_LIBS \"Build shared libraries\" OFF)\n\n~/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/3rdparty/openal-soft/CMakeLists.txt:\n  849  # Build a library\n  850  ADD_LIBRARY(${LIBNAME} ${LIBTYPE} ${OPENAL_OBJS} ${ALC_OBJS} ${HEADERS})\n  851: SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY COMPILE_DEFINITIONS AL_BUILD_LIBRARY AL_ALEXT_PROTOTYPES)\n  852  IF(WIN32 AND ALSOFT_NO_UID_DEFS)\n  853:     SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY COMPILE_DEFINITIONS AL_NO_UID_DEFS)\n  854  ENDIF()\n  855: SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY INCLUDE_DIRECTORIES \"${OpenAL_SOURCE_DIR}/OpenAL32/Include\" \"${OpenAL_SOURCE_DIR}/Alc\")\n  856  IF(FLUIDSYNTH_FOUND)\n  857:     SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY INCLUDE_DIRECTORIES ${FLUIDSYNTH_INCLUDE_DIR})\n  858  ENDIF()\n  859  SET_TARGET_PROPERTIES(${LIBNAME} PROPERTIES VERSION ${LIB_VERSION}\n\n~/Projects/plot-cv/quickjs/CMakeLists.txt:\n    8  \n    9  if(CACHE{CMAKE_BUILD_TYPE})\n   10:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel\n   11                                                 RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   ..\n  676  \n  677  if(DLL_TARGETS)\n  678:   get_target_property(SO_OUTPUT ${SO_NAME} OUTPUT_NAME)\n  679:   get_target_property(SO_PREFIX ${SO_NAME} PREFIX)\n  680  \n  681    set(SHARED_LIBRARY_NAME \"${SO_PREFIX}${SO_OUTPUT}${CONFIG_SHEXT}\")\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  364      SOURCES\n  365      TYPE)\n  366:     get_target_property(VALUE \"${TARGET}\" \"${PROP}\")\n  367      if(VALUE)\n  368        message(\"${ESC}[1;33m${TARGET} ${ESC}[1;31m${PROP} = ${ESC}[1;36m'${VALUE}'${ESC}[0m\")\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt:\n  396  \t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n  397  \tendif()\n  398: \tget_property(_CURR DIRECTORY PROPERTY INCLUDE_DIRECTORIES) \n  399  \tset(_CMAKE_INC_LIST ${_CURR} PARENT_SCOPE)\n  400  \tif (LWS_LIB_BUILD_INC_PATHS)\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/contrib/iOS.cmake:\n  198  # This little macro lets you set any XCode specific property\n  199  macro (set_xcode_property TARGET XCODE_PROPERTY XCODE_VALUE)\n  200: \tset_property (TARGET ${TARGET} PROPERTY XCODE_ATTRIBUTE_${XCODE_PROPERTY} ${XCODE_VALUE})\n  201  endmacro (set_xcode_property)\n  202  \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-multi/CMakeLists.txt:\n  145  \t# confirm that we do fail with a one connection limit and no pipelining\n  146  \tadd_test(NAME http-client-multi-restrict-nopipe-fail COMMAND lws-minimal-http-client-multi --limit 1 -l --port ${PORT_HCM_SRV} -d1151)\n  147: \tset_property(TEST http-client-multi-restrict-nopipe-fail PROPERTY WILL_FAIL TRUE)\n  148  \tadd_test(NAME http-client-multi-restrict-h1-nopipe-fail COMMAND lws-minimal-http-client-multi --limit 1 --h1 -l --port ${PORT_HCM_SRV} -d1151)\n  149: \tset_property(TEST http-client-multi-restrict-h1-nopipe-fail PROPERTY WILL_FAIL TRUE)\n  150  \n  151  \tset_tests_properties(http-client-multi-restrict-pipe\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/CMakeLists.txt:\n  106  \n  107  \t\t# Set test app specific defines.\n  108: \t\tset_property(TARGET ${TEST_NAME}\n  109  \t\t\t\t\tPROPERTY COMPILE_DEFINITIONS\n  110  \t\t\t\t\t\tINSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/share\"\n  ...\n  161  \t\t\ttarget_compile_definitions(test-server-extpoll PRIVATE LWS_BUILDING_SHARED)\n  162  \t\t\t# Set defines for this executable only.\n  163: \t\t\tset_property(\n  164  \t\t\t\tTARGET test-server-extpoll\n  165  \t\t\t\tPROPERTY COMPILE_DEFINITIONS \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt:\n   63  \n   64  # Set test app specific defines.\n   65: set_property(TARGET ${PLUGIN_NAME}\n   66  \t     PROPERTY COMPILE_DEFINITIONS\n   67  \t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lwsws/CMakeLists.txt:\n   54  \ttarget_include_directories(lwsws PRIVATE \"${LWS_LIB_INCLUDES}\" ${LWS_LIB_BUILD_INC_PATHS})\n   55  \t# Set test app specific defines.\n   56: \tset_property(TARGET lwsws\n   57  \t\t     PROPERTY COMPILE_DEFINITIONS\n   58  \t\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/share\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/CMakeLists.txt:\n  219  \tif (WIN32)\n  220  \t\t# Compile as DLL (export function declarations)\n  221: \t\tset_property(\n  222  \t\t\tTARGET websockets_shared\n  223  \t\t\tPROPERTY COMPILE_DEFINITIONS\n  ...\n  227  \n  228  \tif (APPLE)\n  229: \t\tset_property(TARGET websockets_shared PROPERTY MACOSX_RPATH YES)\n  230  \tendif()\n  231  \n  ...\n  249  \n  250  if (LWS_WITH_SHARED)\n  251: \tget_target_property(LWS_LIB_INCLUDES websockets_shared INCLUDE_DIRECTORIES)\n  252  else()\n  253: \tget_target_property(LWS_LIB_INCLUDES websockets INCLUDE_DIRECTORIES)\n  254  endif()\n  255  \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/event-libs/CMakeLists.txt:\n   34  \n   35  \tif (APPLE)\n   36: \t\tset_property(TARGET websockets-${PLUGIN_NAME} PROPERTY MACOSX_RPATH YES)\n   37  \tendif()\n   38  \n   ..\n   49  \n   50  \t# Set test app specific defines.\n   51: \t#\tset_property(TARGET ${PLUGIN_NAME}\n   52  \t#\t     PROPERTY COMPILE_DEFINITIONS\n   53  \t#\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/evlib-plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/CMakeLists.txt:\n   73  \t\t\ttarget_include_directories(${PLUGIN_NAME} PRIVATE ${PLUGIN_INCLUDE}\n   74  \t\t\t\t\t\t\t\t\t  ${LWS_LIB_BUILD_INC_PATHS})\n   75: \t\t\tset_property(TARGET ${PLUGIN_NAME}\n   76  \t\t\t\t     PROPERTY COMPILE_DEFINITIONS\n   77  \t\t\t\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt:\n  186  foreach(lib IN LISTS BROTLI_SHARED_LIBS BROTLI_STATIC_LIBS)\n  187    target_link_libraries(${lib} ${LIBM_LIBRARY})\n  188:   set_property(TARGET ${lib} APPEND PROPERTY INCLUDE_DIRECTORIES ${BROTLI_INCLUDE_DIRS})\n  189    set_target_properties(${lib} PROPERTIES\n  190      VERSION \"${BROTLI_ABI_COMPATIBILITY}.${BROTLI_ABI_AGE}.${BROTLI_ABI_REVISION}\"\n  ...\n  193      set_target_properties(${lib} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)\n  194    endif()\n  195:   set_property(TARGET ${lib} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES \"${BROTLI_INCLUDE_DIRS}\")\n  196  endforeach()\n  197  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n   23                   -DCMAKE_POSITION_INDEPENDENT_CODE=ON\n   24        CMAKE_CACHE_ARGS -DLIBCURL_NO_SHARED:STRING=libcurl -DBUILD_SHARED_LIBS:BOOL=OFF)\n   25:     set_property(DIRECTORY PROPERTY EP_STEP_TARGETS build)\n   26    endif()\n   27  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake:\n   16        include(${LIBWEBSOCKETS_DIR}/LibwebsocketsTargets.cmake)\n   17  \n   18:       get_target_property(pkgcfg_lib_LIBWEBSOCKETS_websockets websockets INTERFACE_LINK_LIBRARIES)\n   19:       get_target_property(LIBWEBSOCKETS_INCLUDE_DIR websockets INTERFACE_INCLUDE_DIRECTORIES)\n   20  \n   21        #set_target_properties(  websockets  PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  128        include(${WOLFSSL_DIR}/wolfssl-config.cmake)\n  129  \n  130:       get_target_property(pkgcfg_lib_WOLFSSL_wolfssl wolfssl IMPORTED_LOCATION_RELWITHDEBINFO)\n  131  \n  132        dirname(WOLFSSL_LIBRARIES_DIR ${pkgcfg_lib_WOLFSSL_wolfssl})\n  ...\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   92      endif()\n   93  \n   94:     get_target_property(LIBRESSL_LIBRARY_LOCATION libressl IMPORTED_LOCATION)\n   95  \n   96      if(EXISTS \"${LIBRESSL_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   89      endif()\n   90  \n   91:     get_target_property(MBEDTLS_LIBRARY_LOCATION mbedtls IMPORTED_LOCATION)\n   92  \n   93      if(EXISTS \"${MBEDTLS_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   ..\n   97    add_library(${MBEDTLS_LIBRARY} STATIC IMPORTED)\n   98    add_dependencies(${MBEDTLS_LIBRARY} ${MBEDTLS_TARGET_NAME})\n   99:   set_property(TARGET ${MBEDTLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libmbedtls.a)\n  100  \n  101    set(MBEDTLS_X509_LIBRARY mbedx509 CACHE STRING \"MbedTLS x509 library\" FORCE)\n  102    add_library(${MBEDTLS_X509_LIBRARY} STATIC IMPORTED)\n  103    add_dependencies(${MBEDTLS_X509_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  104:   set_property(TARGET ${MBEDTLS_X509_LIBRARY} PROPERTY IMPORTED_LOCATION\n  105                                                         ${BINARY_DIR}/libmbedx509.a)\n  106  \n  ...\n  108    add_library(${MBEDTLS_CRYPTO_LIBRARY} STATIC IMPORTED)\n  109    add_dependencies(${MBEDTLS_CRYPTO_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  110:   set_property(TARGET ${MBEDTLS_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  111                                                           ${BINARY_DIR}/libmbedcrypto.a)\n  112  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   ..\n   98    add_library(${LIBRESSL_CRYPTO_LIBRARY} STATIC IMPORTED)\n   99    add_dependencies(${LIBRESSL_CRYPTO_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  100:   set_property(TARGET ${LIBRESSL_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  101                                                            ${BINARY_DIR}/libcrypto.a)\n  102  \n  ...\n  104    add_library(${LIBRESSL_SSL_LIBRARY} STATIC IMPORTED)\n  105    add_dependencies(${LIBRESSL_SSL_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  106:   set_property(TARGET ${LIBRESSL_SSL_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libssl.a)\n  107  \n  108    set(LIBRESSL_TLS_LIBRARY libtls CACHE STRING \"LibreSSL tls library\" FORCE)\n  109    add_library(${LIBRESSL_TLS_LIBRARY} STATIC IMPORTED)\n  110    add_dependencies(${LIBRESSL_TLS_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  111:   set_property(TARGET ${LIBRESSL_TLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libtls.a)\n  112  \n  113    set(LIBRESSL_LIBRARIES\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-http/cmake/FindQuickJS.cmake:\n    8  \n    9  set(CMAKE_INSTALL_PREFIX \"${QUICKJS_PREFIX}\" CACHE PATH \"Install directory\" FORCE)\n   10: set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   11  \n   12  message(\"QuickJS install directory: ${QUICKJS_PREFIX}\")\n\n~/Projects/plot-cv/quickjs/qjs-glfw/glfw/CMakeLists.txt:\n   11  endif()\n   12  \n   13: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   14  \n   15  string(COMPARE EQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_SOURCE_DIR}\" GLFW_STANDALONE)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/FindQuickJS.cmake:\n   32  \n   33    if(CACHE{CMAKE_BUILD_TYPE})\n   34:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   35    endif(CACHE{CMAKE_BUILD_TYPE})\n   36  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   40      endif()\n   41  \n   42:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   43      # dump(GL3W_LIBRARY_FILE)\n   44  \n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n~/Projects/plot-cv/quickjs/qjs-sound/stk/CMakeLists.txt:\n    9      set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Choose the type of build.\" FORCE)\n   10  endif()\n   11: SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Release\" \"Debug\" \"RelWithDebInfo\" \"MinSizeRel\") \n   12  message(\"Build type: \" ${CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/quickjs/qjs-sound/cmake/FindQuickJS.cmake:\n   39  \n   40    if(CACHE{CMAKE_BUILD_TYPE})\n   41:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release\n   42                                                   MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/CMakeLists.txt:\n   70  endif()\n   71  \n   72: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   73  \n   74  add_definitions(${_LAB_CXX_DEFINITIONS})\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/LabSound.cmake:\n  132          PUBLIC_HEADER \"${labsnd_core_h} ${labsnd_extended_h}\"\n  133      )\n  134:     set_property(SOURCE ${labsnd_core_h}\n  135          PROPERTY MACOSX_PACKAGE_LOCATION Headers/LabSound/core)\n  136:     set_property(SOURCE ${labsnd_extended_h}\n  137          PROPERTY MACOSX_PACKAGE_LOCATION Headers/LabSound/extended)\n  138  endif()\n  ...\n  160          RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\"\n  161      )\n  162:     set_property(TARGET ${proj} PROPERTY CXX_STANDARD 17)\n  163      if(WIN32)\n  164          if(MSVC)\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/examples.cmake:\n   92  target_compile_definitions(${proj} PRIVATE SAMPLE_SRC_DIR=\"${LABSOUND_ROOT}/assets\")\n   93  \n   94: set_property(TARGET LabSoundExample PROPERTY FOLDER \"examples\")\n   95  \n   96  install(TARGETS LabSoundExample\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/ios-toolchain.cmake:\n  169  # Unset the FORCE on cache variables if in try_compile()\n  170  set(FORCE_CACHE FORCE)\n  171: get_property(_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n  172  if(_CMAKE_IN_TRY_COMPILE)\n  173    unset(FORCE_CACHE)\n  ...\n  638    set(XCODE_RELVERSION_I \"${XCODE_RELVERSION}\")\n  639    if(XCODE_RELVERSION_I STREQUAL \"All\")\n  640:     set_property(TARGET ${TARGET} PROPERTY\n  641      XCODE_ATTRIBUTE_${XCODE_PROPERTY} \"${XCODE_VALUE}\")\n  642    else()\n  643:     set_property(TARGET ${TARGET} PROPERTY\n  644      XCODE_ATTRIBUTE_${XCODE_PROPERTY}[variant=${XCODE_RELVERSION_I}] \"${XCODE_VALUE}\")\n  645    endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/src/CMakeLists.txt:\n   74  \n   75  # Set public header\n   76: set_property(TARGET samplerate PROPERTY PUBLIC_HEADER ${PROJECT_SOURCE_DIR}/include/samplerate.h)\n   77  \n   78  if(BUILD_SHARED_LIBS)\n   ..\n   94          if(CMAKE_VERSION VERSION_LESS 3.13)\n   95            # This works \n   96:           set_property(TARGET samplerate APPEND_STRING PROPERTY\n   97              LINK_FLAGS \"-Wl,--version-script,${CMAKE_CURRENT_BINARY_DIR}/Version_script\")\n   98          else()\n\n~/Projects/plot-cv/quickjs/cmake/wasi.toolchain.cmake:\n    2  set(CMAKE_SYSTEM_NAME GNU)\n    3  \n    4: set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS FALSE)\n    5  \n    6  set(CMAKE_C_COMPILER /opt/wasienv/bin/wasicc)\n\n~/Projects/plot-cv/quickjs/cmake/FindQuickJS.cmake:\n   39  \n   40    if(CACHE{CMAKE_BUILD_TYPE})\n   41:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release\n   42                                                   MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  454  \n  455  if(CACHE{CMAKE_BUILD_TYPE})\n  456:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n  457  endif(CACHE{CMAKE_BUILD_TYPE})\n  458  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/CMakeLists.txt:\n   30  # Set a value type to properly display CMAKE_BUILD_TYPE on GUI if the\n   31  # value type is \"UNINITIALIZED\".\n   32: GET_PROPERTY(cached_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n   33  IF(\"${cached_type}\" STREQUAL \"UNINITIALIZED\")\n   34    SET(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING \"Build Type\" FORCE)\n   ..\n  381        # checked with are changed.\n  382        SET(VAR_WITH_LIB \"${VAR}_WITH_LIB\")\n  383:       GET_PROPERTY(PREV_VAR_WITH_LIB VARIABLE PROPERTY ${VAR_WITH_LIB})\n  384        IF(NOT \"${PREV_VAR_WITH_LIB}\" STREQUAL \"${LIBRARIES}\")\n  385          UNSET(${VAR} CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/libarchive/test/CMakeLists.txt:\n  300    ADD_EXECUTABLE(libarchive_test ${libarchive_test_SOURCES})\n  301    TARGET_LINK_LIBRARIES(libarchive_test archive_static ${ADDITIONAL_LIBS})\n  302:   SET_PROPERTY(TARGET libarchive_test PROPERTY COMPILE_DEFINITIONS\n  303      LIBARCHIVE_STATIC LIST_H)\n  304  \n  ...\n  308    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n  309      ${CMAKE_CURRENT_LIST_FILE} ${libarchive_test_SOURCES})\n  310:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n  311      ${CMAKE_CURRENT_BINARY_DIR})\n  312  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/cpio/test/CMakeLists.txt:\n   75      TARGET_LINK_LIBRARIES(bsdcpio_test ${TEST_ACL_LIBS})\n   76    ENDIF(ENABLE_ACL)\n   77:   SET_PROPERTY(TARGET bsdcpio_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   78  \n   79    #\n   ..\n   82    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   83      ${CMAKE_CURRENT_LIST_FILE} ${bsdcpio_test_SOURCES})\n   84:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   85      ${CMAKE_CURRENT_BINARY_DIR})\n   86  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/tar/test/CMakeLists.txt:\n   93      TARGET_LINK_LIBRARIES(bsdtar_test ${TEST_ACL_LIBS})\n   94    ENDIF(ENABLE_ACL)\n   95:   SET_PROPERTY(TARGET bsdtar_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   96  \n   97    #\n   ..\n  100    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n  101      ${CMAKE_CURRENT_LIST_FILE} ${bsdtar_test_SOURCES})\n  102:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n  103      ${CMAKE_CURRENT_BINARY_DIR})\n  104  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/unzip/test/CMakeLists.txt:\n   46      TARGET_LINK_LIBRARIES(bsdunzip_test ${TEST_ACL_LIBS})\n   47    ENDIF(ENABLE_ACL)\n   48:   SET_PROPERTY(TARGET bsdunzip_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   49  \n   50    #\n   ..\n   53    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   54      ${CMAKE_CURRENT_LIST_FILE} ${bsdunzip_test_SOURCES})\n   55:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   56      ${CMAKE_CURRENT_BINARY_DIR})\n   57  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/cat/test/CMakeLists.txt:\n   43      TARGET_LINK_LIBRARIES(bsdcat_test ${TEST_ACL_LIBS})\n   44    ENDIF(ENABLE_ACL)\n   45:   SET_PROPERTY(TARGET bsdcat_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   46  \n   47    #\n   ..\n   50    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   51      ${CMAKE_CURRENT_LIST_FILE} ${bsdcat_test_SOURCES})\n   52:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   53      ${CMAKE_CURRENT_BINARY_DIR})\n   54  \n\n~/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt:\n    9  include_directories(include)\n   10  add_library(tutf8e STATIC src/tutf8e.c)\n   11: set_property(TARGET tutf8e PROPERTY C_STANDARD 99)\n   12: set_property(TARGET tutf8e PROPERTY C_EXTENSIONS OFF)\n   13  \n   14  add_executable(tutf8e-test test/test.c)\n   15  target_link_libraries(tutf8e-test tutf8e)\n   16: set_property(TARGET tutf8e-test PROPERTY C_STANDARD 99)\n   17: set_property(TARGET tutf8e-test PROPERTY C_EXTENSIONS ON)\n   18  \n\n~/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/glfw/CMakeLists.txt:\n   11  endif()\n   12  \n   13: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   14  \n   15  string(COMPARE EQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_SOURCE_DIR}\" GLFW_STANDALONE)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   46      endif()\n   47  \n   48:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   49      #dump(GL3W_LIBRARY_FILE)\n   50  \n\n~/Projects/plot-cv/quickjs/qjs-nanovg/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-ffi/FindQuickJS.cmake:\n   39    # set(CMAKE_INSTALL_PREFIX \"${QUICKJS_PREFIX}\" CACHE PATH \"Install directory\")\n   40  \n   41:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   42  \n   43    set(CMAKE_REQUIRED_QUIET TRUE)\n\n~/Projects/plot-cv/quickjs/qjs-ffi/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/inst/x86_64-linux-debug/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/cmake/CCache.cmake:\n   15    if(CMAKE_VERSION VERSION_LESS 3.4)\n   16      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   17:     set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   18:     set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   19    else()\n   20      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   ..\n   31    if(CMAKE_VERSION VERSION_GREATER 3.3)\n   32      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   33:     set_property(TARGET \"${target}\" PROPERTY C_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   34:     set_property(TARGET \"${target}\" PROPERTY CXX_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   35    else()\n   36      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   37:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   38:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   39    endif()\n   40  endfunction()\n\n~/Projects/plot-cv/cmake/FindQuickJS.cmake:\n   40  \n   41    if(CACHE{CMAKE_BUILD_TYPE})\n   42:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n   44  \n\n~/Projects/plot-cv/qjs-opencv/CMakeLists.txt:\n    9  \n   10  if(CACHE{CMAKE_BUILD_TYPE})\n   11:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/CMakeLists.txt:\n  155  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11) # See ocv_target_include_directories() implementation\n  156    if(TARGET ${the_module})\n  157:     get_target_property(__include_dirs ${the_module} INCLUDE_DIRECTORIES)\n  158      include_directories(${__include_dirs})\n  159    endif()\n\n~/Projects/plot-cv/qjs-opencv/cmake/CCache.cmake:\n   15    if(CMAKE_VERSION VERSION_LESS 3.4)\n   16      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   17:     set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   18:     set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   19    else()\n   20      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   ..\n   31    if(CMAKE_VERSION VERSION_GREATER 3.3)\n   32      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   33:     set_property(TARGET \"${target}\" PROPERTY C_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   34:     set_property(TARGET \"${target}\" PROPERTY CXX_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   35    else()\n   36      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   37:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   38:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   39    endif()\n   40  endfunction()\n\n~/Projects/plot-cv/qjs-opencv/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/qjs-opencv/cmake/FindPNG.cmake:\n  117        if((CMAKE_SYSTEM_NAME STREQUAL \"Linux\") AND (\"${PNG_LIBRARY}\" MATCHES\n  118                                                     \"\\\\${CMAKE_STATIC_LIBRARY_SUFFIX}$\"))\n  119:         set_property(TARGET PNG::PNG APPEND PROPERTY INTERFACE_LINK_LIBRARIES m)\n  120        endif()\n  121  \n  ...\n  125        endif()\n  126        if(EXISTS \"${PNG_LIBRARY_RELEASE}\")\n  127:         set_property(TARGET PNG::PNG APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n  128          set_target_properties(\n  129            PNG::PNG PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE \"C\"\n  ...\n  131        endif()\n  132        if(EXISTS \"${PNG_LIBRARY_DEBUG}\")\n  133:         set_property(TARGET PNG::PNG APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n  134          set_target_properties(PNG::PNG PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG \"C\"\n  135                                                    IMPORTED_LOCATION_DEBUG \"${PNG_LIBRARY_DEBUG}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/CMakeLists.txt:\n  106  endif()\n  107  if(DEFINED CMAKE_BUILD_TYPE)\n  108:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"${CMAKE_CONFIGURATION_TYPES}\")\n  109  endif()\n  110  \n  ...\n  927  # ----------------------------------------------------------------------------\n  928  if(ENABLE_SOLUTION_FOLDERS)\n  929:   set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n  930:   set_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER \"CMakeTargets\")\n  931  endif()\n  932  \n  ...\n 1679        set(__msg \"YES (${INF_ENGINE_RELEASE} / ${INF_ENGINE_VERSION})\")\n 1680        ocv_get_imported_target(ie_target \"${ie_target}\")\n 1681:       get_target_property(_lib ${ie_target} IMPORTED_LOCATION)\n 1682:       get_target_property(_lib_imp_rel ${ie_target} IMPORTED_IMPLIB_RELEASE)\n 1683:       get_target_property(_lib_imp_dbg ${ie_target} IMPORTED_IMPLIB_DEBUG)\n 1684:       get_target_property(_lib_rel ${ie_target} IMPORTED_LOCATION_RELEASE)\n 1685:       get_target_property(_lib_dbg ${ie_target} IMPORTED_LOCATION_DEBUG)\n 1686        ocv_build_features_string(\n 1687          _lib\n ....\n 1712          ELSE\n 1713          \"unknown\")\n 1714:       get_target_property(_inc ${ie_target} INTERFACE_INCLUDE_DIRECTORIES)\n 1715        status(\"    Inference Engine:\" \"${__msg}\")\n 1716        status(\"        * libs:\" \"${_lib}\")\n ....\n 1724        ocv_get_imported_target(__target ngraph::ngraph)\n 1725        set(__msg \"YES (${ngraph_VERSION})\")\n 1726:       get_target_property(_lib ${__target} IMPORTED_LOCATION)\n 1727:       get_target_property(_lib_imp_rel ${__target} IMPORTED_IMPLIB_RELEASE)\n 1728:       get_target_property(_lib_imp_dbg ${__target} IMPORTED_IMPLIB_DEBUG)\n 1729:       get_target_property(_lib_rel ${__target} IMPORTED_LOCATION_RELEASE)\n 1730:       get_target_property(_lib_dbg ${__target} IMPORTED_LOCATION_DEBUG)\n 1731        ocv_build_features_string(\n 1732          _lib\n ....\n 1757          ELSE\n 1758          \"unknown\")\n 1759:       get_target_property(_inc ${__target} INTERFACE_INCLUDE_DIRECTORIES)\n 1760        status(\"    nGraph:\" \"${__msg}\")\n 1761        status(\"        * libs:\" \"${_lib}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/libspng/CMakeLists.txt:\n    7  \n    8  set(CURR_INCLUDE_DIR \"${CMAKE_CURRENT_LIST_DIR}\")\n    9: set_property(GLOBAL PROPERTY SPNG_INCLUDE_DIR ${CURR_INCLUDE_DIR})\n   10  ocv_include_directories(${ZLIB_INCLUDE_DIRS})\n   11  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/openjpeg/CMakeLists.txt:\n  190  set(OPENJPEG_MINOR_VERSION ${OPENJPEG_VERSION_MINOR} PARENT_SCOPE)\n  191  set(OPENJPEG_BUILD_VERSION ${OPENJPEG_VERSION_BUILD} PARENT_SCOPE)\n  192: get_target_property(_openjpeg_include_dirs ${OPENJPEG_LIBRARY_NAME} INCLUDE_DIRECTORIES)\n  193  set(OPENJPEG_INCLUDE_DIRS  ${_openjpeg_include_dirs} PARENT_SCOPE)\n  194  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/carotene/hal/CMakeLists.txt:\n   67  include_directories(\"${CAROTENE_DIR}/include\")\n   68  \n   69: get_target_property(carotene_defs carotene_objs INTERFACE_COMPILE_DEFINITIONS)\n   70: set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS ${carotene_defs})\n   71  \n   72    if(CV_GCC)\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/quirc/CMakeLists.txt:\n    3  set(CURR_INCLUDE_DIR \"${CMAKE_CURRENT_LIST_DIR}/include\")\n    4  \n    5: set_property(GLOBAL PROPERTY QUIRC_INCLUDE_DIR ${CURR_INCLUDE_DIR})\n    6  ocv_include_directories(${CURR_INCLUDE_DIR})\n    7  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/libjpeg-turbo/src/simd/CMakeLists.txt:\n   87      if(${var} STREQUAL \"-g\")\n   88        if(CMAKE_ASM_NASM_DEBUG_FORMAT)\n   89:         set_property(CACHE ${var} PROPERTY VALUE \"-g ${CMAKE_ASM_NASM_DEBUG_FORMAT}\")\n   90        else()\n   91:         set_property(CACHE ${var} PROPERTY VALUE \"\")\n   92        endif()\n   93      endif()\n   ..\n  479  if(CMAKE_COMPILER_IS_GNUCC)\n  480    foreach(file ${SIMD_SOURCES})\n  481:     set_property(SOURCE ${file} APPEND_STRING PROPERTY COMPILE_FLAGS\n  482        \" -fno-strict-aliasing\")\n  483    endforeach()\n  484  endif()\n  485  foreach(file ${SIMD_SOURCES})\n  486:   set_property(SOURCE ${file} APPEND_STRING PROPERTY COMPILE_FLAGS\n  487      \" -Wa,-mloongson-mmi,-mloongson-ext\")\n  488  endforeach()\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n   30      if((__variableName MATCHES \"${regex}\" OR __variableName_lower MATCHES \"${regex_lower}\")\n   31         AND NOT __variableName_lower MATCHES \"^__\")\n   32:       get_property(__value VARIABLE PROPERTY \"${__variableName}\")\n   33        set(__VARS \"${__VARS}${__variableName}=${__value}\\n\")\n   34      endif()\n   ..\n  311  endfunction()\n  312  \n  313: function(ocv_append_target_property target prop)\n  314:   get_target_property(val ${target} ${prop})\n  315    if(val)\n  316      set(val \"${val} ${ARGN}\")\n  ...\n  413  macro(ocv_clear_internal_cache_vars)\n  414    foreach(_var ${ARGN})\n  415:     get_property(_propertySet CACHE ${_var} PROPERTY TYPE SET)\n  416      if(_propertySet)\n  417:       get_property(_type CACHE ${_var} PROPERTY TYPE)\n  418        if(_type STREQUAL \"INTERNAL\")\n  419          message(\"Cleaning INTERNAL cached variable: ${_var}\")\n  ...\n 1254      if(INSTALL_PDB AND NOT INSTALL_IGNORE_PDB AND NOT OPENCV_${__target}_PDB_SKIP)\n 1255        set(__location_key \"ARCHIVE\") # static libs\n 1256:       get_target_property(__target_type ${__target} TYPE)\n 1257        if(\"${__target_type}\" STREQUAL \"SHARED_LIBRARY\")\n 1258          set(__location_key \"RUNTIME\") # shared libs (.DLL)\n ....\n 1303              install(\n 1304                FILES\n 1305:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1306                DESTINATION \"${__dst}\"\n 1307                CONFIGURATIONS Debug\n ....\n 1310              install(\n 1311                FILES\n 1312:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1313                DESTINATION \"${__dst}\"\n 1314                CONFIGURATIONS Release\n ....\n 1629  function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631:   get_target_property(__type \"${__result}\" TYPE)\n 1632    if(__type STREQUAL \"INTERFACE_LIBRARY\")\n 1633:     get_target_property(__libs \"${__result}\" INTERFACE_LINK_LIBRARIES)\n 1634      list(GET __libs 0 __interface)\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n ....\n 1657    foreach(m ${OPENCV_MODULES_PUBLIC})\n 1658      if(TARGET ${m})\n 1659:       get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES)\n 1660        if(NOT deps)\n 1661          set(deps \"\")\n ....\n 1680          endif()\n 1681          if(TARGET ${dep})\n 1682:           get_target_property(_type ${dep} TYPE)\n 1683            if((_type STREQUAL \"STATIC_LIBRARY\" AND BUILD_SHARED_LIBS) OR _type STREQUAL\n 1684                                                                          \"INTERFACE_LIBRARY\"\n ....\n 1687              # nothing\n 1688            else()\n 1689:             get_target_property(_output ${dep} IMPORTED_LOCATION)\n 1690              if(NOT _output)\n 1691:               get_target_property(_output ${dep} ARCHIVE_OUTPUT_DIRECTORY)\n 1692:               get_target_property(_output_name ${dep} OUTPUT_NAME)\n 1693                if(NOT _output_name)\n 1694                  set(_output_name \"${dep}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectCUDA.cmake:\n  122    )\n  123    if(CMAKE_VERSION VERSION_GREATER \"2.8\")\n  124:     set_property(CACHE CUDA_GENERATION PROPERTY STRINGS \"\" ${_generations})\n  125    endif()\n  126  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVModule.cmake:\n 1036    endif()\n 1037  \n 1038:   get_target_property(_target_type ${the_module} TYPE)\n 1039    if(OPENCV_MODULE_${the_module}_CLASS STREQUAL \"PUBLIC\" AND\n 1040        (\"${_target_type}\" STREQUAL \"SHARED_LIBRARY\" OR (NOT BUILD_SHARED_LIBS OR NOT INSTALL_CREATE_DISTRIB)))\n ....\n 1332        )\n 1333  \n 1334:       ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"__OPENCV_TESTS=1\")\n 1335  \n 1336        if(ENABLE_SOLUTION_FOLDERS)\n ....\n 1339  \n 1340        if(OPENCV_TEST_BIGDATA)\n 1341:         ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"OPENCV_TEST_BIGDATA=1\")\n 1342        endif()\n 1343  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVPCHSupport.cmake:\n   39    if(CV_GCC)\n   40  \n   41:     get_target_property(_targetType ${_PCH_current_target} TYPE)\n   42      if(${_targetType} STREQUAL SHARED_LIBRARY AND NOT WIN32)\n   43        list(APPEND ${_out_compile_flags} \"-fPIC\")\n   44      endif()\n   45  \n   46:     # Processed via $<TARGET_PROPERTY:target,COMPILE_DEFINITIONS>\n   47:     #GET_PROPERTY(_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\n   48:     #GET_TARGET_PROPERTY(_target_definitions ${_PCH_current_target} COMPILE_DEFINITIONS)\n   49  \n   50:     get_target_property(_cxx_standard ${_PCH_current_target} CXX_STANDARD)\n   51      if(_cxx_standard)\n   52:       get_target_property(_cxx_extensions ${_PCH_current_target} CXX_EXTENSIONS)\n   53        if(_cxx_extensions)\n   54          list(APPEND ${_out_compile_flags} \"${CMAKE_CXX${_cxx_standard}_EXTENSION_COMPILE_OPTION}\")\n   ..\n   74    endforeach(item)\n   75  \n   76:   get_target_property(DIRINC ${_PCH_current_target} INCLUDE_DIRECTORIES)\n   77    foreach(item ${DIRINC})\n   78      ocv_is_opencv_directory(__result ${item})\n   ..\n  194    endif()\n  195  \n  196:   get_target_property(_sources ${_targetName} SOURCES)\n  197    foreach(src ${_sources})\n  198      if(NOT \"${src}\" MATCHES \"\\\\.mm$\" AND NOT \"${src}\" MATCHES \"\\\\.rc$\")\n  ...\n  243    list(APPEND _compile_FLAGS \"${_PCH_include_prefix}\\\"${_path}\\\"\")\n  244  \n  245:   get_target_property(type ${_targetName} TYPE)\n  246    if(type STREQUAL \"SHARED_LIBRARY\")\n  247:     get_target_property(__DEFINES ${_targetName} DEFINE_SYMBOL)\n  248      if(NOT __DEFINES MATCHES __DEFINES-NOTFOUND)\n  249        list(APPEND _compile_FLAGS \"${_PCH_define_prefix}${__DEFINES}\")\n  ...\n  252  \n  253    if(type STREQUAL \"SHARED_LIBRARY\" OR type STREQUAL \"STATIC_LIBRARY\")\n  254:     get_target_property(__pic ${_targetName} POSITION_INDEPENDENT_CODE)\n  255      if(__pic AND CMAKE_CXX_COMPILE_OPTIONS_PIC AND NOT OPENCV_SKIP_PCH_PIC_HANDLING\n  256         AND NOT OPENCV_SKIP_PCH_PIC_HANDLING_${_targetName})\n  ...\n  258      endif()\n  259    elseif(type STREQUAL \"EXECUTABLE\")\n  260:     get_target_property(__pie ${_targetName} POSITION_INDEPENDENT_CODE)\n  261      if(__pie AND CMAKE_CXX_COMPILE_OPTIONS_PIE AND NOT OPENCV_SKIP_PCH_PIE_HANDLING\n  262         AND NOT OPENCV_SKIP_PCH_PIE_HANDLING_${_targetName})\n  ...\n  265    endif()\n  266  \n  267:   get_target_property(DIRINC ${_targetName} INCLUDE_DIRECTORIES)\n  268    set_target_properties(${_targetName}_pch_dephelp PROPERTIES INCLUDE_DIRECTORIES \"${DIRINC}\")\n  269  \n  ...\n  291    tail -n1 \\$0\n  292  fi\n  293: ${_command} '-D$<JOIN:$<TARGET_PROPERTY:${_targetName},COMPILE_DEFINITIONS>,' '-D>'\n  294  \")\n  295    get_filename_component(_outdir ${_output} PATH)\n  ...\n  340      # and I don't want to specify /F- for each moc/res/ui generated files (using Qt)\n  341  \n  342:     get_target_property(_sources ${_targetName} SOURCES)\n  343      foreach(src ${_sources})\n  344        if(\"${src}\" MATCHES \"\\\\.c(pp|xx)?$\")\n  ...\n  355  \n  356      #also include ${oldProps} to have the same compile options\n  357:     get_target_property(oldProps ${_targetName} COMPILE_FLAGS)\n  358      if(oldProps MATCHES NOTFOUND)\n  359        set(oldProps \"\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLAPACK.cmake:\n   82      )\n   83        # workaround DEFAULTLIB:tbb12.lib issue\n   84:       get_target_property(_tbb_lib tbb IMPORTED_LOCATION)\n   85        if(NOT _tbb_lib)\n   86:         get_target_property(_tbb_lib tbb IMPORTED_LOCATION_RELEASE)\n   87        endif()\n   88        if(_tbb_lib AND NOT OPENCV_SKIP_WORKAROUND_MKL_LINK_DIRECTORIES_TBB)\n   ..\n  102      # TODO add cache for try_compile() inputs/results\n  103  \n  104:     get_property(__link_directories DIRECTORY PROPERTY LINK_DIRECTORIES)\n  105      if(LAPACK_LINK_LIBRARIES)\n  106        list(APPEND __link_directories ${LAPACK_LINK_LIBRARIES})\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptimizations.cmake:\n  415  set(CPU_BASELINE \"DETECT\" CACHE STRING \"${HELP_CPU_BASELINE}\")\n  416  set(CPU_DISPATCH \"\" CACHE STRING \"${HELP_CPU_DISPATCH}\")\n  417: set_property(CACHE CPU_BASELINE PROPERTY STRINGS \"\" ${CPU_KNOWN_OPTIMIZATIONS})\n  418: set_property(CACHE CPU_DISPATCH PROPERTY STRINGS \"\" ${CPU_KNOWN_OPTIMIZATIONS})\n  419  \n  420  # Update CPU_BASELINE_DETECT flag\n  ...\n  788          target_include_directories(\n  789            ${TARGET_BASE_NAME}_${OPT}\n  790:           PRIVATE $<TARGET_PROPERTY:${TARGET_BASE_NAME},INCLUDE_DIRECTORIES>)\n  791          #list(APPEND __result_libs ${TARGET_BASE_NAME}_${OPT})\n  792          list(APPEND __result \"$<TARGET_OBJECTS:${TARGET_BASE_NAME}_${OPT}>\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVGenAndroidMK.cmake:\n   30        set(lib_name \"${lib}\")\n   31        if(TARGET ${lib})\n   32:         get_target_property(_output ${lib} IMPORTED_LOCATION)\n   33          if(NOT _output)\n   34:           get_target_property(output_name ${lib} OUTPUT_NAME)\n   35            if(output_name)\n   36              set(lib_name \"${output_name}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptions.cmake:\n   15    if(CCACHE_PROGRAM)\n   16      message(STATUS \"Looking for ccache - found (${CCACHE_PROGRAM})\")\n   17:     get_property(__OLD_RULE_LAUNCH_COMPILE GLOBAL PROPERTY RULE_LAUNCH_COMPILE)\n   18      if(CMAKE_GENERATOR MATCHES \"Xcode\")\n   19        configure_file(\"${CMAKE_CURRENT_LIST_DIR}/templates/xcode-launch-c.in\"\n   ..\n   33        message(STATUS \"Can't replace CMake compiler launcher\")\n   34      else()\n   35:       set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_PROGRAM}\")\n   36        # NOTE: Actually this check doesn't work as expected.\n   37        # \"RULE_LAUNCH_COMPILE\" is ignored by CMake during try_compile() step.\n   ..\n   42        else()\n   43          message(STATUS \"Unable to compile program with enabled ccache, reverting...\")\n   44:         set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${__OLD_RULE_LAUNCH_COMPILE}\")\n   45        endif()\n   46      endif()\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   26          return()\n   27        endif()\n   28:       get_target_property(_lib TBB::tbb IMPORTED_LOCATION_RELEASE)\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30:       get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31        add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/FindCUDA.cmake:\n  676  file(GLOB __cuda_available_target_tiplets RELATIVE \"${CUDA_TOOLKIT_ROOT_DIR}/targets\"\n  677       \"${CUDA_TOOLKIT_ROOT_DIR}/targets/*\")\n  678: set_property(CACHE CUDA_TARGET_TRIPLET PROPERTY STRINGS ${__cuda_available_target_tiplets})\n  679  mark_as_advanced(CUDA_TARGET_TRIPLET)\n  680  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   76    if(NOT BUILD_PROTOBUF)\n   77      if(TARGET \"${Protobuf_LIBRARIES}\")\n   78:       get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION_RELEASE)\n   79        if(NOT __location)\n   80:         get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION)\n   81        endif()\n   82      elseif(Protobuf_LIBRARY)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/android/OpenCVDetectAndroidSDK.cmake:\n  142          if(DEFINED ANDROID_SDK_BUILD_TOOLS_SUBDIR)\n  143            set(ANDROID_SDK_BUILD_TOOLS_VERSION \"${__selected}\" CACHE STRING \"Android SDK Build Tools version\")\n  144:           set_property(CACHE ANDROID_SDK_BUILD_TOOLS_VERSION PROPERTY STRINGS ${__versions})\n  145            set(ANDROID_SDK_BUILD_TOOLS \"${__search_dir}/${d}\" CACHE INTERNAL \"Android SDK Build Tools path\")\n  146            message(STATUS \"Android SDK Build Tools: ver. ${ANDROID_SDK_BUILD_TOOLS_VERSION} (subdir ${ANDROID_SDK_BUILD_TOOLS_SUBDIR} from ${__dirlist})\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/android/android_ant_projects.cmake:\n   36  if(ANDROID_SDK_TARGETS)\n   37    message(STATUS \"Android SDK Tools: Available targets: ${ANDROID_SDK_TARGETS}\")\n   38:   set_property(CACHE ANDROID_SDK_TARGET PROPERTY STRINGS ${ANDROID_SDK_TARGETS} )\n   39  else()\n   40    message(FATAL_ERROR \"Android: List of installed Android targets is empty\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/gapi/cmake/standalone.cmake:\n   44  \n   45  set_target_properties(${FLUID_TARGET} PROPERTIES POSITION_INDEPENDENT_CODE True)\n   46: set_property(TARGET ${FLUID_TARGET} PROPERTY CXX_STANDARD 11)\n   47  \n   48  if(MSVC)\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/objdetect/CMakeLists.txt:\n   14  \n   15  if(HAVE_QUIRC)\n   16:     get_property(QUIRC_INCLUDE GLOBAL PROPERTY QUIRC_INCLUDE_DIR)\n   17      ocv_include_directories(${QUIRC_INCLUDE})\n   18      ocv_target_link_libraries(${the_module} quirc)\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/winpack_dldt/2021.4.2/cmake/InferenceEngineConfig.cmake:\n   14  \n   15  # Import target \"IE::inference_engine\" for configuration \"Debug\"\n   16: set_property(TARGET IE::inference_engine APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n   17  set_target_properties(IE::inference_engine PROPERTIES\n   18    IMPORTED_IMPLIB_DEBUG \"${_IMPORT_PREFIX}/deployment_tools/inference_engine/lib/intel64/inference_engined.lib\"\n   ..\n   22  \n   23  # Import target \"IE::inference_engine\" for configuration \"Release\"\n   24: set_property(TARGET IE::inference_engine APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n   25  set_target_properties(IE::inference_engine PROPERTIES\n   26    IMPORTED_IMPLIB_RELEASE \"${_IMPORT_PREFIX}/deployment_tools/inference_engine/lib/intel64/inference_engine.lib\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/ios/cmake/Toolchains/common-ios-toolchain.cmake:\n    1  # load settings in case of \"try compile\"\n    2  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    3: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    4  if(__IN_TRY_COMPILE)\n    5    set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/linux/gnu.toolchain.cmake:\n    3  # load settings in case of \"try compile\"\n    4  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    5: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    6  if(__IN_TRY_COMPILE)\n    7    include(\"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\" OPTIONAL) # CMAKE_BINARY_DIR is different\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/android/android.toolchain.cmake:\n  202  \n  203  # inherit settings in recursive loads\n  204: get_property( _CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )\n  205  if( _CMAKE_IN_TRY_COMPILE )\n  206   include( \"${CMAKE_CURRENT_SOURCE_DIR}/../android.toolchain.config.cmake\" OPTIONAL )\n  ...\n  836   if( CMAKE_VERSION VERSION_GREATER \"2.8\" )\n  837    list( SORT ANDROID_SUPPORTED_NATIVE_API_LEVELS )\n  838:   set_property( CACHE ANDROID_NATIVE_API_LEVEL PROPERTY STRINGS ${ANDROID_SUPPORTED_NATIVE_API_LEVELS} )\n  839   endif()\n  840  endif()\n  ...\n  846  if( CMAKE_VERSION VERSION_GREATER \"2.8\" )\n  847   list( SORT ANDROID_SUPPORTED_ABIS_${ANDROID_ARCH_NAME} )\n  848:  set_property( CACHE ANDROID_ABI PROPERTY STRINGS ${ANDROID_SUPPORTED_ABIS_${ANDROID_ARCH_NAME}} )\n  849  endif()\n  850  \n\n~/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/inst/x86_64-linux-gnu/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n205 matches across 90 files\n\n\nSearching 1044 files for \"(define|get|set)(|_target)_property\" (regex)\n\n~/Projects/plot-cv/CMakeLists.txt:\n    9  \n   10  if(CACHE{CMAKE_BUILD_TYPE})\n   11:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/3rdparty/glfw/CMakeLists.txt:\n   16  set(GLFW_VERSION_FULL \"${GLFW_VERSION}.${GLFW_VERSION_PATCH}${GLFW_VERSION_EXTRA}\")\n   17  \n   18: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   19  \n   20  option(BUILD_SHARED_LIBS \"Build shared libraries\" OFF)\n\n~/Projects/plot-cv/CToy-1.05-Linux64-x86_64/tool/build_native/3rdparty/openal-soft/CMakeLists.txt:\n  849  # Build a library\n  850  ADD_LIBRARY(${LIBNAME} ${LIBTYPE} ${OPENAL_OBJS} ${ALC_OBJS} ${HEADERS})\n  851: SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY COMPILE_DEFINITIONS AL_BUILD_LIBRARY AL_ALEXT_PROTOTYPES)\n  852  IF(WIN32 AND ALSOFT_NO_UID_DEFS)\n  853:     SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY COMPILE_DEFINITIONS AL_NO_UID_DEFS)\n  854  ENDIF()\n  855: SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY INCLUDE_DIRECTORIES \"${OpenAL_SOURCE_DIR}/OpenAL32/Include\" \"${OpenAL_SOURCE_DIR}/Alc\")\n  856  IF(FLUIDSYNTH_FOUND)\n  857:     SET_PROPERTY(TARGET ${LIBNAME} APPEND PROPERTY INCLUDE_DIRECTORIES ${FLUIDSYNTH_INCLUDE_DIR})\n  858  ENDIF()\n  859  SET_TARGET_PROPERTIES(${LIBNAME} PROPERTIES VERSION ${LIB_VERSION}\n\n~/Projects/plot-cv/quickjs/CMakeLists.txt:\n    8  \n    9  if(CACHE{CMAKE_BUILD_TYPE})\n   10:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel\n   11                                                 RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   ..\n  676  \n  677  if(DLL_TARGETS)\n  678:   get_target_property(SO_OUTPUT ${SO_NAME} OUTPUT_NAME)\n  679:   get_target_property(SO_PREFIX ${SO_NAME} PREFIX)\n  680  \n  681    set(SHARED_LIBRARY_NAME \"${SO_PREFIX}${SO_OUTPUT}${CONFIG_SHEXT}\")\n\n~/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt:\n  364      SOURCES\n  365      TYPE)\n  366:     get_target_property(VALUE \"${TARGET}\" \"${PROP}\")\n  367      if(VALUE)\n  368        message(\"${ESC}[1;33m${TARGET} ${ESC}[1;31m${PROP} = ${ESC}[1;36m'${VALUE}'${ESC}[0m\")\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/CMakeLists.txt:\n  396  \t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n  397  \tendif()\n  398: \tget_property(_CURR DIRECTORY PROPERTY INCLUDE_DIRECTORIES) \n  399  \tset(_CMAKE_INC_LIST ${_CURR} PARENT_SCOPE)\n  400  \tif (LWS_LIB_BUILD_INC_PATHS)\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/contrib/iOS.cmake:\n  198  # This little macro lets you set any XCode specific property\n  199  macro (set_xcode_property TARGET XCODE_PROPERTY XCODE_VALUE)\n  200: \tset_property (TARGET ${TARGET} PROPERTY XCODE_ATTRIBUTE_${XCODE_PROPERTY} ${XCODE_VALUE})\n  201  endmacro (set_xcode_property)\n  202  \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-multi/CMakeLists.txt:\n  145  \t# confirm that we do fail with a one connection limit and no pipelining\n  146  \tadd_test(NAME http-client-multi-restrict-nopipe-fail COMMAND lws-minimal-http-client-multi --limit 1 -l --port ${PORT_HCM_SRV} -d1151)\n  147: \tset_property(TEST http-client-multi-restrict-nopipe-fail PROPERTY WILL_FAIL TRUE)\n  148  \tadd_test(NAME http-client-multi-restrict-h1-nopipe-fail COMMAND lws-minimal-http-client-multi --limit 1 --h1 -l --port ${PORT_HCM_SRV} -d1151)\n  149: \tset_property(TEST http-client-multi-restrict-h1-nopipe-fail PROPERTY WILL_FAIL TRUE)\n  150  \n  151  \tset_tests_properties(http-client-multi-restrict-pipe\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/test-apps/CMakeLists.txt:\n  106  \n  107  \t\t# Set test app specific defines.\n  108: \t\tset_property(TARGET ${TEST_NAME}\n  109  \t\t\t\t\tPROPERTY COMPILE_DEFINITIONS\n  110  \t\t\t\t\t\tINSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/share\"\n  ...\n  161  \t\t\ttarget_compile_definitions(test-server-extpoll PRIVATE LWS_BUILDING_SHARED)\n  162  \t\t\t# Set defines for this executable only.\n  163: \t\t\tset_property(\n  164  \t\t\t\tTARGET test-server-extpoll\n  165  \t\t\t\tPROPERTY COMPILE_DEFINITIONS \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt:\n   63  \n   64  # Set test app specific defines.\n   65: set_property(TARGET ${PLUGIN_NAME}\n   66  \t     PROPERTY COMPILE_DEFINITIONS\n   67  \t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lwsws/CMakeLists.txt:\n   54  \ttarget_include_directories(lwsws PRIVATE \"${LWS_LIB_INCLUDES}\" ${LWS_LIB_BUILD_INC_PATHS})\n   55  \t# Set test app specific defines.\n   56: \tset_property(TARGET lwsws\n   57  \t\t     PROPERTY COMPILE_DEFINITIONS\n   58  \t\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/share\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/CMakeLists.txt:\n  219  \tif (WIN32)\n  220  \t\t# Compile as DLL (export function declarations)\n  221: \t\tset_property(\n  222  \t\t\tTARGET websockets_shared\n  223  \t\t\tPROPERTY COMPILE_DEFINITIONS\n  ...\n  227  \n  228  \tif (APPLE)\n  229: \t\tset_property(TARGET websockets_shared PROPERTY MACOSX_RPATH YES)\n  230  \tendif()\n  231  \n  ...\n  249  \n  250  if (LWS_WITH_SHARED)\n  251: \tget_target_property(LWS_LIB_INCLUDES websockets_shared INCLUDE_DIRECTORIES)\n  252  else()\n  253: \tget_target_property(LWS_LIB_INCLUDES websockets INCLUDE_DIRECTORIES)\n  254  endif()\n  255  \n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/event-libs/CMakeLists.txt:\n   34  \n   35  \tif (APPLE)\n   36: \t\tset_property(TARGET websockets-${PLUGIN_NAME} PROPERTY MACOSX_RPATH YES)\n   37  \tendif()\n   38  \n   ..\n   49  \n   50  \t# Set test app specific defines.\n   51: \t#\tset_property(TARGET ${PLUGIN_NAME}\n   52  \t#\t     PROPERTY COMPILE_DEFINITIONS\n   53  \t#\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/evlib-plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugins/CMakeLists.txt:\n   73  \t\t\ttarget_include_directories(${PLUGIN_NAME} PRIVATE ${PLUGIN_INCLUDE}\n   74  \t\t\t\t\t\t\t\t\t  ${LWS_LIB_BUILD_INC_PATHS})\n   75: \t\t\tset_property(TARGET ${PLUGIN_NAME}\n   76  \t\t\t\t     PROPERTY COMPILE_DEFINITIONS\n   77  \t\t\t\t     INSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/plugins\"\n\n~/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt:\n  186  foreach(lib IN LISTS BROTLI_SHARED_LIBS BROTLI_STATIC_LIBS)\n  187    target_link_libraries(${lib} ${LIBM_LIBRARY})\n  188:   set_property(TARGET ${lib} APPEND PROPERTY INCLUDE_DIRECTORIES ${BROTLI_INCLUDE_DIRS})\n  189    set_target_properties(${lib} PROPERTIES\n  190      VERSION \"${BROTLI_ABI_COMPATIBILITY}.${BROTLI_ABI_AGE}.${BROTLI_ABI_REVISION}\"\n  ...\n  193      set_target_properties(${lib} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)\n  194    endif()\n  195:   set_property(TARGET ${lib} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES \"${BROTLI_INCLUDE_DIRS}\")\n  196  endforeach()\n  197  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake:\n   23                   -DCMAKE_POSITION_INDEPENDENT_CODE=ON\n   24        CMAKE_CACHE_ARGS -DLIBCURL_NO_SHARED:STRING=libcurl -DBUILD_SHARED_LIBS:BOOL=OFF)\n   25:     set_property(DIRECTORY PROPERTY EP_STEP_TARGETS build)\n   26    endif()\n   27  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibwebsockets.cmake:\n   16        include(${LIBWEBSOCKETS_DIR}/LibwebsocketsTargets.cmake)\n   17  \n   18:       get_target_property(pkgcfg_lib_LIBWEBSOCKETS_websockets websockets INTERFACE_LINK_LIBRARIES)\n   19:       get_target_property(LIBWEBSOCKETS_INCLUDE_DIR websockets INTERFACE_INCLUDE_DIRECTORIES)\n   20  \n   21        #set_target_properties(  websockets  PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   24      LOG_BUILD ON)\n   25  \n   26:   ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28    add_library(brotlicommon STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake:\n  128        include(${WOLFSSL_DIR}/wolfssl-config.cmake)\n  129  \n  130:       get_target_property(pkgcfg_lib_WOLFSSL_wolfssl wolfssl IMPORTED_LOCATION_RELWITHDEBINFO)\n  131  \n  132        dirname(WOLFSSL_LIBRARIES_DIR ${pkgcfg_lib_WOLFSSL_wolfssl})\n  ...\n  333      #LOG_OUTPUT_ON_FAILURE ON\n  334    )\n  335:   # ExternalProject_Get_Property(libwebsockets CMAKE_CACHE_DEFAULT_ARGS)\n  336    #message(\"CMAKE_CACHE_DEFAULT_ARGS of libwebsockets = ${CMAKE_CACHE_DEFAULT_ARGS}\")\n  337  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   92      endif()\n   93  \n   94:     get_target_property(LIBRESSL_LIBRARY_LOCATION libressl IMPORTED_LOCATION)\n   95  \n   96      if(EXISTS \"${LIBRESSL_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   89      endif()\n   90  \n   91:     get_target_property(MBEDTLS_LIBRARY_LOCATION mbedtls IMPORTED_LOCATION)\n   92  \n   93      if(EXISTS \"${MBEDTLS_ROOT_DIR}/lib\")\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${MBEDTLS_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   ..\n   97    add_library(${MBEDTLS_LIBRARY} STATIC IMPORTED)\n   98    add_dependencies(${MBEDTLS_LIBRARY} ${MBEDTLS_TARGET_NAME})\n   99:   set_property(TARGET ${MBEDTLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libmbedtls.a)\n  100  \n  101    set(MBEDTLS_X509_LIBRARY mbedx509 CACHE STRING \"MbedTLS x509 library\" FORCE)\n  102    add_library(${MBEDTLS_X509_LIBRARY} STATIC IMPORTED)\n  103    add_dependencies(${MBEDTLS_X509_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  104:   set_property(TARGET ${MBEDTLS_X509_LIBRARY} PROPERTY IMPORTED_LOCATION\n  105                                                         ${BINARY_DIR}/libmbedx509.a)\n  106  \n  ...\n  108    add_library(${MBEDTLS_CRYPTO_LIBRARY} STATIC IMPORTED)\n  109    add_dependencies(${MBEDTLS_CRYPTO_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  110:   set_property(TARGET ${MBEDTLS_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  111                                                           ${BINARY_DIR}/libmbedcrypto.a)\n  112  \n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   80      LOG_BUILD ON)\n   81  \n   82:   ExternalProject_Get_Property(${LIBRESSL_TARGET_NAME} SOURCE_DIR BINARY_DIR)\n   83  \n   84    if(ARGN)\n   ..\n   98    add_library(${LIBRESSL_CRYPTO_LIBRARY} STATIC IMPORTED)\n   99    add_dependencies(${LIBRESSL_CRYPTO_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  100:   set_property(TARGET ${LIBRESSL_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  101                                                            ${BINARY_DIR}/libcrypto.a)\n  102  \n  ...\n  104    add_library(${LIBRESSL_SSL_LIBRARY} STATIC IMPORTED)\n  105    add_dependencies(${LIBRESSL_SSL_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  106:   set_property(TARGET ${LIBRESSL_SSL_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libssl.a)\n  107  \n  108    set(LIBRESSL_TLS_LIBRARY libtls CACHE STRING \"LibreSSL tls library\" FORCE)\n  109    add_library(${LIBRESSL_TLS_LIBRARY} STATIC IMPORTED)\n  110    add_dependencies(${LIBRESSL_TLS_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  111:   set_property(TARGET ${LIBRESSL_TLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libtls.a)\n  112  \n  113    set(LIBRESSL_LIBRARIES\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-http/cmake/FindQuickJS.cmake:\n    8  \n    9  set(CMAKE_INSTALL_PREFIX \"${QUICKJS_PREFIX}\" CACHE PATH \"Install directory\" FORCE)\n   10: set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   11  \n   12  message(\"QuickJS install directory: ${QUICKJS_PREFIX}\")\n\n~/Projects/plot-cv/quickjs/qjs-glfw/glfw/CMakeLists.txt:\n   11  endif()\n   12  \n   13: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   14  \n   15  string(COMPARE EQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_SOURCE_DIR}\" GLFW_STANDALONE)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   23      USES_TERMINAL_BUILD ON)\n   24  \n   25:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/FindQuickJS.cmake:\n   32  \n   33    if(CACHE{CMAKE_BUILD_TYPE})\n   34:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   35    endif(CACHE{CMAKE_BUILD_TYPE})\n   36  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   29        USES_TERMINAL_BUILD ON)\n   30  \n   31:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   40      endif()\n   41  \n   42:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   43      # dump(GL3W_LIBRARY_FILE)\n   44  \n\n~/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt:\n   42  \n   43  \n   44: ExternalProject_Get_property(LabSound BINARY_DIR)\n   45  set(LABSOUND_BINARY_DIR \"${BINARY_DIR}\")\n   46  message(\"Binary dir of LabSound = ${LABSOUND_BINARY_DIR}\")\n\n~/Projects/plot-cv/quickjs/qjs-sound/stk/CMakeLists.txt:\n    9      set(CMAKE_BUILD_TYPE \"Release\" CACHE STRING \"Choose the type of build.\" FORCE)\n   10  endif()\n   11: SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Release\" \"Debug\" \"RelWithDebInfo\" \"MinSizeRel\") \n   12  message(\"Build type: \" ${CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/quickjs/qjs-sound/cmake/FindQuickJS.cmake:\n   39  \n   40    if(CACHE{CMAKE_BUILD_TYPE})\n   41:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release\n   42                                                   MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/CMakeLists.txt:\n   70  endif()\n   71  \n   72: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   73  \n   74  add_definitions(${_LAB_CXX_DEFINITIONS})\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/LabSound.cmake:\n  132          PUBLIC_HEADER \"${labsnd_core_h} ${labsnd_extended_h}\"\n  133      )\n  134:     set_property(SOURCE ${labsnd_core_h}\n  135          PROPERTY MACOSX_PACKAGE_LOCATION Headers/LabSound/core)\n  136:     set_property(SOURCE ${labsnd_extended_h}\n  137          PROPERTY MACOSX_PACKAGE_LOCATION Headers/LabSound/extended)\n  138  endif()\n  ...\n  160          RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\"\n  161      )\n  162:     set_property(TARGET ${proj} PROPERTY CXX_STANDARD 17)\n  163      if(WIN32)\n  164          if(MSVC)\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/examples.cmake:\n   92  target_compile_definitions(${proj} PRIVATE SAMPLE_SRC_DIR=\"${LABSOUND_ROOT}/assets\")\n   93  \n   94: set_property(TARGET LabSoundExample PROPERTY FOLDER \"examples\")\n   95  \n   96  install(TARGETS LabSoundExample\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/cmake/ios-toolchain.cmake:\n  169  # Unset the FORCE on cache variables if in try_compile()\n  170  set(FORCE_CACHE FORCE)\n  171: get_property(_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n  172  if(_CMAKE_IN_TRY_COMPILE)\n  173    unset(FORCE_CACHE)\n  ...\n  638    set(XCODE_RELVERSION_I \"${XCODE_RELVERSION}\")\n  639    if(XCODE_RELVERSION_I STREQUAL \"All\")\n  640:     set_property(TARGET ${TARGET} PROPERTY\n  641      XCODE_ATTRIBUTE_${XCODE_PROPERTY} \"${XCODE_VALUE}\")\n  642    else()\n  643:     set_property(TARGET ${TARGET} PROPERTY\n  644      XCODE_ATTRIBUTE_${XCODE_PROPERTY}[variant=${XCODE_RELVERSION_I}] \"${XCODE_VALUE}\")\n  645    endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/src/CMakeLists.txt:\n   74  \n   75  # Set public header\n   76: set_property(TARGET samplerate PROPERTY PUBLIC_HEADER ${PROJECT_SOURCE_DIR}/include/samplerate.h)\n   77  \n   78  if(BUILD_SHARED_LIBS)\n   ..\n   94          if(CMAKE_VERSION VERSION_LESS 3.13)\n   95            # This works \n   96:           set_property(TARGET samplerate APPEND_STRING PROPERTY\n   97              LINK_FLAGS \"-Wl,--version-script,${CMAKE_CURRENT_BINARY_DIR}/Version_script\")\n   98          else()\n\n~/Projects/plot-cv/quickjs/cmake/wasi.toolchain.cmake:\n    2  set(CMAKE_SYSTEM_NAME GNU)\n    3  \n    4: set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS FALSE)\n    5  \n    6  set(CMAKE_C_COMPILER /opt/wasienv/bin/wasicc)\n\n~/Projects/plot-cv/quickjs/cmake/FindQuickJS.cmake:\n   39  \n   40    if(CACHE{CMAKE_BUILD_TYPE})\n   41:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release\n   42                                                   MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n\n~/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt:\n  454  \n  455  if(CACHE{CMAKE_BUILD_TYPE})\n  456:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n  457  endif(CACHE{CMAKE_BUILD_TYPE})\n  458  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/CMakeLists.txt:\n   30  # Set a value type to properly display CMAKE_BUILD_TYPE on GUI if the\n   31  # value type is \"UNINITIALIZED\".\n   32: GET_PROPERTY(cached_type CACHE CMAKE_BUILD_TYPE PROPERTY TYPE)\n   33  IF(\"${cached_type}\" STREQUAL \"UNINITIALIZED\")\n   34    SET(CMAKE_BUILD_TYPE \"${CMAKE_BUILD_TYPE}\" CACHE STRING \"Build Type\" FORCE)\n   ..\n  381        # checked with are changed.\n  382        SET(VAR_WITH_LIB \"${VAR}_WITH_LIB\")\n  383:       GET_PROPERTY(PREV_VAR_WITH_LIB VARIABLE PROPERTY ${VAR_WITH_LIB})\n  384        IF(NOT \"${PREV_VAR_WITH_LIB}\" STREQUAL \"${LIBRARIES}\")\n  385          UNSET(${VAR} CACHE)\n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/libarchive/test/CMakeLists.txt:\n  300    ADD_EXECUTABLE(libarchive_test ${libarchive_test_SOURCES})\n  301    TARGET_LINK_LIBRARIES(libarchive_test archive_static ${ADDITIONAL_LIBS})\n  302:   SET_PROPERTY(TARGET libarchive_test PROPERTY COMPILE_DEFINITIONS\n  303      LIBARCHIVE_STATIC LIST_H)\n  304  \n  ...\n  308    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n  309      ${CMAKE_CURRENT_LIST_FILE} ${libarchive_test_SOURCES})\n  310:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n  311      ${CMAKE_CURRENT_BINARY_DIR})\n  312  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/cpio/test/CMakeLists.txt:\n   75      TARGET_LINK_LIBRARIES(bsdcpio_test ${TEST_ACL_LIBS})\n   76    ENDIF(ENABLE_ACL)\n   77:   SET_PROPERTY(TARGET bsdcpio_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   78  \n   79    #\n   ..\n   82    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   83      ${CMAKE_CURRENT_LIST_FILE} ${bsdcpio_test_SOURCES})\n   84:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   85      ${CMAKE_CURRENT_BINARY_DIR})\n   86  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/tar/test/CMakeLists.txt:\n   93      TARGET_LINK_LIBRARIES(bsdtar_test ${TEST_ACL_LIBS})\n   94    ENDIF(ENABLE_ACL)\n   95:   SET_PROPERTY(TARGET bsdtar_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   96  \n   97    #\n   ..\n  100    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n  101      ${CMAKE_CURRENT_LIST_FILE} ${bsdtar_test_SOURCES})\n  102:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n  103      ${CMAKE_CURRENT_BINARY_DIR})\n  104  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/unzip/test/CMakeLists.txt:\n   46      TARGET_LINK_LIBRARIES(bsdunzip_test ${TEST_ACL_LIBS})\n   47    ENDIF(ENABLE_ACL)\n   48:   SET_PROPERTY(TARGET bsdunzip_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   49  \n   50    #\n   ..\n   53    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   54      ${CMAKE_CURRENT_LIST_FILE} ${bsdunzip_test_SOURCES})\n   55:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   56      ${CMAKE_CURRENT_BINARY_DIR})\n   57  \n\n~/Projects/plot-cv/quickjs/qjs-modules/libarchive/cat/test/CMakeLists.txt:\n   43      TARGET_LINK_LIBRARIES(bsdcat_test ${TEST_ACL_LIBS})\n   44    ENDIF(ENABLE_ACL)\n   45:   SET_PROPERTY(TARGET bsdcat_test PROPERTY COMPILE_DEFINITIONS LIST_H)\n   46  \n   47    #\n   ..\n   50    GENERATE_LIST_H(${CMAKE_CURRENT_BINARY_DIR}/list.h\n   51      ${CMAKE_CURRENT_LIST_FILE} ${bsdcat_test_SOURCES})\n   52:   SET_PROPERTY(DIRECTORY APPEND PROPERTY INCLUDE_DIRECTORIES\n   53      ${CMAKE_CURRENT_BINARY_DIR})\n   54  \n\n~/Projects/plot-cv/quickjs/qjs-modules/tutf8e/CMakeLists.txt:\n    9  include_directories(include)\n   10  add_library(tutf8e STATIC src/tutf8e.c)\n   11: set_property(TARGET tutf8e PROPERTY C_STANDARD 99)\n   12: set_property(TARGET tutf8e PROPERTY C_EXTENSIONS OFF)\n   13  \n   14  add_executable(tutf8e-test test/test.c)\n   15  target_link_libraries(tutf8e-test tutf8e)\n   16: set_property(TARGET tutf8e-test PROPERTY C_STANDARD 99)\n   17: set_property(TARGET tutf8e-test PROPERTY C_EXTENSIONS ON)\n   18  \n\n~/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/glfw/CMakeLists.txt:\n   11  endif()\n   12  \n   13: set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n   14  \n   15  string(COMPARE EQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_SOURCE_DIR}\" GLFW_STANDALONE)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   30      USES_TERMINAL_BUILD ON)\n   31  \n   32:   ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34    add_library(glfw3 STATIC IMPORTED GLOBAL)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   35        USES_TERMINAL_BUILD ON)\n   36  \n   37:     ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39      add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   ..\n   46      endif()\n   47  \n   48:     get_target_property(GL3W_LIBRARY_FILE gl3w-static IMPORTED_LOCATION)\n   49      #dump(GL3W_LIBRARY_FILE)\n   50  \n\n~/Projects/plot-cv/quickjs/qjs-nanovg/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/qjs-ffi/FindQuickJS.cmake:\n   39    # set(CMAKE_INSTALL_PREFIX \"${QUICKJS_PREFIX}\" CACHE PATH \"Install directory\")\n   40  \n   41:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   42  \n   43    set(CMAKE_REQUIRED_QUIET TRUE)\n\n~/Projects/plot-cv/quickjs/qjs-ffi/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/quickjs/inst/x86_64-linux-debug/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/cmake/CCache.cmake:\n   15    if(CMAKE_VERSION VERSION_LESS 3.4)\n   16      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   17:     set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   18:     set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   19    else()\n   20      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   ..\n   31    if(CMAKE_VERSION VERSION_GREATER 3.3)\n   32      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   33:     set_property(TARGET \"${target}\" PROPERTY C_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   34:     set_property(TARGET \"${target}\" PROPERTY CXX_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   35    else()\n   36      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   37:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   38:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   39    endif()\n   40  endfunction()\n\n~/Projects/plot-cv/cmake/FindQuickJS.cmake:\n   40  \n   41    if(CACHE{CMAKE_BUILD_TYPE})\n   42:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   43    endif(CACHE{CMAKE_BUILD_TYPE})\n   44  \n\n~/Projects/plot-cv/qjs-opencv/CMakeLists.txt:\n    9  \n   10  if(CACHE{CMAKE_BUILD_TYPE})\n   11:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   12  endif(CACHE{CMAKE_BUILD_TYPE})\n   13  \n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/CMakeLists.txt:\n  155  if(NOT CMAKE_VERSION VERSION_LESS 2.8.11) # See ocv_target_include_directories() implementation\n  156    if(TARGET ${the_module})\n  157:     get_target_property(__include_dirs ${the_module} INCLUDE_DIRECTORIES)\n  158      include_directories(${__include_dirs})\n  159    endif()\n\n~/Projects/plot-cv/qjs-opencv/cmake/CCache.cmake:\n   15    if(CMAKE_VERSION VERSION_LESS 3.4)\n   16      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   17:     set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   18:     set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   19    else()\n   20      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   ..\n   31    if(CMAKE_VERSION VERSION_GREATER 3.3)\n   32      # CMake 3.4 introduced 'COMPILER_LAUNCHER'\n   33:     set_property(TARGET \"${target}\" PROPERTY C_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   34:     set_property(TARGET \"${target}\" PROPERTY CXX_COMPILER_LAUNCHER \"${CCACHE_EXECUTABLE}\")\n   35    else()\n   36      # Prior to 3.4, had to use these properties Note: These may conflict with CTest\n   37:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_EXECUTABLE}\")\n   38:     set_property(TARGET \"${target}\" PROPERTY RULE_LAUNCH_LINK \"${CCACHE_EXECUTABLE}\")\n   39    endif()\n   40  endfunction()\n\n~/Projects/plot-cv/qjs-opencv/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/qjs-opencv/cmake/FindPNG.cmake:\n  117        if((CMAKE_SYSTEM_NAME STREQUAL \"Linux\") AND (\"${PNG_LIBRARY}\" MATCHES\n  118                                                     \"\\\\${CMAKE_STATIC_LIBRARY_SUFFIX}$\"))\n  119:         set_property(TARGET PNG::PNG APPEND PROPERTY INTERFACE_LINK_LIBRARIES m)\n  120        endif()\n  121  \n  ...\n  125        endif()\n  126        if(EXISTS \"${PNG_LIBRARY_RELEASE}\")\n  127:         set_property(TARGET PNG::PNG APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n  128          set_target_properties(\n  129            PNG::PNG PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE \"C\"\n  ...\n  131        endif()\n  132        if(EXISTS \"${PNG_LIBRARY_DEBUG}\")\n  133:         set_property(TARGET PNG::PNG APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n  134          set_target_properties(PNG::PNG PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG \"C\"\n  135                                                    IMPORTED_LOCATION_DEBUG \"${PNG_LIBRARY_DEBUG}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/CMakeLists.txt:\n  106  endif()\n  107  if(DEFINED CMAKE_BUILD_TYPE)\n  108:   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"${CMAKE_CONFIGURATION_TYPES}\")\n  109  endif()\n  110  \n  ...\n  927  # ----------------------------------------------------------------------------\n  928  if(ENABLE_SOLUTION_FOLDERS)\n  929:   set_property(GLOBAL PROPERTY USE_FOLDERS ON)\n  930:   set_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER \"CMakeTargets\")\n  931  endif()\n  932  \n  ...\n 1679        set(__msg \"YES (${INF_ENGINE_RELEASE} / ${INF_ENGINE_VERSION})\")\n 1680        ocv_get_imported_target(ie_target \"${ie_target}\")\n 1681:       get_target_property(_lib ${ie_target} IMPORTED_LOCATION)\n 1682:       get_target_property(_lib_imp_rel ${ie_target} IMPORTED_IMPLIB_RELEASE)\n 1683:       get_target_property(_lib_imp_dbg ${ie_target} IMPORTED_IMPLIB_DEBUG)\n 1684:       get_target_property(_lib_rel ${ie_target} IMPORTED_LOCATION_RELEASE)\n 1685:       get_target_property(_lib_dbg ${ie_target} IMPORTED_LOCATION_DEBUG)\n 1686        ocv_build_features_string(\n 1687          _lib\n ....\n 1712          ELSE\n 1713          \"unknown\")\n 1714:       get_target_property(_inc ${ie_target} INTERFACE_INCLUDE_DIRECTORIES)\n 1715        status(\"    Inference Engine:\" \"${__msg}\")\n 1716        status(\"        * libs:\" \"${_lib}\")\n ....\n 1724        ocv_get_imported_target(__target ngraph::ngraph)\n 1725        set(__msg \"YES (${ngraph_VERSION})\")\n 1726:       get_target_property(_lib ${__target} IMPORTED_LOCATION)\n 1727:       get_target_property(_lib_imp_rel ${__target} IMPORTED_IMPLIB_RELEASE)\n 1728:       get_target_property(_lib_imp_dbg ${__target} IMPORTED_IMPLIB_DEBUG)\n 1729:       get_target_property(_lib_rel ${__target} IMPORTED_LOCATION_RELEASE)\n 1730:       get_target_property(_lib_dbg ${__target} IMPORTED_LOCATION_DEBUG)\n 1731        ocv_build_features_string(\n 1732          _lib\n ....\n 1757          ELSE\n 1758          \"unknown\")\n 1759:       get_target_property(_inc ${__target} INTERFACE_INCLUDE_DIRECTORIES)\n 1760        status(\"    nGraph:\" \"${__msg}\")\n 1761        status(\"        * libs:\" \"${_lib}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/libspng/CMakeLists.txt:\n    7  \n    8  set(CURR_INCLUDE_DIR \"${CMAKE_CURRENT_LIST_DIR}\")\n    9: set_property(GLOBAL PROPERTY SPNG_INCLUDE_DIR ${CURR_INCLUDE_DIR})\n   10  ocv_include_directories(${ZLIB_INCLUDE_DIRS})\n   11  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/openjpeg/CMakeLists.txt:\n  190  set(OPENJPEG_MINOR_VERSION ${OPENJPEG_VERSION_MINOR} PARENT_SCOPE)\n  191  set(OPENJPEG_BUILD_VERSION ${OPENJPEG_VERSION_BUILD} PARENT_SCOPE)\n  192: get_target_property(_openjpeg_include_dirs ${OPENJPEG_LIBRARY_NAME} INCLUDE_DIRECTORIES)\n  193  set(OPENJPEG_INCLUDE_DIRS  ${_openjpeg_include_dirs} PARENT_SCOPE)\n  194  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/carotene/hal/CMakeLists.txt:\n   67  include_directories(\"${CAROTENE_DIR}/include\")\n   68  \n   69: get_target_property(carotene_defs carotene_objs INTERFACE_COMPILE_DEFINITIONS)\n   70: set_property(DIRECTORY APPEND PROPERTY COMPILE_DEFINITIONS ${carotene_defs})\n   71  \n   72    if(CV_GCC)\n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/quirc/CMakeLists.txt:\n    3  set(CURR_INCLUDE_DIR \"${CMAKE_CURRENT_LIST_DIR}/include\")\n    4  \n    5: set_property(GLOBAL PROPERTY QUIRC_INCLUDE_DIR ${CURR_INCLUDE_DIR})\n    6  ocv_include_directories(${CURR_INCLUDE_DIR})\n    7  \n\n~/Projects/plot-cv/qjs-opencv/opencv/3rdparty/libjpeg-turbo/src/simd/CMakeLists.txt:\n   87      if(${var} STREQUAL \"-g\")\n   88        if(CMAKE_ASM_NASM_DEBUG_FORMAT)\n   89:         set_property(CACHE ${var} PROPERTY VALUE \"-g ${CMAKE_ASM_NASM_DEBUG_FORMAT}\")\n   90        else()\n   91:         set_property(CACHE ${var} PROPERTY VALUE \"\")\n   92        endif()\n   93      endif()\n   ..\n  479  if(CMAKE_COMPILER_IS_GNUCC)\n  480    foreach(file ${SIMD_SOURCES})\n  481:     set_property(SOURCE ${file} APPEND_STRING PROPERTY COMPILE_FLAGS\n  482        \" -fno-strict-aliasing\")\n  483    endforeach()\n  484  endif()\n  485  foreach(file ${SIMD_SOURCES})\n  486:   set_property(SOURCE ${file} APPEND_STRING PROPERTY COMPILE_FLAGS\n  487      \" -Wa,-mloongson-mmi,-mloongson-ext\")\n  488  endforeach()\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n   30      if((__variableName MATCHES \"${regex}\" OR __variableName_lower MATCHES \"${regex_lower}\")\n   31         AND NOT __variableName_lower MATCHES \"^__\")\n   32:       get_property(__value VARIABLE PROPERTY \"${__variableName}\")\n   33        set(__VARS \"${__VARS}${__variableName}=${__value}\\n\")\n   34      endif()\n   ..\n  311  endfunction()\n  312  \n  313: function(ocv_append_target_property target prop)\n  314:   get_target_property(val ${target} ${prop})\n  315    if(val)\n  316      set(val \"${val} ${ARGN}\")\n  ...\n  413  macro(ocv_clear_internal_cache_vars)\n  414    foreach(_var ${ARGN})\n  415:     get_property(_propertySet CACHE ${_var} PROPERTY TYPE SET)\n  416      if(_propertySet)\n  417:       get_property(_type CACHE ${_var} PROPERTY TYPE)\n  418        if(_type STREQUAL \"INTERNAL\")\n  419          message(\"Cleaning INTERNAL cached variable: ${_var}\")\n  ...\n 1254      if(INSTALL_PDB AND NOT INSTALL_IGNORE_PDB AND NOT OPENCV_${__target}_PDB_SKIP)\n 1255        set(__location_key \"ARCHIVE\") # static libs\n 1256:       get_target_property(__target_type ${__target} TYPE)\n 1257        if(\"${__target_type}\" STREQUAL \"SHARED_LIBRARY\")\n 1258          set(__location_key \"RUNTIME\") # shared libs (.DLL)\n ....\n 1303              install(\n 1304                FILES\n 1305:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_DEBUG>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1306                DESTINATION \"${__dst}\"\n 1307                CONFIGURATIONS Debug\n ....\n 1310              install(\n 1311                FILES\n 1312:                 \"$<TARGET_PROPERTY:${__target},ARCHIVE_OUTPUT_DIRECTORY>/$<CONFIG>/$<IF:$<BOOL:$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME_RELEASE>,$<TARGET_PROPERTY:${__target},COMPILE_PDB_NAME>>.pdb\"\n 1313                DESTINATION \"${__dst}\"\n 1314                CONFIGURATIONS Release\n ....\n 1629  function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631:   get_target_property(__type \"${__result}\" TYPE)\n 1632    if(__type STREQUAL \"INTERFACE_LIBRARY\")\n 1633:     get_target_property(__libs \"${__result}\" INTERFACE_LINK_LIBRARIES)\n 1634      list(GET __libs 0 __interface)\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n ....\n 1657    foreach(m ${OPENCV_MODULES_PUBLIC})\n 1658      if(TARGET ${m})\n 1659:       get_target_property(deps ${m} INTERFACE_LINK_LIBRARIES)\n 1660        if(NOT deps)\n 1661          set(deps \"\")\n ....\n 1680          endif()\n 1681          if(TARGET ${dep})\n 1682:           get_target_property(_type ${dep} TYPE)\n 1683            if((_type STREQUAL \"STATIC_LIBRARY\" AND BUILD_SHARED_LIBS) OR _type STREQUAL\n 1684                                                                          \"INTERFACE_LIBRARY\"\n ....\n 1687              # nothing\n 1688            else()\n 1689:             get_target_property(_output ${dep} IMPORTED_LOCATION)\n 1690              if(NOT _output)\n 1691:               get_target_property(_output ${dep} ARCHIVE_OUTPUT_DIRECTORY)\n 1692:               get_target_property(_output_name ${dep} OUTPUT_NAME)\n 1693                if(NOT _output_name)\n 1694                  set(_output_name \"${dep}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectCUDA.cmake:\n  122    )\n  123    if(CMAKE_VERSION VERSION_GREATER \"2.8\")\n  124:     set_property(CACHE CUDA_GENERATION PROPERTY STRINGS \"\" ${_generations})\n  125    endif()\n  126  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVModule.cmake:\n 1036    endif()\n 1037  \n 1038:   get_target_property(_target_type ${the_module} TYPE)\n 1039    if(OPENCV_MODULE_${the_module}_CLASS STREQUAL \"PUBLIC\" AND\n 1040        (\"${_target_type}\" STREQUAL \"SHARED_LIBRARY\" OR (NOT BUILD_SHARED_LIBS OR NOT INSTALL_CREATE_DISTRIB)))\n ....\n 1332        )\n 1333  \n 1334:       ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"__OPENCV_TESTS=1\")\n 1335  \n 1336        if(ENABLE_SOLUTION_FOLDERS)\n ....\n 1339  \n 1340        if(OPENCV_TEST_BIGDATA)\n 1341:         ocv_append_target_property(${the_target} COMPILE_DEFINITIONS \"OPENCV_TEST_BIGDATA=1\")\n 1342        endif()\n 1343  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVPCHSupport.cmake:\n   39    if(CV_GCC)\n   40  \n   41:     get_target_property(_targetType ${_PCH_current_target} TYPE)\n   42      if(${_targetType} STREQUAL SHARED_LIBRARY AND NOT WIN32)\n   43        list(APPEND ${_out_compile_flags} \"-fPIC\")\n   44      endif()\n   45  \n   46:     # Processed via $<TARGET_PROPERTY:target,COMPILE_DEFINITIONS>\n   47:     #GET_PROPERTY(_definitions DIRECTORY PROPERTY COMPILE_DEFINITIONS)\n   48:     #GET_TARGET_PROPERTY(_target_definitions ${_PCH_current_target} COMPILE_DEFINITIONS)\n   49  \n   50:     get_target_property(_cxx_standard ${_PCH_current_target} CXX_STANDARD)\n   51      if(_cxx_standard)\n   52:       get_target_property(_cxx_extensions ${_PCH_current_target} CXX_EXTENSIONS)\n   53        if(_cxx_extensions)\n   54          list(APPEND ${_out_compile_flags} \"${CMAKE_CXX${_cxx_standard}_EXTENSION_COMPILE_OPTION}\")\n   ..\n   74    endforeach(item)\n   75  \n   76:   get_target_property(DIRINC ${_PCH_current_target} INCLUDE_DIRECTORIES)\n   77    foreach(item ${DIRINC})\n   78      ocv_is_opencv_directory(__result ${item})\n   ..\n  194    endif()\n  195  \n  196:   get_target_property(_sources ${_targetName} SOURCES)\n  197    foreach(src ${_sources})\n  198      if(NOT \"${src}\" MATCHES \"\\\\.mm$\" AND NOT \"${src}\" MATCHES \"\\\\.rc$\")\n  ...\n  243    list(APPEND _compile_FLAGS \"${_PCH_include_prefix}\\\"${_path}\\\"\")\n  244  \n  245:   get_target_property(type ${_targetName} TYPE)\n  246    if(type STREQUAL \"SHARED_LIBRARY\")\n  247:     get_target_property(__DEFINES ${_targetName} DEFINE_SYMBOL)\n  248      if(NOT __DEFINES MATCHES __DEFINES-NOTFOUND)\n  249        list(APPEND _compile_FLAGS \"${_PCH_define_prefix}${__DEFINES}\")\n  ...\n  252  \n  253    if(type STREQUAL \"SHARED_LIBRARY\" OR type STREQUAL \"STATIC_LIBRARY\")\n  254:     get_target_property(__pic ${_targetName} POSITION_INDEPENDENT_CODE)\n  255      if(__pic AND CMAKE_CXX_COMPILE_OPTIONS_PIC AND NOT OPENCV_SKIP_PCH_PIC_HANDLING\n  256         AND NOT OPENCV_SKIP_PCH_PIC_HANDLING_${_targetName})\n  ...\n  258      endif()\n  259    elseif(type STREQUAL \"EXECUTABLE\")\n  260:     get_target_property(__pie ${_targetName} POSITION_INDEPENDENT_CODE)\n  261      if(__pie AND CMAKE_CXX_COMPILE_OPTIONS_PIE AND NOT OPENCV_SKIP_PCH_PIE_HANDLING\n  262         AND NOT OPENCV_SKIP_PCH_PIE_HANDLING_${_targetName})\n  ...\n  265    endif()\n  266  \n  267:   get_target_property(DIRINC ${_targetName} INCLUDE_DIRECTORIES)\n  268    set_target_properties(${_targetName}_pch_dephelp PROPERTIES INCLUDE_DIRECTORIES \"${DIRINC}\")\n  269  \n  ...\n  291    tail -n1 \\$0\n  292  fi\n  293: ${_command} '-D$<JOIN:$<TARGET_PROPERTY:${_targetName},COMPILE_DEFINITIONS>,' '-D>'\n  294  \")\n  295    get_filename_component(_outdir ${_output} PATH)\n  ...\n  340      # and I don't want to specify /F- for each moc/res/ui generated files (using Qt)\n  341  \n  342:     get_target_property(_sources ${_targetName} SOURCES)\n  343      foreach(src ${_sources})\n  344        if(\"${src}\" MATCHES \"\\\\.c(pp|xx)?$\")\n  ...\n  355  \n  356      #also include ${oldProps} to have the same compile options\n  357:     get_target_property(oldProps ${_targetName} COMPILE_FLAGS)\n  358      if(oldProps MATCHES NOTFOUND)\n  359        set(oldProps \"\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLAPACK.cmake:\n   82      )\n   83        # workaround DEFAULTLIB:tbb12.lib issue\n   84:       get_target_property(_tbb_lib tbb IMPORTED_LOCATION)\n   85        if(NOT _tbb_lib)\n   86:         get_target_property(_tbb_lib tbb IMPORTED_LOCATION_RELEASE)\n   87        endif()\n   88        if(_tbb_lib AND NOT OPENCV_SKIP_WORKAROUND_MKL_LINK_DIRECTORIES_TBB)\n   ..\n  102      # TODO add cache for try_compile() inputs/results\n  103  \n  104:     get_property(__link_directories DIRECTORY PROPERTY LINK_DIRECTORIES)\n  105      if(LAPACK_LINK_LIBRARIES)\n  106        list(APPEND __link_directories ${LAPACK_LINK_LIBRARIES})\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptimizations.cmake:\n  415  set(CPU_BASELINE \"DETECT\" CACHE STRING \"${HELP_CPU_BASELINE}\")\n  416  set(CPU_DISPATCH \"\" CACHE STRING \"${HELP_CPU_DISPATCH}\")\n  417: set_property(CACHE CPU_BASELINE PROPERTY STRINGS \"\" ${CPU_KNOWN_OPTIMIZATIONS})\n  418: set_property(CACHE CPU_DISPATCH PROPERTY STRINGS \"\" ${CPU_KNOWN_OPTIMIZATIONS})\n  419  \n  420  # Update CPU_BASELINE_DETECT flag\n  ...\n  788          target_include_directories(\n  789            ${TARGET_BASE_NAME}_${OPT}\n  790:           PRIVATE $<TARGET_PROPERTY:${TARGET_BASE_NAME},INCLUDE_DIRECTORIES>)\n  791          #list(APPEND __result_libs ${TARGET_BASE_NAME}_${OPT})\n  792          list(APPEND __result \"$<TARGET_OBJECTS:${TARGET_BASE_NAME}_${OPT}>\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVGenAndroidMK.cmake:\n   30        set(lib_name \"${lib}\")\n   31        if(TARGET ${lib})\n   32:         get_target_property(_output ${lib} IMPORTED_LOCATION)\n   33          if(NOT _output)\n   34:           get_target_property(output_name ${lib} OUTPUT_NAME)\n   35            if(output_name)\n   36              set(lib_name \"${output_name}\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVCompilerOptions.cmake:\n   15    if(CCACHE_PROGRAM)\n   16      message(STATUS \"Looking for ccache - found (${CCACHE_PROGRAM})\")\n   17:     get_property(__OLD_RULE_LAUNCH_COMPILE GLOBAL PROPERTY RULE_LAUNCH_COMPILE)\n   18      if(CMAKE_GENERATOR MATCHES \"Xcode\")\n   19        configure_file(\"${CMAKE_CURRENT_LIST_DIR}/templates/xcode-launch-c.in\"\n   ..\n   33        message(STATUS \"Can't replace CMake compiler launcher\")\n   34      else()\n   35:       set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_PROGRAM}\")\n   36        # NOTE: Actually this check doesn't work as expected.\n   37        # \"RULE_LAUNCH_COMPILE\" is ignored by CMake during try_compile() step.\n   ..\n   42        else()\n   43          message(STATUS \"Unable to compile program with enabled ccache, reverting...\")\n   44:         set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${__OLD_RULE_LAUNCH_COMPILE}\")\n   45        endif()\n   46      endif()\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   26          return()\n   27        endif()\n   28:       get_target_property(_lib TBB::tbb IMPORTED_LOCATION_RELEASE)\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30:       get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31        add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/FindCUDA.cmake:\n  676  file(GLOB __cuda_available_target_tiplets RELATIVE \"${CUDA_TOOLKIT_ROOT_DIR}/targets\"\n  677       \"${CUDA_TOOLKIT_ROOT_DIR}/targets/*\")\n  678: set_property(CACHE CUDA_TARGET_TRIPLET PROPERTY STRINGS ${__cuda_available_target_tiplets})\n  679  mark_as_advanced(CUDA_TARGET_TRIPLET)\n  680  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   76    if(NOT BUILD_PROTOBUF)\n   77      if(TARGET \"${Protobuf_LIBRARIES}\")\n   78:       get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION_RELEASE)\n   79        if(NOT __location)\n   80:         get_target_property(__location \"${Protobuf_LIBRARIES}\" IMPORTED_LOCATION)\n   81        endif()\n   82      elseif(Protobuf_LIBRARY)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/android/OpenCVDetectAndroidSDK.cmake:\n  142          if(DEFINED ANDROID_SDK_BUILD_TOOLS_SUBDIR)\n  143            set(ANDROID_SDK_BUILD_TOOLS_VERSION \"${__selected}\" CACHE STRING \"Android SDK Build Tools version\")\n  144:           set_property(CACHE ANDROID_SDK_BUILD_TOOLS_VERSION PROPERTY STRINGS ${__versions})\n  145            set(ANDROID_SDK_BUILD_TOOLS \"${__search_dir}/${d}\" CACHE INTERNAL \"Android SDK Build Tools path\")\n  146            message(STATUS \"Android SDK Build Tools: ver. ${ANDROID_SDK_BUILD_TOOLS_VERSION} (subdir ${ANDROID_SDK_BUILD_TOOLS_SUBDIR} from ${__dirlist})\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/android/android_ant_projects.cmake:\n   36  if(ANDROID_SDK_TARGETS)\n   37    message(STATUS \"Android SDK Tools: Available targets: ${ANDROID_SDK_TARGETS}\")\n   38:   set_property(CACHE ANDROID_SDK_TARGET PROPERTY STRINGS ${ANDROID_SDK_TARGETS} )\n   39  else()\n   40    message(FATAL_ERROR \"Android: List of installed Android targets is empty\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/gapi/cmake/standalone.cmake:\n   44  \n   45  set_target_properties(${FLUID_TARGET} PROPERTIES POSITION_INDEPENDENT_CODE True)\n   46: set_property(TARGET ${FLUID_TARGET} PROPERTY CXX_STANDARD 11)\n   47  \n   48  if(MSVC)\n\n~/Projects/plot-cv/qjs-opencv/opencv/modules/objdetect/CMakeLists.txt:\n   14  \n   15  if(HAVE_QUIRC)\n   16:     get_property(QUIRC_INCLUDE GLOBAL PROPERTY QUIRC_INCLUDE_DIR)\n   17      ocv_include_directories(${QUIRC_INCLUDE})\n   18      ocv_target_link_libraries(${the_module} quirc)\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/winpack_dldt/2021.4.2/cmake/InferenceEngineConfig.cmake:\n   14  \n   15  # Import target \"IE::inference_engine\" for configuration \"Debug\"\n   16: set_property(TARGET IE::inference_engine APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n   17  set_target_properties(IE::inference_engine PROPERTIES\n   18    IMPORTED_IMPLIB_DEBUG \"${_IMPORT_PREFIX}/deployment_tools/inference_engine/lib/intel64/inference_engined.lib\"\n   ..\n   22  \n   23  # Import target \"IE::inference_engine\" for configuration \"Release\"\n   24: set_property(TARGET IE::inference_engine APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n   25  set_target_properties(IE::inference_engine PROPERTIES\n   26    IMPORTED_IMPLIB_RELEASE \"${_IMPORT_PREFIX}/deployment_tools/inference_engine/lib/intel64/inference_engine.lib\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/ios/cmake/Toolchains/common-ios-toolchain.cmake:\n    1  # load settings in case of \"try compile\"\n    2  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    3: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    4  if(__IN_TRY_COMPILE)\n    5    set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/linux/gnu.toolchain.cmake:\n    3  # load settings in case of \"try compile\"\n    4  set(TOOLCHAIN_CONFIG_FILE \"${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/toolchain.config.cmake\")\n    5: get_property(__IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)\n    6  if(__IN_TRY_COMPILE)\n    7    include(\"${CMAKE_CURRENT_SOURCE_DIR}/../toolchain.config.cmake\" OPTIONAL) # CMAKE_BINARY_DIR is different\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/android/android.toolchain.cmake:\n  202  \n  203  # inherit settings in recursive loads\n  204: get_property( _CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE )\n  205  if( _CMAKE_IN_TRY_COMPILE )\n  206   include( \"${CMAKE_CURRENT_SOURCE_DIR}/../android.toolchain.config.cmake\" OPTIONAL )\n  ...\n  836   if( CMAKE_VERSION VERSION_GREATER \"2.8\" )\n  837    list( SORT ANDROID_SUPPORTED_NATIVE_API_LEVELS )\n  838:   set_property( CACHE ANDROID_NATIVE_API_LEVEL PROPERTY STRINGS ${ANDROID_SUPPORTED_NATIVE_API_LEVELS} )\n  839   endif()\n  840  endif()\n  ...\n  846  if( CMAKE_VERSION VERSION_GREATER \"2.8\" )\n  847   list( SORT ANDROID_SUPPORTED_ABIS_${ANDROID_ARCH_NAME} )\n  848:  set_property( CACHE ANDROID_ABI PROPERTY STRINGS ${ANDROID_SUPPORTED_ABIS_${ANDROID_ARCH_NAME}} )\n  849  endif()\n  850  \n\n~/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n~/Projects/plot-cv/inst/x86_64-linux-gnu/usr/local/lib/cmake/FindQuickJS.cmake:\n   36  \n   37    if(CACHE{CMAKE_BUILD_TYPE})\n   38:     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release MinSizeRel RelWithDebInfo)\n   39    endif(CACHE{CMAKE_BUILD_TYPE})\n   40  \n\n205 matches across 90 files\n\n\nSearching 1044 files for \"\\bIMPORTED\\b\" (regex)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   26    ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28:   add_library(brotlicommon STATIC IMPORTED GLOBAL)\n   29:   add_library(brotlidec STATIC IMPORTED GLOBAL)\n   30:   add_library(brotlienc STATIC IMPORTED GLOBAL)\n   31  \n   32    add_dependencies(brotlicommon libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   64    if(LIBRESSL_FOUND)\n   65      if(NOT TARGET libcrypto)\n   66:       add_library(libcrypto UNKNOWN IMPORTED)\n   67        set_target_properties(\n   68          libcrypto\n   ..\n   73  \n   74      if(NOT TARGET libssl)\n   75:       add_library(libssl UNKNOWN IMPORTED)\n   76        set_target_properties(\n   77          libssl\n   ..\n   83  \n   84      if(NOT TARGET libtls)\n   85:       add_library(libtls UNKNOWN IMPORTED)\n   86        set_target_properties(\n   87          libtls\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   62    if(MBEDTLS_FOUND)\n   63      if(NOT TARGET mbedcrypto)\n   64:       add_library(mbedcrypto UNKNOWN IMPORTED)\n   65        set_target_properties(\n   66          mbedcrypto\n   ..\n   71  \n   72      if(NOT TARGET mbedx509)\n   73:       add_library(mbedx509 UNKNOWN IMPORTED)\n   74        set_target_properties(\n   75          mbedx509\n   ..\n   81  \n   82      if(NOT TARGET mbedtls)\n   83:       add_library(mbedtls UNKNOWN IMPORTED)\n   84        set_target_properties(\n   85          mbedtls\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   95  \n   96    set(MBEDTLS_LIBRARY mbedtls CACHE STRING \"MbedTLS library\" FORCE)\n   97:   add_library(${MBEDTLS_LIBRARY} STATIC IMPORTED)\n   98    add_dependencies(${MBEDTLS_LIBRARY} ${MBEDTLS_TARGET_NAME})\n   99    set_property(TARGET ${MBEDTLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libmbedtls.a)\n  100  \n  101    set(MBEDTLS_X509_LIBRARY mbedx509 CACHE STRING \"MbedTLS x509 library\" FORCE)\n  102:   add_library(${MBEDTLS_X509_LIBRARY} STATIC IMPORTED)\n  103    add_dependencies(${MBEDTLS_X509_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  104    set_property(TARGET ${MBEDTLS_X509_LIBRARY} PROPERTY IMPORTED_LOCATION\n  ...\n  106  \n  107    set(MBEDTLS_CRYPTO_LIBRARY mbedcrypto CACHE STRING \"MbedTLS crypto library\" FORCE)\n  108:   add_library(${MBEDTLS_CRYPTO_LIBRARY} STATIC IMPORTED)\n  109    add_dependencies(${MBEDTLS_CRYPTO_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  110    set_property(TARGET ${MBEDTLS_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   96  \n   97    set(LIBRESSL_CRYPTO_LIBRARY libcrypto CACHE STRING \"LibreSSL crypto library\" FORCE)\n   98:   add_library(${LIBRESSL_CRYPTO_LIBRARY} STATIC IMPORTED)\n   99    add_dependencies(${LIBRESSL_CRYPTO_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  100    set_property(TARGET ${LIBRESSL_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  ...\n  102  \n  103    set(LIBRESSL_SSL_LIBRARY libssl CACHE STRING \"LibreSSL ssl library\" FORCE)\n  104:   add_library(${LIBRESSL_SSL_LIBRARY} STATIC IMPORTED)\n  105    add_dependencies(${LIBRESSL_SSL_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  106    set_property(TARGET ${LIBRESSL_SSL_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libssl.a)\n  107  \n  108    set(LIBRESSL_TLS_LIBRARY libtls CACHE STRING \"LibreSSL tls library\" FORCE)\n  109:   add_library(${LIBRESSL_TLS_LIBRARY} STATIC IMPORTED)\n  110    add_dependencies(${LIBRESSL_TLS_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  111    set_property(TARGET ${LIBRESSL_TLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libtls.a)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   25    ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27:   add_library(glfw3 STATIC IMPORTED GLOBAL)\n   28  \n   29    add_dependencies(glfw3 glfw)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   31      ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33:     add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   34      add_dependencies(gl3w-static libgl3w)\n   35  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/gl3w/CMakeLists.txt:\n   29  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} ${OPENGL_LIBRARIES})\n   30  else()\n   31: \t# Since CMake 3.8 the IMPORTED targets available\n   32  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} OpenGL::GL OpenGL::GLU)\n   33  endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/CMakeLists.txt:\n   57       INSTALL_COMMAND \"\" )\n   58  \n   59: add_library(libnyquist STATIC IMPORTED GLOBAL)\n   60  \n   61  \n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindFFTW3.cmake:\n   78  \t\n   79  \tif(NOT TARGET FFTW3::fftw3)\n   80: \t  add_library(FFTW3::fftw3 UNKNOWN IMPORTED)\n   81  \t\tset_target_properties(FFTW3::fftw3 PROPERTIES\n   82  \t\t\tINTERFACE_INCLUDE_DIRECTORIES \"${FFTW3_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindOgg.cmake:\n   48    \n   49    if(NOT TARGET Ogg::ogg)\n   50:   add_library(Ogg::ogg UNKNOWN IMPORTED)\n   51      set_target_properties(Ogg::ogg PROPERTIES\n   52        INTERFACE_INCLUDE_DIRECTORIES \"${Ogg_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindFLAC.cmake:\n   53    set(FLAC_LIBRARIES ${FLAC_LIBRARY} ${Ogg_LIBRARIES})\n   54      if(NOT TARGET FLAC::FLAC)\n   55:     add_library(FLAC::FLAC UNKNOWN IMPORTED)\n   56      set_target_properties(FLAC::FLAC PROPERTIES\n   57        INTERFACE_INCLUDE_DIRECTORIES \"${FLAC_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindVorbis.cmake:\n    5  Finds the native vorbis, vorbisenc amd vorbisfile includes and libraries.\n    6  \n    7: Imported Targets\n    8  ^^^^^^^^^^^^^^^^\n    9  \n   10: This module provides the following imported targets, if found:\n   11  \n   12  ``Vorbis::vorbis``\n   ..\n  164    set(Vorbis_Vorbis_LIBRARIES ${Vorbis_Vorbis_LIBRARY} ${Ogg_LIBRARIES})\n  165    if(NOT TARGET Vorbis::vorbis)\n  166:     add_library(Vorbis::vorbis UNKNOWN IMPORTED)\n  167      set_target_properties(Vorbis::vorbis PROPERTIES\n  168        INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_Vorbis_INCLUDE_DIR}\"\n  ...\n  176      set(Vorbis_Enc_LIBRARIES ${Vorbis_Enc_LIBRARY} ${Vorbis_Vorbis_LIBRARIES})\n  177      if(NOT TARGET Vorbis::vorbisenc)\n  178:       add_library(Vorbis::vorbisenc UNKNOWN IMPORTED)\n  179        set_target_properties(Vorbis::vorbisenc PROPERTIES\n  180          INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_Enc_INCLUDE_DIR}\"\n  ...\n  189      set(Vorbis_File_LIBRARIES ${Vorbis_File_LIBRARY} ${Vorbis_Vorbis_LIBRARIES})\n  190      if(NOT TARGET Vorbis::vorbisfile)\n  191:       add_library(Vorbis::vorbisfile UNKNOWN IMPORTED)\n  192        set_target_properties(Vorbis::vorbisfile PROPERTIES\n  193          INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_File_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindOpus.cmake:\n   54  \n   55    if(NOT TARGET Opus::opus)\n   56:     add_library(Opus::opus UNKNOWN IMPORTED)\n   57      set_target_properties(Opus::opus PROPERTIES\n   58        INTERFACE_INCLUDE_DIRECTORIES \"${OPUS_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindSndFile.cmake:\n   47    \n   48    if(NOT TARGET SndFile::sndfile)\n   49:     add_library(SndFile::sndfile UNKNOWN IMPORTED)\n   50      set_target_properties(SndFile::sndfile PROPERTIES\n   51        INTERFACE_INCLUDE_DIRECTORIES \"${SndFile_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/tests/CMakeLists.txt:\n    9    pkg_check_modules(FFTW3 fftw3 IMPORTED_TARGET)\n   10    if(FFTW3_FOUND)\n   11:     add_library(FFTW3::fftw3 INTERFACE IMPORTED)\n   12      target_link_libraries(FFTW3::fftw3 INTERFACE PkgConfig::FFTW3)\n   13    endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/examples/CMakeLists.txt:\n    5  if(ALSA_FOUND)\n    6    if(NOT TARGET ALSA::ALSA)\n    7:     add_library(ALSA::ALSA UNKNOWN IMPORTED)\n    8      set_target_properties(ALSA::ALSA PROPERTIES\n    9      INTERFACE_INCLUDE_DIRECTORIES \"${ALSA_INCLUDE_DIRS}\"\n\n~/Projects/plot-cv/quickjs/qjs-modules/pigpio/cmake/FindRT.cmake:\n   31  \n   32  if (NOT TARGET RT::RT)\n   33:   add_library(RT::RT INTERFACE IMPORTED)\n   34  \n   35    set_target_properties(RT::RT PROPERTIES\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   32    ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34:   add_library(glfw3 STATIC IMPORTED GLOBAL)\n   35  \n   36    add_dependencies(glfw3 glfw)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   37      ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39:     add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   40      add_dependencies(gl3w-static libgl3w)\n   41  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/gl3w/CMakeLists.txt:\n   31  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} ${OPENGL_LIBRARIES})\n   32  else()\n   33: \t# Since CMake 3.8 the IMPORTED targets available\n   34  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} OpenGL::GL OpenGL::GLU)\n   35  endif()\n\n~/Projects/plot-cv/cmake/sdl2-config.cmake:\n   20    string(STRIP \"${SDL2_EXTRA_LINK_FLAGS_STATIC}\" SDL2_EXTRA_LINK_FLAGS_STATIC)\n   21  \n   22:   add_library(SDL2::SDL2 SHARED IMPORTED)\n   23    set_target_properties(\n   24      SDL2::SDL2\n   ..\n   29                 INTERFACE_LINK_LIBRARIES \"${SDL2_EXTRA_LINK_FLAGS}\")\n   30  \n   31:   add_library(SDL2::SDL2-static STATIC IMPORTED)\n   32    set_target_properties(\n   33      SDL2::SDL2-static\n   ..\n   38                 INTERFACE_LINK_LIBRARIES \"${SDL2_EXTRA_LINK_FLAGS_STATIC}\")\n   39  \n   40:   add_library(SDL2::SDL2main STATIC IMPORTED)\n   41    set_target_properties(\n   42      SDL2::SDL2main\n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/text/cmake/init.cmake:\n   42      set(def \"\")\n   43      if(BUILD_SHARED_LIBS)\n   44:       set(imp IMPORTED)\n   45      endif()\n   46      add_library(ocv.3rdparty.${name} INTERFACE ${imp})\n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/cmake/FindGflags.cmake:\n  345  \n  346    # gflags v2.1 - 2.1.2 shipped with a bug in their gflags-config.cmake [1]\n  347:   # whereby gflags_LIBRARIES = \"gflags\", but there was no imported target\n  348    # called \"gflags\", they were called: gflags[_nothreads]-[static/shared].\n  349    # As this causes linker errors when gflags is not installed in a location\n  ...\n  360        message(STATUS \"Detected broken gflags install in: ${gflags_DIR}, \"\n  361          \"version: ${gflags_VERSION} <= 2.1.2 which defines gflags_LIBRARIES = \"\n  362:         \"${gflags_LIBRARIES} which is not an imported CMake target, see: \"\n  363          \"https://github.com/gflags/gflags/issues/110.  Attempting to fix by \"\n  364          \"detecting correct gflags target.\")\n  ...\n  379          message(STATUS \"Failed to fix detected broken gflags install in: \"\n  380            \"${gflags_DIR}, version: ${gflags_VERSION} <= 2.1.2, none of the \"\n  381:           \"imported targets for gflags: ${CHECK_GFLAGS_IMPORTED_TARGET_NAMES} \"\n  382            \"are defined.  Will continue with a manual search for gflags \"\n  383            \"components.  We recommend you build/install a version of gflags > \"\n  ...\n  409      #\n  410      # NOTE: We use the regex method to determine the namespace here, as\n  411:     #       check_cxx_source_compiles() will not use imported targets, which\n  412      #       is what gflags will be in this case.\n  413      gflags_check_gflags_namespace_using_regex()\n\n~/Projects/plot-cv/qjs-opencv/cmake/FindPNG.cmake:\n    8  Find libpng, the official reference library for the PNG image format.\n    9  \n   10: Imported targets\n   11  ^^^^^^^^^^^^^^^^\n   12  \n   13: This module defines the following :prop_tgt:`IMPORTED` target:\n   14  \n   15  ``PNG::PNG``\n   ..\n  109  \n  110      if(NOT TARGET PNG::PNG)\n  111:       add_library(PNG::PNG UNKNOWN IMPORTED)\n  112        set_target_properties(\n  113          PNG::PNG\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n 1584  function(ocv_add_external_target name inc link def)\n 1585    if(BUILD_SHARED_LIBS AND link)\n 1586:     set(imp IMPORTED)\n 1587    endif()\n 1588    add_library(ocv.3rdparty.${name} INTERFACE ${imp})\n ....\n 1590      if(NOT (CMAKE_VERSION VERSION_LESS \"3.11.0\"))\n 1591  \n 1592:     # https://gitlab.kitware.com/cmake/cmake/-/merge_requests/1264 : eliminates \"Cannot specify compile definitions for imported target\" error message\n 1593        target_compile_definitions(ocv.3rdparty.${name} INTERFACE \"${def}\")\n 1594      else()\n ....\n 1599      if(NOT (CMAKE_VERSION VERSION_LESS \"3.11.0\"))\n 1600  \n 1601:     # https://gitlab.kitware.com/cmake/cmake/-/merge_requests/1264 : eliminates \"Cannot specify compile definitions for imported target\" error message\n 1602        target_include_directories(ocv.3rdparty.${name} SYSTEM INTERFACE \"$<BUILD_INTERFACE:${inc}>\")\n 1603      else()\n ....\n 1627  \n 1628  # Returns the first non-interface target\n 1629: function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631    get_target_property(__type \"${__result}\" TYPE)\n ....\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n 1636    endif()\n 1637:   set(${imported} \"${__result}\" PARENT_SCOPE)\n 1638  endfunction()\n 1639  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindIPPIW.cmake:\n  109            message(STATUS \"at: ${IPP_IW_PATH}\")\n  110  \n  111:           add_library(ipp_iw STATIC IMPORTED)\n  112            set_target_properties(ipp_iw PROPERTIES\n  113              IMPORTED_LINK_INTERFACE_LIBRARIES \"\"\n  ...\n  116  \n  117            if (NOT BUILD_SHARED_LIBS AND \";${OPENCV_INSTALL_EXTERNAL_DEPENDENCIES};\" MATCHES \";ipp;\")\n  118:             # CMake doesn't support \"install(TARGETS ${name} ...)\" command with imported targets\n  119              install(FILES \"${FILE}\"\n  120                      DESTINATION ${OPENCV_3P_LIB_INSTALL_PATH} COMPONENT dev)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindIPP.cmake:\n  143          list(APPEND IPP_LIBRARIES ${IPP_LIBRARY_DIR}/${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX})\n  144        else ()\n  145:         add_library(ipp${name} STATIC IMPORTED)\n  146          set(_filename \"${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX}\")\n  147          set_target_properties(ipp${name} PROPERTIES\n  ...\n  165          list(APPEND IPP_LIBRARIES ipp${name})\n  166          if (NOT BUILD_SHARED_LIBS AND (HAVE_IPP_ICV OR \";${OPENCV_INSTALL_EXTERNAL_DEPENDENCIES};\" MATCHES \";ipp;\"))\n  167:           # CMake doesn't support \"install(TARGETS ${IPP_PREFIX}${name} \" command with imported targets\n  168            install(FILES ${IPP_LIBRARY_DIR}/${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX}\n  169                    DESTINATION ${OPENCV_3P_LIB_INSTALL_PATH} COMPONENT dev)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLibsPerf.cmake:\n   64    if(Eigen3_FOUND)\n   65      if(TARGET Eigen3::Eigen)\n   66:       # Use Eigen3 imported target if possible\n   67        list(APPEND OPENCV_LINKER_LIBS Eigen3::Eigen)\n   68        set(HAVE_EIGEN 1)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/FindONNX.cmake:\n   22    # Link target with associated interface headers\n   23    set(ONNX_LIBRARY \"onnxruntime\" CACHE STRING \"ONNX Link Target\")\n   24:   ocv_add_library(${ONNX_LIBRARY} SHARED IMPORTED)\n   25    set_target_properties(\n   26      ${ONNX_LIBRARY}\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectHalide.cmake:\n   10    find_package(Halide QUIET) # Try CMake-based config files\n   11    if(Halide_FOUND)\n   12:     if(TARGET Halide::Halide) # modern Halide scripts defines imported target\n   13        set(HALIDE_INCLUDE_DIRS \"\")\n   14        set(HALIDE_LIBRARIES \"Halide::Halide\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30        get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31:       add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n   33          INTERFACE_LINK_LIBRARIES TBB::tbb\n   ..\n   67    if (TBB_ENV_INCLUDE AND (TBB_ENV_LIB OR TBB_ENV_LIB_DEBUG))\n   68      ocv_tbb_env_verify()\n   69:     add_library(tbb UNKNOWN IMPORTED)\n   70      set_target_properties(tbb PROPERTIES\n   71        IMPORTED_LOCATION \"${TBB_ENV_LIB}\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   55        set(Protobuf_LIBRARIES \"protobuf::libprotobuf\")\n   56      else()\n   57:       add_library(libprotobuf UNKNOWN IMPORTED)\n   58        set_target_properties(libprotobuf PROPERTIES\n   59          IMPORTED_LOCATION \"${Protobuf_LIBRARY}\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/winpack_dldt/2021.4.2/cmake/InferenceEngineConfig.cmake:\n    7  \n    8  set(InferenceEngine_LIBRARIES IE::inference_engine)\n    9: add_library(IE::inference_engine SHARED IMPORTED)\n   10  \n   11  set_target_properties(IE::inference_engine PROPERTIES\n\n62 matches across 34 files\n\n\nSearching 1044 files for \"\\bIMPORTED\\b\" (regex)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake:\n   26    ExternalProject_Get_Property(libbrotli SOURCE_DIR BINARY_DIR)\n   27  \n   28:   add_library(brotlicommon STATIC IMPORTED GLOBAL)\n   29:   add_library(brotlidec STATIC IMPORTED GLOBAL)\n   30:   add_library(brotlienc STATIC IMPORTED GLOBAL)\n   31  \n   32    add_dependencies(brotlicommon libbrotli)\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake:\n   64    if(LIBRESSL_FOUND)\n   65      if(NOT TARGET libcrypto)\n   66:       add_library(libcrypto UNKNOWN IMPORTED)\n   67        set_target_properties(\n   68          libcrypto\n   ..\n   73  \n   74      if(NOT TARGET libssl)\n   75:       add_library(libssl UNKNOWN IMPORTED)\n   76        set_target_properties(\n   77          libssl\n   ..\n   83  \n   84      if(NOT TARGET libtls)\n   85:       add_library(libtls UNKNOWN IMPORTED)\n   86        set_target_properties(\n   87          libtls\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/FindMbedTLS.cmake:\n   62    if(MBEDTLS_FOUND)\n   63      if(NOT TARGET mbedcrypto)\n   64:       add_library(mbedcrypto UNKNOWN IMPORTED)\n   65        set_target_properties(\n   66          mbedcrypto\n   ..\n   71  \n   72      if(NOT TARGET mbedx509)\n   73:       add_library(mbedx509 UNKNOWN IMPORTED)\n   74        set_target_properties(\n   75          mbedx509\n   ..\n   81  \n   82      if(NOT TARGET mbedtls)\n   83:       add_library(mbedtls UNKNOWN IMPORTED)\n   84        set_target_properties(\n   85          mbedtls\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake:\n   95  \n   96    set(MBEDTLS_LIBRARY mbedtls CACHE STRING \"MbedTLS library\" FORCE)\n   97:   add_library(${MBEDTLS_LIBRARY} STATIC IMPORTED)\n   98    add_dependencies(${MBEDTLS_LIBRARY} ${MBEDTLS_TARGET_NAME})\n   99    set_property(TARGET ${MBEDTLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libmbedtls.a)\n  100  \n  101    set(MBEDTLS_X509_LIBRARY mbedx509 CACHE STRING \"MbedTLS x509 library\" FORCE)\n  102:   add_library(${MBEDTLS_X509_LIBRARY} STATIC IMPORTED)\n  103    add_dependencies(${MBEDTLS_X509_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  104    set_property(TARGET ${MBEDTLS_X509_LIBRARY} PROPERTY IMPORTED_LOCATION\n  ...\n  106  \n  107    set(MBEDTLS_CRYPTO_LIBRARY mbedcrypto CACHE STRING \"MbedTLS crypto library\" FORCE)\n  108:   add_library(${MBEDTLS_CRYPTO_LIBRARY} STATIC IMPORTED)\n  109    add_dependencies(${MBEDTLS_CRYPTO_LIBRARY} ${MBEDTLS_TARGET_NAME})\n  110    set_property(TARGET ${MBEDTLS_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n\n~/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibreSSL.cmake:\n   96  \n   97    set(LIBRESSL_CRYPTO_LIBRARY libcrypto CACHE STRING \"LibreSSL crypto library\" FORCE)\n   98:   add_library(${LIBRESSL_CRYPTO_LIBRARY} STATIC IMPORTED)\n   99    add_dependencies(${LIBRESSL_CRYPTO_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  100    set_property(TARGET ${LIBRESSL_CRYPTO_LIBRARY} PROPERTY IMPORTED_LOCATION\n  ...\n  102  \n  103    set(LIBRESSL_SSL_LIBRARY libssl CACHE STRING \"LibreSSL ssl library\" FORCE)\n  104:   add_library(${LIBRESSL_SSL_LIBRARY} STATIC IMPORTED)\n  105    add_dependencies(${LIBRESSL_SSL_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  106    set_property(TARGET ${LIBRESSL_SSL_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libssl.a)\n  107  \n  108    set(LIBRESSL_TLS_LIBRARY libtls CACHE STRING \"LibreSSL tls library\" FORCE)\n  109:   add_library(${LIBRESSL_TLS_LIBRARY} STATIC IMPORTED)\n  110    add_dependencies(${LIBRESSL_TLS_LIBRARY} ${LIBRESSL_TARGET_NAME})\n  111    set_property(TARGET ${LIBRESSL_TLS_LIBRARY} PROPERTY IMPORTED_LOCATION ${BINARY_DIR}/libtls.a)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake:\n   25    ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   26  \n   27:   add_library(glfw3 STATIC IMPORTED GLOBAL)\n   28  \n   29    add_dependencies(glfw3 glfw)\n\n~/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake:\n   31      ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   32  \n   33:     add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   34      add_dependencies(gl3w-static libgl3w)\n   35  \n\n~/Projects/plot-cv/quickjs/qjs-glfw/gl3w/CMakeLists.txt:\n   29  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} ${OPENGL_LIBRARIES})\n   30  else()\n   31: \t# Since CMake 3.8 the IMPORTED targets available\n   32  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} OpenGL::GL OpenGL::GLU)\n   33  endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/CMakeLists.txt:\n   57       INSTALL_COMMAND \"\" )\n   58  \n   59: add_library(libnyquist STATIC IMPORTED GLOBAL)\n   60  \n   61  \n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindFFTW3.cmake:\n   78  \t\n   79  \tif(NOT TARGET FFTW3::fftw3)\n   80: \t  add_library(FFTW3::fftw3 UNKNOWN IMPORTED)\n   81  \t\tset_target_properties(FFTW3::fftw3 PROPERTIES\n   82  \t\t\tINTERFACE_INCLUDE_DIRECTORIES \"${FFTW3_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindOgg.cmake:\n   48    \n   49    if(NOT TARGET Ogg::ogg)\n   50:   add_library(Ogg::ogg UNKNOWN IMPORTED)\n   51      set_target_properties(Ogg::ogg PROPERTIES\n   52        INTERFACE_INCLUDE_DIRECTORIES \"${Ogg_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindFLAC.cmake:\n   53    set(FLAC_LIBRARIES ${FLAC_LIBRARY} ${Ogg_LIBRARIES})\n   54      if(NOT TARGET FLAC::FLAC)\n   55:     add_library(FLAC::FLAC UNKNOWN IMPORTED)\n   56      set_target_properties(FLAC::FLAC PROPERTIES\n   57        INTERFACE_INCLUDE_DIRECTORIES \"${FLAC_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindVorbis.cmake:\n    5  Finds the native vorbis, vorbisenc amd vorbisfile includes and libraries.\n    6  \n    7: Imported Targets\n    8  ^^^^^^^^^^^^^^^^\n    9  \n   10: This module provides the following imported targets, if found:\n   11  \n   12  ``Vorbis::vorbis``\n   ..\n  164    set(Vorbis_Vorbis_LIBRARIES ${Vorbis_Vorbis_LIBRARY} ${Ogg_LIBRARIES})\n  165    if(NOT TARGET Vorbis::vorbis)\n  166:     add_library(Vorbis::vorbis UNKNOWN IMPORTED)\n  167      set_target_properties(Vorbis::vorbis PROPERTIES\n  168        INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_Vorbis_INCLUDE_DIR}\"\n  ...\n  176      set(Vorbis_Enc_LIBRARIES ${Vorbis_Enc_LIBRARY} ${Vorbis_Vorbis_LIBRARIES})\n  177      if(NOT TARGET Vorbis::vorbisenc)\n  178:       add_library(Vorbis::vorbisenc UNKNOWN IMPORTED)\n  179        set_target_properties(Vorbis::vorbisenc PROPERTIES\n  180          INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_Enc_INCLUDE_DIR}\"\n  ...\n  189      set(Vorbis_File_LIBRARIES ${Vorbis_File_LIBRARY} ${Vorbis_Vorbis_LIBRARIES})\n  190      if(NOT TARGET Vorbis::vorbisfile)\n  191:       add_library(Vorbis::vorbisfile UNKNOWN IMPORTED)\n  192        set_target_properties(Vorbis::vorbisfile PROPERTIES\n  193          INTERFACE_INCLUDE_DIRECTORIES \"${Vorbis_File_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindOpus.cmake:\n   54  \n   55    if(NOT TARGET Opus::opus)\n   56:     add_library(Opus::opus UNKNOWN IMPORTED)\n   57      set_target_properties(Opus::opus PROPERTIES\n   58        INTERFACE_INCLUDE_DIRECTORIES \"${OPUS_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/cmake/FindSndFile.cmake:\n   47    \n   48    if(NOT TARGET SndFile::sndfile)\n   49:     add_library(SndFile::sndfile UNKNOWN IMPORTED)\n   50      set_target_properties(SndFile::sndfile PROPERTIES\n   51        INTERFACE_INCLUDE_DIRECTORIES \"${SndFile_INCLUDE_DIR}\"\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/tests/CMakeLists.txt:\n    9    pkg_check_modules(FFTW3 fftw3 IMPORTED_TARGET)\n   10    if(FFTW3_FOUND)\n   11:     add_library(FFTW3::fftw3 INTERFACE IMPORTED)\n   12      target_link_libraries(FFTW3::fftw3 INTERFACE PkgConfig::FFTW3)\n   13    endif()\n\n~/Projects/plot-cv/quickjs/qjs-sound/LabSound/third_party/libsamplerate/examples/CMakeLists.txt:\n    5  if(ALSA_FOUND)\n    6    if(NOT TARGET ALSA::ALSA)\n    7:     add_library(ALSA::ALSA UNKNOWN IMPORTED)\n    8      set_target_properties(ALSA::ALSA PROPERTIES\n    9      INTERFACE_INCLUDE_DIRECTORIES \"${ALSA_INCLUDE_DIRS}\"\n\n~/Projects/plot-cv/quickjs/qjs-modules/pigpio/cmake/FindRT.cmake:\n   31  \n   32  if (NOT TARGET RT::RT)\n   33:   add_library(RT::RT INTERFACE IMPORTED)\n   34  \n   35    set_target_properties(RT::RT PROPERTIES\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake:\n   32    ExternalProject_Get_Property(glfw SOURCE_DIR BINARY_DIR)\n   33  \n   34:   add_library(glfw3 STATIC IMPORTED GLOBAL)\n   35  \n   36    add_dependencies(glfw3 glfw)\n\n~/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGL3W.cmake:\n   37      ExternalProject_Get_Property(libgl3w SOURCE_DIR BINARY_DIR)\n   38  \n   39:     add_library(gl3w-static STATIC IMPORTED GLOBAL)\n   40      add_dependencies(gl3w-static libgl3w)\n   41  \n\n~/Projects/plot-cv/quickjs/qjs-imgui/gl3w/CMakeLists.txt:\n   31  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} ${OPENGL_LIBRARIES})\n   32  else()\n   33: \t# Since CMake 3.8 the IMPORTED targets available\n   34  \tset(EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} OpenGL::GL OpenGL::GLU)\n   35  endif()\n\n~/Projects/plot-cv/cmake/sdl2-config.cmake:\n   20    string(STRIP \"${SDL2_EXTRA_LINK_FLAGS_STATIC}\" SDL2_EXTRA_LINK_FLAGS_STATIC)\n   21  \n   22:   add_library(SDL2::SDL2 SHARED IMPORTED)\n   23    set_target_properties(\n   24      SDL2::SDL2\n   ..\n   29                 INTERFACE_LINK_LIBRARIES \"${SDL2_EXTRA_LINK_FLAGS}\")\n   30  \n   31:   add_library(SDL2::SDL2-static STATIC IMPORTED)\n   32    set_target_properties(\n   33      SDL2::SDL2-static\n   ..\n   38                 INTERFACE_LINK_LIBRARIES \"${SDL2_EXTRA_LINK_FLAGS_STATIC}\")\n   39  \n   40:   add_library(SDL2::SDL2main STATIC IMPORTED)\n   41    set_target_properties(\n   42      SDL2::SDL2main\n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/text/cmake/init.cmake:\n   42      set(def \"\")\n   43      if(BUILD_SHARED_LIBS)\n   44:       set(imp IMPORTED)\n   45      endif()\n   46      add_library(ocv.3rdparty.${name} INTERFACE ${imp})\n\n~/Projects/plot-cv/qjs-opencv/opencv_contrib/modules/sfm/cmake/FindGflags.cmake:\n  345  \n  346    # gflags v2.1 - 2.1.2 shipped with a bug in their gflags-config.cmake [1]\n  347:   # whereby gflags_LIBRARIES = \"gflags\", but there was no imported target\n  348    # called \"gflags\", they were called: gflags[_nothreads]-[static/shared].\n  349    # As this causes linker errors when gflags is not installed in a location\n  ...\n  360        message(STATUS \"Detected broken gflags install in: ${gflags_DIR}, \"\n  361          \"version: ${gflags_VERSION} <= 2.1.2 which defines gflags_LIBRARIES = \"\n  362:         \"${gflags_LIBRARIES} which is not an imported CMake target, see: \"\n  363          \"https://github.com/gflags/gflags/issues/110.  Attempting to fix by \"\n  364          \"detecting correct gflags target.\")\n  ...\n  379          message(STATUS \"Failed to fix detected broken gflags install in: \"\n  380            \"${gflags_DIR}, version: ${gflags_VERSION} <= 2.1.2, none of the \"\n  381:           \"imported targets for gflags: ${CHECK_GFLAGS_IMPORTED_TARGET_NAMES} \"\n  382            \"are defined.  Will continue with a manual search for gflags \"\n  383            \"components.  We recommend you build/install a version of gflags > \"\n  ...\n  409      #\n  410      # NOTE: We use the regex method to determine the namespace here, as\n  411:     #       check_cxx_source_compiles() will not use imported targets, which\n  412      #       is what gflags will be in this case.\n  413      gflags_check_gflags_namespace_using_regex()\n\n~/Projects/plot-cv/qjs-opencv/cmake/FindPNG.cmake:\n    8  Find libpng, the official reference library for the PNG image format.\n    9  \n   10: Imported targets\n   11  ^^^^^^^^^^^^^^^^\n   12  \n   13: This module defines the following :prop_tgt:`IMPORTED` target:\n   14  \n   15  ``PNG::PNG``\n   ..\n  109  \n  110      if(NOT TARGET PNG::PNG)\n  111:       add_library(PNG::PNG UNKNOWN IMPORTED)\n  112        set_target_properties(\n  113          PNG::PNG\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVUtils.cmake:\n 1584  function(ocv_add_external_target name inc link def)\n 1585    if(BUILD_SHARED_LIBS AND link)\n 1586:     set(imp IMPORTED)\n 1587    endif()\n 1588    add_library(ocv.3rdparty.${name} INTERFACE ${imp})\n ....\n 1590      if(NOT (CMAKE_VERSION VERSION_LESS \"3.11.0\"))\n 1591  \n 1592:     # https://gitlab.kitware.com/cmake/cmake/-/merge_requests/1264 : eliminates \"Cannot specify compile definitions for imported target\" error message\n 1593        target_compile_definitions(ocv.3rdparty.${name} INTERFACE \"${def}\")\n 1594      else()\n ....\n 1599      if(NOT (CMAKE_VERSION VERSION_LESS \"3.11.0\"))\n 1600  \n 1601:     # https://gitlab.kitware.com/cmake/cmake/-/merge_requests/1264 : eliminates \"Cannot specify compile definitions for imported target\" error message\n 1602        target_include_directories(ocv.3rdparty.${name} SYSTEM INTERFACE \"$<BUILD_INTERFACE:${inc}>\")\n 1603      else()\n ....\n 1627  \n 1628  # Returns the first non-interface target\n 1629: function(ocv_get_imported_target imported interface)\n 1630    set(__result \"${interface}\")\n 1631    get_target_property(__type \"${__result}\" TYPE)\n ....\n 1635      ocv_get_imported_target(__result \"${__interface}\")\n 1636    endif()\n 1637:   set(${imported} \"${__result}\" PARENT_SCOPE)\n 1638  endfunction()\n 1639  \n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindIPPIW.cmake:\n  109            message(STATUS \"at: ${IPP_IW_PATH}\")\n  110  \n  111:           add_library(ipp_iw STATIC IMPORTED)\n  112            set_target_properties(ipp_iw PROPERTIES\n  113              IMPORTED_LINK_INTERFACE_LIBRARIES \"\"\n  ...\n  116  \n  117            if (NOT BUILD_SHARED_LIBS AND \";${OPENCV_INSTALL_EXTERNAL_DEPENDENCIES};\" MATCHES \";ipp;\")\n  118:             # CMake doesn't support \"install(TARGETS ${name} ...)\" command with imported targets\n  119              install(FILES \"${FILE}\"\n  120                      DESTINATION ${OPENCV_3P_LIB_INSTALL_PATH} COMPONENT dev)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindIPP.cmake:\n  143          list(APPEND IPP_LIBRARIES ${IPP_LIBRARY_DIR}/${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX})\n  144        else ()\n  145:         add_library(ipp${name} STATIC IMPORTED)\n  146          set(_filename \"${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX}\")\n  147          set_target_properties(ipp${name} PROPERTIES\n  ...\n  165          list(APPEND IPP_LIBRARIES ipp${name})\n  166          if (NOT BUILD_SHARED_LIBS AND (HAVE_IPP_ICV OR \";${OPENCV_INSTALL_EXTERNAL_DEPENDENCIES};\" MATCHES \";ipp;\"))\n  167:           # CMake doesn't support \"install(TARGETS ${IPP_PREFIX}${name} \" command with imported targets\n  168            install(FILES ${IPP_LIBRARY_DIR}/${IPP_LIB_PREFIX}${IPP_PREFIX}${name}${IPP_SUFFIX}${IPP_LIB_SUFFIX}\n  169                    DESTINATION ${OPENCV_3P_LIB_INSTALL_PATH} COMPONENT dev)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindLibsPerf.cmake:\n   64    if(Eigen3_FOUND)\n   65      if(TARGET Eigen3::Eigen)\n   66:       # Use Eigen3 imported target if possible\n   67        list(APPEND OPENCV_LINKER_LIBS Eigen3::Eigen)\n   68        set(HAVE_EIGEN 1)\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/FindONNX.cmake:\n   22    # Link target with associated interface headers\n   23    set(ONNX_LIBRARY \"onnxruntime\" CACHE STRING \"ONNX Link Target\")\n   24:   ocv_add_library(${ONNX_LIBRARY} SHARED IMPORTED)\n   25    set_target_properties(\n   26      ${ONNX_LIBRARY}\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectHalide.cmake:\n   10    find_package(Halide QUIET) # Try CMake-based config files\n   11    if(Halide_FOUND)\n   12:     if(TARGET Halide::Halide) # modern Halide scripts defines imported target\n   13        set(HALIDE_INCLUDE_DIRS \"\")\n   14        set(HALIDE_LIBRARIES \"Halide::Halide\")\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVDetectTBB.cmake:\n   29        message(STATUS \"Found TBB (cmake): ${_lib}\")\n   30        get_target_property(_inc TBB::tbb INTERFACE_INCLUDE_DIRECTORIES)\n   31:       add_library(tbb INTERFACE IMPORTED)\n   32        set_target_properties(tbb PROPERTIES\n   33          INTERFACE_LINK_LIBRARIES TBB::tbb\n   ..\n   67    if (TBB_ENV_INCLUDE AND (TBB_ENV_LIB OR TBB_ENV_LIB_DEBUG))\n   68      ocv_tbb_env_verify()\n   69:     add_library(tbb UNKNOWN IMPORTED)\n   70      set_target_properties(tbb PROPERTIES\n   71        IMPORTED_LOCATION \"${TBB_ENV_LIB}\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/cmake/OpenCVFindProtobuf.cmake:\n   55        set(Protobuf_LIBRARIES \"protobuf::libprotobuf\")\n   56      else()\n   57:       add_library(libprotobuf UNKNOWN IMPORTED)\n   58        set_target_properties(libprotobuf PROPERTIES\n   59          IMPORTED_LOCATION \"${Protobuf_LIBRARY}\"\n\n~/Projects/plot-cv/qjs-opencv/opencv/platforms/winpack_dldt/2021.4.2/cmake/InferenceEngineConfig.cmake:\n    7  \n    8  set(InferenceEngine_LIBRARIES IE::inference_engine)\n    9: add_library(IE::inference_engine SHARED IMPORTED)\n   10  \n   11  set_target_properties(IE::inference_engine PROPERTIES\n\n62 matches across 34 files\n",
			"settings":
			{
				"buffer_size": 234009,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "quickjs/qjs-net/cmake/FindLibreSSL.cmake",
			"settings":
			{
				"buffer_size": 5139,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/brotli/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 15396,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-sound/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2300,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA5CQAAcHJvamVjdChxanMtc291bmQgQyBDWFgpCgpjbWFrZV9taW5pbXVtX3JlcXVpcmVkKFZFUlNJT04gMy4xOSkKCiNhZGRfc3ViZGlyZWN0b3J5KHN0aykKI2FkZF9zdWJkaXJlY3Rvcnkoc25kb2JqKQoKI1tbc2V0KF9MQUJfQ1hYX0ZMQUdTICIke19MQUJfQ1hYX0ZMQUdTfSAtZlBJQyAtdyIpCnNldChfTlFSX0NYWF9GTEFHUyAiJHtfTlFSX0NYWF9GTEFHU30gLWZQSUMgLXciKQpzZXQoQ01BS0VfQ1hYX0ZMQUdTICIke0NNQUtFX0NYWF9GTEFHU30gLWZQSUMgLXciKQpzZXQoQ01BS0VfQ19GTEFHUyAiJHtDTUFLRV9DX0ZMQUdTfSAtZlBJQyAtdyIpXV0KCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL2Z1bmN0aW9ucy5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvY2hlY2stZmxhZ3MuY21ha2UpCgpjaGVja19mbGFnKCItdyIgRl9OT1dBUk4gTU9EVUxFX0NPTVBJTEVfRkxBR1MpCmNoZWNrX2ZsYWcoIi1mUElDIiBGX1BJQyBNT0RVTEVfQ09NUElMRV9GTEFHUykKY2hlY2tfZmxhZygiLWZ2aXNpYmlsaXR5PWhpZGRlbiIgVklTSUJJTElUWV9ISURERU4gTU9EVUxFX0NPTVBJTEVfRkxBR1MpCgojc3RyaW5nKFJFR0VYIFJFUExBQ0UgIltcblxyO10rIiAiICIgTU9EVUxFX0NPTVBJTEVfRkxBR1MgIiR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IikKI21lc3NhZ2UoIk1PRFVMRV9DT01QSUxFX0ZMQUdTOiAke01PRFVMRV9DT01QSUxFX0ZMQUdTfSIpCiAKaW5jbHVkZShFeHRlcm5hbFByb2plY3QpCgpFeHRlcm5hbFByb2plY3RfQWRkKAogIExhYlNvdW5kCiAgU09VUkNFX0RJUiAiJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L0xhYlNvdW5kIgogIEJJTkFSWV9ESVIgIiR7Q01BS0VfQ1VSUkVOVF9CSU5BUllfRElSfS9MYWJTb3VuZCIKICBQUkVGSVggTGFiU291bmQKICBDTUFLRV9BUkdTCiAgICAiLURCVUlMRF9TSEFSRURfTElCUzpCT09MPU9GRiIKICAgICItRENNQUtFX0JVSUxEX1RZUEU6U1RSSU5HPSR7Q01BS0VfQlVJTERfVFlQRX0iCiAgICAiLURDTUFLRV9WRVJCT1NFX01BS0VGSUxFOkJPT0w9T04iCiAgICAiLURDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFOkJPT0w9T04iCiAgICAiLURDTUFLRV9DX0NPTVBJTEVSOlNUUklORz0ke0NNQUtFX0NfQ09NUElMRVJ9IgogICAgIi1EQ01BS0VfQ1hYX0NPTVBJTEVSOlNUUklORz0ke0NNQUtFX0NYWF9DT01QSUxFUn0iCiAgICAiLURDTUFLRV9DX0ZMQUdTOlNUUklORz0ke0NNQUtFX0NfRkxBR1N9ICR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IgogICAgIi1EQ01BS0VfQ1hYX0ZMQUdTOlNUUklORz0ke0NNQUtFX0NYWF9GTEFHU30gJHtNT0RVTEVfQ09NUElMRV9GTEFHU30iCiAgICAiLURfTEFCX0NYWF9GTEFHUzpTVFJJTkc9JHtDTUFLRV9DWFhfRkxBR1N9ICR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IgogICAgIyItRF9OUVJfQ1hYX0ZMQUdTOlNUUklORz0ke0NNQUtFX0NYWF9GTEFHU30gJHtNT0RVTEVfQ09NUElMRV9GTEFHU30iCiAgICBJTlNUQUxMX0NPTU1BTkQgIiIgKQoKCkV4dGVybmFsUHJvamVjdF9HZXRfcHJvcGVydHkoTGFiU291bmQgQklOQVJZX0RJUikKc2V0KExBQlNPVU5EX0JJTkFSWV9ESVIgIiR7QklOQVJZX0RJUn0iKQptZXNzYWdlKCJCaW5hcnkgZGlyIG9mIExhYlNvdW5kID0gJHtMQUJTT1VORF9CSU5BUllfRElSfSIpCgojYWRkX3N1YmRpcmVjdG9yeShMYWJTb3VuZCkKCmluY2x1ZGUoQ2hlY2tDQ29tcGlsZXJGbGFnKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9GaW5kUXVpY2tKUy5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvUXVpY2tKU01vZHVsZS5jbWFrZSkKCnNldChsYWJzb3VuZF9MSU5LX0RJUkVDVE9SSUVTCiAgICAke0xBQlNPVU5EX0JJTkFSWV9ESVJ9L2JpbgogICAgJHtMQUJTT1VORF9CSU5BUllfRElSfS90aGlyZF9wYXJ0eS9saWJueXF1aXN0L2xpYikKCnNldChsYWJzb3VuZF9MSUJSQVJJRVMKICAgICR7TEFCU09VTkRfQklOQVJZX0RJUn0vYmluL2xpYkxhYlNvdW5kX2QuYQogICAgJHtMQUJTT1VORF9CSU5BUllfRElSfS9iaW4vbGliTGFiU291bmRSdEF1ZGlvX2QuYQogICAgJHtMQUJTT1VORF9CSU5BUllfRElSfS90aGlyZF9wYXJ0eS9saWJueXF1aXN0L2xpYi9saWJsaWJueXF1aXN0LmEKICAgICNMYWJTb3VuZF9kIGxpYm55cXVpc3RfZAogICAgcHVsc2Utc2ltcGxlCiAgICBzYW1wbGVyYXRlKQoKbGlua19kaXJlY3Rvcmllcygke2xhYnNvdW5kX0xJTktfRElSRUNUT1JJRVN9KQoKCmZpbmRfcXVpY2tqcygpCmNvbmZpZ3VyZV9xdWlja2pzKCkKCm1ha2VfbW9kdWxlKGxhYnNvdW5kIGNwcCkKAAAAAAAAAADRCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRCAAAcHJvamVjdChxanMtc291bmQgQyBDWFgpCgpjbWFrZV9taW5pbXVtX3JlcXVpcmVkKFZFUlNJT04gMy4xOSkKCiNhZGRfc3ViZGlyZWN0b3J5KHN0aykKI2FkZF9zdWJkaXJlY3Rvcnkoc25kb2JqKQoKI1tbc2V0KF9MQUJfQ1hYX0ZMQUdTICIke19MQUJfQ1hYX0ZMQUdTfSAtZlBJQyAtdyIpCnNldChfTlFSX0NYWF9GTEFHUyAiJHtfTlFSX0NYWF9GTEFHU30gLWZQSUMgLXciKQpzZXQoQ01BS0VfQ1hYX0ZMQUdTICIke0NNQUtFX0NYWF9GTEFHU30gLWZQSUMgLXciKQpzZXQoQ01BS0VfQ19GTEFHUyAiJHtDTUFLRV9DX0ZMQUdTfSAtZlBJQyAtdyIpXV0KCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL2Z1bmN0aW9ucy5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvY2hlY2stZmxhZ3MuY21ha2UpCgpjaGVja19mbGFnKCItdyIgRl9OT1dBUk4gTU9EVUxFX0NPTVBJTEVfRkxBR1MpCmNoZWNrX2ZsYWcoIi1mUElDIiBGX1BJQyBNT0RVTEVfQ09NUElMRV9GTEFHUykKY2hlY2tfZmxhZygiLWZ2aXNpYmlsaXR5PWhpZGRlbiIgVklTSUJJTElUWV9ISURERU4gTU9EVUxFX0NPTVBJTEVfRkxBR1MpCgojc3RyaW5nKFJFR0VYIFJFUExBQ0UgIltcblxyO10rIiAiICIgTU9EVUxFX0NPTVBJTEVfRkxBR1MgIiR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IikKbWVzc2FnZSgiTU9EVUxFX0NPTVBJTEVfRkxBR1M6ICR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IikKIAppbmNsdWRlKEV4dGVybmFsUHJvamVjdCkKCkV4dGVybmFsUHJvamVjdF9BZGQoCiAgTGFiU291bmQKICBTT1VSQ0VfRElSICIke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vTGFiU291bmQiCiAgQklOQVJZX0RJUiAiJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9L0xhYlNvdW5kIgogIFBSRUZJWCBMYWJTb3VuZAogIENNQUtFX0FSR1MKICAgICItREJVSUxEX1NIQVJFRF9MSUJTOkJPT0w9T0ZGIgogICAgIi1EQ01BS0VfQlVJTERfVFlQRTpTVFJJTkc9JHtDTUFLRV9CVUlMRF9UWVBFfSIKICAgICItRENNQUtFX1ZFUkJPU0VfTUFLRUZJTEU6Qk9PTD1PRkYiCiAgICAiLURDTUFLRV9QT1NJVElPTl9JTkRFUEVOREVOVF9DT0RFOkJPT0w9T04iCiAgICAiLURDTUFLRV9DX0NPTVBJTEVSOlNUUklORz0ke0NNQUtFX0NfQ09NUElMRVJ9IgogICAgIi1EQ01BS0VfQ1hYX0NPTVBJTEVSOlNUUklORz0ke0NNQUtFX0NYWF9DT01QSUxFUn0iCiAgICAiLURDTUFLRV9DX0ZMQUdTOlNUUklORz0ke0NNQUtFX0NfRkxBR1N9ICR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9IgogICAgIi1EQ01BS0VfQ1hYX0ZMQUdTOlNUUklORz0ke0NNQUtFX0NYWF9GTEFHU30gJHtNT0RVTEVfQ09NUElMRV9GTEFHU30iCiAgICAiLUROWVFVSVNUX0NPTVBJTEVfRkxBR1M6U1RSSU5HPS1mUElDIgogICAgSU5TVEFMTF9DT01NQU5EICIiICkKCgpFeHRlcm5hbFByb2plY3RfR2V0X3Byb3BlcnR5KExhYlNvdW5kIEJJTkFSWV9ESVIpCnNldChMQUJTT1VORF9CSU5BUllfRElSICIke0JJTkFSWV9ESVJ9IikKbWVzc2FnZSgiQmluYXJ5IGRpciBvZiBMYWJTb3VuZCA9ICR7TEFCU09VTkRfQklOQVJZX0RJUn0iKQoKI2FkZF9zdWJkaXJlY3RvcnkoTGFiU291bmQpCgppbmNsdWRlKENoZWNrQ0NvbXBpbGVyRmxhZykKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL1F1aWNrSlNNb2R1bGUuY21ha2UpCgpzZXQobGFic291bmRfTElOS19ESVJFQ1RPUklFUwogICAgJHtMQUJTT1VORF9CSU5BUllfRElSfS9iaW4KICAgICR7TEFCU09VTkRfQklOQVJZX0RJUn0vdGhpcmRfcGFydHkvbGlibnlxdWlzdC9saWIpCgpzZXQobGFic291bmRfTElCUkFSSUVTCiAgICAke0xBQlNPVU5EX0JJTkFSWV9ESVJ9L2Jpbi9saWJMYWJTb3VuZF9kLmEKICAgICR7TEFCU09VTkRfQklOQVJZX0RJUn0vYmluL2xpYkxhYlNvdW5kUnRBdWRpb19kLmEKICAgICR7TEFCU09VTkRfQklOQVJZX0RJUn0vdGhpcmRfcGFydHkvbGlibnlxdWlzdC9saWIvbGlibGlibnlxdWlzdC5hCiAgICAjTGFiU291bmRfZCBsaWJueXF1aXN0X2QKICAgIHB1bHNlLXNpbXBsZQogICAgc2FtcGxlcmF0ZSkKCmxpbmtfZGlyZWN0b3JpZXMoJHtsYWJzb3VuZF9MSU5LX0RJUkVDVE9SSUVTfSkKCgpmaW5kX3F1aWNranMoKQpjb25maWd1cmVfcXVpY2tqcygpCgptYWtlX21vZHVsZShsYWJzb3VuZCBjcHApCgAAAAAAAAAA/AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
			"settings":
			{
				"buffer_size": 2072,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/cmake/BuildCURL.cmake",
			"settings":
			{
				"buffer_size": 1447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
			"settings":
			{
				"buffer_size": 5448,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 23048,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
			"settings":
			{
				"buffer_size": 1613,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
			"settings":
			{
				"buffer_size": 15170,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 25050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-net/cmake/BuildBrotli.cmake",
			"settings":
			{
				"buffer_size": 2381,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-imgui/cmake/BuildGLFW.cmake",
			"settings":
			{
				"buffer_size": 1718,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/src/qjsm.c",
			"settings":
			{
				"buffer_size": 51859,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/repeater/repeater.js",
			"settings":
			{
				"buffer_size": 18910,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "debuggerprotocol.js",
			"settings":
			{
				"buffer_size": 7072,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					69,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8LAAAAAAAATwsAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					2,
					"join_lines",
					null,
					"BAAAAE8LAAAAAAAATwsAAAAAAAABAAAACk8LAAAAAAAATwsAAAAAAAAMAAAAICAgICAgICAgICAgagsAAAAAAABqCwAAAAAAAAEAAAAKagsAAAAAAABqCwAAAAAAAAoAAAAgICAgICAgICAg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8LAAAAAAAATwsAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE8LAAAAAAAAUAsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8LAAAAAAAATwsAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					2,
					"join_lines",
					null,
					"BQAAALQKAAAAAAAAtAoAAAAAAAABAAAACrQKAAAAAAAAtAoAAAAAAAAMAAAAICAgICAgICAgICAgCAsAAAAAAAAICwAAAAAAAAEAAAAKCAsAAAAAAAAICwAAAAAAAAoAAAAgICAgICAgICAgCAsAAAAAAAAJCwAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQKAAAAAAAAtAoAAAAAAAAAAAAAAMB4QA"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALQKAAAAAAAAtQoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQKAAAAAAAAtAoAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"revert",
					null,
					"",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUKAAAAAAAAtQoAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"right",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/test-alea.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/bin/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/repredator/pre8.png",
		"/home/roman/Projects/plot-cv/repredator/pre7.png",
		"/home/roman/Projects/plot-cv/repredator/pre2.png",
		"/home/roman/Projects/plot-cv/repredator/pre1.png",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/portaudio2.js",
		"/usr/include/portaudio.h",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/portaudio.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/usr/include/portmidi.h",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/out.tmp",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/hole.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/smd.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/parser.js",
		"/home/roman/Projects/plot-cv/github-userscript.js",
		"/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/an-tronics/eagle/lbr/l.lbr"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.jsx,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\\bIMPORTED\\b",
			"(define|get|set)(|_target)_property",
			"get_target_property",
			"ExternalProject_Add_Step",
			"get_property",
			"ExternalProject_Get_property",
			"SOURCE_DIR",
			"^\\s*ExternalProject_",
			"BUILD_COMMAND",
			"^\\s*ExternalProject_",
			"ExternalProject_",
			"main",
			"getIterators",
			"race",
			"createIteration",
			"wrap",
			"\\bresolve\\b",
			"resolve",
			"\\bpush\\(",
			"DUMP_LEAKS",
			"rt->gc_obj_list",
			"console\\.",
			"stop\\(",
			"setLog\\(",
			"setLog",
			"endRequest",
			"SendReq",
			"sendRequest",
			"'stackTrace'",
			"sendMessage",
			"toHex",
			"sendMessage",
			"'request'",
			"process\\b",
			"sockets.add",
			"ConnectDebugger",
			"ws2dbg",
			"StartDeb",
			"ConnectDebugger",
			"reader",
			"ws2dbg",
			"connections",
			"ws2dbg",
			"sockets",
			"FactoryClient",
			"FactoryEndpoint",
			"FactoryEndpoint(",
			"FactoryEndpoint",
			"Factory",
			"FactorySe",
			"new Proxy",
			"callHandler",
			"parseURL",
			"getCallbacks",
			"onMessage",
			"new Set",
			"RPCServer.set",
			"RPCServer",
			"StartDe",
			"send to debugger",
			"DebuggerDispatcher",
			"[Dd]ebugger",
			"[Dd]ebuger",
			"sendM",
			"StartDe",
			"StartDebugger",
			"Pm_Open",
			"PmTimestamp",
			"\\{Number\\}        buffer\\b",
			"\\{Number\\}        buffer",
			"{Number}        outputDriverInfo",
			"{Number}        stream",
			"Pm_OpenInput",
			"\\bPmEvent\\b",
			"\\bPortMidiStream\\b",
			"Pm_Open(In|Out)put\\b",
			"Pm_OpenInput\\b",
			"Pm_OpenInpu8t",
			"Pm_Open",
			"PmMessage",
			"\\bstruct\\b",
			"^typedef",
			"members",
			"putStack",
			"PmDeviceInfo",
			"PortMidiStream",
			"Pm_OpenOutput",
			"Pm_Open",
			"GenerateStructClass",
			"generateDoc",
			"MakeFFI\\b",
			"writeFileSync",
			"WriteFile\\b",
			"ConcatIterator",
			"StringGenerator",
			"s \\+= ",
			"MakeFFI",
			"hostApiSpecificStreamInfo",
			"class PaHostApiInfo",
			"PaHostApiInfo",
			"Pa_HostApiDeviceIndexToDeviceIndex",
			"Pa_Initialize",
			"new BigInt64Array",
			"sampleFormat\\b",
			"PaSampleFormat",
			"PaStreamInfo\\b",
			"Input",
			"Input\\b",
			"Input",
			"Read",
			"Pa_IsStream",
			"Pa_GetStreamReadAva",
			"Pa_GetStreamHostApiType",
			"'\\)\\, null\\, ",
			"'\\)\\, null\\, 'undefined'\\,",
			"Pa_GetStreamHostApiType",
			"GetSampleSize",
			"PaSampleFormat",
			"GetSampleSize",
			"\\.from",
			"\\.from\\b",
			"Pa_Terminate\\b",
			"GetStreamInfo\\b",
			"a\\[0\\]",
			"GetHostApiCount",
			"a = Big",
			"a = b ig",
			"get name\\b"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"import",
			"",
			"{ArrayBuffer}   buffer",
			"{ArrayBuffer}      buffer",
			"{Object|null}   outputDriverInfo",
			"{ArrayBuffer}   stream",
			", ",
			"m",
			"{ ",
			"export const ",
			"nameKey",
			", GetStream(stream)",
			"GetStream",
			"DereferenceStream",
			"export ",
			"export class ",
			"export class",
			"}\\n\n  get ",
			"); /**",
			"",
			"export const \\1 = ",
			"export function ",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3388,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
							"function_name_status_row": 74,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									421,
									437
								],
								[
									538,
									554
								],
								[
									1382,
									1401
								],
								[
									1423,
									1442
								],
								[
									1776,
									1786
								],
								[
									1828,
									1839
								],
								[
									1855,
									1863
								],
								[
									1886,
									1891
								],
								[
									1967,
									1975
								],
								[
									2008,
									2013
								],
								[
									2052,
									2057
								],
								[
									2129,
									2137
								],
								[
									2207,
									2215
								],
								[
									2285,
									2293
								],
								[
									2363,
									2371
								],
								[
									2441,
									2449
								],
								[
									2519,
									2527
								],
								[
									2575,
									2583
								],
								[
									2589,
									2595
								],
								[
									2632,
									2637
								],
								[
									2675,
									2682
								],
								[
									2686,
									2694
								],
								[
									2696,
									2708
								],
								[
									2957,
									2977
								],
								[
									2995,
									3014
								],
								[
									3068,
									3083
								],
								[
									3128,
									3143
								],
								[
									3195,
									3210
								],
								[
									3225,
									3239
								],
								[
									3243,
									3263
								],
								[
									3267,
									3287
								],
								[
									3291,
									3311
								],
								[
									3648,
									3669
								],
								[
									3687,
									3707
								],
								[
									3760,
									3776
								],
								[
									3820,
									3836
								],
								[
									3882,
									3898
								],
								[
									3947,
									3965
								],
								[
									3971,
									3985
								],
								[
									4115,
									4128
								],
								[
									4133,
									4146
								],
								[
									4161,
									4177
								],
								[
									4187,
									4202
								],
								[
									4207,
									4222
								],
								[
									4237,
									4253
								],
								[
									4263,
									4285
								],
								[
									4289,
									4311
								],
								[
									4326,
									4342
								],
								[
									4622,
									4634
								],
								[
									4696,
									4709
								],
								[
									4713,
									4737
								],
								[
									4747,
									4771
								],
								[
									4775,
									4799
								],
								[
									4877,
									4889
								],
								[
									5005,
									5029
								],
								[
									5033,
									5046
								],
								[
									5172,
									5191
								],
								[
									5195,
									5219
								],
								[
									5276,
									5297
								],
								[
									5336,
									5352
								],
								[
									5355,
									5376
								],
								[
									5380,
									5392
								],
								[
									5435,
									5463
								],
								[
									5523,
									5546
								],
								[
									5549,
									5577
								],
								[
									5581,
									5593
								],
								[
									5644,
									5661
								],
								[
									5719,
									5736
								],
								[
									5798,
									5815
								],
								[
									5884,
									5906
								],
								[
									5945,
									5955
								],
								[
									6019,
									6023
								],
								[
									6119,
									6123
								],
								[
									6172,
									6176
								],
								[
									6194,
									6205
								],
								[
									6209,
									6213
								],
								[
									6279,
									6303
								],
								[
									6336,
									6360
								],
								[
									6411,
									6429
								],
								[
									6447,
									6465
								],
								[
									6536,
									6551
								],
								[
									6587,
									6599
								],
								[
									6635,
									6647
								],
								[
									6663,
									6681
								],
								[
									6778,
									6793
								],
								[
									6834,
									6846
								],
								[
									6887,
									6899
								],
								[
									6998,
									7017
								],
								[
									7093,
									7096
								],
								[
									7155,
									7158
								],
								[
									7193,
									7196
								],
								[
									7226,
									7229
								],
								[
									7352,
									7355
								],
								[
									7359,
									7371
								],
								[
									7398,
									7401
								],
								[
									7441,
									7460
								],
								[
									7489,
									7492
								],
								[
									7520,
									7544
								],
								[
									7548,
									7562
								],
								[
									7566,
									7585
								],
								[
									7605,
									7629
								],
								[
									7689,
									7692
								],
								[
									7771,
									7774
								],
								[
									7825,
									7844
								],
								[
									8423,
									8442
								],
								[
									8446,
									8465
								],
								[
									8488,
									8504
								],
								[
									8508,
									8524
								],
								[
									8604,
									8616
								],
								[
									8650,
									8673
								],
								[
									8803,
									8823
								],
								[
									8856,
									8877
								],
								[
									8906,
									8926
								],
								[
									8956,
									8976
								],
								[
									9006,
									9026
								],
								[
									9059,
									9087
								],
								[
									9116,
									9136
								],
								[
									9166,
									9186
								],
								[
									9216,
									9236
								],
								[
									9271,
									9290
								],
								[
									9318,
									9342
								],
								[
									9715,
									9735
								],
								[
									9932,
									9948
								],
								[
									10067,
									10081
								],
								[
									10102,
									10126
								],
								[
									10175,
									10191
								],
								[
									10306,
									10320
								],
								[
									10341,
									10365
								],
								[
									10412,
									10428
								],
								[
									10543,
									10557
								],
								[
									10582,
									10606
								],
								[
									10724,
									10740
								],
								[
									10950,
									10966
								],
								[
									11011,
									11016
								],
								[
									11034,
									11045
								],
								[
									11049,
									11073
								],
								[
									11077,
									11088
								],
								[
									11100,
									11110
								],
								[
									11114,
									11138
								],
								[
									11142,
									11147
								],
								[
									11170,
									11180
								],
								[
									11241,
									11259
								],
								[
									11272,
									11277
								],
								[
									11281,
									11288
								],
								[
									11312,
									11325
								],
								[
									11359,
									11373
								],
								[
									11416,
									11440
								],
								[
									11469,
									11480
								],
								[
									11481,
									11487
								],
								[
									11513,
									11520
								],
								[
									11544,
									11554
								],
								[
									11579,
									11590
								],
								[
									11594,
									11601
								],
								[
									11620,
									11644
								],
								[
									11743,
									11748
								],
								[
									11856,
									11880
								],
								[
									11935,
									11955
								],
								[
									11979,
									11997
								],
								[
									12014,
									12019
								],
								[
									12039,
									12052
								],
								[
									12082,
									12096
								],
								[
									12135,
									12159
								],
								[
									12184,
									12195
								],
								[
									12196,
									12202
								],
								[
									12222,
									12246
								],
								[
									12250,
									12255
								],
								[
									12270,
									12294
								],
								[
									12396,
									12420
								],
								[
									12453,
									12457
								],
								[
									12480,
									12489
								],
								[
									12492,
									12496
								],
								[
									12586,
									12592
								],
								[
									12598,
									12602
								],
								[
									12751,
									12756
								],
								[
									12790,
									12795
								],
								[
									12889,
									12895
								],
								[
									12904,
									12908
								],
								[
									13296,
									13300
								],
								[
									13305,
									13317
								],
								[
									13381,
									13385
								],
								[
									13392,
									13404
								],
								[
									13468,
									13472
								],
								[
									13478,
									13490
								],
								[
									13521,
									13527
								],
								[
									13536,
									13540
								],
								[
									13544,
									13550
								],
								[
									13719,
									13725
								],
								[
									13733,
									13739
								],
								[
									13805,
									13822
								],
								[
									13869,
									13879
								],
								[
									13894,
									13900
								],
								[
									13904,
									13924
								],
								[
									13965,
									13971
								],
								[
									13981,
									13985
								],
								[
									14030,
									14036
								],
								[
									14046,
									14050
								],
								[
									14091,
									14116
								],
								[
									14129,
									14135
								],
								[
									14176,
									14182
								],
								[
									14192,
									14196
								],
								[
									14241,
									14270
								],
								[
									14283,
									14289
								],
								[
									14334,
									14344
								],
								[
									14354,
									14358
								],
								[
									14408,
									14415
								],
								[
									14425,
									14429
								],
								[
									14448,
									14459
								],
								[
									14463,
									14467
								],
								[
									14538,
									14562
								],
								[
									14587,
									14601
								],
								[
									14656,
									14680
								],
								[
									14702,
									14716
								],
								[
									14771,
									14795
								],
								[
									14817,
									14831
								],
								[
									14909,
									14933
								],
								[
									14974,
									14994
								],
								[
									15027,
									15051
								],
								[
									15089,
									15109
								],
								[
									15142,
									15166
								],
								[
									15204,
									15224
								]
							],
							"symlist":
							[
								"CMAKE_BUILD_TYPE",
								"CMAKE_BUILD_TYPE",
								"BROTLI_BUNDLED_MODE",
								"BROTLI_BUNDLED_MODE",
								"  hex_to_dec",
								"HEXADECIMAL",
								"  _decimal",
								"  _tail",
								"  _decimal",
								"  _tail",
								"  _tail",
								"  _decimal",
								"  _decimal",
								"  _decimal",
								"  _decimal",
								"  _decimal",
								"  _decimal",
								"  _decimal",
								"  _digit",
								"  _tail",
								"DECIMAL",
								"  _decimal",
								"PARENT_SCOPE",
								"  _brotli_version_line",
								"  _brotli_version_hex",
								"  _brotli_version",
								"  _brotli_version",
								"  _brotli_version",
								"BROTLI_VERSION",
								"BROTLI_VERSION_MAJOR",
								"BROTLI_VERSION_MINOR",
								"BROTLI_VERSION_PATCH",
								"  _brotli_abi_info_line",
								"  _brotli_abi_info_hex",
								"  _brotli_abi_info",
								"  _brotli_abi_info",
								"  _brotli_abi_info",
								"BROTLI_ABI_CURRENT",
								"BROTLI_ABI_AGE",
								"CMAKE_C_FLAGS",
								"CMAKE_C_FLAGS",
								"ENABLE_SANITIZER",
								"CMAKE_CXX_FLAGS",
								"CMAKE_CXX_FLAGS",
								"ENABLE_SANITIZER",
								"CMAKE_EXE_LINKER_FLAGS",
								"CMAKE_EXE_LINKER_FLAGS",
								"ENABLE_SANITIZER",
								"LIBM_LIBRARY",
								"  orig_req_libs",
								"CMAKE_REQUIRED_LIBRARIES",
								"CMAKE_REQUIRED_LIBRARIES",
								"CMAKE_REQUIRED_LIBRARIES",
								"LIBM_LIBRARY",
								"CMAKE_REQUIRED_LIBRARIES",
								"  orig_req_libs",
								"BROTLI_INCLUDE_DIRS",
								"CMAKE_CURRENT_SOURCE_DIR",
								"BROTLI_LIBRARIES_CORE",
								"BROTLI_LIBRARIES",
								"BROTLI_LIBRARIES_CORE",
								"LIBM_LIBRARY",
								"BROTLI_LIBRARIES_CORE_STATIC",
								"BROTLI_LIBRARIES_STATIC",
								"BROTLI_LIBRARIES_CORE_STATIC",
								"LIBM_LIBRARY",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_SYSTEM_NAME",
								"CMAKE_SYSTEM_NAME",
								"  transform_sources_list",
								"INPUT_FILE",
								"TEXT",
								"TEXT",
								"TEXT",
								"OUTPUT_FILE",
								"TEXT",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"BROTLI_SHARED_LIBS",
								"BROTLI_SHARED_LIBS",
								"BROTLI_COMMON_C",
								"BROTLI_DEC_C",
								"BROTLI_ENC_C",
								"BROTLI_STATIC_LIBS",
								"BROTLI_COMMON_C",
								"BROTLI_DEC_C",
								"BROTLI_ENC_C",
								"BROTLI_INCLUDE_DIRS",
								"  lib",
								"  lib",
								"  lib",
								"LIB",
								"  lib",
								"LIBM_LIBRARY",
								"  lib",
								"BROTLI_INCLUDE_DIRS",
								"  lib",
								"BROTLI_ABI_COMPATIBILITY",
								"BROTLI_ABI_AGE",
								"BROTLI_ABI_REVISION",
								"BROTLI_ABI_COMPATIBILITY",
								"  lib",
								"  lib",
								"BROTLI_INCLUDE_DIRS",
								"BROTLI_INCLUDE_DIRS",
								"BROTLI_INCLUDE_DIRS",
								"BROTLI_LIBRARIES",
								"BROTLI_LIBRARIES",
								"BROTLI_CLI_C",
								"BROTLI_LIBRARIES_STATIC",
								"CMAKE_INSTALL_BINDIR",
								"BROTLI_LIBRARIES_CORE",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_INSTALL_BINDIR",
								"BROTLI_LIBRARIES_CORE_STATIC",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_INSTALL_BINDIR",
								"BROTLI_INCLUDE_DIRS",
								"CMAKE_INSTALL_INCLUDEDIR",
								"BROTLI_DISABLE_TESTS",
								"CMAKE_C_COMPILER",
								"BROTLI_WRAPPER",
								"BROTLI_WRAPPER_LD_PREFIX",
								"CMAKE_C_COMPILER",
								"BROTLI_WRAPPER",
								"BROTLI_WRAPPER_LD_PREFIX",
								"CMAKE_C_COMPILER",
								"BROTLI_WRAPPER",
								"BROTLI_WRAPPER_LD_PREFIX",
								"ROUNDTRIP_INPUTS",
								"ROUNDTRIP_INPUTS",
								"INPUT",
								"OUTPUT_FILE",
								"CMAKE_CURRENT_BINARY_DIR",
								"OUTPUT_NAME",
								"INPUT_FILE",
								"CMAKE_CURRENT_SOURCE_DIR",
								"INPUT",
								"INPUT_FILE",
								"BROTLI_TEST_PREFIX",
								"INPUT",
								"  quality",
								"CMAKE_COMMAND",
								"BROTLI_WRAPPER",
								"BROTLI_WRAPPER_LD_PREFIX",
								"TARGET_FILE",
								"  brotli",
								"  quality",
								"INPUT_FILE",
								"OUTPUT_FILE",
								"  quality",
								"CMAKE_CURRENT_SOURCE_DIR",
								"INPUT",
								"CMAKE_CURRENT_SOURCE_DIR",
								"COMPATIBILITY_INPUTS",
								"BROTLI_TEST_PREFIX",
								"INPUT",
								"CMAKE_COMMAND",
								"BROTLI_WRAPPER",
								"BROTLI_WRAPPER_LD_PREFIX",
								"TARGET_FILE",
								"  brotli",
								"CMAKE_CURRENT_SOURCE_DIR",
								"INPUT",
								"CMAKE_CURRENT_SOURCE_DIR",
								"  generate_pkg_config_path",
								"  path",
								"  path_args",
								"ARGV",
								"  outvar",
								"  path",
								"  value",
								"  value",
								"  outvar",
								"  name",
								"  path",
								"  value_length",
								"  path",
								"  value_length",
								"  path",
								"  value_length",
								"  outvar",
								"  name",
								"  suffix",
								"  outvar",
								"  outvar",
								"  transform_pc_file",
								"INPUT_FILE",
								"PREFIX",
								"CMAKE_INSTALL_PREFIX",
								"PREFIX",
								"TEXT",
								"PREFIX",
								"TEXT",
								"CMAKE_INSTALL_FULL_LIBDIR",
								"PREFIX",
								"LIBDIR",
								"TEXT",
								"CMAKE_INSTALL_FULL_INCLUDEDIR",
								"PREFIX",
								"INCLUDEDIR",
								"TEXT",
								"VERSION",
								"TEXT",
								"OUTPUT_FILE",
								"TEXT",
								"CMAKE_CURRENT_BINARY_DIR",
								"BROTLI_VERSION",
								"CMAKE_CURRENT_BINARY_DIR",
								"BROTLI_VERSION",
								"CMAKE_CURRENT_BINARY_DIR",
								"BROTLI_VERSION",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_INSTALL_LIBDIR",
								"CMAKE_CURRENT_BINARY_DIR",
								"CMAKE_INSTALL_LIBDIR"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1739760187.04,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12667,
						"regions":
						{
						},
						"selection":
						[
							[
								9043,
								9043
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 308,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740357406.49,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5026.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-nanovg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6907,
						"regions":
						{
						},
						"selection":
						[
							[
								1160,
								1189
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 43,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740354379.28,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 150.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 234009,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								218621,
								218621
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 5202,
							"line_numbers": false,
							"output_tag": 19,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1740359432.93,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 93704.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "quickjs/qjs-net/cmake/FindLibreSSL.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5139,
						"regions":
						{
						},
						"selection":
						[
							[
								3164,
								3164
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 65,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359433.7,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1581.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "quickjs/qjs-net/brotli/CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15396,
						"regions":
						{
						},
						"selection":
						[
							[
								46,
								52
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740360412.05,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2389,
						"regions":
						{
						},
						"selection":
						[
							[
								2012,
								2012
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 64,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359333.57,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 850.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/qjs-sound/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2300,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740358917.33,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 697.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2072,
						"regions":
						{
						},
						"selection":
						[
							[
								1387,
								1387
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 35,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740358897.37,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 291.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "quickjs/qjs-net/cmake/BuildCURL.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1447,
						"regions":
						{
						},
						"selection":
						[
							[
								1155,
								1155
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 29,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740357468.29,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5448,
						"regions":
						{
						},
						"selection":
						[
							[
								4065,
								4161
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 98,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359427.74,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1394.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs/qjs-modules/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23048,
						"regions":
						{
						},
						"selection":
						[
							[
								5640,
								5640
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 186,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359147.1,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2980.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								1613,
								1613
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 41,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359301.94,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 561.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15170,
						"regions":
						{
						},
						"selection":
						[
							[
								6928,
								6928
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740359144.98,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2805.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "quickjs/qjs-net/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25050,
						"regions":
						{
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										113,
										120
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										87,
										87
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								7851,
								7851
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 251,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740354419.27,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3628.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "quickjs/qjs-net/cmake/BuildBrotli.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2381,
						"regions":
						{
						},
						"selection":
						[
							[
								93,
								93
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740354406.53,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "quickjs/qjs-imgui/cmake/BuildGLFW.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1718,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								103
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740354396.62,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 306.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "quickjs/qjs-modules/src/qjsm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 51859,
						"regions":
						{
						},
						"selection":
						[
							[
								51072,
								51072
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2099,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1739767528.94,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 29043.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/repeater/repeater.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18910,
						"regions":
						{
						},
						"selection":
						[
							[
								13036,
								13073
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 421,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1739767528.55,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5932.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "debuggerprotocol.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7072,
						"regions":
						{
						},
						"selection":
						[
							[
								2649,
								2695
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 89,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1739760177.51,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1193.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-nanovg",
				"test-nanovg.js"
			],
			[
				"repeater",
				"lib/repeater/repeater.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"test-alea",
				"test-alea.js"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"test-repea",
				"test-repeater.js"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"debugger.htm",
				"debugger.html"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger",
				"debuggerprotocol.js"
			],
			[
				"portmidi",
				"/usr/include/portmidi.h"
			],
			[
				"portmidi.js",
				"portmidi.js"
			],
			[
				"portmidi.h",
				"/usr/include/portmidi.h"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-helpers",
				"os-helpers.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"portaudio.h",
				"/usr/include/portaudio.h"
			],
			[
				"portaudio",
				"portaudio.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"portaudio.js",
				"portaudio.js"
			],
			[
				"portaudio2.js",
				"portaudio2.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
