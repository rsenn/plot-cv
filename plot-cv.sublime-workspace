{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
<<<<<<< HEAD
			"contents": "  value =>\n  (level, message) =>\nAsyncCollect(iter)\nGetMime(file)\nMatcher(pattern, t = arg => arg)\n  (...args) =>\nKeyOrValueMatcher(pattern)\n  ([key, value]) =>\nGetRootDirectories(pattern = '*')\nMakeUUID = (rng = Math.random) =>\n  n =>\n  dd =>\n  d =>\n  d =>\n  d =>\nGetDir(dir)\n  n =>\nDirName(name)\n  it =>\nDateStr(date)\nModeStr(mode)\nHTMLPage = ({ title, style, scripts = [], children, ...props }) =>\n  script =>\nFilterForm = ({ ...props }) =>\nHTMLTable = ({ rows, ...props }) =>\nHTMLTableRow = ({ columns, ...props }) =>\nHTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>\nFileLink = ({ file, ...props }) =>\nFileObject = ({ file, stat = {}, ...props }) =>\nFileTable = ({ files, ...props }) =>\n(a, b) =>\n  field =>\n  file =>\nReadExiv2(file)\n([k, v]) =>\n([k, v]) =>\n([k, v]) =>\n(a, b) =>\n([k, v]) =>\nReadExiftool(file)\n  l =>\n  line =>\n([line, idx]) =>\nHeifConvert(src, dst, quality = 100)\nMagickResize(src, dst, rotate = 0, width, height)\n  main(...args)\n  (a, v) =>\n  (v, pv, o) =>\n  (module, ...args) =>\n  m =>\n  .show = arg =>\n  .cleanup = () =>\n  (...args) =>\n() =>\n  puts(s)\n() =>\nParseBody(gen)\n  .createWS = (url, callbacks) =>\n  .out = s =>\n  test(req, resp)\n  proxy(req, resp)\n  config(req, resp)\n  file(req, resp)\n([dir]) =>\n  f =>\n  file =>\n  uploads(req, resp)\n  s =>\n  files(req, resp)\n  n =>\n  files2(req, resp)\n  n =>\n  n =>\n  n =>\n(a, b) =>\n  name =>\n  file =>\n  file =>\n([file, rel]) =>\n(acc, [file, st]) =>\n  string(a, b)\n  number(a, b)\n([name, obj]) =>\n({ name }) =>\n  onConnect(ws, req)\n  sendCommand(data)\n  onClose(ws, reason)\n  onRequest(req, resp)\n  onOpen(name, filename)\n  onContent(name, data)\n  onClose(name, file)\n  f = x =>\n  onFinalize()\n  (match, p1, p0, p2, p3, offset) =>\n  onMessage(ws, data)\n  get connections()\n  get by_uuid()\n  uuid(data)\n  onFd(fd, rd, wr)\n  onClose(ws, reason)\n  onMessage(ws, data)\n  quit(why)",
			"settings":
			{
				"buffer_size": 1866,
=======
			"contents": "  isBrowser = () =>\n  concat: (...args) =>\n  text: t =>\n  concat: (...args) =>\n  text: (t, ...ansi) =>\n  dingbatCode = digit =>\n  m = (r, g, b) =>\n  c =>\n  m = (r, g, b) =>\n  c =>\n  dump = (o, depth = 2, breakLength = 400) =>\n  isElement = o =>\n  parseArgs = args =>\n  .predicate = it =>\n  .predicate = v =>\n  .predicate = v =>\n  traverse = function*(obj, path = [], doc)",
			"settings":
			{
				"buffer_size": 371,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
<<<<<<< HEAD
					87,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								469,
								483
							],
							[
								563,
								586
							],
							[
								724,
								741
							],
							[
								782,
								799
							],
							[
								832,
								841
							],
							[
								875,
								885
							],
							[
								919,
								929
							],
							[
								964,
								975
							],
							[
								1009,
								1019
							],
							[
								1054,
								1065
							],
							[
								1102,
								1115
							],
							[
								1153,
								1167
							],
							[
								1203,
								1215
							],
							[
								1251,
								1263
							],
							[
								1316,
								1336
							],
							[
								1389,
								1402
							],
							[
								1462,
								1483
							],
							[
								1525,
								1541
							],
							[
								1595,
								1614
							],
							[
								1649,
								1665
							],
							[
								1789,
								1823
							],
							[
								1846,
								1878
							],
							[
								1901,
								1944
							],
							[
								3773,
								3792
							],
							[
								3890,
								3906
							],
							[
								3968,
								3986
							],
							[
								4050,
								4069
							],
							[
								4134,
								4143
							],
							[
								4198,
								4215
							],
							[
								4278,
								4295
							],
							[
								4358,
								4372
							],
							[
								4432,
								4447
							],
							[
								4508,
								4523
							],
							[
								4584,
								4592
							],
							[
								4646,
								4658
							],
							[
								4716,
								4726
							],
							[
								4782,
								4793
							],
							[
								4850,
								4858
							],
							[
								4912,
								4934
							],
							[
								5002,
								5017
							],
							[
								5078,
								5100
							],
							[
								5168,
								5184
							],
							[
								5246,
								5262
							],
							[
								5324,
								5336
							],
							[
								5394,
								5406
							],
							[
								5464,
								5477
							],
							[
								5536,
								5554
							],
							[
								5612,
								5630
							],
							[
								5694,
								5716
							],
							[
								5784,
								5811
							],
							[
								5884,
								5901
							],
							[
								5958,
								5975
							],
							[
								6032,
								6049
							],
							[
								6096,
								6112
							],
							[
								6195,
								6211
							],
							[
								6283,
								6299
							],
							[
								6371,
								6388
							],
							[
								6445,
								6465
							],
							[
								6524,
								6544
							],
							[
								6687,
								6706
							],
							[
								6782,
								6789
							],
							[
								6818,
								6838
							],
							[
								6917,
								6932
							],
							[
								6993,
								7019
							],
							[
								7090,
								7106
							],
							[
								7162,
								7175
							],
							[
								7243,
								7261
							],
							[
								7334,
								7347
							],
							[
								7403,
								7417
							],
							[
								7519,
								7545
							],
							[
								7591,
								7612
							],
							[
								7771,
								7796
							],
							[
								7881,
								7923
							],
							[
								8057,
								8097
							],
							[
								11017,
								11042
							],
							[
								11258,
								11306
							],
							[
								11623,
								11658
							],
							[
								11814,
								11832
							],
							[
								11862,
								11867
							],
							[
								11957,
								11984
							],
							[
								12103,
								12138
							],
							[
								12199,
								12203
							],
							[
								12219,
								12223
							],
							[
								12250,
								12259
							],
							[
								12422,
								12451
							],
							[
								12531,
								12561
							],
							[
								12568,
								12571
							],
							[
								12625,
								12657
							],
							[
								12899,
								12929
							],
							[
								12953,
								12969
							],
							[
								12970,
								12993
							],
							[
								13090,
								13125
							],
							[
								13149,
								13165
							],
							[
								13166,
								13189
							],
							[
								13286,
								13319
							],
							[
								13369,
								13392
							],
							[
								13486,
								13519
							],
							[
								13977,
								13983
							],
							[
								14000,
								14016
							],
							[
								14091,
								14103
							],
							[
								14138,
								14149
							],
							[
								14216,
								14237
							],
							[
								14273,
								14284
							],
							[
								14530,
								14536
							],
							[
								14549,
								14565
							],
							[
								14765,
								14770
							],
							[
								14784,
								14793
							],
							[
								14820,
								14843
							],
							[
								14877,
								14890
							],
							[
								14917,
								14922
							],
							[
								14963,
								14985
							],
							[
								15043,
								15049
							],
							[
								15065,
								15081
							],
							[
								15160,
								15187
							],
							[
								15232,
								15238
							],
							[
								15283,
								15295
							],
							[
								15325,
								15358
							],
							[
								15536,
								15554
							],
							[
								15637,
								15655
							],
							[
								15774,
								15792
							],
							[
								15967,
								16000
							],
							[
								16133,
								16146
							],
							[
								16266,
								16287
							],
							[
								16357,
								16375
							],
							[
								16818,
								16857
							],
							[
								16934,
								16951
							],
							[
								17074,
								17088
							],
							[
								17250,
								17267
							],
							[
								17408,
								17425
							],
							[
								17456,
								17473
							],
							[
								17573,
								17590
							],
							[
								17882,
								17896
							],
							[
								17942,
								17965
							],
							[
								18022,
								18029
							],
							[
								18047,
								18054
							],
							[
								18079,
								18104
							],
							[
								18164,
								18171
							],
							[
								18192,
								18199
							],
							[
								18229,
								18284
							],
							[
								18389,
								18396
							],
							[
								18534,
								18558
							],
							[
								18608,
								18612
							],
							[
								18643,
								18677
							],
							[
								18688,
								18701
							],
							[
								18760,
								18805
							],
							[
								18870,
								18881
							],
							[
								18901,
								18921
							],
							[
								18961,
								18990
							],
							[
								19014,
								19025
							],
							[
								19040,
								19052
							],
							[
								19099,
								19138
							],
							[
								19239,
								19243
							],
							[
								19276,
								19281
							],
							[
								19307,
								19313
							],
							[
								19342,
								19348
							],
							[
								19441,
								19454
							],
							[
								19482,
								19495
							],
							[
								19621,
								19632
							],
							[
								19712,
								19772
							],
							[
								19842,
								19859
							],
							[
								19920,
								19944
							],
							[
								20019,
								20046
							],
							[
								20267,
								20287
							],
							[
								20317,
								20328
							],
							[
								20427,
								20462
							],
							[
								20502,
								20520
							],
							[
								20698,
								20719
							],
							[
								20743,
								20753
							],
							[
								20789,
								20818
							],
							[
								20874,
								20884
							],
							[
								20935,
								20940
							],
							[
								20997,
								21010
							],
							[
								21083,
								21142
							],
							[
								21209,
								21234
							],
							[
								21614,
								21644
							],
							[
								22062,
								22102
							],
							[
								22196,
								22206
							],
							[
								22252,
								22308
							],
							[
								22469,
								22533
							],
							[
								22681,
								22732
							],
							[
								23399,
								23461
							],
							[
								23643,
								23668
							],
							[
								23765,
								23790
							],
							[
								23903,
								23972
							],
							[
								24061,
								24083
							],
							[
								24117,
								24128
							],
							[
								24151,
								24173
							],
							[
								24415,
								24487
							],
							[
								24590,
								24661
							],
							[
								24757,
								24808
							],
							[
								24980,
								25027
							],
							[
								25094,
								25137
							],
							[
								25267,
								25324
							],
							[
								25418,
								25424
							],
							[
								25438,
								25444
							],
							[
								25748,
								25782
							],
							[
								26083,
								26107
							],
							[
								26176,
								26181
							],
							[
								26210,
								26215
							],
							[
								26505,
								26518
							],
							[
								26574,
								26626
							],
							[
								26632,
								26649
							],
							[
								26677,
								26686
							],
							[
								26702,
								26712
							],
							[
								26724,
								26741
							],
							[
								26764,
								26773
							],
							[
								26774,
								26797
							],
							[
								26838,
								26862
							],
							[
								26987,
								27031
							],
							[
								27198,
								27232
							],
							[
								27298,
								27334
							],
							[
								27389,
								27406
							],
							[
								27728,
								27773
							],
							[
								27880,
								27893
							],
							[
								27984,
								27997
							],
							[
								28096,
								28109
							],
							[
								28183,
								28226
							],
							[
								28227,
								28246
							],
							[
								28261,
								28265
							],
							[
								28388,
								28408
							],
							[
								28461,
								28484
							],
							[
								28564,
								28584
							],
							[
								28666,
								28684
							],
							[
								28827,
								28845
							],
							[
								28918,
								28950
							],
							[
								28961,
								28987
							],
							[
								29096,
								29105
							],
							[
								29308,
								29340
							],
							[
								29369,
								29385
							],
							[
								29400,
								29407
							],
							[
								29426,
								29445
							],
							[
								29484,
								29505
							],
							[
								29545,
								29558
							],
							[
								29609,
								29630
							],
							[
								29799,
								29827
							],
							[
								30046,
								30063
							],
							[
								30064,
								30078
							],
							[
								30100,
								30107
							],
							[
								30158,
								30175
							],
							[
								30176,
								30185
							],
							[
								30245,
								30262
							],
							[
								30263,
								30286
							],
							[
								30342,
								30366
							],
							[
								33025,
								33053
							],
							[
								33484,
								33488
							],
							[
								33616,
								33629
							],
							[
								33945,
								33957
							],
							[
								34220,
								34233
							],
							[
								34338,
								34352
							],
							[
								35245,
								35273
							],
							[
								35389,
								35402
							],
							[
								35514,
								35538
							],
							[
								35631,
								35665
							],
							[
								35786,
								35825
							],
							[
								35872,
								35909
							],
							[
								35956,
								35983
							],
							[
								35994,
								36010
							],
							[
								36068,
								36090
							],
							[
								36123,
								36133
							],
							[
								36182,
								36194
							],
							[
								36476,
								36486
							],
							[
								36561,
								36573
							],
							[
								36851,
								36877
							],
							[
								37127,
								37175
							],
							[
								37223,
								37335
							],
							[
								37440,
								37463
							],
							[
								37602,
								37634
							],
							[
								37947,
								38001
							],
							[
								38359,
								38411
							],
							[
								38550,
								38576
							],
							[
								38860,
								38876
							],
							[
								39043,
								39054
							],
							[
								39255,
								39307
							],
							[
								39481,
								39563
							],
							[
								39723,
								39733
							],
							[
								39751,
								39764
							],
							[
								39941,
								39985
							],
							[
								40146,
								40205
							],
							[
								40481,
								40517
							],
							[
								40676,
								40692
							],
							[
								40706,
								40728
							],
							[
								40842,
								40848
							],
							[
								40954,
								40967
							],
							[
								42574,
								42612
							],
							[
								42712,
								42728
							],
							[
								42801,
								42845
							],
							[
								43160,
								43180
							],
							[
								43380,
								43422
							],
							[
								43617,
								43648
							],
							[
								43698,
								43740
							],
							[
								43860,
								43884
							],
							[
								44142,
								44152
							],
							[
								44205,
								44209
							],
							[
								44248,
								44279
							],
							[
								44290,
								44307
							],
							[
								44448,
								44482
							],
							[
								44720,
								44739
							],
							[
								44777,
								44799
							],
							[
								44911,
								44933
							],
							[
								45045,
								45080
							],
							[
								45128,
								45155
							],
							[
								45246,
								45284
							],
							[
								45493,
								45541
							],
							[
								46121,
								46150
							],
							[
								46597,
								46637
							],
							[
								46732,
								46759
							],
							[
								46816,
								46843
							],
							[
								47046,
								47060
							],
							[
								47109,
								47115
							],
							[
								47156,
								47222
							],
							[
								47224,
								47228
							],
							[
								47386,
								47393
							],
							[
								47485,
								47495
							],
							[
								47606,
								47615
							],
							[
								47721,
								47747
							],
							[
								47880,
								47911
							],
							[
								48086,
								48105
							],
							[
								48147,
								48155
							],
							[
								48203,
								48212
							],
							[
								48246,
								48255
							],
							[
								48289,
								48298
							],
							[
								48332,
								48341
							],
							[
								48375,
								48384
							],
							[
								48417,
								48426
							],
							[
								48460,
								48469
							],
							[
								48503,
								48512
							],
							[
								48537,
								48571
							],
							[
								48715,
								48760
							],
							[
								48826,
								48836
							],
							[
								48875,
								48885
							],
							[
								48905,
								48915
							],
							[
								48943,
								48968
							],
							[
								49099,
								49124
							],
							[
								49222,
								49257
							],
							[
								49310,
								49344
							],
							[
								49426,
								49462
							],
							[
								49591,
								49595
							],
							[
								49626,
								49630
							],
							[
								49673,
								49677
							],
							[
								49705,
								49709
							],
							[
								49738,
								49766
							],
							[
								49896,
								49900
							],
							[
								49957,
								49988
							],
							[
								50327,
								50363
							],
							[
								50612,
								50642
							],
							[
								50810,
								50814
							],
							[
								51098,
								51125
							],
							[
								51169,
								51178
							],
							[
								51230,
								51242
							],
							[
								51384,
								51396
							],
							[
								51523,
								51548
							],
							[
								51588,
								51614
							],
							[
								51866,
								51890
							],
							[
								52083,
								52106
							],
							[
								52230,
								52377
							],
							[
								52386,
								52467
							],
							[
								52508,
								52519
							],
							[
								52521,
								52533
							],
							[
								52758,
								52778
							],
							[
								52995,
								53010
							],
							[
								53291,
								53314
							],
							[
								53519,
								53537
							],
							[
								53750,
								53764
							],
							[
								53825,
								53837
							],
							[
								53935,
								53944
							],
							[
								54220,
								54236
							],
							[
								54671,
								54707
							],
							[
								54835,
								54844
							],
							[
								55020,
								55031
							],
							[
								55042,
								55050
							],
							[
								55099,
								55111
							],
							[
								55356,
								55368
							],
							[
								55549,
								55575
							],
							[
								55594,
								55598
							],
							[
								55685,
								55709
							],
							[
								55787,
								55816
							],
							[
								55870,
								55901
							],
							[
								55908,
								55911
							],
							[
								55955,
								55968
							],
							[
								56068,
								56139
							],
							[
								56165,
								56191
							],
							[
								56337,
								56372
							],
							[
								56562,
								56589
							],
							[
								56699,
								56732
							],
							[
								56889,
								56945
							],
							[
								56956,
								56972
							],
							[
								57113,
								57144
							],
							[
								57184,
								57235
							],
							[
								57605,
								57633
							],
							[
								57787,
								57851
							],
							[
								57911,
								57926
							],
							[
								57992,
								58006
							],
							[
								58044,
								58067
							],
							[
								58259,
								58277
							],
							[
								58468,
								58538
							],
							[
								58687,
								58711
							],
							[
								58730,
								58738
							],
							[
								58774,
								58789
							],
							[
								58915,
								58928
							],
							[
								59083,
								59099
							],
							[
								59294,
								59320
							],
							[
								59335,
								59357
							],
							[
								59619,
								59623
							],
							[
								59809,
								59831
							],
							[
								59853,
								59863
							],
							[
								59881,
								59894
							],
							[
								60018,
								60040
							],
							[
								60062,
								60072
							],
							[
								60090,
								60103
							],
							[
								60209,
								60231
							],
							[
								60257,
								60267
							],
							[
								60285,
								60298
							],
							[
								60334,
								60356
							],
							[
								60377,
								60387
							],
							[
								60405,
								60418
							],
							[
								60438,
								60479
							],
							[
								60768,
								60791
							],
							[
								60872,
								60894
							],
							[
								60968,
								60988
							],
							[
								61115,
								61126
							],
							[
								61159,
								61176
							],
							[
								61340,
								61359
							],
							[
								61394,
								61416
							],
							[
								61548,
								61569
							],
							[
								61707,
								61727
							],
							[
								61794,
								61817
							],
							[
								61893,
								61915
							],
							[
								62024,
								62048
							],
							[
								62105,
								62117
							],
							[
								62288,
								62306
							],
							[
								62363,
								62375
							],
							[
								62527,
								62550
							],
							[
								62682,
								62698
							],
							[
								62745,
								62758
							],
							[
								62795,
								62862
							],
							[
								62898,
								62920
							],
							[
								62949,
								62959
							],
							[
								62975,
								62988
							],
							[
								63039,
								63052
							],
							[
								63119,
								63142
							],
							[
								63261,
								63283
							],
							[
								63371,
								63384
							],
							[
								63437,
								63453
							],
							[
								63491,
								63495
							],
							[
								63605,
								63642
							],
							[
								63653,
								63663
							],
							[
								63672,
								63701
							],
							[
								63918,
								63934
							],
							[
								63956,
								63967
							],
							[
								64022,
								64049
							],
							[
								64096,
								64114
							],
							[
								64188,
								64223
							],
							[
								64349,
								64370
							],
							[
								64404,
								64413
							],
							[
								64422,
								64430
							],
							[
								64473,
								64482
							],
							[
								64503,
								64512
							],
							[
								64523,
								64531
							],
							[
								64598,
								64607
							],
							[
								64639,
								64667
							],
							[
								64736,
								64755
							],
							[
								64962,
								64988
							],
							[
								65276,
								65298
							],
							[
								65443,
								65465
							],
							[
								65977,
								66027
							],
							[
								66191,
								66240
							],
							[
								66309,
								66316
							],
							[
								66401,
								66415
							],
							[
								66496,
								66506
							],
							[
								66612,
								66616
							],
							[
								66647,
								66667
							],
							[
								66713,
								66726
							],
							[
								66776,
								66788
							],
							[
								66928,
								66943
							],
							[
								67354,
								67392
							],
							[
								67574,
								67585
							],
							[
								67620,
								67641
							],
							[
								67710,
								67717
							],
							[
								67755,
								67785
							],
							[
								67807,
								67823
							],
							[
								67824,
								67844
							],
							[
								67934,
								67969
							],
							[
								68058,
								68063
							],
							[
								68086,
								68103
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"length = x =>",
							"objectToString = o =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function isAsync(fn)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(...args)",
							" function assertEqual(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function getConstructor(obj)",
							" function memoize(fn, cache = ",
							"())",
							" function Memoize(n, ...rest)",
							" function chain(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainRight(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainArray(tmp, ...fns)",
							"tmp = function(...args)",
							" function getset(target, ...args)",
							"key =>",
							" (key, value) =>",
							" key =>",
							"([k, v]) =>",
							" (key, value) =>",
							"([k, v]) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function methods(obj)",
							"bind(...args)",
							"fn =>",
							"transform(read, write)",
							"key =>",
							" (key, value) =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							" function setter(target, ...args)",
							" (...argv) =>",
							"ret = (key, value) =>",
							"ret = (...argv) =>",
							" function gettersetter(target, ...args)",
							"fn = (...args) =>",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasFn(target)",
							" key =>",
							" key =>",
							" function remover(target)",
							" key =>",
							" key =>",
							" function getOrCreate(target, create = () => ({}), set)",
							" key =>",
							" function hasGetSet(obj)",
							"m =>",
							" function getSetArgument(get, set)",
							" (...args) =>",
							" function wrapGetSet(getter, setter, ...args)",
							" prop =>",
							" (prop, value) =>",
							" function weakGetSet(...args)",
							" wref =>",
							" value =>",
							" function addremovehas(target, ...args)",
							"n =>",
							"el =>",
							" el =>",
							" el =>",
							" el =>",
							" el =>",
							"has = el =>",
							" function lookupObject(getset, instance = {}, handlers = {})",
							"get(target, prop)",
							"set(target, prop, value)",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function waitCancellable(ms)",
							"resolve =>",
							"() =>",
							"cancel: () =>",
							" function extend(dst, src, options = { enumerable: false })",
							"options = (desc, prop) =>",
							" function define(obj, ...args)",
							" function nonenumerable(props, obj = {})",
							" (k, v) =>",
							" function defineGetter(obj, key, fn, enumerable = false)",
							" function defineGetterSetter(obj, key, g, s, enumerable = false)",
							" function defineGettersSetters(obj, gettersSetters)",
							" function* prototypeIterator(obj, pred = (obj, depth) => true)",
							" function pick(obj, keys)",
							" function omit(obj, keys)",
							" function keys(obj, start = 0, end = obj => obj === Object.prototype)",
							"pred = (obj, depth) =>",
							"end = () =>",
							"pred = (obj, depth) =>",
							" function entries(obj, start = 0, end = obj => obj === Object.prototype)",
							" function values(obj, start = 0, end = obj => obj === Object.prototype)",
							" function getMethodNames(obj, depth = 1, start = 0)",
							" function getMethods(obj, depth = 1, start = 0)",
							" function bindMethods(obj, methods, target)",
							" function properties(obj, options = { enumerable: true })",
							" fn =>",
							" fn =>",
							" function weakDefine(obj, ...args)",
							" function merge(...args)",
							" a =>",
							" a =>",
							"(acc, arg) =>",
							" function weakAssoc(fn = (value, ...args) => Object.",
							"(value, ...args))",
							" () =>",
							" map =>",
							"(obj, ...args) =>",
							" () =>",
							" (obj, ...args) =>",
							"self = (obj, ...args) =>",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" function filterKeys(r, needles, keep = true)",
							"pred = key =>",
							"pred = key =>",
							"(obj, key) =>",
							"curry = (f, arr = [], length = f.length) =>",
							" function(...args)",
							"a =>",
							"(min, max, value) =>",
							"generate = (fn, add) =>",
							"add = (item, gen) =>",
							" function(...args)",
							" function(...args)",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"(a, b) =>",
							" function uniquePred(cmp = null)",
							" (el, i, arr) =>",
							"item =>",
							"i : (el, i, arr) =>",
							"unique = (...args) =>",
							"(arr, cmp) =>",
							"function* unique(seq)",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" (...args) =>",
							"code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function stripAnsi(str)",
							" function padAnsi(str, n, s = ' ')",
							" function padStartAnsi(str, n, s = ' ')",
							" function padEndAnsi(str, n, s = ' ')",
							" function mapFunctional(fn)",
							" function* (arg)",
							" function map(...args)",
							"ret = a =>",
							"function* ()",
							"ret = a =>",
							"function* ()",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function roundDigits(precision)",
							" function roundTo(value, prec, digits, type = 'round')",
							" function lazyProperty(obj, name, getter, opts = {})",
							"replaceProperty = value =>",
							"async function()",
							" function()",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function observeProperties(target = {}, obj, fn = (prop, value) => {}, opts = {})",
							"get: () =>",
							"set: value =>",
							" function decorate(decorators, obj, ...args)",
							" function decorateProperty(target, property, ...decorators)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function showHelp(opts, exitCode = 0)",
							"(acc, [name]) =>",
							" (acc, [name, [hasArg, fn, shortOpt]]) =>",
							" function isoDate(d)",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>",
							" function ucfirst(str)",
							" function lcfirst(str)",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function* bytesToUTF8(bytes)",
							" function codePointsToString(codePoints)",
							" function bufferToString(b)",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							" function pushUnique(arr, ...args)",
							" function inserter(dest, next = (k, v) => {})",
							" (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							"fn = function(key, value)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partitionArray(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)",
							" function partition(array, callback)",
							" function push(obj, ...values)",
							"v =>",
							" function repeater(n, what)",
							"n = () =>",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function functionName(fn)",
							" function className(obj)",
							"isArrowFunction = fn =>",
							" function instrument( fn, log = (duration, name, args, ret) => console.log(`function '${name}'` + (ret !== undefined ? ` {= ${escape(ret + '').",
							"(0, 100) + '...'}}` : '') + ` timing: ${duration}ms`), logInterval = 0 //1000 )",
							"now = () =>",
							"([s, ns]) =>",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"newMap = () =>",
							"(...args) =>",
							"get(path)",
							"set(path, value)",
							"catchable = function Catchable(self)",
							"catchable",
							"function ()",
							"then(fn)",
							"(...args) =>",
							"(...args) =>",
							" function isNumeric(value)",
							"v =>",
							" function isIndex(value)",
							" function numericIndex(value)",
							" function histogram(arr, out = ",
							"())",
							"incr = key =>",
							" function propertyLookupHandlers(getter = key => null, setter, thisObj)",
							"get(target, key, receiver)",
							".set = function(target, key, value)",
							".ownKeys = function(target)",
							" function propertyLookup(...args)",
							" function padFn(len, char = ' ', fn = (str, pad) => pad)",
							" (s, n = len) =>",
							" function pad(s, n, char = ' ')",
							" function abbreviate(str, max = 40, suffix = '...')",
							" function trim(str, charset)",
							" function tryFunction(fn, resolve = a => a, reject = () => null)",
							"resolve = () =>",
							"reject = () =>",
							"async function(...args)",
							" function(...args)",
							" function tryCatch(fn, resolve = a => a, reject = () => null, ...args)",
							" function mapAdapter(fn)",
							"get(key)",
							"set(key, value)",
							".keys = () =>",
							".entries = () =>",
							" function mapFunction(map)",
							"fn = function(...args)",
							"m =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".update = function(key, fn = (k, v) => v)",
							".entries = function* ()",
							".values = function* ()",
							".keys = function* ()",
							" function()",
							"([key, value]) =>",
							".keys = async () =>",
							".entries = async () =>",
							".values = async () =>",
							".keys = function* ()",
							".entries = function* ()",
							".values = function* ()",
							".filter = function(pred)",
							"function* ()",
							".map = function(t)",
							"function* ()",
							".forEach = function(fn)",
							".delete = key =>",
							".has = key =>",
							" function mapWrapper(map, toKey = key => key, fromKey = key => key)",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".keys = () =>",
							".entries = function* ()",
							".values = function* ()",
							".has = key =>",
							".delete = key =>",
							"m =>",
							" function weakMapper(createFn, map = ",
							"(), hitFn)",
							"self = function(obj, ...args)",
							".set = (k, v) =>",
							".get = k =>",
							" function wrapGenerator(fn)",
							" function(...args)",
							" function wrapGeneratorMethods(obj)",
							" function isBrowser()",
							" () =>",
							" w =>",
							" () =>",
							" () =>",
							" d =>",
							" () =>",
							" function startInteractive()",
							"function* (re, str)",
							" function indexOf(...args)",
							" (what, offset = 0) =>",
							" (what, offset = 0) =>",
							" function* searchAll(haystack, needle, offset = 0)",
							" function bindProperties(obj, target, props, gen)",
							"name =>",
							"(acc, name) =>",
							" p => v =>",
							"k =>",
							" (a, [k, v]) =>",
							" (...args) =>",
							"(...args) =>",
							" (a, k) =>",
							" function predicate(fn_or_regex, pred)",
							"fn = arg =>",
							".valueOf = function()",
							" arg =>",
							" function transformer(a, ...l)",
							" (acc, fn) =>",
							" function(...v)",
							" function getSystemErrorName(errno)",
							"() =>",
							"(acc, name, i) =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								469,
								483
							],
							[
								563,
								586
							],
							[
								724,
								741
							],
							[
								782,
								799
							],
							[
								832,
								841
							],
							[
								875,
								885
							],
							[
								919,
								929
							],
							[
								964,
								975
							],
							[
								1009,
								1019
							],
							[
								1054,
								1065
							],
							[
								1102,
								1115
							],
							[
								1153,
								1167
							],
							[
								1203,
								1215
							],
							[
								1251,
								1263
							],
							[
								1316,
								1336
							],
							[
								1389,
								1402
							],
							[
								1462,
								1483
							],
							[
								1525,
								1541
							],
							[
								1595,
								1614
							],
							[
								1649,
								1665
							],
							[
								1789,
								1823
							],
							[
								1846,
								1878
							],
							[
								1901,
								1944
							],
							[
								3773,
								3792
							],
							[
								3890,
								3906
							],
							[
								3968,
								3986
							],
							[
								4050,
								4069
							],
							[
								4134,
								4143
							],
							[
								4198,
								4215
							],
							[
								4278,
								4295
							],
							[
								4358,
								4372
							],
							[
								4432,
								4447
							],
							[
								4508,
								4523
							],
							[
								4584,
								4592
							],
							[
								4646,
								4658
							],
							[
								4716,
								4726
							],
							[
								4782,
								4793
							],
							[
								4850,
								4858
							],
							[
								4912,
								4934
							],
							[
								5002,
								5017
							],
							[
								5078,
								5100
							],
							[
								5168,
								5184
							],
							[
								5246,
								5262
							],
							[
								5324,
								5336
							],
							[
								5394,
								5406
							],
							[
								5464,
								5477
							],
							[
								5536,
								5554
							],
							[
								5612,
								5630
							],
							[
								5694,
								5716
							],
							[
								5784,
								5811
							],
							[
								5884,
								5901
							],
							[
								5958,
								5975
							],
							[
								6032,
								6049
							],
							[
								6096,
								6112
							],
							[
								6195,
								6211
							],
							[
								6283,
								6299
							],
							[
								6371,
								6388
							],
							[
								6445,
								6465
							],
							[
								6524,
								6544
							],
							[
								6687,
								6706
							],
							[
								6782,
								6789
							],
							[
								6818,
								6838
							],
							[
								6917,
								6932
							],
							[
								6993,
								7019
							],
							[
								7090,
								7106
							],
							[
								7162,
								7175
							],
							[
								7243,
								7261
							],
							[
								7334,
								7347
							],
							[
								7403,
								7417
							],
							[
								7519,
								7545
							],
							[
								7591,
								7612
							],
							[
								7771,
								7796
							],
							[
								7881,
								7923
							],
							[
								8057,
								8097
							],
							[
								11017,
								11042
							],
							[
								11258,
								11306
							],
							[
								11623,
								11658
							],
							[
								11814,
								11832
							],
							[
								11862,
								11867
							],
							[
								11957,
								11984
							],
							[
								12103,
								12138
							],
							[
								12199,
								12203
							],
							[
								12219,
								12223
							],
							[
								12250,
								12259
							],
							[
								12422,
								12451
							],
							[
								12531,
								12561
							],
							[
								12568,
								12571
							],
							[
								12625,
								12657
							],
							[
								12899,
								12929
							],
							[
								12953,
								12969
							],
							[
								12970,
								12993
							],
							[
								13090,
								13125
							],
							[
								13149,
								13165
							],
							[
								13166,
								13189
							],
							[
								13286,
								13319
							],
							[
								13369,
								13392
							],
							[
								13486,
								13519
							],
							[
								13977,
								13983
							],
							[
								14000,
								14016
							],
							[
								14091,
								14103
							],
							[
								14138,
								14149
							],
							[
								14216,
								14237
							],
							[
								14273,
								14284
							],
							[
								14530,
								14536
							],
							[
								14549,
								14565
							],
							[
								14765,
								14770
							],
							[
								14784,
								14793
							],
							[
								14820,
								14843
							],
							[
								14877,
								14890
							],
							[
								14917,
								14922
							],
							[
								14963,
								14985
							],
							[
								15043,
								15049
							],
							[
								15065,
								15081
							],
							[
								15160,
								15187
							],
							[
								15232,
								15238
							],
							[
								15283,
								15295
							],
							[
								15325,
								15358
							],
							[
								15536,
								15554
							],
							[
								15637,
								15655
							],
							[
								15774,
								15792
							],
							[
								15967,
								16000
							],
							[
								16133,
								16146
							],
							[
								16266,
								16287
							],
							[
								16357,
								16375
							],
							[
								16818,
								16857
							],
							[
								16934,
								16951
							],
							[
								17074,
								17088
							],
							[
								17250,
								17267
							],
							[
								17408,
								17425
							],
							[
								17456,
								17473
							],
							[
								17573,
								17590
							],
							[
								17882,
								17896
							],
							[
								17942,
								17965
							],
							[
								18022,
								18029
							],
							[
								18047,
								18054
							],
							[
								18079,
								18104
							],
							[
								18164,
								18171
							],
							[
								18192,
								18199
							],
							[
								18229,
								18284
							],
							[
								18389,
								18396
							],
							[
								18534,
								18558
							],
							[
								18608,
								18612
							],
							[
								18643,
								18677
							],
							[
								18688,
								18701
							],
							[
								18760,
								18805
							],
							[
								18870,
								18881
							],
							[
								18901,
								18921
							],
							[
								18961,
								18990
							],
							[
								19014,
								19025
							],
							[
								19040,
								19052
							],
							[
								19099,
								19138
							],
							[
								19239,
								19243
							],
							[
								19276,
								19281
							],
							[
								19307,
								19313
							],
							[
								19342,
								19348
							],
							[
								19441,
								19454
							],
							[
								19482,
								19495
							],
							[
								19621,
								19632
							],
							[
								19712,
								19772
							],
							[
								19842,
								19859
							],
							[
								19920,
								19944
							],
							[
								20019,
								20046
							],
							[
								20267,
								20287
							],
							[
								20317,
								20328
							],
							[
								20427,
								20462
							],
							[
								20502,
								20520
							],
							[
								20698,
								20719
							],
							[
								20743,
								20753
							],
							[
								20789,
								20818
							],
							[
								20874,
								20884
							],
							[
								20935,
								20940
							],
							[
								20997,
								21010
							],
							[
								21083,
								21142
							],
							[
								21209,
								21234
							],
							[
								21614,
								21644
							],
							[
								22062,
								22102
							],
							[
								22196,
								22206
							],
							[
								22252,
								22308
							],
							[
								22469,
								22533
							],
							[
								22681,
								22732
							],
							[
								23399,
								23461
							],
							[
								23643,
								23668
							],
							[
								23765,
								23790
							],
							[
								23903,
								23972
							],
							[
								24061,
								24083
							],
							[
								24117,
								24128
							],
							[
								24151,
								24173
							],
							[
								24415,
								24487
							],
							[
								24590,
								24661
							],
							[
								24757,
								24808
							],
							[
								24980,
								25027
							],
							[
								25094,
								25137
							],
							[
								25267,
								25324
							],
							[
								25418,
								25424
							],
							[
								25438,
								25444
							],
							[
								25748,
								25782
							],
							[
								26083,
								26107
							],
							[
								26176,
								26181
							],
							[
								26210,
								26215
							],
							[
								26505,
								26518
							],
							[
								26574,
								26626
							],
							[
								26632,
								26649
							],
							[
								26677,
								26686
							],
							[
								26702,
								26712
							],
							[
								26724,
								26741
							],
							[
								26764,
								26773
							],
							[
								26774,
								26797
							],
							[
								26838,
								26862
							],
							[
								26987,
								27031
							],
							[
								27198,
								27232
							],
							[
								27298,
								27334
							],
							[
								27389,
								27406
							],
							[
								27728,
								27773
							],
							[
								27880,
								27893
							],
							[
								27984,
								27997
							],
							[
								28096,
								28109
							],
							[
								28183,
								28226
							],
							[
								28227,
								28246
							],
							[
								28261,
								28265
							],
							[
								28388,
								28408
							],
							[
								28461,
								28484
							],
							[
								28564,
								28584
							],
							[
								28666,
								28684
							],
							[
								28827,
								28845
							],
							[
								28918,
								28950
							],
							[
								28961,
								28987
							],
							[
								29096,
								29105
							],
							[
								29308,
								29340
							],
							[
								29369,
								29385
							],
							[
								29400,
								29407
							],
							[
								29426,
								29445
							],
							[
								29484,
								29505
							],
							[
								29545,
								29558
							],
							[
								29609,
								29630
							],
							[
								29799,
								29827
							],
							[
								30046,
								30063
							],
							[
								30064,
								30078
							],
							[
								30100,
								30107
							],
							[
								30158,
								30175
							],
							[
								30176,
								30185
							],
							[
								30245,
								30262
							],
							[
								30263,
								30286
							],
							[
								30342,
								30366
							],
							[
								33025,
								33053
							],
							[
								33484,
								33488
							],
							[
								33616,
								33629
							],
							[
								33945,
								33957
							],
							[
								34220,
								34233
							],
							[
								34338,
								34352
							],
							[
								35245,
								35273
							],
							[
								35389,
								35402
							],
							[
								35514,
								35538
							],
							[
								35631,
								35665
							],
							[
								35786,
								35825
							],
							[
								35872,
								35909
							],
							[
								35956,
								35983
							],
							[
								35994,
								36010
							],
							[
								36068,
								36090
							],
							[
								36123,
								36133
							],
							[
								36182,
								36194
							],
							[
								36476,
								36486
							],
							[
								36561,
								36573
							],
							[
								36851,
								36877
							],
							[
								37127,
								37175
							],
							[
								37223,
								37335
							],
							[
								37440,
								37463
							],
							[
								37602,
								37634
							],
							[
								37947,
								38001
							],
							[
								38359,
								38411
							],
							[
								38550,
								38576
							],
							[
								38860,
								38876
							],
							[
								39043,
								39054
							],
							[
								39255,
								39307
							],
							[
								39481,
								39563
							],
							[
								39723,
								39733
							],
							[
								39751,
								39764
							],
							[
								39941,
								39985
							],
							[
								40146,
								40205
							],
							[
								40481,
								40517
							],
							[
								40676,
								40692
							],
							[
								40706,
								40728
							],
							[
								40842,
								40848
							],
							[
								40954,
								40967
							],
							[
								42574,
								42612
							],
							[
								42712,
								42728
							],
							[
								42801,
								42845
							],
							[
								43160,
								43180
							],
							[
								43380,
								43422
							],
							[
								43617,
								43648
							],
							[
								43698,
								43740
							],
							[
								43860,
								43884
							],
							[
								44142,
								44152
							],
							[
								44205,
								44209
							],
							[
								44248,
								44279
							],
							[
								44290,
								44307
							],
							[
								44448,
								44482
							],
							[
								44720,
								44739
							],
							[
								44777,
								44799
							],
							[
								44911,
								44933
							],
							[
								45045,
								45080
							],
							[
								45128,
								45155
							],
							[
								45246,
								45284
							],
							[
								45493,
								45541
							],
							[
								46121,
								46150
							],
							[
								46597,
								46637
							],
							[
								46732,
								46759
							],
							[
								46816,
								46843
							],
							[
								47046,
								47060
							],
							[
								47109,
								47115
							],
							[
								47156,
								47222
							],
							[
								47224,
								47228
							],
							[
								47386,
								47393
							],
							[
								47485,
								47495
							],
							[
								47606,
								47615
							],
							[
								47721,
								47747
							],
							[
								47880,
								47911
							],
							[
								48086,
								48105
							],
							[
								48147,
								48155
							],
							[
								48203,
								48212
							],
							[
								48246,
								48255
							],
							[
								48289,
								48298
							],
							[
								48332,
								48341
							],
							[
								48375,
								48384
							],
							[
								48417,
								48426
							],
							[
								48460,
								48469
							],
							[
								48503,
								48512
							],
							[
								48537,
								48571
							],
							[
								48715,
								48760
							],
							[
								48826,
								48836
							],
							[
								48875,
								48885
							],
							[
								48905,
								48915
							],
							[
								48943,
								48968
							],
							[
								49099,
								49124
							],
							[
								49222,
								49257
							],
							[
								49310,
								49344
							],
							[
								49426,
								49462
							],
							[
								49591,
								49595
							],
							[
								49626,
								49630
							],
							[
								49673,
								49677
							],
							[
								49705,
								49709
							],
							[
								49738,
								49766
							],
							[
								49896,
								49900
							],
							[
								49957,
								49988
							],
							[
								50327,
								50363
							],
							[
								50612,
								50642
							],
							[
								50810,
								50814
							],
							[
								51098,
								51125
							],
							[
								51169,
								51178
							],
							[
								51230,
								51242
							],
							[
								51384,
								51396
							],
							[
								51523,
								51548
							],
							[
								51588,
								51614
							],
							[
								51866,
								51890
							],
							[
								52083,
								52106
							],
							[
								52230,
								52377
							],
							[
								52386,
								52467
							],
							[
								52508,
								52519
							],
							[
								52521,
								52533
							],
							[
								52758,
								52778
							],
							[
								52995,
								53010
							],
							[
								53291,
								53314
							],
							[
								53519,
								53537
							],
							[
								53750,
								53764
							],
							[
								53825,
								53837
							],
							[
								53935,
								53944
							],
							[
								54220,
								54236
							],
							[
								54671,
								54707
							],
							[
								54835,
								54844
							],
							[
								55020,
								55031
							],
							[
								55042,
								55050
							],
							[
								55099,
								55111
							],
							[
								55356,
								55368
							],
							[
								55549,
								55575
							],
							[
								55594,
								55598
							],
							[
								55685,
								55709
							],
							[
								55787,
								55816
							],
							[
								55870,
								55901
							],
							[
								55908,
								55911
							],
							[
								55955,
								55968
							],
							[
								56068,
								56139
							],
							[
								56165,
								56191
							],
							[
								56337,
								56372
							],
							[
								56562,
								56589
							],
							[
								56699,
								56732
							],
							[
								56889,
								56945
							],
							[
								56956,
								56972
							],
							[
								57113,
								57144
							],
							[
								57184,
								57235
							],
							[
								57605,
								57633
							],
							[
								57787,
								57851
							],
							[
								57911,
								57926
							],
							[
								57992,
								58006
							],
							[
								58044,
								58067
							],
							[
								58259,
								58277
							],
							[
								58468,
								58538
							],
							[
								58687,
								58711
							],
							[
								58730,
								58738
							],
							[
								58774,
								58789
							],
							[
								58915,
								58928
							],
							[
								59083,
								59099
							],
							[
								59294,
								59320
							],
							[
								59335,
								59357
							],
							[
								59619,
								59623
							],
							[
								59809,
								59831
							],
							[
								59853,
								59863
							],
							[
								59881,
								59894
							],
							[
								60018,
								60040
							],
							[
								60062,
								60072
							],
							[
								60090,
								60103
							],
							[
								60209,
								60231
							],
							[
								60257,
								60267
							],
							[
								60285,
								60298
							],
							[
								60334,
								60356
							],
							[
								60377,
								60387
							],
							[
								60405,
								60418
							],
							[
								60438,
								60479
							],
							[
								60768,
								60791
							],
							[
								60872,
								60894
							],
							[
								60968,
								60988
							],
							[
								61115,
								61126
							],
							[
								61159,
								61176
							],
							[
								61340,
								61359
							],
							[
								61394,
								61416
							],
							[
								61548,
								61569
							],
							[
								61707,
								61727
							],
							[
								61794,
								61817
							],
							[
								61893,
								61915
							],
							[
								62024,
								62048
							],
							[
								62105,
								62117
							],
							[
								62288,
								62306
							],
							[
								62363,
								62375
							],
							[
								62527,
								62550
							],
							[
								62682,
								62698
							],
							[
								62745,
								62758
							],
							[
								62795,
								62862
							],
							[
								62898,
								62920
							],
							[
								62949,
								62959
							],
							[
								62975,
								62988
							],
							[
								63039,
								63052
							],
							[
								63119,
								63142
							],
							[
								63261,
								63283
							],
							[
								63371,
								63384
							],
							[
								63437,
								63453
							],
							[
								63491,
								63495
							],
							[
								63605,
								63642
							],
							[
								63653,
								63663
							],
							[
								63672,
								63701
							],
							[
								63918,
								63934
							],
							[
								63956,
								63967
							],
							[
								64022,
								64049
							],
							[
								64096,
								64114
							],
							[
								64188,
								64223
							],
							[
								64349,
								64370
							],
							[
								64404,
								64413
							],
							[
								64422,
								64430
							],
							[
								64473,
								64482
							],
							[
								64503,
								64512
							],
							[
								64523,
								64531
							],
							[
								64598,
								64607
							],
							[
								64639,
								64667
							],
							[
								64736,
								64755
							],
							[
								64962,
								64988
							],
							[
								65276,
								65298
							],
							[
								65443,
								65465
							],
							[
								65977,
								66027
							],
							[
								66191,
								66240
							],
							[
								66309,
								66316
							],
							[
								66401,
								66415
							],
							[
								66496,
								66506
							],
							[
								66612,
								66616
							],
							[
								66647,
								66667
							],
							[
								66713,
								66726
							],
							[
								66776,
								66788
							],
							[
								66928,
								66943
							],
							[
								67354,
								67392
							],
							[
								67574,
								67585
							],
							[
								67620,
								67641
							],
							[
								67710,
								67717
							],
							[
								67755,
								67785
							],
							[
								67807,
								67823
							],
							[
								67824,
								67844
							],
							[
								67934,
								67969
							],
							[
								68058,
								68063
							],
							[
								68086,
								68103
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"length = x =>",
							"objectToString = o =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function isAsync(fn)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(...args)",
							" function assertEqual(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function getConstructor(obj)",
							" function memoize(fn, cache = ",
							"())",
							" function Memoize(n, ...rest)",
							" function chain(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainRight(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainArray(tmp, ...fns)",
							"tmp = function(...args)",
							" function getset(target, ...args)",
							"key =>",
							" (key, value) =>",
							" key =>",
							"([k, v]) =>",
							" (key, value) =>",
							"([k, v]) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function methods(obj)",
							"bind(...args)",
							"fn =>",
							"transform(read, write)",
							"key =>",
							" (key, value) =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							" function setter(target, ...args)",
							" (...argv) =>",
							"ret = (key, value) =>",
							"ret = (...argv) =>",
							" function gettersetter(target, ...args)",
							"fn = (...args) =>",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasFn(target)",
							" key =>",
							" key =>",
							" function remover(target)",
							" key =>",
							" key =>",
							" function getOrCreate(target, create = () => ({}), set)",
							" key =>",
							" function hasGetSet(obj)",
							"m =>",
							" function getSetArgument(get, set)",
							" (...args) =>",
							" function wrapGetSet(getter, setter, ...args)",
							" prop =>",
							" (prop, value) =>",
							" function weakGetSet(...args)",
							" wref =>",
							" value =>",
							" function addremovehas(target, ...args)",
							"n =>",
							"el =>",
							" el =>",
							" el =>",
							" el =>",
							" el =>",
							"has = el =>",
							" function lookupObject(getset, instance = {}, handlers = {})",
							"get(target, prop)",
							"set(target, prop, value)",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function waitCancellable(ms)",
							"resolve =>",
							"() =>",
							"cancel: () =>",
							" function extend(dst, src, options = { enumerable: false })",
							"options = (desc, prop) =>",
							" function define(obj, ...args)",
							" function nonenumerable(props, obj = {})",
							" (k, v) =>",
							" function defineGetter(obj, key, fn, enumerable = false)",
							" function defineGetterSetter(obj, key, g, s, enumerable = false)",
							" function defineGettersSetters(obj, gettersSetters)",
							" function* prototypeIterator(obj, pred = (obj, depth) => true)",
							" function pick(obj, keys)",
							" function omit(obj, keys)",
							" function keys(obj, start = 0, end = obj => obj === Object.prototype)",
							"pred = (obj, depth) =>",
							"end = () =>",
							"pred = (obj, depth) =>",
							" function entries(obj, start = 0, end = obj => obj === Object.prototype)",
							" function values(obj, start = 0, end = obj => obj === Object.prototype)",
							" function getMethodNames(obj, depth = 1, start = 0)",
							" function getMethods(obj, depth = 1, start = 0)",
							" function bindMethods(obj, methods, target)",
							" function properties(obj, options = { enumerable: true })",
							" fn =>",
							" fn =>",
							" function weakDefine(obj, ...args)",
							" function merge(...args)",
							" a =>",
							" a =>",
							"(acc, arg) =>",
							" function weakAssoc(fn = (value, ...args) => Object.",
							"(value, ...args))",
							" () =>",
							" map =>",
							"(obj, ...args) =>",
							" () =>",
							" (obj, ...args) =>",
							"self = (obj, ...args) =>",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" function filterKeys(r, needles, keep = true)",
							"pred = key =>",
							"pred = key =>",
							"(obj, key) =>",
							"curry = (f, arr = [], length = f.length) =>",
							" function(...args)",
							"a =>",
							"(min, max, value) =>",
							"generate = (fn, add) =>",
							"add = (item, gen) =>",
							" function(...args)",
							" function(...args)",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"(a, b) =>",
							" function uniquePred(cmp = null)",
							" (el, i, arr) =>",
							"item =>",
							"i : (el, i, arr) =>",
							"unique = (...args) =>",
							"(arr, cmp) =>",
							"function* unique(seq)",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" (...args) =>",
							"code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function stripAnsi(str)",
							" function padAnsi(str, n, s = ' ')",
							" function padStartAnsi(str, n, s = ' ')",
							" function padEndAnsi(str, n, s = ' ')",
							" function mapFunctional(fn)",
							" function* (arg)",
							" function map(...args)",
							"ret = a =>",
							"function* ()",
							"ret = a =>",
							"function* ()",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function roundDigits(precision)",
							" function roundTo(value, prec, digits, type = 'round')",
							" function lazyProperty(obj, name, getter, opts = {})",
							"replaceProperty = value =>",
							"async function()",
							" function()",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function observeProperties(target = {}, obj, fn = (prop, value) => {}, opts = {})",
							"get: () =>",
							"set: value =>",
							" function decorate(decorators, obj, ...args)",
							" function decorateProperty(target, property, ...decorators)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function showHelp(opts, exitCode = 0)",
							"(acc, [name]) =>",
							" (acc, [name, [hasArg, fn, shortOpt]]) =>",
							" function isoDate(d)",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>",
							" function ucfirst(str)",
							" function lcfirst(str)",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function* bytesToUTF8(bytes)",
							" function codePointsToString(codePoints)",
							" function bufferToString(b)",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							" function pushUnique(arr, ...args)",
							" function inserter(dest, next = (k, v) => {})",
							" (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							"fn = function(key, value)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partitionArray(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)",
							" function partition(array, callback)",
							" function push(obj, ...values)",
							"v =>",
							" function repeater(n, what)",
							"n = () =>",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function functionName(fn)",
							" function className(obj)",
							"isArrowFunction = fn =>",
							" function instrument( fn, log = (duration, name, args, ret) => console.log(`function '${name}'` + (ret !== undefined ? ` {= ${escape(ret + '').",
							"(0, 100) + '...'}}` : '') + ` timing: ${duration}ms`), logInterval = 0 //1000 )",
							"now = () =>",
							"([s, ns]) =>",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"newMap = () =>",
							"(...args) =>",
							"get(path)",
							"set(path, value)",
							"catchable = function Catchable(self)",
							"catchable",
							"function ()",
							"then(fn)",
							"(...args) =>",
							"(...args) =>",
							" function isNumeric(value)",
							"v =>",
							" function isIndex(value)",
							" function numericIndex(value)",
							" function histogram(arr, out = ",
							"())",
							"incr = key =>",
							" function propertyLookupHandlers(getter = key => null, setter, thisObj)",
							"get(target, key, receiver)",
							".set = function(target, key, value)",
							".ownKeys = function(target)",
							" function propertyLookup(...args)",
							" function padFn(len, char = ' ', fn = (str, pad) => pad)",
							" (s, n = len) =>",
							" function pad(s, n, char = ' ')",
							" function abbreviate(str, max = 40, suffix = '...')",
							" function trim(str, charset)",
							" function tryFunction(fn, resolve = a => a, reject = () => null)",
							"resolve = () =>",
							"reject = () =>",
							"async function(...args)",
							" function(...args)",
							" function tryCatch(fn, resolve = a => a, reject = () => null, ...args)",
							" function mapAdapter(fn)",
							"get(key)",
							"set(key, value)",
							".keys = () =>",
							".entries = () =>",
							" function mapFunction(map)",
							"fn = function(...args)",
							"m =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".update = function(key, fn = (k, v) => v)",
							".entries = function* ()",
							".values = function* ()",
							".keys = function* ()",
							" function()",
							"([key, value]) =>",
							".keys = async () =>",
							".entries = async () =>",
							".values = async () =>",
							".keys = function* ()",
							".entries = function* ()",
							".values = function* ()",
							".filter = function(pred)",
							"function* ()",
							".map = function(t)",
							"function* ()",
							".forEach = function(fn)",
							".delete = key =>",
							".has = key =>",
							" function mapWrapper(map, toKey = key => key, fromKey = key => key)",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".keys = () =>",
							".entries = function* ()",
							".values = function* ()",
							".has = key =>",
							".delete = key =>",
							"m =>",
							" function weakMapper(createFn, map = ",
							"(), hitFn)",
							"self = function(obj, ...args)",
							".set = (k, v) =>",
							".get = k =>",
							" function wrapGenerator(fn)",
							" function(...args)",
							" function wrapGeneratorMethods(obj)",
							" function isBrowser()",
							" () =>",
							" w =>",
							" () =>",
							" () =>",
							" d =>",
							" () =>",
							" function startInteractive()",
							"function* (re, str)",
							" function indexOf(...args)",
							" (what, offset = 0) =>",
							" (what, offset = 0) =>",
							" function* searchAll(haystack, needle, offset = 0)",
							" function bindProperties(obj, target, props, gen)",
							"name =>",
							"(acc, name) =>",
							" p => v =>",
							"k =>",
							" (a, [k, v]) =>",
							" (...args) =>",
							"(...args) =>",
							" (a, k) =>",
							" function predicate(fn_or_regex, pred)",
							"fn = arg =>",
							".valueOf = function()",
							" arg =>",
							" function transformer(a, ...l)",
							" (acc, fn) =>",
							" function(...v)",
							" function getSystemErrorName(errno)",
							"() =>",
							"(acc, name, i) =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					89,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								469,
								483
							],
							[
								563,
								586
							],
							[
								724,
								741
							],
							[
								782,
								799
							],
							[
								832,
								841
							],
							[
								875,
								885
							],
							[
								919,
								929
							],
							[
								964,
								975
							],
							[
								1009,
								1019
							],
							[
								1054,
								1065
							],
							[
								1102,
								1115
							],
							[
								1153,
								1167
							],
							[
								1203,
								1215
							],
							[
								1251,
								1263
							],
							[
								1316,
								1336
							],
							[
								1389,
								1402
							],
							[
								1462,
								1483
							],
							[
								1525,
								1541
							],
							[
								1595,
								1614
							],
							[
								1649,
								1665
							],
							[
								1789,
								1823
							],
							[
								1846,
								1878
							],
							[
								1901,
								1944
							],
							[
								3773,
								3792
							],
							[
								3890,
								3906
							],
							[
								3968,
								3986
							],
							[
								4050,
								4069
							],
							[
								4134,
								4143
							],
							[
								4198,
								4215
							],
							[
								4278,
								4295
							],
							[
								4358,
								4372
							],
							[
								4432,
								4447
							],
							[
								4508,
								4523
							],
							[
								4584,
								4592
							],
							[
								4646,
								4658
							],
							[
								4716,
								4726
							],
							[
								4782,
								4793
							],
							[
								4850,
								4858
							],
							[
								4912,
								4934
							],
							[
								5002,
								5017
							],
							[
								5078,
								5100
							],
							[
								5168,
								5184
							],
							[
								5246,
								5262
							],
							[
								5324,
								5336
							],
							[
								5394,
								5406
							],
							[
								5464,
								5477
							],
							[
								5536,
								5554
							],
							[
								5612,
								5630
							],
							[
								5694,
								5716
							],
							[
								5784,
								5811
							],
							[
								5884,
								5901
							],
							[
								5958,
								5975
							],
							[
								6032,
								6049
							],
							[
								6096,
								6112
							],
							[
								6195,
								6211
							],
							[
								6283,
								6299
							],
							[
								6371,
								6388
							],
							[
								6445,
								6465
							],
							[
								6524,
								6544
							],
							[
								6687,
								6706
							],
							[
								6782,
								6789
							],
							[
								6818,
								6838
							],
							[
								6917,
								6932
							],
							[
								6993,
								7019
							],
							[
								7090,
								7106
							],
							[
								7162,
								7175
							],
							[
								7243,
								7261
							],
							[
								7334,
								7347
							],
							[
								7403,
								7417
							],
							[
								7519,
								7545
							],
							[
								7591,
								7612
							],
							[
								7771,
								7796
							],
							[
								7881,
								7923
							],
							[
								8057,
								8097
							],
							[
								11017,
								11042
							],
							[
								11258,
								11306
							],
							[
								11623,
								11658
							],
							[
								11814,
								11832
							],
							[
								11862,
								11867
							],
							[
								11957,
								11984
							],
							[
								12103,
								12138
							],
							[
								12199,
								12203
							],
							[
								12219,
								12223
							],
							[
								12250,
								12259
							],
							[
								12422,
								12451
							],
							[
								12531,
								12561
							],
							[
								12568,
								12571
							],
							[
								12625,
								12657
							],
							[
								12899,
								12929
							],
							[
								12953,
								12969
							],
							[
								12970,
								12993
							],
							[
								13090,
								13125
							],
							[
								13149,
								13165
							],
							[
								13166,
								13189
							],
							[
								13286,
								13319
							],
							[
								13369,
								13392
							],
							[
								13486,
								13519
							],
							[
								13977,
								13983
							],
							[
								14000,
								14016
							],
							[
								14091,
								14103
							],
							[
								14138,
								14149
							],
							[
								14216,
								14237
							],
							[
								14273,
								14284
							],
							[
								14530,
								14536
							],
							[
								14549,
								14565
							],
							[
								14765,
								14770
							],
							[
								14784,
								14793
							],
							[
								14820,
								14843
							],
							[
								14877,
								14890
							],
							[
								14917,
								14922
							],
							[
								14963,
								14985
							],
							[
								15043,
								15049
							],
							[
								15065,
								15081
							],
							[
								15160,
								15187
							],
							[
								15232,
								15238
							],
							[
								15283,
								15295
							],
							[
								15325,
								15358
							],
							[
								15536,
								15554
							],
							[
								15637,
								15655
							],
							[
								15774,
								15792
							],
							[
								15967,
								16000
							],
							[
								16133,
								16146
							],
							[
								16266,
								16287
							],
							[
								16357,
								16375
							],
							[
								16818,
								16857
							],
							[
								16934,
								16951
							],
							[
								17074,
								17088
							],
							[
								17250,
								17267
							],
							[
								17408,
								17425
							],
							[
								17456,
								17473
							],
							[
								17573,
								17590
							],
							[
								17882,
								17896
							],
							[
								17942,
								17965
							],
							[
								18022,
								18029
							],
							[
								18047,
								18054
							],
							[
								18079,
								18104
							],
							[
								18164,
								18171
							],
							[
								18192,
								18199
							],
							[
								18229,
								18284
							],
							[
								18389,
								18396
							],
							[
								18534,
								18558
							],
							[
								18608,
								18612
							],
							[
								18643,
								18677
							],
							[
								18688,
								18701
							],
							[
								18760,
								18805
							],
							[
								18870,
								18881
							],
							[
								18901,
								18921
							],
							[
								18961,
								18990
							],
							[
								19014,
								19025
							],
							[
								19040,
								19052
							],
							[
								19099,
								19138
							],
							[
								19239,
								19243
							],
							[
								19276,
								19281
							],
							[
								19307,
								19313
							],
							[
								19342,
								19348
							],
							[
								19441,
								19454
							],
							[
								19482,
								19495
							],
							[
								19621,
								19632
							],
							[
								19712,
								19772
							],
							[
								19842,
								19859
							],
							[
								19920,
								19944
							],
							[
								20019,
								20046
							],
							[
								20267,
								20287
							],
							[
								20317,
								20328
							],
							[
								20427,
								20462
							],
							[
								20502,
								20520
							],
							[
								20698,
								20719
							],
							[
								20743,
								20753
							],
							[
								20789,
								20818
							],
							[
								20874,
								20884
							],
							[
								20935,
								20940
							],
							[
								20997,
								21010
							],
							[
								21083,
								21142
							],
							[
								21209,
								21234
							],
							[
								21614,
								21644
							],
							[
								22062,
								22102
							],
							[
								22196,
								22206
							],
							[
								22252,
								22308
							],
							[
								22469,
								22533
							],
							[
								22681,
								22732
							],
							[
								23399,
								23461
							],
							[
								23643,
								23668
							],
							[
								23765,
								23790
							],
							[
								23903,
								23972
							],
							[
								24061,
								24083
							],
							[
								24117,
								24128
							],
							[
								24151,
								24173
							],
							[
								24415,
								24487
							],
							[
								24590,
								24661
							],
							[
								24757,
								24808
							],
							[
								24980,
								25027
							],
							[
								25094,
								25137
							],
							[
								25267,
								25324
							],
							[
								25418,
								25424
							],
							[
								25438,
								25444
							],
							[
								25748,
								25782
							],
							[
								26083,
								26107
							],
							[
								26176,
								26181
							],
							[
								26210,
								26215
							],
							[
								26505,
								26518
							],
							[
								26574,
								26626
							],
							[
								26632,
								26649
							],
							[
								26677,
								26686
							],
							[
								26702,
								26712
							],
							[
								26724,
								26741
							],
							[
								26764,
								26773
							],
							[
								26774,
								26797
							],
							[
								26838,
								26862
							],
							[
								26987,
								27031
							],
							[
								27198,
								27232
							],
							[
								27298,
								27334
							],
							[
								27389,
								27406
							],
							[
								27728,
								27773
							],
							[
								27880,
								27893
							],
							[
								27984,
								27997
							],
							[
								28096,
								28109
							],
							[
								28183,
								28226
							],
							[
								28227,
								28246
							],
							[
								28261,
								28265
							],
							[
								28388,
								28408
							],
							[
								28461,
								28484
							],
							[
								28564,
								28584
							],
							[
								28666,
								28684
							],
							[
								28827,
								28845
							],
							[
								28918,
								28950
							],
							[
								28961,
								28987
							],
							[
								29096,
								29105
							],
							[
								29308,
								29340
							],
							[
								29369,
								29385
							],
							[
								29400,
								29407
							],
							[
								29426,
								29445
							],
							[
								29484,
								29505
							],
							[
								29545,
								29558
							],
							[
								29609,
								29630
							],
							[
								29799,
								29827
							],
							[
								30046,
								30063
							],
							[
								30064,
								30078
							],
							[
								30100,
								30107
							],
							[
								30158,
								30175
							],
							[
								30176,
								30185
							],
							[
								30245,
								30262
							],
							[
								30263,
								30286
							],
							[
								30342,
								30366
							],
							[
								33025,
								33053
							],
							[
								33484,
								33488
							],
							[
								33616,
								33629
							],
							[
								33945,
								33957
							],
							[
								34220,
								34233
							],
							[
								34338,
								34352
							],
							[
								35245,
								35273
							],
							[
								35389,
								35402
							],
							[
								35514,
								35538
							],
							[
								35631,
								35665
							],
							[
								35786,
								35825
							],
							[
								35872,
								35909
							],
							[
								35956,
								35983
							],
							[
								35994,
								36010
							],
							[
								36068,
								36090
							],
							[
								36123,
								36133
							],
							[
								36182,
								36194
							],
							[
								36476,
								36486
							],
							[
								36561,
								36573
							],
							[
								36851,
								36877
							],
							[
								37127,
								37175
							],
							[
								37223,
								37335
							],
							[
								37440,
								37463
							],
							[
								37602,
								37634
							],
							[
								37947,
								38001
							],
							[
								38359,
								38411
							],
							[
								38550,
								38576
							],
							[
								38860,
								38876
							],
							[
								39043,
								39054
							],
							[
								39255,
								39307
							],
							[
								39481,
								39563
							],
							[
								39723,
								39733
							],
							[
								39751,
								39764
							],
							[
								39941,
								39985
							],
							[
								40146,
								40205
							],
							[
								40481,
								40517
							],
							[
								40676,
								40692
							],
							[
								40706,
								40728
							],
							[
								40842,
								40848
							],
							[
								40954,
								40967
							],
							[
								42574,
								42612
							],
							[
								42712,
								42728
							],
							[
								42801,
								42845
							],
							[
								43160,
								43180
							],
							[
								43380,
								43422
							],
							[
								43617,
								43648
							],
							[
								43698,
								43740
							],
							[
								43860,
								43884
							],
							[
								44142,
								44152
							],
							[
								44205,
								44209
							],
							[
								44248,
								44279
							],
							[
								44290,
								44307
							],
							[
								44448,
								44482
							],
							[
								44720,
								44739
							],
							[
								44777,
								44799
							],
							[
								44911,
								44933
							],
							[
								45045,
								45080
							],
							[
								45128,
								45155
							],
							[
								45246,
								45284
							],
							[
								45493,
								45541
							],
							[
								46121,
								46150
							],
							[
								46597,
								46637
							],
							[
								46732,
								46759
							],
							[
								46816,
								46843
							],
							[
								47046,
								47060
							],
							[
								47109,
								47115
							],
							[
								47156,
								47222
							],
							[
								47224,
								47228
							],
							[
								47386,
								47393
							],
							[
								47485,
								47495
							],
							[
								47606,
								47615
							],
							[
								47721,
								47747
							],
							[
								47880,
								47911
							],
							[
								48086,
								48105
							],
							[
								48147,
								48155
							],
							[
								48203,
								48212
							],
							[
								48246,
								48255
							],
							[
								48289,
								48298
							],
							[
								48332,
								48341
							],
							[
								48375,
								48384
							],
							[
								48417,
								48426
							],
							[
								48460,
								48469
							],
							[
								48503,
								48512
							],
							[
								48537,
								48571
							],
							[
								48715,
								48760
							],
							[
								48826,
								48836
							],
							[
								48875,
								48885
							],
							[
								48905,
								48915
							],
							[
								48943,
								48968
							],
							[
								49099,
								49124
							],
							[
								49222,
								49257
							],
							[
								49310,
								49344
							],
							[
								49426,
								49462
							],
							[
								49591,
								49595
							],
							[
								49626,
								49630
							],
							[
								49673,
								49677
							],
							[
								49705,
								49709
							],
							[
								49738,
								49766
							],
							[
								49896,
								49900
							],
							[
								49957,
								49988
							],
							[
								50327,
								50363
							],
							[
								50612,
								50642
							],
							[
								50810,
								50814
							],
							[
								51098,
								51125
							],
							[
								51169,
								51178
							],
							[
								51230,
								51242
							],
							[
								51384,
								51396
							],
							[
								51523,
								51548
							],
							[
								51588,
								51614
							],
							[
								51866,
								51890
							],
							[
								52083,
								52106
							],
							[
								52230,
								52377
							],
							[
								52386,
								52467
							],
							[
								52508,
								52519
							],
							[
								52521,
								52533
							],
							[
								52758,
								52778
							],
							[
								52995,
								53010
							],
							[
								53291,
								53314
							],
							[
								53519,
								53537
							],
							[
								53750,
								53764
							],
							[
								53825,
								53837
							],
							[
								53935,
								53944
							],
							[
								54220,
								54236
							],
							[
								54671,
								54707
							],
							[
								54835,
								54844
							],
							[
								55020,
								55031
							],
							[
								55042,
								55050
							],
							[
								55099,
								55111
							],
							[
								55356,
								55368
							],
							[
								55549,
								55575
							],
							[
								55594,
								55598
							],
							[
								55685,
								55709
							],
							[
								55787,
								55816
							],
							[
								55870,
								55901
							],
							[
								55908,
								55911
							],
							[
								55955,
								55968
							],
							[
								56068,
								56139
							],
							[
								56165,
								56191
							],
							[
								56337,
								56372
							],
							[
								56562,
								56589
							],
							[
								56699,
								56732
							],
							[
								56889,
								56945
							],
							[
								56956,
								56972
							],
							[
								57113,
								57144
							],
							[
								57184,
								57235
							],
							[
								57605,
								57633
							],
							[
								57787,
								57851
							],
							[
								57911,
								57926
							],
							[
								57992,
								58006
							],
							[
								58044,
								58067
							],
							[
								58259,
								58277
							],
							[
								58468,
								58538
							],
							[
								58687,
								58711
							],
							[
								58730,
								58738
							],
							[
								58774,
								58789
							],
							[
								58915,
								58928
							],
							[
								59083,
								59099
							],
							[
								59294,
								59320
							],
							[
								59335,
								59357
							],
							[
								59619,
								59623
							],
							[
								59809,
								59831
							],
							[
								59853,
								59863
							],
							[
								59881,
								59894
							],
							[
								60018,
								60040
							],
							[
								60062,
								60072
							],
							[
								60090,
								60103
							],
							[
								60209,
								60231
							],
							[
								60257,
								60267
							],
							[
								60285,
								60298
							],
							[
								60334,
								60356
							],
							[
								60377,
								60387
							],
							[
								60405,
								60418
							],
							[
								60438,
								60479
							],
							[
								60768,
								60791
							],
							[
								60872,
								60894
							],
							[
								60968,
								60988
							],
							[
								61115,
								61126
							],
							[
								61159,
								61176
							],
							[
								61340,
								61359
							],
							[
								61394,
								61416
							],
							[
								61548,
								61569
							],
							[
								61707,
								61727
							],
							[
								61794,
								61817
							],
							[
								61893,
								61915
							],
							[
								62024,
								62048
							],
							[
								62105,
								62117
							],
							[
								62288,
								62306
							],
							[
								62363,
								62375
							],
							[
								62527,
								62550
							],
							[
								62682,
								62698
							],
							[
								62745,
								62758
							],
							[
								62795,
								62862
							],
							[
								62898,
								62920
							],
							[
								62949,
								62959
							],
							[
								62975,
								62988
							],
							[
								63039,
								63052
							],
							[
								63119,
								63142
							],
							[
								63261,
								63283
							],
							[
								63371,
								63384
							],
							[
								63437,
								63453
							],
							[
								63491,
								63495
							],
							[
								63605,
								63642
							],
							[
								63653,
								63663
							],
							[
								63672,
								63701
							],
							[
								63918,
								63934
							],
							[
								63956,
								63967
							],
							[
								64022,
								64049
							],
							[
								64096,
								64114
							],
							[
								64188,
								64223
							],
							[
								64349,
								64370
							],
							[
								64404,
								64413
							],
							[
								64422,
								64430
							],
							[
								64473,
								64482
							],
							[
								64503,
								64512
							],
							[
								64523,
								64531
							],
							[
								64598,
								64607
							],
							[
								64639,
								64667
							],
							[
								64736,
								64755
							],
							[
								64962,
								64988
							],
							[
								65276,
								65298
							],
							[
								65443,
								65465
							],
							[
								65977,
								66027
							],
							[
								66191,
								66240
							],
							[
								66309,
								66316
							],
							[
								66401,
								66415
							],
							[
								66496,
								66506
							],
							[
								66612,
								66616
							],
							[
								66647,
								66667
							],
							[
								66713,
								66726
							],
							[
								66776,
								66788
							],
							[
								66928,
								66943
							],
							[
								67354,
								67392
							],
							[
								67574,
								67585
							],
							[
								67620,
								67641
							],
							[
								67710,
								67717
							],
							[
								67755,
								67785
							],
							[
								67807,
								67823
							],
							[
								67824,
								67844
							],
							[
								67934,
								67969
							],
							[
								68058,
								68063
							],
							[
								68086,
								68103
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"length = x =>",
							"objectToString = o =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function isAsync(fn)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(...args)",
							" function assertEqual(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function getConstructor(obj)",
							" function memoize(fn, cache = ",
							"())",
							" function Memoize(n, ...rest)",
							" function chain(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainRight(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainArray(tmp, ...fns)",
							"tmp = function(...args)",
							" function getset(target, ...args)",
							"key =>",
							" (key, value) =>",
							" key =>",
							"([k, v]) =>",
							" (key, value) =>",
							"([k, v]) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function methods(obj)",
							"bind(...args)",
							"fn =>",
							"transform(read, write)",
							"key =>",
							" (key, value) =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							" function setter(target, ...args)",
							" (...argv) =>",
							"ret = (key, value) =>",
							"ret = (...argv) =>",
							" function gettersetter(target, ...args)",
							"fn = (...args) =>",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasFn(target)",
							" key =>",
							" key =>",
							" function remover(target)",
							" key =>",
							" key =>",
							" function getOrCreate(target, create = () => ({}), set)",
							" key =>",
							" function hasGetSet(obj)",
							"m =>",
							" function getSetArgument(get, set)",
							" (...args) =>",
							" function wrapGetSet(getter, setter, ...args)",
							" prop =>",
							" (prop, value) =>",
							" function weakGetSet(...args)",
							" wref =>",
							" value =>",
							" function addremovehas(target, ...args)",
							"n =>",
							"el =>",
							" el =>",
							" el =>",
							" el =>",
							" el =>",
							"has = el =>",
							" function lookupObject(getset, instance = {}, handlers = {})",
							"get(target, prop)",
							"set(target, prop, value)",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function waitCancellable(ms)",
							"resolve =>",
							"() =>",
							"cancel: () =>",
							" function extend(dst, src, options = { enumerable: false })",
							"options = (desc, prop) =>",
							" function define(obj, ...args)",
							" function nonenumerable(props, obj = {})",
							" (k, v) =>",
							" function defineGetter(obj, key, fn, enumerable = false)",
							" function defineGetterSetter(obj, key, g, s, enumerable = false)",
							" function defineGettersSetters(obj, gettersSetters)",
							" function* prototypeIterator(obj, pred = (obj, depth) => true)",
							" function pick(obj, keys)",
							" function omit(obj, keys)",
							" function keys(obj, start = 0, end = obj => obj === Object.prototype)",
							"pred = (obj, depth) =>",
							"end = () =>",
							"pred = (obj, depth) =>",
							" function entries(obj, start = 0, end = obj => obj === Object.prototype)",
							" function values(obj, start = 0, end = obj => obj === Object.prototype)",
							" function getMethodNames(obj, depth = 1, start = 0)",
							" function getMethods(obj, depth = 1, start = 0)",
							" function bindMethods(obj, methods, target)",
							" function properties(obj, options = { enumerable: true })",
							" fn =>",
							" fn =>",
							" function weakDefine(obj, ...args)",
							" function merge(...args)",
							" a =>",
							" a =>",
							"(acc, arg) =>",
							" function weakAssoc(fn = (value, ...args) => Object.",
							"(value, ...args))",
							" () =>",
							" map =>",
							"(obj, ...args) =>",
							" () =>",
							" (obj, ...args) =>",
							"self = (obj, ...args) =>",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" function filterKeys(r, needles, keep = true)",
							"pred = key =>",
							"pred = key =>",
							"(obj, key) =>",
							"curry = (f, arr = [], length = f.length) =>",
							" function(...args)",
							"a =>",
							"(min, max, value) =>",
							"generate = (fn, add) =>",
							"add = (item, gen) =>",
							" function(...args)",
							" function(...args)",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"(a, b) =>",
							" function uniquePred(cmp = null)",
							" (el, i, arr) =>",
							"item =>",
							"i : (el, i, arr) =>",
							"unique = (...args) =>",
							"(arr, cmp) =>",
							"function* unique(seq)",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" (...args) =>",
							"code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function stripAnsi(str)",
							" function padAnsi(str, n, s = ' ')",
							" function padStartAnsi(str, n, s = ' ')",
							" function padEndAnsi(str, n, s = ' ')",
							" function mapFunctional(fn)",
							" function* (arg)",
							" function map(...args)",
							"ret = a =>",
							"function* ()",
							"ret = a =>",
							"function* ()",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function roundDigits(precision)",
							" function roundTo(value, prec, digits, type = 'round')",
							" function lazyProperty(obj, name, getter, opts = {})",
							"replaceProperty = value =>",
							"async function()",
							" function()",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function observeProperties(target = {}, obj, fn = (prop, value) => {}, opts = {})",
							"get: () =>",
							"set: value =>",
							" function decorate(decorators, obj, ...args)",
							" function decorateProperty(target, property, ...decorators)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function showHelp(opts, exitCode = 0)",
							"(acc, [name]) =>",
							" (acc, [name, [hasArg, fn, shortOpt]]) =>",
							" function isoDate(d)",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>",
							" function ucfirst(str)",
							" function lcfirst(str)",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function* bytesToUTF8(bytes)",
							" function codePointsToString(codePoints)",
							" function bufferToString(b)",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							" function pushUnique(arr, ...args)",
							" function inserter(dest, next = (k, v) => {})",
							" (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							"fn = function(key, value)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partitionArray(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)",
							" function partition(array, callback)",
							" function push(obj, ...values)",
							"v =>",
							" function repeater(n, what)",
							"n = () =>",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function functionName(fn)",
							" function className(obj)",
							"isArrowFunction = fn =>",
							" function instrument( fn, log = (duration, name, args, ret) => console.log(`function '${name}'` + (ret !== undefined ? ` {= ${escape(ret + '').",
							"(0, 100) + '...'}}` : '') + ` timing: ${duration}ms`), logInterval = 0 //1000 )",
							"now = () =>",
							"([s, ns]) =>",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"newMap = () =>",
							"(...args) =>",
							"get(path)",
							"set(path, value)",
							"catchable = function Catchable(self)",
							"catchable",
							"function ()",
							"then(fn)",
							"(...args) =>",
							"(...args) =>",
							" function isNumeric(value)",
							"v =>",
							" function isIndex(value)",
							" function numericIndex(value)",
							" function histogram(arr, out = ",
							"())",
							"incr = key =>",
							" function propertyLookupHandlers(getter = key => null, setter, thisObj)",
							"get(target, key, receiver)",
							".set = function(target, key, value)",
							".ownKeys = function(target)",
							" function propertyLookup(...args)",
							" function padFn(len, char = ' ', fn = (str, pad) => pad)",
							" (s, n = len) =>",
							" function pad(s, n, char = ' ')",
							" function abbreviate(str, max = 40, suffix = '...')",
							" function trim(str, charset)",
							" function tryFunction(fn, resolve = a => a, reject = () => null)",
							"resolve = () =>",
							"reject = () =>",
							"async function(...args)",
							" function(...args)",
							" function tryCatch(fn, resolve = a => a, reject = () => null, ...args)",
							" function mapAdapter(fn)",
							"get(key)",
							"set(key, value)",
							".keys = () =>",
							".entries = () =>",
							" function mapFunction(map)",
							"fn = function(...args)",
							"m =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".update = function(key, fn = (k, v) => v)",
							".entries = function* ()",
							".values = function* ()",
							".keys = function* ()",
							" function()",
							"([key, value]) =>",
							".keys = async () =>",
							".entries = async () =>",
							".values = async () =>",
							".keys = function* ()",
							".entries = function* ()",
							".values = function* ()",
							".filter = function(pred)",
							"function* ()",
							".map = function(t)",
							"function* ()",
							".forEach = function(fn)",
							".delete = key =>",
							".has = key =>",
							" function mapWrapper(map, toKey = key => key, fromKey = key => key)",
							".set = (key, value) =>",
							" (k, v) =>",
							".get = key =>",
							".keys = () =>",
							".entries = function* ()",
							".values = function* ()",
							".has = key =>",
							".delete = key =>",
							"m =>",
							" function weakMapper(createFn, map = ",
							"(), hitFn)",
							"self = function(obj, ...args)",
							".set = (k, v) =>",
							".get = k =>",
							" function wrapGenerator(fn)",
							" function(...args)",
							" function wrapGeneratorMethods(obj)",
							" function isBrowser()",
							" () =>",
							" w =>",
							" () =>",
							" () =>",
							" d =>",
							" () =>",
							" function startInteractive()",
							"function* (re, str)",
							" function indexOf(...args)",
							" (what, offset = 0) =>",
							" (what, offset = 0) =>",
							" function* searchAll(haystack, needle, offset = 0)",
							" function bindProperties(obj, target, props, gen)",
							"name =>",
							"(acc, name) =>",
							" p => v =>",
							"k =>",
							" (a, [k, v]) =>",
							" (...args) =>",
							"(...args) =>",
							" (a, k) =>",
							" function predicate(fn_or_regex, pred)",
							"fn = arg =>",
							".valueOf = function()",
							" arg =>",
							" function transformer(a, ...l)",
							" (acc, fn) =>",
							" function(...v)",
							" function getSystemErrorName(errno)",
							"() =>",
							"(acc, name, i) =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					90,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/upload-server.js",
						"symkeys":
						[
							[
								1622,
								1630
							],
							[
								1646,
								1666
							],
							[
								2195,
								2228
							],
							[
								2318,
								2340
							],
							[
								2554,
								2595
							],
							[
								2606,
								2619
							],
							[
								2686,
								2721
							],
							[
								2766,
								2784
							],
							[
								2820,
								2862
							],
							[
								2928,
								2961
							],
							[
								2983,
								2987
							],
							[
								3376,
								3381
							],
							[
								3431,
								3435
							],
							[
								3462,
								3466
							],
							[
								3494,
								3498
							],
							[
								3521,
								3541
							],
							[
								3620,
								3624
							],
							[
								3694,
								3716
							],
							[
								3831,
								3836
							],
							[
								3869,
								3891
							],
							[
								4085,
								4107
							],
							[
								4530,
								4596
							],
							[
								4942,
								4951
							],
							[
								5056,
								5086
							],
							[
								5447,
								5482
							],
							[
								5514,
								5555
							],
							[
								5587,
								5653
							],
							[
								5686,
								5720
							],
							[
								5791,
								5838
							],
							[
								6374,
								6410
							],
							[
								6523,
								6532
							],
							[
								6768,
								6776
							],
							[
								6882,
								6889
							],
							[
								6939,
								6963
							],
							[
								7235,
								7246
							],
							[
								7336,
								7347
							],
							[
								7411,
								7422
							],
							[
								7476,
								7485
							],
							[
								7523,
								7534
							],
							[
								7622,
								7649
							],
							[
								7781,
								7785
							],
							[
								7809,
								7816
							],
							[
								7849,
								7865
							],
							[
								7994,
								8039
							],
							[
								8278,
								8336
							],
							[
								8623,
								8645
							],
							[
								9018,
								9028
							],
							[
								9272,
								9286
							],
							[
								10221,
								10245
							],
							[
								10371,
								10375
							],
							[
								10467,
								10481
							],
							[
								10571,
								10587
							],
							[
								11019,
								11032
							],
							[
								11050,
								11055
							],
							[
								11137,
								11144
							],
							[
								11172,
								11177
							],
							[
								11299,
								11324
							],
							[
								11499,
								11530
							],
							[
								11607,
								11618
							],
							[
								13198,
								13229
							],
							[
								13759,
								13792
							],
							[
								14064,
								14099
							],
							[
								14184,
								14217
							],
							[
								15162,
								15172
							],
							[
								15966,
								15970
							],
							[
								16386,
								16393
							],
							[
								16786,
								16822
							],
							[
								17058,
								17062
							],
							[
								17687,
								17719
							],
							[
								18100,
								18104
							],
							[
								18783,
								18818
							],
							[
								19580,
								19585
							],
							[
								20312,
								20316
							],
							[
								20410,
								20414
							],
							[
								20534,
								20543
							],
							[
								20673,
								20680
							],
							[
								20961,
								20968
							],
							[
								21049,
								21056
							],
							[
								21120,
								21136
							],
							[
								21201,
								21221
							],
							[
								21920,
								21932
							],
							[
								22031,
								22043
							],
							[
								22245,
								22261
							],
							[
								22355,
								22368
							],
							[
								22779,
								22797
							],
							[
								22979,
								22996
							],
							[
								23422,
								23441
							],
							[
								23874,
								23894
							],
							[
								25455,
								25477
							],
							[
								25950,
								25971
							],
							[
								26522,
								26541
							],
							[
								26975,
								26983
							],
							[
								29705,
								29717
							],
							[
								31626,
								31661
							],
							[
								32159,
								32178
							],
							[
								32364,
								32381
							],
							[
								32426,
								32439
							],
							[
								32475,
								32485
							],
							[
								33388,
								33404
							],
							[
								33536,
								33555
							],
							[
								33566,
								33585
							],
							[
								33611,
								33631
=======
					280,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11844,
								11888
							],
							[
								12007,
								12027
							],
							[
								12342,
								12352
							],
							[
								12380,
								12390
							],
							[
								12426,
								12439
							],
							[
								12689,
								12703
							],
							[
								13595,
								13604
							],
							[
								13845,
								13864
							],
							[
								14406,
								14419
							],
							[
								14437,
								14442
							],
							[
								14493,
								14506
							],
							[
								14557,
								14578
							],
							[
								14975,
								14991
							],
							[
								15379,
								15384
							],
							[
								15422,
								15437
							],
							[
								15584,
								15592
							],
							[
								15633,
								15641
							],
							[
								15918,
								15946
							],
							[
								16013,
								16047
							],
							[
								16081,
								16086
							],
							[
								16108,
								16138
							],
							[
								16380,
								16388
							],
							[
								16455,
								16459
							],
							[
								16549,
								16556
							],
							[
								16896,
								16920
							],
							[
								17165,
								17170
							],
							[
								18900,
								18944
							],
							[
								19391,
								19417
							],
							[
								20119,
								20142
							],
							[
								20262,
								20284
							],
							[
								20535,
								20539
							],
							[
								21027,
								21031
							],
							[
								21648,
								21677
							],
							[
								21702,
								21706
							],
							[
								21782,
								21805
							],
							[
								21849,
								21855
							],
							[
								21883,
								21887
							],
							[
								21903,
								21940
							],
							[
								21962,
								21978
							],
							[
								21998,
								22005
							],
							[
								22062,
								22090
							],
							[
								22144,
								22155
							],
							[
								22238,
								22246
							],
							[
								22342,
								22346
							],
							[
								22496,
								22500
							],
							[
								22598,
								22603
							],
							[
								22663,
								22674
							],
							[
								22746,
								22757
							],
							[
								22844,
								22849
							],
							[
								22899,
								22905
							],
							[
								23002,
								23010
							],
							[
								23185,
								23214
							],
							[
								23307,
								23360
							],
							[
								23513,
								23517
							],
							[
								23571,
								23575
							],
							[
								23851,
								23858
							],
							[
								23880,
								23886
							],
							[
								23915,
								23946
							],
							[
								24080,
								24104
							],
							[
								24230,
								24241
							],
							[
								24259,
								24275
							],
							[
								24434,
								24439
							],
							[
								24463,
								24467
							],
							[
								24515,
								24524
							],
							[
								24592,
								24597
							],
							[
								24735,
								24740
							],
							[
								24862,
								24873
							],
							[
								24962,
								24969
							],
							[
								25615,
								25631
							],
							[
								27685,
								27719
							],
							[
								28058,
								28072
							],
							[
								28167,
								28171
							],
							[
								28193,
								28207
							],
							[
								28238,
								28242
							],
							[
								29542,
								29558
							],
							[
								29608,
								29623
							],
							[
								29682,
								29701
							],
							[
								29724,
								29736
							],
							[
								29825,
								29829
							],
							[
								29928,
								29932
							],
							[
								30151,
								30157
							],
							[
								30247,
								30261
							],
							[
								30290,
								30308
							],
							[
								30445,
								30457
							],
							[
								30487,
								30552
							],
							[
								30581,
								30586
							],
							[
								30725,
								30763
							],
							[
								30788,
								30808
							],
							[
								30837,
								30886
							],
							[
								30933,
								30943
							],
							[
								31116,
								31126
							],
							[
								31199,
								31209
							],
							[
								31280,
								31290
							],
							[
								31817,
								31898
							],
							[
								31909,
								31932
							],
							[
								32150,
								32155
							],
							[
								32238,
								32247
							],
							[
								32277,
								32283
							],
							[
								32299,
								32328
							],
							[
								32364,
								32377
							],
							[
								32608,
								32614
							],
							[
								32623,
								32634
							],
							[
								32702,
								32724
							],
							[
								32941,
								32964
							],
							[
								33376,
								33405
							],
							[
								33727,
								33754
							],
							[
								33788,
								33801
							],
							[
								33828,
								33833
							],
							[
								33857,
								33862
							],
							[
								33907,
								33917
							],
							[
								33947,
								33957
							],
							[
								34043,
								34048
							],
							[
								34168,
								34173
							],
							[
								34187,
								34195
							],
							[
								34417,
								34421
							],
							[
								34474,
								34478
							],
							[
								34566,
								34579
							],
							[
								34680,
								34693
							],
							[
								34954,
								34987
							],
							[
								35041,
								35045
							],
							[
								35159,
								35185
							],
							[
								35528,
								35561
							],
							[
								35908,
								35953
							],
							[
								35994,
								35998
							],
							[
								36015,
								36044
							],
							[
								36080,
								36086
							],
							[
								36470,
								36540
							],
							[
								37140,
								37212
							],
							[
								37445,
								37450
							],
							[
								38172,
								38176
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAGDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					281,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11842,
								11886
							],
							[
								12005,
								12025
							],
							[
								12340,
								12350
							],
							[
								12378,
								12388
							],
							[
								12424,
								12437
							],
							[
								12687,
								12701
							],
							[
								13593,
								13602
							],
							[
								13843,
								13862
							],
							[
								14404,
								14417
							],
							[
								14435,
								14440
							],
							[
								14491,
								14504
							],
							[
								14555,
								14576
							],
							[
								14973,
								14989
							],
							[
								15377,
								15382
							],
							[
								15420,
								15435
							],
							[
								15582,
								15590
							],
							[
								15631,
								15639
							],
							[
								15916,
								15944
							],
							[
								16011,
								16045
							],
							[
								16079,
								16084
							],
							[
								16106,
								16136
							],
							[
								16378,
								16386
							],
							[
								16453,
								16457
							],
							[
								16547,
								16554
							],
							[
								16894,
								16918
							],
							[
								17163,
								17168
							],
							[
								18898,
								18942
							],
							[
								19389,
								19415
							],
							[
								20117,
								20140
							],
							[
								20260,
								20282
							],
							[
								20533,
								20537
							],
							[
								21025,
								21029
							],
							[
								21646,
								21675
							],
							[
								21700,
								21704
							],
							[
								21780,
								21803
							],
							[
								21847,
								21853
							],
							[
								21881,
								21885
							],
							[
								21901,
								21938
							],
							[
								21960,
								21976
							],
							[
								21996,
								22003
							],
							[
								22060,
								22088
							],
							[
								22142,
								22153
							],
							[
								22236,
								22244
							],
							[
								22340,
								22344
							],
							[
								22494,
								22498
							],
							[
								22596,
								22601
							],
							[
								22661,
								22672
							],
							[
								22744,
								22755
							],
							[
								22842,
								22847
							],
							[
								22897,
								22903
							],
							[
								23000,
								23008
							],
							[
								23183,
								23212
							],
							[
								23305,
								23358
							],
							[
								23511,
								23515
							],
							[
								23569,
								23573
							],
							[
								23849,
								23856
							],
							[
								23878,
								23884
							],
							[
								23913,
								23944
							],
							[
								24078,
								24102
							],
							[
								24228,
								24239
							],
							[
								24257,
								24273
							],
							[
								24432,
								24437
							],
							[
								24461,
								24465
							],
							[
								24513,
								24522
							],
							[
								24590,
								24595
							],
							[
								24733,
								24738
							],
							[
								24860,
								24871
							],
							[
								24960,
								24967
							],
							[
								25613,
								25629
							],
							[
								27683,
								27717
							],
							[
								28056,
								28070
							],
							[
								28165,
								28169
							],
							[
								28191,
								28205
							],
							[
								28236,
								28240
							],
							[
								29540,
								29556
							],
							[
								29606,
								29621
							],
							[
								29680,
								29699
							],
							[
								29722,
								29734
							],
							[
								29823,
								29827
							],
							[
								29926,
								29930
							],
							[
								30149,
								30155
							],
							[
								30245,
								30259
							],
							[
								30288,
								30306
							],
							[
								30443,
								30455
							],
							[
								30485,
								30550
							],
							[
								30579,
								30584
							],
							[
								30723,
								30761
							],
							[
								30786,
								30806
							],
							[
								30835,
								30884
							],
							[
								30931,
								30941
							],
							[
								31114,
								31124
							],
							[
								31197,
								31207
							],
							[
								31278,
								31288
							],
							[
								31815,
								31896
							],
							[
								31907,
								31930
							],
							[
								32148,
								32153
							],
							[
								32236,
								32245
							],
							[
								32275,
								32281
							],
							[
								32297,
								32326
							],
							[
								32362,
								32375
							],
							[
								32606,
								32612
							],
							[
								32621,
								32632
							],
							[
								32700,
								32722
							],
							[
								32939,
								32962
							],
							[
								33374,
								33403
							],
							[
								33725,
								33752
							],
							[
								33786,
								33799
							],
							[
								33826,
								33831
							],
							[
								33855,
								33860
							],
							[
								33905,
								33915
							],
							[
								33945,
								33955
							],
							[
								34041,
								34046
							],
							[
								34166,
								34171
							],
							[
								34185,
								34193
							],
							[
								34415,
								34419
							],
							[
								34472,
								34476
							],
							[
								34564,
								34577
							],
							[
								34678,
								34691
							],
							[
								34952,
								34985
							],
							[
								35039,
								35043
							],
							[
								35157,
								35183
							],
							[
								35526,
								35559
							],
							[
								35906,
								35951
							],
							[
								35992,
								35996
							],
							[
								36013,
								36042
							],
							[
								36078,
								36084
							],
							[
								36468,
								36538
							],
							[
								37138,
								37210
							],
							[
								37443,
								37448
							],
							[
								38170,
								38174
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					282,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					283,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					284,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11842,
								11886
							],
							[
								12005,
								12025
							],
							[
								12340,
								12350
							],
							[
								12378,
								12388
							],
							[
								12424,
								12437
							],
							[
								12687,
								12701
							],
							[
								13593,
								13602
							],
							[
								13843,
								13862
							],
							[
								14404,
								14417
							],
							[
								14435,
								14440
							],
							[
								14491,
								14504
							],
							[
								14555,
								14576
							],
							[
								14973,
								14989
							],
							[
								15377,
								15382
							],
							[
								15420,
								15435
							],
							[
								15582,
								15590
							],
							[
								15631,
								15639
							],
							[
								15916,
								15944
							],
							[
								16011,
								16045
							],
							[
								16079,
								16084
							],
							[
								16106,
								16136
							],
							[
								16378,
								16386
							],
							[
								16453,
								16457
							],
							[
								16547,
								16554
							],
							[
								16894,
								16918
							],
							[
								17163,
								17168
							],
							[
								18898,
								18942
							],
							[
								19389,
								19415
							],
							[
								20117,
								20140
							],
							[
								20260,
								20282
							],
							[
								20533,
								20537
							],
							[
								21025,
								21029
							],
							[
								21646,
								21675
							],
							[
								21700,
								21704
							],
							[
								21780,
								21803
							],
							[
								21847,
								21853
							],
							[
								21881,
								21885
							],
							[
								21901,
								21938
							],
							[
								21960,
								21976
							],
							[
								21996,
								22003
							],
							[
								22060,
								22088
							],
							[
								22142,
								22153
							],
							[
								22236,
								22244
							],
							[
								22340,
								22344
							],
							[
								22494,
								22498
							],
							[
								22596,
								22601
							],
							[
								22661,
								22672
							],
							[
								22744,
								22755
							],
							[
								22842,
								22847
							],
							[
								22897,
								22903
							],
							[
								23000,
								23008
							],
							[
								23183,
								23212
							],
							[
								23305,
								23358
							],
							[
								23511,
								23515
							],
							[
								23569,
								23573
							],
							[
								23849,
								23856
							],
							[
								23878,
								23884
							],
							[
								23913,
								23944
							],
							[
								24078,
								24102
							],
							[
								24228,
								24239
							],
							[
								24257,
								24273
							],
							[
								24432,
								24437
							],
							[
								24461,
								24465
							],
							[
								24513,
								24522
							],
							[
								24590,
								24595
							],
							[
								24733,
								24738
							],
							[
								24860,
								24871
							],
							[
								24960,
								24967
							],
							[
								25613,
								25629
							],
							[
								27683,
								27717
							],
							[
								28056,
								28070
							],
							[
								28165,
								28169
							],
							[
								28191,
								28205
							],
							[
								28236,
								28240
							],
							[
								29540,
								29556
							],
							[
								29606,
								29621
							],
							[
								29680,
								29699
							],
							[
								29722,
								29734
							],
							[
								29823,
								29827
							],
							[
								29926,
								29930
							],
							[
								30149,
								30155
							],
							[
								30245,
								30259
							],
							[
								30288,
								30306
							],
							[
								30443,
								30455
							],
							[
								30485,
								30550
							],
							[
								30579,
								30584
							],
							[
								30723,
								30761
							],
							[
								30786,
								30806
							],
							[
								30835,
								30884
							],
							[
								30931,
								30941
							],
							[
								31114,
								31124
							],
							[
								31197,
								31207
							],
							[
								31278,
								31288
							],
							[
								31815,
								31896
							],
							[
								31907,
								31930
							],
							[
								32148,
								32153
							],
							[
								32236,
								32245
							],
							[
								32275,
								32281
							],
							[
								32297,
								32326
							],
							[
								32362,
								32375
							],
							[
								32606,
								32612
							],
							[
								32621,
								32632
							],
							[
								32700,
								32722
							],
							[
								32939,
								32962
							],
							[
								33374,
								33403
							],
							[
								33725,
								33752
							],
							[
								33786,
								33799
							],
							[
								33826,
								33831
							],
							[
								33855,
								33860
							],
							[
								33905,
								33915
							],
							[
								33945,
								33955
							],
							[
								34041,
								34046
							],
							[
								34166,
								34171
							],
							[
								34185,
								34193
							],
							[
								34415,
								34419
							],
							[
								34472,
								34476
							],
							[
								34564,
								34577
							],
							[
								34678,
								34691
							],
							[
								34952,
								34985
							],
							[
								35039,
								35043
							],
							[
								35157,
								35183
							],
							[
								35526,
								35559
							],
							[
								35906,
								35951
							],
							[
								35992,
								35996
							],
							[
								36013,
								36042
							],
							[
								36078,
								36084
							],
							[
								36468,
								36538
							],
							[
								37138,
								37210
							],
							[
								37443,
								37448
							],
							[
								38170,
								38174
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AQAAAAAAAAAAAAAABgwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					285,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11842,
								11886
							],
							[
								12005,
								12025
							],
							[
								12340,
								12350
							],
							[
								12378,
								12388
							],
							[
								12424,
								12437
							],
							[
								12687,
								12701
							],
							[
								13593,
								13602
							],
							[
								13843,
								13862
							],
							[
								14404,
								14417
							],
							[
								14435,
								14440
							],
							[
								14491,
								14504
							],
							[
								14555,
								14576
							],
							[
								14973,
								14989
							],
							[
								15377,
								15382
							],
							[
								15420,
								15435
							],
							[
								15582,
								15590
							],
							[
								15631,
								15639
							],
							[
								15916,
								15944
							],
							[
								16011,
								16045
							],
							[
								16079,
								16084
							],
							[
								16106,
								16136
							],
							[
								16378,
								16386
							],
							[
								16453,
								16457
							],
							[
								16547,
								16554
							],
							[
								16894,
								16918
							],
							[
								17163,
								17168
							],
							[
								18898,
								18942
							],
							[
								19389,
								19415
							],
							[
								20117,
								20140
							],
							[
								20260,
								20282
							],
							[
								20533,
								20537
							],
							[
								21025,
								21029
							],
							[
								21646,
								21675
							],
							[
								21700,
								21704
							],
							[
								21780,
								21803
							],
							[
								21847,
								21853
							],
							[
								21881,
								21885
							],
							[
								21901,
								21938
							],
							[
								21960,
								21976
							],
							[
								21996,
								22003
							],
							[
								22060,
								22088
							],
							[
								22142,
								22153
							],
							[
								22236,
								22244
							],
							[
								22340,
								22344
							],
							[
								22494,
								22498
							],
							[
								22596,
								22601
							],
							[
								22661,
								22672
							],
							[
								22744,
								22755
							],
							[
								22842,
								22847
							],
							[
								22897,
								22903
							],
							[
								23000,
								23008
							],
							[
								23183,
								23212
							],
							[
								23305,
								23358
							],
							[
								23511,
								23515
							],
							[
								23569,
								23573
							],
							[
								23849,
								23856
							],
							[
								23878,
								23884
							],
							[
								23913,
								23944
							],
							[
								24078,
								24102
							],
							[
								24228,
								24239
							],
							[
								24257,
								24273
							],
							[
								24432,
								24437
							],
							[
								24461,
								24465
							],
							[
								24513,
								24522
							],
							[
								24590,
								24595
							],
							[
								24733,
								24738
							],
							[
								24860,
								24871
							],
							[
								24960,
								24967
							],
							[
								25613,
								25629
							],
							[
								27683,
								27717
							],
							[
								28056,
								28070
							],
							[
								28165,
								28169
							],
							[
								28191,
								28205
							],
							[
								28236,
								28240
							],
							[
								29540,
								29556
							],
							[
								29606,
								29621
							],
							[
								29680,
								29699
							],
							[
								29722,
								29734
							],
							[
								29823,
								29827
							],
							[
								29926,
								29930
							],
							[
								30149,
								30155
							],
							[
								30245,
								30259
							],
							[
								30288,
								30306
							],
							[
								30443,
								30455
							],
							[
								30485,
								30550
							],
							[
								30579,
								30584
							],
							[
								30723,
								30761
							],
							[
								30786,
								30806
							],
							[
								30835,
								30884
							],
							[
								30931,
								30941
							],
							[
								31114,
								31124
							],
							[
								31197,
								31207
							],
							[
								31278,
								31288
							],
							[
								31815,
								31896
							],
							[
								31907,
								31930
							],
							[
								32148,
								32153
							],
							[
								32236,
								32245
							],
							[
								32275,
								32281
							],
							[
								32297,
								32326
							],
							[
								32362,
								32375
							],
							[
								32606,
								32612
							],
							[
								32621,
								32632
							],
							[
								32700,
								32722
							],
							[
								32939,
								32962
							],
							[
								33374,
								33403
							],
							[
								33725,
								33752
							],
							[
								33786,
								33799
							],
							[
								33826,
								33831
							],
							[
								33855,
								33860
							],
							[
								33905,
								33915
							],
							[
								33945,
								33955
							],
							[
								34041,
								34046
							],
							[
								34166,
								34171
							],
							[
								34185,
								34193
							],
							[
								34415,
								34419
							],
							[
								34472,
								34476
							],
							[
								34564,
								34577
							],
							[
								34678,
								34691
							],
							[
								34952,
								34985
							],
							[
								35039,
								35043
							],
							[
								35157,
								35183
							],
							[
								35526,
								35559
							],
							[
								35906,
								35951
							],
							[
								35992,
								35996
							],
							[
								36013,
								36042
							],
							[
								36078,
								36084
							],
							[
								36468,
								36538
							],
							[
								37138,
								37210
							],
							[
								37443,
								37448
							],
							[
								38170,
								38174
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAGDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					286,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11849,
								11893
							],
							[
								12012,
								12032
							],
							[
								12347,
								12357
							],
							[
								12385,
								12395
							],
							[
								12431,
								12444
							],
							[
								12694,
								12708
							],
							[
								13600,
								13609
							],
							[
								13850,
								13869
							],
							[
								14411,
								14424
							],
							[
								14442,
								14447
							],
							[
								14498,
								14511
							],
							[
								14562,
								14583
							],
							[
								14980,
								14996
							],
							[
								15384,
								15389
							],
							[
								15427,
								15442
							],
							[
								15589,
								15597
							],
							[
								15638,
								15646
							],
							[
								15923,
								15951
							],
							[
								16018,
								16052
							],
							[
								16086,
								16091
							],
							[
								16113,
								16143
							],
							[
								16385,
								16393
							],
							[
								16460,
								16464
							],
							[
								16554,
								16561
							],
							[
								16901,
								16925
							],
							[
								17170,
								17175
							],
							[
								18905,
								18949
							],
							[
								19396,
								19422
							],
							[
								20124,
								20147
							],
							[
								20267,
								20289
							],
							[
								20540,
								20544
							],
							[
								21032,
								21036
							],
							[
								21653,
								21682
							],
							[
								21707,
								21711
							],
							[
								21787,
								21810
							],
							[
								21854,
								21860
							],
							[
								21888,
								21892
							],
							[
								21908,
								21945
							],
							[
								21967,
								21983
							],
							[
								22003,
								22010
							],
							[
								22067,
								22095
							],
							[
								22149,
								22160
							],
							[
								22243,
								22251
							],
							[
								22347,
								22351
							],
							[
								22501,
								22505
							],
							[
								22603,
								22608
							],
							[
								22668,
								22679
							],
							[
								22751,
								22762
							],
							[
								22849,
								22854
							],
							[
								22904,
								22910
							],
							[
								23007,
								23015
							],
							[
								23190,
								23219
							],
							[
								23312,
								23365
							],
							[
								23518,
								23522
							],
							[
								23576,
								23580
							],
							[
								23856,
								23863
							],
							[
								23885,
								23891
							],
							[
								23920,
								23951
							],
							[
								24085,
								24109
							],
							[
								24235,
								24246
							],
							[
								24264,
								24280
							],
							[
								24439,
								24444
							],
							[
								24468,
								24472
							],
							[
								24520,
								24529
							],
							[
								24597,
								24602
							],
							[
								24740,
								24745
							],
							[
								24867,
								24878
							],
							[
								24967,
								24974
							],
							[
								25620,
								25636
							],
							[
								27690,
								27724
							],
							[
								28063,
								28077
							],
							[
								28172,
								28176
							],
							[
								28198,
								28212
							],
							[
								28243,
								28247
							],
							[
								29547,
								29563
							],
							[
								29613,
								29628
							],
							[
								29687,
								29706
							],
							[
								29729,
								29741
							],
							[
								29830,
								29834
							],
							[
								29933,
								29937
							],
							[
								30156,
								30162
							],
							[
								30252,
								30266
							],
							[
								30295,
								30313
							],
							[
								30450,
								30462
							],
							[
								30492,
								30557
							],
							[
								30586,
								30591
							],
							[
								30730,
								30768
							],
							[
								30793,
								30813
							],
							[
								30842,
								30891
							],
							[
								30938,
								30948
							],
							[
								31121,
								31131
							],
							[
								31204,
								31214
							],
							[
								31285,
								31295
							],
							[
								31822,
								31903
							],
							[
								31914,
								31937
							],
							[
								32155,
								32160
							],
							[
								32243,
								32252
							],
							[
								32282,
								32288
							],
							[
								32304,
								32333
							],
							[
								32369,
								32382
							],
							[
								32613,
								32619
							],
							[
								32628,
								32639
							],
							[
								32707,
								32729
							],
							[
								32946,
								32969
							],
							[
								33381,
								33410
							],
							[
								33732,
								33759
							],
							[
								33793,
								33806
							],
							[
								33833,
								33838
							],
							[
								33862,
								33867
							],
							[
								33912,
								33922
							],
							[
								33952,
								33962
							],
							[
								34048,
								34053
							],
							[
								34173,
								34178
							],
							[
								34192,
								34200
							],
							[
								34422,
								34426
							],
							[
								34479,
								34483
							],
							[
								34571,
								34584
							],
							[
								34685,
								34698
							],
							[
								34959,
								34992
							],
							[
								35046,
								35050
							],
							[
								35164,
								35190
							],
							[
								35533,
								35566
							],
							[
								35913,
								35958
							],
							[
								35999,
								36003
							],
							[
								36020,
								36049
							],
							[
								36085,
								36091
							],
							[
								36475,
								36545
							],
							[
								37145,
								37217
							],
							[
								37450,
								37455
							],
							[
								38177,
								38181
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAGDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					287,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11870,
								11914
							],
							[
								12033,
								12053
							],
							[
								12368,
								12378
							],
							[
								12406,
								12416
							],
							[
								12452,
								12465
							],
							[
								12715,
								12729
							],
							[
								13621,
								13630
							],
							[
								13871,
								13890
							],
							[
								14432,
								14445
							],
							[
								14463,
								14468
							],
							[
								14519,
								14532
							],
							[
								14583,
								14604
							],
							[
								15001,
								15017
							],
							[
								15405,
								15410
							],
							[
								15448,
								15463
							],
							[
								15610,
								15618
							],
							[
								15659,
								15667
							],
							[
								15944,
								15972
							],
							[
								16039,
								16073
							],
							[
								16107,
								16112
							],
							[
								16134,
								16164
							],
							[
								16406,
								16414
							],
							[
								16481,
								16485
							],
							[
								16575,
								16582
							],
							[
								16922,
								16946
							],
							[
								17191,
								17196
							],
							[
								18926,
								18970
							],
							[
								19417,
								19443
							],
							[
								20145,
								20168
							],
							[
								20288,
								20310
							],
							[
								20561,
								20565
							],
							[
								21053,
								21057
							],
							[
								21674,
								21703
							],
							[
								21728,
								21732
							],
							[
								21808,
								21831
							],
							[
								21875,
								21881
							],
							[
								21909,
								21913
							],
							[
								21929,
								21966
							],
							[
								21988,
								22004
							],
							[
								22024,
								22031
							],
							[
								22088,
								22116
							],
							[
								22170,
								22181
							],
							[
								22264,
								22272
							],
							[
								22368,
								22372
							],
							[
								22522,
								22526
							],
							[
								22624,
								22629
							],
							[
								22689,
								22700
							],
							[
								22772,
								22783
							],
							[
								22870,
								22875
							],
							[
								22925,
								22931
							],
							[
								23028,
								23036
							],
							[
								23211,
								23240
							],
							[
								23333,
								23386
							],
							[
								23539,
								23543
							],
							[
								23597,
								23601
							],
							[
								23877,
								23884
							],
							[
								23906,
								23912
							],
							[
								23941,
								23972
							],
							[
								24106,
								24130
							],
							[
								24256,
								24267
							],
							[
								24285,
								24301
							],
							[
								24460,
								24465
							],
							[
								24489,
								24493
							],
							[
								24541,
								24550
							],
							[
								24618,
								24623
							],
							[
								24761,
								24766
							],
							[
								24888,
								24899
							],
							[
								24988,
								24995
							],
							[
								25641,
								25657
							],
							[
								27711,
								27745
							],
							[
								28084,
								28098
							],
							[
								28193,
								28197
							],
							[
								28219,
								28233
							],
							[
								28264,
								28268
							],
							[
								29568,
								29584
							],
							[
								29634,
								29649
							],
							[
								29708,
								29727
							],
							[
								29750,
								29762
							],
							[
								29851,
								29855
							],
							[
								29954,
								29958
							],
							[
								30177,
								30183
							],
							[
								30273,
								30287
							],
							[
								30316,
								30334
							],
							[
								30471,
								30483
							],
							[
								30513,
								30578
							],
							[
								30607,
								30612
							],
							[
								30751,
								30789
							],
							[
								30814,
								30834
							],
							[
								30863,
								30912
							],
							[
								30959,
								30969
							],
							[
								31142,
								31152
							],
							[
								31225,
								31235
							],
							[
								31306,
								31316
							],
							[
								31843,
								31924
							],
							[
								31935,
								31958
							],
							[
								32176,
								32181
							],
							[
								32264,
								32273
							],
							[
								32303,
								32309
							],
							[
								32325,
								32354
							],
							[
								32390,
								32403
							],
							[
								32634,
								32640
							],
							[
								32649,
								32660
							],
							[
								32728,
								32750
							],
							[
								32967,
								32990
							],
							[
								33402,
								33431
							],
							[
								33753,
								33780
							],
							[
								33814,
								33827
							],
							[
								33854,
								33859
							],
							[
								33883,
								33888
							],
							[
								33933,
								33943
							],
							[
								33973,
								33983
							],
							[
								34069,
								34074
							],
							[
								34194,
								34199
							],
							[
								34213,
								34221
							],
							[
								34443,
								34447
							],
							[
								34500,
								34504
							],
							[
								34592,
								34605
							],
							[
								34706,
								34719
							],
							[
								34980,
								35013
							],
							[
								35067,
								35071
							],
							[
								35185,
								35211
							],
							[
								35554,
								35587
							],
							[
								35934,
								35979
							],
							[
								36020,
								36024
							],
							[
								36041,
								36070
							],
							[
								36106,
								36112
							],
							[
								36496,
								36566
							],
							[
								37166,
								37238
							],
							[
								37471,
								37476
							],
							[
								38198,
								38202
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					288,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							]
						],
						"symlist":
						[
<<<<<<< HEAD
							"value =>",
							" (level, message) =>",
							"async function AsyncCollect(iter)",
							"function GetMime(file)",
							"function Matcher(pattern, t = arg => arg)",
							" (...args) =>",
							"function KeyOrValueMatcher(pattern)",
							" ([key, value]) =>",
							"function GetRootDirectories(pattern = '*')",
							"MakeUUID = (rng = Math.random) =>",
							"n =>",
							"dd =>",
							"d =>",
							"d =>",
							"d =>",
							"function GetDir(dir)",
							"n =>",
							"function DirName(name)",
							"it =>",
							"function DateStr(date)",
							"function ModeStr(mode)",
							"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
							"script =>",
							"FilterForm = ({ ...props }) =>",
							"HTMLTable = ({ rows, ...props }) =>",
							"HTMLTableRow = ({ columns, ...props }) =>",
							"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
							"FileLink = ({ file, ...props }) =>",
							"FileObject = ({ file, stat = {}, ...props }) =>",
							"FileTable = ({ files, ...props }) =>",
							"(a, b) =>",
							"field =>",
							"file =>",
							"function ReadExiv2(file)",
							"([k, v]) =>",
							"([k, v]) =>",
							"([k, v]) =>",
							"(a, b) =>",
							"([k, v]) =>",
							"function ReadExiftool(file)",
							"l =>",
							"line =>",
							"([line, idx]) =>",
							"function HeifConvert(src, dst, quality = 100)",
							"function MagickResize(src, dst, rotate = 0, width, height)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (module, ...args) =>",
							"m =>",
							".show = arg =>",
							".cleanup = () =>",
							" (...args) =>",
							"() =>",
							"puts(s)",
							"() =>",
							" function ParseBody(gen)",
							".createWS = (url, callbacks) =>",
							".out = s =>",
							"async function* test(req, resp)",
							" function proxy(req, resp)",
							" function* config(req, resp)",
							" function* file(req, resp)",
							"([dir]) =>",
							"f =>",
							"file =>",
							" function* uploads(req, resp)",
							"s =>",
							"async function* files(req, resp)",
							"n =>",
							" function* files2(req, resp)",
							" n =>",
							"n =>",
							"n =>",
							"(a, b) =>",
							"name =>",
							"file =>",
							"file =>",
							"([file, rel]) =>",
							"(acc, [file, st]) =>",
							"string(a, b)",
							"number(a, b)",
							"([name, obj]) =>",
							"({ name }) =>",
							"onConnect(ws, req)",
							"sendCommand(data)",
							"onClose(ws, reason)",
							"onRequest(req, resp)",
							"onOpen(name, filename)",
							"onContent(name, data)",
							"onClose(name, file)",
							"f = x =>",
							"onFinalize()",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"get connections()",
							"get by_uuid()",
							"uuid(data)",
							"onFd(fd, rd, wr)",
							"onClose(ws, reason)",
							"onMessage(ws, data)",
							" function quit(why)"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
=======
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					289,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					290,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					291,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/eagle-shell.js",
						"symkeys":
						[
							[
								3134,
								3139
							],
							[
								3202,
								3208
							],
							[
								3310,
								3329
							],
							[
								3351,
								3356
							],
							[
								3459,
								3490
							],
							[
								3541,
								3584
							],
							[
								3629,
								3636
							],
							[
								3737,
								3822
							],
							[
								3974,
								3979
							],
							[
								4024,
								4042
							],
							[
								4081,
								4088
							],
							[
								4137,
								4144
							],
							[
								4183,
								4200
							],
							[
								4247,
								4254
							],
							[
								4291,
								4309
							],
							[
								4332,
								4341
							],
							[
								4364,
								4382
							],
							[
								4393,
								4454
							],
							[
								4574,
								4583
							],
							[
								4620,
								4631
							],
							[
								4642,
								4666
							],
							[
								4747,
								4755
							],
							[
								4938,
								4992
							],
							[
								5211,
								5241
							],
							[
								5893,
								5939
							],
							[
								5979,
								5983
							],
							[
								6010,
								6017
							],
							[
								6103,
								6142
							],
							[
								6227,
								6272
							],
							[
								6310,
								6314
							],
							[
								6338,
								6381
							],
							[
								6460,
								6505
							],
							[
								6550,
								6554
							],
							[
								6604,
								6608
							],
							[
								6615,
								6619
							],
							[
								6651,
								6684
							],
							[
								6716,
								6759
							],
							[
								6834,
								6838
							],
							[
								6877,
								6916
							],
							[
								6962,
								7005
							],
							[
								7050,
								7089
							],
							[
								7185,
								7218
							],
							[
								7250,
								7270
							],
							[
								7517,
								7539
							],
							[
								9831,
								9842
							],
							[
								10945,
								10958
							],
							[
								11338,
								11372
							],
							[
								11874,
								11918
							],
							[
								12037,
								12057
							],
							[
								12372,
								12382
							],
							[
								12410,
								12420
							],
							[
								12456,
								12469
							],
							[
								12719,
								12733
							],
							[
								13625,
								13634
							],
							[
								13875,
								13894
							],
							[
								14436,
								14449
							],
							[
								14467,
								14472
							],
							[
								14523,
								14536
							],
							[
								14587,
								14608
							],
							[
								15005,
								15021
							],
							[
								15409,
								15414
							],
							[
								15452,
								15467
							],
							[
								15614,
								15622
							],
							[
								15663,
								15671
							],
							[
								15948,
								15976
							],
							[
								16043,
								16077
							],
							[
								16111,
								16116
							],
							[
								16138,
								16168
							],
							[
								16410,
								16418
							],
							[
								16485,
								16489
							],
							[
								16579,
								16586
							],
							[
								16926,
								16950
							],
							[
								17195,
								17200
							],
							[
								18930,
								18974
							],
							[
								19421,
								19447
							],
							[
								20149,
								20172
							],
							[
								20292,
								20314
							],
							[
								20565,
								20569
							],
							[
								21057,
								21061
							],
							[
								21678,
								21707
							],
							[
								21732,
								21736
							],
							[
								21812,
								21835
							],
							[
								21879,
								21885
							],
							[
								21913,
								21917
							],
							[
								21933,
								21970
							],
							[
								21992,
								22008
							],
							[
								22028,
								22035
							],
							[
								22092,
								22120
							],
							[
								22174,
								22185
							],
							[
								22268,
								22276
							],
							[
								22372,
								22376
							],
							[
								22526,
								22530
							],
							[
								22628,
								22633
							],
							[
								22693,
								22704
							],
							[
								22776,
								22787
							],
							[
								22874,
								22879
							],
							[
								22929,
								22935
							],
							[
								23032,
								23040
							],
							[
								23215,
								23244
							],
							[
								23337,
								23390
							],
							[
								23543,
								23547
							],
							[
								23601,
								23605
							],
							[
								23881,
								23888
							],
							[
								23910,
								23916
							],
							[
								23945,
								23976
							],
							[
								24110,
								24134
							],
							[
								24260,
								24271
							],
							[
								24289,
								24305
							],
							[
								24464,
								24469
							],
							[
								24493,
								24497
							],
							[
								24545,
								24554
							],
							[
								24622,
								24627
							],
							[
								24765,
								24770
							],
							[
								24892,
								24903
							],
							[
								24992,
								24999
							],
							[
								25645,
								25661
							],
							[
								27715,
								27749
							],
							[
								28088,
								28102
							],
							[
								28197,
								28201
							],
							[
								28223,
								28237
							],
							[
								28268,
								28272
							],
							[
								29572,
								29588
							],
							[
								29638,
								29653
							],
							[
								29712,
								29731
							],
							[
								29754,
								29766
							],
							[
								29855,
								29859
							],
							[
								29958,
								29962
							],
							[
								30181,
								30187
							],
							[
								30277,
								30291
							],
							[
								30320,
								30338
							],
							[
								30475,
								30487
							],
							[
								30517,
								30582
							],
							[
								30611,
								30616
							],
							[
								30755,
								30793
							],
							[
								30818,
								30838
							],
							[
								30867,
								30916
							],
							[
								30963,
								30973
							],
							[
								31146,
								31156
							],
							[
								31229,
								31239
							],
							[
								31310,
								31320
							],
							[
								31847,
								31928
							],
							[
								31939,
								31962
							],
							[
								32180,
								32185
							],
							[
								32268,
								32277
							],
							[
								32307,
								32313
							],
							[
								32329,
								32358
							],
							[
								32394,
								32407
							],
							[
								32638,
								32644
							],
							[
								32653,
								32664
							],
							[
								32732,
								32754
							],
							[
								32971,
								32994
							],
							[
								33406,
								33435
							],
							[
								33757,
								33784
							],
							[
								33818,
								33831
							],
							[
								33858,
								33863
							],
							[
								33887,
								33892
							],
							[
								33937,
								33947
							],
							[
								33977,
								33987
							],
							[
								34073,
								34078
							],
							[
								34198,
								34203
							],
							[
								34217,
								34225
							],
							[
								34447,
								34451
							],
							[
								34504,
								34508
							],
							[
								34596,
								34609
							],
							[
								34710,
								34723
							],
							[
								34984,
								35017
							],
							[
								35071,
								35075
							],
							[
								35189,
								35215
							],
							[
								35558,
								35591
							],
							[
								35938,
								35983
							],
							[
								36024,
								36028
							],
							[
								36045,
								36074
							],
							[
								36110,
								36116
							],
							[
								36500,
								36570
							],
							[
								37170,
								37242
							],
							[
								37475,
								37480
							],
							[
								38202,
								38206
							]
						],
						"symlist":
						[
							"() =>",
							" () =>",
							"function toXML(obj)",
							" a =>",
							"function renderToXML(component)",
							"function GetFiletime(file, field = 'mtime')",
							"file =>",
							"function FindProjects(dirPtn = '../*/eagle', sortDirection = -1, sortField = 'mtime')",
							"fn =>",
							"minIndex = name =>",
							"file =>",
							"file =>",
							"hasBoth = name =>",
							"name =>",
							"([name, index]) =>",
							"(a, b) =>",
							"([name, index]) =>",
							"function SortFiles(files, direction = 1, statField = 'mtime')",
							"(a, b) =>",
							"([file]) =>",
							"function pick(it, n = 1)",
							"n = i =>",
							"function append(tag, attrs, children, parent, element)",
							"function render(doc, filename)",
							"function CollectParts(doc = project.schematic)",
							"e =>",
							"attr =>",
							"({ name, deviceset, device, value }) =>",
							"function CollectElements(doc = project.board)",
							"e =>",
							"({ name, library, package: pkg, value }) =>",
							"function CollectPartsElements(proj = project)",
							"e =>",
							"a =>",
							"e =>",
							"([{ x, y, ...element }, part]) =>",
							"function ListParts(doc = project.schematic)",
							"p =>",
							"({ name, deviceset, device, value }) =>",
							"function ShowParts(doc = project.schematic)",
							"({ name, deviceset, device, value }) =>",
							"function EaglePrint(file, output)",
							" (dir, base, ext) =>",
							"function main(...args)",
							"toNumber(n)",
							"wire(...args)",
							"coil({ rect, n, diameter, width })",
							"load(filename, project = globalThis.project)",
							"newProject(filename)",
							"sch: () =>",
							"brd: () =>",
							"nextProject()",
							"projectNames()",
							"quit(arg)",
							"renderToString(arg)",
							" (...args) =>",
							"() =>",
							".exit = () =>",
							".debug = (...args) =>",
							".show = value =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function Terminate(exitCode)",
							"function xml(strings, expressions)",
							" e =>",
							"function UpdateMeasures(board)",
							"lines =>",
							"e =>",
							"line =>",
							"function AlignItem(item)",
							"tr =>",
							"function AlignAll(doc = globalThis.document)",
							"function fixValue(element)",
							"function fixValues(doc)",
							"function coordMap(doc)",
							"p =>",
							"t =>",
							"function GetPolygons(d = doc)",
							"e =>",
							"function FindPolygons()",
							"doc =>",
							"e =>",
							"function RemovePolygons(p = polygons)",
							"([doc, list]) =>",
							"path =>",
							"function GetNames(doc, pred)",
							"pred = e =>",
							"sheet =>",
							"e =>",
							"e =>",
							" e =>",
							"([v, p]) =>",
							"([v, p]) =>",
							"() =>",
							"doc =>",
							"sheet =>",
							"function GetByName(doc, name)",
							"function CorrelateSchematicAndBoard(schematic, board)",
							"d =>",
							"n =>",
							"name =>",
							"doc =>",
							"function GetSheets(doc_or_proj)",
							"function SaveLibraries()",
							"([n, e]) =>",
							"(acc, [n, e]) =>",
							" e =>",
							"e =>",
							"(a, b) =>",
							"id =>",
							"id =>",
							"([n, e]) =>",
							"name =>",
							"(acc, [n, e]) =>",
							"async function testEagle(filename)",
							"([name, e]) =>",
							"e =>",
							"([name, i]) =>",
							"p =>",
							"(child, i, a) =>",
							"(child2, i2) =>",
							"([index, equal]) =>",
							"([index]) =>",
							"i =>",
							"i =>",
							"doc =>",
							"([file, e]) =>",
							"([file, xpath]) =>",
							" ([k, v]) =>",
							"function ModifyPath(p, fn = (dir, base, ext) => [dir, base, ext])",
							"() =>",
							"function AppendToFilename(p, str = '')",
							" (dir, base, ext) =>",
							"function SetSVGBackground(xml, color = '#ffffff')",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							" (e, n) =>",
							"FileFunction = (fn, rfn = ReadFile, wfn = WriteFile, namefn = n => n, ...args) =>",
							" (filename, ...args) =>",
							" n =>",
							" data =>",
							" n =>",
							"function PutRowsColumns(rows)",
							"(acc, row) =>",
							"row =>",
							"(col, i) =>",
							"function GetLibrary(e)",
							"function ElementName(e)",
							"function GetRotation(element)",
							"function Package2Circuit(p)",
							"({ x, y }) =>",
							"pt =>",
							"pt =>",
							"({ x }) =>",
							"({ y }) =>",
							"pt =>",
							"pt =>",
							"coord =>",
							"x =>",
							"y =>",
							"({ x, y }) =>",
							"({ x, y }) =>",
							"function Contactref2Circuit(cref)",
							"e =>",
							"function Signal2Circuit(s)",
							"function Element2Circuit(element)",
							"function GetUsedPackages(doc = project.board)",
							"e =>",
							"function GetPackagePitch(pkg)",
							"pad =>",
							"function Eagle2Circuit(doc = project.board, width = 100, height = 100)",
							"function Eagle2CircuitJS(doc = project.schematic, scale = 50, sheet = 0)",
							" n =>",
							"e =>"
						]
					},
					"AwAAAAAAAAAAAAAABgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYMAAAoKSA9PgooKSA9PgogIHRvWE1MKG9iaikKYSA9PgogIHJlbmRlclRvWE1MKGNvbXBvbmVudCkKR2V0RmlsZXRpbWUoZmlsZSwgZmllbGQgPSAnbXRpbWUnKQogIGZpbGUgPT4KRmluZFByb2plY3RzKGRpclB0biA9ICcuLi8qL2VhZ2xlJywgc29ydERpcmVjdGlvbiA9IC0xLCBzb3J0RmllbGQgPSAnbXRpbWUnKQogIGZuID0+CiAgbWluSW5kZXggPSBuYW1lID0+CiAgZmlsZSA9PgogIGZpbGUgPT4KICBoYXNCb3RoID0gbmFtZSA9PgogIG5hbWUgPT4KKFtuYW1lLCBpbmRleF0pID0+CihhLCBiKSA9PgooW25hbWUsIGluZGV4XSkgPT4KU29ydEZpbGVzKGZpbGVzLCBkaXJlY3Rpb24gPSAxLCBzdGF0RmllbGQgPSAnbXRpbWUnKQooYSwgYikgPT4KKFtmaWxlXSkgPT4KICBwaWNrKGl0LCBuID0gMSkKICBuID0gaSA9PgogIGFwcGVuZCh0YWcsIGF0dHJzLCBjaGlsZHJlbiwgcGFyZW50LCBlbGVtZW50KQogIHJlbmRlcihkb2MsIGZpbGVuYW1lKQpDb2xsZWN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgZSA9PgogIGF0dHIgPT4KKHsgbmFtZSwgZGV2aWNlc2V0LCBkZXZpY2UsIHZhbHVlIH0pID0+CkNvbGxlY3RFbGVtZW50cyhkb2MgPSBwcm9qZWN0LmJvYXJkKQogIGUgPT4KKHsgbmFtZSwgbGlicmFyeSwgcGFja2FnZTogcGtnLCB2YWx1ZSB9KSA9PgpDb2xsZWN0UGFydHNFbGVtZW50cyhwcm9qID0gcHJvamVjdCkKICBlID0+CiAgYSA9PgogIGUgPT4KKFt7IHgsIHksIC4uLmVsZW1lbnQgfSwgcGFydF0pID0+Ckxpc3RQYXJ0cyhkb2MgPSBwcm9qZWN0LnNjaGVtYXRpYykKICBwID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpTaG93UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpFYWdsZVByaW50KGZpbGUsIG91dHB1dCkKKGRpciwgYmFzZSwgZXh0KSA9PgogIG1haW4oLi4uYXJncykKICB0b051bWJlcihuKQogIHdpcmUoLi4uYXJncykKICBjb2lsKHsgcmVjdCwgbiwgZGlhbWV0ZXIsIHdpZHRoIH0pCiAgbG9hZChmaWxlbmFtZSwgcHJvamVjdCA9IGdsb2JhbFRoaXMucHJvamVjdCkKICBuZXdQcm9qZWN0KGZpbGVuYW1lKQogIHNjaDogKCkgPT4KICBicmQ6ICgpID0+CiAgbmV4dFByb2plY3QoKQogIHByb2plY3ROYW1lcygpCiAgcXVpdChhcmcpCiAgcmVuZGVyVG9TdHJpbmcoYXJnKQooLi4uYXJncykgPT4KKCkgPT4KICAuZXhpdCA9ICgpID0+CiAgLmRlYnVnID0gKC4uLmFyZ3MpID0+CiAgLnNob3cgPSB2YWx1ZSA9PgooKSA9PgooaXRlbSwgaSwgYSkgPT4KICBlbnRyeSA9PgogIGVudHJ5ID0+ClRlcm1pbmF0ZShleGl0Q29kZSkKICB4bWwoc3RyaW5ncywgZXhwcmVzc2lvbnMpCmUgPT4KVXBkYXRlTWVhc3VyZXMoYm9hcmQpCiAgbGluZXMgPT4KICBlID0+CiAgbGluZSA9PgpBbGlnbkl0ZW0oaXRlbSkKICB0ciA9PgpBbGlnbkFsbChkb2MgPSBnbG9iYWxUaGlzLmRvY3VtZW50KQogIGZpeFZhbHVlKGVsZW1lbnQpCiAgZml4VmFsdWVzKGRvYykKICBjb29yZE1hcChkb2MpCiAgcCA9PgogIHQgPT4KR2V0UG9seWdvbnMoZCA9IGRvYykKICBlID0+CkZpbmRQb2x5Z29ucygpCiAgZG9jID0+CiAgZSA9PgpSZW1vdmVQb2x5Z29ucyhwID0gcG9seWdvbnMpCihbZG9jLCBsaXN0XSkgPT4KICBwYXRoID0+CkdldE5hbWVzKGRvYywgcHJlZCkKICBwcmVkID0gZSA9PgogIHNoZWV0ID0+CiAgZSA9PgogIGUgPT4KZSA9PgooW3YsIHBdKSA9PgooW3YsIHBdKSA9PgooKSA9PgogIGRvYyA9PgogIHNoZWV0ID0+CkdldEJ5TmFtZShkb2MsIG5hbWUpCkNvcnJlbGF0ZVNjaGVtYXRpY0FuZEJvYXJkKHNjaGVtYXRpYywgYm9hcmQpCiAgZCA9PgogIG4gPT4KICBuYW1lID0+CiAgZG9jID0+CkdldFNoZWV0cyhkb2Nfb3JfcHJvaikKU2F2ZUxpYnJhcmllcygpCihbbiwgZV0pID0+CihhY2MsIFtuLCBlXSkgPT4KZSA9PgogIGUgPT4KKGEsIGIpID0+CiAgaWQgPT4KICBpZCA9PgooW24sIGVdKSA9PgogIG5hbWUgPT4KKGFjYywgW24sIGVdKSA9PgogIHRlc3RFYWdsZShmaWxlbmFtZSkKKFtuYW1lLCBlXSkgPT4KICBlID0+CihbbmFtZSwgaV0pID0+CiAgcCA9PgooY2hpbGQsIGksIGEpID0+CihjaGlsZDIsIGkyKSA9PgooW2luZGV4LCBlcXVhbF0pID0+CihbaW5kZXhdKSA9PgogIGkgPT4KICBpID0+CiAgZG9jID0+CihbZmlsZSwgZV0pID0+CihbZmlsZSwgeHBhdGhdKSA9PgooW2ssIHZdKSA9PgpNb2RpZnlQYXRoKHAsIGZuID0gKGRpciwgYmFzZSwgZXh0KSA9PiBbZGlyLCBiYXNlLCBleHRdKQooKSA9PgpBcHBlbmRUb0ZpbGVuYW1lKHAsIHN0ciA9ICcnKQooZGlyLCBiYXNlLCBleHQpID0+ClNldFNWR0JhY2tncm91bmQoeG1sLCBjb2xvciA9ICcjZmZmZmZmJykKKGUsIG4pID0+CihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CkZpbGVGdW5jdGlvbiA9IChmbiwgcmZuID0gUmVhZEZpbGUsIHdmbiA9IFdyaXRlRmlsZSwgbmFtZWZuID0gbiA9PiBuLCAuLi5hcmdzKSA9PgooZmlsZW5hbWUsIC4uLmFyZ3MpID0+Cm4gPT4KZGF0YSA9PgpuID0+ClB1dFJvd3NDb2x1bW5zKHJvd3MpCihhY2MsIHJvdykgPT4KICByb3cgPT4KKGNvbCwgaSkgPT4KR2V0TGlicmFyeShlKQpFbGVtZW50TmFtZShlKQpHZXRSb3RhdGlvbihlbGVtZW50KQpQYWNrYWdlMkNpcmN1aXQocCkKKHsgeCwgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KKHsgeCB9KSA9PgooeyB5IH0pID0+CiAgcHQgPT4KICBwdCA9PgogIGNvb3JkID0+CiAgeCA9PgogIHkgPT4KKHsgeCwgeSB9KSA9PgooeyB4LCB5IH0pID0+CkNvbnRhY3RyZWYyQ2lyY3VpdChjcmVmKQogIGUgPT4KU2lnbmFsMkNpcmN1aXQocykKRWxlbWVudDJDaXJjdWl0KGVsZW1lbnQpCkdldFVzZWRQYWNrYWdlcyhkb2MgPSBwcm9qZWN0LmJvYXJkKQogIGUgPT4KR2V0UGFja2FnZVBpdGNoKHBrZykKICBwYWQgPT4KRWFnbGUyQ2lyY3VpdChkb2MgPSBwcm9qZWN0LmJvYXJkLCB3aWR0aCA9IDEwMCwgaGVpZ2h0ID0gMTAwKQpFYWdsZTJDaXJjdWl0SlMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMsIHNjYWxlID0gNTAsIHNoZWV0ID0gMCkKbiA9PgogIGUgPT4AAAAAAAAAAAYMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					292,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/eagle/common.js",
						"symkeys":
						[
							[
								101,
								118
							],
							[
								235,
								255
							],
							[
								277,
								287
							],
							[
								308,
								328
							],
							[
								350,
								371
							],
							[
								536,
								558
							],
							[
								694,
								710
							],
							[
								1180,
								1184
							],
							[
								1209,
								1225
							],
							[
								1625,
								1629
							],
							[
								1656,
								1699
							],
							[
								1710,
								1726
							],
							[
								2253,
								2272
							],
							[
								2484,
								2502
							],
							[
								3280,
								3297
							],
							[
								3369,
								3386
							],
							[
								3448,
								3490
							]
						],
						"symlist":
						[
							"isBrowser = () =>",
							"concat: (...args) =>",
							"text: t =>",
							"concat: (...args) =>",
							"text: (t, ...ansi) =>",
							"dingbatCode = digit =>",
							"m = (r, g, b) =>",
							"c =>",
							"m = (r, g, b) =>",
							"c =>",
							"dump = (o, depth = 2, breakLength = 400) =>",
							"isElement = o =>",
							"parseArgs = args =>",
							".predicate = it =>",
							".predicate = v =>",
							".predicate = v =>",
							"traverse = function* (obj, path = [], doc)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGDAAAKCkgPT4KKCkgPT4KICB0b1hNTChvYmopCmEgPT4KICByZW5kZXJUb1hNTChjb21wb25lbnQpCkdldEZpbGV0aW1lKGZpbGUsIGZpZWxkID0gJ210aW1lJykKICBmaWxlID0+CkZpbmRQcm9qZWN0cyhkaXJQdG4gPSAnLi4vKi9lYWdsZScsIHNvcnREaXJlY3Rpb24gPSAtMSwgc29ydEZpZWxkID0gJ210aW1lJykKICBmbiA9PgogIG1pbkluZGV4ID0gbmFtZSA9PgogIGZpbGUgPT4KICBmaWxlID0+CiAgaGFzQm90aCA9IG5hbWUgPT4KICBuYW1lID0+CihbbmFtZSwgaW5kZXhdKSA9PgooYSwgYikgPT4KKFtuYW1lLCBpbmRleF0pID0+ClNvcnRGaWxlcyhmaWxlcywgZGlyZWN0aW9uID0gMSwgc3RhdEZpZWxkID0gJ210aW1lJykKKGEsIGIpID0+CihbZmlsZV0pID0+CiAgcGljayhpdCwgbiA9IDEpCiAgbiA9IGkgPT4KICBhcHBlbmQodGFnLCBhdHRycywgY2hpbGRyZW4sIHBhcmVudCwgZWxlbWVudCkKICByZW5kZXIoZG9jLCBmaWxlbmFtZSkKQ29sbGVjdFBhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQogIGUgPT4KICBhdHRyID0+Cih7IG5hbWUsIGRldmljZXNldCwgZGV2aWNlLCB2YWx1ZSB9KSA9PgpDb2xsZWN0RWxlbWVudHMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+Cih7IG5hbWUsIGxpYnJhcnksIHBhY2thZ2U6IHBrZywgdmFsdWUgfSkgPT4KQ29sbGVjdFBhcnRzRWxlbWVudHMocHJvaiA9IHByb2plY3QpCiAgZSA9PgogIGEgPT4KICBlID0+CihbeyB4LCB5LCAuLi5lbGVtZW50IH0sIHBhcnRdKSA9PgpMaXN0UGFydHMoZG9jID0gcHJvamVjdC5zY2hlbWF0aWMpCiAgcCA9PgooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KU2hvd1BhcnRzKGRvYyA9IHByb2plY3Quc2NoZW1hdGljKQooeyBuYW1lLCBkZXZpY2VzZXQsIGRldmljZSwgdmFsdWUgfSkgPT4KRWFnbGVQcmludChmaWxlLCBvdXRwdXQpCihkaXIsIGJhc2UsIGV4dCkgPT4KICBtYWluKC4uLmFyZ3MpCiAgdG9OdW1iZXIobikKICB3aXJlKC4uLmFyZ3MpCiAgY29pbCh7IHJlY3QsIG4sIGRpYW1ldGVyLCB3aWR0aCB9KQogIGxvYWQoZmlsZW5hbWUsIHByb2plY3QgPSBnbG9iYWxUaGlzLnByb2plY3QpCiAgbmV3UHJvamVjdChmaWxlbmFtZSkKICBzY2g6ICgpID0+CiAgYnJkOiAoKSA9PgogIG5leHRQcm9qZWN0KCkKICBwcm9qZWN0TmFtZXMoKQogIHF1aXQoYXJnKQogIHJlbmRlclRvU3RyaW5nKGFyZykKKC4uLmFyZ3MpID0+CigpID0+CiAgLmV4aXQgPSAoKSA9PgogIC5kZWJ1ZyA9ICguLi5hcmdzKSA9PgogIC5zaG93ID0gdmFsdWUgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpUZXJtaW5hdGUoZXhpdENvZGUpCiAgeG1sKHN0cmluZ3MsIGV4cHJlc3Npb25zKQplID0+ClVwZGF0ZU1lYXN1cmVzKGJvYXJkKQogIGxpbmVzID0+CiAgZSA9PgogIGxpbmUgPT4KQWxpZ25JdGVtKGl0ZW0pCiAgdHIgPT4KQWxpZ25BbGwoZG9jID0gZ2xvYmFsVGhpcy5kb2N1bWVudCkKICBmaXhWYWx1ZShlbGVtZW50KQogIGZpeFZhbHVlcyhkb2MpCiAgY29vcmRNYXAoZG9jKQogIHAgPT4KICB0ID0+CkdldFBvbHlnb25zKGQgPSBkb2MpCiAgZSA9PgpGaW5kUG9seWdvbnMoKQogIGRvYyA9PgogIGUgPT4KUmVtb3ZlUG9seWdvbnMocCA9IHBvbHlnb25zKQooW2RvYywgbGlzdF0pID0+CiAgcGF0aCA9PgpHZXROYW1lcyhkb2MsIHByZWQpCiAgcHJlZCA9IGUgPT4KICBzaGVldCA9PgogIGUgPT4KICBlID0+CmUgPT4KKFt2LCBwXSkgPT4KKFt2LCBwXSkgPT4KKCkgPT4KICBkb2MgPT4KICBzaGVldCA9PgpHZXRCeU5hbWUoZG9jLCBuYW1lKQpDb3JyZWxhdGVTY2hlbWF0aWNBbmRCb2FyZChzY2hlbWF0aWMsIGJvYXJkKQogIGQgPT4KICBuID0+CiAgbmFtZSA9PgogIGRvYyA9PgpHZXRTaGVldHMoZG9jX29yX3Byb2opClNhdmVMaWJyYXJpZXMoKQooW24sIGVdKSA9PgooYWNjLCBbbiwgZV0pID0+CmUgPT4KICBlID0+CihhLCBiKSA9PgogIGlkID0+CiAgaWQgPT4KKFtuLCBlXSkgPT4KICBuYW1lID0+CihhY2MsIFtuLCBlXSkgPT4KICB0ZXN0RWFnbGUoZmlsZW5hbWUpCihbbmFtZSwgZV0pID0+CiAgZSA9PgooW25hbWUsIGldKSA9PgogIHAgPT4KKGNoaWxkLCBpLCBhKSA9PgooY2hpbGQyLCBpMikgPT4KKFtpbmRleCwgZXF1YWxdKSA9PgooW2luZGV4XSkgPT4KICBpID0+CiAgaSA9PgogIGRvYyA9PgooW2ZpbGUsIGVdKSA9PgooW2ZpbGUsIHhwYXRoXSkgPT4KKFtrLCB2XSkgPT4KTW9kaWZ5UGF0aChwLCBmbiA9IChkaXIsIGJhc2UsIGV4dCkgPT4gW2RpciwgYmFzZSwgZXh0XSkKKCkgPT4KQXBwZW5kVG9GaWxlbmFtZShwLCBzdHIgPSAnJykKKGRpciwgYmFzZSwgZXh0KSA9PgpTZXRTVkdCYWNrZ3JvdW5kKHhtbCwgY29sb3IgPSAnI2ZmZmZmZicpCihlLCBuKSA9PgooZSwgbikgPT4KKGUsIG4pID0+CihlLCBuKSA9PgpGaWxlRnVuY3Rpb24gPSAoZm4sIHJmbiA9IFJlYWRGaWxlLCB3Zm4gPSBXcml0ZUZpbGUsIG5hbWVmbiA9IG4gPT4gbiwgLi4uYXJncykgPT4KKGZpbGVuYW1lLCAuLi5hcmdzKSA9PgpuID0+CmRhdGEgPT4KbiA9PgpQdXRSb3dzQ29sdW1ucyhyb3dzKQooYWNjLCByb3cpID0+CiAgcm93ID0+Cihjb2wsIGkpID0+CkdldExpYnJhcnkoZSkKRWxlbWVudE5hbWUoZSkKR2V0Um90YXRpb24oZWxlbWVudCkKUGFja2FnZTJDaXJjdWl0KHApCih7IHgsIHkgfSkgPT4KICBwdCA9PgogIHB0ID0+Cih7IHggfSkgPT4KKHsgeSB9KSA9PgogIHB0ID0+CiAgcHQgPT4KICBjb29yZCA9PgogIHggPT4KICB5ID0+Cih7IHgsIHkgfSkgPT4KKHsgeCwgeSB9KSA9PgpDb250YWN0cmVmMkNpcmN1aXQoY3JlZikKICBlID0+ClNpZ25hbDJDaXJjdWl0KHMpCkVsZW1lbnQyQ2lyY3VpdChlbGVtZW50KQpHZXRVc2VkUGFja2FnZXMoZG9jID0gcHJvamVjdC5ib2FyZCkKICBlID0+CkdldFBhY2thZ2VQaXRjaChwa2cpCiAgcGFkID0+CkVhZ2xlMkNpcmN1aXQoZG9jID0gcHJvamVjdC5ib2FyZCwgd2lkdGggPSAxMDAsIGhlaWdodCA9IDEwMCkKRWFnbGUyQ2lyY3VpdEpTKGRvYyA9IHByb2plY3Quc2NoZW1hdGljLCBzY2FsZSA9IDUwLCBzaGVldCA9IDApCm4gPT4KICBlID0+AAAAAAAAAABzAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				]
			]
		},
		{
<<<<<<< HEAD
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 33962,
=======
			"file": "eagle2svg.js",
			"settings":
			{
				"buffer_size": 2302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 38585,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
<<<<<<< HEAD
=======
				[
					719,
					1,
					"insert",
					{
						"characters": "0.0254"
					},
					"BgAAAAQrAAAAAAAABSsAAAAAAAAAAAAABSsAAAAAAAAGKwAAAAAAAAAAAAAGKwAAAAAAAAcrAAAAAAAAAAAAAAcrAAAAAAAACCsAAAAAAAAAAAAACCsAAAAAAAAJKwAAAAAAAAAAAAAJKwAAAAAAAAorAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEKwAAAAAAAAQrAAAAAAAAAAAAAAAA8L8"
				],
				[
					736,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAsrAAAAAAAADSsAAAAAAAAAAAAA/SoAAAAAAAD/KgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9KgAAAAAAAAsrAAAAAAAAAAAAAAAA8L8"
				],
				[
					754,
					1,
					"right_delete",
					null,
					"AQAAAP0qAAAAAAAA/SoAAAAAAAACAAAALyo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9KgAAAAAAAP8qAAAAAAAAAAAAAAAA8L8"
				],
				[
					762,
					2,
					"left_delete",
					null,
					"AgAAAAwrAAAAAAAADCsAAAAAAAABAAAALwsrAAAAAAAACysAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANKwAAAAAAAA0rAAAAAAAAAAAAAAAA8L8"
				],
				[
					768,
					6,
					"left_delete",
					null,
					"BgAAAAkrAAAAAAAACSsAAAAAAAABAAAANAgrAAAAAAAACCsAAAAAAAABAAAANQcrAAAAAAAABysAAAAAAAABAAAAMgYrAAAAAAAABisAAAAAAAABAAAAMAUrAAAAAAAABSsAAAAAAAABAAAALgQrAAAAAAAABCsAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKKwAAAAAAAAorAAAAAAAAAAAAAAAA8L8"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAQrAAAAAAAABSsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEKwAAAAAAAAQrAAAAAAAAAAAAAAAA8L8"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": "To"
					},
					"AgAAAAMrAAAAAAAABCsAAAAAAAAAAAAABCsAAAAAAAAFKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADKwAAAAAAAAMrAAAAAAAAAAAAAAAA8L8"
				],
				[
					776,
					1,
					"left_delete",
					null,
					"AQAAAAYrAAAAAAAABisAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHKwAAAAAAAAcrAAAAAAAAAAAAAAAA8L8"
				],
				[
					777,
					1,
					"insert",
					{
						"characters": "0.902"
					},
					"BQAAAAYrAAAAAAAABysAAAAAAAAAAAAABysAAAAAAAAIKwAAAAAAAAAAAAAIKwAAAAAAAAkrAAAAAAAAAAAAAAkrAAAAAAAACisAAAAAAAAAAAAACisAAAAAAAALKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGKwAAAAAAAAYrAAAAAAAAAAAAAAAA8L8"
				],
				[
					778,
					3,
					"left_delete",
					null,
					"AwAAAAorAAAAAAAACisAAAAAAAABAAAAMgkrAAAAAAAACSsAAAAAAAABAAAAMAgrAAAAAAAACCsAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALKwAAAAAAAAsrAAAAAAAAAAAAAAAA8L8"
				],
				[
					779,
					1,
					"insert",
					{
						"characters": "02546"
					},
					"BQAAAAgrAAAAAAAACSsAAAAAAAAAAAAACSsAAAAAAAAKKwAAAAAAAAAAAAAKKwAAAAAAAAsrAAAAAAAAAAAAAAsrAAAAAAAADCsAAAAAAAAAAAAADCsAAAAAAAANKwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIKwAAAAAAAAgrAAAAAAAAAAAAAAAA8L8"
				],
				[
					780,
					1,
					"left_delete",
					null,
					"AQAAAAwrAAAAAAAADCsAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANKwAAAAAAAA0rAAAAAAAAAAAAAAAA8L8"
				],
				[
					791,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAAgrAAAAAAAACSsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIKwAAAAAAAAgrAAAAAAAAAAAAAAAA8L8"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAOcsAAAAAAAA6CwAAAAAAAAAAAAA6CwAAAAAAADpLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnLAAAAAAAAOcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAOksAAAAAAAA6iwAAAAAAAAAAAAA6iwAAAAAAADrLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpLAAAAAAAAOksAAAAAAAAAAAAAAAA8L8"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": ".y1"
					},
					"AwAAAOssAAAAAAAA7CwAAAAAAAAAAAAA7CwAAAAAAADtLAAAAAAAAAAAAADtLAAAAAAAAO4sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrLAAAAAAAAOssAAAAAAAAAAAAAAAA8L8"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAN4sAAAAAAAA3ywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeLAAAAAAAAN4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAOgsAAAAAAAA6SwAAAAAAAAAAAAA6SwAAAAAAADqLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoLAAAAAAAAOgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					837,
					1,
					"insert",
					{
						"characters": " 1)"
					},
					"AwAAAOosAAAAAAAA6ywAAAAAAAAAAAAA6ywAAAAAAADsLAAAAAAAAAAAAADsLAAAAAAAAO0sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqLAAAAAAAAOosAAAAAAAAAAAAAAAA8L8"
				],
				[
					853,
					1,
					"paste",
					null,
					"AQAAAJgsAAAAAAAA0SwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYLAAAAAAAAJgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					858,
					1,
					"insert",
					{
						"characters": "step"
					},
					"BQAAAKQsAAAAAAAApSwAAAAAAAAAAAAApSwAAAAAAAClLAAAAAAAAAEAAAB5pSwAAAAAAACmLAAAAAAAAAAAAACmLAAAAAAAAKcsAAAAAAAAAAAAAKcsAAAAAAAAqCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkLAAAAAAAAKUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					860,
					5,
					"right_delete",
					null,
					"BQAAAKssAAAAAAAAqywAAAAAAAABAAAAKKssAAAAAAAAqywAAAAAAAABAAAAaassAAAAAAAAqywAAAAAAAABAAAAIKssAAAAAAAAqywAAAAAAAABAAAAKqssAAAAAAAAqywAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrLAAAAAAAAKssAAAAAAAAAAAAAAAA8L8"
				],
				[
					862,
					1,
					"left_delete",
					null,
					"AQAAALMsAAAAAAAAsywAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0LAAAAAAAALQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAAPEsAAAAAAAA8SwAAAAAAAABAAAAew",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyLAAAAAAAAPIsAAAAAAAAAAAAAAAggkA"
				],
				[
					867,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPEsAAAAAAAA8ywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxLAAAAAAAAPEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					868,
					1,
					"right_delete",
					null,
					"AQAAAPIsAAAAAAAA8iwAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyLAAAAAAAAPIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					872,
					7,
					"left_delete",
					null,
					"BwAAAMssAAAAAAAAyywAAAAAAAABAAAAMcosAAAAAAAAyiwAAAAAAAABAAAAecksAAAAAAAAySwAAAAAAAABAAAALsgsAAAAAAAAyCwAAAAAAAABAAAAcscsAAAAAAAAxywAAAAAAAABAAAAIMYsAAAAAAAAxiwAAAAAAAABAAAAK8UsAAAAAAAAxSwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMLAAAAAAAAMwsAAAAAAAAAAAAAAAA8L8"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYsAAAAAAAAxywAAAAAAAAAAAAAxywAAAAAAADVLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGLAAAAAAAAMYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					880,
					1,
					"right_delete",
					null,
					"AgAAAAstAAAAAAAACy0AAAAAAAABAAAAKMcsAAAAAAAAxywAAAAAAAAOAAAAICAgICAgICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALLQAAAAAAAAstAAAAAAAAAAAAAAAA8L8"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": " step"
					},
					"BQAAAAEtAAAAAAAAAi0AAAAAAAAAAAAAAi0AAAAAAAADLQAAAAAAAAAAAAADLQAAAAAAAAQtAAAAAAAAAAAAAAQtAAAAAAAABS0AAAAAAAAAAAAABS0AAAAAAAAGLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABLQAAAAAAAAEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					886,
					1,
					"cut",
					null,
					"AQAAAAYtAAAAAAAABi0AAAAAAAAbAAAAci5oZWlnaHQpIC8gKG53aW5kaW5ncyAtIDEp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGLQAAAAAAACEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAADQtAAAAAAAANS0AAAAAAAAAAAAANS0AAAAAAAA2LQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0LQAAAAAAADQtAAAAAAAAAAAAAAAA8L8"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": " step"
					},
					"BQAAADYtAAAAAAAANy0AAAAAAAAAAAAANy0AAAAAAAA4LQAAAAAAAAAAAAA4LQAAAAAAADktAAAAAAAAAAAAADktAAAAAAAAOi0AAAAAAAAAAAAAOi0AAAAAAAA7LQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2LQAAAAAAADYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					915,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADstAAAAAAAAPC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7LQAAAAAAADstAAAAAAAAAAAAAAAA8L8"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": " 16"
					},
					"AwAAADwtAAAAAAAAPS0AAAAAAAAAAAAAPS0AAAAAAAA+LQAAAAAAAAAAAAA+LQAAAAAAAD8tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8LQAAAAAAADwtAAAAAAAAAAAAAAAA8L8"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD8tAAAAAAAAQC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/LQAAAAAAAD8tAAAAAAAAAAAAAAAA8L8"
				],
				[
					922,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAtAAAAAAAAQS0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABALQAAAAAAAEAtAAAAAAAAAAAAAAAA8L8"
				],
				[
					925,
					2,
					"left_delete",
					null,
					"AgAAAEAtAAAAAAAAQC0AAAAAAAABAAAAID8tAAAAAAAAPy0AAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBLQAAAAAAAEEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					930,
					2,
					"left_delete",
					null,
					"AgAAAD4tAAAAAAAAPi0AAAAAAAABAAAANj0tAAAAAAAAPS0AAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/LQAAAAAAAD8tAAAAAAAAAAAAAAAA8L8"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": "21"
					},
					"AgAAAD0tAAAAAAAAPi0AAAAAAAAAAAAAPi0AAAAAAAA/LQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9LQAAAAAAAD0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					953,
					1,
					"insert",
					{
						"characters": "(ä"
					},
					"AgAAAE8sAAAAAAAAUCwAAAAAAAAAAAAAUCwAAAAAAABRLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPLAAAAAAAAE8sAAAAAAAAAAAAAAAA8L8"
				],
				[
					954,
					2,
					"left_delete",
					null,
					"AgAAAFAsAAAAAAAAUCwAAAAAAAACAAAAw6RPLAAAAAAAAE8sAAAAAAAAAQAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRLAAAAAAAAFEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					955,
					1,
					"insert",
					{
						"characters": "ä"
					},
					"AQAAAE8sAAAAAAAAUCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPLAAAAAAAAE8sAAAAAAAAAAAAAAAA8L8"
				],
				[
					956,
					1,
					"left_delete",
					null,
					"AQAAAE8sAAAAAAAATywAAAAAAAACAAAAw6Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQLAAAAAAAAFAsAAAAAAAAAAAAAAAA8L8"
				],
				[
					957,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAE8sAAAAAAAAUCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPLAAAAAAAAE8sAAAAAAAAAAAAAAAA8L8"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFAsAAAAAAAAUSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQLAAAAAAAAFAsAAAAAAAAAAAAAAAA8L8"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAGAsAAAAAAAAYSwAAAAAAAAAAAAAYSwAAAAAAABiLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgLAAAAAAAAGAsAAAAAAAAAAAAAAAA8L8"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AgAAAFcsAAAAAAAAWCwAAAAAAAAAAAAAWCwAAAAAAABYLAAAAAAAAAkAAABud2luZGluZ3M",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXLAAAAAAAAGAsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1011,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABlLAAAAAAAAAUAAABsZXQgcmUsAAAAAAAAZiwAAAAAAAAAAAAAZiwAAAAAAABnLAAAAAAAAAAAAABnLAAAAAAAAGgsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpLAAAAAAAAGQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABrLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkLAAAAAAAAGQsAAAAAAAAAAAAAAAATkA"
				],
				[
					1015,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAGQsAAAAAAAAZSwAAAAAAAAAAAAAZSwAAAAAAABmLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkLAAAAAAAAGQsAAAAAAAAAAAAAAAATkA"
				],
				[
					1016,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGYsAAAAAAAAaCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmLAAAAAAAAGYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1017,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAGcsAAAAAAAAaCwAAAAAAAAAAAAAaCwAAAAAAABpLAAAAAAAAAAAAABpLAAAAAAAAGosAAAAAAAAAAAAAGosAAAAAAAAaywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnLAAAAAAAAGcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1018,
					1,
					"insert",
					{
						"characters": " !=="
					},
					"BAAAAGssAAAAAAAAbCwAAAAAAAAAAAAAbCwAAAAAAABtLAAAAAAAAAAAAABtLAAAAAAAAG4sAAAAAAAAAAAAAG4sAAAAAAAAbywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrLAAAAAAAAGssAAAAAAAAAAAAAAAA8L8"
				],
				[
					1019,
					1,
					"insert",
					{
						"characters": " uind"
					},
					"BQAAAG8sAAAAAAAAcCwAAAAAAAAAAAAAcCwAAAAAAABxLAAAAAAAAAAAAABxLAAAAAAAAHIsAAAAAAAAAAAAAHIsAAAAAAAAcywAAAAAAAAAAAAAcywAAAAAAAB0LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvLAAAAAAAAG8sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1020,
					3,
					"left_delete",
					null,
					"AwAAAHMsAAAAAAAAcywAAAAAAAABAAAAZHIsAAAAAAAAciwAAAAAAAABAAAAbnEsAAAAAAAAcSwAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0LAAAAAAAAHQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1021,
					1,
					"insert",
					{
						"characters": "ndefined"
					},
					"CAAAAHEsAAAAAAAAciwAAAAAAAAAAAAAciwAAAAAAABzLAAAAAAAAAAAAABzLAAAAAAAAHQsAAAAAAAAAAAAAHQsAAAAAAAAdSwAAAAAAAAAAAAAdSwAAAAAAAB2LAAAAAAAAAAAAAB2LAAAAAAAAHcsAAAAAAAAAAAAAHcsAAAAAAAAeCwAAAAAAAAAAAAAeCwAAAAAAAB5LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxLAAAAAAAAHEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAJcsAAAAAAAAmCwAAAAAAAAAAAAAmCwAAAAAAACeLAAAAAAAAAAAAACYLAAAAAAAAJgsAAAAAAAABgAAACAgICAgIJgsAAAAAAAAnCwAAAAAAAAAAAAAnCwAAAAAAACdLAAAAAAAAAAAAACdLAAAAAAAAKEsAAAAAAAAAAAAAJgsAAAAAAAAmCwAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXLAAAAAAAAJcsAAAAAAAAAAAAAACAcUA"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AwAAANUsAAAAAAAA1iwAAAAAAAAAAAAA1iwAAAAAAADWLAAAAAAAAAkAAABud2luZGluZ3OZLAAAAAAAAJksAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVLAAAAAAAAN4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1042,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AgAAAO0sAAAAAAAA7iwAAAAAAAAAAAAA7iwAAAAAAADuLAAAAAAAAAkAAABud2luZGluZ3M",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtLAAAAAAAAPYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1098,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANYsAAAAAAAA2CwAAAAAAAAAAAAA0ywAAAAAAADVLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTLAAAAAAAANYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0tAAAAAAAATi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNLQAAAAAAAE0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1113,
					1,
					"left_delete",
					null,
					"AQAAAE0tAAAAAAAATS0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOLQAAAAAAAE4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0tAAAAAAAATi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNLQAAAAAAAE0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4tAAAAAAAATy0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOLQAAAAAAAE4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1116,
					1,
					"paste",
					null,
					"AQAAAE8tAAAAAAAAUy0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPLQAAAAAAAE8tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1135,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgsAAAAAAAAWSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYLAAAAAAAAFgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1136,
					1,
					"insert",
					{
						"characters": " diameter"
					},
					"CQAAAFksAAAAAAAAWiwAAAAAAAAAAAAAWiwAAAAAAABbLAAAAAAAAAAAAABbLAAAAAAAAFwsAAAAAAAAAAAAAFwsAAAAAAAAXSwAAAAAAAAAAAAAXSwAAAAAAABeLAAAAAAAAAAAAABeLAAAAAAAAF8sAAAAAAAAAAAAAF8sAAAAAAAAYCwAAAAAAAAAAAAAYCwAAAAAAABhLAAAAAAAAAAAAABhLAAAAAAAAGIsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZLAAAAAAAAFksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"CAAAAKEsAAAAAAAAoiwAAAAAAAAAAAAAoiwAAAAAAACoLAAAAAAAAAAAAACiLAAAAAAAAKIsAAAAAAAABgAAACAgICAgIKIsAAAAAAAApiwAAAAAAAAAAAAApiwAAAAAAACnLAAAAAAAAAAAAACnLAAAAAAAAKgsAAAAAAAAAAAAAKgsAAAAAAAAqSwAAAAAAAAAAAAAqSwAAAAAAACqLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChLAAAAAAAAKEsAAAAAAAAAAAAAACAcUA"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKosAAAAAAAAqywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqLAAAAAAAAKosAAAAAAAAAAAAAAAA8L8"
				],
				[
					1149,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKssAAAAAAAArSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrLAAAAAAAAKssAAAAAAAAAAAAAAAA8L8"
				],
				[
					1150,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAKwsAAAAAAAArSwAAAAAAAAAAAAArSwAAAAAAACxLAAAAAAAAAAAAACxLAAAAAAAALIsAAAAAAAAAAAAALIsAAAAAAAAtiwAAAAAAAAAAAAArSwAAAAAAACtLAAAAAAAAAQAAAAgICAgrSwAAAAAAACzLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsLAAAAAAAAKwsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1155,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAALMsAAAAAAAAtCwAAAAAAAAAAAAAtCwAAAAAAAC1LAAAAAAAAAAAAAC1LAAAAAAAALYsAAAAAAAAAAAAALYsAAAAAAAAtywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzLAAAAAAAALMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALcsAAAAAAAAuCwAAAAAAAAAAAAAuCwAAAAAAAC5LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3LAAAAAAAALcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALksAAAAAAAAuiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5LAAAAAAAALksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1158,
					1,
					"left_delete",
					null,
					"AQAAALksAAAAAAAAuSwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6LAAAAAAAALosAAAAAAAAAAAAAAAA8L8"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": " new"
					},
					"BAAAALksAAAAAAAAuiwAAAAAAAAAAAAAuiwAAAAAAAC7LAAAAAAAAAAAAAC7LAAAAAAAALwsAAAAAAAAAAAAALwsAAAAAAAAvSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5LAAAAAAAALksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1160,
					1,
					"insert",
					{
						"characters": " Rect"
					},
					"BQAAAL0sAAAAAAAAviwAAAAAAAAAAAAAviwAAAAAAAC/LAAAAAAAAAAAAAC/LAAAAAAAAMAsAAAAAAAAAAAAAMAsAAAAAAAAwSwAAAAAAAAAAAAAwSwAAAAAAADCLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9LAAAAAAAAL0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1161,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMIsAAAAAAAAxCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCLAAAAAAAAMIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1162,
					1,
					"insert",
					{
						"characters": "0,m0"
					},
					"BAAAAMMsAAAAAAAAxCwAAAAAAAAAAAAAxCwAAAAAAADFLAAAAAAAAAAAAADFLAAAAAAAAMYsAAAAAAAAAAAAAMYsAAAAAAAAxywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDLAAAAAAAAMMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1163,
					2,
					"left_delete",
					null,
					"AgAAAMYsAAAAAAAAxiwAAAAAAAABAAAAMMUsAAAAAAAAxSwAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHLAAAAAAAAMcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAAMUsAAAAAAAAxiwAAAAAAAAAAAAAxiwAAAAAAADHLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFLAAAAAAAAMUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcsAAAAAAAAyCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHLAAAAAAAAMcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1166,
					1,
					"insert",
					{
						"characters": "diameter"
					},
					"CAAAAMgsAAAAAAAAySwAAAAAAAAAAAAAySwAAAAAAADKLAAAAAAAAAAAAADKLAAAAAAAAMssAAAAAAAAAAAAAMssAAAAAAAAzCwAAAAAAAAAAAAAzCwAAAAAAADNLAAAAAAAAAAAAADNLAAAAAAAAM4sAAAAAAAAAAAAAM4sAAAAAAAAzywAAAAAAAAAAAAAzywAAAAAAADQLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADILAAAAAAAAMgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGIsAAAAAAAAYywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiLAAAAAAAAGIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1170,
					1,
					"insert",
					{
						"characters": " width"
					},
					"BgAAAGMsAAAAAAAAZCwAAAAAAAAAAAAAZCwAAAAAAABlLAAAAAAAAAAAAABlLAAAAAAAAGYsAAAAAAAAAAAAAGYsAAAAAAAAZywAAAAAAAAAAAAAZywAAAAAAABoLAAAAAAAAAAAAABoLAAAAAAAAGksAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjLAAAAAAAAGMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAANcsAAAAAAAA2CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXLAAAAAAAANcsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1175,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANgsAAAAAAAA2iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYLAAAAAAAANgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1176,
					1,
					"insert",
					{
						"characters": "2*width"
					},
					"BwAAANksAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAADbLAAAAAAAANwsAAAAAAAAAAAAANwsAAAAAAAA3SwAAAAAAAAAAAAA3SwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAN8sAAAAAAAAAAAAAN8sAAAAAAAA4CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZLAAAAAAAANksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1182,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOEsAAAAAAAA4iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhLAAAAAAAAOEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1185,
					1,
					"left_delete",
					null,
					"AQAAAOEsAAAAAAAA4SwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiLAAAAAAAAOIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1186,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOEsAAAAAAAA4iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhLAAAAAAAAOEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOIsAAAAAAAA4ywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiLAAAAAAAAOIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1188,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOMsAAAAAAAA5SwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjLAAAAAAAAOMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1189,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOMsAAAAAAAA4ywAAAAAAAABAAAAJ+MsAAAAAAAA4ywAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkLAAAAAAAAOQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1190,
					1,
					"insert",
					{
						"characters": "width*n"
					},
					"BwAAAOMsAAAAAAAA5CwAAAAAAAAAAAAA5CwAAAAAAADlLAAAAAAAAAAAAADlLAAAAAAAAOYsAAAAAAAAAAAAAOYsAAAAAAAA5ywAAAAAAAAAAAAA5ywAAAAAAADoLAAAAAAAAAAAAADoLAAAAAAAAOksAAAAAAAAAAAAAOksAAAAAAAA6iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjLAAAAAAAAOMsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOssAAAAAAAA7CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrLAAAAAAAAOssAAAAAAAAAAAAAAAA8L8"
				],
				[
					1221,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAACAtAAAAAAAAIS0AAAAAAAAAAAAAIS0AAAAAAAAhLQAAAAAAAAEAAAByIS0AAAAAAAAiLQAAAAAAAAAAAAAiLQAAAAAAACMtAAAAAAAAAAAAACMtAAAAAAAAJC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgLQAAAAAAACEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1228,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAJktAAAAAAAAmi0AAAAAAAAAAAAAmi0AAAAAAACaLQAAAAAAAAEAAABymi0AAAAAAACbLQAAAAAAAAAAAACbLQAAAAAAAJwtAAAAAAAAAAAAAJwtAAAAAAAAnS0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZLQAAAAAAAJotAAAAAAAAAAAAAAAA8L8"
				],
				[
					1233,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAJAtAAAAAAAAkS0AAAAAAAAAAAAAkS0AAAAAAACRLQAAAAAAAAEAAABykS0AAAAAAACSLQAAAAAAAAAAAACSLQAAAAAAAJMtAAAAAAAAAAAAAJMtAAAAAAAAlC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQLQAAAAAAAJEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1239,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BQAAAHUtAAAAAAAAdi0AAAAAAAAAAAAAdi0AAAAAAAB2LQAAAAAAAAEAAABydi0AAAAAAAB3LQAAAAAAAAAAAAB3LQAAAAAAAHgtAAAAAAAAAAAAAHgtAAAAAAAAeS0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1LQAAAAAAAHYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1252,
					1,
					"insert",
					{
						"characters": "\n\nrect.align"
					},
					"DwAAAPIsAAAAAAAA8ywAAAAAAAAAAAAA8ywAAAAAAAD3LAAAAAAAAAAAAAD3LAAAAAAAAPgsAAAAAAAAAAAAAPgsAAAAAAAA/CwAAAAAAAAAAAAA8ywAAAAAAADzLAAAAAAAAAQAAAAgICAg+CwAAAAAAAD5LAAAAAAAAAAAAAD5LAAAAAAAAPosAAAAAAAAAAAAAPosAAAAAAAA+ywAAAAAAAAAAAAA+ywAAAAAAAD8LAAAAAAAAAAAAAD8LAAAAAAAAP0sAAAAAAAAAAAAAP0sAAAAAAAA/iwAAAAAAAAAAAAA/iwAAAAAAAD/LAAAAAAAAAAAAAD/LAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAS0AAAAAAAAAAAAAAS0AAAAAAAACLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyLAAAAAAAAPIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1253,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAItAAAAAAAABC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACLQAAAAAAAAItAAAAAAAAAAAAAAAA8L8"
				],
				[
					1254,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAAFLQAAAAAAAAYtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADLQAAAAAAAAMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1255,
					1,
					"insert",
					{
						"characters": " Point"
					},
					"BgAAAAYtAAAAAAAABy0AAAAAAAAAAAAABy0AAAAAAAAILQAAAAAAAAAAAAAILQAAAAAAAAktAAAAAAAAAAAAAAktAAAAAAAACi0AAAAAAAAAAAAACi0AAAAAAAALLQAAAAAAAAAAAAALLQAAAAAAAAwtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGLQAAAAAAAAYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1256,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAwtAAAAAAAADi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMLQAAAAAAAAwtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1257,
					1,
					"insert",
					{
						"characters": "0,0"
					},
					"AwAAAA0tAAAAAAAADi0AAAAAAAAAAAAADi0AAAAAAAAPLQAAAAAAAAAAAAAPLQAAAAAAABAtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANLQAAAAAAAA0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1259,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABItAAAAAAAAEy0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASLQAAAAAAABItAAAAAAAAAAAAAAAA8L8"
				],
				[
					1270,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAM0tAAAAAAAAzi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNLQAAAAAAAM0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1272,
					1,
					"insert",
					{
						"characters": "/2)"
					},
					"AwAAANItAAAAAAAA0y0AAAAAAAAAAAAA0y0AAAAAAADULQAAAAAAAAAAAADULQAAAAAAANUtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSLQAAAAAAANItAAAAAAAAAAAAAAAA8L8"
				],
				[
					1333,
					1,
					"insert",
					{
						"characters": "\nelt"
					},
					"BgAAAG4sAAAAAAAAbywAAAAAAAAAAAAAbywAAAAAAABzLAAAAAAAAAAAAABzLAAAAAAAAHUsAAAAAAAAAAAAAHUsAAAAAAAAdiwAAAAAAAAAAAAAdiwAAAAAAAB3LAAAAAAAAAAAAAB3LAAAAAAAAHgsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuLAAAAAAAAG4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1334,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgsAAAAAAAAeSwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4LAAAAAAAAHgsAAAAAAAAAAAAAAAA8L8"
				],
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				[
					1335,
					4,
					"left_delete",
					null,
					"BAAAAHgsAAAAAAAAeCwAAAAAAAABAAAAIHcsAAAAAAAAdywAAAAAAAABAAAAdHYsAAAAAAAAdiwAAAAAAAABAAAAbHUsAAAAAAAAdSwAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5LAAAAAAAAHksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1336,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAHUsAAAAAAAAdiwAAAAAAAAAAAAAdiwAAAAAAAB3LAAAAAAAAAAAAAB3LAAAAAAAAHgsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1LAAAAAAAAHUsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1337,
					1,
					"insert",
					{
						"characters": " width;"
					},
<<<<<<< HEAD
					"AQAAANlBAAAAAAAA2kEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZQQAAAAAAANlBAAAAAAAAAAAAAAAAAAA"
=======
					"BwAAAHgsAAAAAAAAeSwAAAAAAAAAAAAAeSwAAAAAAAB6LAAAAAAAAAAAAAB6LAAAAAAAAHssAAAAAAAAAAAAAHssAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAAB9LAAAAAAAAAAAAAB9LAAAAAAAAH4sAAAAAAAAAAAAAH4sAAAAAAAAfywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4LAAAAAAAAHgsAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1338,
					1,
					"insert",
					{
						"characters": "\n"
					},
<<<<<<< HEAD
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAADEQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5QQAAAAAAALlBAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAH8sAAAAAAAAgCwAAAAAAAAAAAAAgCwAAAAAAACGLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/LAAAAAAAAH8sAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1345,
					1,
					"cut",
					null,
					"AQAAAG8sAAAAAAAAbywAAAAAAAARAAAAICAgICAgbGV0IHdpZHRoOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvLAAAAAAAAIAsAAAAAAAAAAAAAAAAAAA"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": " "
					},
<<<<<<< HEAD
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAAC7QQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5QQAAAAAAALlBAAAAAAAAAAAAAAAAVEA"
=======
					"AgAAAJIsAAAAAAAAkywAAAAAAAAAAAAAbywAAAAAAABvLAAAAAAAAAYAAAAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSLAAAAAAAAJIsAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1350,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0sAAAAAAAAjywAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNLAAAAAAAAI0sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1351,
					1,
					"right_delete",
					null,
					"AQAAAI4sAAAAAAAAjiwAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOLAAAAAAAAI4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1356,
					1,
					"left_delete",
					null,
					"AQAAAI0sAAAAAAAAjSwAAAAAAAABAAAAew",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOLAAAAAAAAI4sAAAAAAAA////////738"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "width"
					},
					"BgAAAN0tAAAAAAAA3i0AAAAAAAAAAAAA3i0AAAAAAADeLQAAAAAAAAQAAABzdGVw3i0AAAAAAADfLQAAAAAAAAAAAADfLQAAAAAAAOAtAAAAAAAAAAAAAOAtAAAAAAAA4S0AAAAAAAAAAAAA4S0AAAAAAADiLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdLQAAAAAAAOEtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1404,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdLQAAAAAAAOItAAAAAAAAAAAAAAAA8L8"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAOItAAAAAAAA4y0AAAAAAAAAAAAA4y0AAAAAAADkLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiLQAAAAAAAOItAAAAAAAAAAAAAAAA8L8"
				],
				[
					1408,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOQtAAAAAAAA5S0AAAAAAAAAAAAA5S0AAAAAAADmLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkLQAAAAAAAOQtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAP8sAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAABLQAAAAAAAAAAAAABLQAAAAAAAAItAAAAAAAAAAAAAAItAAAAAAAAAy0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/LAAAAAAAAP8sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1461,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAMtAAAAAAAABC0AAAAAAAAAAAAABC0AAAAAAAAFLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADLQAAAAAAAAMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUtAAAAAAAABi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFLQAAAAAAAAUtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1487,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAN0tAAAAAAAA3i0AAAAAAAAAAAAA3i0AAAAAAADeLQAAAAAAAAEAAAAy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdLQAAAAAAAN4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1490,
					1,
					"cut",
					null,
					"AQAAANMtAAAAAAAA0y0AAAAAAAALAAAAICsgc3RlcCAvIDQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeLQAAAAAAANMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1491,
					1,
					"paste",
					null,
					"AQAAANMtAAAAAAAA3i0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTLQAAAAAAANMtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1496,
					1,
					"paste",
					null,
					"AQAAAMctAAAAAAAA0i0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHLQAAAAAAAMctAAAAAAAAAAAAAAAA8L8"
				],
				[
					1499,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AgAAAMgtAAAAAAAAyS0AAAAAAAAAAAAAyS0AAAAAAADJLQAAAAAAAAEAAAAr",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJLQAAAAAAAMgtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1523,
					2,
					"left_delete",
					null,
					"AgAAAFgtAAAAAAAAWC0AAAAAAAABAAAAKlctAAAAAAAAVy0AAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZLQAAAAAAAFktAAAAAAAAAAAAAAAA8L8"
				],
				[
					1525,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAFUtAAAAAAAAVi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVLQAAAAAAAFUtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1528,
					2,
					"left_delete",
					null,
					"AgAAAFwtAAAAAAAAXC0AAAAAAAABAAAAL1stAAAAAAAAWy0AAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdLQAAAAAAAF0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1529,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
<<<<<<< HEAD
					"AQAAALtBAAAAAAAAvUEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7QQAAAAAAALtBAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAFstAAAAAAAAXS0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbLQAAAAAAAFstAAAAAAAAAAAAAAAA8L8"
				],
				[
					1531,
					2,
					"left_delete",
					null,
					"AgAAAFwtAAAAAAAAXC0AAAAAAAABAAAAKVstAAAAAAAAWy0AAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdLQAAAAAAAF0tAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": ")"
					},
<<<<<<< HEAD
					"BAAAALxBAAAAAAAAvUEAAAAAAAAAAAAAvUEAAAAAAAC+QQAAAAAAAAAAAAC+QQAAAAAAAL9BAAAAAAAAAAAAAL9BAAAAAAAAwEEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8QQAAAAAAALxBAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAFstAAAAAAAAXC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbLQAAAAAAAFstAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1548,
					1,
					"insert",
					{
						"characters": "\n"
					},
<<<<<<< HEAD
					"AwAAAMBBAAAAAAAAwUEAAAAAAAAAAAAAwUEAAAAAAADCQQAAAAAAAAAAAADCQQAAAAAAAMNBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAQQAAAAAAAMBBAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAF0tAAAAAAAAXi0AAAAAAAAAAAAAXi0AAAAAAABkLQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdLQAAAAAAAF0tAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1551,
					1,
					"insert",
					{
						"characters": "let"
					},
<<<<<<< HEAD
					"CwAAAMNBAAAAAAAAxEEAAAAAAAAAAAAAxEEAAAAAAADFQQAAAAAAAAAAAADFQQAAAAAAAMZBAAAAAAAAAAAAAMZBAAAAAAAAx0EAAAAAAAAAAAAAx0EAAAAAAADIQQAAAAAAAAAAAADIQQAAAAAAAMlBAAAAAAAAAAAAAMlBAAAAAAAAykEAAAAAAAAAAAAAykEAAAAAAADLQQAAAAAAAAAAAADLQQAAAAAAAMxBAAAAAAAAAAAAAMxBAAAAAAAAzUEAAAAAAAAAAAAAzUEAAAAAAADOQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDQQAAAAAAAMNBAAAAAAAAAAAAAAAA8L8"
=======
					"AwAAAGQtAAAAAAAAZS0AAAAAAAAAAAAAZS0AAAAAAABmLQAAAAAAAAAAAABmLQAAAAAAAGctAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkLQAAAAAAAGQtAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				],
				[
					1552,
					1,
					"insert",
					{
						"characters": " slope="
					},
					"BwAAAGctAAAAAAAAaC0AAAAAAAAAAAAAaC0AAAAAAABpLQAAAAAAAAAAAABpLQAAAAAAAGotAAAAAAAAAAAAAGotAAAAAAAAay0AAAAAAAAAAAAAay0AAAAAAABsLQAAAAAAAAAAAABsLQAAAAAAAG0tAAAAAAAAAAAAAG0tAAAAAAAAbi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnLQAAAAAAAGctAAAAAAAAAAAAAAAA8L8"
				],
				[
					1553,
					1,
					"paste",
					null,
					"AQAAAG4tAAAAAAAAdi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuLQAAAAAAAG4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1554,
					1,
					"left_delete",
					null,
					"AQAAAHUtAAAAAAAAdS0AAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2LQAAAAAAAHYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1555,
					1,
					"insert",
					{
						"characters": "2;"
					},
					"AgAAAHUtAAAAAAAAdi0AAAAAAAAAAAAAdi0AAAAAAAB3LQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1LQAAAAAAAHUtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1565,
					1,
					"paste",
					null,
					"AgAAAOItAAAAAAAA5y0AAAAAAAAAAAAA5y0AAAAAAADnLQAAAAAAAAQAAABzdGVw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiLQAAAAAAAOYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAOotAAAAAAAA6y0AAAAAAAAAAAAA6y0AAAAAAADrLQAAAAAAAAEAAAA0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqLQAAAAAAAOstAAAAAAAAAAAAAAAA8L8"
				],
				[
					1575,
					1,
					"paste",
					null,
<<<<<<< HEAD
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6QQAAAAAAAPpBAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANBZAAAAAAAA0VkAAAAAAAAAAAAA0VkAAAAAAADRWQAAAAAAACYAAAAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3RceDFiJyk7Cg",
					"AQAAAAAAAAABAAAA0FkAAAAAAAD2WQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ",.ws"
					},
					"BAAAAFZaAAAAAAAAV1oAAAAAAAAAAAAAV1oAAAAAAABYWgAAAAAAAAAAAABYWgAAAAAAAFlaAAAAAAAAAAAAAFlaAAAAAAAAWloAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVloAAAAAAABWWgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					3,
					"left_delete",
					null,
					"AwAAAFlaAAAAAAAAWVoAAAAAAAABAAAAc1haAAAAAAAAWFoAAAAAAAABAAAAd1daAAAAAAAAV1oAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAWloAAAAAAABaWgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": ",ws"
					},
					"AwAAAFdaAAAAAAAAWFoAAAAAAAAAAAAAWFoAAAAAAABZWgAAAAAAAAAAAABZWgAAAAAAAFpaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV1oAAAAAAABXWgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					3,
					"left_delete",
					null,
					"AwAAAFlaAAAAAAAAWVoAAAAAAAABAAAAc1haAAAAAAAAWFoAAAAAAAABAAAAd1daAAAAAAAAV1oAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAWloAAAAAAABaWgAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAFdaAAAAAAAAWFoAAAAAAAAAAAAAWFoAAAAAAABZWgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV1oAAAAAAABXWgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ",tls"
					},
					"BAAAAP5ZAAAAAAAA/1kAAAAAAAAAAAAA/1kAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAAFaAAAAAAAAAAAAAAFaAAAAAAAAAloAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lkAAAAAAAD+WQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					2,
					"left_delete",
					null,
					"AgAAAFxaAAAAAAAAXFoAAAAAAAABAAAAc1taAAAAAAAAW1oAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAXVoAAAAAAABdWgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " tls"
					},
					"BAAAAFtaAAAAAAAAXFoAAAAAAAAAAAAAXFoAAAAAAABdWgAAAAAAAAAAAABdWgAAAAAAAF5aAAAAAAAAAAAAAF5aAAAAAAAAX1oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW1oAAAAAAABbWgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "{data,"
					},
					"BgAAAKZ+AAAAAAAAp34AAAAAAAAAAAAAp34AAAAAAACofgAAAAAAAAAAAACofgAAAAAAAKl+AAAAAAAAAAAAAKl+AAAAAAAAqn4AAAAAAAAAAAAAqn4AAAAAAACrfgAAAAAAAAAAAACrfgAAAAAAAKx+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApn4AAAAAAACmfgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					5,
					"right_delete",
					null,
					"BQAAAK9+AAAAAAAAr34AAAAAAAABAAAAIK9+AAAAAAAAr34AAAAAAAABAAAAZK9+AAAAAAAAr34AAAAAAAABAAAAYa9+AAAAAAAAr34AAAAAAAABAAAAdK9+AAAAAAAAr34AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAr34AAAAAAACvfgAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAK9+AAAAAAAAsH4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAr34AAAAAAACvfgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAK5+AAAAAAAArn4AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAr34AAAAAAACvfgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "define"
					},
					"BgAAAGRaAAAAAAAAZVoAAAAAAAAAAAAAZVoAAAAAAABmWgAAAAAAAAAAAABmWgAAAAAAAGdaAAAAAAAAAAAAAGdaAAAAAAAAaFoAAAAAAAAAAAAAaFoAAAAAAABpWgAAAAAAAAAAAABpWgAAAAAAAGpaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZFoAAAAAAABkWgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGpaAAAAAAAAbFoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaloAAAAAAABqWgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "ws,"
					},
					"AwAAAGtaAAAAAAAAbFoAAAAAAAAAAAAAbFoAAAAAAABtWgAAAAAAAAAAAABtWgAAAAAAAG5aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa1oAAAAAAABrWgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
=======
					"AgAAAPotAAAAAAAA/y0AAAAAAAAAAAAA/y0AAAAAAAD/LQAAAAAAAAQAAABzdGVw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6LQAAAAAAAP4tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1580,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAAIuAAAAAAAAAy4AAAAAAAAAAAAAAy4AAAAAAAADLgAAAAAAAAEAAAA0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACLgAAAAAAAAMuAAAAAAAAAAAAAAAA8L8"
				],
				[
					1592,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHYtAAAAAAAAeC0AAAAAAAAAAAAAcy0AAAAAAAB1LQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzLQAAAAAAAHYtAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/eagle/common.js",
			"settings":
			{
				"buffer_size": 3938,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
			"settings":
			{
				"buffer_size": 112388,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/geom/rect.js",
			"settings":
			{
				"buffer_size": 16523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/geom/line.js",
			"settings":
			{
				"buffer_size": 15165,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGMpAAAAAAAAZCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjKQAAAAAAAGMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAAGQpAAAAAAAAFSoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkKQAAAAAAAGQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"paste",
					null,
					"AgAAAGUpAAAAAAAAaSkAAAAAAAAAAAAAaSkAAAAAAABpKQAAAAAAAAQAAABSZWN0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlKQAAAAAAAGkpAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"paste",
					null,
					"AgAAAKIpAAAAAAAApikAAAAAAAAAAAAApikAAAAAAACmKQAAAAAAAAQAAABSZWN0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiKQAAAAAAAKYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAL8pAAAAAAAAwCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/KQAAAAAAAL8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMUpAAAAAAAAxikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFKQAAAAAAAMUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "x2"
					},
					"AwAAAMopAAAAAAAAyykAAAAAAAAAAAAAyykAAAAAAADLKQAAAAAAAAUAAAB3aWR0aMspAAAAAAAAzCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKKQAAAAAAAM8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "y2"
					},
					"AwAAANApAAAAAAAA0SkAAAAAAAAAAAAA0SkAAAAAAADRKQAAAAAAAAYAAABoZWlnaHTRKQAAAAAAANIpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQKQAAAAAAANYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABAqAAAAAAAAESoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQKgAAAAAAABAqAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/lib/repl.js",
			"settings":
			{
				"buffer_size": 60514,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/via.js",
			"settings":
			{
				"buffer_size": 2696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/wire.js",
			"settings":
			{
				"buffer_size": 1800,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
					1,
					"insert",
					{
						"characters": " "
					},
<<<<<<< HEAD
					"AQAAAG5aAAAAAAAAb1oAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbloAAAAAAABuWgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG9aAAAAAAAAcVoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb1oAAAAAAABvWgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
=======
					"AgAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC3BgAAAAAAAAsAAAAgZWxzZSB7CiAgfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2BgAAAAAAAMEGAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
					"insert",
					{
						"characters": " "
					},
<<<<<<< HEAD
					"AQAAAHBaAAAAAAAAcVoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcFoAAAAAAABwWgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					3,
					"right_delete",
					null,
					"AwAAAHFaAAAAAAAAcVoAAAAAAAABAAAAfXFaAAAAAAAAcVoAAAAAAAABAAAAKXFaAAAAAAAAcVoAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcVoAAAAAAABxWgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHFaAAAAAAAAcloAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcVoAAAAAAABxWgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					11,
					"right_delete",
					null,
					"CwAAAHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAd3JaAAAAAAAAcloAAAAAAAABAAAAc3JaAAAAAAAAcloAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAcloAAAAAAAByWgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					10,
					"right_delete",
					null,
					"CgAAAH5aAAAAAAAAfloAAAAAAAABAAAAPX5aAAAAAAAAfloAAAAAAAABAAAAIH5aAAAAAAAAfloAAAAAAAABAAAAZn5aAAAAAAAAfloAAAAAAAABAAAAdX5aAAAAAAAAfloAAAAAAAABAAAAbn5aAAAAAAAAfloAAAAAAAABAAAAY35aAAAAAAAAfloAAAAAAAABAAAAdH5aAAAAAAAAfloAAAAAAAABAAAAaX5aAAAAAAAAfloAAAAAAAABAAAAb35aAAAAAAAAfloAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAfloAAAAAAAB+WgAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAAAlbAAAAAAAACVsAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAClsAAAAAAAAKWwAAAAAAAAAAAAAAwGZA"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "});"
					},
					"AwAAAAlbAAAAAAAAClsAAAAAAAAAAAAAClsAAAAAAAALWwAAAAAAAAAAAAALWwAAAAAAAAxbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACVsAAAAAAAAJWwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAxbAAAAAAAADVsAAAAAAAAAAAAADVsAAAAAAAAVWwAAAAAAAAAAAAANWwAAAAAAAA1bAAAAAAAACAAAACAgICAgICAgDVsAAAAAAAANWwAAAAAAAAAAAAANWwAAAAAAAA5bAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADFsAAAAAAAAMWwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAABzhQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/lib/util.js",
			"settings":
			{
				"buffer_size": 68538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					69,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAJNVAAAAAAAAlFUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAk1UAAAAAAACTVQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " ..."
					},
					"BAAAAJRVAAAAAAAAlVUAAAAAAAAAAAAAlVUAAAAAAACWVQAAAAAAAAAAAACWVQAAAAAAAJdVAAAAAAAAAAAAAJdVAAAAAAAAmFUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlFUAAAAAAACUVQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJlVAAAAAAAAmlUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmVUAAAAAAACZVQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
=======
					"AQAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9BQAAAAAAAP0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAACBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+BQAAAAAAAP4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BAAAAAAAAD8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA5gMAAAAAAADnAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAwAAAAAAAOUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACjAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAwAAAAAAAKEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIMDAAAAAAAAhAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAwAAAAAAAIMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAwAAAAAAAFoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJwFAAAAAAAAnQUAAAAAAAAAAAAAnQUAAAAAAACfBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcBQAAAAAAAJwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAATBwAAaW1wb3J0IHsgQXJjVG8sIFRyYW5zZm9ybWF0aW9uTGlzdCB9IGZyb20gJy4uLy4uL2dlb20uanMnOwppbXBvcnQgeyBoIH0gZnJvbSAnLi4vLi4vcHJlYWN0Lm1qcyc7CmltcG9ydCB7IHVzZVZhbHVlIH0gZnJvbSAnLi4vLi4vcmVwZWF0ZXIvcmVhY3QtaG9va3MuanMnOwppbXBvcnQgeyBFbGVtZW50VG9DbGFzcywgbG9nLCBNYWtlQ29vcmRUcmFuc2Zvcm1lciwgdXNlVHJrbCB9IGZyb20gJy4uL3JlbmRlclV0aWxzLmpzJzsKCmNvbnN0IFJvdW5kVG9NaWwgPSBuID0+IE1hdGgucm91bmQobiAqIDEwMDApIC8gMTAwMDsKCmV4cG9ydCBjb25zdCBXaXJlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCBjb2xvciwgLi4ucHJvcHMgfSkgPT4gewogIGxldCB3aXJlID0KICAgIHVzZVZhbHVlKGFzeW5jIGZ1bmN0aW9uKiAoKSB7CiAgICAgIGZvciBhd2FpdChsZXQgY2hhbmdlIG9mIGRhdGEucmVwZWF0ZXIpIHsKICAgICAgICB5aWVsZCBjaGFuZ2U7CiAgICAgIH0KICAgIH0pIHx8IGRhdGE7CiAgbGV0IHsgbGFiZWxUZXh0LCB0cmFuc2Zvcm0gPSBuZXcgVHJhbnNmb3JtYXRpb25MaXN0KCkgfSA9IG9wdHM7CgogIGxldCBjb29yZEZuID0gdHJhbnNmb3JtID8gTWFrZUNvb3JkVHJhbnNmb3JtZXIodHJhbnNmb3JtKSA6IGkgPT4gaTsKICBsZXQgeyB3aWR0aCwgY3VydmUgPSAnJywgeDEsIHkxLCB4MiwgeTIgfSA9IGNvb3JkRm4od2lyZSk7CiAgbGV0IGxheWVySWQgPSBpc05hTigrd2lyZS5hdHRyaWJ1dGVzLmxheWVyKSA/IHdpcmUuYXR0cmlidXRlcy5sYXllciA6ICt3aXJlLmF0dHJpYnV0ZXMubGF5ZXI7CiAgbGV0IGxheWVyID0gd2lyZS5kb2N1bWVudC5nZXRMYXllcihsYXllcklkKSA/PyB3aXJlLmxheWVyOwogCiAgbG9nKCdXaXJlLnJlbmRlciAnLCB7IGxheWVySWQsIHdpcmUgfSk7CgogIGNvbG9yID8/PSB3aXJlLmdldENvbG9yKCk7CiAKICBsZXQgdmlzaWJsZSA9ICFsYXllciB8fCAneWVzJyA9PSB1c2VUcmtsKGxheWVyLmhhbmRsZXJzLnZpc2libGUpOwogCiAgY29uc3QgZXh0cmFTdHlsZSA9IHsKICAgICdzdHJva2UtbGluZWNhcCc6ICdyb3VuZCcsCiAgICAnc3Ryb2tlLWxpbmVqb2luJzogJ3JvdW5kJwogIH07CiAKICBsZXQgZXh0cmFQcm9wcyA9IHsKICAgIGNsYXNzOiBFbGVtZW50VG9DbGFzcyh3aXJlLCBsYXllci5uYW1lKSwKICAgIHN0cm9rZTogY29sb3IsCiAgICAnc3Ryb2tlLXdpZHRoJzogKyh3aWR0aCA9PSAwID8gMC4xIDogd2lkdGggKiAxKS50b0ZpeGVkKDMpLAogICAgLi4uKGN1cnZlID8geyAnZGF0YS1jdXJ2ZSc6IGN1cnZlIH0gOiB7fSksCiAgICAnZGF0YS1sYXllcic6IGAke2xheWVyLm51bWJlcn0gJHtsYXllci5uYW1lfWAsCiAgICBzdHlsZTogdmlzaWJsZSA/IHsgLi4uZXh0cmFTdHlsZSB9IDogeyAuLi5leHRyYVN0eWxlLCBkaXNwbGF5OiAnbm9uZScgfSwKICAgIC4uLnByb3BzCiAgfTsKICAKICBpZih0cmFuc2Zvcm0ubGVuZ3RoID4gMCkgZXh0cmFQcm9wcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07CgogIGxldCBkID0gYE0gJHt4MX0gJHt5MX0gTCAke3gyfSAke3kyfWA7CiAgIAogICBpZighaXNOYU4oK2N1cnZlKSAmJiBNYXRoLmFicygrY3VydmUpID4gMCkgewogICAgbGV0IHhkaWZmID0geDIgLSB4MSwKICAgICAgeWRpZmYgPSB5MiAtIHkxOwogICAgZCA9IGBNICR7eDF9ICR7eTF9IGA7CgogICAgZCArPSBBcmNUbyhSb3VuZFRvTWlsKHhkaWZmKSwgUm91bmRUb01pbCh5ZGlmZiksIC1jdXJ2ZSk7CiAgfSAKCiAgcmV0dXJuIGgoJ3BhdGgnLCB7CiAgICBkLAogICAgZmlsbDogJ25vbmUnLAogICAgLi4uZXh0cmFQcm9wcwogIH0pOwp9OwoAAAAAAAAAAAgHAAAAAAAAAAAAAAAAAAAAAAAACAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAALwCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
			"settings":
			{
				"buffer_size": 56743,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/eagle/components/grid.js",
			"settings":
			{
				"buffer_size": 3017,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					20,
					1,
					"toggle_comment",
					{
<<<<<<< HEAD
						"characters": " enumerable:"
					},
					"DAAAAJpVAAAAAAAAm1UAAAAAAAAAAAAAm1UAAAAAAACcVQAAAAAAAAAAAACcVQAAAAAAAJ1VAAAAAAAAAAAAAJ1VAAAAAAAAnlUAAAAAAAAAAAAAnlUAAAAAAACfVQAAAAAAAAAAAACfVQAAAAAAAKBVAAAAAAAAAAAAAKBVAAAAAAAAoVUAAAAAAAAAAAAAoVUAAAAAAACiVQAAAAAAAAAAAACiVQAAAAAAAKNVAAAAAAAAAAAAAKNVAAAAAAAApFUAAAAAAAAAAAAApFUAAAAAAAClVQAAAAAAAAAAAAClVQAAAAAAAKZVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmlUAAAAAAACaVQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAAKZVAAAAAAAAp1UAAAAAAAAAAAAAp1UAAAAAAACoVQAAAAAAAAAAAACoVQAAAAAAAKlVAAAAAAAAAAAAAKlVAAAAAAAAqlUAAAAAAAAAAAAAqlUAAAAAAACrVQAAAAAAAAAAAACrVQAAAAAAAKxVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAplUAAAAAAACmVQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
=======
						"block": true
					},
					"AgAAAOoEAAAAAAAA7AQAAAAAAAAAAAAAQgQAAAAAAABEBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCBAAAAAAAAOoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAADICwAAaW1wb3J0IHsgVHJhbnNmb3JtYXRpb25MaXN0IH0gZnJvbSAnLi4vLi4vZ2VvbS90cmFuc2Zvcm1hdGlvbi5qcyc7CmltcG9ydCB7IHVzZVRya2wgfSBmcm9tICcuLi8uLi9ob29rcy91c2VUcmtsLmpzJzsKaW1wb3J0IHsgZGVmaW5lIH0gZnJvbSAnLi4vLi4vbWlzYy5qcyc7CmltcG9ydCB7IGgsIHVzZVJlZiB9IGZyb20gJy4uLy4uL3ByZWFjdC5tanMnOwppbXBvcnQgeyB1c2VWYWx1ZSB9IGZyb20gJy4uLy4uL3JlcGVhdGVyL3JlYWN0LWhvb2tzLmpzJzsKaW1wb3J0IHsgbG9nLCB1c2VBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vcmVuZGVyVXRpbHMuanMnOwoKZXhwb3J0IGNvbnN0IHVzZUdyaWQgPSBkYXRhID0+IHsKICBjb25zdCBmYWN0b3JzID0geyBpbmNoOiAyNS40LCBtbTogMSB9OwogIGNvbnN0IGNhbGNEaXN0ID0gKHZhbHVlLCB1bml0KSA9PiB7CiAgICAvLyBsb2coJ2NhbGNEaXN0OicsIHsgdmFsdWUsIHVuaXQgfSk7CiAgICBjb25zdCBmID0gZmFjdG9yc1t1bml0XTsKICAgIHJldHVybiB2YWx1ZSAqIGY7CiAgfTsKICBjb25zdCB7IGRpc3RhbmNlLCB1bml0ZGlzdCwgdW5pdCwgc3R5bGUsIG11bHRpcGxlLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSwgYWx0dW5pdGRpc3QsIGFsdHVuaXQgfSA9IHVzZUF0dHJpYnV0ZXMoZGF0YSk7CiAgLy9sb2coJ3VzZUdyaWQ6JywgeyBkaXN0YW5jZSwgdW5pdGRpc3QsIHVuaXQgfSk7CiAgbGV0IHJlc3VsdCA9IHsKICAgIGRpc3RhbmNlOiBjYWxjRGlzdCgrZGlzdGFuY2UsIHVuaXRkaXN0IHx8IHVuaXQpLAogICAgYWx0ZGlzdGFuY2U6IGNhbGNEaXN0KCthbHRkaXN0YW5jZSwgYWx0dW5pdGRpc3QgfHwgYWx0dW5pdCksCiAgICBkaXNwbGF5OiBkaXNwbGF5ID09ICd5ZXMnLAogICAgc3R5bGUsCiAgICBtdWx0aXBsZTogK211bHRpcGxlCiAgfTsKICByZXR1cm4gcmVzdWx0Owp9OwoKZXhwb3J0IGNvbnN0IFBhdHRlcm4gPSAoeyBkYXRhLCBpZCA9ICdwYXR0ZXJuJywgYXR0cnMgPSB7IGNvbG9yOiAnIzAwMDBhYScsIHdpZHRoOiAwLjAxIH0sIC4uLnByb3BzIH0pID0+IHsKICBsb2coJ1BhdHRlcm4ucmVuZGVyICcsIHsgZGF0YSwgaWQsIGF0dHJzLCBwcm9wcyB9KTsKIC8qIGRhdGEgPQogICAgdXNlVmFsdWUoYXN5bmMgZnVuY3Rpb24qICgpIHsKICAgICAgZm9yIGF3YWl0KGxldCBjaGFuZ2Ugb2YgZGF0YS5yZXBlYXRlcikgewogICAgICAgIC8vbG9nKCdjaGFuZ2U6JywgY2hhbmdlKTsKICAgICAgICB5aWVsZCBjaGFuZ2U7CiAgICAgIH0KICAgIH0pIHx8IGRhdGE7Ki8KICBjb25zdCB7IGRpc3RhbmNlID0gMC4xLCBzdHlsZSwgbXVsdGlwbGUgPSAxLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSB9ID0gdXNlR3JpZChkYXRhKTsKCiAgLy9sb2coJ1BhdHRlcm4ucmVuZGVyOicsIHsgZGlzdGFuY2UsIHN0eWxlLCBtdWx0aXBsZSwgZGlzcGxheSwgYWx0ZGlzdGFuY2UgfSk7CiAgbGV0IHBhdHRlcm4gPSB1c2VUcmtsKGF0dHJzKTsKCiAgbGV0IHsgd2lkdGgsIGNvbG9yID0gJyMwMDAwYWEnIH0gPSBwYXR0ZXJuOwogIGxldCByZWYgPQogICAgdXNlUmVmKCkgfHwKICAgICgoKSA9PiB7CiAgICAgIGxldCBjdXJyZW50OwogICAgICBsZXQgcmV0ID0gZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICBsb2coJ1BhdHRlcm4ucmVuZGVyIHZhbHVlID0nLCB2YWx1ZSk7CiAgICAgICAgY3VycmVudCA9IHZhbHVlOwogICAgICB9OwogICAgICBkZWZpbmUocmV0LCB7CiAgICAgICAgZ2V0IGN1cnJlbnQoKSB7CiAgICAgICAgICByZXR1cm4gY3VycmVudDsKICAgICAgICB9LAogICAgICAgIHNldCBjdXJyZW50KHZhbHVlKSB7CiAgICAgICAgICByZXQodmFsdWUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXQ7CiAgICB9KSgpOwoKICBpZihyZWYuY3VycmVudCkgbG9nKCdQYXR0ZXJuLnJlbmRlciByZWYuY3VycmVudCA9JywgcmVmLmN1cnJlbnQpOwoKICBjb25zdCBzaXplID0gZGlzdGFuY2UgKiBtdWx0aXBsZTsKICBsb2coJ1BhdHRlcm4ucmVuZGVyICcsIHsgd2lkdGgsIGNvbG9yLCBzaXplIH0pOwoKICByZXR1cm4gaCgKICAgICdwYXR0ZXJuJywKICAgIHsgaWQsIHdpZHRoOiBzaXplLCBoZWlnaHQ6IHNpemUsIHBhdHRlcm5Vbml0czogJ3VzZXJTcGFjZU9uVXNlJyB9LAogICAgaCgncGF0aCcsIHsKICAgICAgcmVmLAogICAgICBkOiBgTSAke3NpemV9LDAgTCAwLDAgTCAwLCR7c2l6ZX1gLAogICAgICBmaWxsOiAnbm9uZScsCiAgICAgIHN0cm9rZTogY29sb3IsCiAgICAgIC8vICAndmVjdG9yLWVmZmVjdCc6ICdub24tc2NhbGluZy1zdHJva2UnLAogICAgICAnc3Ryb2tlLXdpZHRoJzogc3R5bGUgPT0gJ2RvdHMnID8gd2lkdGggKiAyIDogd2lkdGgsCiAgICAgICdzdHJva2UtZGFzaGFycmF5Jzogc3R5bGUgPT0gJ2RvdHMnID8gYCR7d2lkdGh9ICAke3NpemUgKiA0fWAgOiBgJHtzaXplICogMn1gCiAgICB9KQogICk7Cn07CgpleHBvcnQgY29uc3QgR3JpZCA9ICh7IGRhdGEsIHJlY3QsIGlkLCBhdHRycyA9IHsgdmlzaWJsZTogdHJ1ZSB9LCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+IHsKICBsZXQgeyB0cmFuc2Zvcm0gPSBuZXcgVHJhbnNmb3JtYXRpb25MaXN0KCkgfSA9IG9wdHM7CiAgY29uc3QgeyBkaXN0YW5jZSwgc3R5bGUsIG11bHRpcGxlLCBkaXNwbGF5LCBhbHRkaXN0YW5jZSB9ID0gdXNlR3JpZChkYXRhKTsKICBsb2coJ0dyaWQucmVuZGVyOicsIHsgZGF0YSwgcmVjdCwgYXR0cnMsIG9wdHMsIHByb3BzIH0pOwoKICBsZXQgZ3JpZCA9IHR5cGVvZiBhdHRycyA9PSAnZnVuY3Rpb24nID8gYXR0cnMoKSA6IGF0dHJzOwogIC8vbGV0IHJlZiA9IHVzZVJlZigpOwogIGxvZygnR3JpZC5yZW5kZXIgJywgeyBncmlkIH0pOwogIHJldHVybiBoKCdyZWN0JywgewogICAgLy9yZWYsCiAgICBzdHJva2U6ICdub25lJywKICAgIGZpbGw6IGB1cmwoIyR7aWR9KWAsCiAgICBzdHlsZTogZ3JpZC52aXNpYmxlID8ge30gOiB7IGRpc3BsYXk6ICdub25lJyB9LAogICAgLi4ucmVjdC50b09iamVjdCgpLAogICAgdHJhbnNmb3JtCiAgfSk7Cn07CgAAAAAAAAAAyQsAAAAAAAAAAAAAAAAAAAAAAADJCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEBAAAAAAAAOwEAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/eagle/schematicRenderer.js",
			"settings":
			{
				"buffer_size": 6156,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAD0UAAAAAAAAPRQAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FAAAAAAAAD0UAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAD0UAAAAAAAAPhQAAAAAAAAAAAAAPhQAAAAAAAA/FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FAAAAAAAAD0UAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
					1,
					"insert",
					{
						"characters": " }"
					},
<<<<<<< HEAD
					"AgAAAKxVAAAAAAAArVUAAAAAAAAAAAAArVUAAAAAAACuVQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArFUAAAAAAACsVQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/src/minnet-websocket.c",
			"settings":
			{
				"buffer_size": 18999,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAADgyAAAAAAAAODIAAAAAAABCAAAAICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJzc2wiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfU1NMKSwK",
					"AQAAAAAAAAABAAAAODIAAAAAAAB6MgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"paste",
					null,
					"AgAAADgyAAAAAAAAejIAAAAAAAAAAAAAejIAAAAAAAC8MgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAODIAAAAAAAA4MgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "tls"
					},
					"BAAAAJQyAAAAAAAAlTIAAAAAAAAAAAAAlTIAAAAAAACVMgAAAAAAAAMAAABzc2yVMgAAAAAAAJYyAAAAAAAAAAAAAJYyAAAAAAAAlzIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlDIAAAAAAACXMgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJgyAAAAAAAAmTIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmDIAAAAAAACYMgAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAJgyAAAAAAAAmDIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAmTIAAAAAAACZMgAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAAMAyAAAAAAAAwDIAAAAAAAAgAAAASlNfQUxJQVNfREVGKCJ0bHMiLCAic3NsIiksCiAgICA",
					"AQAAAAAAAAABAAAAwDIAAAAAAADgMgAAAAAAAAAAAAAAADxA"
				],
				[
					60,
=======
					"AgAAAD8UAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABCFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/FAAAAAAAAD8UAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAAwYAAAAAAAADRgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCFAAAAAAAAEIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAF4UAAAAAAAAXhQAAAAAAAAEAAAAbGlzdF0UAAAAAAAAXRQAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeFAAAAAAAAGIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAFMUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABVFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTFAAAAAAAAFMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAFQUAAAAAAAAVBQAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVFAAAAAAAAFUUAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " ??"
					},
					"AwAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeFAAAAAAAAF4UAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
					1,
					"insert",
					{
						"characters": " "
					},
<<<<<<< HEAD
					"AgAAADgyAAAAAAAAOTIAAAAAAAAAAAAAOTIAAAAAAAA5MgAAAAAAAEIAAAAgICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInNzbCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9TU0wpLAo",
					"AQAAAAAAAAABAAAAODIAAAAAAAB6MgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"",
					null,
					"AwAAAGsyAAAAAAAAeDIAAAAAAAANAAAAV0VCU09DS0VUX1NTTKYiAAAAAAAAsyIAAAAAAAANAAAAV0VCU09DS0VUX1NTTDkCAAAAAAAARgIAAAAAAAANAAAAV0VCU09DS0VUX1NTTA",
					"AQAAAAAAAAABAAAAazIAAAAAAAB4MgAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAH0yAAAAAAAAfTIAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAfzIAAAAAAAB/MgAAAAAAAAAAAAAAADxA"
				],
				[
					88,
					2,
					"right_delete",
					null,
					"AgAAADoyAAAAAAAAOjIAAAAAAAACAAAAICA6MgAAAAAAADoyAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAOjIAAAAAAAA6MgAAAAAAAAAAAAAAACxA"
				],
				[
					91,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAOjIAAAAAAAA6MgAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAOjIAAAAAAAA6MgAAAAAAAAAAAAAAAPC/"
=======
					"AQAAAGEUAAAAAAAAYhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhFAAAAAAAAGEUAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGIUAAAAAAAAZBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiFAAAAAAAAGIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGUUAAAAAAAAZhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlFAAAAAAAAGUUAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FAAAAAAAAD0UAAAAAAAAAAAAAAAA8L8"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"Pretty Shell: Minify"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/eagle",
		"/home/roman/Projects/plot-cv/lib/eagle/components"
	],
	"file_history":
	[
<<<<<<< HEAD
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
=======
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/upload-server.js",
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js",
		"/home/janos/Projects/plot-cv/doc-scanner.js",
		"/home/janos/Projects/plot-cv/config.js",
		"/home/janos/Projects/plot-cv/deconflict.js",
		"/home/janos/Projects/plot-cv/debuggerprotocol.js",
		"/home/janos/Projects/plot-cv/debugger.js",
		"/home/janos/Projects/plot-cv/convert-imports.js",
		"/home/janos/Projects/plot-cv/esparse.js",
		"/home/janos/Projects/plot-cv/extract-structs.js",
		"/home/janos/Projects/plot-cv/fetch-post-prices.js",
		"/home/janos/Projects/plot-cv/ffi.js",
		"/home/janos/Projects/plot-cv/fontsample.js",
		"/home/janos/Projects/plot-cv/grammar-arith.js",
		"/home/janos/Projects/plot-cv/grammar-C.js",
		"/home/janos/Projects/plot-cv/grammar-c.js",
		"/home/janos/Projects/plot-cv/grammar-css3.js",
		"/home/janos/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Projects/plot-cv/grammar-INI.js",
		"/home/janos/Projects/plot-cv/httpd.js",
		"/home/janos/Projects/plot-cv/ini-grammar.js",
		"/home/janos/Projects/plot-cv/io-helpers.js",
		"/home/janos/Projects/plot-cv/list-directory.js",
		"/home/janos/Projects/plot-cv/list-exports.js",
		"/home/janos/Projects/plot-cv/list-exports2.js",
		"/home/janos/Projects/plot-cv/load-ast.js",
		"/home/janos/Projects/plot-cv/meriyah.js",
		"/home/janos/Projects/plot-cv/workertest.js",
		"/home/janos/Projects/plot-cv/worker.js",
		"/home/janos/Projects/plot-cv/userscript-test.js",
		"/home/janos/Projects/plot-cv/upload.html",
		"/home/janos/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/untar.c",
		"/home/janos/Projects/plot-cv/tmpx.js",
		"/home/janos/Projects/plot-cv/test-xml.js",
		"/home/janos/Projects/plot-cv/test-wru.js",
		"/home/janos/Projects/plot-cv/test-websocket.js",
		"/home/janos/Projects/plot-cv/test-voronoi.js",
		"/home/janos/Projects/plot-cv/test-video.js",
		"/home/janos/Projects/plot-cv/test-util.js",
		"/home/janos/Projects/plot-cv/test-utf8.js",
		"/home/janos/Projects/plot-cv/test-umat.js",
		"/home/janos/Projects/plot-cv/test-trkl.js",
		"/home/janos/Projects/plot-cv/test-sqlite3.js",
		"/home/janos/Projects/plot-cv/test-spawn.js",
		"/home/janos/Projects/plot-cv/test-sockets.js",
		"/home/janos/Projects/plot-cv/test-shparse.js",
		"/home/janos/Projects/plot-cv/test-rpc.js",
		"/home/janos/Projects/plot-cv/test-repl.js",
		"/home/janos/Projects/plot-cv/test-renderer.js",
		"/home/janos/Projects/plot-cv/test-readline.js",
		"/home/janos/Projects/plot-cv/test-readdir.js",
		"/home/janos/Projects/plot-cv/test-quickjs.js",
		"/home/janos/Projects/plot-cv/test-proxy.js",
		"/home/janos/Projects/plot-cv/test-pointlist.js",
		"/home/janos/Projects/plot-cv/test-pointer.js",
		"/home/janos/Projects/plot-cv/test-path.js",
		"/home/janos/Projects/plot-cv/test-parsexml.js",
		"/home/janos/Projects/plot-cv/test-parse.js",
		"/home/janos/Projects/plot-cv/test-opencv.js",
		"/home/janos/Projects/plot-cv/test-octagon.js",
		"/home/janos/Projects/plot-cv/test-ngql.js",
		"/home/janos/Projects/plot-cv/test-net.js",
		"/home/janos/Projects/plot-cv/test-mmap.js",
		"/home/janos/Projects/plot-cv/test-minnet.js",
		"/home/janos/Projects/plot-cv/test-meriyah.js",
		"/home/janos/Projects/plot-cv/ol-marker.js",
		"/home/janos/Projects/plot-cv/ol-map.js",
		"/home/janos/Projects/plot-cv/make-bitmap.js",
		"/home/janos/Projects/plot-cv/list-proxies.js",
		"/home/janos/Projects/plot-cv/eagle2gerber.js",
		"/home/janos/Projects/plot-cv/test-exception.js",
		"/home/janos/Projects/plot-cv/test-childprocess.js",
		"/home/janos/Projects/plot-cv/test-bjson.js",
		"/home/janos/Projects/plot-cv/test-ansitrunc.c",
		"/home/janos/Projects/plot-cv/svg-scale.js",
		"/home/janos/Projects/plot-cv/server.js",
		"/home/janos/Projects/plot-cv/search-engine.js",
		"/home/janos/Projects/plot-cv/resolve-imports2.js",
		"/home/janos/Projects/plot-cv/readfile.js",
		"/home/janos/Projects/plot-cv/read-deps.js",
		"/home/janos/Projects/plot-cv/react-simple-code-editor.js",
		"/home/janos/Projects/plot-cv/pcb-conversion.js",
		"/home/janos/Projects/plot-cv/knopf-schwarz-o12mm-cliff-cl178862.html",
		"/home/janos/Projects/plot-cv/dom-helpers.js",
		"/home/janos/Projects/pictest/traced_back.svg",
		"/home/janos/Projects/plot-cv/param.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/output.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/janos/Projects/plot-cv/lib/stream/utils.js",
		"/home/janos/Projects/plot-cv/svg-crop-pad.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_png.js"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			"/home/janos/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,-*/libwebsockets/*",
			"/home/janos/Projects/plot-cv/quickjs/qjs-net/src"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
<<<<<<< HEAD
			"lib",
			"define\\(",
			"define\\b",
			"sendCommand",
			"define",
			"'onMessage'",
			"WEBSOCKET_SSL\\b",
			"WEBSOCKET_SSL",
			"tls",
			"         ",
			"onConnect",
=======
			"align = ",
			"align",
			"round",
			"roun",
			"round",
			"<wire",
			"Line",
			"\\bLine\\b",
			"loadSaveOptions",
			"new REPL",
			"config",
			"width?=\"0\\.0",
			"width?=\"",
			"useValue",
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
			"await ",
			"client_finalize",
			"onClose",
			"exception",
			"current_exce",
			"}\\n\n",
			"}\\n\n([^\\n])",
			"}\\n([^\\n])",
			"}\\n\n([^\\n])",
			"remove",
			"ZipFolder",
			"<<<<",
			"ExecTool",
			"outdir",
			"'str'",
			"optionsArray",
			"Bottom",
			"compact",
			"boxes",
			"join",
			"\nfunction outputBytes(mat) {\n  return '['+[...rowIterator(mat)].map(a => '[ '+[...a].map(n => '0x'+n.toString(16).padStart(2, \n'0')).join(',')+' ],').join('\\n')+']';\n}",
			"cv\\.",
			"writeROI",
			"cvtColor",
			"g",
			"=> ",
			"));",
			"mod\\(",
			"toMap",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"WEBSOCKET_TLS",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
<<<<<<< HEAD
						"buffer_size": 1866,
=======
						"buffer_size": 371,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"regions":
						{
						},
						"selection":
						[
<<<<<<< HEAD
=======
							[
								0,
								0
							]
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"current_file": "/home/janos/Projects/plot-cv/upload-server.js",
							"function_name_status_row": 23,
=======
							"current_file": "/home/roman/Projects/plot-cv/lib/eagle/common.js",
							"function_name_status_row": 9,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
<<<<<<< HEAD
								[
									1622,
									1630
								],
								[
									1646,
									1666
								],
								[
									2195,
									2228
								],
								[
									2318,
									2340
								],
								[
									2554,
									2595
								],
								[
									2606,
									2619
								],
								[
									2686,
									2721
								],
								[
									2766,
									2784
								],
								[
									2820,
									2862
								],
								[
									2928,
									2961
								],
								[
									2983,
									2987
								],
								[
									3376,
									3381
								],
								[
									3431,
									3435
								],
								[
									3462,
									3466
								],
								[
									3494,
									3498
								],
								[
									3521,
									3541
								],
								[
									3620,
									3624
								],
								[
									3694,
									3716
								],
								[
									3831,
									3836
								],
								[
									3869,
									3891
								],
								[
									4085,
									4107
								],
								[
									4530,
									4596
								],
								[
									4942,
									4951
								],
								[
									5056,
									5086
								],
								[
									5447,
									5482
								],
								[
									5514,
									5555
								],
								[
									5587,
									5653
								],
								[
									5686,
									5720
								],
								[
									5791,
									5838
								],
								[
									6374,
									6410
								],
								[
									6523,
									6532
								],
								[
									6768,
									6776
								],
								[
									6882,
									6889
								],
								[
									6939,
									6963
								],
								[
									7235,
									7246
								],
								[
									7336,
									7347
								],
								[
									7411,
									7422
								],
								[
									7476,
									7485
								],
								[
									7523,
									7534
								],
								[
									7622,
									7649
								],
								[
									7781,
									7785
								],
								[
									7809,
									7816
								],
								[
									7849,
									7865
								],
								[
									7994,
									8039
								],
								[
									8278,
									8336
								],
								[
									8623,
									8645
								],
								[
									9018,
									9028
								],
								[
									9272,
									9286
								],
								[
									10221,
									10245
								],
								[
									10371,
									10375
								],
								[
									10467,
									10481
								],
								[
									10571,
									10587
								],
								[
									11019,
									11032
								],
								[
									11050,
									11055
								],
								[
									11137,
									11144
								],
								[
									11172,
									11177
								],
								[
									11299,
									11324
								],
								[
									11499,
									11530
								],
								[
									11607,
									11618
								],
								[
									13198,
									13229
								],
								[
									13759,
									13792
								],
								[
									14064,
									14099
								],
								[
									14184,
									14217
								],
								[
									15162,
									15172
								],
								[
									15966,
									15970
								],
								[
									16386,
									16393
								],
								[
									16786,
									16822
								],
								[
									17058,
									17062
								],
								[
									17687,
									17719
								],
								[
									18100,
									18104
								],
								[
									18783,
									18818
								],
								[
									19580,
									19585
								],
								[
									20312,
									20316
								],
								[
									20410,
									20414
								],
								[
									20534,
									20543
								],
								[
									20673,
									20680
								],
								[
									20961,
									20968
								],
								[
									21049,
									21056
								],
								[
									21120,
									21136
								],
								[
									21201,
									21221
								],
								[
									21920,
									21932
								],
								[
									22031,
									22043
								],
								[
									22245,
									22261
								],
								[
									22355,
									22368
								],
								[
									22779,
									22797
								],
								[
									22979,
									22996
								],
								[
									23422,
									23441
								],
								[
									23874,
									23894
								],
								[
									25455,
									25477
								],
								[
									25950,
									25971
								],
								[
									26522,
									26541
								],
								[
									26975,
									26983
								],
								[
									29705,
									29717
								],
								[
									31626,
									31661
								],
								[
									32159,
									32178
								],
								[
									32364,
									32381
								],
								[
									32426,
									32439
								],
								[
									32475,
									32485
								],
								[
									33388,
									33404
								],
								[
									33536,
									33555
								],
								[
									33566,
									33585
								],
								[
									33611,
									33631
=======
								[
									101,
									118
								],
								[
									235,
									255
								],
								[
									277,
									287
								],
								[
									308,
									328
								],
								[
									350,
									371
								],
								[
									536,
									558
								],
								[
									694,
									710
								],
								[
									1180,
									1184
								],
								[
									1209,
									1225
								],
								[
									1625,
									1629
								],
								[
									1656,
									1699
								],
								[
									1710,
									1726
								],
								[
									2253,
									2272
								],
								[
									2484,
									2502
								],
								[
									3280,
									3297
								],
								[
									3369,
									3386
								],
								[
									3448,
									3490
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
								]
							],
							"symlist":
							[
<<<<<<< HEAD
								"  value =>",
								"\t(level, message) =>",
								"AsyncCollect(iter)",
								"GetMime(file)",
								"Matcher(pattern, t = arg => arg)",
								"\t(...args) =>",
								"KeyOrValueMatcher(pattern)",
								"\t([key, value]) =>",
								"GetRootDirectories(pattern = '*')",
								"MakeUUID = (rng = Math.random) =>",
								"  n =>",
								"  dd =>",
								"  d =>",
								"  d =>",
								"  d =>",
								"GetDir(dir)",
								"  n =>",
								"DirName(name)",
								"  it =>",
								"DateStr(date)",
								"ModeStr(mode)",
								"HTMLPage = ({ title, style, scripts = [], children, ...props }) =>",
								"  script =>",
								"FilterForm = ({ ...props }) =>",
								"HTMLTable = ({ rows, ...props }) =>",
								"HTMLTableRow = ({ columns, ...props }) =>",
								"HTMLTableColumn = ({ columns, children, tag = 'td', ...props }) =>",
								"FileLink = ({ file, ...props }) =>",
								"FileObject = ({ file, stat = {}, ...props }) =>",
								"FileTable = ({ files, ...props }) =>",
								"(a, b) =>",
								"  field =>",
								"  file =>",
								"ReadExiv2(file)",
								"([k, v]) =>",
								"([k, v]) =>",
								"([k, v]) =>",
								"(a, b) =>",
								"([k, v]) =>",
								"ReadExiftool(file)",
								"  l =>",
								"  line =>",
								"([line, idx]) =>",
								"HeifConvert(src, dst, quality = 100)",
								"MagickResize(src, dst, rotate = 0, width, height)",
								"  main(...args)",
								"\t(a, v) =>",
								"\t(v, pv, o) =>",
								"\t(module, ...args) =>",
								"  m =>",
								"  .show = arg =>",
								"  .cleanup = () =>",
								"\t(...args) =>",
								"() =>",
								"  puts(s)",
								"() =>",
								"ParseBody(gen)",
								"  .createWS = (url, callbacks) =>",
								"  .out = s =>",
								"  test(req, resp)",
								"  proxy(req, resp)",
								"  config(req, resp)",
								"  file(req, resp)",
								"([dir]) =>",
								"  f =>",
								"  file =>",
								"  uploads(req, resp)",
								"  s =>",
								"  files(req, resp)",
								"  n =>",
								"  files2(req, resp)",
								"\tn =>",
								"  n =>",
								"  n =>",
								"(a, b) =>",
								"  name =>",
								"  file =>",
								"  file =>",
								"([file, rel]) =>",
								"(acc, [file, st]) =>",
								"  string(a, b)",
								"  number(a, b)",
								"([name, obj]) =>",
								"({ name }) =>",
								"  onConnect(ws, req)",
								"  sendCommand(data)",
								"  onClose(ws, reason)",
								"  onRequest(req, resp)",
								"  onOpen(name, filename)",
								"  onContent(name, data)",
								"  onClose(name, file)",
								"  f = x =>",
								"  onFinalize()",
								"\t(match, p1, p0, p2, p3, offset) =>",
								"  onMessage(ws, data)",
								"  get connections()",
								"  get by_uuid()",
								"  uuid(data)",
								"  onFd(fd, rd, wr)",
								"  onClose(ws, reason)",
								"  onMessage(ws, data)",
								"  quit(why)"
=======
								"  isBrowser = () =>",
								"  concat: (...args) =>",
								"  text: t =>",
								"  concat: (...args) =>",
								"  text: (t, ...ansi) =>",
								"  dingbatCode = digit =>",
								"  m = (r, g, b) =>",
								"  c =>",
								"  m = (r, g, b) =>",
								"  c =>",
								"  dump = (o, depth = 2, breakLength = 400) =>",
								"  isElement = o =>",
								"  parseArgs = args =>",
								"  .predicate = it =>",
								"  .predicate = v =>",
								"  .predicate = v =>",
								"  traverse = function*(obj, path = [], doc)"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698828353.71,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
<<<<<<< HEAD
					"file": "upload-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33962,
=======
					"file": "eagle2svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2302,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"regions":
						{
						},
						"selection":
						[
							[
<<<<<<< HEAD
								945,
								948
=======
								524,
								524
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"function_name_status_row": 18,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697964153.55,
=======
							"function_name_status_row": 12,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698819462.92,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
<<<<<<< HEAD
						"translation.y": 252.0,
=======
						"translation.y": 180.0,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
<<<<<<< HEAD
					"file": "quickjs/qjs-modules/lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68538,
=======
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38585,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"regions":
						{
							"col_00AFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										14287,
										14300
									]
								],
								"scope": "col_00AFFFFF"
							},
							"col_00AFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00AFFFFF_circle.png",
								"regions":
								[
									[
										14221,
										14221
									]
								],
								"scope": "col_gutter"
							},
							"col_D700FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										14263,
										14277
									]
								],
								"scope": "col_D700FFFF"
							},
							"col_D700FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D700FFFF_circle.png",
								"regions":
								[
									[
										14221,
										14221
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										30907,
										30914
									],
									[
										31767,
										31771
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										30867,
										30867
									],
									[
										31752,
										31752
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
<<<<<<< HEAD
								21760,
								21732
=======
								11318,
								11318
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"function_name_status_row": 705,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697955546.1,
=======
							"function_name_status_row": 410,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698855673.32,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
<<<<<<< HEAD
						"translation.y": 9475.0,
=======
						"translation.y": 8077.0,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
<<<<<<< HEAD
					"file": "quickjs/qjs-net/src/minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18999,
=======
					"file": "lib/eagle/common.js",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3938,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"regions":
						{
						},
						"selection":
						[
							[
<<<<<<< HEAD
								12858,
								12858
=======
								0,
								0
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
<<<<<<< HEAD
							"function_name_status_row": 495,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697955175.64,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6507.0,
=======
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698864841.83,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/roman/Projects/an-tronics/eagle/lbr/l.lbr",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112388,
						"regions":
						{
						},
						"selection":
						[
							[
								84799,
								84799
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1118,
							"show_line_column": "disabled",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tabs_extra_last_activated": 1698832057.16,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 22017.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/geom/rect.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16523,
						"regions":
						{
						},
						"selection":
						[
							[
								10772,
								10777
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 375,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698829497.96,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6992.0,
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
<<<<<<< HEAD
=======
				},
				{
					"buffer": 6,
					"file": "lib/geom/line.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15165,
						"regions":
						{
						},
						"selection":
						[
							[
								10452,
								10461
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 337,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698829319.06,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6252.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "quickjs/qjs-modules/lib/repl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60514,
						"regions":
						{
						},
						"selection":
						[
							[
								7767,
								7782
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 241,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698828323.35,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4398.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/eagle/components/via.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2696,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698819463.76,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/eagle/components/wire.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1800,
						"regions":
						{
						},
						"selection":
						[
							[
								639,
								700
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 17,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698819138.89,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 120.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/roman/Projects/an-tronics/eagle/RX-FM-Radio-1.5V-dip.brd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56743,
						"regions":
						{
						},
						"selection":
						[
							[
								20699,
								20798
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 220,
							"show_line_column": "disabled",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tabs_extra_last_activated": 1698828579.74,
							"tabs_extra_last_activated_sheet_index": 6
						},
						"translation.x": 0.0,
						"translation.y": 8220.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/eagle/components/grid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3017,
						"regions":
						{
						},
						"selection":
						[
							[
								1092,
								1260
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 28,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698815076.87,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/eagle/schematicRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6156,
						"regions":
						{
						},
						"selection":
						[
							[
								5181,
								5181
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 165,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1698803260.71,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2195.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
<<<<<<< HEAD
				"/util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"minnet-we",
				"quickjs/qjs-net/src/minnet-websocket.c"
=======
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
>>>>>>> 30be9d38fbfbc0224edea9eccf160e443473dfb0
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
