{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Argu",
				"ArgumentType"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"exists",
				"existsAndNotEmpty"
			],
			[
				"RETURN_",
				"RETURN_VALUE_PATH"
			],
			[
				"constr",
				"constructor"
			],
			[
				"RE",
				"deep.RETURN_VALUE_PATH"
			],
			[
				"CXXRec",
				"CXXRecordDecl"
			],
			[
				"CXXReco",
				"CXXRecordDecl"
			],
			[
				"des",
				"desugared"
			],
			[
				"con",
				"constructor"
			],
			[
				"jsm_start_",
				"jsm_start_interactive3"
			],
			[
				"by",
				"byobRequest"
			],
			[
				"Read",
				"ReadableStreamBYOBRequest"
			],
			[
				"js_by",
				"js_readable_byob_request"
			],
			[
				"BY",
				"BYOB_REQUEST_METHOD_RESPONDWITHNEWVIEW"
			],
			[
				"JS_",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Get",
				"JS_GetPropertyUint32"
			],
			[
				"is_",
				"is_exception"
			],
			[
				"JS_T",
				"JS_ThrowInternalError"
			],
			[
				"Repe",
				"RepeaterItem"
			],
			[
				"WRITER_PROP",
				"WRITER_PROP_READY"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"Der",
				"DereferenceError"
			],
			[
				"Dere",
				"DereferenceError"
			],
			[
				"Is",
				"IsPunctuator"
			],
			[
				"js_magic_fun",
				"js_magic_function"
			],
			[
				"js_queue_iter",
				"js_queue_iterator_class_id"
			],
			[
				"js_queue_itreat",
				"js_queue_iterator_class_id"
			],
			[
				"js_",
				"js_archive_mode"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"ENTRY_IS",
				"ENTRY_ISDATAENCRYPTED"
			],
			[
				"js_archivema",
				"js_archivematch_class_id"
			],
			[
				"JS_NewObjec",
				"JS_NewObjectProtoClass"
			],
			[
				"Module",
				"ModuleLoaderContext"
			],
			[
				"JS_Th",
				"JS_ThrowTypeError"
			],
			[
				"ModuleLo",
				"ModuleLoaderContext"
			],
			[
				"escape",
				"escape_noquote_tab"
			],
			[
				"max",
				"max_array_length"
			],
			[
				"tty",
				"tty_set_raw"
			],
			[
				"getOwnPrope",
				"getOwnPropertyDescriptor"
			],
			[
				"PATH_SKIP",
				"PATH_SKIP_SEPARATOR"
			],
			[
				"ListIterat",
				"ListIteratorKind"
			],
			[
				"_f",
				"_wfindnext64"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_PROP_",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"js_sock",
				"js_sockaddr_data"
			],
			[
				"SET_",
				"SET_CONSOLE_MODE"
			],
			[
				"ERA",
				"ERASE_IN_LINE"
			],
			[
				"js_misc_set",
				"js_misc_settextattr"
			],
			[
				"dw",
				"dwCursorPosition"
			],
			[
				"prop",
				"property_recursion_top"
			],
			[
				"property_enumer",
				"property_enumeration_index"
			],
			[
				"INT",
				"INSPECT_INT32T_INRANGE"
			],
			[
				"js_inspect_print_arra",
				"js_inspect_print_arraybuffer2"
			],
			[
				"is_a",
				"is_arraybuffer"
			],
			[
				"fmt",
				"fmt_ulong"
			],
			[
				"inspec",
				"inspect_newline2"
			],
			[
				"property_",
				"property_recursion_top"
			],
			[
				"js_inspec",
				"js_inspect_print_value"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"mysql_op",
				"mysql_optionsv"
			],
			[
				"MY",
				"MYSQLConnectParameters"
			],
			[
				"js_connect",
				"js_connectparams_class_id"
			],
			[
				"js_conn",
				"js_connectparams_from"
			],
			[
				"MYSQL",
				"MYSQLConnectParameters"
			],
			[
				"mysql_get",
				"mysql_get_socket"
			],
			[
				"async",
				"asyncclosure_resolve"
			],
			[
				"res",
				"resolving_funcs"
			],
			[
				"HAVE_LIB",
				"HAVE_LIBMARIADBCLIENT"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"FileDesc",
				"FileDescriptorHandlers"
			],
			[
				"js_generat",
				"js_generator_prototype"
			],
			[
				"tab_",
				"tab_atom_len"
			],
			[
				"proper",
				"property_recursion_pop"
			],
			[
				"property_rec",
				"property_recursion_top"
			],
			[
				"property",
				"property_recursion_top"
			],
			[
				"RETURN",
				"deep.RETURN_VALUE_PATH"
			],
			[
				"LIBS",
				"LIBSERIALPORT_LIBRARY_DIR"
			],
			[
				"js_misc_atexit_",
				"js_misc_atexit_called"
			],
			[
				"getO",
				"getOwnPropertyNames(...)"
			],
			[
				"Res",
				"ResolveAlias"
			],
			[
				"relati",
				"relativePath"
			],
			[
				"js_syscla",
				"js_syscallerror_defines"
			],
			[
				"get",
				"getOwnPropertyDescriptor(...)"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"set",
				"set_handler"
			],
			[
				"Async",
				"AsyncSocketClosure"
			],
			[
				"Asy",
				"AsyncSocketClosure"
			],
			[
				"js_socket_async_",
				"js_socket_async_resolver"
			],
			[
				"js_socket_asyc",
				"js_socket_async_closure_free"
			],
			[
				"JS_EV",
				"JS_EVAL_FLAG_COMPILE_ONLY"
			],
			[
				"check_",
				"check_function_and_include"
			],
			[
				"PGCon",
				"PGConnectParameters"
			],
			[
				"PGC",
				"PGConnectParameters"
			],
			[
				"connect",
				"connectparams_parse"
			],
			[
				"Nam",
				"FieldNameFunc"
			],
			[
				"PG",
				"PGSQLResult"
			],
			[
				"js",
				"js_pgresult_class_id"
			],
			[
				"PGSQ",
				"PGSQResultIterator"
			],
			[
				"js_misc_getopa",
				"js_misc_getopaque"
			],
			[
				"js_pgrequ",
				"js_pgresult_opaque"
			],
			[
				"PGRES_PO",
				"PGRES_POLLING_READING"
			],
			[
				"PROP_PRO",
				"PROP_PROTOCOL_VERSION"
			],
			[
				"B",
				"BOOL"
			],
			[
				"Asyn",
				"AsyncIterator"
			],
			[
				"ret",
				"return_flag"
			],
			[
				"ImportID",
				"ImportIdMap"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"dbuf_",
				"dbuf_init2"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"has_",
				"has_dot_or_slash"
			],
			[
				"My",
				"MySQLResult"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"CF",
				"CFunctionClosureRecord"
			],
			[
				"extendA",
				"extendAsyncGenerator"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"MYSQL_TYPE_NEW",
				"MYSQL_TYPE_NEWDECIMAL"
			],
			[
				"JS_CF",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"js_mysqlresult_fun",
				"js_mysqlresult_functions"
			],
			[
				"JS_ToCSt",
				"JS_ToCStringLen"
			],
			[
				"js_mysql_f",
				"js_mysql_functions"
			],
			[
				"MARIA",
				"MARIADBCLIENT_LIBRARY"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"depden",
				"dependencyTree"
			],
			[
				"add_",
				"add_dependencies"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/cli-helpers.js",
						"symkeys":
						[
							[
								53,
								79
							],
							[
								186,
								204
							],
							[
								504,
								561
							],
							[
								571,
								611
							],
							[
								618,
								634
							],
							[
								700,
								712
							],
							[
								742,
								749
							],
							[
								1035,
								1049
							],
							[
								1197,
								1209
							],
							[
								1264,
								1291
							],
							[
								1312,
								1323
							],
							[
								1445,
								1452
							],
							[
								1462,
								1473
							],
							[
								1524,
								1534
							],
							[
								1621,
								1626
							],
							[
								1726,
								1732
							],
							[
								1794,
								1798
							],
							[
								1940,
								2035
							],
							[
								2042,
								2061
							],
							[
								2128,
								2140
							],
							[
								2170,
								2178
							],
							[
								2455,
								2469
							],
							[
								2617,
								2629
							],
							[
								2666,
								2695
							],
							[
								2718,
								2729
							],
							[
								2856,
								2865
							],
							[
								2875,
								2886
							],
							[
								2939,
								2949
							],
							[
								2987,
								2994
							]
						],
						"symlist":
						[
							"function padTrunc(...args)",
							" (s, pad = ' ') =>",
							" function Table( rows, keys, t = (cell, column) => ",
							"((cell === undefined ? '–' : cell + '').",
							"(/\\n.*/g, '')) )",
							"getfn = k =>",
							" row =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (cols, space, sep) =>",
							"(s, col) =>",
							"cols =>",
							"(key, i) =>",
							"toString()",
							"() =>",
							"row =>",
							"l =>",
							" function List( items, keys, t = (item, field) => (item === undefined ? '–' : item + '').",
							"(/[\\r\\n].*/g, '') )",
							"getfn = k =>",
							" item =>",
							"(acc, name) =>",
							"(name, i) =>",
							"pad = (fields, space, sep) =>",
							"(s, str) =>",
							"fields =>",
							"(key, i) =>",
							"toString()",
							"item =>"
						]
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-fft.js",
						"symkeys":
						[
							[
								141,
								183
							],
							[
								465,
								480
							],
							[
								602,
								611
							],
							[
								636,
								657
							],
							[
								840,
								853
							],
							[
								926,
								938
							],
							[
								1015,
								1032
							],
							[
								1094,
								1110
							],
							[
								1176,
								1191
							],
							[
								1254,
								1268
							],
							[
								1335,
								1348
							],
							[
								1411,
								1423
							],
							[
								1490,
								1505
							],
							[
								1568,
								1582
							],
							[
								1649,
								1664
							],
							[
								1727,
								1741
							],
							[
								1786,
								1796
							],
							[
								2313,
								2335
							],
							[
								3170,
								3175
							],
							[
								3234,
								3241
							],
							[
								3369,
								3373
							],
							[
								3443,
								3452
							],
							[
								3468,
								3479
							],
							[
								3548,
								3559
							]
						],
						"symlist":
						[
							" function define(so, name, rtype, ...args)",
							" function(...a)",
							"sf_info_t",
							"constructor(obj = {})",
							"set frames(v)",
							"get frames()",
							"set samplerate(v)",
							"get samplerate()",
							"set channels(v)",
							"get channels()",
							"set format(v)",
							"get format()",
							"set sections(v)",
							"get sections()",
							"set seekable(v)",
							"get seekable()",
							"toString()",
							"function main(...args)",
							"() =>",
							" bin =>",
							"m =>",
							"(m, i) =>",
							"([i, m]) =>",
							"([i, m]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAUAgAAICBwYWRUcnVuYyguLi5hcmdzKQoocywgcGFkID0gJyAnKSA9PgpUYWJsZSggcm93cywga2V5cywgdCA9IChjZWxsLCBjb2x1bW4pID0+IAooKGNlbGwgPT09IHVuZGVmaW5lZCA/ICfigJMnIDogY2VsbCArICcnKS4KKC9cbi4qL2csICcnKSkgKQogIGdldGZuID0gayA9Pgpyb3cgPT4KKGFjYywgbmFtZSkgPT4KKG5hbWUsIGkpID0+CiAgcGFkID0gKGNvbHMsIHNwYWNlLCBzZXApID0+CihzLCBjb2wpID0+CiAgY29scyA9Pgooa2V5LCBpKSA9PgogIHRvU3RyaW5nKCkKKCkgPT4KICByb3cgPT4KICBsID0+Ckxpc3QoIGl0ZW1zLCBrZXlzLCB0ID0gKGl0ZW0sIGZpZWxkKSA9PiAoaXRlbSA9PT0gdW5kZWZpbmVkID8gJ+KAkycgOiBpdGVtICsgJycpLgooL1tcclxuXS4qL2csICcnKSApCiAgZ2V0Zm4gPSBrID0+Cml0ZW0gPT4KKGFjYywgbmFtZSkgPT4KKG5hbWUsIGkpID0+CiAgcGFkID0gKGZpZWxkcywgc3BhY2UsIHNlcCkgPT4KKHMsIHN0cikgPT4KICBmaWVsZHMgPT4KKGtleSwgaSkgPT4KICB0b1N0cmluZygpCiAgaXRlbSA9PgAAAAAAAAAAdgEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								2132,
								2136
							],
							[
								2195,
								2199
							],
							[
								2235,
								2265
							],
							[
								2308,
								2329
							],
							[
								2478,
								2504
							],
							[
								2662,
								2681
							],
							[
								3010,
								3038
							],
							[
								3328,
								3336
							],
							[
								3337,
								3351
							],
							[
								3433,
								3443
							],
							[
								3506,
								3554
							],
							[
								3668,
								3677
							],
							[
								3787,
								3809
							],
							[
								4271,
								4293
							],
							[
								4657,
								4675
							],
							[
								4775,
								4793
							],
							[
								4899,
								4925
							],
							[
								5061,
								5065
							],
							[
								5144,
								5160
							],
							[
								5646,
								5665
							],
							[
								6164,
								6169
							],
							[
								6244,
								6259
							],
							[
								6344,
								6352
							],
							[
								6393,
								6401
							],
							[
								6773,
								6846
							],
							[
								6850,
								6858
							],
							[
								6955,
								6985
							],
							[
								7017,
								7022
							],
							[
								7055,
								7062
							],
							[
								7092,
								7120
							],
							[
								7457,
								7464
							],
							[
								7483,
								7506
							],
							[
								7536,
								7543
							],
							[
								7574,
								7582
							],
							[
								7620,
								7627
							],
							[
								7827,
								7840
							],
							[
								8021,
								8064
							],
							[
								8097,
								8106
							],
							[
								8167,
								8171
							],
							[
								8273,
								8277
							],
							[
								8313,
								8327
							],
							[
								8439,
								8467
							],
							[
								8672,
								8697
							],
							[
								8795,
								8819
							],
							[
								8892,
								8896
							],
							[
								9015,
								9019
							],
							[
								9083,
								9097
							],
							[
								9153,
								9162
							],
							[
								9460,
								9474
							],
							[
								9597,
								9632
							],
							[
								9721,
								9726
							],
							[
								9849,
								9861
							],
							[
								9914,
								9939
							],
							[
								9988,
								9999
							],
							[
								10039,
								10050
							],
							[
								10188,
								10199
							],
							[
								10287,
								10300
							],
							[
								10381,
								10413
							],
							[
								10651,
								10680
							],
							[
								10691,
								10706
							],
							[
								10768,
								10787
							],
							[
								10995,
								11034
							],
							[
								11099,
								11139
							],
							[
								11222,
								11266
							],
							[
								11348,
								11387
							],
							[
								11449,
								11487
							],
							[
								11573,
								11601
							],
							[
								11664,
								11691
							],
							[
								12242,
								12268
							],
							[
								12535,
								12542
							],
							[
								14458,
								14516
							],
							[
								15552,
								15559
							],
							[
								15623,
								15630
							],
							[
								15640,
								15651
							],
							[
								15692,
								15718
							],
							[
								15834,
								15848
							],
							[
								16145,
								16164
							],
							[
								16191,
								16198
							],
							[
								16287,
								16317
							],
							[
								16383,
								16423
							],
							[
								16599,
								16650
							],
							[
								17639,
								17646
							],
							[
								18053,
								18073
							],
							[
								18249,
								18303
							],
							[
								18492,
								18504
							],
							[
								18532,
								18544
							],
							[
								19161,
								19221
							],
							[
								19832,
								19887
							],
							[
								19983,
								19995
							],
							[
								20000,
								20030
							],
							[
								20311,
								20333
							],
							[
								20379,
								20402
							],
							[
								20474,
								20489
							],
							[
								20624,
								20640
							],
							[
								21044,
								21057
							],
							[
								21182,
								21201
							],
							[
								21253,
								21261
							],
							[
								21318,
								21333
							],
							[
								21493,
								21505
							],
							[
								21850,
								21864
							],
							[
								21964,
								21981
							],
							[
								22208,
								22230
							],
							[
								22347,
								22372
							],
							[
								22472,
								22489
							],
							[
								22544,
								22548
							],
							[
								22636,
								22640
							],
							[
								22692,
								22716
							],
							[
								22832,
								22872
							],
							[
								22933,
								22954
							],
							[
								23238,
								23270
							],
							[
								23755,
								23770
							],
							[
								23881,
								23906
							],
							[
								24075,
								24110
							],
							[
								24330,
								24337
							],
							[
								24426,
								24433
							],
							[
								24462,
								24471
							],
							[
								24508,
								24517
							],
							[
								24567,
								24575
							],
							[
								24617,
								24641
							],
							[
								24737,
								24753
							],
							[
								24789,
								24829
							],
							[
								25127,
								25170
							],
							[
								26113,
								26124
							],
							[
								26869,
								26919
							],
							[
								26941,
								26967
							],
							[
								27002,
								27031
							],
							[
								27375,
								27418
							],
							[
								27489,
								27499
							],
							[
								27538,
								27542
							],
							[
								27558,
								27562
							],
							[
								27607,
								27694
							],
							[
								27861,
								27894
							],
							[
								27952,
								27957
							],
							[
								28027,
								28069
							],
							[
								28144,
								28154
							],
							[
								28254,
								28294
							],
							[
								28438,
								28443
							],
							[
								28502,
								28509
							],
							[
								28626,
								28630
							],
							[
								28708,
								28712
							],
							[
								28865,
								28872
							],
							[
								28962,
								28967
							],
							[
								29052,
								29068
							],
							[
								29179,
								29186
							],
							[
								29265,
								29269
							],
							[
								29329,
								29336
							],
							[
								29412,
								29419
							],
							[
								29476,
								29522
							],
							[
								29561,
								29571
							],
							[
								29723,
								29759
							],
							[
								29800,
								29812
							],
							[
								31455,
								31476
							],
							[
								31713,
								31753
							],
							[
								31891,
								31920
							],
							[
								31946,
								31975
							],
							[
								32161,
								32165
							],
							[
								32348,
								32352
							],
							[
								32482,
								32486
							],
							[
								32674,
								32678
							],
							[
								32861,
								32865
							],
							[
								32933,
								32937
							],
							[
								35138,
								35157
							],
							[
								38381,
								38413
							],
							[
								38906,
								38916
							],
							[
								38966,
								38976
							],
							[
								39024,
								39034
							],
							[
								39612,
								39623
							],
							[
								39717,
								39721
							],
							[
								39748,
								39752
							],
							[
								39776,
								39780
							],
							[
								39804,
								39808
							],
							[
								39837,
								39874
							],
							[
								40313,
								40358
							],
							[
								40455,
								40489
							],
							[
								40774,
								40802
							],
							[
								40856,
								40861
							],
							[
								41304,
								41321
							],
							[
								41396,
								41413
							],
							[
								41507,
								41536
							],
							[
								41603,
								41626
							],
							[
								41714,
								41719
							],
							[
								41831,
								41854
							],
							[
								41942,
								41947
							],
							[
								42049,
								42061
							],
							[
								42176,
								42181
							],
							[
								42237,
								42266
							],
							[
								42595,
								42600
							],
							[
								43712,
								43770
							],
							[
								44784,
								44795
							],
							[
								44828,
								44839
							],
							[
								44888,
								44894
							],
							[
								44947,
								44955
							],
							[
								45289,
								45293
							],
							[
								45985,
								45991
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"ConcatIterator = iterator =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							" (...args) =>",
							" (...args) =>",
							" (module, ...args) =>",
							"m =>",
							".show = value =>",
							".printNode = arg =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							" function padTrunc(len, pad = ' ')",
							" s =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range, file)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function ParentNode(node, ast = $.data)",
							"function NextSibling(node, ast = $.data)",
							"function PreviousSibling(node, ast = $.data)",
							"function FirstChild(node, ast = $.data)",
							"function LastChild(node, ast = $.data)",
							"function Terminate(exitCode)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							"([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"colorText = x =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"get = p =>",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"function MakeId(name)",
							"function MakeQuickJSClass(node, ast = $)",
							" (cname, vname = 'ptr') =>",
							" (cname, vname = 'ptr') =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"to_jstype = type =>",
							"async function ASTShell(...args)",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							"select(name_or_id, pred = n => true, ...args)",
							"getByIdOrName(name_or_id, ...args)",
							"function getType(name_or_id)",
							" n =>",
							"predicate = () =>",
							"namespaceOf(node)",
							"function getClass(name_or_id)",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"s =>",
							" fr =>"
						]
					},
<<<<<<< HEAD
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB2AQAAICBkZWZpbmUoc28sIG5hbWUsIHJ0eXBlLCAuLi5hcmdzKQpmdW5jdGlvbiguLi5hKQogIHNmX2luZm9fdAogIGNvbnN0cnVjdG9yKG9iaiA9IHt9KQogIHNldCBmcmFtZXModikKICBnZXQgZnJhbWVzKCkKICBzZXQgc2FtcGxlcmF0ZSh2KQogIGdldCBzYW1wbGVyYXRlKCkKICBzZXQgY2hhbm5lbHModikKICBnZXQgY2hhbm5lbHMoKQogIHNldCBmb3JtYXQodikKICBnZXQgZm9ybWF0KCkKICBzZXQgc2VjdGlvbnModikKICBnZXQgc2VjdGlvbnMoKQogIHNldCBzZWVrYWJsZSh2KQogIGdldCBzZWVrYWJsZSgpCiAgdG9TdHJpbmcoKQogIG1haW4oLi4uYXJncykKKCkgPT4KYmluID0+CiAgbSA9PgoobSwgaSkgPT4KKFtpLCBtXSkgPT4KKFtpLCBtXSkgPT4AAAAAAAAAAJcNAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/compileCommand.js",
						"symkeys":
						[
							[
								273,
								303
							],
							[
								427,
								441
							],
							[
								486,
								500
							],
							[
								558,
								565
							],
							[
								570,
								599
							],
							[
								688,
								692
							],
							[
								948,
								961
							],
							[
								1011,
								1027
							],
							[
								1055,
								1073
							],
							[
								1170,
								1191
							],
							[
								1257,
								1268
							],
							[
								1322,
								1337
							],
							[
								1406,
								1422
							],
							[
								1489,
								1503
							],
							[
								1569,
								1583
							],
							[
								1649,
								1663
							],
							[
								1736,
								1747
							],
							[
								1806,
								1820
							],
							[
								1879,
								1891
							],
							[
								1950,
								1958
							],
							[
								1989,
								2004
							],
							[
								2062,
								2071
							],
							[
								2115,
								2130
							],
							[
								2334,
								2352
							],
							[
								2611,
								2627
							],
							[
								3156,
								3172
							],
							[
								4224,
								4238
							],
							[
								4666,
								4680
							],
							[
								4860,
								4867
							],
							[
								4887,
								4932
							],
							[
								4943,
								4957
							],
							[
								5113,
								5124
							],
							[
								5561,
								5593
							],
							[
								5604,
								5619
							],
							[
								5757,
								5764
							],
							[
								5995,
								6001
							],
							[
								6064,
								6070
							],
							[
								6107,
								6115
							],
							[
								6421,
								6451
							],
							[
								6535,
								6543
							],
							[
								6696,
								6710
							],
							[
								6731,
								6760
							],
							[
								6854,
								6872
							],
							[
								6935,
								6948
							],
							[
								7009,
								7021
							],
							[
								7105,
								7111
							],
							[
								7152,
								7158
							],
							[
								7214,
								7225
							],
							[
								7283,
								7293
							],
							[
								7351,
								7364
							],
							[
								7410,
								7416
							],
							[
								7443,
								7459
							],
							[
								7657,
								7669
							],
							[
								7912,
								7927
							],
							[
								7963,
								7973
							],
							[
								9278,
								9292
							],
							[
								9429,
								9441
							],
							[
								9478,
								9482
							],
							[
								9590,
								9605
							],
							[
								9642,
								9646
							],
							[
								9856,
								9867
							],
							[
								9888,
								9917
							],
							[
								9972,
								9987
							],
							[
								10057,
								10071
							],
							[
								10141,
								10156
							],
							[
								10226,
								10236
							],
							[
								10294,
								10304
							],
							[
								10332,
								10345
							],
							[
								10380,
								10391
							],
							[
								10535,
								10541
							],
							[
								10570,
								10581
							],
							[
								10623,
								10627
							],
							[
								10757,
								10768
							],
							[
								10854,
								10861
							],
							[
								10942,
								10968
							],
							[
								11150,
								11179
							],
							[
								11496,
								11552
							],
							[
								12969,
								12995
							],
							[
								13031,
								13038
							],
							[
								13107,
								13114
							],
							[
								13148,
								13155
							],
							[
								13192,
								13222
							],
							[
								13728,
								13771
							],
							[
								13867,
								13874
							],
							[
								13913,
								13964
							],
							[
								14094,
								14102
							],
							[
								14274,
								14285
							],
							[
								14319,
								14331
							],
							[
								14368,
								14372
							],
							[
								14501,
								14510
							],
							[
								14590,
								14605
							],
							[
								14642,
								14646
							]
						],
						"symlist":
						[
							" function PathTransformer(dir)",
							"relative: p =>",
							"absolute: p =>",
							"Command",
							"constructor(a, workDir = '.')",
							"s =>",
							"get program()",
							"set program(arg)",
							"absolutePath(path)",
							"argumentsOfType(type)",
							"(arg, i) =>",
							"get warnFlags()",
							"get debugFlags()",
							"get optFlags()",
							"get depFlags()",
							"get modeFlag()",
							"isCompile()",
							"isPreprocess()",
							"isAssemble()",
							"isLink()",
							"toString(delim)",
							"toArray()",
							"remove(...args)",
							"get dependencies()",
							"get outputFile()",
							"transformPath(t)",
							"(s, arg, i) =>",
							"run(opts = {})",
							"Command",
							"function wrapTransformer(mtf = dir => a => a)",
							" function(dir)",
							"(arg, i) =>",
							"function wrapNumericArgument(fn)",
							" function(v, i)",
							"Command",
							"dir =>",
							"dir =>",
							"toJSON()",
							"fromString(str, workDir = '.')",
							"([m]) =>",
							"CompileCommand",
							"constructor(a, workDir = '.')",
							"get includePaths()",
							"get defines()",
							"get cflags()",
							"inc =>",
							"def =>",
							"get flags()",
							"get args()",
							"get sources()",
							"arg =>",
							"set sources(arg)",
							"get source()",
							"set source(arg)",
							"toObject()",
							"CompileCommand",
							"get output()",
							"a =>",
							"set output(arg)",
							"a =>",
							"LinkCommand",
							"constructor(a, workDir = '.')",
							"get libraries()",
							"get libpaths()",
							"get linkflags()",
							"get args()",
							"(arg,i) =>",
							"get objects()",
							"(arg, i) =>",
							"arg =>",
							"get flags()",
							"t =>",
							"LinkCommand",
							"Command",
							" function ArgumentOpt(arg)",
							" function ArgumentLen(arg, i)",
							" function ArgumentType(arg, i = Number.MAX_SAFE_INTEGER)",
							" function ArgumentIs(pred)",
							" arg =>",
							" arg =>",
							" arg =>",
							" function CommandType(command)",
							" function MakeCommands(text, workDir = '.')",
							"line =>",
							" function MakeCommand(arrayOrString, workDir = '.')",
							"([m]) =>",
							"LinkCommand",
							"get output()",
							"a =>",
							"(a, i) =>",
							"set output(arg)",
							"a =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXDQAAICBkID0+CiAgZCA9PgogIHRyYWNlUHJveHkgPSAob2JqLCBoYW5kbGVyKSA9PgpmdW5jdGlvbihuYW1lLCBhcmdzKQogIGdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpCiAgbWVtYmVyID0gZnVuY3Rpb24oKQpDb25jYXRJdGVyYXRvciA9IGl0ZXJhdG9yID0+CmdlbiA9PgooLi4uYXJncykgPT4KICB0b1N0cmluZygpCkltcG9ydE1vZHVsZShtb2R1bGVQYXRoLCAuLi5hcmdzKQogIG1vZHVsZSA9PgooYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4KKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCm4gPT4KICBwcm9wID0+CkxvY2F0aW9uU3RyaW5nKGxvYykKICBub2RlID0+ClN0cnVjdHMobm9kZXMpCiAgbm9kZSA9PgogIGZpZWxkID0+CiAgbm9kZSA9PgooZmllbGQsIGkpID0+ClRhYmxlKGxpc3QsIHByZWQgPSAobiwgbCkgPT4gdHJ1ZSkKKG4sIGkpID0+CiAgZSA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KICByZXR1cm5UeXBlKG4pCiAgbnVtQXJncyhuKQpQYXJhbXMobikKICBwID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgooaywgaikgPT4KKGFjYywgbmFtZSkgPT4KICBwYWRUcnVuYyhsZW4sIHBhZCA9ICcgJykKcyA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSwgZmlsZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KUGFyZW50Tm9kZShub2RlLCBhc3QgPSAkLmRhdGEpCk5leHRTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKUHJldmlvdXNTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKRmlyc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpCkxhc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpClRlcm1pbmF0ZShleGl0Q29kZSkKUGFyc2VTdHJ1Y3RzKHRleHQpCihkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgooW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQoobmFtZSwgbGliKSA9PgogIGNvbG9yVGV4dCA9IHggPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQooZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBnZXQgPSBwID0+CiAgcCA9PgogIG4gPT4KQ29uc3RhbnRzKG5vZGUsIHQgPSAobmFtZSwgdmFsdWUpID0+IFtuYW1lLCAhaXNOYU4oK3ZhbHVlKSA/ICt2YWx1ZSA6IHZhbHVlXSkKR2V0SW1wb3J0cyhhc3QgPSAkLmRhdGEpCm4gPT4KR2V0SWRlbnRpZmllcnMobm9kZXMsIGtleSA9IG51bGwpCihuLCBrKSA9PgpNZW1iZXJOYW1lcyhtZW1iZXJzLCBmbGFncyA9IDApCm4gPT4KICBwYXRoID0+CiAgcCA9PgogIHAgPT4KICBuYW1lID0+Cm4gPT4KKFtub2RlLCBwdHJdKSA9PgogIHBhdGggPT4KICBwID0+CiAgbmFtZSA9PgogIG5hbWUgPT4KVW5zZXRMb2Mobm9kZSwgcHJlZCA9ICh2LCBwKSA9PiB0cnVlKQoodiwgaykgPT4KTWFrZUZGSShub2RlLCBsaWIsIGV4cCwgZnApCigpCk1ha2VJZChuYW1lKQpNYWtlUXVpY2tKU0NsYXNzKG5vZGUsIGFzdCA9ICQpCihjbmFtZSwgdm5hbWUgPSAncHRyJykgPT4KKGNuYW1lLCB2bmFtZSA9ICdwdHInKSA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIHRvX2pzdHlwZSA9IHR5cGUgPT4KQVNUU2hlbGwoLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgooYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlLCAuLi5hcmdzKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgLi4uYXJncykKICBnZXRUeXBlKG5hbWVfb3JfaWQpCm4gPT4KICBwcmVkaWNhdGUgPSAoKSA9PgogIG5hbWVzcGFjZU9mKG5vZGUpCiAgZ2V0Q2xhc3MobmFtZV9vcl9pZCkKICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQpuID0+CiAgZ2V0VmFyaWFibGUobmFtZV9vcl9pZCkKbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCm4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KKCkgPT4Kbm9kZSA9PgogIHMgPT4KZnIgPT4AAAAAAAAAAMAFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								501,
								515
							],
							[
								595,
								618
							],
							[
								756,
								773
							],
							[
								814,
								831
							],
							[
								864,
								873
							],
							[
								907,
								917
							],
							[
								951,
								961
							],
							[
								996,
								1007
							],
							[
								1041,
								1051
							],
							[
								1086,
								1097
							],
							[
								1134,
								1147
							],
							[
								1185,
								1199
							],
							[
								1235,
								1247
							],
							[
								1283,
								1295
							],
							[
								1349,
								1369
							],
							[
								1422,
								1435
							],
							[
								1495,
								1516
							],
							[
								1558,
								1574
							],
							[
								1628,
								1647
							],
							[
								1682,
								1698
							],
							[
								1822,
								1856
							],
							[
								1879,
								1911
							],
							[
								1934,
								1977
							],
							[
								3806,
								3825
							],
							[
								3923,
								3939
							],
							[
								4001,
								4019
							],
							[
								4083,
								4102
							],
							[
								4167,
								4176
							],
							[
								4231,
								4248
							],
							[
								4311,
								4328
							],
							[
								4391,
								4405
							],
							[
								4465,
								4480
							],
							[
								4541,
								4556
							],
							[
								4617,
								4625
							],
							[
								4679,
								4691
							],
							[
								4749,
								4759
							],
							[
								4815,
								4826
							],
							[
								4883,
								4891
							],
							[
								4945,
								4967
							],
							[
								5035,
								5050
							],
							[
								5111,
								5133
							],
							[
								5201,
								5217
							],
							[
								5279,
								5295
							],
							[
								5357,
								5369
							],
							[
								5427,
								5439
							],
							[
								5497,
								5510
							],
							[
								5569,
								5587
							],
							[
								5645,
								5663
							],
							[
								5727,
								5749
							],
							[
								5817,
								5844
							],
							[
								5917,
								5934
							],
							[
								5991,
								6008
							],
							[
								6065,
								6082
							],
							[
								6129,
								6145
							],
							[
								6228,
								6244
							],
							[
								6316,
								6332
							],
							[
								6404,
								6421
							],
							[
								6478,
								6498
							],
							[
								6557,
								6577
							],
							[
								6720,
								6739
							],
							[
								6815,
								6822
							],
							[
								6851,
								6871
							],
							[
								6950,
								6965
							],
							[
								7026,
								7052
							],
							[
								7123,
								7139
							],
							[
								7195,
								7208
							],
							[
								7276,
								7294
							],
							[
								7367,
								7380
							],
							[
								7436,
								7450
							],
							[
								7553,
								7579
							],
							[
								7625,
								7646
							],
							[
								7805,
								7830
							],
							[
								7915,
								7957
							],
							[
								8091,
								8131
							],
							[
								11063,
								11088
							],
							[
								11304,
								11352
							],
							[
								11669,
								11704
							],
							[
								11861,
								11879
							],
							[
								11909,
								11914
							],
							[
								12004,
								12031
							],
							[
								12149,
								12184
							],
							[
								12245,
								12249
							],
							[
								12266,
								12270
							],
							[
								12297,
								12306
							],
							[
								12471,
								12500
							],
							[
								12580,
								12610
							],
							[
								12617,
								12620
							],
							[
								12675,
								12707
							],
							[
								12950,
								12980
							],
							[
								13004,
								13020
							],
							[
								13021,
								13044
							],
							[
								13142,
								13177
							],
							[
								13201,
								13217
							],
							[
								13218,
								13241
							],
							[
								13339,
								13372
							],
							[
								13422,
								13445
							],
							[
								13539,
								13572
							],
							[
								14030,
								14036
							],
							[
								14053,
								14069
							],
							[
								14144,
								14156
							],
							[
								14191,
								14202
							],
							[
								14269,
								14290
							],
							[
								14326,
								14337
							],
							[
								14584,
								14590
							],
							[
								14603,
								14619
							],
							[
								14820,
								14825
							],
							[
								14839,
								14848
							],
							[
<<<<<<< HEAD
								44470,
								44476
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"ConcatIterator = iterator =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							" (...args) =>",
							" (...args) =>",
							" (module, ...args) =>",
							"m =>",
							".show = value =>",
							".printNode = arg =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							" function padTrunc(len, pad = ' ')",
							" s =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range, file)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function ParentNode(node, ast = $.data)",
							"function NextSibling(node, ast = $.data)",
							"function PreviousSibling(node, ast = $.data)",
							"function FirstChild(node, ast = $.data)",
							"function LastChild(node, ast = $.data)",
							"function Terminate(exitCode)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							"([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"colorText = x =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"function MakeId(name)",
							"function MakeQuickJSClass(node, ast = $)",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"async function ASTShell(...args)",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							"getType(name_or_id)",
							" n =>",
							"predicate = () =>",
							"namespaceOf(node)",
							"getClass(name_or_id)",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"s =>",
							" fr =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABADQAAICBkID0+CiAgZCA9PgogIHRyYWNlUHJveHkgPSAob2JqLCBoYW5kbGVyKSA9PgpmdW5jdGlvbihuYW1lLCBhcmdzKQogIGdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpCiAgbWVtYmVyID0gZnVuY3Rpb24oKQpDb25jYXRJdGVyYXRvciA9IGl0ZXJhdG9yID0+CmdlbiA9PgooLi4uYXJncykgPT4KICB0b1N0cmluZygpCkltcG9ydE1vZHVsZShtb2R1bGVQYXRoLCAuLi5hcmdzKQogIG1vZHVsZSA9PgooYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4KKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCm4gPT4KICBwcm9wID0+CkxvY2F0aW9uU3RyaW5nKGxvYykKICBub2RlID0+ClN0cnVjdHMobm9kZXMpCiAgbm9kZSA9PgogIGZpZWxkID0+CiAgbm9kZSA9PgooZmllbGQsIGkpID0+ClRhYmxlKGxpc3QsIHByZWQgPSAobiwgbCkgPT4gdHJ1ZSkKKG4sIGkpID0+CiAgZSA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KICByZXR1cm5UeXBlKG4pCiAgbnVtQXJncyhuKQpQYXJhbXMobikKICBwID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgooaywgaikgPT4KKGFjYywgbmFtZSkgPT4KICBwYWRUcnVuYyhsZW4sIHBhZCA9ICcgJykKcyA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSwgZmlsZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KUGFyZW50Tm9kZShub2RlLCBhc3QgPSAkLmRhdGEpCk5leHRTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKUHJldmlvdXNTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKRmlyc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpCkxhc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpClRlcm1pbmF0ZShleGl0Q29kZSkKUGFyc2VTdHJ1Y3RzKHRleHQpCihkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgooW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQoobmFtZSwgbGliKSA9PgogIGNvbG9yVGV4dCA9IHggPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQooZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBwID0+CiAgbiA9PgpDb25zdGFudHMobm9kZSwgdCA9IChuYW1lLCB2YWx1ZSkgPT4gW25hbWUsICFpc05hTigrdmFsdWUpID8gK3ZhbHVlIDogdmFsdWVdKQpHZXRJbXBvcnRzKGFzdCA9ICQuZGF0YSkKbiA9PgpHZXRJZGVudGlmaWVycyhub2Rlcywga2V5ID0gbnVsbCkKKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKbiA9PgogIHBhdGggPT4KICBwID0+CiAgcCA9PgogIG5hbWUgPT4KbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcGF0aCA9PgogIHAgPT4KICBuYW1lID0+CiAgbmFtZSA9PgpVbnNldExvYyhub2RlLCBwcmVkID0gKHYsIHApID0+IHRydWUpCih2LCBrKSA9PgpNYWtlRkZJKG5vZGUsIGxpYiwgZXhwLCBmcCkKKCkKTWFrZUlkKG5hbWUpCk1ha2VRdWlja0pTQ2xhc3Mobm9kZSwgYXN0ID0gJCkKICBuID0+CiAgbiA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIG4gPT4KQVNUU2hlbGwoLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgooYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBnZXRUeXBlKG5hbWVfb3JfaWQpCm4gPT4KICBwcmVkaWNhdGUgPSAoKSA9PgogIG5hbWVzcGFjZU9mKG5vZGUpCiAgZ2V0Q2xhc3MobmFtZV9vcl9pZCkKICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQpuID0+CiAgZ2V0VmFyaWFibGUobmFtZV9vcl9pZCkKbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCm4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KKCkgPT4Kbm9kZSA9PgogIHMgPT4KZnIgPT4AAAAAAAAAAEANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABADQAAICBkID0+CiAgZCA9PgogIHRyYWNlUHJveHkgPSAob2JqLCBoYW5kbGVyKSA9PgpmdW5jdGlvbihuYW1lLCBhcmdzKQogIGdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpCiAgbWVtYmVyID0gZnVuY3Rpb24oKQpDb25jYXRJdGVyYXRvciA9IGl0ZXJhdG9yID0+CmdlbiA9PgooLi4uYXJncykgPT4KICB0b1N0cmluZygpCkltcG9ydE1vZHVsZShtb2R1bGVQYXRoLCAuLi5hcmdzKQogIG1vZHVsZSA9PgooYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4KKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCm4gPT4KICBwcm9wID0+CkxvY2F0aW9uU3RyaW5nKGxvYykKICBub2RlID0+ClN0cnVjdHMobm9kZXMpCiAgbm9kZSA9PgogIGZpZWxkID0+CiAgbm9kZSA9PgooZmllbGQsIGkpID0+ClRhYmxlKGxpc3QsIHByZWQgPSAobiwgbCkgPT4gdHJ1ZSkKKG4sIGkpID0+CiAgZSA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KICByZXR1cm5UeXBlKG4pCiAgbnVtQXJncyhuKQpQYXJhbXMobikKICBwID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgooaywgaikgPT4KKGFjYywgbmFtZSkgPT4KICBwYWRUcnVuYyhsZW4sIHBhZCA9ICcgJykKcyA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSwgZmlsZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KUGFyZW50Tm9kZShub2RlLCBhc3QgPSAkLmRhdGEpCk5leHRTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKUHJldmlvdXNTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKRmlyc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpCkxhc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpClRlcm1pbmF0ZShleGl0Q29kZSkKUGFyc2VTdHJ1Y3RzKHRleHQpCihkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgooW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQoobmFtZSwgbGliKSA9PgogIGNvbG9yVGV4dCA9IHggPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQooZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBwID0+CiAgbiA9PgpDb25zdGFudHMobm9kZSwgdCA9IChuYW1lLCB2YWx1ZSkgPT4gW25hbWUsICFpc05hTigrdmFsdWUpID8gK3ZhbHVlIDogdmFsdWVdKQpHZXRJbXBvcnRzKGFzdCA9ICQuZGF0YSkKbiA9PgpHZXRJZGVudGlmaWVycyhub2Rlcywga2V5ID0gbnVsbCkKKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKbiA9PgogIHBhdGggPT4KICBwID0+CiAgcCA9PgogIG5hbWUgPT4KbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcGF0aCA9PgogIHAgPT4KICBuYW1lID0+CiAgbmFtZSA9PgpVbnNldExvYyhub2RlLCBwcmVkID0gKHYsIHApID0+IHRydWUpCih2LCBrKSA9PgpNYWtlRkZJKG5vZGUsIGxpYiwgZXhwLCBmcCkKKCkKTWFrZUlkKG5hbWUpCk1ha2VRdWlja0pTQ2xhc3Mobm9kZSwgYXN0ID0gJCkKICBuID0+CiAgbiA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIG4gPT4KQVNUU2hlbGwoLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgooYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBnZXRUeXBlKG5hbWVfb3JfaWQpCm4gPT4KICBwcmVkaWNhdGUgPSAoKSA9PgogIG5hbWVzcGFjZU9mKG5vZGUpCiAgZ2V0Q2xhc3MobmFtZV9vcl9pZCkKICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQpuID0+CiAgZ2V0VmFyaWFibGUobmFtZV9vcl9pZCkKbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCm4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KKCkgPT4Kbm9kZSA9PgogIHMgPT4KZnIgPT4AAAAAAAAAAEANAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					389,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
=======
								14876,
								14899
							],
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
							[
								14933,
								14946
							],
							[
								14973,
								14978
							],
							[
								15019,
								15041
							],
							[
								15099,
								15105
							],
							[
								15121,
								15137
							],
							[
								15218,
								15245
							],
							[
								15291,
								15297
							],
							[
								15342,
								15354
							],
							[
								15384,
								15417
							],
							[
								15596,
								15614
							],
							[
								15697,
								15715
							],
							[
								15834,
								15852
							],
							[
								16027,
								16060
							],
							[
								16194,
								16207
							],
							[
								16327,
								16348
							],
							[
								16418,
								16436
							],
							[
								16878,
								16917
							],
							[
								16994,
								17011
							],
							[
								17134,
								17148
							],
							[
								17310,
								17327
							],
							[
								17468,
								17485
							],
							[
								17516,
								17533
							],
							[
								17633,
								17650
							],
							[
								17944,
								17958
							],
							[
								18004,
								18027
							],
							[
								18084,
								18091
							],
							[
								18109,
								18116
							],
							[
								18141,
								18166
							],
							[
								18226,
								18233
							],
							[
								18254,
								18261
							],
							[
								18291,
								18346
							],
							[
								18451,
								18458
							],
							[
								18596,
								18620
							],
							[
								18670,
								18674
							],
							[
								18705,
								18739
							],
							[
								18750,
								18763
							],
							[
								18822,
								18867
							],
							[
								18932,
								18943
							],
							[
								18963,
								18983
							],
							[
								19024,
								19053
							],
							[
								19077,
								19088
							],
							[
								19103,
								19115
							],
							[
								19163,
								19202
							],
							[
								19303,
								19307
							],
							[
								19340,
								19345
							],
							[
								19371,
								19377
							],
							[
								19406,
								19412
							],
							[
								19505,
								19518
							],
							[
								19546,
								19559
							],
							[
								19686,
								19697
							],
							[
								19777,
								19837
							],
							[
								19907,
								19924
							],
							[
								19985,
								20009
							],
							[
								20093,
								20120
							],
							[
								20342,
								20362
							],
							[
								20392,
								20403
							],
							[
								20504,
								20539
							],
							[
								20579,
								20597
							],
							[
								20775,
								20796
							],
							[
								20820,
								20830
							],
							[
								20866,
								20895
							],
							[
								20952,
								20962
							],
							[
								21013,
								21018
							],
							[
								21075,
								21088
							],
							[
								21162,
								21221
							],
							[
								21288,
								21313
							],
							[
								21695,
								21725
							],
							[
								22095,
								22135
							],
							[
								22270,
								22281
							],
							[
								22325,
								22362
							],
							[
								22497,
								22508
							],
							[
								22554,
								22610
							],
							[
								22772,
								22836
							],
							[
								22985,
								23036
							],
							[
								23704,
								23766
							],
							[
								23948,
								23973
							],
							[
								24072,
								24097
							],
							[
								24212,
								24281
							],
							[
								24378,
								24400
							],
							[
								24434,
								24445
							],
							[
								24468,
								24490
							],
							[
								24733,
								24805
							],
							[
								24908,
								24979
							],
							[
								25077,
								25128
							],
							[
								25302,
								25349
							],
							[
								25416,
								25459
							],
							[
								25589,
								25646
							],
							[
								25740,
								25746
							],
							[
								25760,
								25766
							],
							[
								26072,
								26106
							],
							[
								26409,
								26433
							],
							[
								26500,
								26505
							],
							[
								26534,
								26539
							],
							[
								26816,
								26829
							],
							[
								26885,
								26937
							],
							[
								26943,
								26960
							],
							[
								26990,
								26999
							],
							[
								27015,
								27025
							],
							[
								27037,
								27054
							],
							[
								27077,
								27086
							],
							[
								27087,
								27110
							],
							[
								27155,
								27179
							],
							[
								27265,
								27309
							],
							[
								27479,
								27513
							],
							[
								27579,
								27615
							],
							[
								27670,
								27687
							],
							[
								28013,
								28058
							],
							[
								28165,
								28178
							],
							[
								28269,
								28282
							],
							[
								28381,
								28394
							],
							[
								28468,
								28511
							],
							[
								28512,
								28531
							],
							[
								28546,
								28550
							],
							[
								28673,
								28693
							],
							[
								28746,
								28769
							],
							[
								28849,
								28869
							],
							[
								28951,
								28969
							],
							[
								29112,
								29130
							],
							[
								29203,
								29235
							],
							[
								29246,
								29272
							],
							[
								29381,
								29390
							],
							[
								29593,
								29625
							],
							[
								29654,
								29670
							],
							[
								29685,
								29692
							],
							[
								29711,
								29730
							],
							[
								29769,
								29790
							],
							[
								29830,
								29843
							],
							[
								29894,
								29915
							],
							[
								30085,
								30113
							],
							[
								30332,
								30349
							],
							[
								30350,
								30364
							],
							[
								30386,
								30393
							],
							[
								30444,
								30461
							],
							[
								30462,
								30471
							],
							[
								30531,
								30548
							],
							[
								30549,
								30572
							],
							[
								30628,
								30652
							],
							[
								33318,
								33346
							],
							[
								33777,
								33781
							],
							[
								33910,
								33923
							],
							[
								34239,
								34251
							],
							[
								34515,
								34528
							],
							[
								34634,
								34648
							],
							[
								35542,
								35570
							],
							[
								35687,
								35700
							],
							[
								35814,
								35838
							],
							[
								35931,
								35965
							],
							[
								36090,
								36129
							],
							[
								36176,
								36213
							],
							[
								36260,
								36287
							],
							[
								36298,
								36314
							],
							[
								36372,
								36394
							],
							[
								36427,
								36437
							],
							[
								36487,
								36499
							],
							[
								36783,
								36793
							],
							[
								36868,
								36880
							],
							[
								37161,
								37187
							],
							[
								37439,
								37487
							],
							[
								37535,
								37647
							],
							[
								37753,
								37776
							],
							[
								37915,
								37947
							],
							[
								38263,
								38317
							],
							[
								38680,
								38732
							],
							[
								38871,
								38897
							],
							[
								39181,
								39197
							],
							[
								39364,
								39375
							],
							[
								39578,
								39630
							],
							[
								39806,
								39888
							],
							[
								40049,
								40059
							],
							[
								40077,
								40090
							],
							[
								40269,
								40304
							],
							[
								40465,
								40524
							],
							[
								41009,
								41045
							],
							[
								41204,
								41220
							],
							[
								41234,
								41256
							],
							[
								41370,
								41376
							],
							[
								41482,
								41495
							],
							[
								43110,
								43148
							],
							[
								43248,
								43264
							],
							[
								43337,
								43381
							],
							[
								43697,
								43717
							],
							[
								43920,
								43962
							],
							[
								44160,
								44191
							],
							[
								44241,
								44283
							],
							[
								44405,
								44429
							],
							[
								44689,
								44699
							],
							[
								44747,
								44751
							],
							[
								44787,
								44818
							],
							[
								44829,
								44846
							],
							[
<<<<<<< HEAD
								44530,
								44536
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"ConcatIterator = iterator =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							" (...args) =>",
							" (...args) =>",
							" (module, ...args) =>",
							"m =>",
							".show = value =>",
							".printNode = arg =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							" function padTrunc(len, pad = ' ')",
							" s =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range, file)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function ParentNode(node, ast = $.data)",
							"function NextSibling(node, ast = $.data)",
							"function PreviousSibling(node, ast = $.data)",
							"function FirstChild(node, ast = $.data)",
							"function LastChild(node, ast = $.data)",
							"function Terminate(exitCode)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							"([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"colorText = x =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"function MakeId(name)",
							"function MakeQuickJSClass(node, ast = $)",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"async function ASTShell(...args)",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							"getType(name_or_id)",
							" n =>",
							"predicate = () =>",
							"namespaceOf(node)",
							"getClass(name_or_id)",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"s =>",
							" fr =>"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					390,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
=======
								44989,
								45023
							],
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
							[
								45262,
								45281
							],
							[
								45319,
								45341
							],
							[
								45454,
								45476
							],
							[
								45589,
								45624
							],
							[
								45672,
								45699
							],
							[
								45790,
								45828
							],
							[
								46037,
								46085
							],
							[
								46670,
								46699
							],
							[
								47148,
								47188
							],
							[
								47283,
								47310
							],
							[
								47367,
								47394
							],
							[
								47600,
								47614
							],
							[
								47663,
								47669
							],
							[
								47710,
								47776
							],
							[
								47778,
								47782
							],
							[
								47940,
								47947
							],
							[
								48039,
								48049
							],
							[
								48160,
								48169
							],
							[
								48275,
								48301
							],
							[
								48434,
								48465
							],
							[
								48630,
								48653
							],
							[
								48792,
								48816
							],
							[
								48986,
								49009
							],
							[
								49189,
								49208
							],
							[
								49250,
								49258
							],
							[
								49306,
								49315
							],
							[
								49349,
								49358
							],
							[
								49392,
								49401
							],
							[
								49435,
								49444
							],
							[
								49478,
								49487
							],
							[
								49520,
								49529
							],
							[
								49563,
								49572
							],
							[
								49606,
								49615
							],
							[
								49640,
								49674
							],
							[
								49820,
								49865
							],
							[
								49931,
								49941
							],
							[
								49980,
								49990
							],
							[
								50010,
								50020
							],
							[
								50049,
								50074
							],
							[
								50206,
								50231
							],
							[
								50330,
								50365
							],
							[
								50418,
								50452
							],
							[
								50534,
								50570
							],
							[
								50699,
								50703
							],
							[
								50734,
								50738
							],
							[
								50781,
								50785
							],
							[
								50813,
								50817
							],
							[
								50846,
								50874
							],
							[
								51004,
								51008
							],
							[
								51031,
								51062
							],
							[
								51401,
								51437
							],
							[
								51686,
								51716
							],
							[
								51885,
								51889
							],
							[
								52174,
								52201
							],
							[
								52245,
								52254
							],
							[
								52307,
								52319
							],
							[
								52462,
								52474
							],
							[
								52601,
								52626
							],
							[
								52666,
								52692
							],
							[
								52946,
								52970
							],
							[
								53164,
								53187
							],
							[
								53285,
								53432
							],
							[
								53441,
								53523
							],
							[
								53564,
								53575
							],
							[
								53577,
								53589
							],
							[
								53815,
								53835
							],
							[
								54052,
								54067
							],
							[
								54348,
								54371
							],
							[
								54577,
								54595
							],
							[
								54809,
								54823
							],
							[
								54884,
								54896
							],
							[
								54956,
								54965
							],
							[
								55243,
								55259
							],
							[
								55695,
								55731
							],
							[
								55859,
								55868
							],
							[
								56044,
								56055
							],
							[
								56066,
								56074
							],
							[
								56123,
								56135
							],
							[
								56382,
								56394
							],
							[
								56579,
								56605
							],
							[
								56624,
								56628
							],
							[
								56715,
								56739
							],
							[
								56817,
								56846
							],
							[
								56900,
								56931
							],
							[
								56938,
								56941
							],
							[
								56985,
								56998
							],
							[
								57089,
								57160
							],
							[
								57186,
								57212
							],
							[
								57356,
								57386
							],
							[
								57545,
								57565
							],
							[
								57645,
								57678
							],
							[
								57835,
								57891
							],
							[
								57902,
								57918
							],
							[
								58056,
								58087
							],
							[
								58127,
								58178
							],
							[
								58534,
								58562
							],
							[
								58717,
								58781
							],
							[
								58843,
								58858
							],
							[
								58927,
								58941
							],
							[
								58980,
								59003
							],
							[
								59195,
								59213
							],
							[
								59404,
								59474
							],
							[
								59623,
								59647
							],
							[
								59666,
								59674
							],
							[
								59710,
								59725
							],
							[
								59854,
								59867
							],
							[
								60030,
								60046
							],
							[
								60241,
								60267
							],
							[
								60283,
								60305
							],
							[
								60568,
								60572
							],
							[
								60758,
								60780
							],
							[
								60821,
								60834
							],
							[
								60958,
								60980
							],
							[
								61021,
								61034
							],
							[
								61140,
								61162
							],
							[
								61207,
								61220
							],
							[
								61256,
								61278
							],
							[
								61318,
								61331
							],
							[
								61351,
								61392
							],
							[
								61683,
								61706
							],
							[
								61788,
								61810
							],
							[
								61885,
								61905
							],
							[
								62034,
								62045
							],
							[
								62078,
								62095
							],
							[
								62259,
								62278
							],
							[
								62313,
								62335
							],
							[
								62468,
								62489
							],
							[
								62627,
								62647
							],
							[
								62714,
								62737
							],
							[
								62814,
								62836
							],
							[
								62945,
								62969
							],
							[
								63026,
								63038
							],
							[
								63212,
								63230
							],
							[
								63287,
								63299
							],
							[
								63454,
								63477
							],
							[
								63610,
								63626
							],
							[
								63672,
								63685
							],
							[
								63723,
								63790
							],
							[
								63827,
								63849
							],
							[
								63895,
								63908
							],
							[
								63960,
								63973
							],
							[
								64041,
								64064
							],
							[
								64184,
								64206
							],
							[
								64295,
								64308
							],
							[
								64362,
								64378
							],
							[
								64416,
								64420
							],
							[
								64530,
								64567
							],
							[
								64578,
								64588
							],
							[
								64597,
								64626
							],
							[
								64846,
								64862
							],
							[
								64884,
								64895
							],
							[
								64951,
								64978
							],
							[
								65025,
								65043
							],
							[
								65117,
								65152
							],
							[
								65278,
								65299
							],
							[
								65334,
								65343
							],
							[
								65352,
								65360
							],
							[
								65403,
								65412
							],
							[
								65435,
								65444
							],
							[
								65455,
								65463
							],
							[
								65530,
								65539
							],
							[
								65573,
								65601
							],
							[
								65743,
								65762
							],
							[
								65970,
								65996
							],
							[
								66285,
								66307
							],
							[
								66453,
								66475
							],
							[
								66989,
								67039
							],
							[
								67205,
								67254
							],
							[
								67323,
								67330
							],
							[
								67416,
								67430
							],
							[
								67512,
								67522
							],
							[
								67631,
								67635
							],
							[
								67666,
								67686
							],
							[
								67732,
								67745
							],
							[
								67795,
								67807
							],
							[
								67950,
								67965
							],
							[
								68382,
								68420
							],
							[
								68604,
								68615
							],
							[
								68651,
								68672
							],
							[
								68742,
								68749
							],
							[
								68788,
								68818
							],
							[
								68840,
								68856
							],
							[
								68857,
								68877
							],
							[
								68968,
								69003
							],
							[
								69060,
								69123
							],
							[
								69195,
								69227
							],
							[
								69319,
								69341
							],
							[
								69391,
								69434
							],
							[
								69681,
								69706
							],
							[
								69753,
								69783
							],
							[
								69801,
								69819
							],
							[
								69897,
								69902
							],
							[
<<<<<<< HEAD
								44562,
								44568
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"ConcatIterator = iterator =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							" (...args) =>",
							" (...args) =>",
							" (module, ...args) =>",
							"m =>",
							".show = value =>",
							".printNode = arg =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							" function padTrunc(len, pad = ' ')",
							" s =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range, file)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function ParentNode(node, ast = $.data)",
							"function NextSibling(node, ast = $.data)",
							"function PreviousSibling(node, ast = $.data)",
							"function FirstChild(node, ast = $.data)",
							"function LastChild(node, ast = $.data)",
							"function Terminate(exitCode)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							"([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"colorText = x =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"function MakeId(name)",
							"function MakeQuickJSClass(node, ast = $)",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"async function ASTShell(...args)",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							"getType(name_or_id)",
							" n =>",
							"predicate = () =>",
							"namespaceOf(node)",
							"getClass(name_or_id)",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"s =>",
							" fr =>"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					391,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ast-shell.js",
						"symkeys":
						[
							[
								1997,
								2001
							],
							[
								2060,
								2064
							],
							[
								2100,
								2130
							],
							[
								2173,
								2194
							],
							[
								2343,
								2369
							],
							[
								2527,
								2546
							],
							[
								2875,
								2903
							],
							[
								3193,
								3201
							],
							[
								3202,
								3216
							],
							[
								3298,
								3308
							],
							[
								3371,
								3419
							],
							[
								3533,
								3542
							],
							[
								3652,
								3674
							],
							[
								4136,
								4158
							],
							[
								4522,
								4540
							],
							[
								4640,
								4658
							],
							[
								4764,
								4790
							],
							[
								4926,
								4930
							],
							[
								5009,
								5025
							],
							[
								5511,
								5530
							],
							[
								6029,
								6034
							],
							[
								6109,
								6124
							],
							[
								6209,
								6217
							],
							[
								6258,
								6266
							],
							[
								6638,
								6711
							],
							[
								6715,
								6723
							],
							[
								6820,
								6850
							],
							[
								6879,
								6884
							],
							[
								6917,
								6924
							],
							[
								6953,
								6981
							],
							[
								7318,
								7325
							],
							[
								7344,
								7367
							],
							[
								7397,
								7404
							],
							[
								7435,
								7443
							],
							[
								7481,
								7488
							],
							[
								7688,
								7701
							],
							[
								7882,
								7925
							],
							[
								7958,
								7967
							],
							[
								8028,
								8032
							],
							[
								8134,
								8138
							],
							[
								8174,
								8188
							],
							[
								8300,
								8328
							],
							[
								8533,
								8558
							],
							[
								8656,
								8680
							],
							[
								8753,
								8757
							],
							[
								8876,
								8880
							],
							[
								8944,
								8958
							],
							[
								9014,
								9023
							],
							[
								9321,
								9335
							],
							[
								9458,
								9493
							],
							[
								9582,
								9587
							],
							[
								9710,
								9722
							],
							[
								9775,
								9800
							],
							[
								9849,
								9860
							],
							[
								9900,
								9911
							],
							[
								10049,
								10060
							],
							[
								10148,
								10161
							],
							[
								10242,
								10274
							],
							[
								10512,
								10541
							],
							[
								10552,
								10567
							],
							[
								10629,
								10648
							],
							[
								10856,
								10895
							],
							[
								10960,
								11000
							],
							[
								11083,
								11127
							],
							[
								11209,
								11248
							],
							[
								11310,
								11348
							],
							[
								11434,
								11462
							],
							[
								11525,
								11552
							],
							[
								12103,
								12129
							],
							[
								12396,
								12403
							],
							[
								14319,
								14377
							],
							[
								15413,
								15420
							],
							[
								15484,
								15491
							],
							[
								15501,
								15512
							],
							[
								15553,
								15579
							],
							[
								15695,
								15709
							],
							[
								16006,
								16025
							],
							[
								16052,
								16059
							],
							[
								16148,
								16178
							],
							[
								16244,
								16284
							],
							[
								16460,
								16511
							],
							[
								17500,
								17507
							],
							[
								17914,
								17934
							],
							[
								18110,
								18164
							],
							[
								18353,
								18365
							],
							[
								18393,
								18405
							],
							[
								19022,
								19082
							],
							[
								19693,
								19748
							],
							[
								19844,
								19856
							],
							[
								19861,
								19891
							],
							[
								20172,
								20194
							],
							[
								20240,
								20263
							],
							[
								20335,
								20350
							],
							[
								20485,
								20501
							],
							[
								20905,
								20918
							],
							[
								21043,
								21062
							],
							[
								21114,
								21122
							],
							[
								21179,
								21194
							],
							[
								21354,
								21366
							],
							[
								21711,
								21725
							],
							[
								21825,
								21842
							],
							[
								22069,
								22091
							],
							[
								22208,
								22233
							],
							[
								22333,
								22350
							],
							[
								22405,
								22409
							],
							[
								22497,
								22501
							],
							[
								22553,
								22577
							],
							[
								22693,
								22733
							],
							[
								22794,
								22815
							],
							[
								23099,
								23131
							],
							[
								23616,
								23631
							],
							[
								23742,
								23767
							],
							[
								23936,
								23971
							],
							[
								24191,
								24198
							],
							[
								24287,
								24294
							],
							[
								24323,
								24332
							],
							[
								24369,
								24378
							],
							[
								24428,
								24436
							],
							[
								24478,
								24502
							],
							[
								24598,
								24614
							],
							[
								24650,
								24690
							],
							[
								24988,
								25031
							],
							[
								25974,
								25985
							],
							[
								26730,
								26780
							],
							[
								26802,
								26828
							],
							[
								26863,
								26892
							],
							[
								27236,
								27279
							],
							[
								27392,
								27396
							],
							[
								27412,
								27416
							],
							[
								27461,
								27548
							],
							[
								27715,
								27748
							],
							[
								27807,
								27812
							],
							[
								27882,
								27924
							],
							[
								28000,
								28010
							],
							[
								28129,
								28169
							],
							[
								28310,
								28315
							],
							[
								28373,
								28380
							],
							[
								28497,
								28501
							],
							[
								28580,
								28584
							],
							[
								28738,
								28745
							],
							[
								28832,
								28837
							],
							[
								28945,
								28961
							],
							[
								29072,
								29079
							],
							[
								29158,
								29162
							],
							[
								29223,
								29230
							],
							[
								29306,
								29313
							],
							[
								29370,
								29416
							],
							[
								29456,
								29466
							],
							[
								29619,
								29655
							],
							[
								29696,
								29708
							],
							[
								31351,
								31372
							],
							[
								31571,
								31611
							],
							[
								31780,
								31784
							],
							[
								31962,
								31966
							],
							[
								32096,
								32100
							],
							[
								32240,
								32244
							],
							[
								32379,
								32383
							],
							[
								32451,
								32455
							],
							[
								37376,
								37408
							],
							[
								37895,
								37905
							],
							[
								37955,
								37965
							],
							[
								38013,
								38023
							],
							[
								38601,
								38612
							],
							[
								38706,
								38710
							],
							[
								38737,
								38741
							],
							[
								38765,
								38769
							],
							[
								38793,
								38797
							],
							[
								38826,
								38863
							],
							[
								39302,
								39338
							],
							[
								39427,
								39470
							],
							[
								39757,
								39776
							],
							[
								39955,
								39960
							],
							[
								40263,
								40280
							],
							[
								40355,
								40372
							],
							[
								40448,
								40468
							],
							[
								40534,
								40557
							],
							[
								40645,
								40650
							],
							[
								40762,
								40785
							],
							[
								40873,
								40878
							],
							[
								40980,
								40992
							],
							[
								41107,
								41112
							],
							[
								41168,
								41197
							],
							[
								41376,
								41381
							],
							[
								42352,
								42410
							],
							[
								43409,
								43420
							],
							[
								43453,
								43464
							],
							[
								43513,
								43519
							],
							[
								43572,
								43580
							],
							[
								43878,
								43882
							],
							[
								44574,
								44580
							]
						],
						"symlist":
						[
							"d =>",
							"d =>",
							"traceProxy = (obj, handler) =>",
							" function(name, args)",
							"get(target, key, receiver)",
							"member = function()",
							"ConcatIterator = iterator =>",
							" gen =>",
							" (...args) =>",
							"toString()",
							"async function ImportModule(modulePath, ...args)",
							"module =>",
							" (acc, item) =>",
							"function CommandLine()",
							" (...args) =>",
							" (...args) =>",
							" (module, ...args) =>",
							"m =>",
							".show = value =>",
							".printNode = arg =>",
							"() =>",
							"(item, i, a) =>",
							"entry =>",
							"entry =>",
							"function* IncludeAll(dir, maxDepth = Infinity, pred = entry => /\\.[ch]$/.",
							"(entry))",
							"function SelectLocations(node)",
							" n =>",
							"prop =>",
							"function LocationString(loc)",
							"node =>",
							"function Structs(nodes)",
							"node =>",
							"field =>",
							"node =>",
							"(field, i) =>",
							"function Table(list, pred = (n, l) => true)",
							"(n, i) =>",
							"e =>",
							"k =>",
							"([i, l, n]) =>",
							" function returnType(n)",
							" function numArgs(n)",
							" function Params(n)",
							"p =>",
							"k =>",
							"([i, l, n]) =>",
							"(k, j) =>",
							"(acc, name) =>",
							" function padTrunc(len, pad = ' ')",
							" s =>",
							"(name, i) =>",
							"pad = (cols, pad, sep) =>",
							"(key, i) =>",
							"(s, col) =>",
							"(acc, n) =>",
							"(acc, row) =>",
							"function PrintRange(range, file)",
							"function OverlapRange(r1, r2)",
							"GetRange = r =>",
							"InRange = (i, r) =>",
							"function ParentNode(node, ast = $.data)",
							"function NextSibling(node, ast = $.data)",
							"function PreviousSibling(node, ast = $.data)",
							"function FirstChild(node, ast = $.data)",
							"function LastChild(node, ast = $.data)",
							"function Terminate(exitCode)",
							"function ParseStructs(text)",
							"function* (decl, includes)",
							"name =>",
							"function InspectStruct(decl, includes, compiler = 'clang')",
							"line =>",
							"line =>",
							"(col, i) =>",
							"([field, offset, size]) =>",
							"(acc, line) =>",
							"toString(sep = ' ')",
							"line =>",
							"function RoundTo(value, align)",
							"function MakeStructClass(decl, filename)",
							"function* GenerateStructClass(decl, ffiPrefix = '')",
							"line =>",
							"([field, member]) =>",
							"function GenerateGetSet(name, offset, type, ffiPrefix)",
							"toHex = v =>",
							"toHex = v =>",
							"function ByteLength2TypedArray(byteLength, signed, floating)",
							"function ByteLength2Value(byteLength, signed, floating)",
							"FFI_Function",
							"constructor(node, prefix = '')",
							"([name, type], idx) =>",
							"generateDefine(fp, lib)",
							" (name, lib) =>",
							"colorText = x =>",
							"generateDoc()",
							"push = (...args) =>",
							"field =>",
							"(field, col) =>",
							"js = type =>",
							"generateCall()",
							"([name, type]) =>",
							"generate(fp, lib, exp)",
							"generateFunction(fp, lib)",
							"([name, type]) =>",
							"p =>",
							"p =>",
							"compileFunction(fp, lib)",
							"function FdReader(fd, bufferSize = 1024)",
							"async (push, stop) =>",
							"async function CommandRead(args)",
							"async reader =>",
							" function ReadOutput(fd)",
							"async function LibraryExports(file)",
							"line =>",
							"line =>",
							"column =>",
							"(a, b) =>",
							"entry =>",
							"function SaveLibraries()",
							"(acc, [n, e]) =>",
							"function ProcessFile(file, debug = true)",
							"function ParseECMAScript(file, params = {})",
							" (fr, i) =>",
							"function PrintECMAScript(ast, comments, printer = ",
							"({ indent: 4 }, comments))",
							"function PrintCArray(strings)",
							"function Namespaces(nodePath, ast = $.data)",
							"p =>",
							"n =>",
							"function* Constants(node, t = (name, value) => [name, !isNaN(+value) ? +value : value])",
							"function GetImports(ast = $.data)",
							" n =>",
							"function GetIdentifiers(nodes, key = null)",
							" (n, k) =>",
							"function MemberNames(members, flags = 0)",
							" n =>",
							"path =>",
							"p =>",
							"p =>",
							"name =>",
							" n =>",
							"([node, ptr]) =>",
							"path =>",
							"p =>",
							"name =>",
							"name =>",
							"function UnsetLoc(node, pred = (v, p) => true)",
							" (v, k) =>",
							"function MakeFFI(node, lib, exp, fp)",
							"function* ()",
							"function MakeId(name)",
							"function MakeQuickJSClass(node, ast = $)",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"n =>",
							"async function ASTShell(...args)",
							" (a, p) =>",
							" (a, p) =>",
							" (a, p) =>",
							"get flags()",
							"v =>",
							"v =>",
							"d =>",
							"l =>",
							"async function Compile(file, ...args)",
							"select(name_or_id, pred = n => true)",
							"getByIdOrName(name_or_id, pred = n => true)",
							"getType(name_or_id)",
							" n =>",
							"predicate = () =>",
							"namespaceOf(node)",
							"getClass(name_or_id)",
							"getFunction(name_or_id)",
							" n =>",
							"getVariable(name_or_id)",
							" n =>",
							"getLoc(node)",
							"() =>",
							"pathOf(needle, maxDepth = 10)",
							" n =>",
							"Pointer.prototype.chain = function(step, limit = Infinity)",
							".F = arg =>",
							".T = arg =>",
							" () =>",
							" node =>",
							"s =>",
							" fr =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABADQAAICBkID0+CiAgZCA9PgogIHRyYWNlUHJveHkgPSAob2JqLCBoYW5kbGVyKSA9PgpmdW5jdGlvbihuYW1lLCBhcmdzKQogIGdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpCiAgbWVtYmVyID0gZnVuY3Rpb24oKQpDb25jYXRJdGVyYXRvciA9IGl0ZXJhdG9yID0+CmdlbiA9PgooLi4uYXJncykgPT4KICB0b1N0cmluZygpCkltcG9ydE1vZHVsZShtb2R1bGVQYXRoLCAuLi5hcmdzKQogIG1vZHVsZSA9PgooYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4KKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCm4gPT4KICBwcm9wID0+CkxvY2F0aW9uU3RyaW5nKGxvYykKICBub2RlID0+ClN0cnVjdHMobm9kZXMpCiAgbm9kZSA9PgogIGZpZWxkID0+CiAgbm9kZSA9PgooZmllbGQsIGkpID0+ClRhYmxlKGxpc3QsIHByZWQgPSAobiwgbCkgPT4gdHJ1ZSkKKG4sIGkpID0+CiAgZSA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KICByZXR1cm5UeXBlKG4pCiAgbnVtQXJncyhuKQpQYXJhbXMobikKICBwID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgooaywgaikgPT4KKGFjYywgbmFtZSkgPT4KICBwYWRUcnVuYyhsZW4sIHBhZCA9ICcgJykKcyA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSwgZmlsZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KUGFyZW50Tm9kZShub2RlLCBhc3QgPSAkLmRhdGEpCk5leHRTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKUHJldmlvdXNTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKRmlyc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpCkxhc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpClRlcm1pbmF0ZShleGl0Q29kZSkKUGFyc2VTdHJ1Y3RzKHRleHQpCihkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgooW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQoobmFtZSwgbGliKSA9PgogIGNvbG9yVGV4dCA9IHggPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQooZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBwID0+CiAgbiA9PgpDb25zdGFudHMobm9kZSwgdCA9IChuYW1lLCB2YWx1ZSkgPT4gW25hbWUsICFpc05hTigrdmFsdWUpID8gK3ZhbHVlIDogdmFsdWVdKQpHZXRJbXBvcnRzKGFzdCA9ICQuZGF0YSkKbiA9PgpHZXRJZGVudGlmaWVycyhub2Rlcywga2V5ID0gbnVsbCkKKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKbiA9PgogIHBhdGggPT4KICBwID0+CiAgcCA9PgogIG5hbWUgPT4KbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcGF0aCA9PgogIHAgPT4KICBuYW1lID0+CiAgbmFtZSA9PgpVbnNldExvYyhub2RlLCBwcmVkID0gKHYsIHApID0+IHRydWUpCih2LCBrKSA9PgpNYWtlRkZJKG5vZGUsIGxpYiwgZXhwLCBmcCkKKCkKTWFrZUlkKG5hbWUpCk1ha2VRdWlja0pTQ2xhc3Mobm9kZSwgYXN0ID0gJCkKICBuID0+CiAgbiA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIG4gPT4KQVNUU2hlbGwoLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgooYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBnZXRUeXBlKG5hbWVfb3JfaWQpCm4gPT4KICBwcmVkaWNhdGUgPSAoKSA9PgogIG5hbWVzcGFjZU9mKG5vZGUpCiAgZ2V0Q2xhc3MobmFtZV9vcl9pZCkKICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQpuID0+CiAgZ2V0VmFyaWFibGUobmFtZV9vcl9pZCkKbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCm4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KKCkgPT4Kbm9kZSA9PgogIHMgPT4KZnIgPT4AAAAAAAAAAEANAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					392,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/os-helpers.js",
						"symkeys":
						[
							[
								893,
								919
							],
							[
								1244,
								1271
							],
							[
								1282,
								1296
							],
							[
								1513,
								1528
							],
							[
								1558,
								1577
							],
							[
								1613,
								1637
							],
							[
								1726,
								1733
							],
							[
								1828,
								1836
							],
							[
								1931,
								1939
							],
							[
								2098,
								2118
							],
							[
								2253,
								2285
							]
						],
						"symlist":
						[
							" function Execute(...args)",
							" function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							" function Spawn(...args)",
							"stdin()",
							"stdout()",
							"stderr()",
							" function Shell(cmd)",
							" function ExecTool(cmd, ...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABADQAAICBkID0+CiAgZCA9PgogIHRyYWNlUHJveHkgPSAob2JqLCBoYW5kbGVyKSA9PgpmdW5jdGlvbihuYW1lLCBhcmdzKQogIGdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpCiAgbWVtYmVyID0gZnVuY3Rpb24oKQpDb25jYXRJdGVyYXRvciA9IGl0ZXJhdG9yID0+CmdlbiA9PgooLi4uYXJncykgPT4KICB0b1N0cmluZygpCkltcG9ydE1vZHVsZShtb2R1bGVQYXRoLCAuLi5hcmdzKQogIG1vZHVsZSA9PgooYWNjLCBpdGVtKSA9PgpDb21tYW5kTGluZSgpCiguLi5hcmdzKSA9PgooLi4uYXJncykgPT4KKG1vZHVsZSwgLi4uYXJncykgPT4KICBtID0+CiAgLnNob3cgPSB2YWx1ZSA9PgogIC5wcmludE5vZGUgPSBhcmcgPT4KKCkgPT4KKGl0ZW0sIGksIGEpID0+CiAgZW50cnkgPT4KICBlbnRyeSA9PgpJbmNsdWRlQWxsKGRpciwgbWF4RGVwdGggPSBJbmZpbml0eSwgcHJlZCA9IGVudHJ5ID0+IC9cLltjaF0kLy4KKGVudHJ5KSkKU2VsZWN0TG9jYXRpb25zKG5vZGUpCm4gPT4KICBwcm9wID0+CkxvY2F0aW9uU3RyaW5nKGxvYykKICBub2RlID0+ClN0cnVjdHMobm9kZXMpCiAgbm9kZSA9PgogIGZpZWxkID0+CiAgbm9kZSA9PgooZmllbGQsIGkpID0+ClRhYmxlKGxpc3QsIHByZWQgPSAobiwgbCkgPT4gdHJ1ZSkKKG4sIGkpID0+CiAgZSA9PgogIGsgPT4KKFtpLCBsLCBuXSkgPT4KICByZXR1cm5UeXBlKG4pCiAgbnVtQXJncyhuKQpQYXJhbXMobikKICBwID0+CiAgayA9PgooW2ksIGwsIG5dKSA9PgooaywgaikgPT4KKGFjYywgbmFtZSkgPT4KICBwYWRUcnVuYyhsZW4sIHBhZCA9ICcgJykKcyA9PgoobmFtZSwgaSkgPT4KICBwYWQgPSAoY29scywgcGFkLCBzZXApID0+CihrZXksIGkpID0+CihzLCBjb2wpID0+CihhY2MsIG4pID0+CihhY2MsIHJvdykgPT4KUHJpbnRSYW5nZShyYW5nZSwgZmlsZSkKT3ZlcmxhcFJhbmdlKHIxLCByMikKR2V0UmFuZ2UgPSByID0+CkluUmFuZ2UgPSAoaSwgcikgPT4KUGFyZW50Tm9kZShub2RlLCBhc3QgPSAkLmRhdGEpCk5leHRTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKUHJldmlvdXNTaWJsaW5nKG5vZGUsIGFzdCA9ICQuZGF0YSkKRmlyc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpCkxhc3RDaGlsZChub2RlLCBhc3QgPSAkLmRhdGEpClRlcm1pbmF0ZShleGl0Q29kZSkKUGFyc2VTdHJ1Y3RzKHRleHQpCihkZWNsLCBpbmNsdWRlcykKICBuYW1lID0+Ckluc3BlY3RTdHJ1Y3QoZGVjbCwgaW5jbHVkZXMsIGNvbXBpbGVyID0gJ2NsYW5nJykKICBsaW5lID0+CiAgbGluZSA9PgooY29sLCBpKSA9PgooW2ZpZWxkLCBvZmZzZXQsIHNpemVdKSA9PgooYWNjLCBsaW5lKSA9PgogIHRvU3RyaW5nKHNlcCA9ICcgJykKICBsaW5lID0+ClJvdW5kVG8odmFsdWUsIGFsaWduKQpNYWtlU3RydWN0Q2xhc3MoZGVjbCwgZmlsZW5hbWUpCkdlbmVyYXRlU3RydWN0Q2xhc3MoZGVjbCwgZmZpUHJlZml4ID0gJycpCiAgbGluZSA9PgooW2ZpZWxkLCBtZW1iZXJdKSA9PgpHZW5lcmF0ZUdldFNldChuYW1lLCBvZmZzZXQsIHR5cGUsIGZmaVByZWZpeCkKICB0b0hleCA9IHYgPT4KICB0b0hleCA9IHYgPT4KQnl0ZUxlbmd0aDJUeXBlZEFycmF5KGJ5dGVMZW5ndGgsIHNpZ25lZCwgZmxvYXRpbmcpCkJ5dGVMZW5ndGgyVmFsdWUoYnl0ZUxlbmd0aCwgc2lnbmVkLCBmbG9hdGluZykKRkZJX0Z1bmN0aW9uCiAgY29uc3RydWN0b3Iobm9kZSwgcHJlZml4ID0gJycpCihbbmFtZSwgdHlwZV0sIGlkeCkgPT4KICBnZW5lcmF0ZURlZmluZShmcCwgbGliKQoobmFtZSwgbGliKSA9PgogIGNvbG9yVGV4dCA9IHggPT4KICBnZW5lcmF0ZURvYygpCiAgcHVzaCA9ICguLi5hcmdzKSA9PgogIGZpZWxkID0+CihmaWVsZCwgY29sKSA9PgogIGpzID0gdHlwZSA9PgogIGdlbmVyYXRlQ2FsbCgpCihbbmFtZSwgdHlwZV0pID0+CiAgZ2VuZXJhdGUoZnAsIGxpYiwgZXhwKQogIGdlbmVyYXRlRnVuY3Rpb24oZnAsIGxpYikKKFtuYW1lLCB0eXBlXSkgPT4KICBwID0+CiAgcCA9PgogIGNvbXBpbGVGdW5jdGlvbihmcCwgbGliKQpGZFJlYWRlcihmZCwgYnVmZmVyU2l6ZSA9IDEwMjQpCihwdXNoLCBzdG9wKSA9PgpDb21tYW5kUmVhZChhcmdzKQogIHJlYWRlciA9PgpSZWFkT3V0cHV0KGZkKQpMaWJyYXJ5RXhwb3J0cyhmaWxlKQogIGxpbmUgPT4KICBsaW5lID0+CiAgY29sdW1uID0+CihhLCBiKSA9PgogIGVudHJ5ID0+ClNhdmVMaWJyYXJpZXMoKQooYWNjLCBbbiwgZV0pID0+ClByb2Nlc3NGaWxlKGZpbGUsIGRlYnVnID0gdHJ1ZSkKUGFyc2VFQ01BU2NyaXB0KGZpbGUsIHBhcmFtcyA9IHt9KQooZnIsIGkpID0+ClByaW50RUNNQVNjcmlwdChhc3QsIGNvbW1lbnRzLCBwcmludGVyID0gCih7IGluZGVudDogNCB9LCBjb21tZW50cykpClByaW50Q0FycmF5KHN0cmluZ3MpCk5hbWVzcGFjZXMobm9kZVBhdGgsIGFzdCA9ICQuZGF0YSkKICBwID0+CiAgbiA9PgpDb25zdGFudHMobm9kZSwgdCA9IChuYW1lLCB2YWx1ZSkgPT4gW25hbWUsICFpc05hTigrdmFsdWUpID8gK3ZhbHVlIDogdmFsdWVdKQpHZXRJbXBvcnRzKGFzdCA9ICQuZGF0YSkKbiA9PgpHZXRJZGVudGlmaWVycyhub2Rlcywga2V5ID0gbnVsbCkKKG4sIGspID0+Ck1lbWJlck5hbWVzKG1lbWJlcnMsIGZsYWdzID0gMCkKbiA9PgogIHBhdGggPT4KICBwID0+CiAgcCA9PgogIG5hbWUgPT4KbiA9PgooW25vZGUsIHB0cl0pID0+CiAgcGF0aCA9PgogIHAgPT4KICBuYW1lID0+CiAgbmFtZSA9PgpVbnNldExvYyhub2RlLCBwcmVkID0gKHYsIHApID0+IHRydWUpCih2LCBrKSA9PgpNYWtlRkZJKG5vZGUsIGxpYiwgZXhwLCBmcCkKKCkKTWFrZUlkKG5hbWUpCk1ha2VRdWlja0pTQ2xhc3Mobm9kZSwgYXN0ID0gJCkKICBuID0+CiAgbiA9PgogIG4gPT4KICBuID0+CiAgbiA9PgogIG4gPT4KQVNUU2hlbGwoLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgooYSwgcCkgPT4KICBnZXQgZmxhZ3MoKQogIHYgPT4KICB2ID0+CiAgZCA9PgogIGwgPT4KQ29tcGlsZShmaWxlLCAuLi5hcmdzKQogIHNlbGVjdChuYW1lX29yX2lkLCBwcmVkID0gbiA9PiB0cnVlKQogIGdldEJ5SWRPck5hbWUobmFtZV9vcl9pZCwgcHJlZCA9IG4gPT4gdHJ1ZSkKICBnZXRUeXBlKG5hbWVfb3JfaWQpCm4gPT4KICBwcmVkaWNhdGUgPSAoKSA9PgogIG5hbWVzcGFjZU9mKG5vZGUpCiAgZ2V0Q2xhc3MobmFtZV9vcl9pZCkKICBnZXRGdW5jdGlvbihuYW1lX29yX2lkKQpuID0+CiAgZ2V0VmFyaWFibGUobmFtZV9vcl9pZCkKbiA9PgogIGdldExvYyhub2RlKQooKSA9PgogIHBhdGhPZihuZWVkbGUsIG1heERlcHRoID0gMTApCm4gPT4KUG9pbnRlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbihzdGVwLCBsaW1pdCA9IEluZmluaXR5KQogIC5GID0gYXJnID0+CiAgLlQgPSBhcmcgPT4KKCkgPT4Kbm9kZSA9PgogIHMgPT4KZnIgPT4AAAAAAAAAAKoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					393,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/soundcloud-tracks.js",
						"symkeys":
						[
							[
								399,
								410
							],
							[
								508,
								513
							],
							[
								599,
								619
							],
							[
								829,
								834
							],
							[
								861,
								866
							],
							[
								908,
								929
							],
							[
								980,
								998
							],
							[
								1025,
								1045
							],
							[
								1121,
								1141
							],
							[
								1188,
								1205
							],
							[
								1245,
								1266
							],
							[
								1522,
								1539
							]
						],
						"symlist":
						[
							"function ()",
							" e =>",
							"function GetTracks()",
							" e =>",
							" e =>",
							" ([url, title, e]) =>",
							" ([url, title]) =>",
							" ([url, ...rest]) =>",
							" ([url, ...rest]) =>",
							"([url, title]) =>",
							"toString(pad = false)",
							"([url, title]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACqAAAARXhlY3V0ZSguLi5hcmdzKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KU3Bhd24oLi4uYXJncykKICBzdGRpbigpCiAgc3Rkb3V0KCkKICBzdGRlcnIoKQpTaGVsbChjbWQpCkV4ZWNUb29sKGNtZCwgLi4uYXJncykAAAAAAAAAAKgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					394,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/deep.js",
						"symkeys":
						[
							[
								299,
								343
							],
							[
								635,
								674
							],
							[
								750,
								767
							],
							[
								823,
								840
							],
							[
								890,
								907
							],
							[
								949,
								966
							],
							[
								994,
								1016
							],
							[
								1149,
								1163
							],
							[
								1363,
								1381
							],
							[
								2008,
								2029
							],
							[
								2506,
								2543
							],
							[
								2590,
								2640
							],
							[
								3064,
								3116
							],
							[
								3573,
								3600
							],
							[
								3849,
								3878
							],
							[
								3895,
								3908
							],
							[
								4444,
								4462
							],
							[
								4498,
								4513
							],
							[
								4634,
								4659
							],
							[
								4723,
								4748
							],
							[
								4781,
								4806
							],
							[
								4923,
								4944
							],
							[
								5230,
								5258
							],
							[
								5851,
								5877
							],
							[
								5965,
								5981
							],
							[
								6071,
								6093
							],
							[
								6201,
								6232
							],
							[
								6807,
								6832
							],
							[
								7182,
								7212
							]
						],
						"symlist":
						[
							"function ReturnValuePath(value, path, flags)",
							"function ReturnValuePathFunction(flags)",
							" (value, path) =>",
							" (value, path) =>",
							" (value, path) =>",
							" (value, path) =>",
							"isPlainObject = obj =>",
							"clone = obj =>",
							"equals = (a, b) =>",
							"extend = (...args) =>",
							"select = (root, filter, flags = 0) =>",
							" function SelectFunction(root, filter, path = [])",
							"find = (node, filter, flags = 0, root, path = []) =>",
							"forEach = function(...args)",
							"iterate = function* (...args)",
							"filter = v =>",
							"filter = (v, p) =>",
							"map = (p, v) =>",
							"insert = (name, value) =>",
							"insert = (name, value) =>",
							"insert = (name, value) =>",
							"get = (root, path) =>",
							"set = (root, path, value) =>",
							"delegate = (root, path) =>",
							" function(value)",
							" function(path, value)",
							"transform = (obj, filter, t) =>",
							"unset = (object, path) =>",
							"unflatten = (map, obj = {}) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACoAAAAKCkKZSA9PgpHZXRUcmFja3MoKQplID0+CmUgPT4KKFt1cmwsIHRpdGxlLCBlXSkgPT4KKFt1cmwsIHRpdGxlXSkgPT4KKFt1cmwsIC4uLnJlc3RdKSA9PgooW3VybCwgLi4ucmVzdF0pID0+CihbdXJsLCB0aXRsZV0pID0+CiAgdG9TdHJpbmcocGFkID0gZmFsc2UpCihbdXJsLCB0aXRsZV0pID0+AAAAAAAAAAAFAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					395,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAFAwAAUmV0dXJuVmFsdWVQYXRoKHZhbHVlLCBwYXRoLCBmbGFncykKUmV0dXJuVmFsdWVQYXRoRnVuY3Rpb24oZmxhZ3MpCih2YWx1ZSwgcGF0aCkgPT4KKHZhbHVlLCBwYXRoKSA9PgoodmFsdWUsIHBhdGgpID0+Cih2YWx1ZSwgcGF0aCkgPT4KICBpc1BsYWluT2JqZWN0ID0gb2JqID0+CiAgY2xvbmUgPSBvYmogPT4KICBlcXVhbHMgPSAoYSwgYikgPT4KICBleHRlbmQgPSAoLi4uYXJncykgPT4KICBzZWxlY3QgPSAocm9vdCwgZmlsdGVyLCBmbGFncyA9IDApID0+ClNlbGVjdEZ1bmN0aW9uKHJvb3QsIGZpbHRlciwgcGF0aCA9IFtdKQogIGZpbmQgPSAobm9kZSwgZmlsdGVyLCBmbGFncyA9IDAsIHJvb3QsIHBhdGggPSBbXSkgPT4KICBmb3JFYWNoID0gZnVuY3Rpb24oLi4uYXJncykKICBpdGVyYXRlID0gZnVuY3Rpb24qKC4uLmFyZ3MpCiAgZmlsdGVyID0gdiA9PgogIGZpbHRlciA9ICh2LCBwKSA9PgogIG1hcCA9IChwLCB2KSA9PgogIGluc2VydCA9IChuYW1lLCB2YWx1ZSkgPT4KICBpbnNlcnQgPSAobmFtZSwgdmFsdWUpID0+CiAgaW5zZXJ0ID0gKG5hbWUsIHZhbHVlKSA9PgogIGdldCA9IChyb290LCBwYXRoKSA9PgogIHNldCA9IChyb290LCBwYXRoLCB2YWx1ZSkgPT4KICBkZWxlZ2F0ZSA9IChyb290LCBwYXRoKSA9PgpmdW5jdGlvbih2YWx1ZSkKZnVuY3Rpb24ocGF0aCwgdmFsdWUpCiAgdHJhbnNmb3JtID0gKG9iaiwgZmlsdGVyLCB0KSA9PgogIHVuc2V0ID0gKG9iamVjdCwgcGF0aCkgPT4KICB1bmZsYXR0ZW4gPSAobWFwLCBvYmogPSB7fSkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					396,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
						"symkeys":
						[
							[
								500,
								514
							],
							[
								594,
								617
							],
							[
								755,
								772
							],
							[
								813,
								830
							],
							[
								863,
								872
							],
							[
								906,
								916
							],
							[
								950,
								960
							],
							[
								995,
								1006
							],
							[
								1040,
								1050
							],
							[
								1085,
								1096
							],
							[
								1133,
								1146
							],
							[
								1184,
								1198
							],
							[
								1234,
								1246
							],
							[
								1282,
								1294
							],
							[
								1347,
								1367
							],
							[
								1420,
								1433
							],
							[
								1493,
								1514
							],
							[
								1556,
								1572
							],
							[
								1626,
								1645
							],
							[
								1680,
								1696
							],
							[
								1820,
								1854
							],
							[
								1877,
								1909
							],
							[
								1932,
								1975
							],
							[
								3804,
								3823
							],
							[
								3921,
								3937
							],
							[
								3999,
								4017
							],
							[
								4081,
								4100
							],
							[
								4165,
								4174
							],
							[
								4229,
								4246
							],
							[
								4309,
								4326
							],
							[
								4389,
								4403
							],
							[
								4463,
								4478
							],
							[
								4539,
								4554
							],
							[
								4615,
								4623
							],
							[
								4677,
								4689
							],
							[
								4747,
								4757
							],
							[
								4813,
								4824
							],
							[
								4881,
								4889
							],
							[
								4943,
								4965
							],
							[
								5033,
								5048
							],
							[
								5109,
								5131
							],
							[
								5199,
								5215
							],
							[
								5277,
								5293
							],
							[
								5355,
								5367
							],
							[
								5425,
								5437
							],
							[
								5495,
								5508
							],
							[
								5567,
								5585
							],
							[
								5643,
								5661
							],
							[
								5725,
								5747
							],
							[
								5815,
								5842
							],
							[
								5915,
								5932
							],
							[
								5989,
								6006
							],
							[
								6063,
								6080
							],
							[
								6127,
								6143
							],
							[
								6226,
								6242
							],
							[
								6314,
								6330
							],
							[
								6402,
								6419
							],
							[
								6476,
								6496
							],
							[
								6555,
								6575
							],
							[
								6718,
								6737
							],
							[
								6813,
								6820
							],
							[
								6849,
								6869
							],
							[
								6948,
								6963
							],
							[
								7024,
								7050
							],
							[
								7121,
								7137
							],
							[
								7193,
								7206
							],
							[
								7274,
								7292
							],
							[
								7365,
								7378
							],
							[
								7434,
								7448
							],
							[
								7550,
								7576
							],
							[
								7622,
								7643
							],
							[
								7802,
								7827
							],
							[
								7912,
								7954
							],
							[
								8088,
								8128
							],
							[
								11059,
								11084
							],
							[
								11300,
								11348
							],
							[
								11665,
								11700
							],
							[
								11857,
								11875
							],
							[
								11905,
								11910
							],
							[
								12000,
								12027
							],
							[
								12145,
								12180
							],
							[
								12241,
								12245
							],
							[
								12262,
								12266
							],
							[
								12293,
								12302
							],
							[
								12465,
								12494
							],
							[
								12574,
								12604
							],
							[
								12611,
								12614
							],
							[
								12669,
								12701
							],
							[
								12943,
								12973
							],
							[
								12997,
								13013
							],
							[
								13014,
								13037
							],
							[
								13134,
								13169
							],
							[
								13193,
								13209
							],
							[
								13210,
								13233
							],
							[
								13330,
								13363
							],
							[
								13413,
								13436
							],
							[
								13530,
								13563
							],
							[
								14021,
								14027
							],
							[
								14044,
								14060
							],
							[
								14135,
								14147
							],
							[
								14182,
								14193
							],
							[
								14260,
								14281
							],
							[
								14317,
								14328
							],
							[
								14574,
								14580
							],
							[
								14593,
								14609
							],
							[
								14810,
								14815
							],
							[
								14829,
								14838
							],
							[
								14866,
								14889
							],
							[
								14923,
								14936
							],
							[
								14963,
								14968
							],
							[
								15009,
								15031
							],
							[
								15089,
								15095
							],
							[
								15111,
								15127
							],
							[
								15207,
								15234
							],
							[
								15280,
								15286
							],
							[
								15331,
								15343
							],
							[
								15373,
								15406
							],
							[
								15585,
								15603
							],
							[
								15686,
								15704
							],
							[
								15823,
								15841
							],
							[
								16016,
								16049
							],
							[
								16183,
								16196
							],
							[
								16316,
								16337
							],
							[
								16407,
								16425
							],
							[
								16867,
								16906
							],
							[
								16983,
								17000
							],
							[
								17123,
								17137
							],
							[
								17299,
								17316
							],
							[
								17457,
								17474
							],
							[
								17505,
								17522
							],
							[
								17622,
								17639
							],
							[
								17933,
								17947
							],
							[
								17993,
								18016
							],
							[
								18073,
								18080
							],
							[
								18098,
								18105
							],
							[
								18130,
								18155
							],
							[
								18215,
								18222
							],
							[
								18243,
								18250
							],
							[
								18280,
								18335
							],
							[
								18440,
								18447
							],
							[
								18585,
								18609
							],
							[
								18659,
								18663
							],
							[
								18694,
								18728
							],
							[
								18739,
								18752
							],
							[
								18811,
								18856
							],
							[
								18921,
								18932
							],
							[
								18952,
								18972
							],
							[
								19012,
								19041
							],
							[
								19065,
								19076
							],
							[
								19091,
								19103
							],
							[
								19150,
								19189
							],
							[
								19290,
								19294
							],
							[
								19327,
								19332
							],
							[
								19358,
								19364
							],
							[
								19393,
								19399
							],
							[
								19492,
								19505
							],
							[
								19533,
								19546
							],
							[
								19672,
								19683
							],
							[
								19763,
								19823
							],
							[
								19893,
								19910
							],
							[
								19971,
								19995
							],
							[
								20077,
								20104
							],
							[
								20326,
								20346
							],
							[
								20376,
								20387
							],
							[
								20487,
								20522
							],
							[
								20562,
								20580
							],
							[
								20758,
								20779
							],
							[
								20803,
								20813
							],
							[
								20849,
								20878
							],
							[
								20935,
								20945
							],
							[
								20996,
								21001
							],
							[
								21058,
								21071
							],
							[
								21144,
								21203
							],
							[
								21270,
								21295
							],
							[
								21677,
								21707
							],
							[
								22077,
								22117
							],
							[
								22252,
								22263
							],
							[
								22307,
								22344
							],
							[
								22479,
								22490
							],
							[
								22536,
								22592
							],
							[
								22753,
								22817
							],
							[
								22965,
								23016
							],
							[
								23684,
								23746
							],
							[
								23928,
								23953
							],
							[
								24052,
								24077
							],
							[
								24192,
								24261
							],
							[
								24358,
								24380
							],
							[
								24414,
								24425
							],
							[
								24448,
								24470
							],
							[
								24713,
								24785
							],
							[
								24888,
								24959
							],
							[
								25057,
								25108
							],
							[
								25282,
								25329
							],
							[
								25396,
								25439
							],
							[
								25569,
								25626
							],
							[
								25720,
								25726
							],
							[
								25740,
								25746
							],
							[
								26052,
								26086
							],
							[
								26389,
								26413
							],
							[
								26480,
								26485
							],
							[
								26514,
								26519
							],
							[
								26796,
								26809
							],
							[
								26865,
								26917
							],
							[
								26923,
								26940
							],
							[
								26970,
								26979
							],
							[
								26995,
								27005
							],
							[
								27017,
								27034
							],
							[
								27057,
								27066
							],
							[
								27067,
								27090
							],
							[
								27134,
								27158
							],
							[
								27244,
								27288
							],
							[
								27458,
								27492
							],
							[
								27558,
								27594
							],
							[
								27649,
								27666
							],
							[
								27992,
								28037
							],
							[
								28144,
								28157
							],
							[
								28248,
								28261
							],
							[
								28360,
								28373
							],
							[
								28447,
								28490
							],
							[
								28491,
								28510
							],
							[
								28525,
								28529
							],
							[
								28652,
								28672
							],
							[
								28725,
								28748
							],
							[
								28828,
								28848
							],
							[
								28930,
								28948
							],
							[
								29091,
								29109
							],
							[
								29182,
								29214
							],
							[
								29225,
								29251
							],
							[
								29360,
								29369
							],
							[
								29572,
								29604
							],
							[
								29633,
								29649
							],
							[
								29664,
								29671
							],
							[
								29690,
								29709
							],
							[
								29748,
								29769
							],
							[
								29809,
								29822
							],
							[
								29873,
								29894
							],
							[
								30064,
								30092
							],
							[
								30311,
								30328
							],
							[
								30329,
								30343
							],
							[
								30365,
								30372
							],
							[
								30423,
								30440
							],
							[
								30441,
								30450
							],
							[
								30510,
								30527
							],
							[
								30528,
								30551
							],
							[
								30607,
								30631
							],
							[
								33290,
								33318
							],
							[
								33749,
								33753
							],
							[
								33881,
								33894
							],
							[
								34210,
								34222
							],
							[
								34485,
								34498
							],
							[
								34603,
								34617
							],
							[
								35510,
								35538
							],
							[
								35654,
								35667
							],
							[
								35779,
								35803
							],
							[
								35896,
								35930
							],
							[
								36055,
								36094
							],
							[
								36141,
								36178
							],
							[
								36225,
								36252
							],
							[
								36263,
								36279
							],
							[
								36337,
								36359
							],
							[
								36392,
								36402
							],
							[
								36452,
								36464
							],
							[
								36748,
								36758
							],
							[
								36833,
								36845
							],
							[
								37125,
								37151
							],
							[
								37403,
								37451
							],
							[
								37499,
								37611
							],
							[
								37717,
								37740
							],
							[
								37879,
								37911
							],
							[
								38227,
								38281
							],
							[
								38644,
								38696
							],
							[
								38835,
								38861
							],
							[
								39145,
								39161
							],
							[
								39328,
								39339
							],
							[
								39541,
								39593
							],
							[
								39769,
								39851
							],
							[
								40012,
								40022
							],
							[
								40040,
								40053
							],
							[
								40231,
								40266
							],
							[
								40427,
								40486
							],
							[
								40954,
								40990
							],
							[
								41149,
								41165
							],
							[
								41179,
								41201
							],
							[
								41315,
								41321
							],
							[
								41427,
								41440
							],
							[
								43055,
								43093
							],
							[
								43193,
								43209
							],
							[
								43282,
								43326
							],
							[
								43641,
								43661
							],
							[
								43864,
								43906
							],
							[
								44104,
								44135
							],
							[
								44185,
								44227
							],
							[
								44349,
								44373
							],
							[
								44633,
								44643
							],
							[
								44691,
								44695
							],
							[
								44731,
								44762
							],
							[
								44773,
								44790
							],
							[
								44933,
								44967
							],
							[
								45205,
								45224
							],
							[
								45262,
								45284
							],
							[
								45397,
								45419
							],
							[
								45532,
								45567
							],
							[
								45615,
								45642
							],
							[
								45733,
								45771
							],
							[
								45980,
								46028
							],
							[
								46613,
								46642
							],
							[
								47091,
								47131
							],
							[
								47226,
								47253
							],
							[
								47310,
								47337
							],
							[
								47543,
								47557
							],
							[
								47606,
								47612
							],
							[
								47653,
								47719
							],
							[
								47721,
								47725
							],
							[
								47883,
								47890
							],
							[
								47982,
								47992
							],
							[
								48103,
								48112
							],
							[
								48218,
								48244
							],
							[
								48377,
								48408
							],
							[
								48573,
								48596
							],
							[
								48735,
								48759
							],
							[
								48929,
								48952
							],
							[
								49131,
								49150
							],
							[
								49192,
								49200
							],
							[
								49248,
								49257
							],
							[
								49291,
								49300
							],
							[
								49334,
								49343
							],
							[
								49377,
								49386
							],
							[
								49420,
								49429
							],
							[
								49462,
								49471
							],
							[
								49505,
								49514
							],
							[
								49548,
								49557
							],
							[
								49582,
								49616
							],
							[
								49762,
								49807
							],
							[
								49873,
								49883
							],
							[
								49922,
								49932
							],
							[
								49952,
								49962
							],
							[
								49991,
								50016
							],
							[
								50148,
								50173
							],
							[
								50272,
								50307
							],
							[
								50360,
								50394
							],
							[
								50476,
								50512
							],
							[
								50641,
								50645
							],
							[
								50676,
								50680
							],
							[
								50723,
								50727
							],
							[
								50755,
								50759
							],
							[
								50788,
								50816
							],
							[
								50946,
								50950
							],
							[
								50973,
								51004
							],
							[
								51343,
								51379
							],
							[
								51628,
								51658
							],
							[
								51827,
								51831
							],
							[
								52116,
								52143
							],
							[
								52187,
								52196
							],
							[
								52249,
								52261
							],
							[
								52404,
								52416
							],
							[
								52543,
								52568
							],
							[
								52608,
								52634
							],
							[
								52888,
								52912
							],
							[
								53106,
								53129
							],
							[
								53253,
								53400
							],
							[
								53409,
								53490
							],
							[
								53531,
								53542
							],
							[
								53544,
								53556
							],
							[
								53782,
								53802
							],
							[
								54019,
								54034
							],
							[
								54315,
								54338
							],
							[
								54544,
								54562
							],
							[
								54776,
								54790
							],
							[
								54851,
								54863
							],
							[
								54923,
								54932
							],
							[
								55210,
								55226
							],
							[
								55661,
								55697
							],
							[
								55825,
								55834
							],
							[
								56010,
								56021
							],
							[
								56032,
								56040
							],
							[
								56089,
								56101
							],
							[
								56348,
								56360
							],
							[
								56543,
								56569
							],
							[
								56588,
								56592
							],
							[
								56679,
								56703
							],
							[
								56781,
								56810
							],
							[
								56864,
								56895
							],
							[
								56902,
								56905
							],
							[
								56949,
								56962
							],
							[
								57053,
								57124
							],
							[
								57150,
								57176
							],
							[
								57319,
								57349
							],
							[
								57508,
								57528
							],
							[
								57608,
								57641
							],
							[
								57798,
								57854
							],
							[
								57865,
								57881
							],
							[
								58019,
								58050
							],
							[
								58090,
								58141
							],
							[
								58497,
								58525
							],
							[
								58680,
								58744
							],
							[
								58806,
								58821
							],
							[
								58890,
								58904
							],
							[
								58943,
								58966
							],
							[
								59158,
								59176
							],
							[
								59367,
								59437
							],
							[
								59586,
								59610
							],
							[
								59629,
								59637
							],
							[
								59673,
								59688
							],
							[
								59816,
								59829
							],
							[
								59992,
								60008
							],
							[
								60203,
								60229
							],
							[
								60245,
								60267
							],
							[
								60530,
								60534
							],
							[
								60720,
								60742
							],
							[
								60764,
								60774
							],
							[
								60792,
								60805
							],
							[
								60929,
								60951
							],
							[
								60973,
								60983
							],
							[
								61001,
								61014
							],
							[
								61120,
								61142
							],
							[
								61168,
								61178
							],
							[
								61196,
								61209
							],
							[
								61245,
								61267
							],
							[
								61288,
								61298
							],
							[
								61316,
								61329
							],
							[
								61349,
								61390
							],
							[
								61681,
								61704
							],
							[
								61786,
								61808
							],
							[
								61883,
								61903
							],
							[
								62032,
								62043
							],
							[
								62076,
								62093
							],
							[
								62257,
								62276
							],
							[
								62311,
								62333
							],
							[
								62466,
								62487
							],
							[
								62625,
								62645
							],
							[
								62712,
								62735
							],
							[
								62812,
								62834
							],
							[
								62943,
								62967
							],
							[
								63024,
								63036
							],
							[
								63208,
								63226
							],
							[
								63283,
								63295
							],
							[
								63448,
								63471
							],
							[
								63604,
								63620
							],
							[
								63666,
								63679
							],
							[
								63717,
								63784
							],
							[
								63821,
								63843
							],
							[
								63872,
								63882
							],
							[
								63898,
								63911
							],
							[
								63963,
								63976
							],
							[
								64044,
								64067
							],
							[
								64187,
								64209
							],
							[
								64298,
								64311
							],
							[
								64365,
								64381
							],
							[
								64419,
								64423
							],
							[
								64533,
								64570
							],
							[
								64581,
								64591
							],
							[
								64600,
								64629
							],
							[
								64849,
								64865
							],
							[
								64887,
								64898
							],
							[
								64954,
								64981
							],
							[
								65028,
								65046
							],
							[
								65120,
								65155
							],
							[
								65281,
								65302
							],
							[
								65337,
								65346
							],
							[
								65355,
								65363
							],
							[
								65406,
								65415
							],
							[
								65437,
								65446
							],
							[
								65457,
								65465
							],
							[
								65532,
								65541
							],
							[
								65574,
								65602
							],
							[
								65744,
								65763
							],
							[
								65971,
								65997
							],
							[
								66286,
								66308
							],
							[
								66454,
								66476
							],
							[
								66990,
								67040
							],
							[
								67206,
								67255
							],
							[
								67324,
								67331
							],
							[
								67417,
								67431
							],
							[
								67513,
								67523
							],
							[
								67630,
								67634
							],
							[
								67665,
								67685
							],
							[
								67731,
								67744
							],
							[
								67794,
								67806
							],
							[
								67947,
								67962
							],
							[
								68374,
								68412
							],
							[
								68596,
								68607
							],
							[
								68643,
								68664
							],
							[
								68734,
								68741
							],
							[
								68780,
								68810
							],
							[
								68832,
								68848
							],
							[
								68849,
								68869
							],
							[
								68959,
								68994
							],
							[
								69051,
								69114
							],
							[
								69186,
								69218
							],
							[
								69310,
								69332
							],
							[
								69382,
								69425
							],
							[
								69671,
								69696
							],
							[
								69743,
								69773
							],
							[
								69791,
								69809
							],
							[
								69886,
								69891
							],
							[
								69914,
								69931
=======
								69925,
								69942
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
							]
						],
						"symlist":
						[
							"sliceFn = x =>",
							"ArrayBuffer(start, end)",
							"SharedArrayBuffer",
							"Uint8ClampedArray",
							"Int8Array",
							"Uint8Array",
							"Int16Array",
							"Uint16Array",
							"Int32Array",
							"Uint32Array",
							"BigInt64Array",
							"BigUint64Array",
							"Float32Array",
							"Float64Array",
							"slice = (x, s, e) =>",
							"length = x =>",
							"objectToString = o =>",
							"stringify = v =>",
							"formatNumber = n =>",
							"isNative = fn =>",
							"AsyncFunction = async function x()",
							"GeneratorFunction = function* ()",
							"AsyncGeneratorFunction = async function* ()",
							"isAnyArrayBuffer(v)",
							"isArrayBuffer(v)",
							"isBigInt64Array(v)",
							"isBigUint64Array(v)",
							"isDate(v)",
							"isFloat32Array(v)",
							"isFloat64Array(v)",
							"isInt8Array(v)",
							"isInt16Array(v)",
							"isInt32Array(v)",
							"isMap(v)",
							"isPromise(v)",
							"isProxy(v)",
							"isRegExp(v)",
							"isSet(v)",
							"isSharedArrayBuffer(v)",
							"isUint8Array(v)",
							"isUint8ClampedArray(v)",
							"isUint16Array(v)",
							"isUint32Array(v)",
							"isWeakMap(v)",
							"isWeakSet(v)",
							"isDataView(v)",
							"isBooleanObject(v)",
							"isAsyncFunction(v)",
							"isGeneratorFunction(v)",
							"isAsyncGeneratorFunction(v)",
							"isNumberObject(v)",
							"isBigIntObject(v)",
							"isSymbolObject(v)",
							"isNativeError(v)",
							"isMapIterator(v)",
							"isSetIterator(v)",
							"isStringObject(v)",
							"isArrayBufferView(v)",
							"isArgumentsObject(v)",
							"isBoxedPrimitive(v)",
							"ctor =>",
							"isGeneratorObject(v)",
							"isTypedArray(v)",
							"isModuleNamespaceObject(v)",
							"isConstructor(v)",
							"isIterable(v)",
							"isAsyncIterable(v)",
							"isIterator(v)",
							"isArrayLike(v)",
							" function hasBuiltIn(o, m)",
							" function isAsync(fn)",
							" function format(...args)",
							" function formatWithOptions(opts, ...args)",
							"function formatWithOptionsInternal(o, v)",
							" function assert(...args)",
							" function assertEqual(actual, expected, message)",
							" function setInterval(callback, ms)",
							" function start()",
							"() =>",
							" function clearInterval(id)",
							" function inherits(ctor, superCtor)",
							"ctor",
							"ctor",
							"superCtor",
							" function getConstructor(obj)",
							" function memoize(fn, cache = ",
							"())",
							" function Memoize(n, ...rest)",
							" function chain(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainRight(first, ...fns)",
							" (acc, fn) =>",
							" function(...args)",
							" function chainArray(tmp, ...fns)",
							"tmp = function(...args)",
							" function getset(target, ...args)",
							"key =>",
							" (key, value) =>",
							" key =>",
							"([k, v]) =>",
							" (key, value) =>",
							"([k, v]) =>",
							"key =>",
							" (key, value) =>",
							"() =>",
							" value =>",
							" function methods(obj)",
							"bind(...args)",
							"fn =>",
							"transform(read, write)",
							"key =>",
							" (key, value) =>",
							" function modifier(...args)",
							" fn =>",
							" newValue =>",
							" function getter(target, ...args)",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							"ret = (...argv) =>",
							" function setter(target, ...args)",
							" (...argv) =>",
							"ret = (key, value) =>",
							"ret = (...argv) =>",
							" function gettersetter(target, ...args)",
							"fn = (...args) =>",
							" (...args2) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							"fn = (...args) =>",
							" (...args2) =>",
							" function hasFn(target)",
							" key =>",
							" key =>",
							" function remover(target)",
							" key =>",
							" key =>",
							" function getOrCreate(target, create = () => ({}), set)",
							" key =>",
							" function hasGetSet(obj)",
							"m =>",
							" function getSetArgument(get, set)",
							" (...args) =>",
							" function wrapGetSet(getter, setter, ...args)",
							" prop =>",
							" (prop, value) =>",
							" function weakGetSet(...args)",
							" wref =>",
							" value =>",
							" function addremovehas(target, ...args)",
							"n =>",
							"el =>",
							" el =>",
							" el =>",
							" el =>",
							" el =>",
							"has = el =>",
							" function lookupObject(getset, instance = {}, handlers = {})",
							"get(target, prop)",
							"set(target, prop, value)",
							" function mapObject(target)",
							"set: (key, value) =>",
							"get: key =>",
							" function once(fn, thisArg, memoFn)",
							" function(...args)",
							" function waitFor(ms)",
							"resolve =>",
							" function waitCancellable(ms)",
							"resolve =>",
							"() =>",
							"cancel: () =>",
							" function extend(dst, src, options = { enumerable: false })",
							"options = (desc, prop) =>",
							" function define(obj, ...args)",
							" function nonenumerable(props, obj = {})",
							"([k, v]) =>",
							" function enumerable(props, obj = {})",
							"([k, v]) =>",
							" function defineGetter(obj, key, fn, enumerable = false)",
							" function defineGetterSetter(obj, key, g, s, enumerable = false)",
							" function defineGettersSetters(obj, gettersSetters)",
							" function* prototypeIterator(obj, pred = (obj, depth) => true)",
							" function pick(obj, keys)",
							" function omit(obj, keys)",
							" function keys(obj, start = 0, end = obj => obj === Object.prototype)",
							"pred = (obj, depth) =>",
							"end = () =>",
							"pred = (obj, depth) =>",
							" function entries(obj, start = 0, end = obj => obj === Object.prototype)",
							" function values(obj, start = 0, end = obj => obj === Object.prototype)",
							" function getMethodNames(obj, depth = 1, start = 0)",
							" function getMethods(obj, depth = 1, start = 0)",
							" function bindMethods(obj, methods, target)",
							" function properties(obj, options = { enumerable: true })",
							" fn =>",
							" fn =>",
							" function weakDefine(obj, ...args)",
							" function merge(...args)",
							" a =>",
							" a =>",
							"(acc, arg) =>",
							" function weakAssoc(fn = (value, ...args) => Object.",
							"(value, ...args))",
							" () =>",
							" map =>",
							"(obj, ...args) =>",
							" () =>",
							" (obj, ...args) =>",
							"self = (obj, ...args) =>",
							" function getConstructorChain(obj, ...range)",
							" function hasPrototype(obj, proto)",
							" function filter(seq, pred, thisArg)",
							"pred = (el, i) =>",
							" function filterKeys(r, needles, keep = true)",
							"pred = key =>",
							"pred = key =>",
							"(obj, key) =>",
							"curry = (f, arr = [], length = f.length) =>",
							" function(...args)",
							"a =>",
							"(min, max, value) =>",
							"generate = (fn, add) =>",
							"add = (item, gen) =>",
							" function(...args)",
							" function(...args)",
							" function* split(buf, ...points)",
							"splitAt = (b, pos, len) =>",
							"(a, b) =>",
							" function uniquePred(cmp = null)",
							" (el, i, arr) =>",
							"item =>",
							"i : (el, i, arr) =>",
							"unique = (...args) =>",
							"(arr, cmp) =>",
							"function* unique(seq)",
							"getFunctionArguments = fn =>",
							" (offset = 0) =>",
							" (...args) =>",
							"code =>",
							" (offset = 0) =>",
							" code =>",
							" (offset = 0) =>",
							" (red, green, blue) =>",
							"function getAnsiStyles()",
							"value: (red, green, blue) =>",
							"c =>",
							"value: hex =>",
							"character =>",
							"value: hex =>",
							"value: code =>",
							"value: (red, green, blue) =>",
							"value: hex =>",
							" function stripAnsi(str)",
							" function padAnsi(str, n, s = ' ')",
							" function padStartAnsi(str, n, s = ' ')",
							" function padEndAnsi(str, n, s = ' ')",
							" function mapFunctional(fn)",
							" function* (arg)",
							" function map(...args)",
							"ret = a =>",
							"function* ()",
							"ret = a =>",
							"function* ()",
							" function randInt(...args)",
							" function randFloat(min, max, rng = Math.random)",
							" function randStr(n, set = '_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', rng = Math.random)",
							" function toBigInt(arg)",
							" function roundDigits(precision)",
							" function roundTo(value, prec, digits, type = 'round')",
							" function lazyProperty(obj, name, getter, opts = {})",
							"replaceProperty = value =>",
							"async function()",
							" function()",
							" function lazyProperties(obj, gettersObj, opts = {})",
							" function observeProperties(target = {}, obj, fn = (prop, value) => {}, opts = {})",
							"get: () =>",
							"set: value =>",
							" function decorate(decorators, obj)",
							" function decorateProperty(target, property, ...decorators)",
							" function getOpt(options = {}, args)",
							"findOpt = arg =>",
							"([optname, option]) =>",
							"opt =>",
							"(acc, arg) =>",
							" function showHelp(opts, exitCode = 0)",
							"(acc, [name]) =>",
							" (acc, [name, [hasArg, fn, shortOpt]]) =>",
							" function isoDate(d)",
							" function toUnixTime(dateObj, utc = false)",
							" function unixTime(utc = false)",
							" function fromUnixTime(epoch, utc = false)",
							" function range(...args)",
							" (v, k) =>",
							"n =>",
							" function chunkArray(arr, size)",
							"fn = (a, v, i) =>",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>",
							" function ucfirst(str)",
							" function lcfirst(str)",
							" function camelize(str, delim = '')",
							" (match, p1, p2, offset) =>",
							" function decamelize(str, delim = '-')",
							" function shorten(str, max = 40, suffix = '...')",
							" function* bytesToUTF8(bytes)",
							" function codePointsToString(codePoints)",
							" function bufferToString(b)",
							" function arraysInCommon(a)",
							"(itm, indx) =>",
							"arr =>",
							" function arrayFacade(proto, itemFn = (container, i) => container.",
							"(i))",
							"*keys()",
							"*entries()",
							"*values()",
							"forEach(callback, thisArg)",
							"reduce(callback, accu, thisArg)",
							"*map(callback, thisArg)",
							"every(callback, thisArg)",
							"some(callback, thisArg)",
							" function mod(a, b)",
							"b : n =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							"(a, b) =>",
							" function pushUnique(arr, ...args)",
							" function inserter(dest, next = (k, v) => {})",
							" (k, v) =>",
							" (k, v) =>",
							" (k, v) =>",
							"fn = function(key, value)",
							" function intersect(a, b)",
							" function symmetricDifference(a, b)",
							" function* partitionArray(a, size)",
							" function difference(a, b, includes)",
							"x =>",
							"x =>",
							"x =>",
							"x =>",
							" function intersection(a, b)",
							"x =>",
							" function union(a, b, equality)",
							" function partition(array, callback)",
							" function push(obj, ...values)",
							"v =>",
							" function repeater(n, what)",
							"n = () =>",
							"function* ()",
							"function* ()",
							" function repeat(n, what)",
							" function functionName(fn)",
							" function className(obj)",
							"isArrowFunction = fn =>",
							" function instrument( fn, log = (duration, name, args, ret) => console.log(`function '${name}'` + (ret !== undefined ? ` {= ${escape(ret + '').",
							"(0, 100) + '...'}}` : '') + ` timing: ${duration}ms`), logInterval = 0, //1000 )",
							"now = () =>",
							"([s, ns]) =>",
							"async (args, ret) =>",
							" (args, ret) =>",
							"async function(...args)",
							" function(...args)",
							"newMap = () =>",
							"(...args) =>",
							"get(path)",
							"set(path, value)",
							"catchable = function Catchable(self)",
							"catchable",
							"function ()",
							"then(fn)",
							"(...args) =>",
							"(...args) =>",
							" function isNumeric(value)",
							"v =>",
							" function isIndex(value)",
							" function numericIndex(value)",
							" function histogram(arr, out = ",
							"())",
							"incr = key =>",
							" function propertyLookupHandlers(getter = key => null, setter, thisObj)",
							"get(target, key, receiver)",
							".set = (target, key, value) =>",
							".ownKeys = target =>",
							" function propertyLookup(...args)",
							" function padFn(len, char = ' ', fn = (str, pad) => pad)",
							" (s, n = len) =>",
							" function pad(s, n, char = ' ')",
							" function abbreviate(str, max = 40, suffix = '...')",
							" function trim(str, charset)",
							" function tryFunction(fn, resolve = a => a, reject = () => null)",
							"resolve = () =>",
							"reject = () =>",
							"async function(...args)",
							" function(...args)",
							" function tryCatch(fn, resolve = a => a, reject = () => null, ...args)",
							" function mapAdapter(fn)",
							"get(key)",
							"set(key, value)",
							".keys = () =>",
							".entries = () =>",
							" function mapFunction(map)",
							"fn = function(...args)",
							"m =>",
							".set = (key, value) =>",
							".get = key =>",
							".set = (key, value) =>",
							".get = key =>",
							".set = (key, value) =>",
							".get = key =>",
							".set = (key, value) =>",
							".get = key =>",
							".update = function(key, fn = (k, v) => v)",
							".entries = function* ()",
							".values = function* ()",
							".keys = function* ()",
							" function()",
							"([key, value]) =>",
							".keys = async () =>",
							".entries = async () =>",
							".values = async () =>",
							".keys = function* ()",
							".entries = function* ()",
							".values = function* ()",
							".filter = function(pred)",
							"function* ()",
							".map = function(t)",
							"function* ()",
							".forEach = function(fn)",
							".delete = key =>",
							".has = key =>",
							" function mapWrapper(map, toKey = key => key, fromKey = key => key)",
							".set = (key, value) =>",
							".get = key =>",
							".keys = () =>",
							".entries = function* ()",
							".values = function* ()",
							".has = key =>",
							".delete = key =>",
							"m =>",
							" function weakMapper(createFn, map = ",
							"(), hitFn)",
							"self = function(obj, ...args)",
							".set = (k, v) =>",
							".get = k =>",
							" function wrapGenerator(fn)",
							" function(...args)",
							" function wrapGeneratorMethods(obj)",
							" function isBrowser()",
							" () =>",
							" w =>",
							" () =>",
							" () =>",
							" d =>",
							" () =>",
							" function startInteractive()",
							"function* (re, str)",
							" function indexOf(...args)",
							" (what, offset = 0) =>",
							" (what, offset = 0) =>",
							" function* searchAll(haystack, needle, offset = 0)",
							" function bindProperties(obj, target, props, gen)",
							"name =>",
							"(acc, name) =>",
							" p => v =>",
							"k =>",
							" (a, [k, v]) =>",
							" (...args) =>",
							"(...args) =>",
							" (a, k) =>",
							" function predicate(fn_or_regex, pred)",
							"fn = arg =>",
							".valueOf = function()",
							" arg =>",
							" function transformer(a, ...l)",
							" (acc, fn) =>",
							" function(...v)",
							" function getSystemErrorName(errno)",
							" function Membrane(instance, obj, proto, wrapProp, wrapElement)",
							"get: (target, prop, receiver) =>",
							"has: (target, prop) =>",
							"getOwnPropertyDescriptor: (target, prop) =>",
							"getPrototypeOf: target =>",
							"setPrototypeOf: (target, p) =>",
							"ownKeys: target =>",
							"() =>",
							"(acc, name, i) =>"
						]
					},
<<<<<<< HEAD
					"AQAAAAAAAAAAAAAA9CcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADABQAAUGF0aFRyYW5zZm9ybWVyKGRpcikKICByZWxhdGl2ZTogcCA9PgogIGFic29sdXRlOiBwID0+CkNvbW1hbmQKICBjb25zdHJ1Y3RvcihhLCB3b3JrRGlyID0gJy4nKQogIHMgPT4KICBnZXQgcHJvZ3JhbSgpCiAgc2V0IHByb2dyYW0oYXJnKQogIGFic29sdXRlUGF0aChwYXRoKQogIGFyZ3VtZW50c09mVHlwZSh0eXBlKQooYXJnLCBpKSA9PgogIGdldCB3YXJuRmxhZ3MoKQogIGdldCBkZWJ1Z0ZsYWdzKCkKICBnZXQgb3B0RmxhZ3MoKQogIGdldCBkZXBGbGFncygpCiAgZ2V0IG1vZGVGbGFnKCkKICBpc0NvbXBpbGUoKQogIGlzUHJlcHJvY2VzcygpCiAgaXNBc3NlbWJsZSgpCiAgaXNMaW5rKCkKICB0b1N0cmluZyhkZWxpbSkKICB0b0FycmF5KCkKICByZW1vdmUoLi4uYXJncykKICBnZXQgZGVwZW5kZW5jaWVzKCkKICBnZXQgb3V0cHV0RmlsZSgpCiAgdHJhbnNmb3JtUGF0aCh0KQoocywgYXJnLCBpKSA9PgogIHJ1bihvcHRzID0ge30pCkNvbW1hbmQKICB3cmFwVHJhbnNmb3JtZXIobXRmID0gZGlyID0+IGEgPT4gYSkKZnVuY3Rpb24oZGlyKQooYXJnLCBpKSA9PgogIHdyYXBOdW1lcmljQXJndW1lbnQoZm4pCmZ1bmN0aW9uKHYsIGkpCkNvbW1hbmQKICBkaXIgPT4KICBkaXIgPT4KICB0b0pTT04oKQogIGZyb21TdHJpbmcoc3RyLCB3b3JrRGlyID0gJy4nKQooW21dKSA9PgpDb21waWxlQ29tbWFuZAogIGNvbnN0cnVjdG9yKGEsIHdvcmtEaXIgPSAnLicpCiAgZ2V0IGluY2x1ZGVQYXRocygpCiAgZ2V0IGRlZmluZXMoKQogIGdldCBjZmxhZ3MoKQogIGluYyA9PgogIGRlZiA9PgogIGdldCBmbGFncygpCiAgZ2V0IGFyZ3MoKQogIGdldCBzb3VyY2VzKCkKICBhcmcgPT4KICBzZXQgc291cmNlcyhhcmcpCiAgZ2V0IHNvdXJjZSgpCiAgc2V0IHNvdXJjZShhcmcpCiAgdG9PYmplY3QoKQpDb21waWxlQ29tbWFuZAogIGdldCBvdXRwdXQoKQogIGEgPT4KICBzZXQgb3V0cHV0KGFyZykKICBhID0+CkxpbmtDb21tYW5kCiAgY29uc3RydWN0b3IoYSwgd29ya0RpciA9ICcuJykKICBnZXQgbGlicmFyaWVzKCkKICBnZXQgbGlicGF0aHMoKQogIGdldCBsaW5rZmxhZ3MoKQogIGdldCBhcmdzKCkKKGFyZyxpKSA9PgogIGdldCBvYmplY3RzKCkKKGFyZywgaSkgPT4KICBhcmcgPT4KICBnZXQgZmxhZ3MoKQogIHQgPT4KTGlua0NvbW1hbmQKQ29tbWFuZApBcmd1bWVudE9wdChhcmcpCkFyZ3VtZW50TGVuKGFyZywgaSkKQXJndW1lbnRUeXBlKGFyZywgaSA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKQpBcmd1bWVudElzKHByZWQpCmFyZyA9PgphcmcgPT4KYXJnID0+CkNvbW1hbmRUeXBlKGNvbW1hbmQpCk1ha2VDb21tYW5kcyh0ZXh0LCB3b3JrRGlyID0gJy4nKQogIGxpbmUgPT4KTWFrZUNvbW1hbmQoYXJyYXlPclN0cmluZywgd29ya0RpciA9ICcuJykKKFttXSkgPT4KTGlua0NvbW1hbmQKICBnZXQgb3V0cHV0KCkKICBhID0+CihhLCBpKSA9PgogIHNldCBvdXRwdXQoYXJnKQogIGEgPT4AAAAAAAAAAMMnAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
						"symkeys":
						[
							[
								6,
								18
							],
							[
								147,
								171
							],
							[
								197,
								221
							],
							[
								355,
								371
							],
							[
								431,
								462
							],
							[
								509,
								525
							],
							[
								574,
								592
							],
							[
								636,
								649
							],
							[
								695,
								710
							],
							[
								784,
								799
							],
							[
								832,
								856
							],
							[
								1410,
								1420
							],
							[
								1514,
								1524
							],
							[
								1615,
								1625
							],
							[
								1778,
								1788
							],
							[
								1930,
								1940
							],
							[
								2079,
								2089
							],
							[
								2131,
								2149
							],
							[
								2152,
								2162
							],
							[
								2225,
								2243
							],
							[
								2246,
								2256
							],
							[
								2309,
								2323
							]
						],
						"symlist":
						[
							"build_brotli",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_BUILD_TYPE",
							"CMAKE_POSITION_INDEPENDENT_CODE",
							"CMAKE_C_COMPILER",
							"CMAKE_CXX_COMPILER",
							"CMAKE_C_FLAGS",
							"CMAKE_CXX_FLAGS",
							"CMAKE_GENERATOR",
							"CMAKE_GENERATOR_PLATFORM",
							"BINARY_DIR",
							"BINARY_DIR",
							"BINARY_DIR",
							"BINARY_DIR",
							"BINARY_DIR",
							"BINARY_DIR",
							"BROTLI_INCLUDE_DIR",
							"SOURCE_DIR",
							"BROTLI_LIBRARY_DIR",
							"BINARY_DIR",
							"BROTLI_LIBRARY"
						]
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/mozdev.js",
						"symkeys":
						[
							[
								137,
								162
							],
							[
								660,
								664
							],
							[
								696,
								718
							],
							[
								739,
								750
							],
							[
								807,
								815
							],
							[
								861,
								885
							],
							[
								955,
								959
							],
							[
								1041,
								1052
							],
							[
								1128,
								1137
							],
							[
								1302,
								1316
							],
							[
								1389,
								1401
							],
							[
								1563,
								1571
							],
							[
								1891,
								1898
							],
							[
								1960,
								1969
							],
							[
								2037,
								2047
							],
							[
								2139,
								2155
							],
							[
								2236,
								2258
							],
							[
								2425,
								2435
							]
						],
						"symlist":
						[
							" function FetchClass(url)",
							"e =>",
							"simplifyList = list =>",
							"([a, b]) =>",
							"([a]) =>",
							"summaryList = summary =>",
							"e =>",
							"([name]) =>",
							"(a, e) =>",
							"makeURL = p =>",
							"getURL(name)",
							"entry =>",
							"*keys()",
							"*values()",
							"*entries()",
							"pred = (k, v) =>",
							"pred = (key, value) =>",
							"get name()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABpAQAAICBidWlsZF9icm90bGkKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9CVUlMRF9UWVBFCkNNQUtFX1BPU0lUSU9OX0lOREVQRU5ERU5UX0NPREUKQ01BS0VfQ19DT01QSUxFUgpDTUFLRV9DWFhfQ09NUElMRVIKQ01BS0VfQ19GTEFHUwpDTUFLRV9DWFhfRkxBR1MKQ01BS0VfR0VORVJBVE9SCkNNQUtFX0dFTkVSQVRPUl9QTEFURk9STQpCSU5BUllfRElSCkJJTkFSWV9ESVIKQklOQVJZX0RJUgpCSU5BUllfRElSCkJJTkFSWV9ESVIKQklOQVJZX0RJUgpCUk9UTElfSU5DTFVERV9ESVIKU09VUkNFX0RJUgpCUk9UTElfTElCUkFSWV9ESVIKQklOQVJZX0RJUgpCUk9UTElfTElCUkFSWQAAAAAAAAAA/QAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/clang-list.js",
						"symkeys":
						[
							[
								341,
								365
							],
							[
								529,
								535
							],
							[
								579,
								596
							],
							[
								707,
								735
							],
							[
								921,
								931
							],
							[
								981,
								991
							],
							[
								1927,
								1931
							],
							[
								1978,
								1982
							],
							[
								2080,
								2117
							],
							[
								2402,
								2446
							],
							[
								2454,
								2496
							],
							[
								2536,
								2543
							],
							[
								2587,
								2594
							],
							[
								3005,
								3016
							],
							[
								3063,
								3068
							],
							[
								3078,
								3083
							],
							[
								3096,
								3107
							],
							[
								3137,
								3142
							],
							[
								3155,
								3166
							],
							[
								3324,
								3330
							],
							[
								3731,
								3741
							],
							[
								3903,
								3913
							],
							[
								4210,
								4220
							],
							[
								4777,
								4782
							],
							[
								4925,
								4965
							],
							[
								5017,
								5050
							],
							[
								5235,
								5253
							],
							[
								5299,
								5315
							],
							[
								5331,
								5348
							],
							[
								5375,
								5398
							],
							[
								5414,
								5436
							],
							[
								5536,
								5547
							],
							[
								5670,
								5679
							],
							[
								5749,
								5760
							],
							[
								5978,
								5986
							],
							[
								6016,
								6024
							],
							[
								6043,
								6047
							],
							[
								6214,
								6225
							],
							[
								6280,
								6291
							],
							[
								6323,
								6332
							],
							[
								6482,
								6493
							],
							[
								6544,
								6558
							],
							[
								6697,
								6701
							],
							[
								6971,
								7010
							],
							[
								7104,
								7117
							],
							[
								7574,
								7606
							],
							[
								7770,
								7804
							]
						],
						"symlist":
						[
							"findLastIndex(predicate)",
							"tail()",
							"startsWith(start)",
							"async function main(...args)",
							" (a, p) =>",
							" (a, p) =>",
							"d =>",
							"v =>",
							"async function processFiles(...files)",
							"async function ReadAST(outfile, load = f => ",
							"(f), save = WriteFile, parse = JSON.parse)",
							"name =>",
							"stat =>",
							"async () =>",
							" a =>",
							"() =>",
							"async () =>",
							"() =>",
							"async () =>",
							"err =>",
							" (v, p) =>",
							"toString()",
							"toString()",
							" v =>",
							" function ListNodes(sysinc = false)",
							"NoSystemIncludes = ([p, n, l]) =>",
							" ([path, decl]) =>",
							"names = decls =>",
							"([path, decl]) =>",
							"declarations = decls =>",
							"([path, decl, loc]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p]) =>",
							"([p]) =>",
							"p =>",
							"([p, n]) =>",
							"([p, n]) =>",
							"(a, b) =>",
							"([p, n]) =>",
							"([p, n, l]) =>",
							"k =>",
							"([path, node, id, name, type, kind]) =>",
							"(field, i) =>",
							"function writeOutput(name, data)",
							"function GetLibraryFor(symbolName)"
						]
					},
<<<<<<< HEAD
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				]
			]
		},
		{
			"file": "soundcloud-tracks.js",
			"settings":
			{
				"buffer_size": 1609,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD9AAAARmV0Y2hDbGFzcyh1cmwpCiAgZSA9PgogIHNpbXBsaWZ5TGlzdCA9IGxpc3QgPT4KKFthLCBiXSkgPT4KKFthXSkgPT4KICBzdW1tYXJ5TGlzdCA9IHN1bW1hcnkgPT4KICBlID0+CihbbmFtZV0pID0+CihhLCBlKSA9PgogIG1ha2VVUkwgPSBwID0+CiAgZ2V0VVJMKG5hbWUpCiAgZW50cnkgPT4KKmtleXMoKQoqdmFsdWVzKCkKKmVudHJpZXMoKQogIHByZWQgPSAoaywgdikgPT4KICBwcmVkID0gKGtleSwgdmFsdWUpID0+CiAgZ2V0IG5hbWUoKQAAAAAAAAAAwQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADBAgAAICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICB0YWlsKCkKICBzdGFydHNXaXRoKHN0YXJ0KQogIG1haW4oLi4uYXJncykKKGEsIHApID0+CihhLCBwKSA9PgogIGQgPT4KICB2ID0+CiAgcHJvY2Vzc0ZpbGVzKC4uLmZpbGVzKQpSZWFkQVNUKG91dGZpbGUsIGxvYWQgPSBmID0+IAooZiksIHNhdmUgPSBXcml0ZUZpbGUsIHBhcnNlID0gSlNPTi5wYXJzZSkKICBuYW1lID0+CiAgc3RhdCA9PgooKSA9PgphID0+CigpID0+CigpID0+CigpID0+CigpID0+CiAgZXJyID0+Cih2LCBwKSA9PgogIHRvU3RyaW5nKCkKICB0b1N0cmluZygpCnYgPT4KTGlzdE5vZGVzKHN5c2luYyA9IGZhbHNlKQpOb1N5c3RlbUluY2x1ZGVzID0gKFtwLCBuLCBsXSkgPT4KKFtwYXRoLCBkZWNsXSkgPT4KICBuYW1lcyA9IGRlY2xzID0+CihbcGF0aCwgZGVjbF0pID0+CiAgZGVjbGFyYXRpb25zID0gZGVjbHMgPT4KKFtwYXRoLCBkZWNsLCBsb2NdKSA9PgooW3AsIG5dKSA9PgooYSwgYikgPT4KKFtwLCBuXSkgPT4KKFtwXSkgPT4KKFtwXSkgPT4KICBwID0+CihbcCwgbl0pID0+CihbcCwgbl0pID0+CihhLCBiKSA9PgooW3AsIG5dKSA9PgooW3AsIG4sIGxdKSA9PgogIGsgPT4KKFtwYXRoLCBub2RlLCBpZCwgbmFtZSwgdHlwZSwga2luZF0pID0+CihmaWVsZCwgaSkgPT4KICB3cml0ZU91dHB1dChuYW1lLCBkYXRhKQpHZXRMaWJyYXJ5Rm9yKHN5bWJvbE5hbWUpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAAAAAA"
				],
				[
					1,
<<<<<<< HEAD
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAABGBgAALy8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBTb3VuZENsb3VkIGdyYWJiZXIKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vc291bmRjbG91ZC5jb20vCi8vIEB2ZXJzaW9uICAgICAgMjAyNS0wNC0xMgovLyBAZGVzY3JpcHRpb24gIEdldCB0cmFja3MgZnJvbSBzb3VuZGNsb3VkCi8vIEBhdXRob3IgICAgICAgUm9tYW4gU2VubiA8cm9tYW4ubC5zZW5uQGdtYWlsLmNvbT4KLy8gQG1hdGNoICAgICAgICBodHRwczovL3NvdW5kY2xvdWQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dy55b3V0dWJlLmNvbS8qCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9zb3VuZGNsb3VkLmNvbS9mYXZpY29uLmljbwovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKCiAgY29uc29sZS5sb2coJ1NvdW5kQ2xvdWQgZ3JhYmJlciBsb2FkZWQnKTsKCiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBlID0+IHsKICAgIHdpbmRvdy5hID0gR2V0VHJhY2tzKCk7CiAgfSk7Cn0pKCk7CgpPYmplY3QuYXNzaWduKHdpbmRvdywgewogIEdldFRyYWNrcwp9KTsKCmZ1bmN0aW9uIEdldFRyYWNrcygpIHsKICBjb25zdCByZSA9IC9eW146XSo6XC9cL1teL10qXC8vZzsKICBjb25zdCB5dCA9IC95b3V0dWJlLy50ZXN0KHdpbmRvdy5sb2NhdGlvbiArICcnKTsKCiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oCiAgICBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYS5zb3VuZFRpdGxlX190aXRsZSwgYS55dGQtdmlkZW8tcmVuZGVyZXInKV0KICAgICAgLm1hcCh5dCA/IGUgPT4gW2UuaHJlZiwgZS5pbm5lclRleHQsIGVdIDogZSA9PiBbZS5ocmVmLCBlLmlubmVyVGV4dF0pCiAgICAgIC5maWx0ZXIoeXQgPyAoW3VybCwgdGl0bGUsIGVdKSA9PiAvd2F0Y2gvLnRlc3QodXJsKSAmJiAhLzxkaXZccy8udGVzdChlLmlubmVySFRNTCkgOiAoW3VybCwgdGl0bGVdKSA9PiB1cmwgIT0gJycpCiAgICAgIC5tYXAoeXQgPyAoW3VybCwgLi4ucmVzdF0pID0+IFsnd2F0Y2g/dj0nICsgdXJsLnJlcGxhY2UoLy4qdj0vZywgJycpLnJlcGxhY2UoL1tcJiY/XS4qL2csICcnKSwgLi4ucmVzdF0gOiAoW3VybCwgLi4ucmVzdF0pID0+IFt1cmwucmVwbGFjZShyZSwgJycpLCAuLi5yZXN0XSkKICAgICAgLmZpbHRlcigoW3VybCwgdGl0bGVdKSA9PiB1cmwgIT0gJycgJiYgdGl0bGUgIT0gJycpLAogICAgewogICAgICB0b1N0cmluZyhwYWQgPSBmYWxzZSkgewogICAgICAgIGxldCBtYXhsZW4gPSAwOwogICAgICAgIGlmKHBhZCkgewogICAgICAgICAgY29uc3QgeyBsZW5ndGggfSA9IHRoaXM7CiAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHsKICAgICAgICAgICAgY29uc3QgbGVuID0gdGhpc1tpXVswXS5sZW5ndGg7CiAgICAgICAgICAgIGlmKGxlbiA+IG1heGxlbikgbWF4bGVuID0gbGVuOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5tYXAoKFt1cmwsIHRpdGxlXSkgPT4gdXJsLnBhZEVuZChtYXhsZW4pICsgJyAnICsgdGl0bGUpLmpvaW4oJ1xuJyk7CiAgICAgIH0KICAgIH0KICApOwp9CgAAAAAAAAAASQYAAAAAAAAAAAAAAAAAAAAAAABJBgAAAAAAAAAAAAAAAAAAAAAAAEkGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAARgYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "clang-ast.js",
			"settings":
			{
				"buffer_size": 82587,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
=======
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AgAAAHpkAAAAAAAAe2QAAAAAAAAAAAAAe2QAAAAAAAB/ZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6ZAAAAAAAAHpkAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					3,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"AwAAAHRkAAAAAAAAdWQAAAAAAAAAAAAAdWQAAAAAAAB5ZAAAAAAAAAAAAACAZAAAAAAAAIBkAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0ZAAAAAAAAHRkAAAAAAAAAAAAAAAA8L8"
=======
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					4,
					1,
<<<<<<< HEAD
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5ZAAAAAAAAHlkAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "os-helpers.js",
			"settings":
			{
				"buffer_size": 2475,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					1,
					"insert",
=======
					"outline_refresh",
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"AgAAAIcGAAAAAAAAiAYAAAAAAAAAAAAAiAYAAAAAAACIBgAAAAAAAB8AAAAgIGNvbnNvbGUubG9nKCdjaGlsZCcsIGNoaWxkKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcGAAAAAAAApgYAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAAIkGAAAAAAAAiQYAAAAAAACMAAAAICAvL2RlZmluZShjaGlsZCwgeyBnZXQgc3RkaW4oKSB7IHJldHVybiB0aGlzLnN0ZGlvWzBdOyB9LGdldCBzdGRvdXQoKSB7IHJldHVybiB0aGlzLnN0ZGlvWzFdOyB9LGdldCBzdGRlcnIoKSB7IHJldHVybiB0aGlzLnN0ZGlvWzJdOyB9IH0pOwqIBgAAAAAAAIgGAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkGAAAAAAAAFQcAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACnCQAAaW1wb3J0IHsgc3Bhd24gfSBmcm9tICdjaGlsZF9wcm9jZXNzJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMnOwppbXBvcnQgeyBjbG9zZSwgZXhlYywgcGlwZSwgd2FpdHBpZCwgV29ya2VyIH0gZnJvbSAnb3MnOwppbXBvcnQgeyBidG9hLCBkZWZpbmUsIHByb3BlcnRpZXMgfSBmcm9tICd1dGlsJzsKaW1wb3J0IHsgUmVwZWF0ZXIgfSBmcm9tICcuL2xpYi9yZXBlYXRlci9yZXBlYXRlci5qcyc7CmltcG9ydCB7IGZkb3BlbiwgcG9wZW4gfSBmcm9tICdzdGQnOwpleHBvcnQgeyBXTk9IQU5HIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7CgovKmV4cG9ydCBmdW5jdGlvbiBFeGVjVG9vbChjbWQsIC4uLmFyZ3MpIHsKICBsZXQgY2hpbGQgPSBTcGF3bihjbWQsIGFyZ3MsIHsgc3RkaW86IFswLCAncGlwZScsIDJdIH0pOwogIGxldCBbc3RkaW4sIHN0ZG91dCwgc3RkZXJyXSA9IGNoaWxkLnN0ZGlvOwogIGxldCByOwogIGxldCBiID0gbmV3IEFycmF5QnVmZmVyKDEwMjQpOwogIHIgPSBjaGlsZC53YWl0KCk7CgogIGxldCBscE51bWJlck9mQnl0ZXNSZWFkID0gbmV3IFVpbnQzMkFycmF5KDIpOwogIGxldCBzdHIgPSAnJzsKICBmb3IoOzspIHsKICAgIGxldCByID0gUmVhZEZpbGUoc3Rkb3V0LCBiLCAxMDI0LCBscE51bWJlck9mQnl0ZXNSZWFkLmJ1ZmZlciwgMCk7CiAgICBpZihscE51bWJlck9mQnl0ZXNSZWFkWzBdID4gMCkgewogICAgICBsZXQgZGF0YSA9IGIuc2xpY2UoMCwgbHBOdW1iZXJPZkJ5dGVzUmVhZFswXSk7CiAgICAgIHN0ciArPSB0b1N0cmluZyhkYXRhKTsKICAgICAgY29uc29sZS5sb2coJ3N0cicsIHN0cik7CiAgICB9CiAgICBpZihyID09IDApIGJyZWFrOwogIH0KCiAgcmV0dXJuIHN0cjsKICByZXR1cm4gcGFyc2VJbnQoc3RyKTsKfSovCgpleHBvcnQgZnVuY3Rpb24gRXhlY3V0ZSguLi5hcmdzKSB7CiAgbGV0IFtyZCwgc3Rkb3V0XSA9IHBpcGUoKTsKICBsZXQgcGlkID0gZXhlYyhhcmdzLCB7CiAgICBibG9jazogZmFsc2UsCiAgICBzdGRvdXQsCiAgICBzdGRlcnI6IHN0ZG91dAogIH0pOwogIGNsb3NlKHN0ZG91dCk7CgogIGxldCBbcmV0LCBzdGF0dXNdID0gd2FpdHBpZChwaWQsIDEpOwoKICBsZXQgb3V0ID0gZnMucmVhZEFsbFN5bmMocmQpOwogIGZzLmNsb3NlU3luYyhyZCk7CgogIGlmKHJldCAhPSBwaWQpIFtyZXQsIHN0YXR1c10gPSB3YWl0cGlkKHBpZCwgMCk7CgogIHJldHVybiBbKHN0YXR1cyAmIDB4ZmYwMCkgLyAyNTYsIG91dF07Cn0KCmV4cG9ydCBmdW5jdGlvbiBVUkxXb3JrZXIoc2NyaXB0KSB7CiAgY29uc3QgZGF0YVVSTCA9IHMgPT4gYGRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxgICsgYnRvYShzKS5yZXBsYWNlQWxsKCcrJywgJy0nKS5yZXBsYWNlQWxsKCcvJywgJ18nKS5yZXBsYWNlQWxsKCc9JywgJycpOwoKICBjb25zdCB1cmwgPSBkYXRhVVJMKHNjcmlwdCk7CiAgY29uc3QgdyA9IG5ldyBXb3JrZXIodXJsKTsKCiAgcmV0dXJuIGRlZmluZShuZXcgUmVwZWF0ZXIoKHB1c2gsIHN0b3ApID0+ICh3Lm9ubWVzc2FnZSA9IHB1c2gpKSwgewogICAgcG9zdE1lc3NhZ2U6IG1zZyA9PiB3LnBvc3RNZXNzYWdlKG1zZykKICB9KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIFNwYXduKC4uLmFyZ3MpIHsKICBjb25zdCBjaGlsZCA9IHNwYXduKC4uLmFyZ3MpOwoKICAgZGVmaW5lKAogICAgY2hpbGQsCiAgICBwcm9wZXJ0aWVzKAogICAgICB7CiAgICAgICAgc3RkaW4oKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5zdGRpb1swXSA+PSAwID8gZmRvcGVuKHRoaXMuc3RkaW9bMF0sICd3JykgOiBudWxsOwogICAgICAgIH0sCiAgICAgICAgc3Rkb3V0KCkgewogICAgICAgICAgcmV0dXJuIHRoaXMuc3RkaW9bMV0gPj0gMCA/IGZkb3Blbih0aGlzLnN0ZGlvWzFdLCAncicpIDogbnVsbDsKICAgICAgICB9LAogICAgICAgIHN0ZGVycigpIHsKICAgICAgICAgIHJldHVybiB0aGlzLnN0ZGlvWzJdID49IDAgPyBmZG9wZW4odGhpcy5zdGRpb1syXSwgJ3InKSA6IG51bGw7CiAgICAgICAgfQogICAgICB9LAogICAgICB7IG1lbW9pemU6IHRydWUgfQogICAgKQogICk7CgogIHJldHVybiBjaGlsZDsKfQoKZXhwb3J0IGZ1bmN0aW9uIFNoZWxsKGNtZCkgewogIGxldCBmID0gcG9wZW4oY21kLCAncicpOwogIGxldCBzID0gJyc7CgogIHdoaWxlKCFmLmVvZigpICYmICFmLmVycm9yKCkpIHMgKz0gZi5yZWFkQXNTdHJpbmcoKTsKCiAgZi5jbG9zZSgpOwogIHJldHVybiBzOwp9CgpleHBvcnQgZnVuY3Rpb24gRXhlY1Rvb2woY21kLCAuLi5hcmdzKSB7CiAgbGV0IGYgPSBwb3BlbihbY21kLCAuLi5hcmdzXS5qb2luKCcgJyksICdyJyk7CiAgbGV0IHMgPSAnJzsKCiAgZm9yKDs7KSB7CiAgICBsZXQgbGluZSA9IGYuZ2V0bGluZSgpOwoKICAgIGlmKGxpbmUgPT09IG51bGwpIGJyZWFrOwogICAgcyArPSBsaW5lICsgJ1xuJzsKICB9CgogIGYuY2xvc2UoKTsKICByZXR1cm4gczsKfQoAAAAAAAAAAKsJAAAAAAAAAAAAAAAAAAAAAAAAqwkAAAAAAAAAAAAAAAAAAAAAAACrCQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgGAAAAAAAAiAYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "clang-list.js",
			"settings":
			{
				"buffer_size": 8044,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "ast-shell.js",
			"settings":
			{
				"buffer_size": 44697,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1675,
					1,
					"cut",
					null,
					"AQAAAMKAAAAAAAAAwoAAAAAAAACoAAAAICAgIG1mbjogYHN0YXRpYyBKU1ZhbHVlXG5qc18ke2NpZH1fbWV0aG9kKEpTQ29udGV4dCogY3R4LCBKU1ZhbHVlQ29uc3QgdGhpc192YWwsIGludCBhcmdjLCBKU1ZhbHVlQ29uc3QgYXJndltdLCBpbnQgbWFnaWMpIHtcbiAgSlNWYWx1ZSByZXQgPSBKU19VTkRFRklORUQ7XG5gICsgaW5zdCwK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCgAAAAAAAAGqBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1676,
					2,
					"paste",
					null,
					"AgAAAMKAAAAAAAAAaoEAAAAAAAAAAAAAaoEAAAAAAAASggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCgAAAAAAAAMKAAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsAAAAAAAAAxAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
					"AQAAAAAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/geoadmin/Maps of Switzerland - Swiss Confederation - map.geo.admin.ch",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwAAAAAAAAA/wAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
					"AQAAAAAAAAAAAAAAlgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
					"BQAAAAAAAAAAAAAAlgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJYBAAAgIGZpbmRBbGxJbmRleGVzKGhheXN0YWNrLCBuZWVkbGUpCiAgZmluZEFsbEluZGV4ZXNSZXZlcnNlKGhheXN0YWNrLCBuZWVkbGUpCiAgY291bnRTdWJzdHJpbmcoaGF5c3RhY2ssIG5lZWRsZSkKICBwYXJzZURlZ01pblNlYyhzKQooW20sIC4uLnJlc3RdKSA9PgogIGRlZzogKHYsIHIpID0+Cih2LCByKSA9PgoodiwgcikgPT4KTjogKHYsIHIpID0+Clc6ICh2LCByKSA9PgpTOiAodiwgcikgPT4KRTogKHYsIHIpID0+CiAgcGFyc2VHUFNMb2NhdGlvbihzKQogIHBhcnNlRE1TKGRtc1N0cmluZykKICBkZWNEZWdGcm9tTWF0Y2gobSkKICBpblJhbmdlKHZhbHVlLCBhLCBiKQogIHdvcmRXcmFwKHN0ciwgd2lkdGgsIGRlbGltaXRlcikKICBkZWNvZGVIVE1MRW50aXRpZXModGV4dCkKKG1hdGNoLCBlbnRpdHkpID0+AAAAAAAAAACWAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlgEAACAgZmluZEFsbEluZGV4ZXMoaGF5c3RhY2ssIG5lZWRsZSkKICBmaW5kQWxsSW5kZXhlc1JldmVyc2UoaGF5c3RhY2ssIG5lZWRsZSkKICBjb3VudFN1YnN0cmluZyhoYXlzdGFjaywgbmVlZGxlKQogIHBhcnNlRGVnTWluU2VjKHMpCihbbSwgLi4ucmVzdF0pID0+CiAgZGVnOiAodiwgcikgPT4KKHYsIHIpID0+Cih2LCByKSA9PgpOOiAodiwgcikgPT4KVzogKHYsIHIpID0+ClM6ICh2LCByKSA9PgpFOiAodiwgcikgPT4KICBwYXJzZUdQU0xvY2F0aW9uKHMpCiAgcGFyc2VETVMoZG1zU3RyaW5nKQogIGRlY0RlZ0Zyb21NYXRjaChtKQogIGluUmFuZ2UodmFsdWUsIGEsIGIpCiAgd29yZFdyYXAoc3RyLCB3aWR0aCwgZGVsaW1pdGVyKQogIGRlY29kZUhUTUxFbnRpdGllcyh0ZXh0KQoobWF0Y2gsIGVudGl0eSkgPT4AAAAAAAAAAJYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/geoadmin/Maps of Switzerland - Swiss Confederation - map.geo.admin.ch",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
					"AQAAAAAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AgAAAG6BAAAAAAAAb4EAAAAAAAAAAAAAb4EAAAAAAABvgQAAAAAAAAEAAABt",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvgQAAAAAAAG6BAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAADIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"BAAAAI6BAAAAAAAAj4EAAAAAAAAAAAAAj4EAAAAAAACPgQAAAAAAAAYAAABtZXRob2SPgQAAAAAAAJCBAAAAAAAAAAAAAJCBAAAAAAAAkYEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOgQAAAAAAAJSBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1686,
					1,
					"left_delete",
					null,
					"AQAAAJCBAAAAAAAAkIEAAAAAAAABAAAAeg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRgQAAAAAAAJGBAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"BwAAAJCBAAAAAAAAkYEAAAAAAAAAAAAAkYEAAAAAAACSgQAAAAAAAAAAAACSgQAAAAAAAJOBAAAAAAAAAAAAAJOBAAAAAAAAlIEAAAAAAAAAAAAAlIEAAAAAAACVgQAAAAAAAAAAAACVgQAAAAAAAJaBAAAAAAAAAAAAAJaBAAAAAAAAl4EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQgQAAAAAAAJCBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1726,
					1,
					"paste",
					null,
					"AQAAAGF8AAAAAAAAg3wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhfAAAAAAAAGF8AAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
<<<<<<< HEAD
					"AgAAAHh8AAAAAAAAeXwAAAAAAAAAAAAAeXwAAAAAAAB5fAAAAAAAAAEAAAA9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4fAAAAAAAAHl8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAJYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/geoadmin/Maps of Switzerland - Swiss Confederation - map.geo.admin.ch",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"DAAAAK57AAAAAAAAr3sAAAAAAAAAAAAAr3sAAAAAAACwewAAAAAAAAAAAACwewAAAAAAALF7AAAAAAAAAAAAALF7AAAAAAAAsnsAAAAAAAAAAAAAsnsAAAAAAACzewAAAAAAAAAAAACzewAAAAAAALR7AAAAAAAAAAAAALR7AAAAAAAAtXsAAAAAAAAAAAAAtXsAAAAAAAC2ewAAAAAAAAAAAAC2ewAAAAAAALd7AAAAAAAAAAAAALd7AAAAAAAAuHsAAAAAAAAAAAAAuHsAAAAAAAC5ewAAAAAAAAAAAAC5ewAAAAAAALp7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuewAAAAAAAK57AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"AQAAALp7AAAAAAAAvHsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6ewAAAAAAALp7AAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"AQAAAOKMAAAAAAAA44wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADijAAAAAAAAOKMAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"DQAAAOOMAAAAAAAA5IwAAAAAAAAAAAAA5IwAAAAAAADljAAAAAAAAAAAAADljAAAAAAAAOaMAAAAAAAAAAAAAOaMAAAAAAAA54wAAAAAAAAAAAAA54wAAAAAAADojAAAAAAAAAAAAADojAAAAAAAAOmMAAAAAAAAAAAAAOmMAAAAAAAA6owAAAAAAAAAAAAA6owAAAAAAADrjAAAAAAAAAAAAADrjAAAAAAAAOyMAAAAAAAAAAAAAOyMAAAAAAAA7YwAAAAAAAAAAAAA7YwAAAAAAADujAAAAAAAAAAAAADujAAAAAAAAO+MAAAAAAAAAAAAAO+MAAAAAAAA8IwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjjAAAAAAAAOOMAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"BwAAAPuMAAAAAAAA/IwAAAAAAAAAAAAA/IwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAAGNAAAAAAAAAAAAAAGNAAAAAAAABY0AAAAAAAAAAAAA/IwAAAAAAAD8jAAAAAAAAAQAAAAgICAgAY0AAAAAAAACjQAAAAAAAAAAAAACjQAAAAAAAAONAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7jAAAAAAAAPuMAAAAAAAA////////738"
=======
					"AQAAAAAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"AQAAAAONAAAAAAAABY0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADjQAAAAAAAAONAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"DgAAAASNAAAAAAAABY0AAAAAAAAAAAAABY0AAAAAAAAGjQAAAAAAAAAAAAAGjQAAAAAAAAeNAAAAAAAAAAAAAAeNAAAAAAAACI0AAAAAAAAAAAAACI0AAAAAAAAJjQAAAAAAAAAAAAAJjQAAAAAAAAqNAAAAAAAAAAAAAAqNAAAAAAAAC40AAAAAAAAAAAAAC40AAAAAAAAMjQAAAAAAAAAAAAAMjQAAAAAAAA2NAAAAAAAAAAAAAA2NAAAAAAAADo0AAAAAAAAAAAAADo0AAAAAAAAPjQAAAAAAAAAAAAAPjQAAAAAAABCNAAAAAAAAAAAAABCNAAAAAAAAEY0AAAAAAAAAAAAAEY0AAAAAAAASjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEjQAAAAAAAASNAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"AQAAABKNAAAAAAAAFI0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASjQAAAAAAABKNAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"BgAAABONAAAAAAAAFI0AAAAAAAAAAAAAFI0AAAAAAAAVjQAAAAAAAAAAAAAVjQAAAAAAABaNAAAAAAAAAAAAABaNAAAAAAAAF40AAAAAAAAAAAAAF40AAAAAAAAYjQAAAAAAAAAAAAAYjQAAAAAAABmNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATjQAAAAAAABONAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/geoadmin/Maps of Switzerland - Swiss Confederation - map.geo.admin.ch",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"AQAAABqNAAAAAAAAG40AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAajQAAAAAAABqNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1810,
					1,
					"left_delete",
					null,
					"AQAAABqNAAAAAAAAGo0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbjQAAAAAAABuNAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"CwAAABuNAAAAAAAAHI0AAAAAAAAAAAAAHI0AAAAAAAAdjQAAAAAAAAAAAAAdjQAAAAAAAB6NAAAAAAAAAAAAAB6NAAAAAAAAH40AAAAAAAAAAAAAH40AAAAAAAAgjQAAAAAAAAAAAAAgjQAAAAAAACGNAAAAAAAAAAAAACGNAAAAAAAAIo0AAAAAAAAAAAAAIo0AAAAAAAAjjQAAAAAAAAAAAAAjjQAAAAAAACSNAAAAAAAAAAAAACSNAAAAAAAAJY0AAAAAAAAAAAAAJY0AAAAAAAAmjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbjQAAAAAAABuNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1813,
					2,
					"left_delete",
					null,
					"AgAAACWNAAAAAAAAJY0AAAAAAAABAAAAOySNAAAAAAAAJI0AAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmjQAAAAAAACaNAAAAAAAAAAAAAAAA8L8"
=======
					"AQAAAAAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
<<<<<<< HEAD
					"AQAAACSNAAAAAAAAJY0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkjQAAAAAAACSNAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"AgAAAASNAAAAAAAABY0AAAAAAAAAAAAABY0AAAAAAAAGjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEjQAAAAAAAASNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1832,
					2,
					"left_delete",
					null,
					"AgAAAAWNAAAAAAAABY0AAAAAAAABAAAAZASNAAAAAAAABI0AAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGjQAAAAAAAAaNAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"CgAAAASNAAAAAAAABY0AAAAAAAAAAAAABY0AAAAAAAAGjQAAAAAAAAAAAAAGjQAAAAAAAAeNAAAAAAAAAAAAAAeNAAAAAAAACI0AAAAAAAAAAAAACI0AAAAAAAAJjQAAAAAAAAAAAAAJjQAAAAAAAAqNAAAAAAAAAAAAAAqNAAAAAAAAC40AAAAAAAAAAAAAC40AAAAAAAAMjQAAAAAAAAAAAAAMjQAAAAAAAA2NAAAAAAAAAAAAAA2NAAAAAAAADo0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEjQAAAAAAAASNAAAAAAAAAAAAAAAA8L8"
				],
				[
					1845,
					1,
					"cut",
					null,
					"AQAAAP2MAAAAAAAA/YwAAAAAAAAzAAAAICAgIGlmKGZpZWxkLmFzdC5zdG9yYWdlQ2xhc3M9PSdzdGF0aWMnKSBjb250aW51ZTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9jAAAAAAAADCNAAAAAAAAAAAAAAAAAAA"
				],
				[
					1846,
					2,
					"paste",
					null,
					"AgAAAP2MAAAAAAAAMI0AAAAAAAAAAAAAMI0AAAAAAABjjQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9jAAAAAAAAP2MAAAAAAAAAAAAAAAA8L8"
				],
				[
					1849,
					1,
					"left_delete",
					null,
					"AQAAAASNAAAAAAAABI0AAAAAAAAKAAAAZmllbGQuYXN0Lg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEjQAAAAAAAA6NAAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AQAAAHN8AAAAAAAAdHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzfAAAAAAAAHN8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"AwAAAJJ8AAAAAAAAk3wAAAAAAAAAAAAAk3wAAAAAAACUfAAAAAAAAAAAAACUfAAAAAAAAJV8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSfAAAAAAAAJJ8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAMgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
<<<<<<< HEAD
					"DwAAAJV8AAAAAAAAlnwAAAAAAAAAAAAAlnwAAAAAAACXfAAAAAAAAAAAAACXfAAAAAAAAJh8AAAAAAAAAAAAAJh8AAAAAAAAmXwAAAAAAAAAAAAAmXwAAAAAAACafAAAAAAAAAAAAACafAAAAAAAAJt8AAAAAAAAAAAAAJt8AAAAAAAAnHwAAAAAAAAAAAAAnHwAAAAAAACdfAAAAAAAAAAAAACdfAAAAAAAAJ58AAAAAAAAAAAAAJ58AAAAAAAAn3wAAAAAAAAAAAAAn3wAAAAAAACgfAAAAAAAAAAAAACgfAAAAAAAAKF8AAAAAAAAAAAAAKF8AAAAAAAAonwAAAAAAAAAAAAAonwAAAAAAACjfAAAAAAAAAAAAACjfAAAAAAAAKR8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVfAAAAAAAAJV8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"AgAAAKR8AAAAAAAApXwAAAAAAAAAAAAApXwAAAAAAACmfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkfAAAAAAAAKR8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
<<<<<<< HEAD
					"AQAAAKZ8AAAAAAAAqHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmfAAAAAAAAKZ8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"BwAAAKd8AAAAAAAAqHwAAAAAAAAAAAAAqHwAAAAAAACpfAAAAAAAAAAAAACpfAAAAAAAAKp8AAAAAAAAAAAAAKp8AAAAAAAAq3wAAAAAAAAAAAAAq3wAAAAAAACsfAAAAAAAAAAAAACsfAAAAAAAAK18AAAAAAAAAAAAAK18AAAAAAAArnwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnfAAAAAAAAKd8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1868,
					1,
					"left_delete",
					null,
					"AQAAAK18AAAAAAAArXwAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACufAAAAAAAAK58AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAyAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"AQAAAK98AAAAAAAAsHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvfAAAAAAAAK98AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AQAAAPZ8AAAAAAAA93wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2fAAAAAAAAPZ8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1883,
					1,
					"left_delete",
					null,
					"AQAAAPZ8AAAAAAAA9nwAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3fAAAAAAAAPd8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-helpers.js",
						"symkeys":
						[
							[
								570,
								609
							],
							[
								792,
								807
							],
							[
								946,
								950
							],
							[
								966,
								997
							],
							[
								1169,
								1179
							],
							[
								1218,
								1234
							],
							[
								1750,
								1777
							],
							[
								2001,
								2013
							],
							[
								2037,
								2056
							],
							[
								2131,
								2148
							],
							[
								2461,
								2471
							],
							[
								2518,
								2528
							],
							[
								2577,
								2586
							],
							[
								2629,
								2639
							],
							[
								2670,
								2680
							],
							[
								2736,
								2739
							],
							[
								2772,
								2784
							],
							[
								2803,
								2806
							],
							[
								2822,
								2844
							],
							[
								3259,
								3272
							],
							[
								3316,
								3330
							],
							[
								3407,
								3426
							],
							[
								3544,
								3551
							],
							[
								3604,
								3616
							],
							[
								3642,
								3649
							],
							[
								3680,
								3698
							],
							[
								3863,
								3870
							],
							[
								3971,
								4003
							],
							[
								4309,
								4316
							],
							[
								4454,
								4466
							],
							[
								4545,
								4558
							],
							[
								4797,
								4813
							],
							[
								4974,
								4979
							],
							[
								5012,
								5024
							],
							[
								5045,
								5050
							],
							[
								5066,
								5146
							],
							[
								5764,
								5777
							],
							[
								5823,
								5837
							],
							[
								5911,
								5925
							],
							[
								6013,
								6026
							],
							[
								6136,
								6168
							]
						],
						"symlist":
						[
							" function TransformCoordinates(...args)",
							"(acc, coord) =>",
							"n =>",
							" function ParseCoordinates(str)",
							"Coordinate",
							"static from(arg)",
							"constructor(lon, lat, type)",
							"get length()",
							"convertTo(destType)",
							"distanceTo(other)",
							"toString()",
							"toLonLat()",
							"toPoint()",
							"Coordinate",
							"Coordinate",
							"Pin",
							"(...args) =>",
							"Pin",
							"static create(...args)",
							"get feature()",
							"get position()",
							"set position(value)",
							"Markers",
							"(...args) =>",
							"Markers",
							"static create(map)",
							"Markers",
							"get: (target, prop, receiver) =>",
							"at(pos)",
							"get length()",
							"add(...items)",
							"remove(...items)",
							"Popup",
							"(...args) =>",
							"Popup",
							"static create(content, offset = [0, 0], position, positioning = 'center-center')",
							"get overlay()",
							"get position()",
							"get position()",
							"OpenlayersMap",
							"static create(target = 'mapdiv')"
						]
					},
<<<<<<< HEAD
					"CwAAAPZ8AAAAAAAA93wAAAAAAAAAAAAA93wAAAAAAAD4fAAAAAAAAAAAAAD4fAAAAAAAAPl8AAAAAAAAAAAAAPl8AAAAAAAA+nwAAAAAAAAAAAAA+nwAAAAAAAD7fAAAAAAAAAAAAAD7fAAAAAAAAPx8AAAAAAAAAAAAAPx8AAAAAAAA/XwAAAAAAAAAAAAA/XwAAAAAAAD+fAAAAAAAAAAAAAD+fAAAAAAAAP98AAAAAAAAAAAAAP98AAAAAAAAAH0AAAAAAAAAAAAAAH0AAAAAAAABfQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2fAAAAAAAAPZ8AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAMgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/string-helpers.js",
						"symkeys":
						[
							[
								6,
								49
							],
							[
								172,
								222
							],
							[
								345,
								387
							],
							[
								537,
								564
							],
							[
								631,
								648
							],
							[
								827,
								841
							],
							[
								863,
								873
							],
							[
								900,
								910
							],
							[
								933,
								945
							],
							[
								957,
								969
							],
							[
								982,
								994
							],
							[
								1007,
								1019
							],
							[
								1135,
								1164
							],
							[
								1258,
								1287
							],
							[
								3012,
								3039
							],
							[
								3758,
								3787
							],
							[
								3834,
								3875
							],
							[
								4204,
								4238
							],
							[
								4467,
								4486
							]
						],
						"symlist":
						[
							" function* findAllIndexes(haystack, needle)",
							" function* findAllIndexesReverse(haystack, needle)",
							" function countSubstring(haystack, needle)",
							" function parseDegMinSec(s)",
							"([m, ...rest]) =>",
							"deg: (v, r) =>",
							" (v, r) =>",
							" (v, r) =>",
							"N: (v, r) =>",
							"W: (v, r) =>",
							"S: (v, r) =>",
							"E: (v, r) =>",
							" function parseGPSLocation(s)",
							" function parseDMS(dmsString)",
							"function decDegFromMatch(m)",
							"function inRange(value, a, b)",
							" function wordWrap(str, width, delimiter)",
							" function decodeHTMLEntities(text)",
							" (match, entity) =>"
						]
					},
<<<<<<< HEAD
					"DgAAAAF9AAAAAAAAAn0AAAAAAAAAAAAAAn0AAAAAAAADfQAAAAAAAAAAAAADfQAAAAAAAAR9AAAAAAAAAAAAAAR9AAAAAAAABX0AAAAAAAAAAAAABX0AAAAAAAAGfQAAAAAAAAAAAAAGfQAAAAAAAAd9AAAAAAAAAAAAAAd9AAAAAAAACH0AAAAAAAAAAAAACH0AAAAAAAAJfQAAAAAAAAAAAAAJfQAAAAAAAAp9AAAAAAAAAAAAAAp9AAAAAAAAC30AAAAAAAAAAAAAC30AAAAAAAAMfQAAAAAAAAAAAAAMfQAAAAAAAA19AAAAAAAAAAAAAA19AAAAAAAADn0AAAAAAAAAAAAADn0AAAAAAAAPfQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABfQAAAAAAAAF9AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADIAgAAVHJhbnNmb3JtQ29vcmRpbmF0ZXMoLi4uYXJncykKKGFjYywgY29vcmQpID0+CiAgbiA9PgpQYXJzZUNvb3JkaW5hdGVzKHN0cikKQ29vcmRpbmF0ZQogIHN0YXRpYyBmcm9tKGFyZykKICBjb25zdHJ1Y3Rvcihsb24sIGxhdCwgdHlwZSkKICBnZXQgbGVuZ3RoKCkKICBjb252ZXJ0VG8oZGVzdFR5cGUpCiAgZGlzdGFuY2VUbyhvdGhlcikKICB0b1N0cmluZygpCiAgdG9Mb25MYXQoKQogIHRvUG9pbnQoKQpDb29yZGluYXRlCkNvb3JkaW5hdGUKUGluCiguLi5hcmdzKSA9PgpQaW4KICBzdGF0aWMgY3JlYXRlKC4uLmFyZ3MpCiAgZ2V0IGZlYXR1cmUoKQogIGdldCBwb3NpdGlvbigpCiAgc2V0IHBvc2l0aW9uKHZhbHVlKQpNYXJrZXJzCiguLi5hcmdzKSA9PgpNYXJrZXJzCiAgc3RhdGljIGNyZWF0ZShtYXApCk1hcmtlcnMKICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PgogIGF0KHBvcykKICBnZXQgbGVuZ3RoKCkKICBhZGQoLi4uaXRlbXMpCiAgcmVtb3ZlKC4uLml0ZW1zKQpQb3B1cAooLi4uYXJncykgPT4KUG9wdXAKICBzdGF0aWMgY3JlYXRlKGNvbnRlbnQsIG9mZnNldCA9IFswLCAwXSwgcG9zaXRpb24sIHBvc2l0aW9uaW5nID0gJ2NlbnRlci1jZW50ZXInKQogIGdldCBvdmVybGF5KCkKICBnZXQgcG9zaXRpb24oKQogIGdldCBwb3NpdGlvbigpCk9wZW5sYXllcnNNYXAKICBzdGF0aWMgY3JlYXRlKHRhcmdldCA9ICdtYXBkaXYnKQAAAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"AwAAAA99AAAAAAAAEH0AAAAAAAAAAAAAEH0AAAAAAAARfQAAAAAAAAAAAAARfQAAAAAAABJ9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPfQAAAAAAAA99AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWAQAAICBmaW5kQWxsSW5kZXhlcyhoYXlzdGFjaywgbmVlZGxlKQogIGZpbmRBbGxJbmRleGVzUmV2ZXJzZShoYXlzdGFjaywgbmVlZGxlKQogIGNvdW50U3Vic3RyaW5nKGhheXN0YWNrLCBuZWVkbGUpCiAgcGFyc2VEZWdNaW5TZWMocykKKFttLCAuLi5yZXN0XSkgPT4KICBkZWc6ICh2LCByKSA9PgoodiwgcikgPT4KKHYsIHIpID0+Ck46ICh2LCByKSA9PgpXOiAodiwgcikgPT4KUzogKHYsIHIpID0+CkU6ICh2LCByKSA9PgogIHBhcnNlR1BTTG9jYXRpb24ocykKICBwYXJzZURNUyhkbXNTdHJpbmcpCiAgZGVjRGVnRnJvbU1hdGNoKG0pCiAgaW5SYW5nZSh2YWx1ZSwgYSwgYikKICB3b3JkV3JhcChzdHIsIHdpZHRoLCBkZWxpbWl0ZXIpCiAgZGVjb2RlSFRNTEVudGl0aWVzKHRleHQpCihtYXRjaCwgZW50aXR5KSA9PgAAAAAAAAAAywAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AQAAABJ9AAAAAAAAE30AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASfQAAAAAAABJ9AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ol-map.js",
						"symkeys":
						[
							[
								2521,
								2550
							],
							[
								2649,
								2690
							],
							[
								2895,
								2924
							],
							[
								3309,
								3330
							],
							[
								3398,
								3418
							],
							[
								3804,
								3808
							],
							[
								4444,
								4456
							],
							[
								4830,
								4851
							],
							[
								5542,
								5547
							],
							[
								5596,
								5606
							],
							[
								5844,
								5858
							],
							[
								6546,
								6563
							],
							[
								6648,
								6652
							],
							[
								6686,
								6690
							]
						],
						"symlist":
						[
							"function SetFenceColor(color)",
							"function FlyTo(location, done = () => {})",
							" function callback(complete)",
							"function Get(feature)",
							"function CreateMap()",
							"a =>",
							" function(e)",
							"([name, geometry]) =>",
							"get()",
							"set(value)",
							" function(evt)",
							"async response =>",
							"u =>",
							"u =>"
						]
					},
<<<<<<< HEAD
					"AQAAADJ9AAAAAAAAM30AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyfQAAAAAAADJ9AAAAAAAAAAAAAAAA8L8"
				],
				[
					1894,
					1,
					"cut",
					null,
					"AQAAAPZ8AAAAAAAA9nwAAAAAAAA8AAAAKG4uc3RvcmFnZUNsYXNzPT0nc3RhdGljJyB8fCBuLmFzdC5zdG9yYWdlQ2xhc3MgPT0gJ3N0YXRpYycp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2fAAAAAAAADJ9AAAAAAAAAAAAAAAA8L8"
				],
				[
					1895,
					1,
					"paste",
					null,
					"AQAAAPZ8AAAAAAAAMn0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2fAAAAAAAAPZ8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1898,
					1,
					"paste",
					null,
					"AgAAAPB9AAAAAAAALH4AAAAAAAAAAAAALH4AAAAAAAAsfgAAAAAAAB4AAABuLmFzdC5zdG9yYWdlQ2xhc3MgPT0gJ3N0YXRpYyc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwfQAAAAAAAA5+AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAMsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/map.html",
						"symkeys":
						[
							[
								721,
								730
							],
							[
								746,
								752
							],
							[
								783,
								790
							],
							[
								960,
								968
							],
							[
								1739,
								1745
							]
						],
						"symlist":
						[
							"drop-area",
							"mapdiv",
							"toolbar",
							"timeline",
							"preact"
						]
					},
<<<<<<< HEAD
					"AQAAAIF9AAAAAAAAgn0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBfQAAAAAAAIF9AAAAAAAAAAAAAAAA8L8"
				],
				[
					1907,
					1,
					"paste",
					null,
					"AQAAAIJ9AAAAAAAAvn0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCfQAAAAAAAIJ9AAAAAAAAAAAAAAAA8L8"
				],
				[
					1910,
					1,
					"right_delete",
					null,
					"AQAAAL59AAAAAAAAvn0AAAAAAAAeAAAAbi5hc3Quc3RvcmFnZUNsYXNzICE9ICdzdGF0aWMn",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+fQAAAAAAANx9AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLAAAAU2V0RmVuY2VDb2xvcihjb2xvcikKRmx5VG8obG9jYXRpb24sIGRvbmUgPSAoKSA9PiB7fSkKICBjYWxsYmFjayhjb21wbGV0ZSkKR2V0KGZlYXR1cmUpCkNyZWF0ZU1hcCgpCiAgYSA9PgpmdW5jdGlvbihlKQooW25hbWUsIGdlb21ldHJ5XSkgPT4KICBnZXQoKQogIHNldCh2YWx1ZSkKZnVuY3Rpb24oZXZ0KQogIHJlc3BvbnNlID0+CiAgdSA9PgogIHUgPT4AAAAAAAAAADIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
<<<<<<< HEAD
					"AQAAAHN8AAAAAAAAdHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzfAAAAAAAAHN8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1914,
					1,
					"paste",
					null,
					"AQAAAHR8AAAAAAAAsHwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0fAAAAAAAAHR8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1918,
					1,
					"cut",
					null,
					"AQAAALB8AAAAAAAAsHwAAAAAAAA8AAAAKG4uYXN0LnN0b3JhZ2VDbGFzcyAhPSAnc3RhdGljJyAmJiBuLnN0b3JhZ2VDbGFzcyE9J3N0YXRpYycp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwfAAAAAAAAOx8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1927,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/ewAAAAAAAP97AAAAAAAAAAAAAAAA8L8"
=======
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAICBkcm9wLWFyZWEKICBtYXBkaXYKICB0b29sYmFyCiAgdGltZWxpbmUKICBwcmVhY3QAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"doxy",
				"DoxyDoxygen: Comment All"
			],
			[
				"",
				":$ - EOF"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"format",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"ou",
				"Browse Mode: Outline (Right)"
			],
			[
				"instga",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/janos/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/string-helpers.js",
		"/home/roman/Projects/plot-cv/ol-helpers.js",
		"/home/roman/Projects/plot-cv/ol-map.js",
		"/home/roman/Projects/geoadmin/Maps of Switzerland - Swiss Confederation - map.geo.admin.ch",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/mozdev.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/compileCommand.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/cli-helpers.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws.c",
		"/home/roman/Projects/plot-cv/lws.c",
		"/home/roman/Projects/plot-cv/compile_commands.js",
		"/home/roman/Projects/plot-cv/quickjs/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/net/webSocketStream.js",
		"/home/roman/Projects/plot-cv/lib/container/weakStackFrame.js",
		"/home/roman/Projects/plot-cv/quickjs2/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/soundcloud-tracks.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/lib/deep.js",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/janos/Projects/plot-cv/out.gz",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/libwebsockets/include/libwebsockets/lws-context-vhost.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/test.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-lws/lws-context.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/web-platform-tests-streams/shared-storage/resources/util.sub.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/io.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/js-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/stream-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stream.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/async-closure.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-textcode.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/inotify.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendObject.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/js-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/defines.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/async-closure.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fsPromises.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/web-platform-tests-streams/editing/crashtests/make-editable-div-inline-and-set-contenteditable-of-input-to-false.html",
		"/home/roman/Projects/plot-cv/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-magic.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pgsql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-list.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-serial.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-directory.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/inet_pton.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/testharnessreport.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/web-platform-tests-streams/streams/readable-streams/async-iterator.any.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_streams.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_stream.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/testharness.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/strverscmp.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/queue.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/memmem.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/getdents.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/debug.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_pgsql.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 138.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.jsx,*.cmake,CMakeLists.txt,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Pin.create",
			"cities",
			"LWS_WRITE_",
			"\\bsources\\b",
			"sources =",
			"Loading sources",
			"sources =",
			"Loading sources",
			"Table\\b",
			"CaseStmt",
			"SwitchStmt",
			"Switch",
			"MemberExpr",
			"'Member",
			"slice",
			"ArgumentOpt",
			"ArgumentOPt",
			"}}});\n",
			"transformPath",
			"assign",
			"PathTransformer",
			"pathTransformer",
			"relative",
			"pathTransformer",
			"absolute\\b",
			"absolute",
			"flags",
			"sources",
			"sources =",
			"sources",
			"ArgumentLen",
			"wrapNumericArgument",
			"argumentType\\(",
			"ArgumentOpt",
			"isystem",
			"absolute\\b",
			"default\\(",
			"ArgumentType",
			"argumentType",
			"ArgumentIs",
			"includes",
			"get sources",
			"sources",
			"\\babsolute\\b",
			"absolute\\b",
			"relative",
			"basename",
			"inspec",
			"inspect",
			"abbrevia",
			"inspect",
			"add_library.*imported",
			"\\bget[A-Za-z_]*_property",
			"_property",
			"ExternalProject_",
			"ExternalProject_Get_Property",
			"IntegerLiteral\\(",
			"IntegerLiteral",
			"deep\\.",
			"try_run",
			"run\\b",
			"GetClass",
			"ast2np",
			"NamespaceOf",
			"GetClass",
			"DeepSelect",
			"nameOrIdPred",
			"GetByName",
			"nameOrIdPred",
			"DeepFind",
			"members",
			"\\bmembers\\b",
			"get members",
			"getType",
			"\\bimport\\b[^\\n]*\\bTree(Iterator|Walker)\\b[^\\n]*\\bfrom\\b",
			"\\bTree(Iterator|Walker)\\b.*\\bfrom\\b",
			"Tree(Iterator|Walker)",
			"isMap",
			"}\n",
			"WriteJS",
			"ReadJSON",
			"WriteJS",
			"ReadJSON",
			"class Location",
			"Location",
			"Location\\b",
			"TYPE_BIG_INT",
			"fs\\.",
			"fs'",
			"Symbol.for",
			"Newer",
			"remove",
			"fs\\.",
			"Writing",
			"base =",
			"unithist",
			"'FunctionDecl",
			"No such",
			"'Type.cons",
			"GetClass",
			"getClass",
			"nameOrIdPred",
			"Deep(Find|Select)\\(",
			"Deep(Find|Select).*name ==",
			"DeepFind.*name ==",
			"DeepFind",
			"decl\\(",
			"\n        ",
			"EnumDecl",
			"class EnumDecl",
			"EnumDecl",
			"ions.get",
			"ions.set",
			"GetClass",
			"getClass",
			"'Type.cons",
			"completeDef",
			"MakeId",
			"cid =",
			"GetByName",
			"GetClass",
			"getClass",
			"GetByName",
			"GetBasese",
			"GetByName",
			"Object.assign",
			"mapFunction\\b",
			"function Get"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Table",
			"DeepGet",
			"DeepPathOf",
			"export function \\1(\\3) {",
			"DeepFind",
			"= globalThis['\\$'].data",
			"= globalThis['$'].data",
			"namespaceOf"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
<<<<<<< HEAD
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3392,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/janos/Projects/plot-cv/ast-shell.js",
							"function_name_status_row": 0,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1745072040.63,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
=======
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 9,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1753105541.47,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
<<<<<<< HEAD
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "ast-shell.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44697,
						"regions":
						{
						},
						"selection":
						[
							[
								31743,
								31743
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1141,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1746399980.57,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19224.0,
						"zoom_level": 1.0
					},
=======
>>>>>>> fb26ad6582189262fc5ca31ccf5a1a019fa7b40d
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.764828128058,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.coffeecompile_output":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"string-help",
				"string-helpers.js"
			],
			[
				"ol-help",
				"ol-helpers.js"
			],
			[
				"ol-map",
				"ol-map.js"
			],
			[
				"map.html",
				"map.html"
			],
			[
				"lws.c",
				"quickjs/qjs-lws/lws.c"
			],
			[
				"cli-help",
				"cli-helpers.js"
			],
			[
				"clang-",
				"clang-list.js"
			],
			[
				"quickj",
				"quickjs/cmake/QuickJSModule.cmake"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"compileC",
				"lib/compileCommand.js"
			],
			[
				"compil",
				"compile_commands.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"mozdev",
				"mozdev.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"clang-ast",
				"clang-ast.js"
			],
			[
				"",
				"compile_commands.js"
			],
			[
				"compileCommand",
				"lib/compileCommand.js"
			],
			[
				"command",
				"compile_commands.js"
			],
			[
				"lib/util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"deep.js",
				"lib/deep.js"
			],
			[
				"lib/deep",
				"lib/deep.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"os-help",
				"os-helpers.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"sound",
				"soundcloud-tracks.js"
			],
			[
				"out",
				"out.gz"
			],
			[
				"lws-context-v",
				"libwebsockets/include/libwebsockets/lws-context-vhost.h"
			],
			[
				"buffer-ut",
				"src/buffer-utils.c"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"quickjs-inspec",
				"quickjs-inspect.c"
			],
			[
				"io.js",
				"lib/io.js"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"util.sj",
				"web-platform-tests-streams/shared-storage/resources/util.sub.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"js-utils.c",
				"src/js-utils.c"
			],
			[
				"quickjs-strea",
				"quickjs-stream.h"
			],
			[
				"quickjs-st",
				"quickjs-stream.c"
			],
			[
				"quickjs-stream.h",
				"quickjs-stream.h"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"ringbuffer.c",
				"src/ringbuffer.c"
			],
			[
				"ringbuf",
				"include/ringbuffer.h"
			],
			[
				"ringbuffer.h",
				"include/ringbuffer.h"
			],
			[
				"textcode.c",
				"quickjs-textcode.c"
			],
			[
				"quickjs-text",
				"quickjs-textcode.c"
			],
			[
				"stream.c",
				"quickjs-stream.c"
			],
			[
				"quickjs-stre",
				"quickjs-stream.c"
			],
			[
				"textcode",
				"quickjs-textcode.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"function",
				"cmake/functions.cmake"
			],
			[
				"CMakeLIsts",
				"CMakeLists.txt"
			],
			[
				"quickjs-mis",
				"quickjs-misc.c"
			],
			[
				"fsProm",
				"lib/fsPromises.js"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"CMakeLists",
				"CMakeLists.txt"
			],
			[
				"cmakelsits",
				"web-platform-tests-streams/editing/crashtests/make-editable-div-inline-and-set-contenteditable-of-input-to-false.html"
			],
			[
				"cmakeLists",
				"CMakeLists.txt"
			],
			[
				"js-util",
				"src/js-utils.c"
			],
			[
				"js-ut",
				"include/js-utils.h"
			],
			[
				"buffer-",
				"include/buffer-utils.h"
			],
			[
				"js-utils",
				"include/js-utils.h"
			],
			[
				"quickjs-sys",
				"quickjs-syscallerror.c"
			],
			[
				"js-u",
				"include/js-utils.h"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"async-cl",
				"src/async-closure.c"
			],
			[
				"utilsc",
				"src/utils.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.h"
			],
			[
				"child",
				"src/child-process.c"
			],
			[
				"quickjs-child",
				"quickjs-child-process.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-repea",
				"quickjs-repeater.c"
			],
			[
				"quickjs-repe",
				"quickjs-repeater.c"
			],
			[
				"quickjs-repeater",
				"quickjs-repeater.c"
			],
			[
				"test_repe",
				"tests/test_repeater.js"
			],
			[
				"quickjs-mysq",
				"quickjs-mysql.c"
			],
			[
				"quickjs-ser",
				"quickjs-serial.c"
			],
			[
				"quickjs-stream",
				"quickjs-stream.h"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"quickjs-list",
				"quickjs-list.c"
			],
			[
				"quickjs-list.c",
				"quickjs-list.c"
			],
			[
				"testhar",
				"lib/testharness.js"
			],
			[
				"qjsm",
				"src/qjsm.c"
			],
			[
				"test_repea",
				"tests/test_repeater.js"
			],
			[
				"test_socket",
				"tests/test_sockets.js"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"textcod",
				"quickjs-textcode.c"
			],
			[
				"test_text",
				"tests/test_textcode.js"
			],
			[
				"stack.js",
				"lib/stack.js"
			],
			[
				"ebnf",
				"lib/parser/ebnf.js"
			],
			[
				"arser.",
				"lib/parser.js"
			],
			[
				"bnf.",
				"lib/lexer/bnf.js"
			],
			[
				"quickjs-my",
				"quickjs-mysql.c"
			],
			[
				"quickjs-blob",
				"quickjs-blob.c"
			],
			[
				"quickjs-bl",
				"quickjs-blob.c"
			],
			[
				"queue.c",
				"src/queue.c"
			],
			[
				"queue.h",
				"include/queue.h"
			],
			[
				"mysql",
				"tests/test_mysql.js"
			],
			[
				"child-",
				"src/child-process.c"
			],
			[
				"quickjs-chil",
				"quickjs-child-process.c"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"xpath.js",
				"lib/xpath.js"
			],
			[
				"pointer",
				"lib/pointer.js"
			],
			[
				"predicate.c",
				"src/predicate.c"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"char-ut",
				"include/char-utils.h"
			],
			[
				"quickjs-in",
				"quickjs-inspect.c"
			],
			[
				"css3",
				"lib/css3-selectors.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"quickjs-lexe",
				"quickjs-lexer.c"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"resolve-im",
				"resolve-imports.js"
			],
			[
				"pointer.js",
				"lib/pointer.js"
			],
			[
				"extendArra",
				"lib/extendArray.js"
			],
			[
				"list-ex",
				"list-exports.js"
			],
			[
				"xml-shell",
				"xml-shell.js"
			],
			[
				"cmake/",
				"cmake/QuickJSModule.cmake"
			],
			[
				"quickjs-arc",
				"quickjs-archive.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1059.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 253.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
